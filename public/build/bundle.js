
(function(l, r) { if (!l || l.getElementById('livereloadscript')) return; r = l.createElement('script'); r.async = 1; r.src = '//' + (self.location.host || 'localhost').split(':')[0] + ':35729/livereload.js?snipver=1'; r.id = 'livereloadscript'; l.getElementsByTagName('head')[0].appendChild(r) })(self.document);
var app = (function () {
    'use strict';

    function noop() { }
    const identity = x => x;
    function assign(tar, src) {
        // @ts-ignore
        for (const k in src)
            tar[k] = src[k];
        return tar;
    }
    function add_location(element, file, line, column, char) {
        element.__svelte_meta = {
            loc: { file, line, column, char }
        };
    }
    function run(fn) {
        return fn();
    }
    function blank_object() {
        return Object.create(null);
    }
    function run_all(fns) {
        fns.forEach(run);
    }
    function is_function(thing) {
        return typeof thing === 'function';
    }
    function safe_not_equal(a, b) {
        return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');
    }
    function is_empty(obj) {
        return Object.keys(obj).length === 0;
    }
    function validate_store(store, name) {
        if (store != null && typeof store.subscribe !== 'function') {
            throw new Error(`'${name}' is not a store with a 'subscribe' method`);
        }
    }
    function subscribe(store, ...callbacks) {
        if (store == null) {
            return noop;
        }
        const unsub = store.subscribe(...callbacks);
        return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;
    }
    function component_subscribe(component, store, callback) {
        component.$$.on_destroy.push(subscribe(store, callback));
    }
    function null_to_empty(value) {
        return value == null ? '' : value;
    }
    function split_css_unit(value) {
        const split = typeof value === 'string' && value.match(/^\s*(-?[\d.]+)([^\s]*)\s*$/);
        return split ? [parseFloat(split[1]), split[2] || 'px'] : [value, 'px'];
    }

    const is_client = typeof window !== 'undefined';
    let now = is_client
        ? () => window.performance.now()
        : () => Date.now();
    let raf = is_client ? cb => requestAnimationFrame(cb) : noop;

    const tasks = new Set();
    function run_tasks(now) {
        tasks.forEach(task => {
            if (!task.c(now)) {
                tasks.delete(task);
                task.f();
            }
        });
        if (tasks.size !== 0)
            raf(run_tasks);
    }
    /**
     * Creates a new task that runs on each raf frame
     * until it returns a falsy value or is aborted
     */
    function loop(callback) {
        let task;
        if (tasks.size === 0)
            raf(run_tasks);
        return {
            promise: new Promise(fulfill => {
                tasks.add(task = { c: callback, f: fulfill });
            }),
            abort() {
                tasks.delete(task);
            }
        };
    }

    const globals = (typeof window !== 'undefined'
        ? window
        : typeof globalThis !== 'undefined'
            ? globalThis
            : global);
    function append(target, node) {
        target.appendChild(node);
    }
    function get_root_for_style(node) {
        if (!node)
            return document;
        const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;
        if (root && root.host) {
            return root;
        }
        return node.ownerDocument;
    }
    function append_empty_stylesheet(node) {
        const style_element = element('style');
        append_stylesheet(get_root_for_style(node), style_element);
        return style_element.sheet;
    }
    function append_stylesheet(node, style) {
        append(node.head || node, style);
        return style.sheet;
    }
    function insert(target, node, anchor) {
        target.insertBefore(node, anchor || null);
    }
    function detach(node) {
        if (node.parentNode) {
            node.parentNode.removeChild(node);
        }
    }
    function destroy_each(iterations, detaching) {
        for (let i = 0; i < iterations.length; i += 1) {
            if (iterations[i])
                iterations[i].d(detaching);
        }
    }
    function element(name) {
        return document.createElement(name);
    }
    function svg_element(name) {
        return document.createElementNS('http://www.w3.org/2000/svg', name);
    }
    function text(data) {
        return document.createTextNode(data);
    }
    function space() {
        return text(' ');
    }
    function empty() {
        return text('');
    }
    function listen(node, event, handler, options) {
        node.addEventListener(event, handler, options);
        return () => node.removeEventListener(event, handler, options);
    }
    function attr(node, attribute, value) {
        if (value == null)
            node.removeAttribute(attribute);
        else if (node.getAttribute(attribute) !== value)
            node.setAttribute(attribute, value);
    }
    function children(element) {
        return Array.from(element.childNodes);
    }
    function set_input_value(input, value) {
        input.value = value == null ? '' : value;
    }
    function set_style(node, key, value, important) {
        if (value == null) {
            node.style.removeProperty(key);
        }
        else {
            node.style.setProperty(key, value, important ? 'important' : '');
        }
    }
    function select_option(select, value, mounting) {
        for (let i = 0; i < select.options.length; i += 1) {
            const option = select.options[i];
            if (option.__value === value) {
                option.selected = true;
                return;
            }
        }
        if (!mounting || value !== undefined) {
            select.selectedIndex = -1; // no option should be selected
        }
    }
    function select_value(select) {
        const selected_option = select.querySelector(':checked');
        return selected_option && selected_option.__value;
    }
    function toggle_class(element, name, toggle) {
        element.classList[toggle ? 'add' : 'remove'](name);
    }
    function custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {
        const e = document.createEvent('CustomEvent');
        e.initCustomEvent(type, bubbles, cancelable, detail);
        return e;
    }
    class HtmlTag {
        constructor(is_svg = false) {
            this.is_svg = false;
            this.is_svg = is_svg;
            this.e = this.n = null;
        }
        c(html) {
            this.h(html);
        }
        m(html, target, anchor = null) {
            if (!this.e) {
                if (this.is_svg)
                    this.e = svg_element(target.nodeName);
                /** #7364  target for <template> may be provided as #document-fragment(11) */
                else
                    this.e = element((target.nodeType === 11 ? 'TEMPLATE' : target.nodeName));
                this.t = target.tagName !== 'TEMPLATE' ? target : target.content;
                this.c(html);
            }
            this.i(anchor);
        }
        h(html) {
            this.e.innerHTML = html;
            this.n = Array.from(this.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes);
        }
        i(anchor) {
            for (let i = 0; i < this.n.length; i += 1) {
                insert(this.t, this.n[i], anchor);
            }
        }
        p(html) {
            this.d();
            this.h(html);
            this.i(this.a);
        }
        d() {
            this.n.forEach(detach);
        }
    }

    // we need to store the information for multiple documents because a Svelte application could also contain iframes
    // https://github.com/sveltejs/svelte/issues/3624
    const managed_styles = new Map();
    let active = 0;
    // https://github.com/darkskyapp/string-hash/blob/master/index.js
    function hash(str) {
        let hash = 5381;
        let i = str.length;
        while (i--)
            hash = ((hash << 5) - hash) ^ str.charCodeAt(i);
        return hash >>> 0;
    }
    function create_style_information(doc, node) {
        const info = { stylesheet: append_empty_stylesheet(node), rules: {} };
        managed_styles.set(doc, info);
        return info;
    }
    function create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {
        const step = 16.666 / duration;
        let keyframes = '{\n';
        for (let p = 0; p <= 1; p += step) {
            const t = a + (b - a) * ease(p);
            keyframes += p * 100 + `%{${fn(t, 1 - t)}}\n`;
        }
        const rule = keyframes + `100% {${fn(b, 1 - b)}}\n}`;
        const name = `__svelte_${hash(rule)}_${uid}`;
        const doc = get_root_for_style(node);
        const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);
        if (!rules[name]) {
            rules[name] = true;
            stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);
        }
        const animation = node.style.animation || '';
        node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;
        active += 1;
        return name;
    }
    function delete_rule(node, name) {
        const previous = (node.style.animation || '').split(', ');
        const next = previous.filter(name
            ? anim => anim.indexOf(name) < 0 // remove specific animation
            : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations
        );
        const deleted = previous.length - next.length;
        if (deleted) {
            node.style.animation = next.join(', ');
            active -= deleted;
            if (!active)
                clear_rules();
        }
    }
    function clear_rules() {
        raf(() => {
            if (active)
                return;
            managed_styles.forEach(info => {
                const { ownerNode } = info.stylesheet;
                // there is no ownerNode if it runs on jsdom.
                if (ownerNode)
                    detach(ownerNode);
            });
            managed_styles.clear();
        });
    }

    function create_animation(node, from, fn, params) {
        if (!from)
            return noop;
        const to = node.getBoundingClientRect();
        if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)
            return noop;
        const { delay = 0, duration = 300, easing = identity, 
        // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?
        start: start_time = now() + delay, 
        // @ts-ignore todo:
        end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);
        let running = true;
        let started = false;
        let name;
        function start() {
            if (css) {
                name = create_rule(node, 0, 1, duration, delay, easing, css);
            }
            if (!delay) {
                started = true;
            }
        }
        function stop() {
            if (css)
                delete_rule(node, name);
            running = false;
        }
        loop(now => {
            if (!started && now >= start_time) {
                started = true;
            }
            if (started && now >= end) {
                tick(1, 0);
                stop();
            }
            if (!running) {
                return false;
            }
            if (started) {
                const p = now - start_time;
                const t = 0 + 1 * easing(p / duration);
                tick(t, 1 - t);
            }
            return true;
        });
        start();
        tick(0, 1);
        return stop;
    }
    function fix_position(node) {
        const style = getComputedStyle(node);
        if (style.position !== 'absolute' && style.position !== 'fixed') {
            const { width, height } = style;
            const a = node.getBoundingClientRect();
            node.style.position = 'absolute';
            node.style.width = width;
            node.style.height = height;
            add_transform(node, a);
        }
    }
    function add_transform(node, a) {
        const b = node.getBoundingClientRect();
        if (a.left !== b.left || a.top !== b.top) {
            const style = getComputedStyle(node);
            const transform = style.transform === 'none' ? '' : style.transform;
            node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;
        }
    }

    let current_component;
    function set_current_component(component) {
        current_component = component;
    }
    function get_current_component() {
        if (!current_component)
            throw new Error('Function called outside component initialization');
        return current_component;
    }
    /**
     * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.
     * It must be called during the component's initialisation (but doesn't need to live *inside* the component;
     * it can be called from an external module).
     *
     * `onMount` does not run inside a [server-side component](/docs#run-time-server-side-component-api).
     *
     * https://svelte.dev/docs#run-time-svelte-onmount
     */
    function onMount(fn) {
        get_current_component().$$.on_mount.push(fn);
    }
    /**
     * Schedules a callback to run immediately before the component is unmounted.
     *
     * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the
     * only one that runs inside a server-side component.
     *
     * https://svelte.dev/docs#run-time-svelte-ondestroy
     */
    function onDestroy(fn) {
        get_current_component().$$.on_destroy.push(fn);
    }

    const dirty_components = [];
    const binding_callbacks = [];
    let render_callbacks = [];
    const flush_callbacks = [];
    const resolved_promise = /* @__PURE__ */ Promise.resolve();
    let update_scheduled = false;
    function schedule_update() {
        if (!update_scheduled) {
            update_scheduled = true;
            resolved_promise.then(flush);
        }
    }
    function add_render_callback(fn) {
        render_callbacks.push(fn);
    }
    function add_flush_callback(fn) {
        flush_callbacks.push(fn);
    }
    // flush() calls callbacks in this order:
    // 1. All beforeUpdate callbacks, in order: parents before children
    // 2. All bind:this callbacks, in reverse order: children before parents.
    // 3. All afterUpdate callbacks, in order: parents before children. EXCEPT
    //    for afterUpdates called during the initial onMount, which are called in
    //    reverse order: children before parents.
    // Since callbacks might update component values, which could trigger another
    // call to flush(), the following steps guard against this:
    // 1. During beforeUpdate, any updated components will be added to the
    //    dirty_components array and will cause a reentrant call to flush(). Because
    //    the flush index is kept outside the function, the reentrant call will pick
    //    up where the earlier call left off and go through all dirty components. The
    //    current_component value is saved and restored so that the reentrant call will
    //    not interfere with the "parent" flush() call.
    // 2. bind:this callbacks cannot trigger new flush() calls.
    // 3. During afterUpdate, any updated components will NOT have their afterUpdate
    //    callback called a second time; the seen_callbacks set, outside the flush()
    //    function, guarantees this behavior.
    const seen_callbacks = new Set();
    let flushidx = 0; // Do *not* move this inside the flush() function
    function flush() {
        // Do not reenter flush while dirty components are updated, as this can
        // result in an infinite loop. Instead, let the inner flush handle it.
        // Reentrancy is ok afterwards for bindings etc.
        if (flushidx !== 0) {
            return;
        }
        const saved_component = current_component;
        do {
            // first, call beforeUpdate functions
            // and update components
            try {
                while (flushidx < dirty_components.length) {
                    const component = dirty_components[flushidx];
                    flushidx++;
                    set_current_component(component);
                    update(component.$$);
                }
            }
            catch (e) {
                // reset dirty state to not end up in a deadlocked state and then rethrow
                dirty_components.length = 0;
                flushidx = 0;
                throw e;
            }
            set_current_component(null);
            dirty_components.length = 0;
            flushidx = 0;
            while (binding_callbacks.length)
                binding_callbacks.pop()();
            // then, once components are updated, call
            // afterUpdate functions. This may cause
            // subsequent updates...
            for (let i = 0; i < render_callbacks.length; i += 1) {
                const callback = render_callbacks[i];
                if (!seen_callbacks.has(callback)) {
                    // ...so guard against infinite loops
                    seen_callbacks.add(callback);
                    callback();
                }
            }
            render_callbacks.length = 0;
        } while (dirty_components.length);
        while (flush_callbacks.length) {
            flush_callbacks.pop()();
        }
        update_scheduled = false;
        seen_callbacks.clear();
        set_current_component(saved_component);
    }
    function update($$) {
        if ($$.fragment !== null) {
            $$.update();
            run_all($$.before_update);
            const dirty = $$.dirty;
            $$.dirty = [-1];
            $$.fragment && $$.fragment.p($$.ctx, dirty);
            $$.after_update.forEach(add_render_callback);
        }
    }
    /**
     * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.
     */
    function flush_render_callbacks(fns) {
        const filtered = [];
        const targets = [];
        render_callbacks.forEach((c) => fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c));
        targets.forEach((c) => c());
        render_callbacks = filtered;
    }

    let promise;
    function wait() {
        if (!promise) {
            promise = Promise.resolve();
            promise.then(() => {
                promise = null;
            });
        }
        return promise;
    }
    function dispatch(node, direction, kind) {
        node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));
    }
    const outroing = new Set();
    let outros;
    function group_outros() {
        outros = {
            r: 0,
            c: [],
            p: outros // parent group
        };
    }
    function check_outros() {
        if (!outros.r) {
            run_all(outros.c);
        }
        outros = outros.p;
    }
    function transition_in(block, local) {
        if (block && block.i) {
            outroing.delete(block);
            block.i(local);
        }
    }
    function transition_out(block, local, detach, callback) {
        if (block && block.o) {
            if (outroing.has(block))
                return;
            outroing.add(block);
            outros.c.push(() => {
                outroing.delete(block);
                if (callback) {
                    if (detach)
                        block.d(1);
                    callback();
                }
            });
            block.o(local);
        }
        else if (callback) {
            callback();
        }
    }
    const null_transition = { duration: 0 };
    function create_in_transition(node, fn, params) {
        const options = { direction: 'in' };
        let config = fn(node, params, options);
        let running = false;
        let animation_name;
        let task;
        let uid = 0;
        function cleanup() {
            if (animation_name)
                delete_rule(node, animation_name);
        }
        function go() {
            const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;
            if (css)
                animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);
            tick(0, 1);
            const start_time = now() + delay;
            const end_time = start_time + duration;
            if (task)
                task.abort();
            running = true;
            add_render_callback(() => dispatch(node, true, 'start'));
            task = loop(now => {
                if (running) {
                    if (now >= end_time) {
                        tick(1, 0);
                        dispatch(node, true, 'end');
                        cleanup();
                        return running = false;
                    }
                    if (now >= start_time) {
                        const t = easing((now - start_time) / duration);
                        tick(t, 1 - t);
                    }
                }
                return running;
            });
        }
        let started = false;
        return {
            start() {
                if (started)
                    return;
                started = true;
                delete_rule(node);
                if (is_function(config)) {
                    config = config(options);
                    wait().then(go);
                }
                else {
                    go();
                }
            },
            invalidate() {
                started = false;
            },
            end() {
                if (running) {
                    cleanup();
                    running = false;
                }
            }
        };
    }
    function create_out_transition(node, fn, params) {
        const options = { direction: 'out' };
        let config = fn(node, params, options);
        let running = true;
        let animation_name;
        const group = outros;
        group.r += 1;
        function go() {
            const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;
            if (css)
                animation_name = create_rule(node, 1, 0, duration, delay, easing, css);
            const start_time = now() + delay;
            const end_time = start_time + duration;
            add_render_callback(() => dispatch(node, false, 'start'));
            loop(now => {
                if (running) {
                    if (now >= end_time) {
                        tick(0, 1);
                        dispatch(node, false, 'end');
                        if (!--group.r) {
                            // this will result in `end()` being called,
                            // so we don't need to clean up here
                            run_all(group.c);
                        }
                        return false;
                    }
                    if (now >= start_time) {
                        const t = easing((now - start_time) / duration);
                        tick(1 - t, t);
                    }
                }
                return running;
            });
        }
        if (is_function(config)) {
            wait().then(() => {
                // @ts-ignore
                config = config(options);
                go();
            });
        }
        else {
            go();
        }
        return {
            end(reset) {
                if (reset && config.tick) {
                    config.tick(1, 0);
                }
                if (running) {
                    if (animation_name)
                        delete_rule(node, animation_name);
                    running = false;
                }
            }
        };
    }
    function outro_and_destroy_block(block, lookup) {
        transition_out(block, 1, 1, () => {
            lookup.delete(block.key);
        });
    }
    function fix_and_outro_and_destroy_block(block, lookup) {
        block.f();
        outro_and_destroy_block(block, lookup);
    }
    function update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {
        let o = old_blocks.length;
        let n = list.length;
        let i = o;
        const old_indexes = {};
        while (i--)
            old_indexes[old_blocks[i].key] = i;
        const new_blocks = [];
        const new_lookup = new Map();
        const deltas = new Map();
        const updates = [];
        i = n;
        while (i--) {
            const child_ctx = get_context(ctx, list, i);
            const key = get_key(child_ctx);
            let block = lookup.get(key);
            if (!block) {
                block = create_each_block(key, child_ctx);
                block.c();
            }
            else if (dynamic) {
                // defer updates until all the DOM shuffling is done
                updates.push(() => block.p(child_ctx, dirty));
            }
            new_lookup.set(key, new_blocks[i] = block);
            if (key in old_indexes)
                deltas.set(key, Math.abs(i - old_indexes[key]));
        }
        const will_move = new Set();
        const did_move = new Set();
        function insert(block) {
            transition_in(block, 1);
            block.m(node, next);
            lookup.set(block.key, block);
            next = block.first;
            n--;
        }
        while (o && n) {
            const new_block = new_blocks[n - 1];
            const old_block = old_blocks[o - 1];
            const new_key = new_block.key;
            const old_key = old_block.key;
            if (new_block === old_block) {
                // do nothing
                next = new_block.first;
                o--;
                n--;
            }
            else if (!new_lookup.has(old_key)) {
                // remove old block
                destroy(old_block, lookup);
                o--;
            }
            else if (!lookup.has(new_key) || will_move.has(new_key)) {
                insert(new_block);
            }
            else if (did_move.has(old_key)) {
                o--;
            }
            else if (deltas.get(new_key) > deltas.get(old_key)) {
                did_move.add(new_key);
                insert(new_block);
            }
            else {
                will_move.add(old_key);
                o--;
            }
        }
        while (o--) {
            const old_block = old_blocks[o];
            if (!new_lookup.has(old_block.key))
                destroy(old_block, lookup);
        }
        while (n)
            insert(new_blocks[n - 1]);
        run_all(updates);
        return new_blocks;
    }
    function validate_each_keys(ctx, list, get_context, get_key) {
        const keys = new Set();
        for (let i = 0; i < list.length; i++) {
            const key = get_key(get_context(ctx, list, i));
            if (keys.has(key)) {
                throw new Error('Cannot have duplicate keys in a keyed each');
            }
            keys.add(key);
        }
    }

    function get_spread_update(levels, updates) {
        const update = {};
        const to_null_out = {};
        const accounted_for = { $$scope: 1 };
        let i = levels.length;
        while (i--) {
            const o = levels[i];
            const n = updates[i];
            if (n) {
                for (const key in o) {
                    if (!(key in n))
                        to_null_out[key] = 1;
                }
                for (const key in n) {
                    if (!accounted_for[key]) {
                        update[key] = n[key];
                        accounted_for[key] = 1;
                    }
                }
                levels[i] = n;
            }
            else {
                for (const key in o) {
                    accounted_for[key] = 1;
                }
            }
        }
        for (const key in to_null_out) {
            if (!(key in update))
                update[key] = undefined;
        }
        return update;
    }
    function get_spread_object(spread_props) {
        return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};
    }

    function bind(component, name, callback) {
        const index = component.$$.props[name];
        if (index !== undefined) {
            component.$$.bound[index] = callback;
            callback(component.$$.ctx[index]);
        }
    }
    function create_component(block) {
        block && block.c();
    }
    function mount_component(component, target, anchor, customElement) {
        const { fragment, after_update } = component.$$;
        fragment && fragment.m(target, anchor);
        if (!customElement) {
            // onMount happens before the initial afterUpdate
            add_render_callback(() => {
                const new_on_destroy = component.$$.on_mount.map(run).filter(is_function);
                // if the component was destroyed immediately
                // it will update the `$$.on_destroy` reference to `null`.
                // the destructured on_destroy may still reference to the old array
                if (component.$$.on_destroy) {
                    component.$$.on_destroy.push(...new_on_destroy);
                }
                else {
                    // Edge case - component was destroyed immediately,
                    // most likely as a result of a binding initialising
                    run_all(new_on_destroy);
                }
                component.$$.on_mount = [];
            });
        }
        after_update.forEach(add_render_callback);
    }
    function destroy_component(component, detaching) {
        const $$ = component.$$;
        if ($$.fragment !== null) {
            flush_render_callbacks($$.after_update);
            run_all($$.on_destroy);
            $$.fragment && $$.fragment.d(detaching);
            // TODO null out other refs, including component.$$ (but need to
            // preserve final state?)
            $$.on_destroy = $$.fragment = null;
            $$.ctx = [];
        }
    }
    function make_dirty(component, i) {
        if (component.$$.dirty[0] === -1) {
            dirty_components.push(component);
            schedule_update();
            component.$$.dirty.fill(0);
        }
        component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));
    }
    function init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {
        const parent_component = current_component;
        set_current_component(component);
        const $$ = component.$$ = {
            fragment: null,
            ctx: [],
            // state
            props,
            update: noop,
            not_equal,
            bound: blank_object(),
            // lifecycle
            on_mount: [],
            on_destroy: [],
            on_disconnect: [],
            before_update: [],
            after_update: [],
            context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),
            // everything else
            callbacks: blank_object(),
            dirty,
            skip_bound: false,
            root: options.target || parent_component.$$.root
        };
        append_styles && append_styles($$.root);
        let ready = false;
        $$.ctx = instance
            ? instance(component, options.props || {}, (i, ret, ...rest) => {
                const value = rest.length ? rest[0] : ret;
                if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {
                    if (!$$.skip_bound && $$.bound[i])
                        $$.bound[i](value);
                    if (ready)
                        make_dirty(component, i);
                }
                return ret;
            })
            : [];
        $$.update();
        ready = true;
        run_all($$.before_update);
        // `false` as a special case of no DOM component
        $$.fragment = create_fragment ? create_fragment($$.ctx) : false;
        if (options.target) {
            if (options.hydrate) {
                const nodes = children(options.target);
                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
                $$.fragment && $$.fragment.l(nodes);
                nodes.forEach(detach);
            }
            else {
                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
                $$.fragment && $$.fragment.c();
            }
            if (options.intro)
                transition_in(component.$$.fragment);
            mount_component(component, options.target, options.anchor, options.customElement);
            flush();
        }
        set_current_component(parent_component);
    }
    /**
     * Base class for Svelte components. Used when dev=false.
     */
    class SvelteComponent {
        $destroy() {
            destroy_component(this, 1);
            this.$destroy = noop;
        }
        $on(type, callback) {
            if (!is_function(callback)) {
                return noop;
            }
            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));
            callbacks.push(callback);
            return () => {
                const index = callbacks.indexOf(callback);
                if (index !== -1)
                    callbacks.splice(index, 1);
            };
        }
        $set($$props) {
            if (this.$$set && !is_empty($$props)) {
                this.$$.skip_bound = true;
                this.$$set($$props);
                this.$$.skip_bound = false;
            }
        }
    }

    function dispatch_dev(type, detail) {
        document.dispatchEvent(custom_event(type, Object.assign({ version: '3.59.2' }, detail), { bubbles: true }));
    }
    function append_dev(target, node) {
        dispatch_dev('SvelteDOMInsert', { target, node });
        append(target, node);
    }
    function insert_dev(target, node, anchor) {
        dispatch_dev('SvelteDOMInsert', { target, node, anchor });
        insert(target, node, anchor);
    }
    function detach_dev(node) {
        dispatch_dev('SvelteDOMRemove', { node });
        detach(node);
    }
    function listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation, has_stop_immediate_propagation) {
        const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];
        if (has_prevent_default)
            modifiers.push('preventDefault');
        if (has_stop_propagation)
            modifiers.push('stopPropagation');
        if (has_stop_immediate_propagation)
            modifiers.push('stopImmediatePropagation');
        dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });
        const dispose = listen(node, event, handler, options);
        return () => {
            dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });
            dispose();
        };
    }
    function attr_dev(node, attribute, value) {
        attr(node, attribute, value);
        if (value == null)
            dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });
        else
            dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });
    }
    function prop_dev(node, property, value) {
        node[property] = value;
        dispatch_dev('SvelteDOMSetProperty', { node, property, value });
    }
    function set_data_dev(text, data) {
        data = '' + data;
        if (text.data === data)
            return;
        dispatch_dev('SvelteDOMSetData', { node: text, data });
        text.data = data;
    }
    function validate_each_argument(arg) {
        if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {
            let msg = '{#each} only iterates over array-like objects.';
            if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {
                msg += ' You can use a spread to convert this iterable into an array.';
            }
            throw new Error(msg);
        }
    }
    function validate_slots(name, slot, keys) {
        for (const slot_key of Object.keys(slot)) {
            if (!~keys.indexOf(slot_key)) {
                console.warn(`<${name}> received an unexpected slot "${slot_key}".`);
            }
        }
    }
    function construct_svelte_component_dev(component, props) {
        const error_message = 'this={...} of <svelte:component> should specify a Svelte component.';
        try {
            const instance = new component(props);
            if (!instance.$$ || !instance.$set || !instance.$on || !instance.$destroy) {
                throw new Error(error_message);
            }
            return instance;
        }
        catch (err) {
            const { message } = err;
            if (typeof message === 'string' && message.indexOf('is not a constructor') !== -1) {
                throw new Error(error_message);
            }
            else {
                throw err;
            }
        }
    }
    /**
     * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.
     */
    class SvelteComponentDev extends SvelteComponent {
        constructor(options) {
            if (!options || (!options.target && !options.$$inline)) {
                throw new Error("'target' is a required option");
            }
            super();
        }
        $destroy() {
            super.$destroy();
            this.$destroy = () => {
                console.warn('Component was already destroyed'); // eslint-disable-line no-console
            };
        }
        $capture_state() { }
        $inject_state() { }
    }

    /* src\components\Footer.svelte generated by Svelte v3.59.2 */

    const file$6 = "src\\components\\Footer.svelte";

    function create_fragment$6(ctx) {
    	let main;
    	let hr;
    	let t0;
    	let footer;
    	let p;
    	let t1;
    	let a;
    	let svg;
    	let path;

    	const block = {
    		c: function create() {
    			main = element("main");
    			hr = element("hr");
    			t0 = space();
    			footer = element("footer");
    			p = element("p");
    			t1 = text("Copyright © 2022 - All rights Reserved - by myyrakle\r\n\r\n      ");
    			a = element("a");
    			svg = svg_element("svg");
    			path = svg_element("path");
    			add_location(hr, file$6, 4, 2, 33);
    			attr_dev(path, "d", "M7 .175c-3.872 0-7 3.128-7 7 0 3.084 2.013 5.71 4.79 6.65.35.066.482-.153.482-.328v-1.181c-1.947.415-2.363-.941-2.363-.941-.328-.81-.787-1.028-.787-1.028-.634-.438.044-.416.044-.416.7.044 1.071.722 1.071.722.635 1.072 1.641.766 2.035.59.066-.459.24-.765.437-.94-1.553-.175-3.193-.787-3.193-3.456 0-.766.262-1.378.721-1.881-.065-.175-.306-.897.066-1.86 0 0 .59-.197 1.925.722a6.754 6.754 0 0 1 1.75-.24c.59 0 1.203.087 1.75.24 1.335-.897 1.925-.722 1.925-.722.372.963.131 1.685.066 1.86.46.48.722 1.115.722 1.88 0 2.691-1.641 3.282-3.194 3.457.24.219.481.634.481 1.29v1.926c0 .197.131.415.481.328C11.988 12.884 14 10.259 14 7.175c0-3.872-3.128-7-7-7z");
    			attr_dev(path, "fill", "currentColor");
    			attr_dev(path, "fill-rule", "nonzero");
    			add_location(path, file$6, 16, 11, 389);
    			attr_dev(svg, "aria-label", "github");
    			attr_dev(svg, "height", "19");
    			attr_dev(svg, "viewBox", "0 0 14 14");
    			attr_dev(svg, "width", "19");
    			add_location(svg, file$6, 15, 9, 309);
    			attr_dev(a, "class", "footer-icon svelte-9f5yih");
    			attr_dev(a, "aria-label", "GitHub");
    			attr_dev(a, "href", "https://github.com/myyrakle");
    			attr_dev(a, "rel", "noopener");
    			attr_dev(a, "target", "_blank");
    			add_location(a, file$6, 9, 6, 145);
    			add_location(p, file$6, 6, 4, 72);
    			attr_dev(footer, "class", "footer svelte-9f5yih");
    			add_location(footer, file$6, 5, 2, 43);
    			add_location(main, file$6, 3, 0, 23);
    		},
    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, main, anchor);
    			append_dev(main, hr);
    			append_dev(main, t0);
    			append_dev(main, footer);
    			append_dev(footer, p);
    			append_dev(p, t1);
    			append_dev(p, a);
    			append_dev(a, svg);
    			append_dev(svg, path);
    		},
    		p: noop,
    		i: noop,
    		o: noop,
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(main);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_fragment$6.name,
    		type: "component",
    		source: "",
    		ctx
    	});

    	return block;
    }

    function instance$6($$self, $$props) {
    	let { $$slots: slots = {}, $$scope } = $$props;
    	validate_slots('Footer', slots, []);
    	const writable_props = [];

    	Object.keys($$props).forEach(key => {
    		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<Footer> was created with unknown prop '${key}'`);
    	});

    	return [];
    }

    class Footer extends SvelteComponentDev {
    	constructor(options) {
    		super(options);
    		init(this, options, instance$6, create_fragment$6, safe_not_equal, {});

    		dispatch_dev("SvelteRegisterComponent", {
    			component: this,
    			tagName: "Footer",
    			options,
    			id: create_fragment$6.name
    		});
    	}
    }

    /* src\components\LeftInput.svelte generated by Svelte v3.59.2 */

    const file$5 = "src\\components\\LeftInput.svelte";

    function get_each_context$2(ctx, list, i) {
    	const child_ctx = ctx.slice();
    	child_ctx[8] = list[i];
    	return child_ctx;
    }

    // (20:9) {#each database as option}
    function create_each_block$2(ctx) {
    	let option;
    	let t_value = /*option*/ ctx[8].view + "";
    	let t;
    	let option_value_value;

    	const block = {
    		c: function create() {
    			option = element("option");
    			t = text(t_value);
    			option.__value = option_value_value = /*option*/ ctx[8].value;
    			option.value = option.__value;
    			add_location(option, file$5, 20, 10, 510);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, option, anchor);
    			append_dev(option, t);
    		},
    		p: function update(ctx, dirty) {
    			if (dirty & /*database*/ 4 && t_value !== (t_value = /*option*/ ctx[8].view + "")) set_data_dev(t, t_value);

    			if (dirty & /*database*/ 4 && option_value_value !== (option_value_value = /*option*/ ctx[8].value)) {
    				prop_dev(option, "__value", option_value_value);
    				option.value = option.__value;
    			}
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(option);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_each_block$2.name,
    		type: "each",
    		source: "(20:9) {#each database as option}",
    		ctx
    	});

    	return block;
    }

    function create_fragment$5(ctx) {
    	let main;
    	let div1;
    	let div0;
    	let select;
    	let t0;
    	let br;
    	let t1;
    	let textarea;
    	let mounted;
    	let dispose;
    	let each_value = /*database*/ ctx[2];
    	validate_each_argument(each_value);
    	let each_blocks = [];

    	for (let i = 0; i < each_value.length; i += 1) {
    		each_blocks[i] = create_each_block$2(get_each_context$2(ctx, each_value, i));
    	}

    	const block = {
    		c: function create() {
    			main = element("main");
    			div1 = element("div");
    			div0 = element("div");
    			select = element("select");

    			for (let i = 0; i < each_blocks.length; i += 1) {
    				each_blocks[i].c();
    			}

    			t0 = space();
    			br = element("br");
    			t1 = space();
    			textarea = element("textarea");
    			attr_dev(select, "id", "left-select");
    			if (/*selectedDatabase*/ ctx[0] === void 0) add_render_callback(() => /*select_change_handler*/ ctx[4].call(select));
    			add_location(select, file$5, 12, 6, 245);
    			add_location(br, file$5, 22, 8, 596);
    			attr_dev(textarea, "class", "top-textarea svelte-1r6uqut");
    			add_location(textarea, file$5, 23, 6, 610);
    			attr_dev(div0, "class", "left-inner svelte-1r6uqut");
    			add_location(div0, file$5, 10, 4, 166);
    			attr_dev(div1, "class", "left svelte-1r6uqut");
    			add_location(div1, file$5, 9, 2, 142);
    			add_location(main, file$5, 8, 0, 132);
    		},
    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, main, anchor);
    			append_dev(main, div1);
    			append_dev(div1, div0);
    			append_dev(div0, select);

    			for (let i = 0; i < each_blocks.length; i += 1) {
    				if (each_blocks[i]) {
    					each_blocks[i].m(select, null);
    				}
    			}

    			select_option(select, /*selectedDatabase*/ ctx[0], true);
    			append_dev(div0, t0);
    			append_dev(div0, br);
    			append_dev(div0, t1);
    			append_dev(div0, textarea);
    			set_input_value(textarea, /*leftText*/ ctx[1]);

    			if (!mounted) {
    				dispose = [
    					listen_dev(select, "change", /*select_change_handler*/ ctx[4]),
    					listen_dev(select, "change", /*change_handler*/ ctx[5], false, false, false, false),
    					listen_dev(textarea, "input", /*textarea_input_handler*/ ctx[6]),
    					listen_dev(textarea, "keyup", /*keyup_handler*/ ctx[7], false, false, false, false)
    				];

    				mounted = true;
    			}
    		},
    		p: function update(ctx, [dirty]) {
    			if (dirty & /*database*/ 4) {
    				each_value = /*database*/ ctx[2];
    				validate_each_argument(each_value);
    				let i;

    				for (i = 0; i < each_value.length; i += 1) {
    					const child_ctx = get_each_context$2(ctx, each_value, i);

    					if (each_blocks[i]) {
    						each_blocks[i].p(child_ctx, dirty);
    					} else {
    						each_blocks[i] = create_each_block$2(child_ctx);
    						each_blocks[i].c();
    						each_blocks[i].m(select, null);
    					}
    				}

    				for (; i < each_blocks.length; i += 1) {
    					each_blocks[i].d(1);
    				}

    				each_blocks.length = each_value.length;
    			}

    			if (dirty & /*selectedDatabase, database*/ 5) {
    				select_option(select, /*selectedDatabase*/ ctx[0]);
    			}

    			if (dirty & /*leftText*/ 2) {
    				set_input_value(textarea, /*leftText*/ ctx[1]);
    			}
    		},
    		i: noop,
    		o: noop,
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(main);
    			destroy_each(each_blocks, detaching);
    			mounted = false;
    			run_all(dispose);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_fragment$5.name,
    		type: "component",
    		source: "",
    		ctx
    	});

    	return block;
    }

    function instance$5($$self, $$props, $$invalidate) {
    	let { $$slots: slots = {}, $$scope } = $$props;
    	validate_slots('LeftInput', slots, []);
    	let { selectedDatabase } = $$props;
    	let { leftText } = $$props;
    	let { database } = $$props;
    	let { generateORM } = $$props;

    	$$self.$$.on_mount.push(function () {
    		if (selectedDatabase === undefined && !('selectedDatabase' in $$props || $$self.$$.bound[$$self.$$.props['selectedDatabase']])) {
    			console.warn("<LeftInput> was created without expected prop 'selectedDatabase'");
    		}

    		if (leftText === undefined && !('leftText' in $$props || $$self.$$.bound[$$self.$$.props['leftText']])) {
    			console.warn("<LeftInput> was created without expected prop 'leftText'");
    		}

    		if (database === undefined && !('database' in $$props || $$self.$$.bound[$$self.$$.props['database']])) {
    			console.warn("<LeftInput> was created without expected prop 'database'");
    		}

    		if (generateORM === undefined && !('generateORM' in $$props || $$self.$$.bound[$$self.$$.props['generateORM']])) {
    			console.warn("<LeftInput> was created without expected prop 'generateORM'");
    		}
    	});

    	const writable_props = ['selectedDatabase', 'leftText', 'database', 'generateORM'];

    	Object.keys($$props).forEach(key => {
    		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<LeftInput> was created with unknown prop '${key}'`);
    	});

    	function select_change_handler() {
    		selectedDatabase = select_value(this);
    		$$invalidate(0, selectedDatabase);
    		$$invalidate(2, database);
    	}

    	const change_handler = () => {
    		window.localStorage.setItem("selectedDatabase", selectedDatabase);
    		generateORM();
    	};

    	function textarea_input_handler() {
    		leftText = this.value;
    		$$invalidate(1, leftText);
    	}

    	const keyup_handler = () => {
    		generateORM();
    	};

    	$$self.$$set = $$props => {
    		if ('selectedDatabase' in $$props) $$invalidate(0, selectedDatabase = $$props.selectedDatabase);
    		if ('leftText' in $$props) $$invalidate(1, leftText = $$props.leftText);
    		if ('database' in $$props) $$invalidate(2, database = $$props.database);
    		if ('generateORM' in $$props) $$invalidate(3, generateORM = $$props.generateORM);
    	};

    	$$self.$capture_state = () => ({
    		selectedDatabase,
    		leftText,
    		database,
    		generateORM
    	});

    	$$self.$inject_state = $$props => {
    		if ('selectedDatabase' in $$props) $$invalidate(0, selectedDatabase = $$props.selectedDatabase);
    		if ('leftText' in $$props) $$invalidate(1, leftText = $$props.leftText);
    		if ('database' in $$props) $$invalidate(2, database = $$props.database);
    		if ('generateORM' in $$props) $$invalidate(3, generateORM = $$props.generateORM);
    	};

    	if ($$props && "$$inject" in $$props) {
    		$$self.$inject_state($$props.$$inject);
    	}

    	return [
    		selectedDatabase,
    		leftText,
    		database,
    		generateORM,
    		select_change_handler,
    		change_handler,
    		textarea_input_handler,
    		keyup_handler
    	];
    }

    class LeftInput extends SvelteComponentDev {
    	constructor(options) {
    		super(options);

    		init(this, options, instance$5, create_fragment$5, safe_not_equal, {
    			selectedDatabase: 0,
    			leftText: 1,
    			database: 2,
    			generateORM: 3
    		});

    		dispatch_dev("SvelteRegisterComponent", {
    			component: this,
    			tagName: "LeftInput",
    			options,
    			id: create_fragment$5.name
    		});
    	}

    	get selectedDatabase() {
    		throw new Error("<LeftInput>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set selectedDatabase(value) {
    		throw new Error("<LeftInput>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get leftText() {
    		throw new Error("<LeftInput>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set leftText(value) {
    		throw new Error("<LeftInput>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get database() {
    		throw new Error("<LeftInput>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set database(value) {
    		throw new Error("<LeftInput>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get generateORM() {
    		throw new Error("<LeftInput>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set generateORM(value) {
    		throw new Error("<LeftInput>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}
    }

    function cubicOut(t) {
        const f = t - 1.0;
        return f * f * f + 1.0;
    }

    function fade(node, { delay = 0, duration = 400, easing = identity } = {}) {
        const o = +getComputedStyle(node).opacity;
        return {
            delay,
            duration,
            easing,
            css: t => `opacity: ${t * o}`
        };
    }
    function fly(node, { delay = 0, duration = 400, easing = cubicOut, x = 0, y = 0, opacity = 0 } = {}) {
        const style = getComputedStyle(node);
        const target_opacity = +style.opacity;
        const transform = style.transform === 'none' ? '' : style.transform;
        const od = target_opacity * (1 - opacity);
        const [xValue, xUnit] = split_css_unit(x);
        const [yValue, yUnit] = split_css_unit(y);
        return {
            delay,
            duration,
            easing,
            css: (t, u) => `
			transform: ${transform} translate(${(1 - t) * xValue}${xUnit}, ${(1 - t) * yValue}${yUnit});
			opacity: ${target_opacity - (od * u)}`
        };
    }

    function flip(node, { from, to }, params = {}) {
        const style = getComputedStyle(node);
        const transform = style.transform === 'none' ? '' : style.transform;
        const [ox, oy] = style.transformOrigin.split(' ').map(parseFloat);
        const dx = (from.left + from.width * ox / to.width) - (to.left + ox);
        const dy = (from.top + from.height * oy / to.height) - (to.top + oy);
        const { delay = 0, duration = (d) => Math.sqrt(d) * 120, easing = cubicOut } = params;
        return {
            delay,
            duration: is_function(duration) ? duration(Math.sqrt(dx * dx + dy * dy)) : duration,
            easing,
            css: (t, u) => {
                const x = u * dx;
                const y = u * dy;
                const sx = t + u * from.width / to.width;
                const sy = t + u * from.height / to.height;
                return `transform: ${transform} translate(${x}px, ${y}px) scale(${sx}, ${sy});`;
            }
        };
    }

    const subscriber_queue = [];
    /**
     * Create a `Writable` store that allows both updating and reading by subscription.
     * @param {*=}value initial value
     * @param {StartStopNotifier=} start
     */
    function writable(value, start = noop) {
        let stop;
        const subscribers = new Set();
        function set(new_value) {
            if (safe_not_equal(value, new_value)) {
                value = new_value;
                if (stop) { // store is ready
                    const run_queue = !subscriber_queue.length;
                    for (const subscriber of subscribers) {
                        subscriber[1]();
                        subscriber_queue.push(subscriber, value);
                    }
                    if (run_queue) {
                        for (let i = 0; i < subscriber_queue.length; i += 2) {
                            subscriber_queue[i][0](subscriber_queue[i + 1]);
                        }
                        subscriber_queue.length = 0;
                    }
                }
            }
        }
        function update(fn) {
            set(fn(value));
        }
        function subscribe(run, invalidate = noop) {
            const subscriber = [run, invalidate];
            subscribers.add(subscriber);
            if (subscribers.size === 1) {
                stop = start(set) || noop;
            }
            run(value);
            return () => {
                subscribers.delete(subscriber);
                if (subscribers.size === 0 && stop) {
                    stop();
                    stop = null;
                }
            };
        }
        return { set, update, subscribe };
    }

    /**
     * @typedef {import('svelte').ComponentType} SvelteComponent
     */

    /**
     * @typedef {import('svelte/transition').FlyParams} FlyParams
     */

    /**
     * @typedef {Object} SvelteToastCustomComponent
     * @property {SvelteComponent} src - custom Svelte Component
     * @property {Object<string,any>} [props] - props to pass into custom component
     * @property {string} [sendIdTo] - forward toast id to prop name
     */

    /**
     * @callback SvelteToastOnPopCallback
     * @param {number} [id] - optionally get the toast id if needed
     */

    /**
     * @typedef {Object} SvelteToastOptions
     * @property {number} [id] - unique id generated for every toast
     * @property {string} [target] - container target name to send toast to
     * @property {string} [msg] - toast message
     * @property {number} [duration] - duration of progress bar tween from initial to next
     * @property {number} [initial] - initial progress bar value
     * @property {number} [next] - next progress bar value
     * @property {boolean} [pausable] - pause progress bar tween on mouse hover
     * @property {boolean} [dismissable] - allow dissmiss with close button
     * @property {boolean} [reversed] - display toasts in reverse order
     * @property {FlyParams} [intro] - toast intro fly animation settings
     * @property {Object<string,string|number>} [theme] - css var overrides
     * @property {string[]} [classes] - user-defined classes
     * @property {SvelteToastOnPopCallback} [onpop] - callback that runs on toast dismiss
     * @property {SvelteToastCustomComponent} [component] - send custom Svelte Component as a message
     * @property {number} [progress] - DEPRECATED
     */

    /** @type {SvelteToastOptions} */
    const defaults = {
      duration: 4000,
      initial: 1,
      next: 0,
      pausable: false,
      dismissable: true,
      reversed: false,
      intro: { x: 256 }
    };

    function createToast() {
      const { subscribe, update } = writable(new Array());
      /** @type {Object<string,SvelteToastOptions>} */
      const options = {};
      let count = 0;

      /** @param {any} obj */
      function _obj(obj) {
        return obj instanceof Object
      }

      function _init(target = 'default', opts = {}) {
        options[target] = opts;
        return options
      }

      /**
       * Send a new toast
       * @param {(string|SvelteToastOptions)} msg
       * @param {SvelteToastOptions} [opts]
       * @returns {number}
       */
      function push(msg, opts) {
        const param = {
          target: 'default',
          ...(_obj(msg) ? /** @type {SvelteToastOptions} */ (msg) : { ...opts, msg })
        };
        const conf = options[param.target] || {};
        const entry = {
          ...defaults,
          ...conf,
          ...param,
          theme: { ...conf.theme, ...param.theme },
          classes: [...(conf.classes || []), ...(param.classes || [])],
          id: ++count
        };
        update((n) => (entry.reversed ? [...n, entry] : [entry, ...n]));
        return count
      }

      /**
       * Remove toast(s)
       * - toast.pop() // removes the last toast
       * - toast.pop(0) // remove all toasts
       * - toast.pop(id) // removes the toast with specified `id`
       * - toast.pop({ target: 'foo' }) // remove all toasts from target `foo`
       * @param {(number|Object<'target',string>)} [id]
       */
      function pop(id) {
        update((n) => {
          if (!n.length || id === 0) return []
          // Filter function is deprecated; shim added for backward compatibility
          if (typeof id === 'function') return n.filter((i) => id(i))
          if (_obj(id))
            return n.filter(/** @type {SvelteToastOptions[]} i */ (i) => i.target !== id.target)
          const found = id || Math.max(...n.map((i) => i.id));
          return n.filter((i) => i.id !== found)
        });
      }

      /**
       * Update an existing toast
       * @param {(number|SvelteToastOptions)} id
       * @param {SvelteToastOptions} [opts]
       */
      function set(id, opts) {
        /** @type {any} */
        const param = _obj(id) ? id : { ...opts, id };
        update((n) => {
          const idx = n.findIndex((i) => i.id === param.id);
          if (idx > -1) {
            n[idx] = { ...n[idx], ...param };
          }
          return n
        });
      }

      return { subscribe, push, pop, set, _init }
    }

    const toast = createToast();

    function is_date(obj) {
        return Object.prototype.toString.call(obj) === '[object Date]';
    }

    function get_interpolator(a, b) {
        if (a === b || a !== a)
            return () => a;
        const type = typeof a;
        if (type !== typeof b || Array.isArray(a) !== Array.isArray(b)) {
            throw new Error('Cannot interpolate values of different type');
        }
        if (Array.isArray(a)) {
            const arr = b.map((bi, i) => {
                return get_interpolator(a[i], bi);
            });
            return t => arr.map(fn => fn(t));
        }
        if (type === 'object') {
            if (!a || !b)
                throw new Error('Object cannot be null');
            if (is_date(a) && is_date(b)) {
                a = a.getTime();
                b = b.getTime();
                const delta = b - a;
                return t => new Date(a + t * delta);
            }
            const keys = Object.keys(b);
            const interpolators = {};
            keys.forEach(key => {
                interpolators[key] = get_interpolator(a[key], b[key]);
            });
            return t => {
                const result = {};
                keys.forEach(key => {
                    result[key] = interpolators[key](t);
                });
                return result;
            };
        }
        if (type === 'number') {
            const delta = b - a;
            return t => a + t * delta;
        }
        throw new Error(`Cannot interpolate ${type} values`);
    }
    function tweened(value, defaults = {}) {
        const store = writable(value);
        let task;
        let target_value = value;
        function set(new_value, opts) {
            if (value == null) {
                store.set(value = new_value);
                return Promise.resolve();
            }
            target_value = new_value;
            let previous_task = task;
            let started = false;
            let { delay = 0, duration = 400, easing = identity, interpolate = get_interpolator } = assign(assign({}, defaults), opts);
            if (duration === 0) {
                if (previous_task) {
                    previous_task.abort();
                    previous_task = null;
                }
                store.set(value = target_value);
                return Promise.resolve();
            }
            const start = now() + delay;
            let fn;
            task = loop(now => {
                if (now < start)
                    return true;
                if (!started) {
                    fn = interpolate(value, new_value);
                    if (typeof duration === 'function')
                        duration = duration(value, new_value);
                    started = true;
                }
                if (previous_task) {
                    previous_task.abort();
                    previous_task = null;
                }
                const elapsed = now - start;
                if (elapsed > duration) {
                    store.set(value = new_value);
                    return false;
                }
                // @ts-ignore
                store.set(value = fn(easing(elapsed / duration)));
                return true;
            });
            return task.promise;
        }
        return {
            set,
            update: (fn, opts) => set(fn(target_value, value), opts),
            subscribe: store.subscribe
        };
    }

    /* node_modules\@zerodevx\svelte-toast\ToastItem.svelte generated by Svelte v3.59.2 */
    const file$4 = "node_modules\\@zerodevx\\svelte-toast\\ToastItem.svelte";

    // (98:4) {:else}
    function create_else_block(ctx) {
    	let html_tag;
    	let raw_value = /*item*/ ctx[0].msg + "";
    	let html_anchor;

    	const block = {
    		c: function create() {
    			html_tag = new HtmlTag(false);
    			html_anchor = empty();
    			html_tag.a = html_anchor;
    		},
    		m: function mount(target, anchor) {
    			html_tag.m(raw_value, target, anchor);
    			insert_dev(target, html_anchor, anchor);
    		},
    		p: function update(ctx, dirty) {
    			if (dirty & /*item*/ 1 && raw_value !== (raw_value = /*item*/ ctx[0].msg + "")) html_tag.p(raw_value);
    		},
    		i: noop,
    		o: noop,
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(html_anchor);
    			if (detaching) html_tag.d();
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_else_block.name,
    		type: "else",
    		source: "(98:4) {:else}",
    		ctx
    	});

    	return block;
    }

    // (96:4) {#if item.component}
    function create_if_block_1(ctx) {
    	let switch_instance;
    	let switch_instance_anchor;
    	let current;
    	const switch_instance_spread_levels = [/*cprops*/ ctx[2]];
    	var switch_value = /*item*/ ctx[0].component.src;

    	function switch_props(ctx) {
    		let switch_instance_props = {};

    		for (let i = 0; i < switch_instance_spread_levels.length; i += 1) {
    			switch_instance_props = assign(switch_instance_props, switch_instance_spread_levels[i]);
    		}

    		return {
    			props: switch_instance_props,
    			$$inline: true
    		};
    	}

    	if (switch_value) {
    		switch_instance = construct_svelte_component_dev(switch_value, switch_props());
    	}

    	const block = {
    		c: function create() {
    			if (switch_instance) create_component(switch_instance.$$.fragment);
    			switch_instance_anchor = empty();
    		},
    		m: function mount(target, anchor) {
    			if (switch_instance) mount_component(switch_instance, target, anchor);
    			insert_dev(target, switch_instance_anchor, anchor);
    			current = true;
    		},
    		p: function update(ctx, dirty) {
    			const switch_instance_changes = (dirty & /*cprops*/ 4)
    			? get_spread_update(switch_instance_spread_levels, [get_spread_object(/*cprops*/ ctx[2])])
    			: {};

    			if (dirty & /*item*/ 1 && switch_value !== (switch_value = /*item*/ ctx[0].component.src)) {
    				if (switch_instance) {
    					group_outros();
    					const old_component = switch_instance;

    					transition_out(old_component.$$.fragment, 1, 0, () => {
    						destroy_component(old_component, 1);
    					});

    					check_outros();
    				}

    				if (switch_value) {
    					switch_instance = construct_svelte_component_dev(switch_value, switch_props());
    					create_component(switch_instance.$$.fragment);
    					transition_in(switch_instance.$$.fragment, 1);
    					mount_component(switch_instance, switch_instance_anchor.parentNode, switch_instance_anchor);
    				} else {
    					switch_instance = null;
    				}
    			} else if (switch_value) {
    				switch_instance.$set(switch_instance_changes);
    			}
    		},
    		i: function intro(local) {
    			if (current) return;
    			if (switch_instance) transition_in(switch_instance.$$.fragment, local);
    			current = true;
    		},
    		o: function outro(local) {
    			if (switch_instance) transition_out(switch_instance.$$.fragment, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(switch_instance_anchor);
    			if (switch_instance) destroy_component(switch_instance, detaching);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block_1.name,
    		type: "if",
    		source: "(96:4) {#if item.component}",
    		ctx
    	});

    	return block;
    }

    // (102:2) {#if item.dismissable}
    function create_if_block(ctx) {
    	let div;
    	let mounted;
    	let dispose;

    	const block = {
    		c: function create() {
    			div = element("div");
    			attr_dev(div, "class", "_toastBtn pe svelte-95rq8t");
    			attr_dev(div, "role", "button");
    			attr_dev(div, "tabindex", "0");
    			add_location(div, file$4, 102, 4, 2271);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div, anchor);

    			if (!mounted) {
    				dispose = [
    					listen_dev(div, "click", /*close*/ ctx[4], false, false, false, false),
    					listen_dev(div, "keydown", /*keydown_handler*/ ctx[8], false, false, false, false)
    				];

    				mounted = true;
    			}
    		},
    		p: noop,
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div);
    			mounted = false;
    			run_all(dispose);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_if_block.name,
    		type: "if",
    		source: "(102:2) {#if item.dismissable}",
    		ctx
    	});

    	return block;
    }

    function create_fragment$4(ctx) {
    	let div1;
    	let div0;
    	let current_block_type_index;
    	let if_block0;
    	let t0;
    	let t1;
    	let progress_1;
    	let current;
    	let mounted;
    	let dispose;
    	const if_block_creators = [create_if_block_1, create_else_block];
    	const if_blocks = [];

    	function select_block_type(ctx, dirty) {
    		if (/*item*/ ctx[0].component) return 0;
    		return 1;
    	}

    	current_block_type_index = select_block_type(ctx);
    	if_block0 = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
    	let if_block1 = /*item*/ ctx[0].dismissable && create_if_block(ctx);

    	const block = {
    		c: function create() {
    			div1 = element("div");
    			div0 = element("div");
    			if_block0.c();
    			t0 = space();
    			if (if_block1) if_block1.c();
    			t1 = space();
    			progress_1 = element("progress");
    			attr_dev(div0, "class", "_toastMsg svelte-95rq8t");
    			toggle_class(div0, "pe", /*item*/ ctx[0].component);
    			add_location(div0, file$4, 94, 2, 2048);
    			attr_dev(progress_1, "class", "_toastBar svelte-95rq8t");
    			progress_1.value = /*$progress*/ ctx[1];
    			add_location(progress_1, file$4, 112, 2, 2500);
    			attr_dev(div1, "role", "status");
    			attr_dev(div1, "class", "_toastItem svelte-95rq8t");
    			toggle_class(div1, "pe", /*item*/ ctx[0].pausable);
    			add_location(div1, file$4, 85, 0, 1889);
    		},
    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, div1, anchor);
    			append_dev(div1, div0);
    			if_blocks[current_block_type_index].m(div0, null);
    			append_dev(div1, t0);
    			if (if_block1) if_block1.m(div1, null);
    			append_dev(div1, t1);
    			append_dev(div1, progress_1);
    			current = true;

    			if (!mounted) {
    				dispose = [
    					listen_dev(div1, "mouseenter", /*mouseenter_handler*/ ctx[9], false, false, false, false),
    					listen_dev(div1, "mouseleave", /*resume*/ ctx[6], false, false, false, false)
    				];

    				mounted = true;
    			}
    		},
    		p: function update(ctx, [dirty]) {
    			let previous_block_index = current_block_type_index;
    			current_block_type_index = select_block_type(ctx);

    			if (current_block_type_index === previous_block_index) {
    				if_blocks[current_block_type_index].p(ctx, dirty);
    			} else {
    				group_outros();

    				transition_out(if_blocks[previous_block_index], 1, 1, () => {
    					if_blocks[previous_block_index] = null;
    				});

    				check_outros();
    				if_block0 = if_blocks[current_block_type_index];

    				if (!if_block0) {
    					if_block0 = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
    					if_block0.c();
    				} else {
    					if_block0.p(ctx, dirty);
    				}

    				transition_in(if_block0, 1);
    				if_block0.m(div0, null);
    			}

    			if (!current || dirty & /*item*/ 1) {
    				toggle_class(div0, "pe", /*item*/ ctx[0].component);
    			}

    			if (/*item*/ ctx[0].dismissable) {
    				if (if_block1) {
    					if_block1.p(ctx, dirty);
    				} else {
    					if_block1 = create_if_block(ctx);
    					if_block1.c();
    					if_block1.m(div1, t1);
    				}
    			} else if (if_block1) {
    				if_block1.d(1);
    				if_block1 = null;
    			}

    			if (!current || dirty & /*$progress*/ 2) {
    				prop_dev(progress_1, "value", /*$progress*/ ctx[1]);
    			}

    			if (!current || dirty & /*item*/ 1) {
    				toggle_class(div1, "pe", /*item*/ ctx[0].pausable);
    			}
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(if_block0);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(if_block0);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(div1);
    			if_blocks[current_block_type_index].d();
    			if (if_block1) if_block1.d();
    			mounted = false;
    			run_all(dispose);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_fragment$4.name,
    		type: "component",
    		source: "",
    		ctx
    	});

    	return block;
    }

    function check(prop, kind = 'undefined') {
    	return typeof prop === kind;
    }

    function instance$4($$self, $$props, $$invalidate) {
    	let $progress;
    	let { $$slots: slots = {}, $$scope } = $$props;
    	validate_slots('ToastItem', slots, []);
    	let { item } = $$props;

    	/** @type {any} */
    	let next = item.initial;

    	let prev = next;
    	let paused = false;
    	let cprops = {};

    	/** @type {any} */
    	let unlisten;

    	const progress = tweened(item.initial, { duration: item.duration, easing: identity });
    	validate_store(progress, 'progress');
    	component_subscribe($$self, progress, value => $$invalidate(1, $progress = value));

    	function close() {
    		toast.pop(item.id);
    	}

    	function autoclose() {
    		if ($progress === 1 || $progress === 0) close();
    	}

    	function pause() {
    		if (!paused && $progress !== next) {
    			progress.set($progress, { duration: 0 });
    			paused = true;
    		}
    	}

    	function resume() {
    		if (paused) {
    			const d = /** @type {any} */
    			item.duration;

    			const duration = d - d * (($progress - prev) / (next - prev));
    			progress.set(next, { duration }).then(autoclose);
    			paused = false;
    		}
    	}

    	function listen(d = document) {
    		if (check(d.hidden)) return;
    		const handler = () => d.hidden ? pause() : resume();
    		const name = 'visibilitychange';
    		d.addEventListener(name, handler);
    		unlisten = () => d.removeEventListener(name, handler);
    		handler();
    	}

    	onMount(listen);

    	onDestroy(() => {
    		if (check(item.onpop, 'function')) {
    			// @ts-ignore
    			item.onpop(item.id);
    		}

    		unlisten && unlisten();
    	});

    	$$self.$$.on_mount.push(function () {
    		if (item === undefined && !('item' in $$props || $$self.$$.bound[$$self.$$.props['item']])) {
    			console.warn("<ToastItem> was created without expected prop 'item'");
    		}
    	});

    	const writable_props = ['item'];

    	Object.keys($$props).forEach(key => {
    		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<ToastItem> was created with unknown prop '${key}'`);
    	});

    	const keydown_handler = e => {
    		if (e instanceof KeyboardEvent && ['Enter', ' '].includes(e.key)) close();
    	};

    	const mouseenter_handler = () => {
    		if (item.pausable) pause();
    	};

    	$$self.$$set = $$props => {
    		if ('item' in $$props) $$invalidate(0, item = $$props.item);
    	};

    	$$self.$capture_state = () => ({
    		onMount,
    		onDestroy,
    		tweened,
    		linear: identity,
    		toast,
    		item,
    		next,
    		prev,
    		paused,
    		cprops,
    		unlisten,
    		progress,
    		close,
    		autoclose,
    		pause,
    		resume,
    		check,
    		listen,
    		$progress
    	});

    	$$self.$inject_state = $$props => {
    		if ('item' in $$props) $$invalidate(0, item = $$props.item);
    		if ('next' in $$props) $$invalidate(7, next = $$props.next);
    		if ('prev' in $$props) prev = $$props.prev;
    		if ('paused' in $$props) paused = $$props.paused;
    		if ('cprops' in $$props) $$invalidate(2, cprops = $$props.cprops);
    		if ('unlisten' in $$props) unlisten = $$props.unlisten;
    	};

    	if ($$props && "$$inject" in $$props) {
    		$$self.$inject_state($$props.$$inject);
    	}

    	$$self.$$.update = () => {
    		if ($$self.$$.dirty & /*item*/ 1) {
    			// `progress` has been renamed to `next`; shim included for backward compatibility, to remove in next major
    			if (!check(item.progress)) {
    				$$invalidate(0, item.next = item.progress, item);
    			}
    		}

    		if ($$self.$$.dirty & /*next, item, $progress*/ 131) {
    			if (next !== item.next) {
    				$$invalidate(7, next = item.next);
    				prev = $progress;
    				paused = false;
    				progress.set(next).then(autoclose);
    			}
    		}

    		if ($$self.$$.dirty & /*item*/ 1) {
    			if (item.component) {
    				const { props = {}, sendIdTo } = item.component;

    				$$invalidate(2, cprops = {
    					...props,
    					...sendIdTo && { [sendIdTo]: item.id }
    				});
    			}
    		}
    	};

    	return [
    		item,
    		$progress,
    		cprops,
    		progress,
    		close,
    		pause,
    		resume,
    		next,
    		keydown_handler,
    		mouseenter_handler
    	];
    }

    class ToastItem extends SvelteComponentDev {
    	constructor(options) {
    		super(options);
    		init(this, options, instance$4, create_fragment$4, safe_not_equal, { item: 0 });

    		dispatch_dev("SvelteRegisterComponent", {
    			component: this,
    			tagName: "ToastItem",
    			options,
    			id: create_fragment$4.name
    		});
    	}

    	get item() {
    		throw new Error("<ToastItem>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set item(value) {
    		throw new Error("<ToastItem>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}
    }

    /* node_modules\@zerodevx\svelte-toast\SvelteToast.svelte generated by Svelte v3.59.2 */

    const { Object: Object_1 } = globals;
    const file$3 = "node_modules\\@zerodevx\\svelte-toast\\SvelteToast.svelte";

    function get_each_context$1(ctx, list, i) {
    	const child_ctx = ctx.slice();
    	child_ctx[4] = list[i];
    	return child_ctx;
    }

    // (26:2) {#each items as item (item.id)}
    function create_each_block$1(key_1, ctx) {
    	let li;
    	let toastitem;
    	let t;
    	let li_class_value;
    	let li_style_value;
    	let li_intro;
    	let li_outro;
    	let rect;
    	let stop_animation = noop;
    	let current;

    	toastitem = new ToastItem({
    			props: { item: /*item*/ ctx[4] },
    			$$inline: true
    		});

    	const block = {
    		key: key_1,
    		first: null,
    		c: function create() {
    			li = element("li");
    			create_component(toastitem.$$.fragment);
    			t = space();
    			attr_dev(li, "class", li_class_value = "" + (null_to_empty(/*item*/ ctx[4].classes?.join(' ')) + " svelte-1u812xz"));
    			attr_dev(li, "style", li_style_value = getCss(/*item*/ ctx[4].theme));
    			add_location(li, file$3, 26, 4, 731);
    			this.first = li;
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, li, anchor);
    			mount_component(toastitem, li, null);
    			append_dev(li, t);
    			current = true;
    		},
    		p: function update(new_ctx, dirty) {
    			ctx = new_ctx;
    			const toastitem_changes = {};
    			if (dirty & /*items*/ 1) toastitem_changes.item = /*item*/ ctx[4];
    			toastitem.$set(toastitem_changes);

    			if (!current || dirty & /*items*/ 1 && li_class_value !== (li_class_value = "" + (null_to_empty(/*item*/ ctx[4].classes?.join(' ')) + " svelte-1u812xz"))) {
    				attr_dev(li, "class", li_class_value);
    			}

    			if (!current || dirty & /*items*/ 1 && li_style_value !== (li_style_value = getCss(/*item*/ ctx[4].theme))) {
    				attr_dev(li, "style", li_style_value);
    			}
    		},
    		r: function measure() {
    			rect = li.getBoundingClientRect();
    		},
    		f: function fix() {
    			fix_position(li);
    			stop_animation();
    			add_transform(li, rect);
    		},
    		a: function animate() {
    			stop_animation();
    			stop_animation = create_animation(li, rect, flip, { duration: 200 });
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(toastitem.$$.fragment, local);

    			add_render_callback(() => {
    				if (!current) return;
    				if (li_outro) li_outro.end(1);
    				li_intro = create_in_transition(li, fly, /*item*/ ctx[4].intro);
    				li_intro.start();
    			});

    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(toastitem.$$.fragment, local);
    			if (li_intro) li_intro.invalidate();
    			li_outro = create_out_transition(li, fade, {});
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(li);
    			destroy_component(toastitem);
    			if (detaching && li_outro) li_outro.end();
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_each_block$1.name,
    		type: "each",
    		source: "(26:2) {#each items as item (item.id)}",
    		ctx
    	});

    	return block;
    }

    function create_fragment$3(ctx) {
    	let ul;
    	let each_blocks = [];
    	let each_1_lookup = new Map();
    	let current;
    	let each_value = /*items*/ ctx[0];
    	validate_each_argument(each_value);
    	const get_key = ctx => /*item*/ ctx[4].id;
    	validate_each_keys(ctx, each_value, get_each_context$1, get_key);

    	for (let i = 0; i < each_value.length; i += 1) {
    		let child_ctx = get_each_context$1(ctx, each_value, i);
    		let key = get_key(child_ctx);
    		each_1_lookup.set(key, each_blocks[i] = create_each_block$1(key, child_ctx));
    	}

    	const block = {
    		c: function create() {
    			ul = element("ul");

    			for (let i = 0; i < each_blocks.length; i += 1) {
    				each_blocks[i].c();
    			}

    			attr_dev(ul, "class", "_toastContainer svelte-1u812xz");
    			add_location(ul, file$3, 24, 0, 664);
    		},
    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, ul, anchor);

    			for (let i = 0; i < each_blocks.length; i += 1) {
    				if (each_blocks[i]) {
    					each_blocks[i].m(ul, null);
    				}
    			}

    			current = true;
    		},
    		p: function update(ctx, [dirty]) {
    			if (dirty & /*items, getCss*/ 1) {
    				each_value = /*items*/ ctx[0];
    				validate_each_argument(each_value);
    				group_outros();
    				for (let i = 0; i < each_blocks.length; i += 1) each_blocks[i].r();
    				validate_each_keys(ctx, each_value, get_each_context$1, get_key);
    				each_blocks = update_keyed_each(each_blocks, dirty, get_key, 1, ctx, each_value, each_1_lookup, ul, fix_and_outro_and_destroy_block, create_each_block$1, null, get_each_context$1);
    				for (let i = 0; i < each_blocks.length; i += 1) each_blocks[i].a();
    				check_outros();
    			}
    		},
    		i: function intro(local) {
    			if (current) return;

    			for (let i = 0; i < each_value.length; i += 1) {
    				transition_in(each_blocks[i]);
    			}

    			current = true;
    		},
    		o: function outro(local) {
    			for (let i = 0; i < each_blocks.length; i += 1) {
    				transition_out(each_blocks[i]);
    			}

    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(ul);

    			for (let i = 0; i < each_blocks.length; i += 1) {
    				each_blocks[i].d();
    			}
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_fragment$3.name,
    		type: "component",
    		source: "",
    		ctx
    	});

    	return block;
    }

    function getCss(theme) {
    	return theme
    	? Object.keys(theme).reduce((a, c) => `${a}${c}:${theme[c]};`, '')
    	: undefined;
    }

    function instance$3($$self, $$props, $$invalidate) {
    	let $toast;
    	validate_store(toast, 'toast');
    	component_subscribe($$self, toast, $$value => $$invalidate(3, $toast = $$value));
    	let { $$slots: slots = {}, $$scope } = $$props;
    	validate_slots('SvelteToast', slots, []);
    	let { options = {} } = $$props;
    	let { target = 'default' } = $$props;

    	/** @type {import('./stores.js').SvelteToastOptions[]} */
    	let items = [];

    	const writable_props = ['options', 'target'];

    	Object_1.keys($$props).forEach(key => {
    		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<SvelteToast> was created with unknown prop '${key}'`);
    	});

    	$$self.$$set = $$props => {
    		if ('options' in $$props) $$invalidate(1, options = $$props.options);
    		if ('target' in $$props) $$invalidate(2, target = $$props.target);
    	};

    	$$self.$capture_state = () => ({
    		fade,
    		fly,
    		flip,
    		toast,
    		ToastItem,
    		options,
    		target,
    		items,
    		getCss,
    		$toast
    	});

    	$$self.$inject_state = $$props => {
    		if ('options' in $$props) $$invalidate(1, options = $$props.options);
    		if ('target' in $$props) $$invalidate(2, target = $$props.target);
    		if ('items' in $$props) $$invalidate(0, items = $$props.items);
    	};

    	if ($$props && "$$inject" in $$props) {
    		$$self.$inject_state($$props.$$inject);
    	}

    	$$self.$$.update = () => {
    		if ($$self.$$.dirty & /*target, options*/ 6) {
    			toast._init(target, options);
    		}

    		if ($$self.$$.dirty & /*$toast, target*/ 12) {
    			$$invalidate(0, items = $toast.filter(i => i.target === target));
    		}
    	};

    	return [items, options, target, $toast];
    }

    class SvelteToast extends SvelteComponentDev {
    	constructor(options) {
    		super(options);
    		init(this, options, instance$3, create_fragment$3, safe_not_equal, { options: 1, target: 2 });

    		dispatch_dev("SvelteRegisterComponent", {
    			component: this,
    			tagName: "SvelteToast",
    			options,
    			id: create_fragment$3.name
    		});
    	}

    	get options() {
    		throw new Error("<SvelteToast>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set options(value) {
    		throw new Error("<SvelteToast>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get target() {
    		throw new Error("<SvelteToast>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set target(value) {
    		throw new Error("<SvelteToast>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}
    }

    /* src\components\RightInput.svelte generated by Svelte v3.59.2 */
    const file$2 = "src\\components\\RightInput.svelte";

    function get_each_context(ctx, list, i) {
    	const child_ctx = ctx.slice();
    	child_ctx[6] = list[i];
    	return child_ctx;
    }

    function get_each_context_1(ctx, list, i) {
    	const child_ctx = ctx.slice();
    	child_ctx[6] = list[i];
    	return child_ctx;
    }

    // (30:9) {#each orm as option}
    function create_each_block_1(ctx) {
    	let option_1;
    	let t_value = /*option*/ ctx[6].view + "";
    	let t;
    	let option_1_value_value;

    	const block = {
    		c: function create() {
    			option_1 = element("option");
    			t = text(t_value);
    			option_1.__value = option_1_value_value = /*option*/ ctx[6].value;
    			option_1.value = option_1.__value;
    			add_location(option_1, file$2, 30, 10, 764);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, option_1, anchor);
    			append_dev(option_1, t);
    		},
    		p: function update(ctx, dirty) {
    			if (dirty & /*orm*/ 8 && t_value !== (t_value = /*option*/ ctx[6].view + "")) set_data_dev(t, t_value);

    			if (dirty & /*orm*/ 8 && option_1_value_value !== (option_1_value_value = /*option*/ ctx[6].value)) {
    				prop_dev(option_1, "__value", option_1_value_value);
    				option_1.value = option_1.__value;
    			}
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(option_1);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_each_block_1.name,
    		type: "each",
    		source: "(30:9) {#each orm as option}",
    		ctx
    	});

    	return block;
    }

    // (42:9) {#each fieldname as option}
    function create_each_block(ctx) {
    	let option_1;
    	let t_value = /*option*/ ctx[6].view + "";
    	let t;
    	let option_1_value_value;
    	let option_1_selected_value;

    	const block = {
    		c: function create() {
    			option_1 = element("option");
    			t = text(t_value);
    			option_1.__value = option_1_value_value = /*option*/ ctx[6].value;
    			option_1.value = option_1.__value;
    			option_1.selected = option_1_selected_value = /*option*/ ctx[6].selected;
    			add_location(option_1, file$2, 42, 10, 1177);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, option_1, anchor);
    			append_dev(option_1, t);
    		},
    		p: function update(ctx, dirty) {
    			if (dirty & /*fieldname*/ 16 && t_value !== (t_value = /*option*/ ctx[6].view + "")) set_data_dev(t, t_value);

    			if (dirty & /*fieldname*/ 16 && option_1_value_value !== (option_1_value_value = /*option*/ ctx[6].value)) {
    				prop_dev(option_1, "__value", option_1_value_value);
    				option_1.value = option_1.__value;
    			}

    			if (dirty & /*fieldname*/ 16 && option_1_selected_value !== (option_1_selected_value = /*option*/ ctx[6].selected)) {
    				prop_dev(option_1, "selected", option_1_selected_value);
    			}
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(option_1);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_each_block.name,
    		type: "each",
    		source: "(42:9) {#each fieldname as option}",
    		ctx
    	});

    	return block;
    }

    function create_fragment$2(ctx) {
    	let main;
    	let div1;
    	let div0;
    	let select0;
    	let t0;
    	let select1;
    	let t1;
    	let button;
    	let i;
    	let t3;
    	let br;
    	let t4;
    	let textarea;
    	let t5;
    	let sveltetoast;
    	let current;
    	let mounted;
    	let dispose;
    	let each_value_1 = /*orm*/ ctx[3];
    	validate_each_argument(each_value_1);
    	let each_blocks_1 = [];

    	for (let i = 0; i < each_value_1.length; i += 1) {
    		each_blocks_1[i] = create_each_block_1(get_each_context_1(ctx, each_value_1, i));
    	}

    	let each_value = /*fieldname*/ ctx[4];
    	validate_each_argument(each_value);
    	let each_blocks = [];

    	for (let i = 0; i < each_value.length; i += 1) {
    		each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
    	}

    	sveltetoast = new SvelteToast({
    			props: { option: /*option*/ ctx[6] },
    			$$inline: true
    		});

    	const block = {
    		c: function create() {
    			main = element("main");
    			div1 = element("div");
    			div0 = element("div");
    			select0 = element("select");

    			for (let i = 0; i < each_blocks_1.length; i += 1) {
    				each_blocks_1[i].c();
    			}

    			t0 = space();
    			select1 = element("select");

    			for (let i = 0; i < each_blocks.length; i += 1) {
    				each_blocks[i].c();
    			}

    			t1 = space();
    			button = element("button");
    			i = element("i");
    			i.textContent = "";
    			t3 = space();
    			br = element("br");
    			t4 = space();
    			textarea = element("textarea");
    			t5 = space();
    			create_component(sveltetoast.$$.fragment);
    			attr_dev(select0, "id", "right-select");
    			if (/*selectedOrm*/ ctx[0] === void 0) add_render_callback(() => /*select0_change_handler*/ ctx[7].call(select0));
    			add_location(select0, file$2, 22, 6, 525);
    			attr_dev(select1, "id", "right-select-fieldname");
    			if (/*selectedFieldname*/ ctx[1] === void 0) add_render_callback(() => /*select1_change_handler*/ ctx[9].call(select1));
    			add_location(select1, file$2, 34, 6, 904);
    			set_style(i, "font-size", "24px");
    			attr_dev(i, "class", "fa");
    			add_location(i, file$2, 48, 9, 1372);
    			add_location(button, file$2, 47, 6, 1323);
    			add_location(br, file$2, 50, 6, 1446);
    			textarea.readOnly = true;
    			attr_dev(textarea, "class", "top-textarea svelte-kkkve3");
    			textarea.value = /*rightText*/ ctx[2];
    			add_location(textarea, file$2, 51, 6, 1460);
    			attr_dev(div0, "class", "right-inner svelte-kkkve3");
    			add_location(div0, file$2, 20, 4, 445);
    			attr_dev(div1, "class", "right svelte-kkkve3");
    			add_location(div1, file$2, 19, 2, 420);
    			add_location(main, file$2, 18, 0, 410);
    		},
    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, main, anchor);
    			append_dev(main, div1);
    			append_dev(div1, div0);
    			append_dev(div0, select0);

    			for (let i = 0; i < each_blocks_1.length; i += 1) {
    				if (each_blocks_1[i]) {
    					each_blocks_1[i].m(select0, null);
    				}
    			}

    			select_option(select0, /*selectedOrm*/ ctx[0], true);
    			append_dev(div0, t0);
    			append_dev(div0, select1);

    			for (let i = 0; i < each_blocks.length; i += 1) {
    				if (each_blocks[i]) {
    					each_blocks[i].m(select1, null);
    				}
    			}

    			select_option(select1, /*selectedFieldname*/ ctx[1], true);
    			append_dev(div0, t1);
    			append_dev(div0, button);
    			append_dev(button, i);
    			append_dev(div0, t3);
    			append_dev(div0, br);
    			append_dev(div0, t4);
    			append_dev(div0, textarea);
    			append_dev(div0, t5);
    			mount_component(sveltetoast, div0, null);
    			current = true;

    			if (!mounted) {
    				dispose = [
    					listen_dev(select0, "change", /*select0_change_handler*/ ctx[7]),
    					listen_dev(select0, "change", /*change_handler*/ ctx[8], false, false, false, false),
    					listen_dev(select1, "change", /*select1_change_handler*/ ctx[9]),
    					listen_dev(select1, "change", /*change_handler_1*/ ctx[10], false, false, false, false),
    					listen_dev(button, "click", displaySettingModel, false, false, false, false),
    					listen_dev(textarea, "click", /*click_handler*/ ctx[11], false, false, false, false)
    				];

    				mounted = true;
    			}
    		},
    		p: function update(ctx, [dirty]) {
    			if (dirty & /*orm*/ 8) {
    				each_value_1 = /*orm*/ ctx[3];
    				validate_each_argument(each_value_1);
    				let i;

    				for (i = 0; i < each_value_1.length; i += 1) {
    					const child_ctx = get_each_context_1(ctx, each_value_1, i);

    					if (each_blocks_1[i]) {
    						each_blocks_1[i].p(child_ctx, dirty);
    					} else {
    						each_blocks_1[i] = create_each_block_1(child_ctx);
    						each_blocks_1[i].c();
    						each_blocks_1[i].m(select0, null);
    					}
    				}

    				for (; i < each_blocks_1.length; i += 1) {
    					each_blocks_1[i].d(1);
    				}

    				each_blocks_1.length = each_value_1.length;
    			}

    			if (dirty & /*selectedOrm, orm*/ 9) {
    				select_option(select0, /*selectedOrm*/ ctx[0]);
    			}

    			if (dirty & /*fieldname*/ 16) {
    				each_value = /*fieldname*/ ctx[4];
    				validate_each_argument(each_value);
    				let i;

    				for (i = 0; i < each_value.length; i += 1) {
    					const child_ctx = get_each_context(ctx, each_value, i);

    					if (each_blocks[i]) {
    						each_blocks[i].p(child_ctx, dirty);
    					} else {
    						each_blocks[i] = create_each_block(child_ctx);
    						each_blocks[i].c();
    						each_blocks[i].m(select1, null);
    					}
    				}

    				for (; i < each_blocks.length; i += 1) {
    					each_blocks[i].d(1);
    				}

    				each_blocks.length = each_value.length;
    			}

    			if (dirty & /*selectedFieldname, fieldname*/ 18) {
    				select_option(select1, /*selectedFieldname*/ ctx[1]);
    			}

    			if (!current || dirty & /*rightText*/ 4) {
    				prop_dev(textarea, "value", /*rightText*/ ctx[2]);
    			}
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(sveltetoast.$$.fragment, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(sveltetoast.$$.fragment, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(main);
    			destroy_each(each_blocks_1, detaching);
    			destroy_each(each_blocks, detaching);
    			destroy_component(sveltetoast);
    			mounted = false;
    			run_all(dispose);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_fragment$2.name,
    		type: "component",
    		source: "",
    		ctx
    	});

    	return block;
    }

    function displaySettingModel() {
    	const modal = document.getElementById("modal");
    	modal.style.display = "flex";
    }

    function instance$2($$self, $$props, $$invalidate) {
    	let { $$slots: slots = {}, $$scope } = $$props;
    	validate_slots('RightInput', slots, []);
    	let { selectedOrm } = $$props;
    	let { selectedFieldname } = $$props;
    	let { rightText } = $$props;
    	let { orm } = $$props;
    	let { fieldname } = $$props;
    	let { generateORM } = $$props;
    	const option = {};

    	$$self.$$.on_mount.push(function () {
    		if (selectedOrm === undefined && !('selectedOrm' in $$props || $$self.$$.bound[$$self.$$.props['selectedOrm']])) {
    			console.warn("<RightInput> was created without expected prop 'selectedOrm'");
    		}

    		if (selectedFieldname === undefined && !('selectedFieldname' in $$props || $$self.$$.bound[$$self.$$.props['selectedFieldname']])) {
    			console.warn("<RightInput> was created without expected prop 'selectedFieldname'");
    		}

    		if (rightText === undefined && !('rightText' in $$props || $$self.$$.bound[$$self.$$.props['rightText']])) {
    			console.warn("<RightInput> was created without expected prop 'rightText'");
    		}

    		if (orm === undefined && !('orm' in $$props || $$self.$$.bound[$$self.$$.props['orm']])) {
    			console.warn("<RightInput> was created without expected prop 'orm'");
    		}

    		if (fieldname === undefined && !('fieldname' in $$props || $$self.$$.bound[$$self.$$.props['fieldname']])) {
    			console.warn("<RightInput> was created without expected prop 'fieldname'");
    		}

    		if (generateORM === undefined && !('generateORM' in $$props || $$self.$$.bound[$$self.$$.props['generateORM']])) {
    			console.warn("<RightInput> was created without expected prop 'generateORM'");
    		}
    	});

    	const writable_props = [
    		'selectedOrm',
    		'selectedFieldname',
    		'rightText',
    		'orm',
    		'fieldname',
    		'generateORM'
    	];

    	Object.keys($$props).forEach(key => {
    		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<RightInput> was created with unknown prop '${key}'`);
    	});

    	function select0_change_handler() {
    		selectedOrm = select_value(this);
    		$$invalidate(0, selectedOrm);
    		$$invalidate(3, orm);
    	}

    	const change_handler = () => {
    		localStorage.setItem("selectedOrm", selectedOrm);
    		generateORM();
    	};

    	function select1_change_handler() {
    		selectedFieldname = select_value(this);
    		$$invalidate(1, selectedFieldname);
    		$$invalidate(4, fieldname);
    	}

    	const change_handler_1 = () => {
    		localStorage.setItem("selectedFieldname", selectedFieldname);
    		generateORM();
    	};

    	const click_handler = () => {
    		navigator.clipboard.writeText(rightText);
    		toast.push("copied!");
    	};

    	$$self.$$set = $$props => {
    		if ('selectedOrm' in $$props) $$invalidate(0, selectedOrm = $$props.selectedOrm);
    		if ('selectedFieldname' in $$props) $$invalidate(1, selectedFieldname = $$props.selectedFieldname);
    		if ('rightText' in $$props) $$invalidate(2, rightText = $$props.rightText);
    		if ('orm' in $$props) $$invalidate(3, orm = $$props.orm);
    		if ('fieldname' in $$props) $$invalidate(4, fieldname = $$props.fieldname);
    		if ('generateORM' in $$props) $$invalidate(5, generateORM = $$props.generateORM);
    	};

    	$$self.$capture_state = () => ({
    		selectedOrm,
    		selectedFieldname,
    		rightText,
    		orm,
    		fieldname,
    		generateORM,
    		SvelteToast,
    		toast,
    		option,
    		displaySettingModel
    	});

    	$$self.$inject_state = $$props => {
    		if ('selectedOrm' in $$props) $$invalidate(0, selectedOrm = $$props.selectedOrm);
    		if ('selectedFieldname' in $$props) $$invalidate(1, selectedFieldname = $$props.selectedFieldname);
    		if ('rightText' in $$props) $$invalidate(2, rightText = $$props.rightText);
    		if ('orm' in $$props) $$invalidate(3, orm = $$props.orm);
    		if ('fieldname' in $$props) $$invalidate(4, fieldname = $$props.fieldname);
    		if ('generateORM' in $$props) $$invalidate(5, generateORM = $$props.generateORM);
    	};

    	if ($$props && "$$inject" in $$props) {
    		$$self.$inject_state($$props.$$inject);
    	}

    	return [
    		selectedOrm,
    		selectedFieldname,
    		rightText,
    		orm,
    		fieldname,
    		generateORM,
    		option,
    		select0_change_handler,
    		change_handler,
    		select1_change_handler,
    		change_handler_1,
    		click_handler
    	];
    }

    class RightInput extends SvelteComponentDev {
    	constructor(options) {
    		super(options);

    		init(this, options, instance$2, create_fragment$2, safe_not_equal, {
    			selectedOrm: 0,
    			selectedFieldname: 1,
    			rightText: 2,
    			orm: 3,
    			fieldname: 4,
    			generateORM: 5
    		});

    		dispatch_dev("SvelteRegisterComponent", {
    			component: this,
    			tagName: "RightInput",
    			options,
    			id: create_fragment$2.name
    		});
    	}

    	get selectedOrm() {
    		throw new Error("<RightInput>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set selectedOrm(value) {
    		throw new Error("<RightInput>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get selectedFieldname() {
    		throw new Error("<RightInput>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set selectedFieldname(value) {
    		throw new Error("<RightInput>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get rightText() {
    		throw new Error("<RightInput>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set rightText(value) {
    		throw new Error("<RightInput>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get orm() {
    		throw new Error("<RightInput>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set orm(value) {
    		throw new Error("<RightInput>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get fieldname() {
    		throw new Error("<RightInput>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set fieldname(value) {
    		throw new Error("<RightInput>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get generateORM() {
    		throw new Error("<RightInput>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set generateORM(value) {
    		throw new Error("<RightInput>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}
    }

    /* src\components\SettingModal.svelte generated by Svelte v3.59.2 */

    const file$1 = "src\\components\\SettingModal.svelte";

    function create_fragment$1(ctx) {
    	let main;
    	let div9;
    	let div8;
    	let div0;
    	let h2;
    	let t1;
    	let div1;
    	let button;
    	let t3;
    	let div7;
    	let div2;
    	let t4;
    	let span0;
    	let input0;
    	let input1;
    	let t5;
    	let div3;
    	let t6;
    	let span1;
    	let input2;
    	let input3;
    	let t7;
    	let div4;
    	let t8;
    	let span2;
    	let input4;
    	let input5;
    	let t9;
    	let div5;
    	let t10;
    	let span3;
    	let input6;
    	let input7;
    	let t11;
    	let div6;
    	let t12;
    	let span4;
    	let input8;
    	let input9;
    	let mounted;
    	let dispose;

    	const block = {
    		c: function create() {
    			main = element("main");
    			div9 = element("div");
    			div8 = element("div");
    			div0 = element("div");
    			h2 = element("h2");
    			h2.textContent = "Setting";
    			t1 = space();
    			div1 = element("div");
    			button = element("button");
    			button.textContent = "X";
    			t3 = space();
    			div7 = element("div");
    			div2 = element("div");
    			t4 = text("Primary Key\r\n\r\n          ");
    			span0 = element("span");
    			input0 = element("input");
    			input1 = element("input");
    			t5 = space();
    			div3 = element("div");
    			t6 = text("CreatedAt ");
    			span1 = element("span");
    			input2 = element("input");
    			input3 = element("input");
    			t7 = space();
    			div4 = element("div");
    			t8 = text("UpdatedAt ");
    			span2 = element("span");
    			input4 = element("input");
    			input5 = element("input");
    			t9 = space();
    			div5 = element("div");
    			t10 = text("DeletedAt ");
    			span3 = element("span");
    			input6 = element("input");
    			input7 = element("input");
    			t11 = space();
    			div6 = element("div");
    			t12 = text("Schema ");
    			span4 = element("span");
    			input8 = element("input");
    			input9 = element("input");
    			attr_dev(h2, "class", "svelte-1fwzc0d");
    			add_location(h2, file$1, 87, 8, 2046);
    			attr_dev(div0, "class", "title svelte-1fwzc0d");
    			add_location(div0, file$1, 86, 6, 2017);
    			attr_dev(button, "class", "svelte-1fwzc0d");
    			add_location(button, file$1, 90, 8, 2118);
    			attr_dev(div1, "class", "close-area svelte-1fwzc0d");
    			add_location(div1, file$1, 89, 6, 2084);
    			attr_dev(input0, "class", "checkbox svelte-1fwzc0d");
    			attr_dev(input0, "id", "pk-check");
    			attr_dev(input0, "type", "checkbox");
    			input0.checked = true;
    			add_location(input0, file$1, 97, 12, 2302);
    			attr_dev(input1, "class", "input-text svelte-1fwzc0d");
    			attr_dev(input1, "id", "pk");
    			attr_dev(input1, "type", "text");
    			input1.disabled = /*primaryKeyDisable*/ ctx[5];
    			add_location(input1, file$1, 103, 14, 2485);
    			add_location(span0, file$1, 96, 10, 2282);
    			attr_dev(div2, "class", "content-item svelte-1fwzc0d");
    			add_location(div2, file$1, 93, 8, 2219);
    			attr_dev(input2, "class", "checkbox svelte-1fwzc0d");
    			attr_dev(input2, "id", "created-at-check");
    			attr_dev(input2, "type", "checkbox");
    			input2.checked = true;
    			add_location(input2, file$1, 115, 13, 2789);
    			attr_dev(input3, "class", "input-text svelte-1fwzc0d");
    			attr_dev(input3, "id", "created-at");
    			attr_dev(input3, "type", "text");
    			input3.disabled = /*createdAtDisable*/ ctx[6];
    			add_location(input3, file$1, 121, 14, 2979);
    			add_location(span1, file$1, 114, 20, 2769);
    			attr_dev(div3, "class", "content-item svelte-1fwzc0d");
    			add_location(div3, file$1, 113, 8, 2721);
    			attr_dev(input4, "class", "checkbox svelte-1fwzc0d");
    			attr_dev(input4, "id", "updated-at-check");
    			attr_dev(input4, "type", "checkbox");
    			input4.checked = true;
    			add_location(input4, file$1, 133, 13, 3289);
    			attr_dev(input5, "class", "input-text svelte-1fwzc0d");
    			attr_dev(input5, "id", "updated-at");
    			attr_dev(input5, "type", "text");
    			input5.disabled = /*updatedAtDisable*/ ctx[7];
    			add_location(input5, file$1, 139, 14, 3479);
    			add_location(span2, file$1, 132, 20, 3269);
    			attr_dev(div4, "class", "content-item svelte-1fwzc0d");
    			add_location(div4, file$1, 131, 8, 3221);
    			attr_dev(input6, "id", "deleted-at-check");
    			attr_dev(input6, "class", "checkbox svelte-1fwzc0d");
    			attr_dev(input6, "type", "checkbox");
    			input6.checked = true;
    			add_location(input6, file$1, 151, 13, 3789);
    			attr_dev(input7, "class", "input-text svelte-1fwzc0d");
    			attr_dev(input7, "id", "deleted-at");
    			attr_dev(input7, "type", "text");
    			input7.disabled = /*deletedAtDisable*/ ctx[8];
    			add_location(input7, file$1, 157, 14, 3979);
    			add_location(span3, file$1, 150, 20, 3769);
    			attr_dev(div5, "class", "content-item svelte-1fwzc0d");
    			add_location(div5, file$1, 149, 8, 3721);
    			attr_dev(input8, "class", "checkbox svelte-1fwzc0d");
    			attr_dev(input8, "id", "schema-name-check");
    			attr_dev(input8, "type", "checkbox");
    			input8.checked = true;
    			add_location(input8, file$1, 169, 13, 4286);
    			attr_dev(input9, "class", "input-text svelte-1fwzc0d");
    			attr_dev(input9, "id", "schema-name");
    			attr_dev(input9, "type", "text");
    			input9.disabled = /*schemaNameDisable*/ ctx[9];
    			add_location(input9, file$1, 175, 14, 4474);
    			add_location(span4, file$1, 168, 17, 4266);
    			attr_dev(div6, "class", "content-item svelte-1fwzc0d");
    			add_location(div6, file$1, 167, 8, 4221);
    			attr_dev(div7, "class", "content svelte-1fwzc0d");
    			add_location(div7, file$1, 92, 6, 2188);
    			attr_dev(div8, "class", "modal-window svelte-1fwzc0d");
    			add_location(div8, file$1, 85, 4, 1983);
    			attr_dev(div9, "id", "modal");
    			attr_dev(div9, "class", "modal-overlay svelte-1fwzc0d");
    			add_location(div9, file$1, 84, 2, 1939);
    			add_location(main, file$1, 83, 0, 1912);
    		},
    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, main, anchor);
    			append_dev(main, div9);
    			append_dev(div9, div8);
    			append_dev(div8, div0);
    			append_dev(div0, h2);
    			append_dev(div8, t1);
    			append_dev(div8, div1);
    			append_dev(div1, button);
    			append_dev(div8, t3);
    			append_dev(div8, div7);
    			append_dev(div7, div2);
    			append_dev(div2, t4);
    			append_dev(div2, span0);
    			append_dev(span0, input0);
    			append_dev(span0, input1);
    			set_input_value(input1, /*primaryKey*/ ctx[0]);
    			append_dev(div7, t5);
    			append_dev(div7, div3);
    			append_dev(div3, t6);
    			append_dev(div3, span1);
    			append_dev(span1, input2);
    			append_dev(span1, input3);
    			set_input_value(input3, /*createdAt*/ ctx[1]);
    			append_dev(div7, t7);
    			append_dev(div7, div4);
    			append_dev(div4, t8);
    			append_dev(div4, span2);
    			append_dev(span2, input4);
    			append_dev(span2, input5);
    			set_input_value(input5, /*updatedAt*/ ctx[2]);
    			append_dev(div7, t9);
    			append_dev(div7, div5);
    			append_dev(div5, t10);
    			append_dev(div5, span3);
    			append_dev(span3, input6);
    			append_dev(span3, input7);
    			set_input_value(input7, /*deletedAt*/ ctx[3]);
    			append_dev(div7, t11);
    			append_dev(div7, div6);
    			append_dev(div6, t12);
    			append_dev(div6, span4);
    			append_dev(span4, input8);
    			append_dev(span4, input9);
    			set_input_value(input9, /*schemaName*/ ctx[4]);

    			if (!mounted) {
    				dispose = [
    					listen_dev(button, "click", removeSettingModel, false, false, false, false),
    					listen_dev(input0, "change", /*primaryKeyOnChange*/ ctx[10], false, false, false, false),
    					listen_dev(input1, "input", /*input1_input_handler*/ ctx[15]),
    					listen_dev(input2, "change", /*createdAtOnChange*/ ctx[11], false, false, false, false),
    					listen_dev(input3, "input", /*input3_input_handler*/ ctx[16]),
    					listen_dev(input4, "change", /*updatedAtOnChange*/ ctx[12], false, false, false, false),
    					listen_dev(input5, "input", /*input5_input_handler*/ ctx[17]),
    					listen_dev(input6, "change", /*deletedAtOnChange*/ ctx[13], false, false, false, false),
    					listen_dev(input7, "input", /*input7_input_handler*/ ctx[18]),
    					listen_dev(input8, "change", /*SchemaOnChange*/ ctx[14], false, false, false, false),
    					listen_dev(input9, "input", /*input9_input_handler*/ ctx[19]),
    					listen_dev(main, "load", onLoad$1, false, false, false, false)
    				];

    				mounted = true;
    			}
    		},
    		p: function update(ctx, [dirty]) {
    			if (dirty & /*primaryKeyDisable*/ 32) {
    				prop_dev(input1, "disabled", /*primaryKeyDisable*/ ctx[5]);
    			}

    			if (dirty & /*primaryKey*/ 1 && input1.value !== /*primaryKey*/ ctx[0]) {
    				set_input_value(input1, /*primaryKey*/ ctx[0]);
    			}

    			if (dirty & /*createdAtDisable*/ 64) {
    				prop_dev(input3, "disabled", /*createdAtDisable*/ ctx[6]);
    			}

    			if (dirty & /*createdAt*/ 2 && input3.value !== /*createdAt*/ ctx[1]) {
    				set_input_value(input3, /*createdAt*/ ctx[1]);
    			}

    			if (dirty & /*updatedAtDisable*/ 128) {
    				prop_dev(input5, "disabled", /*updatedAtDisable*/ ctx[7]);
    			}

    			if (dirty & /*updatedAt*/ 4 && input5.value !== /*updatedAt*/ ctx[2]) {
    				set_input_value(input5, /*updatedAt*/ ctx[2]);
    			}

    			if (dirty & /*deletedAtDisable*/ 256) {
    				prop_dev(input7, "disabled", /*deletedAtDisable*/ ctx[8]);
    			}

    			if (dirty & /*deletedAt*/ 8 && input7.value !== /*deletedAt*/ ctx[3]) {
    				set_input_value(input7, /*deletedAt*/ ctx[3]);
    			}

    			if (dirty & /*schemaNameDisable*/ 512) {
    				prop_dev(input9, "disabled", /*schemaNameDisable*/ ctx[9]);
    			}

    			if (dirty & /*schemaName*/ 16 && input9.value !== /*schemaName*/ ctx[4]) {
    				set_input_value(input9, /*schemaName*/ ctx[4]);
    			}
    		},
    		i: noop,
    		o: noop,
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(main);
    			mounted = false;
    			run_all(dispose);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_fragment$1.name,
    		type: "component",
    		source: "",
    		ctx
    	});

    	return block;
    }

    function onLoad$1() {
    	
    }

    function removeSettingModel() {
    	const modal = document.getElementById("modal");
    	modal.style.display = "none";
    }

    function instance$1($$self, $$props, $$invalidate) {
    	let { $$slots: slots = {}, $$scope } = $$props;
    	validate_slots('SettingModal', slots, []);
    	let { primaryKey } = $$props;
    	let { createdAt } = $$props;
    	let { updatedAt } = $$props;
    	let { deletedAt } = $$props;
    	let { schemaName } = $$props;
    	let primaryKeyKeep;
    	let createdAtKeep;
    	let updatedAtKeep;
    	let deletedAtKeep;
    	let schemaNameKeep;
    	let primaryKeyDisable = false;
    	let createdAtDisable = false;
    	let updatedAtDisable = false;
    	let deletedAtDisable = false;
    	let schemaNameDisable = false;

    	function primaryKeyOnChange(value) {
    		if (value.target.checked) {
    			$$invalidate(0, primaryKey = primaryKeyKeep);
    			$$invalidate(5, primaryKeyDisable = false);
    		} else {
    			primaryKeyKeep = primaryKey;
    			$$invalidate(0, primaryKey = null);
    			$$invalidate(5, primaryKeyDisable = true);
    		}
    	}

    	function createdAtOnChange(value) {
    		if (value.target.checked) {
    			$$invalidate(1, createdAt = createdAtKeep);
    			$$invalidate(6, createdAtDisable = false);
    		} else {
    			createdAtKeep = createdAt;
    			$$invalidate(1, createdAt = null);
    			$$invalidate(6, createdAtDisable = true);
    		}
    	}

    	function updatedAtOnChange(value) {
    		if (value.target.checked) {
    			$$invalidate(2, updatedAt = updatedAtKeep);
    			$$invalidate(7, updatedAtDisable = false);
    		} else {
    			updatedAtKeep = updatedAt;
    			$$invalidate(2, updatedAt = null);
    			$$invalidate(7, updatedAtDisable = true);
    		}
    	}

    	function deletedAtOnChange(value) {
    		if (value.target.checked) {
    			$$invalidate(3, deletedAt = deletedAtKeep);
    			$$invalidate(8, deletedAtDisable = false);
    		} else {
    			deletedAtKeep = deletedAt;
    			$$invalidate(3, deletedAt = null);
    			$$invalidate(8, deletedAtDisable = true);
    		}
    	}

    	function SchemaOnChange(value) {
    		if (value.target.checked) {
    			$$invalidate(4, schemaName = schemaNameKeep);
    			$$invalidate(9, schemaNameDisable = false);
    		} else {
    			schemaNameKeep = schemaName;
    			$$invalidate(4, schemaName = null);
    			$$invalidate(9, schemaNameDisable = true);
    		}
    	}

    	$$self.$$.on_mount.push(function () {
    		if (primaryKey === undefined && !('primaryKey' in $$props || $$self.$$.bound[$$self.$$.props['primaryKey']])) {
    			console.warn("<SettingModal> was created without expected prop 'primaryKey'");
    		}

    		if (createdAt === undefined && !('createdAt' in $$props || $$self.$$.bound[$$self.$$.props['createdAt']])) {
    			console.warn("<SettingModal> was created without expected prop 'createdAt'");
    		}

    		if (updatedAt === undefined && !('updatedAt' in $$props || $$self.$$.bound[$$self.$$.props['updatedAt']])) {
    			console.warn("<SettingModal> was created without expected prop 'updatedAt'");
    		}

    		if (deletedAt === undefined && !('deletedAt' in $$props || $$self.$$.bound[$$self.$$.props['deletedAt']])) {
    			console.warn("<SettingModal> was created without expected prop 'deletedAt'");
    		}

    		if (schemaName === undefined && !('schemaName' in $$props || $$self.$$.bound[$$self.$$.props['schemaName']])) {
    			console.warn("<SettingModal> was created without expected prop 'schemaName'");
    		}
    	});

    	const writable_props = ['primaryKey', 'createdAt', 'updatedAt', 'deletedAt', 'schemaName'];

    	Object.keys($$props).forEach(key => {
    		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<SettingModal> was created with unknown prop '${key}'`);
    	});

    	function input1_input_handler() {
    		primaryKey = this.value;
    		$$invalidate(0, primaryKey);
    	}

    	function input3_input_handler() {
    		createdAt = this.value;
    		$$invalidate(1, createdAt);
    	}

    	function input5_input_handler() {
    		updatedAt = this.value;
    		$$invalidate(2, updatedAt);
    	}

    	function input7_input_handler() {
    		deletedAt = this.value;
    		$$invalidate(3, deletedAt);
    	}

    	function input9_input_handler() {
    		schemaName = this.value;
    		$$invalidate(4, schemaName);
    	}

    	$$self.$$set = $$props => {
    		if ('primaryKey' in $$props) $$invalidate(0, primaryKey = $$props.primaryKey);
    		if ('createdAt' in $$props) $$invalidate(1, createdAt = $$props.createdAt);
    		if ('updatedAt' in $$props) $$invalidate(2, updatedAt = $$props.updatedAt);
    		if ('deletedAt' in $$props) $$invalidate(3, deletedAt = $$props.deletedAt);
    		if ('schemaName' in $$props) $$invalidate(4, schemaName = $$props.schemaName);
    	};

    	$$self.$capture_state = () => ({
    		primaryKey,
    		createdAt,
    		updatedAt,
    		deletedAt,
    		schemaName,
    		primaryKeyKeep,
    		createdAtKeep,
    		updatedAtKeep,
    		deletedAtKeep,
    		schemaNameKeep,
    		primaryKeyDisable,
    		createdAtDisable,
    		updatedAtDisable,
    		deletedAtDisable,
    		schemaNameDisable,
    		onLoad: onLoad$1,
    		removeSettingModel,
    		primaryKeyOnChange,
    		createdAtOnChange,
    		updatedAtOnChange,
    		deletedAtOnChange,
    		SchemaOnChange
    	});

    	$$self.$inject_state = $$props => {
    		if ('primaryKey' in $$props) $$invalidate(0, primaryKey = $$props.primaryKey);
    		if ('createdAt' in $$props) $$invalidate(1, createdAt = $$props.createdAt);
    		if ('updatedAt' in $$props) $$invalidate(2, updatedAt = $$props.updatedAt);
    		if ('deletedAt' in $$props) $$invalidate(3, deletedAt = $$props.deletedAt);
    		if ('schemaName' in $$props) $$invalidate(4, schemaName = $$props.schemaName);
    		if ('primaryKeyKeep' in $$props) primaryKeyKeep = $$props.primaryKeyKeep;
    		if ('createdAtKeep' in $$props) createdAtKeep = $$props.createdAtKeep;
    		if ('updatedAtKeep' in $$props) updatedAtKeep = $$props.updatedAtKeep;
    		if ('deletedAtKeep' in $$props) deletedAtKeep = $$props.deletedAtKeep;
    		if ('schemaNameKeep' in $$props) schemaNameKeep = $$props.schemaNameKeep;
    		if ('primaryKeyDisable' in $$props) $$invalidate(5, primaryKeyDisable = $$props.primaryKeyDisable);
    		if ('createdAtDisable' in $$props) $$invalidate(6, createdAtDisable = $$props.createdAtDisable);
    		if ('updatedAtDisable' in $$props) $$invalidate(7, updatedAtDisable = $$props.updatedAtDisable);
    		if ('deletedAtDisable' in $$props) $$invalidate(8, deletedAtDisable = $$props.deletedAtDisable);
    		if ('schemaNameDisable' in $$props) $$invalidate(9, schemaNameDisable = $$props.schemaNameDisable);
    	};

    	if ($$props && "$$inject" in $$props) {
    		$$self.$inject_state($$props.$$inject);
    	}

    	return [
    		primaryKey,
    		createdAt,
    		updatedAt,
    		deletedAt,
    		schemaName,
    		primaryKeyDisable,
    		createdAtDisable,
    		updatedAtDisable,
    		deletedAtDisable,
    		schemaNameDisable,
    		primaryKeyOnChange,
    		createdAtOnChange,
    		updatedAtOnChange,
    		deletedAtOnChange,
    		SchemaOnChange,
    		input1_input_handler,
    		input3_input_handler,
    		input5_input_handler,
    		input7_input_handler,
    		input9_input_handler
    	];
    }

    class SettingModal extends SvelteComponentDev {
    	constructor(options) {
    		super(options);

    		init(this, options, instance$1, create_fragment$1, safe_not_equal, {
    			primaryKey: 0,
    			createdAt: 1,
    			updatedAt: 2,
    			deletedAt: 3,
    			schemaName: 4
    		});

    		dispatch_dev("SvelteRegisterComponent", {
    			component: this,
    			tagName: "SettingModal",
    			options,
    			id: create_fragment$1.name
    		});
    	}

    	get primaryKey() {
    		throw new Error("<SettingModal>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set primaryKey(value) {
    		throw new Error("<SettingModal>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get createdAt() {
    		throw new Error("<SettingModal>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set createdAt(value) {
    		throw new Error("<SettingModal>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get updatedAt() {
    		throw new Error("<SettingModal>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set updatedAt(value) {
    		throw new Error("<SettingModal>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get deletedAt() {
    		throw new Error("<SettingModal>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set deletedAt(value) {
    		throw new Error("<SettingModal>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get schemaName() {
    		throw new Error("<SettingModal>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set schemaName(value) {
    		throw new Error("<SettingModal>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}
    }

    /* src\App.svelte generated by Svelte v3.59.2 */
    const file = "src\\App.svelte";

    function create_fragment(ctx) {
    	let main;
    	let hr;
    	let t0;
    	let div0;
    	let leftinput;
    	let updating_database;
    	let updating_selectedDatabase;
    	let updating_leftText;
    	let t1;
    	let rightinput;
    	let updating_orm;
    	let updating_selectedOrm;
    	let updating_rightText;
    	let updating_selectedFieldname;
    	let updating_fieldname;
    	let t2;
    	let div1;
    	let t3;
    	let br;
    	let t4;
    	let textarea;
    	let t5;
    	let settingmodal;
    	let updating_primaryKey;
    	let updating_createdAt;
    	let updating_updatedAt;
    	let updating_deletedAt;
    	let updating_schemaName;
    	let t6;
    	let footer;
    	let current;
    	let mounted;
    	let dispose;

    	function leftinput_database_binding(value) {
    		/*leftinput_database_binding*/ ctx[16](value);
    	}

    	function leftinput_selectedDatabase_binding(value) {
    		/*leftinput_selectedDatabase_binding*/ ctx[17](value);
    	}

    	function leftinput_leftText_binding(value) {
    		/*leftinput_leftText_binding*/ ctx[18](value);
    	}

    	let leftinput_props = { generateORM: /*generateORM*/ ctx[14] };

    	if (/*database*/ ctx[0] !== void 0) {
    		leftinput_props.database = /*database*/ ctx[0];
    	}

    	if (/*selectedDatabase*/ ctx[3] !== void 0) {
    		leftinput_props.selectedDatabase = /*selectedDatabase*/ ctx[3];
    	}

    	if (/*leftText*/ ctx[6] !== void 0) {
    		leftinput_props.leftText = /*leftText*/ ctx[6];
    	}

    	leftinput = new LeftInput({ props: leftinput_props, $$inline: true });
    	binding_callbacks.push(() => bind(leftinput, 'database', leftinput_database_binding));
    	binding_callbacks.push(() => bind(leftinput, 'selectedDatabase', leftinput_selectedDatabase_binding));
    	binding_callbacks.push(() => bind(leftinput, 'leftText', leftinput_leftText_binding));

    	function rightinput_orm_binding(value) {
    		/*rightinput_orm_binding*/ ctx[19](value);
    	}

    	function rightinput_selectedOrm_binding(value) {
    		/*rightinput_selectedOrm_binding*/ ctx[20](value);
    	}

    	function rightinput_rightText_binding(value) {
    		/*rightinput_rightText_binding*/ ctx[21](value);
    	}

    	function rightinput_selectedFieldname_binding(value) {
    		/*rightinput_selectedFieldname_binding*/ ctx[22](value);
    	}

    	function rightinput_fieldname_binding(value) {
    		/*rightinput_fieldname_binding*/ ctx[23](value);
    	}

    	let rightinput_props = { generateORM: /*generateORM*/ ctx[14] };

    	if (/*orm*/ ctx[1] !== void 0) {
    		rightinput_props.orm = /*orm*/ ctx[1];
    	}

    	if (/*selectedOrm*/ ctx[4] !== void 0) {
    		rightinput_props.selectedOrm = /*selectedOrm*/ ctx[4];
    	}

    	if (/*rightText*/ ctx[7] !== void 0) {
    		rightinput_props.rightText = /*rightText*/ ctx[7];
    	}

    	if (/*selectedFieldname*/ ctx[5] !== void 0) {
    		rightinput_props.selectedFieldname = /*selectedFieldname*/ ctx[5];
    	}

    	if (/*fieldname*/ ctx[2] !== void 0) {
    		rightinput_props.fieldname = /*fieldname*/ ctx[2];
    	}

    	rightinput = new RightInput({ props: rightinput_props, $$inline: true });
    	binding_callbacks.push(() => bind(rightinput, 'orm', rightinput_orm_binding));
    	binding_callbacks.push(() => bind(rightinput, 'selectedOrm', rightinput_selectedOrm_binding));
    	binding_callbacks.push(() => bind(rightinput, 'rightText', rightinput_rightText_binding));
    	binding_callbacks.push(() => bind(rightinput, 'selectedFieldname', rightinput_selectedFieldname_binding));
    	binding_callbacks.push(() => bind(rightinput, 'fieldname', rightinput_fieldname_binding));

    	function settingmodal_primaryKey_binding(value) {
    		/*settingmodal_primaryKey_binding*/ ctx[24](value);
    	}

    	function settingmodal_createdAt_binding(value) {
    		/*settingmodal_createdAt_binding*/ ctx[25](value);
    	}

    	function settingmodal_updatedAt_binding(value) {
    		/*settingmodal_updatedAt_binding*/ ctx[26](value);
    	}

    	function settingmodal_deletedAt_binding(value) {
    		/*settingmodal_deletedAt_binding*/ ctx[27](value);
    	}

    	function settingmodal_schemaName_binding(value) {
    		/*settingmodal_schemaName_binding*/ ctx[28](value);
    	}

    	let settingmodal_props = {};

    	if (/*primaryKey*/ ctx[9] !== void 0) {
    		settingmodal_props.primaryKey = /*primaryKey*/ ctx[9];
    	}

    	if (/*createdAt*/ ctx[10] !== void 0) {
    		settingmodal_props.createdAt = /*createdAt*/ ctx[10];
    	}

    	if (/*updatedAt*/ ctx[11] !== void 0) {
    		settingmodal_props.updatedAt = /*updatedAt*/ ctx[11];
    	}

    	if (/*deletedAt*/ ctx[12] !== void 0) {
    		settingmodal_props.deletedAt = /*deletedAt*/ ctx[12];
    	}

    	if (/*schemaName*/ ctx[13] !== void 0) {
    		settingmodal_props.schemaName = /*schemaName*/ ctx[13];
    	}

    	settingmodal = new SettingModal({
    			props: settingmodal_props,
    			$$inline: true
    		});

    	binding_callbacks.push(() => bind(settingmodal, 'primaryKey', settingmodal_primaryKey_binding));
    	binding_callbacks.push(() => bind(settingmodal, 'createdAt', settingmodal_createdAt_binding));
    	binding_callbacks.push(() => bind(settingmodal, 'updatedAt', settingmodal_updatedAt_binding));
    	binding_callbacks.push(() => bind(settingmodal, 'deletedAt', settingmodal_deletedAt_binding));
    	binding_callbacks.push(() => bind(settingmodal, 'schemaName', settingmodal_schemaName_binding));
    	footer = new Footer({ $$inline: true });

    	const block = {
    		c: function create() {
    			main = element("main");
    			hr = element("hr");
    			t0 = space();
    			div0 = element("div");
    			create_component(leftinput.$$.fragment);
    			t1 = space();
    			create_component(rightinput.$$.fragment);
    			t2 = space();
    			div1 = element("div");
    			t3 = text("Error Log ");
    			br = element("br");
    			t4 = space();
    			textarea = element("textarea");
    			t5 = space();
    			create_component(settingmodal.$$.fragment);
    			t6 = space();
    			create_component(footer.$$.fragment);
    			add_location(hr, file, 57, 2, 1832);
    			attr_dev(div0, "class", "top svelte-rhu95f");
    			add_location(div0, file, 58, 2, 1842);
    			add_location(br, file, 75, 14, 2185);
    			textarea.readOnly = true;
    			attr_dev(textarea, "id", "error-textarea");
    			textarea.value = /*errorLog*/ ctx[8];
    			attr_dev(textarea, "class", "svelte-rhu95f");
    			add_location(textarea, file, 76, 4, 2197);
    			attr_dev(div1, "class", "bottom svelte-rhu95f");
    			add_location(div1, file, 74, 2, 2149);
    			add_location(main, file, 56, 0, 1805);
    		},
    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, main, anchor);
    			append_dev(main, hr);
    			append_dev(main, t0);
    			append_dev(main, div0);
    			mount_component(leftinput, div0, null);
    			append_dev(div0, t1);
    			mount_component(rightinput, div0, null);
    			append_dev(main, t2);
    			append_dev(main, div1);
    			append_dev(div1, t3);
    			append_dev(div1, br);
    			append_dev(div1, t4);
    			append_dev(div1, textarea);
    			append_dev(main, t5);
    			mount_component(settingmodal, main, null);
    			append_dev(main, t6);
    			mount_component(footer, main, null);
    			current = true;

    			if (!mounted) {
    				dispose = listen_dev(main, "load", onLoad, false, false, false, false);
    				mounted = true;
    			}
    		},
    		p: function update(ctx, [dirty]) {
    			const leftinput_changes = {};

    			if (!updating_database && dirty & /*database*/ 1) {
    				updating_database = true;
    				leftinput_changes.database = /*database*/ ctx[0];
    				add_flush_callback(() => updating_database = false);
    			}

    			if (!updating_selectedDatabase && dirty & /*selectedDatabase*/ 8) {
    				updating_selectedDatabase = true;
    				leftinput_changes.selectedDatabase = /*selectedDatabase*/ ctx[3];
    				add_flush_callback(() => updating_selectedDatabase = false);
    			}

    			if (!updating_leftText && dirty & /*leftText*/ 64) {
    				updating_leftText = true;
    				leftinput_changes.leftText = /*leftText*/ ctx[6];
    				add_flush_callback(() => updating_leftText = false);
    			}

    			leftinput.$set(leftinput_changes);
    			const rightinput_changes = {};

    			if (!updating_orm && dirty & /*orm*/ 2) {
    				updating_orm = true;
    				rightinput_changes.orm = /*orm*/ ctx[1];
    				add_flush_callback(() => updating_orm = false);
    			}

    			if (!updating_selectedOrm && dirty & /*selectedOrm*/ 16) {
    				updating_selectedOrm = true;
    				rightinput_changes.selectedOrm = /*selectedOrm*/ ctx[4];
    				add_flush_callback(() => updating_selectedOrm = false);
    			}

    			if (!updating_rightText && dirty & /*rightText*/ 128) {
    				updating_rightText = true;
    				rightinput_changes.rightText = /*rightText*/ ctx[7];
    				add_flush_callback(() => updating_rightText = false);
    			}

    			if (!updating_selectedFieldname && dirty & /*selectedFieldname*/ 32) {
    				updating_selectedFieldname = true;
    				rightinput_changes.selectedFieldname = /*selectedFieldname*/ ctx[5];
    				add_flush_callback(() => updating_selectedFieldname = false);
    			}

    			if (!updating_fieldname && dirty & /*fieldname*/ 4) {
    				updating_fieldname = true;
    				rightinput_changes.fieldname = /*fieldname*/ ctx[2];
    				add_flush_callback(() => updating_fieldname = false);
    			}

    			rightinput.$set(rightinput_changes);

    			if (!current || dirty & /*errorLog*/ 256) {
    				prop_dev(textarea, "value", /*errorLog*/ ctx[8]);
    			}

    			const settingmodal_changes = {};

    			if (!updating_primaryKey && dirty & /*primaryKey*/ 512) {
    				updating_primaryKey = true;
    				settingmodal_changes.primaryKey = /*primaryKey*/ ctx[9];
    				add_flush_callback(() => updating_primaryKey = false);
    			}

    			if (!updating_createdAt && dirty & /*createdAt*/ 1024) {
    				updating_createdAt = true;
    				settingmodal_changes.createdAt = /*createdAt*/ ctx[10];
    				add_flush_callback(() => updating_createdAt = false);
    			}

    			if (!updating_updatedAt && dirty & /*updatedAt*/ 2048) {
    				updating_updatedAt = true;
    				settingmodal_changes.updatedAt = /*updatedAt*/ ctx[11];
    				add_flush_callback(() => updating_updatedAt = false);
    			}

    			if (!updating_deletedAt && dirty & /*deletedAt*/ 4096) {
    				updating_deletedAt = true;
    				settingmodal_changes.deletedAt = /*deletedAt*/ ctx[12];
    				add_flush_callback(() => updating_deletedAt = false);
    			}

    			if (!updating_schemaName && dirty & /*schemaName*/ 8192) {
    				updating_schemaName = true;
    				settingmodal_changes.schemaName = /*schemaName*/ ctx[13];
    				add_flush_callback(() => updating_schemaName = false);
    			}

    			settingmodal.$set(settingmodal_changes);
    		},
    		i: function intro(local) {
    			if (current) return;
    			transition_in(leftinput.$$.fragment, local);
    			transition_in(rightinput.$$.fragment, local);
    			transition_in(settingmodal.$$.fragment, local);
    			transition_in(footer.$$.fragment, local);
    			current = true;
    		},
    		o: function outro(local) {
    			transition_out(leftinput.$$.fragment, local);
    			transition_out(rightinput.$$.fragment, local);
    			transition_out(settingmodal.$$.fragment, local);
    			transition_out(footer.$$.fragment, local);
    			current = false;
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(main);
    			destroy_component(leftinput);
    			destroy_component(rightinput);
    			destroy_component(settingmodal);
    			destroy_component(footer);
    			mounted = false;
    			dispose();
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_fragment.name,
    		type: "component",
    		source: "",
    		ctx
    	});

    	return block;
    }

    function onLoad() {
    	
    }

    function instance($$self, $$props, $$invalidate) {
    	let { $$slots: slots = {}, $$scope } = $$props;
    	validate_slots('App', slots, []);
    	let { database } = $$props;
    	let { orm } = $$props;
    	let { fieldname } = $$props;
    	let { convert } = $$props;
    	let selectedDatabase = null;
    	let selectedOrm = null;
    	let selectedFieldname = fieldname[0].value;

    	if (window.localStorage.getItem("selectedDatabase") !== null) {
    		selectedDatabase = window.localStorage.getItem("selectedDatabase");
    	}

    	if (window.localStorage.getItem("selectedOrm") !== null) {
    		selectedOrm = window.localStorage.getItem("selectedOrm");
    	}

    	if (window.localStorage.getItem("selectedFieldname") !== null) {
    		selectedFieldname = window.localStorage.getItem("selectedFieldname");
    	}

    	let leftText = "";
    	let rightText = "";

    	if (window.localStorage.getItem("leftText") !== null) {
    		leftText = window.localStorage.getItem("leftText");
    	}

    	let errorLog = "";
    	let primaryKey = "id";
    	let createdAt = "created_at";
    	let updatedAt = "updated_at";
    	let deletedAt = "deleted_at";
    	let schemaName = "public";

    	function generateORM() {
    		window.localStorage.setItem("leftText", leftText);

    		if (leftText == "") {
    			return;
    		}

    		if (selectedDatabase === null) {
    			alert("데이터베이스를 선택해주세요.");
    			return;
    		}

    		if (selectedOrm === null) {
    			alert("ORM을 선택해주세요.");
    			return;
    		}

    		try {
    			$$invalidate(7, rightText = convert(leftText, selectedDatabase, selectedOrm, selectedFieldname, primaryKey, createdAt, updatedAt, deletedAt, schemaName));
    			$$invalidate(8, errorLog = "No Problem");
    		} catch(error) {
    			$$invalidate(8, errorLog = JSON.stringify(error));
    		}
    	}

    	generateORM();

    	$$self.$$.on_mount.push(function () {
    		if (database === undefined && !('database' in $$props || $$self.$$.bound[$$self.$$.props['database']])) {
    			console.warn("<App> was created without expected prop 'database'");
    		}

    		if (orm === undefined && !('orm' in $$props || $$self.$$.bound[$$self.$$.props['orm']])) {
    			console.warn("<App> was created without expected prop 'orm'");
    		}

    		if (fieldname === undefined && !('fieldname' in $$props || $$self.$$.bound[$$self.$$.props['fieldname']])) {
    			console.warn("<App> was created without expected prop 'fieldname'");
    		}

    		if (convert === undefined && !('convert' in $$props || $$self.$$.bound[$$self.$$.props['convert']])) {
    			console.warn("<App> was created without expected prop 'convert'");
    		}
    	});

    	const writable_props = ['database', 'orm', 'fieldname', 'convert'];

    	Object.keys($$props).forEach(key => {
    		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<App> was created with unknown prop '${key}'`);
    	});

    	function leftinput_database_binding(value) {
    		database = value;
    		$$invalidate(0, database);
    	}

    	function leftinput_selectedDatabase_binding(value) {
    		selectedDatabase = value;
    		$$invalidate(3, selectedDatabase);
    	}

    	function leftinput_leftText_binding(value) {
    		leftText = value;
    		$$invalidate(6, leftText);
    	}

    	function rightinput_orm_binding(value) {
    		orm = value;
    		$$invalidate(1, orm);
    	}

    	function rightinput_selectedOrm_binding(value) {
    		selectedOrm = value;
    		$$invalidate(4, selectedOrm);
    	}

    	function rightinput_rightText_binding(value) {
    		rightText = value;
    		$$invalidate(7, rightText);
    	}

    	function rightinput_selectedFieldname_binding(value) {
    		selectedFieldname = value;
    		$$invalidate(5, selectedFieldname);
    	}

    	function rightinput_fieldname_binding(value) {
    		fieldname = value;
    		$$invalidate(2, fieldname);
    	}

    	function settingmodal_primaryKey_binding(value) {
    		primaryKey = value;
    		$$invalidate(9, primaryKey);
    	}

    	function settingmodal_createdAt_binding(value) {
    		createdAt = value;
    		$$invalidate(10, createdAt);
    	}

    	function settingmodal_updatedAt_binding(value) {
    		updatedAt = value;
    		$$invalidate(11, updatedAt);
    	}

    	function settingmodal_deletedAt_binding(value) {
    		deletedAt = value;
    		$$invalidate(12, deletedAt);
    	}

    	function settingmodal_schemaName_binding(value) {
    		schemaName = value;
    		$$invalidate(13, schemaName);
    	}

    	$$self.$$set = $$props => {
    		if ('database' in $$props) $$invalidate(0, database = $$props.database);
    		if ('orm' in $$props) $$invalidate(1, orm = $$props.orm);
    		if ('fieldname' in $$props) $$invalidate(2, fieldname = $$props.fieldname);
    		if ('convert' in $$props) $$invalidate(15, convert = $$props.convert);
    	};

    	$$self.$capture_state = () => ({
    		Footer,
    		LeftInput,
    		RightInput,
    		SettingModal,
    		database,
    		orm,
    		fieldname,
    		convert,
    		selectedDatabase,
    		selectedOrm,
    		selectedFieldname,
    		leftText,
    		rightText,
    		errorLog,
    		primaryKey,
    		createdAt,
    		updatedAt,
    		deletedAt,
    		schemaName,
    		generateORM,
    		onLoad
    	});

    	$$self.$inject_state = $$props => {
    		if ('database' in $$props) $$invalidate(0, database = $$props.database);
    		if ('orm' in $$props) $$invalidate(1, orm = $$props.orm);
    		if ('fieldname' in $$props) $$invalidate(2, fieldname = $$props.fieldname);
    		if ('convert' in $$props) $$invalidate(15, convert = $$props.convert);
    		if ('selectedDatabase' in $$props) $$invalidate(3, selectedDatabase = $$props.selectedDatabase);
    		if ('selectedOrm' in $$props) $$invalidate(4, selectedOrm = $$props.selectedOrm);
    		if ('selectedFieldname' in $$props) $$invalidate(5, selectedFieldname = $$props.selectedFieldname);
    		if ('leftText' in $$props) $$invalidate(6, leftText = $$props.leftText);
    		if ('rightText' in $$props) $$invalidate(7, rightText = $$props.rightText);
    		if ('errorLog' in $$props) $$invalidate(8, errorLog = $$props.errorLog);
    		if ('primaryKey' in $$props) $$invalidate(9, primaryKey = $$props.primaryKey);
    		if ('createdAt' in $$props) $$invalidate(10, createdAt = $$props.createdAt);
    		if ('updatedAt' in $$props) $$invalidate(11, updatedAt = $$props.updatedAt);
    		if ('deletedAt' in $$props) $$invalidate(12, deletedAt = $$props.deletedAt);
    		if ('schemaName' in $$props) $$invalidate(13, schemaName = $$props.schemaName);
    	};

    	if ($$props && "$$inject" in $$props) {
    		$$self.$inject_state($$props.$$inject);
    	}

    	return [
    		database,
    		orm,
    		fieldname,
    		selectedDatabase,
    		selectedOrm,
    		selectedFieldname,
    		leftText,
    		rightText,
    		errorLog,
    		primaryKey,
    		createdAt,
    		updatedAt,
    		deletedAt,
    		schemaName,
    		generateORM,
    		convert,
    		leftinput_database_binding,
    		leftinput_selectedDatabase_binding,
    		leftinput_leftText_binding,
    		rightinput_orm_binding,
    		rightinput_selectedOrm_binding,
    		rightinput_rightText_binding,
    		rightinput_selectedFieldname_binding,
    		rightinput_fieldname_binding,
    		settingmodal_primaryKey_binding,
    		settingmodal_createdAt_binding,
    		settingmodal_updatedAt_binding,
    		settingmodal_deletedAt_binding,
    		settingmodal_schemaName_binding
    	];
    }

    class App extends SvelteComponentDev {
    	constructor(options) {
    		super(options);

    		init(this, options, instance, create_fragment, safe_not_equal, {
    			database: 0,
    			orm: 1,
    			fieldname: 2,
    			convert: 15
    		});

    		dispatch_dev("SvelteRegisterComponent", {
    			component: this,
    			tagName: "App",
    			options,
    			id: create_fragment.name
    		});
    	}

    	get database() {
    		throw new Error("<App>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set database(value) {
    		throw new Error("<App>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get orm() {
    		throw new Error("<App>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set orm(value) {
    		throw new Error("<App>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get fieldname() {
    		throw new Error("<App>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set fieldname(value) {
    		throw new Error("<App>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get convert() {
    		throw new Error("<App>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set convert(value) {
    		throw new Error("<App>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}
    }

    var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

    function createCommonjsModule(fn, basedir, module) {
    	return module = {
    		path: basedir,
    		exports: {},
    		require: function (path, base) {
    			return commonjsRequire(path, (base === undefined || base === null) ? module.path : base);
    		}
    	}, fn(module, module.exports), module.exports;
    }

    function getAugmentedNamespace(n) {
    	if (n.__esModule) return n;
    	var a = Object.defineProperty({}, '__esModule', {value: true});
    	Object.keys(n).forEach(function (k) {
    		var d = Object.getOwnPropertyDescriptor(n, k);
    		Object.defineProperty(a, k, d.get ? d : {
    			enumerable: true,
    			get: function () {
    				return n[k];
    			}
    		});
    	});
    	return a;
    }

    function commonjsRequire () {
    	throw new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');
    }

    var moo = createCommonjsModule(function (module) {
    (function(root, factory) {
      if (module.exports) {
        module.exports = factory();
      } else {
        root.moo = factory();
      }
    }(commonjsGlobal, function() {

      var hasOwnProperty = Object.prototype.hasOwnProperty;
      var toString = Object.prototype.toString;
      var hasSticky = typeof new RegExp().sticky === 'boolean';

      /***************************************************************************/

      function isRegExp(o) { return o && toString.call(o) === '[object RegExp]' }
      function isObject(o) { return o && typeof o === 'object' && !isRegExp(o) && !Array.isArray(o) }

      function reEscape(s) {
        return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&')
      }
      function reGroups(s) {
        var re = new RegExp('|' + s);
        return re.exec('').length - 1
      }
      function reCapture(s) {
        return '(' + s + ')'
      }
      function reUnion(regexps) {
        if (!regexps.length) return '(?!)'
        var source =  regexps.map(function(s) {
          return "(?:" + s + ")"
        }).join('|');
        return "(?:" + source + ")"
      }

      function regexpOrLiteral(obj) {
        if (typeof obj === 'string') {
          return '(?:' + reEscape(obj) + ')'

        } else if (isRegExp(obj)) {
          // TODO: consider /u support
          if (obj.ignoreCase) throw new Error('RegExp /i flag not allowed')
          if (obj.global) throw new Error('RegExp /g flag is implied')
          if (obj.sticky) throw new Error('RegExp /y flag is implied')
          if (obj.multiline) throw new Error('RegExp /m flag is implied')
          return obj.source

        } else {
          throw new Error('Not a pattern: ' + obj)
        }
      }

      function pad(s, length) {
        if (s.length > length) {
          return s
        }
        return Array(length - s.length + 1).join(" ") + s
      }

      function lastNLines(string, numLines) {
        var position = string.length;
        var lineBreaks = 0;
        while (true) {
          var idx = string.lastIndexOf("\n", position - 1);
          if (idx === -1) {
            break;
          } else {
            lineBreaks++;
          }
          position = idx;
          if (lineBreaks === numLines) {
            break;
          }
          if (position === 0) {
            break;
          }
        }
        var startPosition = 
          lineBreaks < numLines ?
          0 : 
          position + 1;
        return string.substring(startPosition).split("\n")
      }

      function objectToRules(object) {
        var keys = Object.getOwnPropertyNames(object);
        var result = [];
        for (var i = 0; i < keys.length; i++) {
          var key = keys[i];
          var thing = object[key];
          var rules = [].concat(thing);
          if (key === 'include') {
            for (var j = 0; j < rules.length; j++) {
              result.push({include: rules[j]});
            }
            continue
          }
          var match = [];
          rules.forEach(function(rule) {
            if (isObject(rule)) {
              if (match.length) result.push(ruleOptions(key, match));
              result.push(ruleOptions(key, rule));
              match = [];
            } else {
              match.push(rule);
            }
          });
          if (match.length) result.push(ruleOptions(key, match));
        }
        return result
      }

      function arrayToRules(array) {
        var result = [];
        for (var i = 0; i < array.length; i++) {
          var obj = array[i];
          if (obj.include) {
            var include = [].concat(obj.include);
            for (var j = 0; j < include.length; j++) {
              result.push({include: include[j]});
            }
            continue
          }
          if (!obj.type) {
            throw new Error('Rule has no type: ' + JSON.stringify(obj))
          }
          result.push(ruleOptions(obj.type, obj));
        }
        return result
      }

      function ruleOptions(type, obj) {
        if (!isObject(obj)) {
          obj = { match: obj };
        }
        if (obj.include) {
          throw new Error('Matching rules cannot also include states')
        }

        // nb. error and fallback imply lineBreaks
        var options = {
          defaultType: type,
          lineBreaks: !!obj.error || !!obj.fallback,
          pop: false,
          next: null,
          push: null,
          error: false,
          fallback: false,
          value: null,
          type: null,
          shouldThrow: false,
        };

        // Avoid Object.assign(), so we support IE9+
        for (var key in obj) {
          if (hasOwnProperty.call(obj, key)) {
            options[key] = obj[key];
          }
        }

        // type transform cannot be a string
        if (typeof options.type === 'string' && type !== options.type) {
          throw new Error("Type transform cannot be a string (type '" + options.type + "' for token '" + type + "')")
        }

        // convert to array
        var match = options.match;
        options.match = Array.isArray(match) ? match : match ? [match] : [];
        options.match.sort(function(a, b) {
          return isRegExp(a) && isRegExp(b) ? 0
               : isRegExp(b) ? -1 : isRegExp(a) ? +1 : b.length - a.length
        });
        return options
      }

      function toRules(spec) {
        return Array.isArray(spec) ? arrayToRules(spec) : objectToRules(spec)
      }

      var defaultErrorRule = ruleOptions('error', {lineBreaks: true, shouldThrow: true});
      function compileRules(rules, hasStates) {
        var errorRule = null;
        var fast = Object.create(null);
        var fastAllowed = true;
        var unicodeFlag = null;
        var groups = [];
        var parts = [];

        // If there is a fallback rule, then disable fast matching
        for (var i = 0; i < rules.length; i++) {
          if (rules[i].fallback) {
            fastAllowed = false;
          }
        }

        for (var i = 0; i < rules.length; i++) {
          var options = rules[i];

          if (options.include) {
            // all valid inclusions are removed by states() preprocessor
            throw new Error('Inheritance is not allowed in stateless lexers')
          }

          if (options.error || options.fallback) {
            // errorRule can only be set once
            if (errorRule) {
              if (!options.fallback === !errorRule.fallback) {
                throw new Error("Multiple " + (options.fallback ? "fallback" : "error") + " rules not allowed (for token '" + options.defaultType + "')")
              } else {
                throw new Error("fallback and error are mutually exclusive (for token '" + options.defaultType + "')")
              }
            }
            errorRule = options;
          }

          var match = options.match.slice();
          if (fastAllowed) {
            while (match.length && typeof match[0] === 'string' && match[0].length === 1) {
              var word = match.shift();
              fast[word.charCodeAt(0)] = options;
            }
          }

          // Warn about inappropriate state-switching options
          if (options.pop || options.push || options.next) {
            if (!hasStates) {
              throw new Error("State-switching options are not allowed in stateless lexers (for token '" + options.defaultType + "')")
            }
            if (options.fallback) {
              throw new Error("State-switching options are not allowed on fallback tokens (for token '" + options.defaultType + "')")
            }
          }

          // Only rules with a .match are included in the RegExp
          if (match.length === 0) {
            continue
          }
          fastAllowed = false;

          groups.push(options);

          // Check unicode flag is used everywhere or nowhere
          for (var j = 0; j < match.length; j++) {
            var obj = match[j];
            if (!isRegExp(obj)) {
              continue
            }

            if (unicodeFlag === null) {
              unicodeFlag = obj.unicode;
            } else if (unicodeFlag !== obj.unicode && options.fallback === false) {
              throw new Error('If one rule is /u then all must be')
            }
          }

          // convert to RegExp
          var pat = reUnion(match.map(regexpOrLiteral));

          // validate
          var regexp = new RegExp(pat);
          if (regexp.test("")) {
            throw new Error("RegExp matches empty string: " + regexp)
          }
          var groupCount = reGroups(pat);
          if (groupCount > 0) {
            throw new Error("RegExp has capture groups: " + regexp + "\nUse (?: … ) instead")
          }

          // try and detect rules matching newlines
          if (!options.lineBreaks && regexp.test('\n')) {
            throw new Error('Rule should declare lineBreaks: ' + regexp)
          }

          // store regex
          parts.push(reCapture(pat));
        }


        // If there's no fallback rule, use the sticky flag so we only look for
        // matches at the current index.
        //
        // If we don't support the sticky flag, then fake it using an irrefutable
        // match (i.e. an empty pattern).
        var fallbackRule = errorRule && errorRule.fallback;
        var flags = hasSticky && !fallbackRule ? 'ym' : 'gm';
        var suffix = hasSticky || fallbackRule ? '' : '|';

        if (unicodeFlag === true) flags += "u";
        var combined = new RegExp(reUnion(parts) + suffix, flags);
        return {regexp: combined, groups: groups, fast: fast, error: errorRule || defaultErrorRule}
      }

      function compile(rules) {
        var result = compileRules(toRules(rules));
        return new Lexer({start: result}, 'start')
      }

      function checkStateGroup(g, name, map) {
        var state = g && (g.push || g.next);
        if (state && !map[state]) {
          throw new Error("Missing state '" + state + "' (in token '" + g.defaultType + "' of state '" + name + "')")
        }
        if (g && g.pop && +g.pop !== 1) {
          throw new Error("pop must be 1 (in token '" + g.defaultType + "' of state '" + name + "')")
        }
      }
      function compileStates(states, start) {
        var all = states.$all ? toRules(states.$all) : [];
        delete states.$all;

        var keys = Object.getOwnPropertyNames(states);
        if (!start) start = keys[0];

        var ruleMap = Object.create(null);
        for (var i = 0; i < keys.length; i++) {
          var key = keys[i];
          ruleMap[key] = toRules(states[key]).concat(all);
        }
        for (var i = 0; i < keys.length; i++) {
          var key = keys[i];
          var rules = ruleMap[key];
          var included = Object.create(null);
          for (var j = 0; j < rules.length; j++) {
            var rule = rules[j];
            if (!rule.include) continue
            var splice = [j, 1];
            if (rule.include !== key && !included[rule.include]) {
              included[rule.include] = true;
              var newRules = ruleMap[rule.include];
              if (!newRules) {
                throw new Error("Cannot include nonexistent state '" + rule.include + "' (in state '" + key + "')")
              }
              for (var k = 0; k < newRules.length; k++) {
                var newRule = newRules[k];
                if (rules.indexOf(newRule) !== -1) continue
                splice.push(newRule);
              }
            }
            rules.splice.apply(rules, splice);
            j--;
          }
        }

        var map = Object.create(null);
        for (var i = 0; i < keys.length; i++) {
          var key = keys[i];
          map[key] = compileRules(ruleMap[key], true);
        }

        for (var i = 0; i < keys.length; i++) {
          var name = keys[i];
          var state = map[name];
          var groups = state.groups;
          for (var j = 0; j < groups.length; j++) {
            checkStateGroup(groups[j], name, map);
          }
          var fastKeys = Object.getOwnPropertyNames(state.fast);
          for (var j = 0; j < fastKeys.length; j++) {
            checkStateGroup(state.fast[fastKeys[j]], name, map);
          }
        }

        return new Lexer(map, start)
      }

      function keywordTransform(map) {

        // Use a JavaScript Map to map keywords to their corresponding token type
        // unless Map is unsupported, then fall back to using an Object:
        var isMap = typeof Map !== 'undefined';
        var reverseMap = isMap ? new Map : Object.create(null);

        var types = Object.getOwnPropertyNames(map);
        for (var i = 0; i < types.length; i++) {
          var tokenType = types[i];
          var item = map[tokenType];
          var keywordList = Array.isArray(item) ? item : [item];
          keywordList.forEach(function(keyword) {
            if (typeof keyword !== 'string') {
              throw new Error("keyword must be string (in keyword '" + tokenType + "')")
            }
            if (isMap) {
              reverseMap.set(keyword, tokenType);
            } else {
              reverseMap[keyword] = tokenType;
            }
          });
        }
        return function(k) {
          return isMap ? reverseMap.get(k) : reverseMap[k]
        }
      }

      /***************************************************************************/

      var Lexer = function(states, state) {
        this.startState = state;
        this.states = states;
        this.buffer = '';
        this.stack = [];
        this.reset();
      };

      Lexer.prototype.reset = function(data, info) {
        this.buffer = data || '';
        this.index = 0;
        this.line = info ? info.line : 1;
        this.col = info ? info.col : 1;
        this.queuedToken = info ? info.queuedToken : null;
        this.queuedText = info ? info.queuedText: "";
        this.queuedThrow = info ? info.queuedThrow : null;
        this.setState(info ? info.state : this.startState);
        this.stack = info && info.stack ? info.stack.slice() : [];
        return this
      };

      Lexer.prototype.save = function() {
        return {
          line: this.line,
          col: this.col,
          state: this.state,
          stack: this.stack.slice(),
          queuedToken: this.queuedToken,
          queuedText: this.queuedText,
          queuedThrow: this.queuedThrow,
        }
      };

      Lexer.prototype.setState = function(state) {
        if (!state || this.state === state) return
        this.state = state;
        var info = this.states[state];
        this.groups = info.groups;
        this.error = info.error;
        this.re = info.regexp;
        this.fast = info.fast;
      };

      Lexer.prototype.popState = function() {
        this.setState(this.stack.pop());
      };

      Lexer.prototype.pushState = function(state) {
        this.stack.push(this.state);
        this.setState(state);
      };

      var eat = hasSticky ? function(re, buffer) { // assume re is /y
        return re.exec(buffer)
      } : function(re, buffer) { // assume re is /g
        var match = re.exec(buffer);
        // will always match, since we used the |(?:) trick
        if (match[0].length === 0) {
          return null
        }
        return match
      };

      Lexer.prototype._getGroup = function(match) {
        var groupCount = this.groups.length;
        for (var i = 0; i < groupCount; i++) {
          if (match[i + 1] !== undefined) {
            return this.groups[i]
          }
        }
        throw new Error('Cannot find token type for matched text')
      };

      function tokenToString() {
        return this.value
      }

      Lexer.prototype.next = function() {
        var index = this.index;

        // If a fallback token matched, we don't need to re-run the RegExp
        if (this.queuedGroup) {
          var token = this._token(this.queuedGroup, this.queuedText, index);
          this.queuedGroup = null;
          this.queuedText = "";
          return token
        }

        var buffer = this.buffer;
        if (index === buffer.length) {
          return // EOF
        }

        // Fast matching for single characters
        var group = this.fast[buffer.charCodeAt(index)];
        if (group) {
          return this._token(group, buffer.charAt(index), index)
        }

        // Execute RegExp
        var re = this.re;
        re.lastIndex = index;
        var match = eat(re, buffer);

        // Error tokens match the remaining buffer
        var error = this.error;
        if (match == null) {
          return this._token(error, buffer.slice(index, buffer.length), index)
        }

        var group = this._getGroup(match);
        var text = match[0];

        if (error.fallback && match.index !== index) {
          this.queuedGroup = group;
          this.queuedText = text;

          // Fallback tokens contain the unmatched portion of the buffer
          return this._token(error, buffer.slice(index, match.index), index)
        }

        return this._token(group, text, index)
      };

      Lexer.prototype._token = function(group, text, offset) {
        // count line breaks
        var lineBreaks = 0;
        if (group.lineBreaks) {
          var matchNL = /\n/g;
          var nl = 1;
          if (text === '\n') {
            lineBreaks = 1;
          } else {
            while (matchNL.exec(text)) { lineBreaks++; nl = matchNL.lastIndex; }
          }
        }

        var token = {
          type: (typeof group.type === 'function' && group.type(text)) || group.defaultType,
          value: typeof group.value === 'function' ? group.value(text) : text,
          text: text,
          toString: tokenToString,
          offset: offset,
          lineBreaks: lineBreaks,
          line: this.line,
          col: this.col,
        };
        // nb. adding more props to token object will make V8 sad!

        var size = text.length;
        this.index += size;
        this.line += lineBreaks;
        if (lineBreaks !== 0) {
          this.col = size - nl + 1;
        } else {
          this.col += size;
        }

        // throw, if no rule with {error: true}
        if (group.shouldThrow) {
          var err = new Error(this.formatError(token, "invalid syntax"));
          throw err;
        }

        if (group.pop) this.popState();
        else if (group.push) this.pushState(group.push);
        else if (group.next) this.setState(group.next);

        return token
      };

      if (typeof Symbol !== 'undefined' && Symbol.iterator) {
        var LexerIterator = function(lexer) {
          this.lexer = lexer;
        };

        LexerIterator.prototype.next = function() {
          var token = this.lexer.next();
          return {value: token, done: !token}
        };

        LexerIterator.prototype[Symbol.iterator] = function() {
          return this
        };

        Lexer.prototype[Symbol.iterator] = function() {
          return new LexerIterator(this)
        };
      }

      Lexer.prototype.formatError = function(token, message) {
        if (token == null) {
          // An undefined token indicates EOF
          var text = this.buffer.slice(this.index);
          var token = {
            text: text,
            offset: this.index,
            lineBreaks: text.indexOf('\n') === -1 ? 0 : 1,
            line: this.line,
            col: this.col,
          };
        }
        
        var numLinesAround = 2;
        var firstDisplayedLine = Math.max(token.line - numLinesAround, 1);
        var lastDisplayedLine = token.line + numLinesAround;
        var lastLineDigits = String(lastDisplayedLine).length;
        var displayedLines = lastNLines(
            this.buffer, 
            (this.line - token.line) + numLinesAround + 1
          )
          .slice(0, 5);
        var errorLines = [];
        errorLines.push(message + " at line " + token.line + " col " + token.col + ":");
        errorLines.push("");
        for (var i = 0; i < displayedLines.length; i++) {
          var line = displayedLines[i];
          var lineNo = firstDisplayedLine + i;
          errorLines.push(pad(String(lineNo), lastLineDigits) + "  " + line);
          if (lineNo === token.line) {
            errorLines.push(pad("", lastLineDigits + token.col + 1) + "^");
          }
        }
        return errorLines.join("\n")
      };

      Lexer.prototype.clone = function() {
        return new Lexer(this.states, this.state)
      };

      Lexer.prototype.has = function(tokenType) {
        return true
      };


      return {
        compile: compile,
        states: compileStates,
        error: Object.freeze({error: true}),
        fallback: Object.freeze({fallback: true}),
        keywords: keywordTransform,
      }

    }));
    });

    var nearley = createCommonjsModule(function (module) {
    (function(root, factory) {
        if (module.exports) {
            module.exports = factory();
        } else {
            root.nearley = factory();
        }
    }(commonjsGlobal, function() {

        function Rule(name, symbols, postprocess) {
            this.id = ++Rule.highestId;
            this.name = name;
            this.symbols = symbols;        // a list of literal | regex class | nonterminal
            this.postprocess = postprocess;
            return this;
        }
        Rule.highestId = 0;

        Rule.prototype.toString = function(withCursorAt) {
            var symbolSequence = (typeof withCursorAt === "undefined")
                                 ? this.symbols.map(getSymbolShortDisplay).join(' ')
                                 : (   this.symbols.slice(0, withCursorAt).map(getSymbolShortDisplay).join(' ')
                                     + " ● "
                                     + this.symbols.slice(withCursorAt).map(getSymbolShortDisplay).join(' ')     );
            return this.name + " → " + symbolSequence;
        };


        // a State is a rule at a position from a given starting point in the input stream (reference)
        function State(rule, dot, reference, wantedBy) {
            this.rule = rule;
            this.dot = dot;
            this.reference = reference;
            this.data = [];
            this.wantedBy = wantedBy;
            this.isComplete = this.dot === rule.symbols.length;
        }

        State.prototype.toString = function() {
            return "{" + this.rule.toString(this.dot) + "}, from: " + (this.reference || 0);
        };

        State.prototype.nextState = function(child) {
            var state = new State(this.rule, this.dot + 1, this.reference, this.wantedBy);
            state.left = this;
            state.right = child;
            if (state.isComplete) {
                state.data = state.build();
                // Having right set here will prevent the right state and its children
                // form being garbage collected
                state.right = undefined;
            }
            return state;
        };

        State.prototype.build = function() {
            var children = [];
            var node = this;
            do {
                children.push(node.right.data);
                node = node.left;
            } while (node.left);
            children.reverse();
            return children;
        };

        State.prototype.finish = function() {
            if (this.rule.postprocess) {
                this.data = this.rule.postprocess(this.data, this.reference, Parser.fail);
            }
        };


        function Column(grammar, index) {
            this.grammar = grammar;
            this.index = index;
            this.states = [];
            this.wants = {}; // states indexed by the non-terminal they expect
            this.scannable = []; // list of states that expect a token
            this.completed = {}; // states that are nullable
        }


        Column.prototype.process = function(nextColumn) {
            var states = this.states;
            var wants = this.wants;
            var completed = this.completed;

            for (var w = 0; w < states.length; w++) { // nb. we push() during iteration
                var state = states[w];

                if (state.isComplete) {
                    state.finish();
                    if (state.data !== Parser.fail) {
                        // complete
                        var wantedBy = state.wantedBy;
                        for (var i = wantedBy.length; i--; ) { // this line is hot
                            var left = wantedBy[i];
                            this.complete(left, state);
                        }

                        // special-case nullables
                        if (state.reference === this.index) {
                            // make sure future predictors of this rule get completed.
                            var exp = state.rule.name;
                            (this.completed[exp] = this.completed[exp] || []).push(state);
                        }
                    }

                } else {
                    // queue scannable states
                    var exp = state.rule.symbols[state.dot];
                    if (typeof exp !== 'string') {
                        this.scannable.push(state);
                        continue;
                    }

                    // predict
                    if (wants[exp]) {
                        wants[exp].push(state);

                        if (completed.hasOwnProperty(exp)) {
                            var nulls = completed[exp];
                            for (var i = 0; i < nulls.length; i++) {
                                var right = nulls[i];
                                this.complete(state, right);
                            }
                        }
                    } else {
                        wants[exp] = [state];
                        this.predict(exp);
                    }
                }
            }
        };

        Column.prototype.predict = function(exp) {
            var rules = this.grammar.byName[exp] || [];

            for (var i = 0; i < rules.length; i++) {
                var r = rules[i];
                var wantedBy = this.wants[exp];
                var s = new State(r, 0, this.index, wantedBy);
                this.states.push(s);
            }
        };

        Column.prototype.complete = function(left, right) {
            var copy = left.nextState(right);
            this.states.push(copy);
        };


        function Grammar(rules, start) {
            this.rules = rules;
            this.start = start || this.rules[0].name;
            var byName = this.byName = {};
            this.rules.forEach(function(rule) {
                if (!byName.hasOwnProperty(rule.name)) {
                    byName[rule.name] = [];
                }
                byName[rule.name].push(rule);
            });
        }

        // So we can allow passing (rules, start) directly to Parser for backwards compatibility
        Grammar.fromCompiled = function(rules, start) {
            var lexer = rules.Lexer;
            if (rules.ParserStart) {
              start = rules.ParserStart;
              rules = rules.ParserRules;
            }
            var rules = rules.map(function (r) { return (new Rule(r.name, r.symbols, r.postprocess)); });
            var g = new Grammar(rules, start);
            g.lexer = lexer; // nb. storing lexer on Grammar is iffy, but unavoidable
            return g;
        };


        function StreamLexer() {
          this.reset("");
        }

        StreamLexer.prototype.reset = function(data, state) {
            this.buffer = data;
            this.index = 0;
            this.line = state ? state.line : 1;
            this.lastLineBreak = state ? -state.col : 0;
        };

        StreamLexer.prototype.next = function() {
            if (this.index < this.buffer.length) {
                var ch = this.buffer[this.index++];
                if (ch === '\n') {
                  this.line += 1;
                  this.lastLineBreak = this.index;
                }
                return {value: ch};
            }
        };

        StreamLexer.prototype.save = function() {
          return {
            line: this.line,
            col: this.index - this.lastLineBreak,
          }
        };

        StreamLexer.prototype.formatError = function(token, message) {
            // nb. this gets called after consuming the offending token,
            // so the culprit is index-1
            var buffer = this.buffer;
            if (typeof buffer === 'string') {
                var lines = buffer
                    .split("\n")
                    .slice(
                        Math.max(0, this.line - 5), 
                        this.line
                    );

                var nextLineBreak = buffer.indexOf('\n', this.index);
                if (nextLineBreak === -1) nextLineBreak = buffer.length;
                var col = this.index - this.lastLineBreak;
                var lastLineDigits = String(this.line).length;
                message += " at line " + this.line + " col " + col + ":\n\n";
                message += lines
                    .map(function(line, i) {
                        return pad(this.line - lines.length + i + 1, lastLineDigits) + " " + line;
                    }, this)
                    .join("\n");
                message += "\n" + pad("", lastLineDigits + col) + "^\n";
                return message;
            } else {
                return message + " at index " + (this.index - 1);
            }

            function pad(n, length) {
                var s = String(n);
                return Array(length - s.length + 1).join(" ") + s;
            }
        };

        function Parser(rules, start, options) {
            if (rules instanceof Grammar) {
                var grammar = rules;
                var options = start;
            } else {
                var grammar = Grammar.fromCompiled(rules, start);
            }
            this.grammar = grammar;

            // Read options
            this.options = {
                keepHistory: false,
                lexer: grammar.lexer || new StreamLexer,
            };
            for (var key in (options || {})) {
                this.options[key] = options[key];
            }

            // Setup lexer
            this.lexer = this.options.lexer;
            this.lexerState = undefined;

            // Setup a table
            var column = new Column(grammar, 0);
            this.table = [column];

            // I could be expecting anything.
            column.wants[grammar.start] = [];
            column.predict(grammar.start);
            // TODO what if start rule is nullable?
            column.process();
            this.current = 0; // token index
        }

        // create a reserved token for indicating a parse fail
        Parser.fail = {};

        Parser.prototype.feed = function(chunk) {
            var lexer = this.lexer;
            lexer.reset(chunk, this.lexerState);

            var token;
            while (true) {
                try {
                    token = lexer.next();
                    if (!token) {
                        break;
                    }
                } catch (e) {
                    // Create the next column so that the error reporter
                    // can display the correctly predicted states.
                    var nextColumn = new Column(this.grammar, this.current + 1);
                    this.table.push(nextColumn);
                    var err = new Error(this.reportLexerError(e));
                    err.offset = this.current;
                    err.token = e.token;
                    throw err;
                }
                // We add new states to table[current+1]
                var column = this.table[this.current];

                // GC unused states
                if (!this.options.keepHistory) {
                    delete this.table[this.current - 1];
                }

                var n = this.current + 1;
                var nextColumn = new Column(this.grammar, n);
                this.table.push(nextColumn);

                // Advance all tokens that expect the symbol
                var literal = token.text !== undefined ? token.text : token.value;
                var value = lexer.constructor === StreamLexer ? token.value : token;
                var scannable = column.scannable;
                for (var w = scannable.length; w--; ) {
                    var state = scannable[w];
                    var expect = state.rule.symbols[state.dot];
                    // Try to consume the token
                    // either regex or literal
                    if (expect.test ? expect.test(value) :
                        expect.type ? expect.type === token.type
                                    : expect.literal === literal) {
                        // Add it
                        var next = state.nextState({data: value, token: token, isToken: true, reference: n - 1});
                        nextColumn.states.push(next);
                    }
                }

                // Next, for each of the rules, we either
                // (a) complete it, and try to see if the reference row expected that
                //     rule
                // (b) predict the next nonterminal it expects by adding that
                //     nonterminal's start state
                // To prevent duplication, we also keep track of rules we have already
                // added

                nextColumn.process();

                // If needed, throw an error:
                if (nextColumn.states.length === 0) {
                    // No states at all! This is not good.
                    var err = new Error(this.reportError(token));
                    err.offset = this.current;
                    err.token = token;
                    throw err;
                }

                // maybe save lexer state
                if (this.options.keepHistory) {
                  column.lexerState = lexer.save();
                }

                this.current++;
            }
            if (column) {
              this.lexerState = lexer.save();
            }

            // Incrementally keep track of results
            this.results = this.finish();

            // Allow chaining, for whatever it's worth
            return this;
        };

        Parser.prototype.reportLexerError = function(lexerError) {
            var tokenDisplay, lexerMessage;
            // Planning to add a token property to moo's thrown error
            // even on erroring tokens to be used in error display below
            var token = lexerError.token;
            if (token) {
                tokenDisplay = "input " + JSON.stringify(token.text[0]) + " (lexer error)";
                lexerMessage = this.lexer.formatError(token, "Syntax error");
            } else {
                tokenDisplay = "input (lexer error)";
                lexerMessage = lexerError.message;
            }
            return this.reportErrorCommon(lexerMessage, tokenDisplay);
        };

        Parser.prototype.reportError = function(token) {
            var tokenDisplay = (token.type ? token.type + " token: " : "") + JSON.stringify(token.value !== undefined ? token.value : token);
            var lexerMessage = this.lexer.formatError(token, "Syntax error");
            return this.reportErrorCommon(lexerMessage, tokenDisplay);
        };

        Parser.prototype.reportErrorCommon = function(lexerMessage, tokenDisplay) {
            var lines = [];
            lines.push(lexerMessage);
            var lastColumnIndex = this.table.length - 2;
            var lastColumn = this.table[lastColumnIndex];
            var expectantStates = lastColumn.states
                .filter(function(state) {
                    var nextSymbol = state.rule.symbols[state.dot];
                    return nextSymbol && typeof nextSymbol !== "string";
                });

            if (expectantStates.length === 0) {
                lines.push('Unexpected ' + tokenDisplay + '. I did not expect any more input. Here is the state of my parse table:\n');
                this.displayStateStack(lastColumn.states, lines);
            } else {
                lines.push('Unexpected ' + tokenDisplay + '. Instead, I was expecting to see one of the following:\n');
                // Display a "state stack" for each expectant state
                // - which shows you how this state came to be, step by step.
                // If there is more than one derivation, we only display the first one.
                var stateStacks = expectantStates
                    .map(function(state) {
                        return this.buildFirstStateStack(state, []) || [state];
                    }, this);
                // Display each state that is expecting a terminal symbol next.
                stateStacks.forEach(function(stateStack) {
                    var state = stateStack[0];
                    var nextSymbol = state.rule.symbols[state.dot];
                    var symbolDisplay = this.getSymbolDisplay(nextSymbol);
                    lines.push('A ' + symbolDisplay + ' based on:');
                    this.displayStateStack(stateStack, lines);
                }, this);
            }
            lines.push("");
            return lines.join("\n");
        };
        
        Parser.prototype.displayStateStack = function(stateStack, lines) {
            var lastDisplay;
            var sameDisplayCount = 0;
            for (var j = 0; j < stateStack.length; j++) {
                var state = stateStack[j];
                var display = state.rule.toString(state.dot);
                if (display === lastDisplay) {
                    sameDisplayCount++;
                } else {
                    if (sameDisplayCount > 0) {
                        lines.push('    ^ ' + sameDisplayCount + ' more lines identical to this');
                    }
                    sameDisplayCount = 0;
                    lines.push('    ' + display);
                }
                lastDisplay = display;
            }
        };

        Parser.prototype.getSymbolDisplay = function(symbol) {
            return getSymbolLongDisplay(symbol);
        };

        /*
        Builds a the first state stack. You can think of a state stack as the call stack
        of the recursive-descent parser which the Nearley parse algorithm simulates.
        A state stack is represented as an array of state objects. Within a
        state stack, the first item of the array will be the starting
        state, with each successive item in the array going further back into history.

        This function needs to be given a starting state and an empty array representing
        the visited states, and it returns an single state stack.

        */
        Parser.prototype.buildFirstStateStack = function(state, visited) {
            if (visited.indexOf(state) !== -1) {
                // Found cycle, return null
                // to eliminate this path from the results, because
                // we don't know how to display it meaningfully
                return null;
            }
            if (state.wantedBy.length === 0) {
                return [state];
            }
            var prevState = state.wantedBy[0];
            var childVisited = [state].concat(visited);
            var childResult = this.buildFirstStateStack(prevState, childVisited);
            if (childResult === null) {
                return null;
            }
            return [state].concat(childResult);
        };

        Parser.prototype.save = function() {
            var column = this.table[this.current];
            column.lexerState = this.lexerState;
            return column;
        };

        Parser.prototype.restore = function(column) {
            var index = column.index;
            this.current = index;
            this.table[index] = column;
            this.table.splice(index + 1);
            this.lexerState = column.lexerState;

            // Incrementally keep track of results
            this.results = this.finish();
        };

        // nb. deprecated: use save/restore instead!
        Parser.prototype.rewind = function(index) {
            if (!this.options.keepHistory) {
                throw new Error('set option `keepHistory` to enable rewinding')
            }
            // nb. recall column (table) indicies fall between token indicies.
            //        col 0   --   token 0   --   col 1
            this.restore(this.table[index]);
        };

        Parser.prototype.finish = function() {
            // Return the possible parsings
            var considerations = [];
            var start = this.grammar.start;
            var column = this.table[this.table.length - 1];
            column.states.forEach(function (t) {
                if (t.rule.name === start
                        && t.dot === t.rule.symbols.length
                        && t.reference === 0
                        && t.data !== Parser.fail) {
                    considerations.push(t);
                }
            });
            return considerations.map(function(c) {return c.data; });
        };

        function getSymbolLongDisplay(symbol) {
            var type = typeof symbol;
            if (type === "string") {
                return symbol;
            } else if (type === "object") {
                if (symbol.literal) {
                    return JSON.stringify(symbol.literal);
                } else if (symbol instanceof RegExp) {
                    return 'character matching ' + symbol;
                } else if (symbol.type) {
                    return symbol.type + ' token';
                } else if (symbol.test) {
                    return 'token matching ' + String(symbol.test);
                } else {
                    throw new Error('Unknown symbol type: ' + symbol);
                }
            }
        }

        function getSymbolShortDisplay(symbol) {
            var type = typeof symbol;
            if (type === "string") {
                return symbol;
            } else if (type === "object") {
                if (symbol.literal) {
                    return JSON.stringify(symbol.literal);
                } else if (symbol instanceof RegExp) {
                    return symbol.toString();
                } else if (symbol.type) {
                    return '%' + symbol.type;
                } else if (symbol.test) {
                    return '<' + String(symbol.test) + '>';
                } else {
                    throw new Error('Unknown symbol type: ' + symbol);
                }
            }
        }

        return {
            Parser: Parser,
            Grammar: Grammar,
            Rule: Rule,
        };

    }));
    });

    var pgsqlAstParser = createCommonjsModule(function (module, exports) {
    (function(e, a) { for(var i in a) e[i] = a[i]; }(exports, /******/ (function(modules) { // webpackBootstrap
    /******/ 	// The module cache
    /******/ 	var installedModules = {};
    /******/
    /******/ 	// The require function
    /******/ 	function __webpack_require__(moduleId) {
    /******/
    /******/ 		// Check if module is in cache
    /******/ 		if(installedModules[moduleId]) {
    /******/ 			return installedModules[moduleId].exports;
    /******/ 		}
    /******/ 		// Create a new module (and put it into the cache)
    /******/ 		var module = installedModules[moduleId] = {
    /******/ 			i: moduleId,
    /******/ 			l: false,
    /******/ 			exports: {}
    /******/ 		};
    /******/
    /******/ 		// Execute the module function
    /******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
    /******/
    /******/ 		// Flag the module as loaded
    /******/ 		module.l = true;
    /******/
    /******/ 		// Return the exports of the module
    /******/ 		return module.exports;
    /******/ 	}
    /******/
    /******/
    /******/ 	// expose the modules object (__webpack_modules__)
    /******/ 	__webpack_require__.m = modules;
    /******/
    /******/ 	// expose the module cache
    /******/ 	__webpack_require__.c = installedModules;
    /******/
    /******/ 	// define getter function for harmony exports
    /******/ 	__webpack_require__.d = function(exports, name, getter) {
    /******/ 		if(!__webpack_require__.o(exports, name)) {
    /******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
    /******/ 		}
    /******/ 	};
    /******/
    /******/ 	// define __esModule on exports
    /******/ 	__webpack_require__.r = function(exports) {
    /******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
    /******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
    /******/ 		}
    /******/ 		Object.defineProperty(exports, '__esModule', { value: true });
    /******/ 	};
    /******/
    /******/ 	// create a fake namespace object
    /******/ 	// mode & 1: value is a module id, require it
    /******/ 	// mode & 2: merge all properties of value into the ns
    /******/ 	// mode & 4: return value when already ns object
    /******/ 	// mode & 8|1: behave like require
    /******/ 	__webpack_require__.t = function(value, mode) {
    /******/ 		if(mode & 1) value = __webpack_require__(value);
    /******/ 		if(mode & 8) return value;
    /******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
    /******/ 		var ns = Object.create(null);
    /******/ 		__webpack_require__.r(ns);
    /******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
    /******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
    /******/ 		return ns;
    /******/ 	};
    /******/
    /******/ 	// getDefaultExport function for compatibility with non-harmony modules
    /******/ 	__webpack_require__.n = function(module) {
    /******/ 		var getter = module && module.__esModule ?
    /******/ 			function getDefault() { return module['default']; } :
    /******/ 			function getModuleExports() { return module; };
    /******/ 		__webpack_require__.d(getter, 'a', getter);
    /******/ 		return getter;
    /******/ 	};
    /******/
    /******/ 	// Object.prototype.hasOwnProperty.call
    /******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
    /******/
    /******/ 	// __webpack_public_path__
    /******/ 	__webpack_require__.p = "";
    /******/
    /******/
    /******/ 	// Load entry module and return exports
    /******/ 	return __webpack_require__(__webpack_require__.s = 7);
    /******/ })
    /************************************************************************/
    /******/ ([
    /* 0 */
    /***/ (function(module, exports) {

    module.exports = moo;

    /***/ }),
    /* 1 */
    /***/ (function(module, exports, __webpack_require__) {

    Object.defineProperty(exports, "__esModule", { value: true });
    exports.unbox = exports.box = exports.track = exports.tracking = exports.trackingComments = exports.lexerAny = exports.lexer = void 0;
    const moo_1 = __webpack_require__(0);
    const keywords_1 = __webpack_require__(3);
    // build keywords
    const keywodsMap = {};
    for (const k of keywords_1.sqlKeywords) {
        keywodsMap['kw_' + k.toLowerCase()] = k;
    }
    const caseInsensitiveKeywords = (map) => {
        const transform = moo_1.keywords(map);
        return (text) => transform(text.toUpperCase());
    };
    // build lexer
    exports.lexer = moo_1.compile({
        word: {
            match: /[eE](?!')[A-Za-z0-9_]*|[a-df-zA-DF-Z_][A-Za-z0-9_]*/,
            type: caseInsensitiveKeywords(keywodsMap),
            value: x => x.toLowerCase(),
        },
        wordQuoted: {
            match: /"(?:[^"\*]|"")+"/,
            type: () => 'word',
        },
        string: {
            match: /'(?:[^']|\'\')*'/,
            value: x => {
                return x.substr(1, x.length - 2)
                    .replace(/''/g, '\'');
            },
        },
        eString: {
            match: /\b(?:e|E)'(?:[^'\\]|[\r\n\s]|(?:\\\s)|(?:\\\n)|(?:\\.)|(?:\'\'))+'/,
            value: x => {
                return x.substr(2, x.length - 3)
                    .replace(/''/g, '\'')
                    .replace(/\\([\s\n])/g, (_, x) => x)
                    .replace(/\\./g, m => JSON.parse('"' + m + '"'));
            },
        },
        qparam: {
            match: /\$\d+/,
        },
        star: '*',
        comma: ',',
        space: { match: /[\s\t\n\v\f\r]+/, lineBreaks: true, },
        int: /\-?\d+(?![\.\d])/,
        float: /\-?(?:(?:\d*\.\d+)|(?:\d+\.\d*))/,
        // word: /[a-zA-Z][A-Za-z0-9_\-]*/,
        commentLine: /\-\-.*?$[\s\r\n]*/,
        commentFull: /(?<!\/)\/\*(?:.|[\r\n])*?\*\/[\s\r\n]*/,
        lparen: '(',
        rparen: ')',
        lbracket: '[',
        rbracket: ']',
        semicolon: ';',
        dot: /\.(?!\d)/,
        op_cast: '::',
        op_plus: '+',
        op_eq: '=',
        op_neq: {
            match: /(?:!=)|(?:\<\>)/,
            value: () => '!=',
        },
        op_minus: /(?<!\-)\-(?!\-)(?!\>)/,
        op_div: /(?<!\/)\/(?!\/)/,
        op_like: /(?<!\!)~~(?!\*)/,
        op_ilike: /(?<!\!)~~\*/,
        op_not_like: /\!~~(?!\*)/,
        op_not_ilike: /\!~~\*/,
        op_mod: '%',
        op_exp: '^',
        op_member: /\-\>(?!\>)/,
        op_membertext: '->>',
        op_additive: {
            // group other additive operators
            match: ['||', '-', '#-', '&&'],
        },
        op_compare: {
            // group other comparison operators
            // ... to add: "IN" and "NOT IN" that are matched by keywords
            match: ['>', '>=', '<', '<=', '@>', '<@', '?', '?|', '?&', '#>>', '>>', '<<', '~'],
        },
        ops_others: {
            // referenced as (any other operator) in https://www.postgresql.org/docs/12/sql-syntax-lexical.html#SQL-PRECEDENCE
            // see also https://www.postgresql.org/docs/9.0/functions-math.html
            match: ['|', '&', '^', '#'],
        },
        codeblock: {
            match: /\$\$(?:.|[\s\t\n\v\f\r])*?\$\$/s,
            lineBreaks: true,
            value: (x) => x.substr(2, x.length - 4),
        },
    });
    exports.lexer.next = (next => () => {
        let tok;
        while (tok = next.call(exports.lexer)) {
            if (tok.type === 'space') {
                continue;
            }
            if (tok.type === 'commentLine' || tok.type === 'commentFull') {
                comments === null || comments === void 0 ? void 0 : comments.push({
                    _location: { start: tok.offset, end: tok.offset + tok.text.length },
                    comment: tok.text,
                });
                continue;
            }
            break;
        }
        if (trackingLoc && tok) {
            const start = tok.offset;
            const loc = {
                start,
                end: start + tok.text.length,
            };
            tok._location = loc;
        }
        return tok;
    })(exports.lexer.next);
    exports.lexerAny = exports.lexer;
    let comments = null;
    function trackingComments(act) {
        if (comments) {
            throw new Error('WAT ? Recursive comments tracking 🤔🤨 ?');
        }
        try {
            comments = [];
            const ast = act();
            return { comments, ast };
        }
        finally {
            comments = null;
        }
    }
    exports.trackingComments = trackingComments;
    let trackingLoc = false;
    function tracking(act) {
        if (trackingLoc) {
            return act();
        }
        try {
            trackingLoc = true;
            return act();
        }
        finally {
            trackingLoc = false;
        }
    }
    exports.tracking = tracking;
    function track(xs, ret) {
        if (!trackingLoc || !ret || typeof ret !== 'object') {
            return ret;
        }
        const start = seek(xs, true);
        const end = seek(xs, false);
        if (!start || !end) {
            return ret;
        }
        if (start === end) {
            ret._location = start;
        }
        else {
            const loc = {
                start: start.start,
                end: end.end,
            };
            ret._location = loc;
        }
        return ret;
    }
    exports.track = track;
    const literal = Symbol('_literal');
    function box(xs, value) {
        if (!trackingLoc) {
            return value;
        }
        return track(xs, { [literal]: value });
    }
    exports.box = box;
    function unbox(value) {
        var _a;
        if (!trackingLoc) {
            return value;
        }
        if (typeof value === 'object') {
            return (_a = value === null || value === void 0 ? void 0 : value[literal]) !== null && _a !== void 0 ? _a : value;
        }
        return value;
    }
    exports.unbox = unbox;
    function seek(xs, start) {
        if (!xs) {
            return null;
        }
        if (Array.isArray(xs)) {
            const diff = start ? 1 : -1;
            for (let i = start ? 0 : xs.length - 1; i >= 0 && i < xs.length; i += diff) {
                const v = seek(xs[i], start);
                if (v) {
                    return v;
                }
            }
            return null;
        }
        if (typeof xs !== 'object') {
            return null;
        }
        return xs._location;
    }


    /***/ }),
    /* 2 */
    /***/ (function(module, exports, __webpack_require__) {

    Object.defineProperty(exports, "__esModule", { value: true });
    exports.AstDefaultMapper = exports.arrayNilMap = exports.assignChanged = exports.astMapper = void 0;
    const utils_1 = __webpack_require__(6);
    /**
     * Builds an AST modifier based on the default implementation, merged with the one you provide.
     *
     * Example of a modifier that renames all reference to columns 'foo' to 'bar'
     * ```ts
     *  const mapper = astMapper(b => ({
     *       ref: a => assignChanged(a, {
     *           name: a.name === 'foo'
     *               ? 'bar'
     *               : a.name
     *       })
     *   }));
     *
     * const modified = mapper.statement(myStatementToModify);
     * ```
     */
    function astMapper(modifierBuilder) {
        const instance = new AstDefaultMapper();
        instance.wrapped = modifierBuilder(instance);
        return instance;
    }
    exports.astMapper = astMapper;
    /**
     * An helper function that returns a copy of an object with modified properties
     * (similar to Object.assign()), but ONLY if thos properties have changed.
     * Will return the original object if not.
     */
    function assignChanged(orig, assign) {
        if (!orig) {
            return orig;
        }
        let changed = false;
        for (const k of Object.keys(assign)) {
            if (orig[k] !== assign[k]) {
                changed = true;
                break;
            }
        }
        if (!changed) {
            return orig;
        }
        return utils_1.trimNullish({
            ...orig,
            ...assign,
        }, 0);
    }
    exports.assignChanged = assignChanged;
    /**
     * An helper function that returns a map of an array, but:
     * - It will return the original array if it is null-ish
     * - It will remove all null-ish entries
     * - It will return the original array if nothing has changed
     */
    function arrayNilMap(collection, mapper) {
        if (!(collection === null || collection === void 0 ? void 0 : collection.length)) {
            return collection;
        }
        let changed = false;
        let ret = collection;
        for (let i = 0; i < collection.length; i++) {
            const orig = collection[i];
            const val = mapper(orig);
            if (!val || val !== orig) {
                changed = true;
                ret = collection.slice(0, i);
            }
            if (!val) {
                continue;
            }
            if (changed) {
                ret.push(val);
            }
        }
        return ret;
    }
    exports.arrayNilMap = arrayNilMap;
    function withAccepts(val) {
        switch (val === null || val === void 0 ? void 0 : val.type) {
            case 'select':
            case 'delete':
            case 'insert':
            case 'update':
            case 'union':
            case 'union all':
            case 'with':
                return true;
            default:
                return false;
        }
    }
    /**
     * Can be used to modify an AST.
     *
     * You will have to override functions that you're interested in to use this class.
     *
     * Example: Will remove all references in
     */
    class AstDefaultMapper {
        super() {
            return new SkipModifier(this);
        }
        statement(val) {
            switch (val.type) {
                case 'alter table':
                    return this.alterTable(val);
                case 'commit':
                case 'start transaction':
                case 'rollback':
                    return this.transaction(val);
                case 'create index':
                    return this.createIndex(val);
                case 'create table':
                    return this.createTable(val);
                case 'truncate table':
                    return this.truncateTable(val);
                case 'delete':
                    return this.delete(val);
                case 'insert':
                    return this.insert(val);
                case 'with':
                    return this.with(val);
                case 'with recursive':
                    return this.withRecursive(val);
                case 'select':
                    return this.selection(val);
                case 'update':
                    return this.update(val);
                case 'create extension':
                    return this.createExtension(val);
                case 'tablespace':
                    return this.tablespace(val);
                case 'set':
                    return this.setGlobal(val);
                case 'set timezone':
                    return this.setTimezone(val);
                case 'create sequence':
                    return this.createSequence(val);
                case 'alter sequence':
                    return this.alterSequence(val);
                case 'begin':
                    return this.begin(val);
                case 'drop index':
                    return this.dropIndex(val);
                case 'drop sequence':
                    return this.dropSequence(val);
                case 'drop table':
                    return this.dropTable(val);
                case 'create enum':
                    return this.createEnum(val);
                case 'union':
                case 'union all':
                    return this.union(val);
                case 'show':
                    return this.show(val);
                case 'prepare':
                    return this.prepare(val);
                case 'create view':
                    return this.createView(val);
                case 'create materialized view':
                    return this.createMaterializedView(val);
                case 'create schema':
                    return this.createSchema(val);
                case 'raise':
                    return this.raise(val);
                case 'comment':
                    return this.comment(val);
                case 'do':
                    return this.do(val);
                case 'create function':
                    return this.createFunction(val);
                case 'values':
                    return this.values(val);
                default:
                    throw utils_1.NotSupported.never(val);
            }
        }
        comment(val) {
            // not really supported :/
            return val;
        }
        createView(val) {
            const query = this.select(val.query);
            if (!query) {
                return null;
            }
            const ref = this.tableRef(val.name);
            if (!ref) {
                return null;
            }
            return assignChanged(val, {
                query,
                name: ref,
            });
        }
        createMaterializedView(val) {
            const query = this.select(val.query);
            if (!query) {
                return null;
            }
            const ref = this.tableRef(val.name);
            if (!ref) {
                return null;
            }
            return assignChanged(val, {
                query,
                name: ref,
            });
        }
        do(val) {
            return val;
        }
        createFunction(val) {
            // process arguments
            const args = arrayNilMap(val.arguments, a => {
                const type = this.dataType(a.type);
                return assignChanged(a, { type });
            });
            // process return type
            let returns;
            if (val.returns) {
                switch (val.returns.kind) {
                    case 'table':
                        returns = assignChanged(val.returns, {
                            columns: arrayNilMap(val.returns.columns, v => {
                                const type = this.dataType(v.type);
                                return type && assignChanged(v, { type });
                            })
                        });
                        break;
                    case undefined:
                    case null:
                    case 'array':
                        returns = this.dataType(val.returns);
                        break;
                    default:
                        throw utils_1.NotSupported.never(val.returns);
                }
            }
            return assignChanged(val, {
                returns,
                arguments: args,
            });
        }
        show(val) {
            return val;
        }
        createEnum(val) {
            return val;
        }
        dropTable(val) {
            return val;
        }
        dropIndex(val) {
            return val;
        }
        dropSequence(val) {
            return val;
        }
        alterSequence(seq) {
            if (seq.change.type === 'set options') {
                if (seq.change.as) {
                    this.dataType(seq.change.as);
                }
            }
            return seq;
        }
        begin(begin) {
            return begin;
        }
        createSequence(seq) {
            if (seq.options.as) {
                this.dataType(seq.options.as);
            }
            return seq;
        }
        tablespace(val) {
            return val;
        }
        setGlobal(val) {
            return val;
        }
        setTimezone(val) {
            return val;
        }
        update(val) {
            if (!val) {
                return val;
            }
            const table = this.tableRef(val.table);
            if (!table) {
                return null; // nothing to update
            }
            const where = val.where && this.expr(val.where);
            const sets = arrayNilMap(val.sets, x => this.set(x));
            if (!(sets === null || sets === void 0 ? void 0 : sets.length)) {
                return null; // nothing to update
            }
            const returning = arrayNilMap(val.returning, c => this.selectionColumn(c));
            return assignChanged(val, {
                table,
                where,
                sets,
                returning,
            });
        }
        insert(val) {
            var _a, _b;
            const into = this.tableRef(val.into);
            if (!into) {
                return null; // nowhere to insert into
            }
            const select = val.insert && this.select(val.insert);
            if (!select) {
                // nothing to insert
                return null;
            }
            const returning = arrayNilMap(val.returning, c => this.selectionColumn(c));
            const onConflictOn = arrayNilMap((_a = val.onConflict) === null || _a === void 0 ? void 0 : _a.on, e => this.expr(e));
            let ocdo = (_b = val.onConflict) === null || _b === void 0 ? void 0 : _b.do;
            if (ocdo && ocdo !== 'do nothing') {
                const sets = arrayNilMap(ocdo.sets, x => this.set(x));
                if (!(sets === null || sets === void 0 ? void 0 : sets.length)) {
                    ocdo = 'do nothing';
                }
                else if (ocdo.sets !== sets) {
                    ocdo = { sets };
                }
            }
            return assignChanged(val, {
                into,
                insert: select,
                returning,
                onConflict: !ocdo ? val.onConflict : assignChanged(val.onConflict, {
                    do: ocdo,
                    on: onConflictOn,
                }),
            });
        }
        raise(val) {
            return assignChanged(val, {
                formatExprs: val.formatExprs && arrayNilMap(val.formatExprs, x => this.expr(x)),
                using: val.using && arrayNilMap(val.using, u => {
                    return assignChanged(u, {
                        value: this.expr(u.value),
                    });
                }),
            });
        }
        delete(val) {
            const from = this.tableRef(val.from);
            if (!from) {
                return null; // nothing to delete
            }
            const where = val.where && this.expr(val.where);
            const returning = arrayNilMap(val.returning, c => this.selectionColumn(c));
            return assignChanged(val, {
                where,
                returning,
                from,
            });
        }
        createSchema(val) {
            return val;
        }
        createTable(val) {
            const columns = arrayNilMap(val.columns, col => {
                switch (col.kind) {
                    case 'column':
                        return this.createColumn(col);
                    case 'like table':
                        return this.likeTable(col);
                    default:
                        throw utils_1.NotSupported.never(col);
                }
            });
            if (!(columns === null || columns === void 0 ? void 0 : columns.length)) {
                return null; // no column to create
            }
            return assignChanged(val, {
                columns,
            });
        }
        likeTable(col) {
            const like = this.tableRef(col.like);
            if (!like) {
                return null;
            }
            return assignChanged(col, { like });
        }
        truncateTable(val) {
            return val;
        }
        constraint(c) {
            switch (c.type) {
                case 'not null':
                case 'null':
                case 'primary key':
                case 'unique':
                case 'add generated':
                    return c;
                case 'default': {
                    const def = this.expr(c.default);
                    if (!def) {
                        return null;
                    }
                    return assignChanged(c, {
                        default: def,
                    });
                }
                case 'check': {
                    const def = this.expr(c.expr);
                    if (!def) {
                        return null;
                    }
                    return assignChanged(c, {
                        expr: def,
                    });
                }
                default:
                    throw utils_1.NotSupported.never(c);
            }
        }
        set(st) {
            const value = st.value === 'default'
                ? st.value
                : this.expr(st.value);
            if (!value) {
                return null;
            }
            return assignChanged(st, {
                value,
            });
        }
        // =========================================
        // ================ STUFF ==================
        // =========================================
        /** Called when a data type definition is encountered */
        dataType(dataType) {
            return dataType;
        }
        /** Called when an alias of a table is created */
        tableRef(st) {
            return st;
        }
        transaction(val) {
            return val;
        }
        createExtension(val) {
            return val;
        }
        createIndex(val) {
            const expressions = arrayNilMap(val.expressions, e => {
                const expression = this.expr(e.expression);
                if (expression === e.expression) {
                    return e;
                }
                if (!expression) {
                    return null; // no more index expression
                }
                return {
                    ...e,
                    expression,
                };
            });
            if (!(expressions === null || expressions === void 0 ? void 0 : expressions.length)) {
                return null; // no columns to create index on
            }
            return assignChanged(val, {
                expressions,
            });
        }
        prepare(st) {
            const statement = this.statement(st.statement);
            if (!statement) {
                return null;
            }
            return assignChanged(st, {
                args: arrayNilMap(st.args, a => this.dataType(a)),
                statement,
            });
        }
        // =========================================
        // ============== ALTER TABLE ==============
        // =========================================
        alterTable(st) {
            const table = this.tableRef(st.table);
            if (!table) {
                return null; // no table
            }
            let change;
            switch (st.change.type) {
                case 'add column': {
                    change = this.addColumn(st.change, st.table);
                    break;
                }
                case 'add constraint': {
                    change = this.addConstraint(st.change, st.table);
                    break;
                }
                case 'alter column': {
                    change = this.alterColumn(st.change, st.table);
                    break;
                }
                case 'rename': {
                    change = this.renameTable(st.change, st.table);
                    break;
                }
                case 'rename column': {
                    change = this.renameColumn(st.change, st.table);
                    break;
                }
                case 'rename constraint': {
                    change = this.renameConstraint(st.change, st.table);
                    break;
                }
                case 'drop column': {
                    change = this.dropColumn(st.change, st.table);
                    break;
                }
                case 'owner': {
                    change = this.setTableOwner(st.change, st.table);
                    break;
                }
                default:
                    throw utils_1.NotSupported.never(st.change);
            }
            if (!change) {
                return null; // no change left
            }
            return assignChanged(st, {
                table,
                change,
            });
        }
        dropColumn(change, table) {
            return change;
        }
        setTableOwner(change, table) {
            return change;
        }
        renameConstraint(change, table) {
            return change;
        }
        renameColumn(change, table) {
            return change;
        }
        renameTable(change, table) {
            return change;
        }
        alterColumn(change, inTable) {
            let alter;
            switch (change.alter.type) {
                case 'set default':
                    alter = this.setColumnDefault(change.alter, inTable, change.column);
                    break;
                case 'set type':
                    alter = this.setColumnType(change.alter, inTable, change.column);
                    break;
                case 'drop default':
                case 'set not null':
                case 'drop not null':
                    alter = this.alterColumnSimple(change.alter, inTable, change.column);
                    break;
                case 'add generated':
                    alter = this.alterColumnAddGenerated(change.alter, inTable, change.column);
                    break;
                default:
                    throw utils_1.NotSupported.never(change.alter);
            }
            if (!alter) {
                return null; // no more alter
            }
            return assignChanged(change, {
                alter,
            });
        }
        setColumnType(alter, inTable, inColumn) {
            const dataType = this.dataType(alter.dataType);
            return assignChanged(alter, {
                dataType,
            });
        }
        alterColumnAddGenerated(alter, inTable, inColumn) {
            return alter;
        }
        alterColumnSimple(alter, inTable, inColumn) {
            return alter;
        }
        setColumnDefault(alter, inTable, inColumn) {
            const def = this.expr(alter.default);
            if (!def) {
                return null; // no more default to set
            }
            return assignChanged(alter, {
                default: def,
            });
        }
        addConstraint(change, inTable) {
            return change;
        }
        addColumn(change, inTable) {
            const column = this.createColumn(change.column);
            if (!column) {
                return null; // no more column to add
            }
            return assignChanged(change, {
                column,
            });
        }
        createColumn(col) {
            var _a;
            // to be overriden
            const dataType = this.dataType(col.dataType);
            if (!dataType) {
                return null; // no data type => remove column
            }
            const constraints = (_a = arrayNilMap(col.constraints, m => this.constraint(m))) !== null && _a !== void 0 ? _a : undefined;
            return assignChanged(col, {
                dataType,
                constraints,
            });
        }
        // =========================================
        // ============== SELECTIONS ==============
        // =========================================
        select(val) {
            switch (val.type) {
                case 'select':
                    return this.selection(val);
                case 'union':
                case 'union all':
                    return this.union(val);
                case 'with':
                    return this.with(val);
                case 'values':
                    return this.values(val);
                case 'with recursive':
                    return this.withRecursive(val);
                default:
                    throw utils_1.NotSupported.never(val);
            }
        }
        selection(val) {
            var _a, _b;
            const from = arrayNilMap(val.from, c => this.from(c));
            const columns = arrayNilMap(val.columns, c => this.selectionColumn(c));
            const where = val.where && this.expr(val.where);
            const groupBy = arrayNilMap(val.groupBy, c => this.expr(c));
            const orderBy = this.orderBy(val.orderBy);
            const limit = assignChanged(val.limit, {
                limit: this.expr((_a = val.limit) === null || _a === void 0 ? void 0 : _a.limit),
                offset: this.expr((_b = val.limit) === null || _b === void 0 ? void 0 : _b.offset),
            });
            return assignChanged(val, {
                from,
                columns,
                where,
                groupBy,
                orderBy,
                limit,
            });
        }
        orderBy(orderBy) {
            return arrayNilMap(orderBy, c => {
                const by = this.expr(c.by);
                if (!by) {
                    return null;
                }
                if (by === c.by) {
                    return c;
                }
                return {
                    ...c,
                    by,
                };
            });
        }
        union(val) {
            const left = this.select(val.left);
            const right = this.select(val.right);
            if (!left || !right) {
                return left !== null && left !== void 0 ? left : right;
            }
            return assignChanged(val, {
                left,
                right
            });
        }
        with(val) {
            const bind = arrayNilMap(val.bind, s => {
                const statement = this.statement(s.statement);
                return withAccepts(statement)
                    ? assignChanged(s, { statement })
                    : null;
            });
            // no bindngs
            if (!bind) {
                return null;
            }
            const _in = this.statement(val.in);
            if (!withAccepts(_in)) {
                return null;
            }
            return assignChanged(val, {
                bind,
                in: _in,
            });
        }
        withRecursive(val) {
            const statement = this.union(val.bind);
            if (!statement) {
                return null;
            }
            // 'with recursive' only accepts unions
            if (statement.type !== 'union' && statement.type !== 'union all') {
                return null;
            }
            const _in = this.statement(val.in);
            if (!withAccepts(_in)) {
                return null;
            }
            return assignChanged(val, {
                bind: statement,
                in: _in,
            });
        }
        from(from) {
            switch (from.type) {
                case 'table':
                    return this.fromTable(from);
                case 'statement':
                    return this.fromStatement(from);
                case 'call':
                    return this.fromCall(from);
                default:
                    throw utils_1.NotSupported.never(from);
            }
        }
        fromCall(from) {
            const call = this.call(from);
            if (!call || call.type !== 'call') {
                return null;
            }
            return assignChanged(from, call);
        }
        fromStatement(from) {
            const statement = this.select(from.statement);
            if (!statement) {
                return null; // nothing to select from
            }
            const join = from.join && this.join(from.join);
            return assignChanged(from, {
                statement,
                join,
            });
        }
        values(from) {
            const values = arrayNilMap(from.values, x => arrayNilMap(x, y => this.expr(y)));
            if (!(values === null || values === void 0 ? void 0 : values.length)) {
                return null; // nothing to select from
            }
            return assignChanged(from, {
                values,
            });
        }
        join(join) {
            const on = join.on && this.expr(join.on);
            if (!on && !join.using) {
                return null;
            }
            return assignChanged(join, {
                on,
            });
        }
        fromTable(from) {
            const nfrom = this.tableRef(from.name);
            if (!nfrom) {
                return null; // nothing to select from
            }
            const join = from.join && this.join(from.join);
            return assignChanged(from, {
                name: nfrom,
                join,
            });
        }
        selectionColumn(val) {
            const expr = this.expr(val.expr);
            if (!expr) {
                return null; // not selected anymore
            }
            return assignChanged(val, {
                expr,
            });
        }
        // =========================================
        // ============== EXPRESSIONS ==============
        // =========================================
        expr(val) {
            if (!val) {
                return val;
            }
            switch (val.type) {
                case 'binary':
                    return this.binary(val);
                case 'unary':
                    return this.unary(val);
                case 'ref':
                    return this.ref(val);
                case 'string':
                case 'numeric':
                case 'integer':
                case 'boolean':
                case 'constant':
                case 'null':
                    return this.constant(val);
                case 'list':
                case 'array':
                    return this.array(val);
                case 'array select':
                    return this.arraySelect(val);
                case 'call':
                    return this.call(val);
                case 'cast':
                    return this.cast(val);
                case 'case':
                    return this.case(val);
                case 'member':
                    return this.member(val);
                case 'arrayIndex':
                    return this.arrayIndex(val);
                case 'ternary':
                    return this.ternary(val);
                case 'select':
                case 'union':
                case 'union all':
                case 'with':
                case 'with recursive':
                    return this.select(val);
                case 'keyword':
                    return this.valueKeyword(val);
                case 'parameter':
                    return this.parameter(val);
                case 'extract':
                    return this.extract(val);
                case 'overlay':
                    return this.callOverlay(val);
                case 'substring':
                    return this.callSubstring(val);
                case 'values':
                    return this.values(val);
                case 'default':
                    return this.default(val);
                default:
                    throw utils_1.NotSupported.never(val);
            }
        }
        arraySelect(val) {
            const select = this.select(val.select);
            if (!select) {
                return null;
            }
            return assignChanged(val, { select });
        }
        extract(st) {
            const from = this.expr(st.from);
            if (!from) {
                return null;
            }
            return assignChanged(st, { from });
        }
        valueKeyword(val) {
            return val;
        }
        ternary(val) {
            const value = this.expr(val.value);
            const lo = this.expr(val.lo);
            const hi = this.expr(val.hi);
            if (!value || !lo || !hi) {
                return null; // missing a branch
            }
            return assignChanged(val, {
                value,
                lo,
                hi,
            });
        }
        parameter(st) {
            return st;
        }
        arrayIndex(val) {
            const array = this.expr(val.array);
            const index = this.expr(val.index);
            if (!array || !index) {
                return null;
            }
            return assignChanged(val, {
                array,
                index,
            });
        }
        member(val) {
            const operand = this.expr(val.operand);
            if (!operand) {
                return null;
            }
            return assignChanged(val, {
                operand,
            });
        }
        case(val) {
            const value = val.value && this.expr(val.value);
            const whens = arrayNilMap(val.whens, w => {
                const when = this.expr(w.when);
                const value = this.expr(w.value);
                if (!when || !value) {
                    return null;
                }
                return assignChanged(w, {
                    value,
                    when,
                });
            });
            if (!(whens === null || whens === void 0 ? void 0 : whens.length)) {
                return null; // no case
            }
            const els = val.else && this.expr(val.else);
            return assignChanged(val, {
                value,
                whens,
                else: els,
            });
        }
        cast(val) {
            const operand = this.expr(val.operand);
            if (!operand) {
                return null;
            }
            return assignChanged(val, {
                operand,
            });
        }
        call(val) {
            const args = arrayNilMap(val.args, a => this.expr(a));
            if (!args) {
                return null;
            }
            const orderBy = this.orderBy(val.orderBy);
            const filter = this.expr(val.filter);
            return assignChanged(val, {
                args,
                orderBy,
                filter,
            });
        }
        callSubstring(val) {
            return assignChanged(val, {
                value: this.expr(val.value),
                from: this.expr(val.from),
                for: this.expr(val.for),
            });
        }
        callOverlay(val) {
            return assignChanged(val, {
                value: this.expr(val.value),
                placing: this.expr(val.placing),
                from: this.expr(val.from),
                for: this.expr(val.for),
            });
        }
        array(val) {
            const expressions = arrayNilMap(val.expressions, a => this.expr(a));
            if (!expressions) {
                return null;
            }
            return assignChanged(val, {
                expressions,
            });
        }
        constant(value) {
            return value;
        }
        default(value) {
            return value;
        }
        /** Called when a reference is used */
        ref(val) {
            return val;
        }
        unary(val) {
            const operand = this.expr(val.operand);
            if (!operand) {
                return null;
            }
            return assignChanged(val, {
                operand,
            });
        }
        binary(val) {
            const left = this.expr(val.left);
            const right = this.expr(val.right);
            if (!left || !right) {
                return null;
            }
            return assignChanged(val, {
                left,
                right,
            });
        }
    }
    exports.AstDefaultMapper = AstDefaultMapper;
    // ====== auto implement the replace mechanism
    const proto = AstDefaultMapper.prototype;
    for (const k of Object.getOwnPropertyNames(proto)) {
        const orig = proto[k];
        if (k === 'constructor' || k === 'super' || typeof orig !== 'function') {
            continue;
        }
        Object.defineProperty(proto, k, {
            configurable: false,
            get() {
                return function (...args) {
                    var _a;
                    const impl = (_a = this.wrapped) === null || _a === void 0 ? void 0 : _a[k];
                    if (!impl) {
                        return orig.apply(this, args);
                    }
                    return impl.apply(this.wrapped, args);
                };
            }
        });
    }
    // ====== auto implement the skip mechanism
    class SkipModifier extends AstDefaultMapper {
        constructor(parent) {
            super();
            this.parent = parent;
        }
    }
    for (const k of Object.getOwnPropertyNames(proto)) {
        const orig = proto[k];
        if (k === 'constructor' || k === 'super' || typeof orig !== 'function') {
            continue;
        }
        Object.defineProperty(SkipModifier.prototype, k, {
            configurable: false,
            get() {
                return function (...args) {
                    return orig.apply(this.parent.wrapped, args);
                };
            }
        });
    }


    /***/ }),
    /* 3 */
    /***/ (function(module, exports, __webpack_require__) {

    Object.defineProperty(exports, "__esModule", { value: true });
    exports.sqlKeywords = void 0;
    // https://www.postgresql.org/docs/current/sql-keywords-appendix.html
    // $('table.table').children('tbody').children().toArray().filter(x => { const txt = $($(x).children()[1]).text(); return txt.includes('reserved') && !txt.includes('non-reserved')}).map(x => $($(x).children()[0]).text())
    exports.sqlKeywords = [
        "ALL", "ANALYSE", "ANALYZE", "AND", "ANY", "ARRAY", "AS", "ASC", "ASYMMETRIC", "AUTHORIZATION", "BINARY", "BOTH", "CASE", "CAST", "CHECK", "COLLATE", "COLLATION", "COLUMN", "CONCURRENTLY", "CONSTRAINT", "CREATE", "CROSS", "CURRENT_CATALOG", "CURRENT_DATE", "CURRENT_ROLE", "CURRENT_SCHEMA", "CURRENT_TIME", "CURRENT_TIMESTAMP", "CURRENT_USER", "DEFAULT", "DEFERRABLE", "DESC", "DISTINCT", "DO", "ELSE", "END", "EXCEPT", "FALSE", "FETCH", "FOR", "FOREIGN", "FREEZE", "FROM", "FULL", "GRANT", "GROUP", "HAVING", "ILIKE", "IN", "INITIALLY", "INNER", "INTERSECT", "INTO", "IS", "ISNULL", "JOIN", "LATERAL", "LEADING", "LEFT", "LIKE", "LIMIT", "LOCALTIME", "LOCALTIMESTAMP", "NATURAL", "NOT", "NOTNULL", "NULL", "OFFSET", "ON", "ONLY", "OR", "ORDER", "OUTER", "OVERLAPS", "PLACING", "PRIMARY", "REFERENCES", "RETURNING", "RIGHT", "SELECT", "SESSION_USER", "SIMILAR", "SOME", "SYMMETRIC", "TABLE", "TABLESAMPLE", "THEN", "TO", "TRAILING", "TRUE", "UNION", "UNIQUE", "USER", "USING", "VARIADIC", "VERBOSE", "WHEN", "WHERE", "WINDOW", "WITH"
        // added manually
        ,
        "PRECISION"
    ];


    /***/ }),
    /* 4 */
    /***/ (function(module, exports, __webpack_require__) {

    Object.defineProperty(exports, "__esModule", { value: true });
    exports.intervalToString = exports.normalizeInterval = exports.buildInterval = void 0;
    const types = [
        ['years', 12],
        ['months', 30],
        ['days', 24],
        ['hours', 60],
        ['minutes', 60],
        ['seconds', 1000],
        ['milliseconds', 0],
    ];
    function* unwrap(k) {
        if (typeof k[1] === 'number') {
            yield k;
        }
        else {
            for (const v of k) {
                yield* unwrap(v);
            }
        }
    }
    function buildInterval(orig, vals) {
        var _a;
        const ret = {};
        if (vals === 'invalid') {
            throw new Error(`invalid input syntax for type interval: "${orig}"`);
        }
        for (const [k, v] of unwrap(vals)) {
            ret[k] = ((_a = ret[k]) !== null && _a !== void 0 ? _a : 0) + v;
        }
        return ret;
    }
    exports.buildInterval = buildInterval;
    /** Returns a normalized copy of the given interval */
    function normalizeInterval(value) {
        var _a, _b, _c, _d, _e, _f, _g, _h, _j;
        const ret = { ...value };
        // trim non-integers
        for (let i = 0; i < types.length; i++) {
            const [k, mul] = types[i];
            const v = (_a = ret[k]) !== null && _a !== void 0 ? _a : 0;
            const int = v >= 0
                ? Math.floor(v)
                : Math.ceil(v);
            if (!v || int === v) {
                continue;
            }
            const nk = (_b = types[i + 1]) === null || _b === void 0 ? void 0 : _b[0];
            if (nk) {
                ret[nk] = ((_c = ret[nk]) !== null && _c !== void 0 ? _c : 0) + mul * (v - int);
            }
            ret[k] = int;
        }
        if (ret.months || ret.years) {
            const m = ((_d = ret.months) !== null && _d !== void 0 ? _d : 0) + ((_e = ret.years) !== null && _e !== void 0 ? _e : 0) * 12;
            ret.months = m % 12;
            ret.years = (m - ret.months) / 12;
        }
        // normalize time
        let t = ((_f = ret.hours) !== null && _f !== void 0 ? _f : 0) * 3600
            + ((_g = ret.minutes) !== null && _g !== void 0 ? _g : 0) * 60
            + ((_h = ret.seconds) !== null && _h !== void 0 ? _h : 0)
            + ((_j = ret.milliseconds) !== null && _j !== void 0 ? _j : 0) / 1000;
        let sign = 1;
        if (t < 0) {
            sign = -1;
            t = -t;
        }
        if (t >= 3600) {
            ret.hours = sign * Math.floor(t / 3600);
            t -= sign * ret.hours * 3600;
        }
        else {
            delete ret.hours;
        }
        if (t >= 60) {
            ret.minutes = sign * Math.floor(t / 60);
            t -= sign * ret.minutes * 60;
        }
        else {
            delete ret.minutes;
        }
        if (t > 0) {
            ret.seconds = sign * Math.floor(t);
            t -= sign * ret.seconds;
        }
        else {
            delete ret.seconds;
        }
        if (t > 0) {
            ret.milliseconds = sign * Math.round(t * 1000);
        }
        else {
            delete ret.milliseconds;
        }
        // trim zeros.
        for (const [k] of types) {
            if (!ret[k]) {
                delete ret[k];
            }
        }
        return ret;
    }
    exports.normalizeInterval = normalizeInterval;
    /** Interval value to postgres string representation  */
    function intervalToString(value) {
        var _a, _b, _c;
        value = normalizeInterval(value);
        const ret = [];
        if (value.years) {
            ret.push(value.years === 1 ? '1 year' : value.years + ' years');
        }
        if (value.months) {
            ret.push(value.months === 1 ? '1 month' : value.months + ' months');
        }
        if (value.days) {
            ret.push(value.days === 1 ? '1 day' : value.days + ' days');
        }
        if (value.hours || value.minutes || value.seconds || value.milliseconds) {
            let time = `${num((_a = value.hours) !== null && _a !== void 0 ? _a : 0)}:${num((_b = value.minutes) !== null && _b !== void 0 ? _b : 0)}:${num((_c = value.seconds) !== null && _c !== void 0 ? _c : 0)}`;
            if (value.milliseconds) {
                time = time + (value.milliseconds / 1000).toString().substr(1);
            }
            if (neg(value.hours) || neg(value.minutes) || neg(value.seconds) || neg(value.milliseconds)) {
                time = '-' + time;
            }
            ret.push(time);
        }
        return ret.join(' ');
    }
    exports.intervalToString = intervalToString;
    function num(v) {
        v = Math.abs(v);
        return v < 10 ? '0' + v : v.toString();
    }
    function neg(v) {
        return v && v < 0;
    }


    /***/ }),
    /* 5 */
    /***/ (function(module, exports, __webpack_require__) {

    Object.defineProperty(exports, "__esModule", { value: true });
    exports.astVisitor = void 0;
    const ast_mapper_1 = __webpack_require__(2);
    class Visitor {
        super() {
            return new SkipVisitor(this);
        }
    }
    // =============== auto implement the mapper
    const mapperProto = ast_mapper_1.AstDefaultMapper.prototype;
    for (const k of Object.getOwnPropertyNames(mapperProto)) {
        const orig = mapperProto[k];
        if (k === 'constructor' || k === 'super' || typeof orig !== 'function') {
            continue;
        }
        Object.defineProperty(Visitor.prototype, k, {
            configurable: false,
            get() {
                return function (...args) {
                    const impl = this.visitor[k];
                    if (!impl) {
                        // just ignore & forward call to mapper
                        return orig.apply(this, args);
                    }
                    // return first argument
                    // ...which means "I dont wana change anything"
                    //    in the ast-modifier language.
                    impl.apply(this.visitor, args);
                    return args[0];
                };
            }
        });
    }
    // ====== auto implement the skip mechanism
    class SkipVisitor {
        constructor(parent) {
            this.parent = parent;
        }
    }
    for (const k of Object.getOwnPropertyNames(mapperProto)) {
        const orig = mapperProto[k];
        if (k === 'constructor' || k === 'super' || typeof orig !== 'function') {
            continue;
        }
        Object.defineProperty(SkipVisitor.prototype, k, {
            configurable: false,
            get() {
                return function (...args) {
                    return orig.apply(this.parent, args);
                };
            }
        });
    }
    /**
     * Builds an AST visitor based on the default implementation, merged with the one you provide.
     *
     * Example of visitor which counts references to a column 'foo':
     *
     * ```ts
     * let cnt = 0;
     * const visitor = astVisitor(v => ({
     *      ref: r => {
     *          if (r.name === 'foo') {
     *              cnt++;
     *          }
     *          v.super().ref(r);
     *      }
     *  }));
     *
     * visitor.statement(myStatementToCount);
     * console.log(`${cnt} references to foo !`);
     * ```
     */
    function astVisitor(visitorBuilder) {
        return ast_mapper_1.astMapper(m => {
            const ret = new Visitor();
            ret.mapper = m;
            ret.visitor = visitorBuilder(ret);
            return ret;
        });
    }
    exports.astVisitor = astVisitor;


    /***/ }),
    /* 6 */
    /***/ (function(module, exports, __webpack_require__) {

    Object.defineProperty(exports, "__esModule", { value: true });
    exports.trimNullish = exports.NotSupported = void 0;
    class NotSupported extends Error {
        constructor(what) {
            super('Not supported' + (what ? ': ' + what : ''));
        }
        static never(value, msg) {
            return new NotSupported(`${msg !== null && msg !== void 0 ? msg : ''} ${JSON.stringify(value)}`);
        }
    }
    exports.NotSupported = NotSupported;
    function trimNullish(value, depth = 5) {
        if (depth < 0)
            return value;
        if (value instanceof Array) {
            value.forEach(x => trimNullish(x, depth - 1));
        }
        if (typeof value !== 'object' || value instanceof Date)
            return value;
        if (!value) {
            return value;
        }
        for (const k of Object.keys(value)) {
            const val = value[k];
            if (val === undefined || val === null)
                delete value[k];
            else
                trimNullish(val, depth - 1);
        }
        return value;
    }
    exports.trimNullish = trimNullish;


    /***/ }),
    /* 7 */
    /***/ (function(module, exports, __webpack_require__) {

    var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
    }) : (function(o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        o[k2] = m[k];
    }));
    var __exportStar = (this && this.__exportStar) || function(m, exports) {
        for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var parser_1 = __webpack_require__(8);
    Object.defineProperty(exports, "parse", { enumerable: true, get: function () { return parser_1.parse; } });
    Object.defineProperty(exports, "parseFirst", { enumerable: true, get: function () { return parser_1.parseFirst; } });
    Object.defineProperty(exports, "parseArrayLiteral", { enumerable: true, get: function () { return parser_1.parseArrayLiteral; } });
    Object.defineProperty(exports, "parseGeometricLiteral", { enumerable: true, get: function () { return parser_1.parseGeometricLiteral; } });
    Object.defineProperty(exports, "parseIntervalLiteral", { enumerable: true, get: function () { return parser_1.parseIntervalLiteral; } });
    Object.defineProperty(exports, "parseWithComments", { enumerable: true, get: function () { return parser_1.parseWithComments; } });
    var ast_visitor_1 = __webpack_require__(5);
    Object.defineProperty(exports, "astVisitor", { enumerable: true, get: function () { return ast_visitor_1.astVisitor; } });
    var ast_mapper_1 = __webpack_require__(2);
    Object.defineProperty(exports, "arrayNilMap", { enumerable: true, get: function () { return ast_mapper_1.arrayNilMap; } });
    Object.defineProperty(exports, "assignChanged", { enumerable: true, get: function () { return ast_mapper_1.assignChanged; } });
    Object.defineProperty(exports, "astMapper", { enumerable: true, get: function () { return ast_mapper_1.astMapper; } });
    var to_sql_1 = __webpack_require__(19);
    Object.defineProperty(exports, "toSql", { enumerable: true, get: function () { return to_sql_1.toSql; } });
    __exportStar(__webpack_require__(21), exports);
    var interval_builder_1 = __webpack_require__(4);
    Object.defineProperty(exports, "intervalToString", { enumerable: true, get: function () { return interval_builder_1.intervalToString; } });
    Object.defineProperty(exports, "normalizeInterval", { enumerable: true, get: function () { return interval_builder_1.normalizeInterval; } });


    /***/ }),
    /* 8 */
    /***/ (function(module, exports, __webpack_require__) {

    var __importDefault = (this && this.__importDefault) || function (mod) {
        return (mod && mod.__esModule) ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.parseGeometricLiteral = exports.parseIntervalLiteral = exports.parseArrayLiteral = exports.parse = exports.parseWithComments = exports.parseFirst = void 0;
    const nearley_1 = __webpack_require__(9);
    const main_ne_1 = __importDefault(__webpack_require__(10));
    const array_ne_1 = __importDefault(__webpack_require__(11));
    const geometric_ne_1 = __importDefault(__webpack_require__(13));
    const interval_ne_1 = __importDefault(__webpack_require__(15));
    const interval_iso_ne_1 = __importDefault(__webpack_require__(17));
    const interval_builder_1 = __webpack_require__(4);
    const lexer_1 = __webpack_require__(1);
    let sqlCompiled;
    let arrayCompiled;
    let geometricCompiled;
    let intervalTextCompiled;
    let intervalIsoCompiled;
    /** Parse the first SQL statement in the given text (discards the rest), and return its AST */
    function parseFirst(sql) {
        const first = parse(sql);
        return first[0];
    }
    exports.parseFirst = parseFirst;
    /** Parse an AST from SQL, and get the comments */
    function parseWithComments(sql, options) {
        return lexer_1.trackingComments(() => parse(sql, options));
    }
    exports.parseWithComments = parseWithComments;
    function parse(sql, optEntry) {
        if (!sqlCompiled) {
            sqlCompiled = nearley_1.Grammar.fromCompiled(main_ne_1.default);
        }
        const entry = typeof optEntry === 'string'
            ? optEntry
            : optEntry === null || optEntry === void 0 ? void 0 : optEntry.entry;
        const opts = typeof optEntry === 'string' ? null : optEntry;
        // parse sql
        const doParse = () => _parse(sql, sqlCompiled, entry);
        let parsed = (opts === null || opts === void 0 ? void 0 : opts.locationTracking) ? lexer_1.tracking(doParse)
            : doParse();
        // always return an array of statements.
        if (!entry && !Array.isArray(parsed)) {
            parsed = [parsed];
        }
        return parsed;
    }
    exports.parse = parse;
    function parseArrayLiteral(sql) {
        if (!arrayCompiled) {
            arrayCompiled = nearley_1.Grammar.fromCompiled(array_ne_1.default);
        }
        return _parse(sql, arrayCompiled);
    }
    exports.parseArrayLiteral = parseArrayLiteral;
    function parseIntervalLiteral(literal) {
        if (literal.startsWith('P')) {
            if (!intervalIsoCompiled) {
                intervalIsoCompiled = nearley_1.Grammar.fromCompiled(interval_iso_ne_1.default);
            }
            return interval_builder_1.buildInterval(literal, _parse(literal, intervalIsoCompiled));
        }
        else {
            if (!intervalTextCompiled) {
                intervalTextCompiled = nearley_1.Grammar.fromCompiled(interval_ne_1.default);
            }
            const low = literal.toLowerCase(); // full text syntax is case insensitive
            return interval_builder_1.buildInterval(literal, _parse(low, intervalTextCompiled));
        }
    }
    exports.parseIntervalLiteral = parseIntervalLiteral;
    function parseGeometricLiteral(sql, type) {
        if (!geometricCompiled) {
            geometricCompiled = nearley_1.Grammar.fromCompiled(geometric_ne_1.default);
        }
        return _parse(sql, geometricCompiled, type);
    }
    exports.parseGeometricLiteral = parseGeometricLiteral;
    function _parse(sql, grammar, entry) {
        try {
            grammar.start = entry !== null && entry !== void 0 ? entry : 'main';
            const parser = new nearley_1.Parser(grammar);
            parser.feed(sql);
            const asts = parser.finish();
            if (!asts.length) {
                throw new Error('Unexpected end of input');
            }
            else if (asts.length !== 1) {
                throw new Error(`💀 Ambiguous SQL syntax: Please file an issue stating the request that has failed at https://github.com/oguimbal/pgsql-ast-parser:

        ${sql}

        `);
            }
            return asts[0];
        }
        catch (e) {
            if (typeof (e === null || e === void 0 ? void 0 : e.message) !== 'string') {
                throw e;
            }
            let msg = e.message;
            // remove all the stack crap of nearley parser
            let begin = null;
            const parts = [];
            const reg = /A (.+) token based on:/g;
            let m;
            while (m = reg.exec(msg)) {
                begin = begin !== null && begin !== void 0 ? begin : msg.substr(0, m.index);
                parts.push(`    - A "${m[1]}" token`);
            }
            if (begin) {
                msg = begin + parts.join('\n') + '\n\n';
            }
            e.message = msg;
            throw e;
        }
    }


    /***/ }),
    /* 9 */
    /***/ (function(module, exports) {

    module.exports = nearley;

    /***/ }),
    /* 10 */
    /***/ (function(module, exports, __webpack_require__) {

    Object.defineProperty(exports, "__esModule", { value: true });
    // Generated automatically by nearley, version unknown
    // http://github.com/Hardmath123/nearley
    // Bypasses TS6133. Allow declared but unused functions.
    // @ts-ignore
    function id(d) { return d[0]; }
    const lexer_1 = __webpack_require__(1);
    const lexer_2 = __webpack_require__(1);
    function asName(val) {
        const name = toStr(val);
        return lexer_2.track(val, { name });
    }
    function asLit(val) {
        const value = toStr(val);
        return lexer_2.track(val, { value });
    }
    function unwrap(e) {
        if (Array.isArray(e) && e.length === 1) {
            e = unwrap(e[0]);
        }
        if (Array.isArray(e) && !e.length) {
            return null;
        }
        return lexer_2.unbox(e);
    }
    const get = (i) => (x) => lexer_2.track(x, x[i]);
    const last = (x) => Array.isArray(x) ? lexer_2.track(x[x.length - 1], x[x.length - 1]) : x;
    const value = (x) => x && x.value;
    function flatten(e) {
        if (Array.isArray(e)) {
            const ret = [];
            for (const i of e) {
                ret.push(...flatten(i));
            }
            return ret;
        }
        if (!e) {
            return [];
        }
        return [e];
    }
    function asStr(value) {
        var _a;
        value = lexer_2.unbox(value);
        return (_a = value === null || value === void 0 ? void 0 : value.value) !== null && _a !== void 0 ? _a : value;
    }
    function flattenStr(e) {
        const fl = flatten(lexer_2.unbox(e));
        return fl.filter(x => !!x)
            .map(x => asStr(x))
            .filter(x => typeof x === 'string')
            .map(x => x.trim())
            .filter(x => !!x);
    }
    function toStr(e, join) {
        return flattenStr(e).join(join || '');
    }
    function fromEntries(vals) {
        const ret = {};
        for (const [k, v] of vals) {
            ret[k] = v;
        }
        return ret;
    }
    const kwSensitivity = { sensitivity: 'accent' };
    const eqInsensitive = (a, b) => a.localeCompare(b, undefined, kwSensitivity) === 0;
    const notReservedKw = (kw) => (x, _, rej) => {
        const val = asStr(x[0]);
        if (eqInsensitive(val, kw)) {
            return lexer_2.box(x, kw);
        }
        return rej;
    };
    const kw = notReservedKw;
    const anyKw = (...kw) => {
        const kwSet = new Set(kw);
        return (x, _, rej) => {
            const val = typeof x[0] === 'string' ? x[0] : x[0].value;
            return kwSet.has(val) ? val : rej;
        };
    };
    function setSeqOpts(ret, opts) {
        const defs = new Set();
        const unboxed = opts.map(lexer_2.unbox);
        for (const [k, v] of unboxed) {
            if (defs.has(k)) {
                throw new Error('conflicting or redundant options');
            }
            defs.add(k);
            ret[k] = lexer_2.unbox(v);
        }
    }
    const grammar = {
        Lexer: lexer_1.lexerAny,
        ParserRules: [
            { "name": "lparen", "symbols": [(lexer_1.lexerAny.has("lparen") ? { type: "lparen" } : lparen)] },
            { "name": "rparen", "symbols": [(lexer_1.lexerAny.has("rparen") ? { type: "rparen" } : rparen)] },
            { "name": "number$subexpression$1", "symbols": ["float"] },
            { "name": "number$subexpression$1", "symbols": ["int"] },
            { "name": "number", "symbols": ["number$subexpression$1"], "postprocess": unwrap },
            { "name": "dot", "symbols": [(lexer_1.lexerAny.has("dot") ? { type: "dot" } : dot)], "postprocess": id },
            { "name": "float", "symbols": [(lexer_1.lexerAny.has("float") ? { type: "float" } : float)], "postprocess": x => lexer_2.box(x, parseFloat(unwrap(x))) },
            { "name": "int", "symbols": [(lexer_1.lexerAny.has("int") ? { type: "int" } : int)], "postprocess": x => lexer_2.box(x, parseInt(unwrap(x), 10)) },
            { "name": "comma", "symbols": [(lexer_1.lexerAny.has("comma") ? { type: "comma" } : comma)], "postprocess": id },
            { "name": "star", "symbols": [(lexer_1.lexerAny.has("star") ? { type: "star" } : star)], "postprocess": x => lexer_2.box(x, x[0].value) },
            { "name": "string$subexpression$1", "symbols": [(lexer_1.lexerAny.has("string") ? { type: "string" } : string)] },
            { "name": "string$subexpression$1", "symbols": [(lexer_1.lexerAny.has("eString") ? { type: "eString" } : eString)] },
            { "name": "string", "symbols": ["string$subexpression$1"], "postprocess": x => lexer_2.box(x, unwrap(x[0]).value) },
            { "name": "ident", "symbols": ["word"], "postprocess": get(0) },
            { "name": "word", "symbols": [(lexer_1.lexerAny.has("kw_primary") ? { type: "kw_primary" } : kw_primary)], "postprocess": x => lexer_2.box(x, 'primary') },
            { "name": "word", "symbols": [(lexer_1.lexerAny.has("kw_unique") ? { type: "kw_unique" } : kw_unique)], "postprocess": x => lexer_2.box(x, 'unique') },
            { "name": "word", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": x => {
                    const val = x[0].value;
                    return lexer_2.box(x, val[0] === '"' ? val.substr(1, val.length - 2) : val);
                } },
            { "name": "collist_paren", "symbols": ["lparen", "collist", "rparen"], "postprocess": get(1) },
            { "name": "collist$ebnf$1", "symbols": [] },
            { "name": "collist$ebnf$1$subexpression$1", "symbols": ["comma", "ident"], "postprocess": last },
            { "name": "collist$ebnf$1", "symbols": ["collist$ebnf$1", "collist$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "collist", "symbols": ["ident", "collist$ebnf$1"], "postprocess": ([head, tail]) => {
                    return [head, ...(tail || [])];
                } },
            { "name": "kw_between", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('between') },
            { "name": "kw_conflict", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('conflict') },
            { "name": "kw_nothing", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('nothing') },
            { "name": "kw_begin", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('begin') },
            { "name": "kw_if", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('if') },
            { "name": "kw_exists", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('exists') },
            { "name": "kw_key", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('key') },
            { "name": "kw_index", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('index') },
            { "name": "kw_extension", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('extension') },
            { "name": "kw_schema", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('schema') },
            { "name": "kw_nulls", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('nulls') },
            { "name": "kw_first", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('first') },
            { "name": "kw_last", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('last') },
            { "name": "kw_start", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('start') },
            { "name": "kw_restart", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('restart') },
            { "name": "kw_filter", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('filter') },
            { "name": "kw_commit", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('commit') },
            { "name": "kw_tablespace", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('tablespace') },
            { "name": "kw_transaction", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('transaction') },
            { "name": "kw_work", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('work') },
            { "name": "kw_read", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('read') },
            { "name": "kw_write", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('write') },
            { "name": "kw_isolation", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('isolation') },
            { "name": "kw_level", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('level') },
            { "name": "kw_serializable", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('serializable') },
            { "name": "kw_rollback", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('rollback') },
            { "name": "kw_insert", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('insert') },
            { "name": "kw_value", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('value') },
            { "name": "kw_values", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('values') },
            { "name": "kw_update", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('update') },
            { "name": "kw_set", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('set') },
            { "name": "kw_version", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('version') },
            { "name": "kw_alter", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('alter') },
            { "name": "kw_rename", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('rename') },
            { "name": "kw_sequence", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('sequence') },
            { "name": "kw_temp", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('temp') },
            { "name": "kw_temporary", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('temporary') },
            { "name": "kw_add", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('add') },
            { "name": "kw_owner", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('owner') },
            { "name": "kw_owned", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('owned') },
            { "name": "kw_including", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('including') },
            { "name": "kw_excluding", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('excluding') },
            { "name": "kw_none", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('none') },
            { "name": "kw_drop", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('drop') },
            { "name": "kw_operator", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('operator') },
            { "name": "kw_minvalue", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('minvalue') },
            { "name": "kw_maxvalue", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('maxvalue') },
            { "name": "kw_data", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('data') },
            { "name": "kw_type", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('type') },
            { "name": "kw_delete", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('delete') },
            { "name": "kw_cache", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('cache') },
            { "name": "kw_cascade", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('cascade') },
            { "name": "kw_no", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('no') },
            { "name": "kw_timestamp", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('timestamp') },
            { "name": "kw_cycle", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('cycle') },
            { "name": "kw_function", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('function') },
            { "name": "kw_returns", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('returns') },
            { "name": "kw_language", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('language') },
            { "name": "kw_out", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('out') },
            { "name": "kw_inout", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('inout') },
            { "name": "kw_variadic", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('variadic') },
            { "name": "kw_action", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('action') },
            { "name": "kw_restrict", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('restrict') },
            { "name": "kw_truncate", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('truncate') },
            { "name": "kw_increment", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('increment') },
            { "name": "kw_by", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('by') },
            { "name": "kw_row", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('row') },
            { "name": "kw_rows", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('rows') },
            { "name": "kw_next", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('next') },
            { "name": "kw_match", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('match') },
            { "name": "kw_replace", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('replace') },
            { "name": "kw_recursive", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('recursive') },
            { "name": "kw_view", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('view') },
            { "name": "kw_cascaded", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('cascaded') },
            { "name": "kw_unlogged", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('unlogged') },
            { "name": "kw_global", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('global') },
            { "name": "kw_option", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('option') },
            { "name": "kw_materialized", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('materialized') },
            { "name": "kw_partial", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('partial') },
            { "name": "kw_partition", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('partition') },
            { "name": "kw_simple", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('simple') },
            { "name": "kw_generated", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('generated') },
            { "name": "kw_always", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('always') },
            { "name": "kw_identity", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('identity') },
            { "name": "kw_name", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('name') },
            { "name": "kw_enum", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('enum') },
            { "name": "kw_show", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('show') },
            { "name": "kw_overriding", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('overriding') },
            { "name": "kw_over", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('over') },
            { "name": "kw_system", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('system') },
            { "name": "kw_comment", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('comment') },
            { "name": "kw_time", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('time') },
            { "name": "kw_zone", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('zone') },
            { "name": "kw_interval", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('interval') },
            { "name": "kw_hour", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('hour') },
            { "name": "kw_minute", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('minute') },
            { "name": "kw_local", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('local') },
            { "name": "kw_prepare", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('prepare') },
            { "name": "kw_raise", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('raise') },
            { "name": "kw_continue", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('continue') },
            { "name": "kw_ifnotexists", "symbols": ["kw_if", (lexer_1.lexerAny.has("kw_not") ? { type: "kw_not" } : kw_not), "kw_exists"] },
            { "name": "kw_ifexists", "symbols": ["kw_if", "kw_exists"] },
            { "name": "kw_not_null", "symbols": [(lexer_1.lexerAny.has("kw_not") ? { type: "kw_not" } : kw_not), (lexer_1.lexerAny.has("kw_null") ? { type: "kw_null" } : kw_null)] },
            { "name": "kw_primary_key", "symbols": [(lexer_1.lexerAny.has("kw_primary") ? { type: "kw_primary" } : kw_primary), "kw_key"] },
            { "name": "data_type$ebnf$1$subexpression$1$macrocall$2", "symbols": ["int"] },
            { "name": "data_type$ebnf$1$subexpression$1$macrocall$1$ebnf$1", "symbols": [] },
            { "name": "data_type$ebnf$1$subexpression$1$macrocall$1$ebnf$1$subexpression$1", "symbols": [(lexer_1.lexerAny.has("comma") ? { type: "comma" } : comma), "data_type$ebnf$1$subexpression$1$macrocall$2"], "postprocess": last },
            { "name": "data_type$ebnf$1$subexpression$1$macrocall$1$ebnf$1", "symbols": ["data_type$ebnf$1$subexpression$1$macrocall$1$ebnf$1", "data_type$ebnf$1$subexpression$1$macrocall$1$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "data_type$ebnf$1$subexpression$1$macrocall$1", "symbols": ["data_type$ebnf$1$subexpression$1$macrocall$2", "data_type$ebnf$1$subexpression$1$macrocall$1$ebnf$1"], "postprocess": ([head, tail]) => {
                    return [head, ...(tail || [])];
                } },
            { "name": "data_type$ebnf$1$subexpression$1", "symbols": ["lparen", "data_type$ebnf$1$subexpression$1$macrocall$1", "rparen"], "postprocess": get(1) },
            { "name": "data_type$ebnf$1", "symbols": ["data_type$ebnf$1$subexpression$1"], "postprocess": id },
            { "name": "data_type$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "data_type$ebnf$2$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_array") ? { type: "kw_array" } : kw_array)] },
            { "name": "data_type$ebnf$2$subexpression$1$ebnf$1$subexpression$1", "symbols": [(lexer_1.lexerAny.has("lbracket") ? { type: "lbracket" } : lbracket), (lexer_1.lexerAny.has("rbracket") ? { type: "rbracket" } : rbracket)] },
            { "name": "data_type$ebnf$2$subexpression$1$ebnf$1", "symbols": ["data_type$ebnf$2$subexpression$1$ebnf$1$subexpression$1"] },
            { "name": "data_type$ebnf$2$subexpression$1$ebnf$1$subexpression$2", "symbols": [(lexer_1.lexerAny.has("lbracket") ? { type: "lbracket" } : lbracket), (lexer_1.lexerAny.has("rbracket") ? { type: "rbracket" } : rbracket)] },
            { "name": "data_type$ebnf$2$subexpression$1$ebnf$1", "symbols": ["data_type$ebnf$2$subexpression$1$ebnf$1", "data_type$ebnf$2$subexpression$1$ebnf$1$subexpression$2"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "data_type$ebnf$2$subexpression$1", "symbols": ["data_type$ebnf$2$subexpression$1$ebnf$1"] },
            { "name": "data_type$ebnf$2", "symbols": ["data_type$ebnf$2$subexpression$1"], "postprocess": id },
            { "name": "data_type$ebnf$2", "symbols": [], "postprocess": () => null },
            { "name": "data_type", "symbols": ["data_type_simple", "data_type$ebnf$1", "data_type$ebnf$2"], "postprocess": x => {
                    let asArray = x[2];
                    const name = unwrap(x[0]);
                    let ret;
                    ret = {
                        ...name,
                        ...Array.isArray(x[1]) && x[1].length ? { config: x[1].map(unwrap) } : {},
                    };
                    if (asArray) {
                        if (asArray[0].type === 'kw_array') {
                            asArray = [['array']];
                        }
                        for (const _ of asArray[0]) {
                            ret = {
                                kind: 'array',
                                arrayOf: ret,
                            };
                        }
                    }
                    return lexer_2.track(x, ret);
                } },
            { "name": "data_type_list$ebnf$1", "symbols": [] },
            { "name": "data_type_list$ebnf$1$subexpression$1", "symbols": ["comma", "data_type"], "postprocess": last },
            { "name": "data_type_list$ebnf$1", "symbols": ["data_type_list$ebnf$1", "data_type_list$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "data_type_list", "symbols": ["data_type", "data_type_list$ebnf$1"], "postprocess": ([head, tail]) => {
                    return [head, ...(tail || [])];
                } },
            { "name": "data_type_simple", "symbols": ["data_type_text"], "postprocess": x => lexer_2.track(x, { name: toStr(x, ' ') }) },
            { "name": "data_type_simple", "symbols": ["data_type_numeric"], "postprocess": x => lexer_2.track(x, { name: toStr(x, ' ') }) },
            { "name": "data_type_simple", "symbols": ["data_type_date"], "postprocess": x => lexer_2.track(x, { name: toStr(x, ' ') }) },
            { "name": "data_type_simple", "symbols": ["qualified_name"] },
            { "name": "data_type_numeric$subexpression$1", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": kw('double') },
            { "name": "data_type_numeric", "symbols": ["data_type_numeric$subexpression$1", (lexer_1.lexerAny.has("kw_precision") ? { type: "kw_precision" } : kw_precision)] },
            { "name": "data_type_text$subexpression$1", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": anyKw('character', 'bit') },
            { "name": "data_type_text$subexpression$2", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": kw('varying') },
            { "name": "data_type_text", "symbols": ["data_type_text$subexpression$1", "data_type_text$subexpression$2"] },
            { "name": "data_type_date$subexpression$1", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": anyKw('timestamp', 'time') },
            { "name": "data_type_date$subexpression$2", "symbols": [(lexer_1.lexerAny.has("kw_with") ? { type: "kw_with" } : kw_with)] },
            { "name": "data_type_date$subexpression$2", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": kw('without') },
            { "name": "data_type_date$subexpression$3", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": kw('time') },
            { "name": "data_type_date$subexpression$4", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": kw('zone') },
            { "name": "data_type_date", "symbols": ["data_type_date$subexpression$1", "data_type_date$subexpression$2", "data_type_date$subexpression$3", "data_type_date$subexpression$4"] },
            { "name": "ident_aliased$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_as") ? { type: "kw_as" } : kw_as), "ident"], "postprocess": last },
            { "name": "ident_aliased", "symbols": ["ident_aliased$subexpression$1"] },
            { "name": "ident_aliased", "symbols": ["ident"], "postprocess": unwrap },
            { "name": "table_ref", "symbols": ["qualified_name"], "postprocess": unwrap },
            { "name": "qcolumn$ebnf$1$subexpression$1", "symbols": ["dot", "ident"], "postprocess": last },
            { "name": "qcolumn$ebnf$1", "symbols": ["qcolumn$ebnf$1$subexpression$1"], "postprocess": id },
            { "name": "qcolumn$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "qcolumn", "symbols": ["ident", "dot", "ident", "qcolumn$ebnf$1"], "postprocess": x => {
                    if (!x[3]) {
                        return lexer_2.track(x, {
                            table: lexer_2.unbox(x[0]),
                            column: lexer_2.unbox(x[2]),
                        });
                    }
                    return lexer_2.track(x, {
                        schema: lexer_2.unbox(x[0]),
                        table: lexer_2.unbox(x[2]),
                        column: lexer_2.unbox(x[3]),
                    });
                } },
            { "name": "table_ref_aliased$ebnf$1", "symbols": ["ident_aliased"], "postprocess": id },
            { "name": "table_ref_aliased$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "table_ref_aliased", "symbols": ["table_ref", "table_ref_aliased$ebnf$1"], "postprocess": x => {
                    const alias = unwrap(x[1]);
                    return lexer_2.track(x, {
                        ...unwrap(x[0]),
                        ...alias ? { alias } : {},
                    });
                } },
            { "name": "qualified_name$ebnf$1$subexpression$1", "symbols": ["ident", "dot"], "postprocess": get(0) },
            { "name": "qualified_name$ebnf$1", "symbols": ["qualified_name$ebnf$1$subexpression$1"], "postprocess": id },
            { "name": "qualified_name$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "qualified_name", "symbols": ["qualified_name$ebnf$1", "ident"], "postprocess": x => {
                    const schema = lexer_2.unbox(x[0]);
                    const name = lexer_2.unbox(x[1]);
                    if (schema) {
                        return lexer_2.track(x, { name, schema });
                    }
                    return lexer_2.track(x, { name });
                } },
            { "name": "qualified_name", "symbols": [(lexer_1.lexerAny.has("kw_current_schema") ? { type: "kw_current_schema" } : kw_current_schema)], "postprocess": x => lexer_2.track(x, { name: 'current_schema' }) },
            { "name": "qname", "symbols": ["qualified_name"], "postprocess": unwrap },
            { "name": "select_statement$ebnf$1", "symbols": ["select_from"], "postprocess": id },
            { "name": "select_statement$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "select_statement$ebnf$2", "symbols": ["select_where"], "postprocess": id },
            { "name": "select_statement$ebnf$2", "symbols": [], "postprocess": () => null },
            { "name": "select_statement$ebnf$3", "symbols": ["select_groupby"], "postprocess": id },
            { "name": "select_statement$ebnf$3", "symbols": [], "postprocess": () => null },
            { "name": "select_statement$ebnf$4", "symbols": ["select_order_by"], "postprocess": id },
            { "name": "select_statement$ebnf$4", "symbols": [], "postprocess": () => null },
            { "name": "select_statement", "symbols": ["select_what", "select_statement$ebnf$1", "select_statement$ebnf$2", "select_statement$ebnf$3", "select_statement$ebnf$4", "select_limit"], "postprocess": x => {
                    let [what, from, where, groupBy, orderBy, limit] = x;
                    from = unwrap(from);
                    groupBy = groupBy && (groupBy.length === 1 && groupBy[0].type === 'list' ? groupBy[0].expressions : groupBy);
                    return lexer_2.track(x, {
                        ...what,
                        ...from ? { from: Array.isArray(from) ? from : [from] } : {},
                        ...groupBy ? { groupBy } : {},
                        ...limit ? { limit } : {},
                        ...orderBy ? { orderBy } : {},
                        ...where ? { where } : {},
                        type: 'select',
                    });
                } },
            { "name": "select_from", "symbols": [(lexer_1.lexerAny.has("kw_from") ? { type: "kw_from" } : kw_from), "select_subject"], "postprocess": last },
            { "name": "select_subject", "symbols": ["select_table_base"], "postprocess": get(0) },
            { "name": "select_subject", "symbols": ["select_subject_joins"], "postprocess": get(0) },
            { "name": "select_subject", "symbols": ["lparen", "select_subject_joins", "rparen"], "postprocess": get(1) },
            { "name": "select_subject_joins$ebnf$1", "symbols": ["select_table_join"] },
            { "name": "select_subject_joins$ebnf$1", "symbols": ["select_subject_joins$ebnf$1", "select_table_join"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "select_subject_joins", "symbols": ["select_table_base", "select_subject_joins$ebnf$1"], "postprocess": ([head, tail]) => {
                    return [head, ...(tail || [])];
                } },
            { "name": "select_table_base", "symbols": ["stb_table"], "postprocess": unwrap },
            { "name": "select_table_base", "symbols": ["stb_statement"], "postprocess": unwrap },
            { "name": "select_table_base", "symbols": ["stb_call"], "postprocess": unwrap },
            { "name": "stb_opts$ebnf$1", "symbols": ["collist_paren"], "postprocess": id },
            { "name": "stb_opts$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "stb_opts", "symbols": ["ident_aliased", "stb_opts$ebnf$1"], "postprocess": x => lexer_2.track(x, {
                    alias: toStr(x[0]),
                    ...x[1] && { columnNames: lexer_2.unbox(x[1]).map(asName) },
                }) },
            { "name": "stb_table$ebnf$1", "symbols": ["stb_opts"], "postprocess": id },
            { "name": "stb_table$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "stb_table", "symbols": ["table_ref", "stb_table$ebnf$1"], "postprocess": x => {
                    return lexer_2.track(x, {
                        type: 'table',
                        name: lexer_2.track(x, {
                            ...x[0],
                            ...x[1],
                        }),
                    });
                } },
            { "name": "stb_statement", "symbols": ["selection_paren", "stb_opts"], "postprocess": x => lexer_2.track(x, {
                    type: 'statement',
                    statement: unwrap(x[0]),
                    ...x[1],
                }) },
            { "name": "select_values", "symbols": ["kw_values", "insert_values"], "postprocess": x => lexer_2.track(x, {
                    type: 'values',
                    values: x[1],
                }) },
            { "name": "stb_call$ebnf$1$subexpression$1$ebnf$1", "symbols": [(lexer_1.lexerAny.has("kw_as") ? { type: "kw_as" } : kw_as)], "postprocess": id },
            { "name": "stb_call$ebnf$1$subexpression$1$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "stb_call$ebnf$1$subexpression$1", "symbols": ["stb_call$ebnf$1$subexpression$1$ebnf$1", "ident"], "postprocess": last },
            { "name": "stb_call$ebnf$1", "symbols": ["stb_call$ebnf$1$subexpression$1"], "postprocess": id },
            { "name": "stb_call$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "stb_call", "symbols": ["expr_call", "stb_call$ebnf$1"], "postprocess": x => !x[1]
                    ? x[0]
                    : lexer_2.track(x, {
                        ...x[0],
                        alias: asName(x[1]),
                    }) },
            { "name": "select_table_join$ebnf$1", "symbols": ["select_table_join_clause"], "postprocess": id },
            { "name": "select_table_join$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "select_table_join", "symbols": ["select_join_op", (lexer_1.lexerAny.has("kw_join") ? { type: "kw_join" } : kw_join), "select_table_base", "select_table_join$ebnf$1"], "postprocess": x => lexer_2.track(x, {
                    ...unwrap(x[2]),
                    join: {
                        type: toStr(x[0], ' '),
                        ...x[3] && unwrap(x[3]),
                    }
                }) },
            { "name": "select_table_join_clause", "symbols": [(lexer_1.lexerAny.has("kw_on") ? { type: "kw_on" } : kw_on), "expr"], "postprocess": x => lexer_2.track(x, { on: last(x) }) },
            { "name": "select_table_join_clause$macrocall$2", "symbols": ["ident"] },
            { "name": "select_table_join_clause$macrocall$1$ebnf$1", "symbols": [] },
            { "name": "select_table_join_clause$macrocall$1$ebnf$1$subexpression$1", "symbols": [(lexer_1.lexerAny.has("comma") ? { type: "comma" } : comma), "select_table_join_clause$macrocall$2"], "postprocess": last },
            { "name": "select_table_join_clause$macrocall$1$ebnf$1", "symbols": ["select_table_join_clause$macrocall$1$ebnf$1", "select_table_join_clause$macrocall$1$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "select_table_join_clause$macrocall$1", "symbols": ["select_table_join_clause$macrocall$2", "select_table_join_clause$macrocall$1$ebnf$1"], "postprocess": ([head, tail]) => {
                    return [unwrap(head), ...(tail.map(unwrap) || [])];
                } },
            { "name": "select_table_join_clause", "symbols": [(lexer_1.lexerAny.has("kw_using") ? { type: "kw_using" } : kw_using), "lparen", "select_table_join_clause$macrocall$1", "rparen"], "postprocess": x => lexer_2.track(x, { using: x[2].map(asName) }) },
            { "name": "select_join_op$subexpression$1$ebnf$1", "symbols": [(lexer_1.lexerAny.has("kw_inner") ? { type: "kw_inner" } : kw_inner)], "postprocess": id },
            { "name": "select_join_op$subexpression$1$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "select_join_op$subexpression$1", "symbols": ["select_join_op$subexpression$1$ebnf$1"], "postprocess": x => lexer_2.box(x, 'INNER JOIN') },
            { "name": "select_join_op", "symbols": ["select_join_op$subexpression$1"] },
            { "name": "select_join_op$subexpression$2$ebnf$1", "symbols": [(lexer_1.lexerAny.has("kw_outer") ? { type: "kw_outer" } : kw_outer)], "postprocess": id },
            { "name": "select_join_op$subexpression$2$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "select_join_op$subexpression$2", "symbols": [(lexer_1.lexerAny.has("kw_left") ? { type: "kw_left" } : kw_left), "select_join_op$subexpression$2$ebnf$1"], "postprocess": x => lexer_2.box(x, 'LEFT JOIN') },
            { "name": "select_join_op", "symbols": ["select_join_op$subexpression$2"] },
            { "name": "select_join_op$subexpression$3$ebnf$1", "symbols": [(lexer_1.lexerAny.has("kw_outer") ? { type: "kw_outer" } : kw_outer)], "postprocess": id },
            { "name": "select_join_op$subexpression$3$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "select_join_op$subexpression$3", "symbols": [(lexer_1.lexerAny.has("kw_right") ? { type: "kw_right" } : kw_right), "select_join_op$subexpression$3$ebnf$1"], "postprocess": x => lexer_2.box(x, 'RIGHT JOIN') },
            { "name": "select_join_op", "symbols": ["select_join_op$subexpression$3"] },
            { "name": "select_join_op$subexpression$4$ebnf$1", "symbols": [(lexer_1.lexerAny.has("kw_outer") ? { type: "kw_outer" } : kw_outer)], "postprocess": id },
            { "name": "select_join_op$subexpression$4$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "select_join_op$subexpression$4", "symbols": [(lexer_1.lexerAny.has("kw_full") ? { type: "kw_full" } : kw_full), "select_join_op$subexpression$4$ebnf$1"], "postprocess": x => lexer_2.box(x, 'FULL JOIN') },
            { "name": "select_join_op", "symbols": ["select_join_op$subexpression$4"] },
            { "name": "select_what$ebnf$1", "symbols": ["select_distinct"], "postprocess": id },
            { "name": "select_what$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "select_what$ebnf$2", "symbols": ["select_expr_list_aliased"], "postprocess": id },
            { "name": "select_what$ebnf$2", "symbols": [], "postprocess": () => null },
            { "name": "select_what", "symbols": [(lexer_1.lexerAny.has("kw_select") ? { type: "kw_select" } : kw_select), "select_what$ebnf$1", "select_what$ebnf$2"], "postprocess": x => lexer_2.track(x, {
                    columns: x[2],
                    ...x[1] && { distinct: lexer_2.unbox(x[1]) },
                }) },
            { "name": "select_expr_list_aliased$ebnf$1", "symbols": [] },
            { "name": "select_expr_list_aliased$ebnf$1$subexpression$1", "symbols": ["comma", "select_expr_list_item"], "postprocess": last },
            { "name": "select_expr_list_aliased$ebnf$1", "symbols": ["select_expr_list_aliased$ebnf$1", "select_expr_list_aliased$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "select_expr_list_aliased", "symbols": ["select_expr_list_item", "select_expr_list_aliased$ebnf$1"], "postprocess": ([head, tail]) => {
                    return [head, ...(tail || [])];
                } },
            { "name": "select_expr_list_item$ebnf$1", "symbols": ["ident_aliased"], "postprocess": id },
            { "name": "select_expr_list_item$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "select_expr_list_item", "symbols": ["expr", "select_expr_list_item$ebnf$1"], "postprocess": x => lexer_2.track(x, {
                    expr: x[0],
                    ...x[1] ? { alias: asName(x[1]) } : {},
                }) },
            { "name": "select_distinct", "symbols": [(lexer_1.lexerAny.has("kw_all") ? { type: "kw_all" } : kw_all)], "postprocess": x => lexer_2.box(x, 'all') },
            { "name": "select_distinct$ebnf$1$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_on") ? { type: "kw_on" } : kw_on), "lparen", "expr_list_raw", "rparen"], "postprocess": get(2) },
            { "name": "select_distinct$ebnf$1", "symbols": ["select_distinct$ebnf$1$subexpression$1"], "postprocess": id },
            { "name": "select_distinct$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "select_distinct", "symbols": [(lexer_1.lexerAny.has("kw_distinct") ? { type: "kw_distinct" } : kw_distinct), "select_distinct$ebnf$1"], "postprocess": x => lexer_2.box(x, x[1] || 'distinct') },
            { "name": "select_where", "symbols": [(lexer_1.lexerAny.has("kw_where") ? { type: "kw_where" } : kw_where), "expr"], "postprocess": last },
            { "name": "select_groupby", "symbols": [(lexer_1.lexerAny.has("kw_group") ? { type: "kw_group" } : kw_group), "kw_by", "expr_list_raw"], "postprocess": last },
            { "name": "select_limit$ebnf$1$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_limit") ? { type: "kw_limit" } : kw_limit), "expr_nostar"], "postprocess": last },
            { "name": "select_limit$ebnf$1", "symbols": ["select_limit$ebnf$1$subexpression$1"], "postprocess": id },
            { "name": "select_limit$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "select_limit$ebnf$2$subexpression$1$ebnf$1$subexpression$1", "symbols": ["kw_row"] },
            { "name": "select_limit$ebnf$2$subexpression$1$ebnf$1$subexpression$1", "symbols": ["kw_rows"] },
            { "name": "select_limit$ebnf$2$subexpression$1$ebnf$1", "symbols": ["select_limit$ebnf$2$subexpression$1$ebnf$1$subexpression$1"], "postprocess": id },
            { "name": "select_limit$ebnf$2$subexpression$1$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "select_limit$ebnf$2$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_offset") ? { type: "kw_offset" } : kw_offset), "expr_nostar", "select_limit$ebnf$2$subexpression$1$ebnf$1"], "postprocess": get(1) },
            { "name": "select_limit$ebnf$2", "symbols": ["select_limit$ebnf$2$subexpression$1"], "postprocess": id },
            { "name": "select_limit$ebnf$2", "symbols": [], "postprocess": () => null },
            { "name": "select_limit$ebnf$3$subexpression$1$ebnf$1$subexpression$1", "symbols": ["kw_first"] },
            { "name": "select_limit$ebnf$3$subexpression$1$ebnf$1$subexpression$1", "symbols": ["kw_next"] },
            { "name": "select_limit$ebnf$3$subexpression$1$ebnf$1", "symbols": ["select_limit$ebnf$3$subexpression$1$ebnf$1$subexpression$1"], "postprocess": id },
            { "name": "select_limit$ebnf$3$subexpression$1$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "select_limit$ebnf$3$subexpression$1$ebnf$2$subexpression$1", "symbols": ["kw_row"] },
            { "name": "select_limit$ebnf$3$subexpression$1$ebnf$2$subexpression$1", "symbols": ["kw_rows"] },
            { "name": "select_limit$ebnf$3$subexpression$1$ebnf$2", "symbols": ["select_limit$ebnf$3$subexpression$1$ebnf$2$subexpression$1"], "postprocess": id },
            { "name": "select_limit$ebnf$3$subexpression$1$ebnf$2", "symbols": [], "postprocess": () => null },
            { "name": "select_limit$ebnf$3$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_fetch") ? { type: "kw_fetch" } : kw_fetch), "select_limit$ebnf$3$subexpression$1$ebnf$1", "expr_nostar", "select_limit$ebnf$3$subexpression$1$ebnf$2"], "postprocess": get(2) },
            { "name": "select_limit$ebnf$3", "symbols": ["select_limit$ebnf$3$subexpression$1"], "postprocess": id },
            { "name": "select_limit$ebnf$3", "symbols": [], "postprocess": () => null },
            { "name": "select_limit", "symbols": ["select_limit$ebnf$1", "select_limit$ebnf$2", "select_limit$ebnf$3"], "postprocess": (x, _, rej) => {
                    const limit1 = lexer_2.unbox(x[0]);
                    const offset = lexer_2.unbox(x[1]);
                    const limit2 = lexer_2.unbox(x[2]);
                    if (limit1 && limit2) {
                        return rej;
                    }
                    if (!limit1 && !limit2 && !offset) {
                        return null;
                    }
                    const limit = limit1 || limit2;
                    return lexer_2.track(x, {
                        ...limit ? { limit } : {},
                        ...offset ? { offset } : {},
                    });
                } },
            { "name": "select_order_by$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_order") ? { type: "kw_order" } : kw_order), "kw_by"] },
            { "name": "select_order_by$ebnf$1", "symbols": [] },
            { "name": "select_order_by$ebnf$1$subexpression$1", "symbols": ["comma", "select_order_by_expr"], "postprocess": last },
            { "name": "select_order_by$ebnf$1", "symbols": ["select_order_by$ebnf$1", "select_order_by$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "select_order_by", "symbols": ["select_order_by$subexpression$1", "select_order_by_expr", "select_order_by$ebnf$1"], "postprocess": ([_, head, tail]) => {
                    return [head, ...(tail || [])];
                } },
            { "name": "select_order_by_expr$ebnf$1$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_asc") ? { type: "kw_asc" } : kw_asc)] },
            { "name": "select_order_by_expr$ebnf$1$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_desc") ? { type: "kw_desc" } : kw_desc)] },
            { "name": "select_order_by_expr$ebnf$1", "symbols": ["select_order_by_expr$ebnf$1$subexpression$1"], "postprocess": id },
            { "name": "select_order_by_expr$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "select_order_by_expr", "symbols": ["expr", "select_order_by_expr$ebnf$1"], "postprocess": x => lexer_2.track(x, {
                    by: x[0],
                    ...x[1] && { order: toStr(x[1]).toUpperCase() },
                }) },
            { "name": "expr", "symbols": ["expr_nostar"], "postprocess": unwrap },
            { "name": "expr", "symbols": ["expr_star"], "postprocess": unwrap },
            { "name": "expr_nostar", "symbols": ["expr_paren"], "postprocess": unwrap },
            { "name": "expr_nostar", "symbols": ["expr_or"], "postprocess": unwrap },
            { "name": "expr_paren$subexpression$1", "symbols": ["expr_or_select"] },
            { "name": "expr_paren$subexpression$1", "symbols": ["expr_list_many"] },
            { "name": "expr_paren", "symbols": ["lparen", "expr_paren$subexpression$1", "rparen"], "postprocess": get(1) },
            { "name": "expr_or$macrocall$2$macrocall$2", "symbols": [(lexer_1.lexerAny.has("kw_or") ? { type: "kw_or" } : kw_or)] },
            { "name": "expr_or$macrocall$2$macrocall$1", "symbols": ["expr_or$macrocall$2$macrocall$2"], "postprocess": x => lexer_2.track(x, {
                    op: (toStr(x, ' ') || '<error>').toUpperCase()
                }) },
            { "name": "expr_or$macrocall$2", "symbols": ["expr_or$macrocall$2$macrocall$1"] },
            { "name": "expr_or$macrocall$3", "symbols": ["expr_or"] },
            { "name": "expr_or$macrocall$4", "symbols": ["expr_and"] },
            { "name": "expr_or$macrocall$1$subexpression$1", "symbols": ["expr_or$macrocall$3"] },
            { "name": "expr_or$macrocall$1$subexpression$1", "symbols": ["expr_paren"] },
            { "name": "expr_or$macrocall$1$subexpression$2", "symbols": ["expr_or$macrocall$4"] },
            { "name": "expr_or$macrocall$1$subexpression$2", "symbols": ["expr_paren"] },
            { "name": "expr_or$macrocall$1", "symbols": ["expr_or$macrocall$1$subexpression$1", "expr_or$macrocall$2", "expr_or$macrocall$1$subexpression$2"], "postprocess": x => lexer_2.track(x, {
                    type: 'binary',
                    left: unwrap(x[0]),
                    right: unwrap(x[2]),
                    ...unwrap(x[1]),
                }) },
            { "name": "expr_or$macrocall$1", "symbols": ["expr_or$macrocall$4"], "postprocess": unwrap },
            { "name": "expr_or", "symbols": ["expr_or$macrocall$1"] },
            { "name": "expr_and$macrocall$2$macrocall$2", "symbols": [(lexer_1.lexerAny.has("kw_and") ? { type: "kw_and" } : kw_and)] },
            { "name": "expr_and$macrocall$2$macrocall$1", "symbols": ["expr_and$macrocall$2$macrocall$2"], "postprocess": x => lexer_2.track(x, {
                    op: (toStr(x, ' ') || '<error>').toUpperCase()
                }) },
            { "name": "expr_and$macrocall$2", "symbols": ["expr_and$macrocall$2$macrocall$1"] },
            { "name": "expr_and$macrocall$3", "symbols": ["expr_and"] },
            { "name": "expr_and$macrocall$4", "symbols": ["expr_not"] },
            { "name": "expr_and$macrocall$1$subexpression$1", "symbols": ["expr_and$macrocall$3"] },
            { "name": "expr_and$macrocall$1$subexpression$1", "symbols": ["expr_paren"] },
            { "name": "expr_and$macrocall$1$subexpression$2", "symbols": ["expr_and$macrocall$4"] },
            { "name": "expr_and$macrocall$1$subexpression$2", "symbols": ["expr_paren"] },
            { "name": "expr_and$macrocall$1", "symbols": ["expr_and$macrocall$1$subexpression$1", "expr_and$macrocall$2", "expr_and$macrocall$1$subexpression$2"], "postprocess": x => lexer_2.track(x, {
                    type: 'binary',
                    left: unwrap(x[0]),
                    right: unwrap(x[2]),
                    ...unwrap(x[1]),
                }) },
            { "name": "expr_and$macrocall$1", "symbols": ["expr_and$macrocall$4"], "postprocess": unwrap },
            { "name": "expr_and", "symbols": ["expr_and$macrocall$1"] },
            { "name": "expr_not$macrocall$2$macrocall$2", "symbols": [(lexer_1.lexerAny.has("kw_not") ? { type: "kw_not" } : kw_not)] },
            { "name": "expr_not$macrocall$2$macrocall$1", "symbols": ["expr_not$macrocall$2$macrocall$2"], "postprocess": x => lexer_2.track(x, {
                    op: (toStr(x, ' ') || '<error>').toUpperCase()
                }) },
            { "name": "expr_not$macrocall$2", "symbols": ["expr_not$macrocall$2$macrocall$1"] },
            { "name": "expr_not$macrocall$3", "symbols": ["expr_not"] },
            { "name": "expr_not$macrocall$4", "symbols": ["expr_eq"] },
            { "name": "expr_not$macrocall$1$subexpression$1", "symbols": ["expr_not$macrocall$3"] },
            { "name": "expr_not$macrocall$1$subexpression$1", "symbols": ["expr_paren"] },
            { "name": "expr_not$macrocall$1", "symbols": ["expr_not$macrocall$2", "expr_not$macrocall$1$subexpression$1"], "postprocess": x => lexer_2.track(x, {
                    type: 'unary',
                    ...unwrap(x[0]),
                    operand: unwrap(x[1]),
                }) },
            { "name": "expr_not$macrocall$1", "symbols": ["expr_not$macrocall$4"], "postprocess": unwrap },
            { "name": "expr_not", "symbols": ["expr_not$macrocall$1"] },
            { "name": "expr_eq$macrocall$2$macrocall$2$subexpression$1", "symbols": [(lexer_1.lexerAny.has("op_eq") ? { type: "op_eq" } : op_eq)] },
            { "name": "expr_eq$macrocall$2$macrocall$2$subexpression$1", "symbols": [(lexer_1.lexerAny.has("op_neq") ? { type: "op_neq" } : op_neq)] },
            { "name": "expr_eq$macrocall$2$macrocall$2", "symbols": ["expr_eq$macrocall$2$macrocall$2$subexpression$1"] },
            { "name": "expr_eq$macrocall$2$macrocall$1$macrocall$2", "symbols": ["expr_eq$macrocall$2$macrocall$2"] },
            { "name": "expr_eq$macrocall$2$macrocall$1$macrocall$1", "symbols": ["expr_eq$macrocall$2$macrocall$1$macrocall$2"], "postprocess": x => lexer_2.track(x, {
                    op: (toStr(x, ' ') || '<error>').toUpperCase()
                }) },
            { "name": "expr_eq$macrocall$2$macrocall$1", "symbols": ["expr_eq$macrocall$2$macrocall$1$macrocall$1"], "postprocess": unwrap },
            { "name": "expr_eq$macrocall$2$macrocall$1", "symbols": ["kw_operator", "lparen", "ident", "dot", "expr_eq$macrocall$2$macrocall$2", "rparen"], "postprocess": x => lexer_2.track(x, {
                    op: (toStr(x[4], ' ') || '<error>').toUpperCase(),
                    opSchema: toStr(x[2]),
                }) },
            { "name": "expr_eq$macrocall$2", "symbols": ["expr_eq$macrocall$2$macrocall$1"] },
            { "name": "expr_eq$macrocall$3", "symbols": ["expr_eq"] },
            { "name": "expr_eq$macrocall$4", "symbols": ["expr_is"] },
            { "name": "expr_eq$macrocall$1$subexpression$1", "symbols": ["expr_eq$macrocall$3"] },
            { "name": "expr_eq$macrocall$1$subexpression$1", "symbols": ["expr_paren"] },
            { "name": "expr_eq$macrocall$1$subexpression$2", "symbols": ["expr_eq$macrocall$4"] },
            { "name": "expr_eq$macrocall$1$subexpression$2", "symbols": ["expr_paren"] },
            { "name": "expr_eq$macrocall$1", "symbols": ["expr_eq$macrocall$1$subexpression$1", "expr_eq$macrocall$2", "expr_eq$macrocall$1$subexpression$2"], "postprocess": x => lexer_2.track(x, {
                    type: 'binary',
                    left: unwrap(x[0]),
                    right: unwrap(x[2]),
                    ...unwrap(x[1]),
                }) },
            { "name": "expr_eq$macrocall$1", "symbols": ["expr_eq$macrocall$4"], "postprocess": unwrap },
            { "name": "expr_eq", "symbols": ["expr_eq$macrocall$1"] },
            { "name": "expr_star", "symbols": ["star"], "postprocess": x => lexer_2.track(x, { type: 'ref', name: '*' }) },
            { "name": "expr_is$subexpression$1", "symbols": ["expr_is"] },
            { "name": "expr_is$subexpression$1", "symbols": ["expr_paren"] },
            { "name": "expr_is$subexpression$2", "symbols": [(lexer_1.lexerAny.has("kw_isnull") ? { type: "kw_isnull" } : kw_isnull)] },
            { "name": "expr_is$subexpression$2", "symbols": [(lexer_1.lexerAny.has("kw_is") ? { type: "kw_is" } : kw_is), (lexer_1.lexerAny.has("kw_null") ? { type: "kw_null" } : kw_null)] },
            { "name": "expr_is", "symbols": ["expr_is$subexpression$1", "expr_is$subexpression$2"], "postprocess": x => lexer_2.track(x, { type: 'unary', op: 'IS NULL', operand: unwrap(x[0]) }) },
            { "name": "expr_is$subexpression$3", "symbols": ["expr_is"] },
            { "name": "expr_is$subexpression$3", "symbols": ["expr_paren"] },
            { "name": "expr_is$subexpression$4", "symbols": [(lexer_1.lexerAny.has("kw_notnull") ? { type: "kw_notnull" } : kw_notnull)] },
            { "name": "expr_is$subexpression$4", "symbols": [(lexer_1.lexerAny.has("kw_is") ? { type: "kw_is" } : kw_is), "kw_not_null"] },
            { "name": "expr_is", "symbols": ["expr_is$subexpression$3", "expr_is$subexpression$4"], "postprocess": x => lexer_2.track(x, { type: 'unary', op: 'IS NOT NULL', operand: unwrap(x[0]) }) },
            { "name": "expr_is$subexpression$5", "symbols": ["expr_is"] },
            { "name": "expr_is$subexpression$5", "symbols": ["expr_paren"] },
            { "name": "expr_is$ebnf$1", "symbols": [(lexer_1.lexerAny.has("kw_not") ? { type: "kw_not" } : kw_not)], "postprocess": id },
            { "name": "expr_is$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "expr_is$subexpression$6", "symbols": [(lexer_1.lexerAny.has("kw_true") ? { type: "kw_true" } : kw_true)] },
            { "name": "expr_is$subexpression$6", "symbols": [(lexer_1.lexerAny.has("kw_false") ? { type: "kw_false" } : kw_false)] },
            { "name": "expr_is", "symbols": ["expr_is$subexpression$5", (lexer_1.lexerAny.has("kw_is") ? { type: "kw_is" } : kw_is), "expr_is$ebnf$1", "expr_is$subexpression$6"], "postprocess": x => lexer_2.track(x, {
                    type: 'unary',
                    op: 'IS ' + flattenStr([x[2], x[3]])
                        .join(' ')
                        .toUpperCase(),
                    operand: unwrap(x[0]),
                }) },
            { "name": "expr_is", "symbols": ["expr_compare"], "postprocess": unwrap },
            { "name": "expr_compare$macrocall$2$macrocall$2", "symbols": [(lexer_1.lexerAny.has("op_compare") ? { type: "op_compare" } : op_compare)] },
            { "name": "expr_compare$macrocall$2$macrocall$1$macrocall$2", "symbols": ["expr_compare$macrocall$2$macrocall$2"] },
            { "name": "expr_compare$macrocall$2$macrocall$1$macrocall$1", "symbols": ["expr_compare$macrocall$2$macrocall$1$macrocall$2"], "postprocess": x => lexer_2.track(x, {
                    op: (toStr(x, ' ') || '<error>').toUpperCase()
                }) },
            { "name": "expr_compare$macrocall$2$macrocall$1", "symbols": ["expr_compare$macrocall$2$macrocall$1$macrocall$1"], "postprocess": unwrap },
            { "name": "expr_compare$macrocall$2$macrocall$1", "symbols": ["kw_operator", "lparen", "ident", "dot", "expr_compare$macrocall$2$macrocall$2", "rparen"], "postprocess": x => lexer_2.track(x, {
                    op: (toStr(x[4], ' ') || '<error>').toUpperCase(),
                    opSchema: toStr(x[2]),
                }) },
            { "name": "expr_compare$macrocall$2", "symbols": ["expr_compare$macrocall$2$macrocall$1"] },
            { "name": "expr_compare$macrocall$3", "symbols": ["expr_compare"] },
            { "name": "expr_compare$macrocall$4", "symbols": ["expr_range"] },
            { "name": "expr_compare$macrocall$1$subexpression$1", "symbols": ["expr_compare$macrocall$3"] },
            { "name": "expr_compare$macrocall$1$subexpression$1", "symbols": ["expr_paren"] },
            { "name": "expr_compare$macrocall$1$subexpression$2", "symbols": ["expr_compare$macrocall$4"] },
            { "name": "expr_compare$macrocall$1$subexpression$2", "symbols": ["expr_paren"] },
            { "name": "expr_compare$macrocall$1", "symbols": ["expr_compare$macrocall$1$subexpression$1", "expr_compare$macrocall$2", "expr_compare$macrocall$1$subexpression$2"], "postprocess": x => lexer_2.track(x, {
                    type: 'binary',
                    left: unwrap(x[0]),
                    right: unwrap(x[2]),
                    ...unwrap(x[1]),
                }) },
            { "name": "expr_compare$macrocall$1", "symbols": ["expr_compare$macrocall$4"], "postprocess": unwrap },
            { "name": "expr_compare", "symbols": ["expr_compare$macrocall$1"] },
            { "name": "expr_range$macrocall$2", "symbols": ["ops_between"] },
            { "name": "expr_range$macrocall$3", "symbols": [(lexer_1.lexerAny.has("kw_and") ? { type: "kw_and" } : kw_and)] },
            { "name": "expr_range$macrocall$4", "symbols": ["expr_range"] },
            { "name": "expr_range$macrocall$5", "symbols": ["expr_others"] },
            { "name": "expr_range$macrocall$1$subexpression$1", "symbols": ["expr_range$macrocall$4"] },
            { "name": "expr_range$macrocall$1$subexpression$1", "symbols": ["expr_paren"] },
            { "name": "expr_range$macrocall$1$subexpression$2", "symbols": ["expr_range$macrocall$4"] },
            { "name": "expr_range$macrocall$1$subexpression$2", "symbols": ["expr_paren"] },
            { "name": "expr_range$macrocall$1$subexpression$3", "symbols": ["expr_range$macrocall$5"] },
            { "name": "expr_range$macrocall$1$subexpression$3", "symbols": ["expr_paren"] },
            { "name": "expr_range$macrocall$1", "symbols": ["expr_range$macrocall$1$subexpression$1", "expr_range$macrocall$2", "expr_range$macrocall$1$subexpression$2", "expr_range$macrocall$3", "expr_range$macrocall$1$subexpression$3"], "postprocess": x => lexer_2.track(x, {
                    type: 'ternary',
                    value: unwrap(x[0]),
                    lo: unwrap(x[2]),
                    hi: unwrap(x[4]),
                    op: (flattenStr(x[1]).join(' ') || '<error>').toUpperCase(),
                }) },
            { "name": "expr_range$macrocall$1", "symbols": ["expr_range$macrocall$5"], "postprocess": unwrap },
            { "name": "expr_range", "symbols": ["expr_range$macrocall$1"] },
            { "name": "expr_others$macrocall$2$macrocall$2", "symbols": [(lexer_1.lexerAny.has("ops_others") ? { type: "ops_others" } : ops_others)] },
            { "name": "expr_others$macrocall$2$macrocall$1$macrocall$2", "symbols": ["expr_others$macrocall$2$macrocall$2"] },
            { "name": "expr_others$macrocall$2$macrocall$1$macrocall$1", "symbols": ["expr_others$macrocall$2$macrocall$1$macrocall$2"], "postprocess": x => lexer_2.track(x, {
                    op: (toStr(x, ' ') || '<error>').toUpperCase()
                }) },
            { "name": "expr_others$macrocall$2$macrocall$1", "symbols": ["expr_others$macrocall$2$macrocall$1$macrocall$1"], "postprocess": unwrap },
            { "name": "expr_others$macrocall$2$macrocall$1", "symbols": ["kw_operator", "lparen", "ident", "dot", "expr_others$macrocall$2$macrocall$2", "rparen"], "postprocess": x => lexer_2.track(x, {
                    op: (toStr(x[4], ' ') || '<error>').toUpperCase(),
                    opSchema: toStr(x[2]),
                }) },
            { "name": "expr_others$macrocall$2", "symbols": ["expr_others$macrocall$2$macrocall$1"] },
            { "name": "expr_others$macrocall$3", "symbols": ["expr_others"] },
            { "name": "expr_others$macrocall$4", "symbols": ["expr_like"] },
            { "name": "expr_others$macrocall$1$subexpression$1", "symbols": ["expr_others$macrocall$3"] },
            { "name": "expr_others$macrocall$1$subexpression$1", "symbols": ["expr_paren"] },
            { "name": "expr_others$macrocall$1$subexpression$2", "symbols": ["expr_others$macrocall$4"] },
            { "name": "expr_others$macrocall$1$subexpression$2", "symbols": ["expr_paren"] },
            { "name": "expr_others$macrocall$1", "symbols": ["expr_others$macrocall$1$subexpression$1", "expr_others$macrocall$2", "expr_others$macrocall$1$subexpression$2"], "postprocess": x => lexer_2.track(x, {
                    type: 'binary',
                    left: unwrap(x[0]),
                    right: unwrap(x[2]),
                    ...unwrap(x[1]),
                }) },
            { "name": "expr_others$macrocall$1", "symbols": ["expr_others$macrocall$4"], "postprocess": unwrap },
            { "name": "expr_others", "symbols": ["expr_others$macrocall$1"] },
            { "name": "expr_like$macrocall$2$macrocall$2", "symbols": ["ops_like"] },
            { "name": "expr_like$macrocall$2$macrocall$1", "symbols": ["expr_like$macrocall$2$macrocall$2"], "postprocess": x => lexer_2.track(x, {
                    op: (toStr(x, ' ') || '<error>').toUpperCase()
                }) },
            { "name": "expr_like$macrocall$2", "symbols": ["expr_like$macrocall$2$macrocall$1"] },
            { "name": "expr_like$macrocall$3", "symbols": ["expr_like"] },
            { "name": "expr_like$macrocall$4", "symbols": ["expr_in"] },
            { "name": "expr_like$macrocall$1$subexpression$1", "symbols": ["expr_like$macrocall$3"] },
            { "name": "expr_like$macrocall$1$subexpression$1", "symbols": ["expr_paren"] },
            { "name": "expr_like$macrocall$1$subexpression$2", "symbols": ["expr_like$macrocall$4"] },
            { "name": "expr_like$macrocall$1$subexpression$2", "symbols": ["expr_paren"] },
            { "name": "expr_like$macrocall$1", "symbols": ["expr_like$macrocall$1$subexpression$1", "expr_like$macrocall$2", "expr_like$macrocall$1$subexpression$2"], "postprocess": x => lexer_2.track(x, {
                    type: 'binary',
                    left: unwrap(x[0]),
                    right: unwrap(x[2]),
                    ...unwrap(x[1]),
                }) },
            { "name": "expr_like$macrocall$1", "symbols": ["expr_like$macrocall$4"], "postprocess": unwrap },
            { "name": "expr_like", "symbols": ["expr_like$macrocall$1"] },
            { "name": "expr_in$macrocall$2$macrocall$2", "symbols": ["ops_in"] },
            { "name": "expr_in$macrocall$2$macrocall$1", "symbols": ["expr_in$macrocall$2$macrocall$2"], "postprocess": x => lexer_2.track(x, {
                    op: (toStr(x, ' ') || '<error>').toUpperCase()
                }) },
            { "name": "expr_in$macrocall$2", "symbols": ["expr_in$macrocall$2$macrocall$1"] },
            { "name": "expr_in$macrocall$3", "symbols": ["expr_in"] },
            { "name": "expr_in$macrocall$4", "symbols": ["expr_add"] },
            { "name": "expr_in$macrocall$1$subexpression$1", "symbols": ["expr_in$macrocall$3"] },
            { "name": "expr_in$macrocall$1$subexpression$1", "symbols": ["expr_paren"] },
            { "name": "expr_in$macrocall$1$subexpression$2", "symbols": ["expr_in$macrocall$4"] },
            { "name": "expr_in$macrocall$1$subexpression$2", "symbols": ["expr_paren"] },
            { "name": "expr_in$macrocall$1", "symbols": ["expr_in$macrocall$1$subexpression$1", "expr_in$macrocall$2", "expr_in$macrocall$1$subexpression$2"], "postprocess": x => lexer_2.track(x, {
                    type: 'binary',
                    left: unwrap(x[0]),
                    right: unwrap(x[2]),
                    ...unwrap(x[1]),
                }) },
            { "name": "expr_in$macrocall$1", "symbols": ["expr_in$macrocall$4"], "postprocess": unwrap },
            { "name": "expr_in", "symbols": ["expr_in$macrocall$1"] },
            { "name": "expr_add$macrocall$2$macrocall$2$subexpression$1", "symbols": [(lexer_1.lexerAny.has("op_plus") ? { type: "op_plus" } : op_plus)] },
            { "name": "expr_add$macrocall$2$macrocall$2$subexpression$1", "symbols": [(lexer_1.lexerAny.has("op_minus") ? { type: "op_minus" } : op_minus)] },
            { "name": "expr_add$macrocall$2$macrocall$2$subexpression$1", "symbols": [(lexer_1.lexerAny.has("op_additive") ? { type: "op_additive" } : op_additive)] },
            { "name": "expr_add$macrocall$2$macrocall$2", "symbols": ["expr_add$macrocall$2$macrocall$2$subexpression$1"] },
            { "name": "expr_add$macrocall$2$macrocall$1$macrocall$2", "symbols": ["expr_add$macrocall$2$macrocall$2"] },
            { "name": "expr_add$macrocall$2$macrocall$1$macrocall$1", "symbols": ["expr_add$macrocall$2$macrocall$1$macrocall$2"], "postprocess": x => lexer_2.track(x, {
                    op: (toStr(x, ' ') || '<error>').toUpperCase()
                }) },
            { "name": "expr_add$macrocall$2$macrocall$1", "symbols": ["expr_add$macrocall$2$macrocall$1$macrocall$1"], "postprocess": unwrap },
            { "name": "expr_add$macrocall$2$macrocall$1", "symbols": ["kw_operator", "lparen", "ident", "dot", "expr_add$macrocall$2$macrocall$2", "rparen"], "postprocess": x => lexer_2.track(x, {
                    op: (toStr(x[4], ' ') || '<error>').toUpperCase(),
                    opSchema: toStr(x[2]),
                }) },
            { "name": "expr_add$macrocall$2", "symbols": ["expr_add$macrocall$2$macrocall$1"] },
            { "name": "expr_add$macrocall$3", "symbols": ["expr_add"] },
            { "name": "expr_add$macrocall$4", "symbols": ["expr_mult"] },
            { "name": "expr_add$macrocall$1$subexpression$1", "symbols": ["expr_add$macrocall$3"] },
            { "name": "expr_add$macrocall$1$subexpression$1", "symbols": ["expr_paren"] },
            { "name": "expr_add$macrocall$1$subexpression$2", "symbols": ["expr_add$macrocall$4"] },
            { "name": "expr_add$macrocall$1$subexpression$2", "symbols": ["expr_paren"] },
            { "name": "expr_add$macrocall$1", "symbols": ["expr_add$macrocall$1$subexpression$1", "expr_add$macrocall$2", "expr_add$macrocall$1$subexpression$2"], "postprocess": x => lexer_2.track(x, {
                    type: 'binary',
                    left: unwrap(x[0]),
                    right: unwrap(x[2]),
                    ...unwrap(x[1]),
                }) },
            { "name": "expr_add$macrocall$1", "symbols": ["expr_add$macrocall$4"], "postprocess": unwrap },
            { "name": "expr_add", "symbols": ["expr_add$macrocall$1"] },
            { "name": "expr_mult$macrocall$2$macrocall$2$subexpression$1", "symbols": [(lexer_1.lexerAny.has("star") ? { type: "star" } : star)] },
            { "name": "expr_mult$macrocall$2$macrocall$2$subexpression$1", "symbols": [(lexer_1.lexerAny.has("op_div") ? { type: "op_div" } : op_div)] },
            { "name": "expr_mult$macrocall$2$macrocall$2$subexpression$1", "symbols": [(lexer_1.lexerAny.has("op_mod") ? { type: "op_mod" } : op_mod)] },
            { "name": "expr_mult$macrocall$2$macrocall$2", "symbols": ["expr_mult$macrocall$2$macrocall$2$subexpression$1"] },
            { "name": "expr_mult$macrocall$2$macrocall$1$macrocall$2", "symbols": ["expr_mult$macrocall$2$macrocall$2"] },
            { "name": "expr_mult$macrocall$2$macrocall$1$macrocall$1", "symbols": ["expr_mult$macrocall$2$macrocall$1$macrocall$2"], "postprocess": x => lexer_2.track(x, {
                    op: (toStr(x, ' ') || '<error>').toUpperCase()
                }) },
            { "name": "expr_mult$macrocall$2$macrocall$1", "symbols": ["expr_mult$macrocall$2$macrocall$1$macrocall$1"], "postprocess": unwrap },
            { "name": "expr_mult$macrocall$2$macrocall$1", "symbols": ["kw_operator", "lparen", "ident", "dot", "expr_mult$macrocall$2$macrocall$2", "rparen"], "postprocess": x => lexer_2.track(x, {
                    op: (toStr(x[4], ' ') || '<error>').toUpperCase(),
                    opSchema: toStr(x[2]),
                }) },
            { "name": "expr_mult$macrocall$2", "symbols": ["expr_mult$macrocall$2$macrocall$1"] },
            { "name": "expr_mult$macrocall$3", "symbols": ["expr_mult"] },
            { "name": "expr_mult$macrocall$4", "symbols": ["expr_exp"] },
            { "name": "expr_mult$macrocall$1$subexpression$1", "symbols": ["expr_mult$macrocall$3"] },
            { "name": "expr_mult$macrocall$1$subexpression$1", "symbols": ["expr_paren"] },
            { "name": "expr_mult$macrocall$1$subexpression$2", "symbols": ["expr_mult$macrocall$4"] },
            { "name": "expr_mult$macrocall$1$subexpression$2", "symbols": ["expr_paren"] },
            { "name": "expr_mult$macrocall$1", "symbols": ["expr_mult$macrocall$1$subexpression$1", "expr_mult$macrocall$2", "expr_mult$macrocall$1$subexpression$2"], "postprocess": x => lexer_2.track(x, {
                    type: 'binary',
                    left: unwrap(x[0]),
                    right: unwrap(x[2]),
                    ...unwrap(x[1]),
                }) },
            { "name": "expr_mult$macrocall$1", "symbols": ["expr_mult$macrocall$4"], "postprocess": unwrap },
            { "name": "expr_mult", "symbols": ["expr_mult$macrocall$1"] },
            { "name": "expr_exp$macrocall$2$macrocall$2", "symbols": [(lexer_1.lexerAny.has("op_exp") ? { type: "op_exp" } : op_exp)] },
            { "name": "expr_exp$macrocall$2$macrocall$1$macrocall$2", "symbols": ["expr_exp$macrocall$2$macrocall$2"] },
            { "name": "expr_exp$macrocall$2$macrocall$1$macrocall$1", "symbols": ["expr_exp$macrocall$2$macrocall$1$macrocall$2"], "postprocess": x => lexer_2.track(x, {
                    op: (toStr(x, ' ') || '<error>').toUpperCase()
                }) },
            { "name": "expr_exp$macrocall$2$macrocall$1", "symbols": ["expr_exp$macrocall$2$macrocall$1$macrocall$1"], "postprocess": unwrap },
            { "name": "expr_exp$macrocall$2$macrocall$1", "symbols": ["kw_operator", "lparen", "ident", "dot", "expr_exp$macrocall$2$macrocall$2", "rparen"], "postprocess": x => lexer_2.track(x, {
                    op: (toStr(x[4], ' ') || '<error>').toUpperCase(),
                    opSchema: toStr(x[2]),
                }) },
            { "name": "expr_exp$macrocall$2", "symbols": ["expr_exp$macrocall$2$macrocall$1"] },
            { "name": "expr_exp$macrocall$3", "symbols": ["expr_exp"] },
            { "name": "expr_exp$macrocall$4", "symbols": ["expr_unary_add"] },
            { "name": "expr_exp$macrocall$1$subexpression$1", "symbols": ["expr_exp$macrocall$3"] },
            { "name": "expr_exp$macrocall$1$subexpression$1", "symbols": ["expr_paren"] },
            { "name": "expr_exp$macrocall$1$subexpression$2", "symbols": ["expr_exp$macrocall$4"] },
            { "name": "expr_exp$macrocall$1$subexpression$2", "symbols": ["expr_paren"] },
            { "name": "expr_exp$macrocall$1", "symbols": ["expr_exp$macrocall$1$subexpression$1", "expr_exp$macrocall$2", "expr_exp$macrocall$1$subexpression$2"], "postprocess": x => lexer_2.track(x, {
                    type: 'binary',
                    left: unwrap(x[0]),
                    right: unwrap(x[2]),
                    ...unwrap(x[1]),
                }) },
            { "name": "expr_exp$macrocall$1", "symbols": ["expr_exp$macrocall$4"], "postprocess": unwrap },
            { "name": "expr_exp", "symbols": ["expr_exp$macrocall$1"] },
            { "name": "expr_unary_add$macrocall$2$macrocall$2$subexpression$1", "symbols": [(lexer_1.lexerAny.has("op_plus") ? { type: "op_plus" } : op_plus)] },
            { "name": "expr_unary_add$macrocall$2$macrocall$2$subexpression$1", "symbols": [(lexer_1.lexerAny.has("op_minus") ? { type: "op_minus" } : op_minus)] },
            { "name": "expr_unary_add$macrocall$2$macrocall$2", "symbols": ["expr_unary_add$macrocall$2$macrocall$2$subexpression$1"] },
            { "name": "expr_unary_add$macrocall$2$macrocall$1$macrocall$2", "symbols": ["expr_unary_add$macrocall$2$macrocall$2"] },
            { "name": "expr_unary_add$macrocall$2$macrocall$1$macrocall$1", "symbols": ["expr_unary_add$macrocall$2$macrocall$1$macrocall$2"], "postprocess": x => lexer_2.track(x, {
                    op: (toStr(x, ' ') || '<error>').toUpperCase()
                }) },
            { "name": "expr_unary_add$macrocall$2$macrocall$1", "symbols": ["expr_unary_add$macrocall$2$macrocall$1$macrocall$1"], "postprocess": unwrap },
            { "name": "expr_unary_add$macrocall$2$macrocall$1", "symbols": ["kw_operator", "lparen", "ident", "dot", "expr_unary_add$macrocall$2$macrocall$2", "rparen"], "postprocess": x => lexer_2.track(x, {
                    op: (toStr(x[4], ' ') || '<error>').toUpperCase(),
                    opSchema: toStr(x[2]),
                }) },
            { "name": "expr_unary_add$macrocall$2", "symbols": ["expr_unary_add$macrocall$2$macrocall$1"] },
            { "name": "expr_unary_add$macrocall$3", "symbols": ["expr_unary_add"] },
            { "name": "expr_unary_add$macrocall$4", "symbols": ["expr_array_index"] },
            { "name": "expr_unary_add$macrocall$1$subexpression$1", "symbols": ["expr_unary_add$macrocall$3"] },
            { "name": "expr_unary_add$macrocall$1$subexpression$1", "symbols": ["expr_paren"] },
            { "name": "expr_unary_add$macrocall$1", "symbols": ["expr_unary_add$macrocall$2", "expr_unary_add$macrocall$1$subexpression$1"], "postprocess": x => lexer_2.track(x, {
                    type: 'unary',
                    ...unwrap(x[0]),
                    operand: unwrap(x[1]),
                }) },
            { "name": "expr_unary_add$macrocall$1", "symbols": ["expr_unary_add$macrocall$4"], "postprocess": unwrap },
            { "name": "expr_unary_add", "symbols": ["expr_unary_add$macrocall$1"] },
            { "name": "expr_array_index$subexpression$1", "symbols": ["expr_array_index"] },
            { "name": "expr_array_index$subexpression$1", "symbols": ["expr_paren"] },
            { "name": "expr_array_index", "symbols": ["expr_array_index$subexpression$1", (lexer_1.lexerAny.has("lbracket") ? { type: "lbracket" } : lbracket), "expr_nostar", (lexer_1.lexerAny.has("rbracket") ? { type: "rbracket" } : rbracket)], "postprocess": x => lexer_2.track(x, {
                    type: 'arrayIndex',
                    array: unwrap(x[0]),
                    index: unwrap(x[2]),
                }) },
            { "name": "expr_array_index", "symbols": ["expr_member"], "postprocess": unwrap },
            { "name": "expr_member$subexpression$1", "symbols": ["expr_member"] },
            { "name": "expr_member$subexpression$1", "symbols": ["expr_paren"] },
            { "name": "expr_member$subexpression$2", "symbols": ["string"] },
            { "name": "expr_member$subexpression$2", "symbols": ["int"] },
            { "name": "expr_member", "symbols": ["expr_member$subexpression$1", "ops_member", "expr_member$subexpression$2"], "postprocess": x => lexer_2.track(x, {
                    type: 'member',
                    operand: unwrap(x[0]),
                    op: x[1],
                    member: unwrap(x[2])
                }) },
            { "name": "expr_member$subexpression$3", "symbols": ["expr_member"] },
            { "name": "expr_member$subexpression$3", "symbols": ["expr_paren"] },
            { "name": "expr_member", "symbols": ["expr_member$subexpression$3", (lexer_1.lexerAny.has("op_cast") ? { type: "op_cast" } : op_cast), "data_type"], "postprocess": x => lexer_2.track(x, {
                    type: 'cast',
                    operand: unwrap(x[0]),
                    to: x[2],
                }) },
            { "name": "expr_member", "symbols": [(lexer_1.lexerAny.has("kw_cast") ? { type: "kw_cast" } : kw_cast), "lparen", "expr_nostar", (lexer_1.lexerAny.has("kw_as") ? { type: "kw_as" } : kw_as), "data_type", "rparen"], "postprocess": x => lexer_2.track(x, {
                    type: 'cast',
                    operand: unwrap(x[2]),
                    to: x[4],
                }) },
            { "name": "expr_member", "symbols": ["data_type", "string"], "postprocess": x => lexer_2.track(x, {
                    type: 'cast',
                    operand: lexer_2.track(x[1], {
                        type: 'string',
                        value: lexer_2.unbox(x[1]),
                    }),
                    to: lexer_2.unbox(x[0]),
                }) },
            { "name": "expr_member", "symbols": ["expr_dot"], "postprocess": unwrap },
            { "name": "expr_dot$subexpression$1", "symbols": ["word"] },
            { "name": "expr_dot$subexpression$1", "symbols": ["star"] },
            { "name": "expr_dot", "symbols": ["qname", (lexer_1.lexerAny.has("dot") ? { type: "dot" } : dot), "expr_dot$subexpression$1"], "postprocess": x => lexer_2.track(x, {
                    type: 'ref',
                    table: unwrap(x[0]),
                    name: toStr(x[2])
                }) },
            { "name": "expr_dot", "symbols": ["expr_final"], "postprocess": unwrap },
            { "name": "expr_final", "symbols": ["expr_basic"] },
            { "name": "expr_final", "symbols": ["expr_primary"] },
            { "name": "expr_basic", "symbols": ["expr_special_calls"] },
            { "name": "expr_basic", "symbols": ["expr_call"] },
            { "name": "expr_basic", "symbols": ["expr_array"] },
            { "name": "expr_basic", "symbols": ["expr_case"] },
            { "name": "expr_basic", "symbols": ["expr_extract"] },
            { "name": "expr_basic", "symbols": ["word"], "postprocess": x => lexer_2.track(x, {
                    type: 'ref',
                    name: unwrap(x[0]),
                }) },
            { "name": "expr_array$ebnf$1", "symbols": ["expr_subarray_items"], "postprocess": id },
            { "name": "expr_array$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "expr_array", "symbols": [(lexer_1.lexerAny.has("kw_array") ? { type: "kw_array" } : kw_array), (lexer_1.lexerAny.has("lbracket") ? { type: "lbracket" } : lbracket), "expr_array$ebnf$1", (lexer_1.lexerAny.has("rbracket") ? { type: "rbracket" } : rbracket)], "postprocess": x => lexer_2.track(x, {
                    type: 'array',
                    expressions: x[2] || [],
                }) },
            { "name": "expr_array", "symbols": [(lexer_1.lexerAny.has("kw_array") ? { type: "kw_array" } : kw_array), "lparen", "selection", "rparen"], "postprocess": x => lexer_2.track(x, {
                    type: 'array select',
                    select: unwrap(x[2]),
                }) },
            { "name": "expr_subarray$ebnf$1", "symbols": ["expr_subarray_items"], "postprocess": id },
            { "name": "expr_subarray$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "expr_subarray", "symbols": [(lexer_1.lexerAny.has("lbracket") ? { type: "lbracket" } : lbracket), "expr_subarray$ebnf$1", (lexer_1.lexerAny.has("rbracket") ? { type: "rbracket" } : rbracket)], "postprocess": get(1) },
            { "name": "expr_subarray_items$macrocall$2", "symbols": ["expr_list_item"] },
            { "name": "expr_subarray_items$macrocall$1$ebnf$1", "symbols": [] },
            { "name": "expr_subarray_items$macrocall$1$ebnf$1$subexpression$1", "symbols": [(lexer_1.lexerAny.has("comma") ? { type: "comma" } : comma), "expr_subarray_items$macrocall$2"], "postprocess": last },
            { "name": "expr_subarray_items$macrocall$1$ebnf$1", "symbols": ["expr_subarray_items$macrocall$1$ebnf$1", "expr_subarray_items$macrocall$1$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "expr_subarray_items$macrocall$1", "symbols": ["expr_subarray_items$macrocall$2", "expr_subarray_items$macrocall$1$ebnf$1"], "postprocess": ([head, tail]) => {
                    return [head, ...(tail || [])];
                } },
            { "name": "expr_subarray_items", "symbols": ["expr_subarray_items$macrocall$1"], "postprocess": x => x[0].map(unwrap) },
            { "name": "expr_subarray_items$macrocall$4", "symbols": ["expr_subarray"] },
            { "name": "expr_subarray_items$macrocall$3$ebnf$1", "symbols": [] },
            { "name": "expr_subarray_items$macrocall$3$ebnf$1$subexpression$1", "symbols": [(lexer_1.lexerAny.has("comma") ? { type: "comma" } : comma), "expr_subarray_items$macrocall$4"], "postprocess": last },
            { "name": "expr_subarray_items$macrocall$3$ebnf$1", "symbols": ["expr_subarray_items$macrocall$3$ebnf$1", "expr_subarray_items$macrocall$3$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "expr_subarray_items$macrocall$3", "symbols": ["expr_subarray_items$macrocall$4", "expr_subarray_items$macrocall$3$ebnf$1"], "postprocess": ([head, tail]) => {
                    return [head, ...(tail || [])];
                } },
            { "name": "expr_subarray_items", "symbols": ["expr_subarray_items$macrocall$3"], "postprocess": (x) => {
                    return x[0].map((v) => {
                        return lexer_2.track(v, {
                            type: 'array',
                            expressions: v[0].map(unwrap),
                        });
                    });
                } },
            { "name": "expr_call$ebnf$1$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_all") ? { type: "kw_all" } : kw_all)] },
            { "name": "expr_call$ebnf$1$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_distinct") ? { type: "kw_distinct" } : kw_distinct)] },
            { "name": "expr_call$ebnf$1", "symbols": ["expr_call$ebnf$1$subexpression$1"], "postprocess": id },
            { "name": "expr_call$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "expr_call$ebnf$2", "symbols": ["expr_list_raw"], "postprocess": id },
            { "name": "expr_call$ebnf$2", "symbols": [], "postprocess": () => null },
            { "name": "expr_call$ebnf$3", "symbols": ["select_order_by"], "postprocess": id },
            { "name": "expr_call$ebnf$3", "symbols": [], "postprocess": () => null },
            { "name": "expr_call$ebnf$4$subexpression$1", "symbols": ["kw_filter", "lparen", (lexer_1.lexerAny.has("kw_where") ? { type: "kw_where" } : kw_where), "expr", "rparen"], "postprocess": get(3) },
            { "name": "expr_call$ebnf$4", "symbols": ["expr_call$ebnf$4$subexpression$1"], "postprocess": id },
            { "name": "expr_call$ebnf$4", "symbols": [], "postprocess": () => null },
            { "name": "expr_call$ebnf$5", "symbols": ["expr_call_over"], "postprocess": id },
            { "name": "expr_call$ebnf$5", "symbols": [], "postprocess": () => null },
            { "name": "expr_call", "symbols": ["expr_fn_name", "lparen", "expr_call$ebnf$1", "expr_call$ebnf$2", "expr_call$ebnf$3", "rparen", "expr_call$ebnf$4", "expr_call$ebnf$5"], "postprocess": x => lexer_2.track(x, {
                    type: 'call',
                    function: unwrap(x[0]),
                    ...x[2] && { distinct: toStr(x[2]) },
                    args: x[3] || [],
                    ...x[4] && { orderBy: x[4] },
                    ...x[6] && { filter: unwrap(x[6]) },
                    ...x[7] && { over: unwrap(x[7]) },
                }) },
            { "name": "expr_call_over$ebnf$1$subexpression$1", "symbols": ["kw_partition", "kw_by", "expr_list_raw"], "postprocess": last },
            { "name": "expr_call_over$ebnf$1", "symbols": ["expr_call_over$ebnf$1$subexpression$1"], "postprocess": id },
            { "name": "expr_call_over$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "expr_call_over$ebnf$2", "symbols": ["select_order_by"], "postprocess": id },
            { "name": "expr_call_over$ebnf$2", "symbols": [], "postprocess": () => null },
            { "name": "expr_call_over", "symbols": ["kw_over", "lparen", "expr_call_over$ebnf$1", "expr_call_over$ebnf$2", "rparen"], "postprocess": x => lexer_2.track(x, {
                    ...x[2] && { partitionBy: x[2] },
                    ...x[3] && { orderBy: x[3] },
                }) },
            { "name": "expr_extract$subexpression$1", "symbols": ["word"], "postprocess": kw('extract') },
            { "name": "expr_extract", "symbols": ["expr_extract$subexpression$1", "lparen", "word", (lexer_1.lexerAny.has("kw_from") ? { type: "kw_from" } : kw_from), "expr", "rparen"], "postprocess": x => lexer_2.track(x, {
                    type: 'extract',
                    field: asName(x[2]),
                    from: x[4],
                }) },
            { "name": "expr_primary", "symbols": ["float"], "postprocess": x => lexer_2.track(x, { type: 'numeric', value: lexer_2.unbox(x[0]) }) },
            { "name": "expr_primary", "symbols": ["int"], "postprocess": x => lexer_2.track(x, { type: 'integer', value: lexer_2.unbox(x[0]) }) },
            { "name": "expr_primary", "symbols": ["string"], "postprocess": x => lexer_2.track(x, { type: 'string', value: lexer_2.unbox(x[0]) }) },
            { "name": "expr_primary", "symbols": [(lexer_1.lexerAny.has("kw_true") ? { type: "kw_true" } : kw_true)], "postprocess": x => lexer_2.track(x, { type: 'boolean', value: true }) },
            { "name": "expr_primary", "symbols": [(lexer_1.lexerAny.has("kw_false") ? { type: "kw_false" } : kw_false)], "postprocess": x => lexer_2.track(x, { type: 'boolean', value: false }) },
            { "name": "expr_primary", "symbols": [(lexer_1.lexerAny.has("kw_null") ? { type: "kw_null" } : kw_null)], "postprocess": x => lexer_2.track(x, { type: 'null' }) },
            { "name": "expr_primary", "symbols": ["value_keyword"], "postprocess": x => lexer_2.track(x, { type: 'keyword', keyword: toStr(x) }) },
            { "name": "expr_primary", "symbols": [(lexer_1.lexerAny.has("qparam") ? { type: "qparam" } : qparam)], "postprocess": x => lexer_2.track(x, { type: 'parameter', name: toStr(x[0]) }) },
            { "name": "expr_primary", "symbols": [(lexer_1.lexerAny.has("kw_default") ? { type: "kw_default" } : kw_default)], "postprocess": x => lexer_2.track(x, { type: 'default' }) },
            { "name": "ops_like", "symbols": ["ops_like_keywors"] },
            { "name": "ops_like", "symbols": ["ops_like_operators"] },
            { "name": "ops_like_keywors$ebnf$1", "symbols": [(lexer_1.lexerAny.has("kw_not") ? { type: "kw_not" } : kw_not)], "postprocess": id },
            { "name": "ops_like_keywors$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "ops_like_keywors$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_like") ? { type: "kw_like" } : kw_like)] },
            { "name": "ops_like_keywors$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_ilike") ? { type: "kw_ilike" } : kw_ilike)] },
            { "name": "ops_like_keywors", "symbols": ["ops_like_keywors$ebnf$1", "ops_like_keywors$subexpression$1"] },
            { "name": "ops_like_operators$subexpression$1", "symbols": [(lexer_1.lexerAny.has("op_like") ? { type: "op_like" } : op_like)], "postprocess": () => 'LIKE' },
            { "name": "ops_like_operators", "symbols": ["ops_like_operators$subexpression$1"] },
            { "name": "ops_like_operators$subexpression$2", "symbols": [(lexer_1.lexerAny.has("op_ilike") ? { type: "op_ilike" } : op_ilike)], "postprocess": () => 'ILIKE' },
            { "name": "ops_like_operators", "symbols": ["ops_like_operators$subexpression$2"] },
            { "name": "ops_like_operators$subexpression$3", "symbols": [(lexer_1.lexerAny.has("op_not_like") ? { type: "op_not_like" } : op_not_like)], "postprocess": () => 'NOT LIKE' },
            { "name": "ops_like_operators", "symbols": ["ops_like_operators$subexpression$3"] },
            { "name": "ops_like_operators$subexpression$4", "symbols": [(lexer_1.lexerAny.has("op_not_ilike") ? { type: "op_not_ilike" } : op_not_ilike)], "postprocess": () => 'NOT ILIKE' },
            { "name": "ops_like_operators", "symbols": ["ops_like_operators$subexpression$4"] },
            { "name": "ops_in$ebnf$1", "symbols": [(lexer_1.lexerAny.has("kw_not") ? { type: "kw_not" } : kw_not)], "postprocess": id },
            { "name": "ops_in$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "ops_in", "symbols": ["ops_in$ebnf$1", (lexer_1.lexerAny.has("kw_in") ? { type: "kw_in" } : kw_in)] },
            { "name": "ops_between$ebnf$1", "symbols": [(lexer_1.lexerAny.has("kw_not") ? { type: "kw_not" } : kw_not)], "postprocess": id },
            { "name": "ops_between$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "ops_between", "symbols": ["ops_between$ebnf$1", "kw_between"] },
            { "name": "ops_member$subexpression$1", "symbols": [(lexer_1.lexerAny.has("op_member") ? { type: "op_member" } : op_member)] },
            { "name": "ops_member$subexpression$1", "symbols": [(lexer_1.lexerAny.has("op_membertext") ? { type: "op_membertext" } : op_membertext)] },
            { "name": "ops_member", "symbols": ["ops_member$subexpression$1"], "postprocess": x => { var _a; return (_a = unwrap(x)) === null || _a === void 0 ? void 0 : _a.value; } },
            { "name": "expr_list_item", "symbols": ["expr_or_select"], "postprocess": unwrap },
            { "name": "expr_list_item", "symbols": ["expr_star"], "postprocess": unwrap },
            { "name": "expr_list_raw$macrocall$2", "symbols": ["expr_list_item"] },
            { "name": "expr_list_raw$macrocall$1$ebnf$1", "symbols": [] },
            { "name": "expr_list_raw$macrocall$1$ebnf$1$subexpression$1", "symbols": [(lexer_1.lexerAny.has("comma") ? { type: "comma" } : comma), "expr_list_raw$macrocall$2"], "postprocess": last },
            { "name": "expr_list_raw$macrocall$1$ebnf$1", "symbols": ["expr_list_raw$macrocall$1$ebnf$1", "expr_list_raw$macrocall$1$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "expr_list_raw$macrocall$1", "symbols": ["expr_list_raw$macrocall$2", "expr_list_raw$macrocall$1$ebnf$1"], "postprocess": ([head, tail]) => {
                    return [head, ...(tail || [])];
                } },
            { "name": "expr_list_raw", "symbols": ["expr_list_raw$macrocall$1"], "postprocess": ([x]) => x.map(unwrap) },
            { "name": "expr_list_raw_many$macrocall$2", "symbols": ["expr_list_item"] },
            { "name": "expr_list_raw_many$macrocall$1$ebnf$1$subexpression$1", "symbols": [(lexer_1.lexerAny.has("comma") ? { type: "comma" } : comma), "expr_list_raw_many$macrocall$2"], "postprocess": last },
            { "name": "expr_list_raw_many$macrocall$1$ebnf$1", "symbols": ["expr_list_raw_many$macrocall$1$ebnf$1$subexpression$1"] },
            { "name": "expr_list_raw_many$macrocall$1$ebnf$1$subexpression$2", "symbols": [(lexer_1.lexerAny.has("comma") ? { type: "comma" } : comma), "expr_list_raw_many$macrocall$2"], "postprocess": last },
            { "name": "expr_list_raw_many$macrocall$1$ebnf$1", "symbols": ["expr_list_raw_many$macrocall$1$ebnf$1", "expr_list_raw_many$macrocall$1$ebnf$1$subexpression$2"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "expr_list_raw_many$macrocall$1", "symbols": ["expr_list_raw_many$macrocall$2", "expr_list_raw_many$macrocall$1$ebnf$1"], "postprocess": ([head, tail]) => {
                    return [head, ...(tail || [])];
                } },
            { "name": "expr_list_raw_many", "symbols": ["expr_list_raw_many$macrocall$1"], "postprocess": ([x]) => x.map(unwrap) },
            { "name": "expr_or_select", "symbols": ["expr_nostar"], "postprocess": unwrap },
            { "name": "expr_or_select", "symbols": ["selection"], "postprocess": unwrap },
            { "name": "expr_list_many", "symbols": ["expr_list_raw_many"], "postprocess": x => lexer_2.track(x, {
                    type: 'list',
                    expressions: x[0],
                }) },
            { "name": "expr_case$ebnf$1", "symbols": ["expr_nostar"], "postprocess": id },
            { "name": "expr_case$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "expr_case$ebnf$2", "symbols": [] },
            { "name": "expr_case$ebnf$2", "symbols": ["expr_case$ebnf$2", "expr_case_whens"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "expr_case$ebnf$3", "symbols": ["expr_case_else"], "postprocess": id },
            { "name": "expr_case$ebnf$3", "symbols": [], "postprocess": () => null },
            { "name": "expr_case", "symbols": [(lexer_1.lexerAny.has("kw_case") ? { type: "kw_case" } : kw_case), "expr_case$ebnf$1", "expr_case$ebnf$2", "expr_case$ebnf$3", (lexer_1.lexerAny.has("kw_end") ? { type: "kw_end" } : kw_end)], "postprocess": x => lexer_2.track(x, {
                    type: 'case',
                    value: x[1],
                    whens: x[2],
                    else: x[3],
                }) },
            { "name": "expr_case_whens", "symbols": [(lexer_1.lexerAny.has("kw_when") ? { type: "kw_when" } : kw_when), "expr_nostar", (lexer_1.lexerAny.has("kw_then") ? { type: "kw_then" } : kw_then), "expr_nostar"], "postprocess": x => lexer_2.track(x, {
                    when: x[1],
                    value: x[3],
                }) },
            { "name": "expr_case_else", "symbols": [(lexer_1.lexerAny.has("kw_else") ? { type: "kw_else" } : kw_else), "expr_nostar"], "postprocess": last },
            { "name": "expr_fn_name$subexpression$1$ebnf$1$subexpression$1", "symbols": ["word", (lexer_1.lexerAny.has("dot") ? { type: "dot" } : dot)] },
            { "name": "expr_fn_name$subexpression$1$ebnf$1", "symbols": ["expr_fn_name$subexpression$1$ebnf$1$subexpression$1"], "postprocess": id },
            { "name": "expr_fn_name$subexpression$1$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "expr_fn_name$subexpression$1", "symbols": ["expr_fn_name$subexpression$1$ebnf$1", "word_or_keyword"], "postprocess": x => lexer_2.track(x, {
                    name: lexer_2.unbox(unwrap(x[1])),
                    ...x[0] && { schema: toStr(x[0][0]) },
                }) },
            { "name": "expr_fn_name", "symbols": ["expr_fn_name$subexpression$1"] },
            { "name": "expr_fn_name$subexpression$2", "symbols": [(lexer_1.lexerAny.has("kw_any") ? { type: "kw_any" } : kw_any)], "postprocess": x => lexer_2.track(x, {
                    name: 'any',
                }) },
            { "name": "expr_fn_name", "symbols": ["expr_fn_name$subexpression$2"] },
            { "name": "word_or_keyword", "symbols": ["word"] },
            { "name": "word_or_keyword", "symbols": ["value_keyword"], "postprocess": x => lexer_2.box(x, toStr(x)) },
            { "name": "value_keyword", "symbols": [(lexer_1.lexerAny.has("kw_current_catalog") ? { type: "kw_current_catalog" } : kw_current_catalog)] },
            { "name": "value_keyword", "symbols": [(lexer_1.lexerAny.has("kw_current_date") ? { type: "kw_current_date" } : kw_current_date)] },
            { "name": "value_keyword", "symbols": [(lexer_1.lexerAny.has("kw_current_role") ? { type: "kw_current_role" } : kw_current_role)] },
            { "name": "value_keyword", "symbols": [(lexer_1.lexerAny.has("kw_current_schema") ? { type: "kw_current_schema" } : kw_current_schema)] },
            { "name": "value_keyword", "symbols": [(lexer_1.lexerAny.has("kw_current_timestamp") ? { type: "kw_current_timestamp" } : kw_current_timestamp)] },
            { "name": "value_keyword", "symbols": [(lexer_1.lexerAny.has("kw_current_time") ? { type: "kw_current_time" } : kw_current_time)] },
            { "name": "value_keyword", "symbols": [(lexer_1.lexerAny.has("kw_localtimestamp") ? { type: "kw_localtimestamp" } : kw_localtimestamp)] },
            { "name": "value_keyword", "symbols": [(lexer_1.lexerAny.has("kw_localtime") ? { type: "kw_localtime" } : kw_localtime)] },
            { "name": "value_keyword", "symbols": [(lexer_1.lexerAny.has("kw_session_user") ? { type: "kw_session_user" } : kw_session_user)] },
            { "name": "value_keyword", "symbols": [(lexer_1.lexerAny.has("kw_user") ? { type: "kw_user" } : kw_user)] },
            { "name": "value_keyword", "symbols": [(lexer_1.lexerAny.has("kw_current_user") ? { type: "kw_current_user" } : kw_current_user)] },
            { "name": "expr_special_calls", "symbols": ["spe_overlay"] },
            { "name": "expr_special_calls", "symbols": ["spe_substring"] },
            { "name": "spe_overlay$subexpression$1", "symbols": ["word"], "postprocess": kw('overlay') },
            { "name": "spe_overlay$subexpression$2", "symbols": [(lexer_1.lexerAny.has("lparen") ? { type: "lparen" } : lparen), "expr_nostar"] },
            { "name": "spe_overlay$subexpression$3", "symbols": [(lexer_1.lexerAny.has("kw_placing") ? { type: "kw_placing" } : kw_placing), "expr_nostar"] },
            { "name": "spe_overlay$subexpression$4", "symbols": [(lexer_1.lexerAny.has("kw_from") ? { type: "kw_from" } : kw_from), "expr_nostar"] },
            { "name": "spe_overlay$ebnf$1$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_for") ? { type: "kw_for" } : kw_for), "expr_nostar"] },
            { "name": "spe_overlay$ebnf$1", "symbols": ["spe_overlay$ebnf$1$subexpression$1"], "postprocess": id },
            { "name": "spe_overlay$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "spe_overlay", "symbols": ["spe_overlay$subexpression$1", "spe_overlay$subexpression$2", "spe_overlay$subexpression$3", "spe_overlay$subexpression$4", "spe_overlay$ebnf$1", (lexer_1.lexerAny.has("rparen") ? { type: "rparen" } : rparen)], "postprocess": x => lexer_2.track(x, {
                    type: 'overlay',
                    value: x[1][1],
                    placing: x[2][1],
                    from: x[3][1],
                    ...x[4] && { for: x[4][1] },
                }) },
            { "name": "spe_substring$subexpression$1", "symbols": ["word"], "postprocess": kw('substring') },
            { "name": "spe_substring$subexpression$2", "symbols": [(lexer_1.lexerAny.has("lparen") ? { type: "lparen" } : lparen), "expr_nostar"] },
            { "name": "spe_substring$ebnf$1$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_from") ? { type: "kw_from" } : kw_from), "expr_nostar"] },
            { "name": "spe_substring$ebnf$1", "symbols": ["spe_substring$ebnf$1$subexpression$1"], "postprocess": id },
            { "name": "spe_substring$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "spe_substring$ebnf$2$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_for") ? { type: "kw_for" } : kw_for), "expr_nostar"] },
            { "name": "spe_substring$ebnf$2", "symbols": ["spe_substring$ebnf$2$subexpression$1"], "postprocess": id },
            { "name": "spe_substring$ebnf$2", "symbols": [], "postprocess": () => null },
            { "name": "spe_substring", "symbols": ["spe_substring$subexpression$1", "spe_substring$subexpression$2", "spe_substring$ebnf$1", "spe_substring$ebnf$2", (lexer_1.lexerAny.has("rparen") ? { type: "rparen" } : rparen)], "postprocess": x => lexer_2.track(x, {
                    type: 'substring',
                    value: x[1][1],
                    ...x[2] && { from: x[2][1] },
                    ...x[3] && { for: x[3][1] },
                }) },
            { "name": "createtable_statement$ebnf$1", "symbols": ["createtable_modifiers"], "postprocess": id },
            { "name": "createtable_statement$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "createtable_statement$ebnf$2", "symbols": ["kw_ifnotexists"], "postprocess": id },
            { "name": "createtable_statement$ebnf$2", "symbols": [], "postprocess": () => null },
            { "name": "createtable_statement$ebnf$3", "symbols": ["createtable_opts"], "postprocess": id },
            { "name": "createtable_statement$ebnf$3", "symbols": [], "postprocess": () => null },
            { "name": "createtable_statement", "symbols": [(lexer_1.lexerAny.has("kw_create") ? { type: "kw_create" } : kw_create), "createtable_statement$ebnf$1", (lexer_1.lexerAny.has("kw_table") ? { type: "kw_table" } : kw_table), "createtable_statement$ebnf$2", "qname", "lparen", "createtable_declarationlist", "rparen", "createtable_statement$ebnf$3"], "postprocess": x => {
                    const cols = x[6].filter((v) => 'kind' in v);
                    const constraints = x[6].filter((v) => !('kind' in v));
                    return lexer_2.track(x, {
                        type: 'create table',
                        ...!!x[3] ? { ifNotExists: true } : {},
                        name: x[4],
                        columns: cols,
                        ...unwrap(x[1]),
                        ...constraints.length ? { constraints } : {},
                        ...last(x),
                    });
                } },
            { "name": "createtable_modifiers", "symbols": ["kw_unlogged"], "postprocess": x => x[0] ? { unlogged: true } : {} },
            { "name": "createtable_modifiers", "symbols": ["m_locglob"] },
            { "name": "createtable_modifiers", "symbols": ["m_tmp"] },
            { "name": "createtable_modifiers", "symbols": ["m_locglob", "m_tmp"], "postprocess": ([a, b]) => ({ ...a, ...b }) },
            { "name": "m_locglob$subexpression$1", "symbols": ["kw_local"] },
            { "name": "m_locglob$subexpression$1", "symbols": ["kw_global"] },
            { "name": "m_locglob", "symbols": ["m_locglob$subexpression$1"], "postprocess": x => ({ locality: toStr(x) }) },
            { "name": "m_tmp$subexpression$1", "symbols": ["kw_temp"] },
            { "name": "m_tmp$subexpression$1", "symbols": ["kw_temporary"] },
            { "name": "m_tmp", "symbols": ["m_tmp$subexpression$1"], "postprocess": x => ({ temporary: true }) },
            { "name": "createtable_declarationlist$ebnf$1", "symbols": [] },
            { "name": "createtable_declarationlist$ebnf$1$subexpression$1", "symbols": ["comma", "createtable_declaration"], "postprocess": last },
            { "name": "createtable_declarationlist$ebnf$1", "symbols": ["createtable_declarationlist$ebnf$1", "createtable_declarationlist$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "createtable_declarationlist", "symbols": ["createtable_declaration", "createtable_declarationlist$ebnf$1"], "postprocess": ([head, tail]) => {
                    return [head, ...(tail || [])];
                } },
            { "name": "createtable_declaration$subexpression$1", "symbols": ["createtable_constraint"] },
            { "name": "createtable_declaration$subexpression$1", "symbols": ["createtable_column"] },
            { "name": "createtable_declaration$subexpression$1", "symbols": ["createtable_like"] },
            { "name": "createtable_declaration", "symbols": ["createtable_declaration$subexpression$1"], "postprocess": unwrap },
            { "name": "createtable_constraint$macrocall$2", "symbols": ["createtable_constraint_def"] },
            { "name": "createtable_constraint$macrocall$1$ebnf$1$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_constraint") ? { type: "kw_constraint" } : kw_constraint), "word"] },
            { "name": "createtable_constraint$macrocall$1$ebnf$1", "symbols": ["createtable_constraint$macrocall$1$ebnf$1$subexpression$1"], "postprocess": id },
            { "name": "createtable_constraint$macrocall$1$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "createtable_constraint$macrocall$1", "symbols": ["createtable_constraint$macrocall$1$ebnf$1", "createtable_constraint$macrocall$2"], "postprocess": x => {
                    const name = x[0] && asName(x[0][1]);
                    if (!name) {
                        return lexer_2.track(x, unwrap(x[1]));
                    }
                    return lexer_2.track(x, {
                        constraintName: name,
                        ...unwrap(x[1]),
                    });
                } },
            { "name": "createtable_constraint", "symbols": ["createtable_constraint$macrocall$1"], "postprocess": unwrap },
            { "name": "createtable_constraint_def", "symbols": ["createtable_constraint_def_unique"] },
            { "name": "createtable_constraint_def", "symbols": ["createtable_constraint_def_check"] },
            { "name": "createtable_constraint_def", "symbols": ["createtable_constraint_foreignkey"] },
            { "name": "createtable_constraint_def_unique$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_unique") ? { type: "kw_unique" } : kw_unique)] },
            { "name": "createtable_constraint_def_unique$subexpression$1", "symbols": ["kw_primary_key"] },
            { "name": "createtable_constraint_def_unique", "symbols": ["createtable_constraint_def_unique$subexpression$1", "lparen", "createtable_collist", "rparen"], "postprocess": x => lexer_2.track(x, {
                    type: toStr(x[0], ' '),
                    columns: x[2].map(asName),
                }) },
            { "name": "createtable_constraint_def_check", "symbols": [(lexer_1.lexerAny.has("kw_check") ? { type: "kw_check" } : kw_check), "expr_paren"], "postprocess": x => lexer_2.track(x, {
                    type: 'check',
                    expr: unwrap(x[1]),
                }) },
            { "name": "createtable_constraint_foreignkey$ebnf$1", "symbols": [] },
            { "name": "createtable_constraint_foreignkey$ebnf$1", "symbols": ["createtable_constraint_foreignkey$ebnf$1", "createtable_constraint_foreignkey_onsometing"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "createtable_constraint_foreignkey", "symbols": [(lexer_1.lexerAny.has("kw_foreign") ? { type: "kw_foreign" } : kw_foreign), "kw_key", "collist_paren", (lexer_1.lexerAny.has("kw_references") ? { type: "kw_references" } : kw_references), "qualified_name", "collist_paren", "createtable_constraint_foreignkey$ebnf$1"], "postprocess": (x) => {
                    return lexer_2.track(x, {
                        type: 'foreign key',
                        localColumns: x[2].map(asName),
                        foreignTable: unwrap(x[4]),
                        foreignColumns: x[5].map(asName),
                        ...x[6].reduce((a, b) => ({ ...a, ...b }), {}),
                    });
                } },
            { "name": "createtable_constraint_foreignkey_onsometing", "symbols": [(lexer_1.lexerAny.has("kw_on") ? { type: "kw_on" } : kw_on), "kw_delete", "createtable_constraint_on_action"], "postprocess": x => lexer_2.track(x, { onDelete: last(x) }) },
            { "name": "createtable_constraint_foreignkey_onsometing", "symbols": [(lexer_1.lexerAny.has("kw_on") ? { type: "kw_on" } : kw_on), "kw_update", "createtable_constraint_on_action"], "postprocess": x => lexer_2.track(x, { onUpdate: last(x) }) },
            { "name": "createtable_constraint_foreignkey_onsometing$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_full") ? { type: "kw_full" } : kw_full)] },
            { "name": "createtable_constraint_foreignkey_onsometing$subexpression$1", "symbols": ["kw_partial"] },
            { "name": "createtable_constraint_foreignkey_onsometing$subexpression$1", "symbols": ["kw_simple"] },
            { "name": "createtable_constraint_foreignkey_onsometing", "symbols": ["kw_match", "createtable_constraint_foreignkey_onsometing$subexpression$1"], "postprocess": x => lexer_2.track(x, { match: toStr(last(x)) }) },
            { "name": "createtable_constraint_on_action$subexpression$1", "symbols": ["kw_cascade"] },
            { "name": "createtable_constraint_on_action$subexpression$1$subexpression$1", "symbols": ["kw_no", "kw_action"] },
            { "name": "createtable_constraint_on_action$subexpression$1", "symbols": ["createtable_constraint_on_action$subexpression$1$subexpression$1"] },
            { "name": "createtable_constraint_on_action$subexpression$1", "symbols": ["kw_restrict"] },
            { "name": "createtable_constraint_on_action$subexpression$1$subexpression$2", "symbols": [(lexer_1.lexerAny.has("kw_null") ? { type: "kw_null" } : kw_null)] },
            { "name": "createtable_constraint_on_action$subexpression$1$subexpression$2", "symbols": [(lexer_1.lexerAny.has("kw_default") ? { type: "kw_default" } : kw_default)] },
            { "name": "createtable_constraint_on_action$subexpression$1", "symbols": ["kw_set", "createtable_constraint_on_action$subexpression$1$subexpression$2"] },
            { "name": "createtable_constraint_on_action", "symbols": ["createtable_constraint_on_action$subexpression$1"], "postprocess": x => toStr(x, ' ') },
            { "name": "createtable_collist$ebnf$1", "symbols": [] },
            { "name": "createtable_collist$ebnf$1$subexpression$1", "symbols": ["comma", "ident"], "postprocess": last },
            { "name": "createtable_collist$ebnf$1", "symbols": ["createtable_collist$ebnf$1", "createtable_collist$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "createtable_collist", "symbols": ["ident", "createtable_collist$ebnf$1"], "postprocess": ([head, tail]) => {
                    return [head, ...(tail || [])];
                } },
            { "name": "createtable_column$ebnf$1", "symbols": ["createtable_collate"], "postprocess": id },
            { "name": "createtable_column$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "createtable_column$ebnf$2", "symbols": [] },
            { "name": "createtable_column$ebnf$2", "symbols": ["createtable_column$ebnf$2", "createtable_column_constraint"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "createtable_column", "symbols": ["word", "data_type", "createtable_column$ebnf$1", "createtable_column$ebnf$2"], "postprocess": x => {
                    return lexer_2.track(x, {
                        kind: 'column',
                        name: asName(x[0]),
                        dataType: x[1],
                        ...x[2] ? { collate: x[2][1] } : {},
                        ...x[3] && x[3].length ? { constraints: x[3] } : {},
                    });
                } },
            { "name": "createtable_like$ebnf$1", "symbols": [] },
            { "name": "createtable_like$ebnf$1", "symbols": ["createtable_like$ebnf$1", "createtable_like_opt"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "createtable_like", "symbols": [(lexer_1.lexerAny.has("kw_like") ? { type: "kw_like" } : kw_like), "qname", "createtable_like$ebnf$1"], "postprocess": x => lexer_2.track(x, {
                    kind: 'like table',
                    like: x[1],
                    options: x[2],
                }) },
            { "name": "createtable_like_opt$subexpression$1", "symbols": ["kw_including"] },
            { "name": "createtable_like_opt$subexpression$1", "symbols": ["kw_excluding"] },
            { "name": "createtable_like_opt", "symbols": ["createtable_like_opt$subexpression$1", "createtable_like_opt_val"], "postprocess": x => lexer_2.track(x, {
                    verb: toStr(x[0]),
                    option: toStr(x[1]),
                }) },
            { "name": "createtable_like_opt_val", "symbols": ["word"], "postprocess": anyKw('defaults', 'constraints', 'indexes', 'storage', 'comments') },
            { "name": "createtable_like_opt_val", "symbols": [(lexer_1.lexerAny.has("kw_all") ? { type: "kw_all" } : kw_all)] },
            { "name": "createtable_column_constraint$macrocall$2", "symbols": ["createtable_column_constraint_def"] },
            { "name": "createtable_column_constraint$macrocall$1$ebnf$1$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_constraint") ? { type: "kw_constraint" } : kw_constraint), "word"] },
            { "name": "createtable_column_constraint$macrocall$1$ebnf$1", "symbols": ["createtable_column_constraint$macrocall$1$ebnf$1$subexpression$1"], "postprocess": id },
            { "name": "createtable_column_constraint$macrocall$1$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "createtable_column_constraint$macrocall$1", "symbols": ["createtable_column_constraint$macrocall$1$ebnf$1", "createtable_column_constraint$macrocall$2"], "postprocess": x => {
                    const name = x[0] && asName(x[0][1]);
                    if (!name) {
                        return lexer_2.track(x, unwrap(x[1]));
                    }
                    return lexer_2.track(x, {
                        constraintName: name,
                        ...unwrap(x[1]),
                    });
                } },
            { "name": "createtable_column_constraint", "symbols": ["createtable_column_constraint$macrocall$1"], "postprocess": unwrap },
            { "name": "createtable_column_constraint_def", "symbols": [(lexer_1.lexerAny.has("kw_unique") ? { type: "kw_unique" } : kw_unique)], "postprocess": x => lexer_2.track(x, { type: 'unique' }) },
            { "name": "createtable_column_constraint_def", "symbols": ["kw_primary_key"], "postprocess": x => lexer_2.track(x, { type: 'primary key' }) },
            { "name": "createtable_column_constraint_def", "symbols": ["kw_not_null"], "postprocess": x => lexer_2.track(x, { type: 'not null' }) },
            { "name": "createtable_column_constraint_def", "symbols": [(lexer_1.lexerAny.has("kw_null") ? { type: "kw_null" } : kw_null)], "postprocess": x => lexer_2.track(x, { type: 'null' }) },
            { "name": "createtable_column_constraint_def", "symbols": [(lexer_1.lexerAny.has("kw_default") ? { type: "kw_default" } : kw_default), "expr"], "postprocess": x => lexer_2.track(x, { type: 'default', default: unwrap(x[1]) }) },
            { "name": "createtable_column_constraint_def", "symbols": [(lexer_1.lexerAny.has("kw_check") ? { type: "kw_check" } : kw_check), "expr_paren"], "postprocess": x => lexer_2.track(x, { type: 'check', expr: unwrap(x[1]) }) },
            { "name": "createtable_column_constraint_def", "symbols": ["altercol_generated"] },
            { "name": "createtable_collate", "symbols": [(lexer_1.lexerAny.has("kw_collate") ? { type: "kw_collate" } : kw_collate), "qualified_name"] },
            { "name": "createtable_opts$subexpression$1", "symbols": ["word"], "postprocess": kw('inherits') },
            { "name": "createtable_opts$macrocall$2", "symbols": ["qname"] },
            { "name": "createtable_opts$macrocall$1$ebnf$1", "symbols": [] },
            { "name": "createtable_opts$macrocall$1$ebnf$1$subexpression$1", "symbols": [(lexer_1.lexerAny.has("comma") ? { type: "comma" } : comma), "createtable_opts$macrocall$2"], "postprocess": last },
            { "name": "createtable_opts$macrocall$1$ebnf$1", "symbols": ["createtable_opts$macrocall$1$ebnf$1", "createtable_opts$macrocall$1$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "createtable_opts$macrocall$1", "symbols": ["createtable_opts$macrocall$2", "createtable_opts$macrocall$1$ebnf$1"], "postprocess": ([head, tail]) => {
                    return [unwrap(head), ...(tail.map(unwrap) || [])];
                } },
            { "name": "createtable_opts", "symbols": ["createtable_opts$subexpression$1", "lparen", "createtable_opts$macrocall$1", "rparen"], "postprocess": x => lexer_2.track(x, { inherits: x[2] }) },
            { "name": "createindex_statement$ebnf$1", "symbols": [(lexer_1.lexerAny.has("kw_unique") ? { type: "kw_unique" } : kw_unique)], "postprocess": id },
            { "name": "createindex_statement$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "createindex_statement$ebnf$2", "symbols": ["kw_ifnotexists"], "postprocess": id },
            { "name": "createindex_statement$ebnf$2", "symbols": [], "postprocess": () => null },
            { "name": "createindex_statement$ebnf$3", "symbols": ["word"], "postprocess": id },
            { "name": "createindex_statement$ebnf$3", "symbols": [], "postprocess": () => null },
            { "name": "createindex_statement$ebnf$4$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_using") ? { type: "kw_using" } : kw_using), "ident"], "postprocess": last },
            { "name": "createindex_statement$ebnf$4", "symbols": ["createindex_statement$ebnf$4$subexpression$1"], "postprocess": id },
            { "name": "createindex_statement$ebnf$4", "symbols": [], "postprocess": () => null },
            { "name": "createindex_statement", "symbols": [(lexer_1.lexerAny.has("kw_create") ? { type: "kw_create" } : kw_create), "createindex_statement$ebnf$1", "kw_index", "createindex_statement$ebnf$2", "createindex_statement$ebnf$3", (lexer_1.lexerAny.has("kw_on") ? { type: "kw_on" } : kw_on), "table_ref", "createindex_statement$ebnf$4", "lparen", "createindex_expressions", "rparen"], "postprocess": x => lexer_2.track(x, {
                    type: 'create index',
                    ...x[1] && { unique: true },
                    ...x[3] && { ifNotExists: true },
                    ...x[4] && { indexName: asName(x[4]) },
                    table: x[6],
                    ...x[7] && { using: asName(x[7]) },
                    expressions: x[9],
                }) },
            { "name": "createindex_expressions$ebnf$1", "symbols": [] },
            { "name": "createindex_expressions$ebnf$1$subexpression$1", "symbols": ["comma", "createindex_expression"], "postprocess": last },
            { "name": "createindex_expressions$ebnf$1", "symbols": ["createindex_expressions$ebnf$1", "createindex_expressions$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "createindex_expressions", "symbols": ["createindex_expression", "createindex_expressions$ebnf$1"], "postprocess": ([head, tail]) => {
                    return [head, ...(tail || [])];
                } },
            { "name": "createindex_expression$subexpression$1", "symbols": ["expr_basic"] },
            { "name": "createindex_expression$subexpression$1", "symbols": ["expr_paren"] },
            { "name": "createindex_expression$ebnf$1$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_collate") ? { type: "kw_collate" } : kw_collate), "qualified_name"], "postprocess": last },
            { "name": "createindex_expression$ebnf$1", "symbols": ["createindex_expression$ebnf$1$subexpression$1"], "postprocess": id },
            { "name": "createindex_expression$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "createindex_expression$ebnf$2", "symbols": ["qualified_name"], "postprocess": id },
            { "name": "createindex_expression$ebnf$2", "symbols": [], "postprocess": () => null },
            { "name": "createindex_expression$ebnf$3$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_asc") ? { type: "kw_asc" } : kw_asc)] },
            { "name": "createindex_expression$ebnf$3$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_desc") ? { type: "kw_desc" } : kw_desc)] },
            { "name": "createindex_expression$ebnf$3", "symbols": ["createindex_expression$ebnf$3$subexpression$1"], "postprocess": id },
            { "name": "createindex_expression$ebnf$3", "symbols": [], "postprocess": () => null },
            { "name": "createindex_expression$ebnf$4$subexpression$1$subexpression$1", "symbols": ["kw_first"] },
            { "name": "createindex_expression$ebnf$4$subexpression$1$subexpression$1", "symbols": ["kw_last"] },
            { "name": "createindex_expression$ebnf$4$subexpression$1", "symbols": ["kw_nulls", "createindex_expression$ebnf$4$subexpression$1$subexpression$1"], "postprocess": last },
            { "name": "createindex_expression$ebnf$4", "symbols": ["createindex_expression$ebnf$4$subexpression$1"], "postprocess": id },
            { "name": "createindex_expression$ebnf$4", "symbols": [], "postprocess": () => null },
            { "name": "createindex_expression", "symbols": ["createindex_expression$subexpression$1", "createindex_expression$ebnf$1", "createindex_expression$ebnf$2", "createindex_expression$ebnf$3", "createindex_expression$ebnf$4"], "postprocess": x => lexer_2.track(x, {
                    expression: unwrap(x[0]),
                    ...x[1] && { collate: unwrap(x[1]) },
                    ...x[2] && { opclass: unwrap(x[2]) },
                    ...x[3] && { order: unwrap(x[3]).value },
                    ...x[4] && { nulls: unwrap(x[4]) },
                }) },
            { "name": "createextension_statement$ebnf$1", "symbols": ["kw_ifnotexists"], "postprocess": id },
            { "name": "createextension_statement$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "createextension_statement$ebnf$2", "symbols": [(lexer_1.lexerAny.has("kw_with") ? { type: "kw_with" } : kw_with)], "postprocess": id },
            { "name": "createextension_statement$ebnf$2", "symbols": [], "postprocess": () => null },
            { "name": "createextension_statement$ebnf$3$subexpression$1", "symbols": ["kw_schema", "word"], "postprocess": last },
            { "name": "createextension_statement$ebnf$3", "symbols": ["createextension_statement$ebnf$3$subexpression$1"], "postprocess": id },
            { "name": "createextension_statement$ebnf$3", "symbols": [], "postprocess": () => null },
            { "name": "createextension_statement$ebnf$4$subexpression$1", "symbols": ["kw_version", "string"], "postprocess": last },
            { "name": "createextension_statement$ebnf$4", "symbols": ["createextension_statement$ebnf$4$subexpression$1"], "postprocess": id },
            { "name": "createextension_statement$ebnf$4", "symbols": [], "postprocess": () => null },
            { "name": "createextension_statement$ebnf$5$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_from") ? { type: "kw_from" } : kw_from), "string"], "postprocess": last },
            { "name": "createextension_statement$ebnf$5", "symbols": ["createextension_statement$ebnf$5$subexpression$1"], "postprocess": id },
            { "name": "createextension_statement$ebnf$5", "symbols": [], "postprocess": () => null },
            { "name": "createextension_statement", "symbols": [(lexer_1.lexerAny.has("kw_create") ? { type: "kw_create" } : kw_create), "kw_extension", "createextension_statement$ebnf$1", "word", "createextension_statement$ebnf$2", "createextension_statement$ebnf$3", "createextension_statement$ebnf$4", "createextension_statement$ebnf$5"], "postprocess": x => lexer_2.track(x, {
                    type: 'create extension',
                    ...!!x[2] ? { ifNotExists: true } : {},
                    extension: asName(x[3]),
                    ...!!x[5] ? { schema: asName(x[5]) } : {},
                    ...!!x[6] ? { version: asLit(x[6]) } : {},
                    ...!!x[7] ? { from: asLit(x[7]) } : {},
                }) },
            { "name": "simplestatements_all", "symbols": ["simplestatements_start_transaction"] },
            { "name": "simplestatements_all", "symbols": ["simplestatements_commit"] },
            { "name": "simplestatements_all", "symbols": ["simplestatements_rollback"] },
            { "name": "simplestatements_all", "symbols": ["simplestatements_tablespace"] },
            { "name": "simplestatements_all", "symbols": ["simplestatements_set"] },
            { "name": "simplestatements_all", "symbols": ["simplestatements_show"] },
            { "name": "simplestatements_all", "symbols": ["simplestatements_begin"] },
            { "name": "simplestatements_start_transaction$subexpression$1", "symbols": ["kw_start", "kw_transaction"] },
            { "name": "simplestatements_start_transaction", "symbols": ["simplestatements_start_transaction$subexpression$1"], "postprocess": x => lexer_2.track(x, { type: 'start transaction' }) },
            { "name": "simplestatements_commit", "symbols": ["kw_commit"], "postprocess": x => lexer_2.track(x, { type: 'commit' }) },
            { "name": "simplestatements_rollback", "symbols": ["kw_rollback"], "postprocess": x => lexer_2.track(x, { type: 'rollback' }) },
            { "name": "simplestatements_tablespace", "symbols": ["kw_tablespace", "word"], "postprocess": x => lexer_2.track(x, {
                    type: 'tablespace',
                    tablespace: asName(x[1]),
                }) },
            { "name": "simplestatements_set$subexpression$1", "symbols": ["simplestatements_set_simple"] },
            { "name": "simplestatements_set$subexpression$1", "symbols": ["simplestatements_set_timezone"] },
            { "name": "simplestatements_set", "symbols": ["kw_set", "simplestatements_set$subexpression$1"], "postprocess": last },
            { "name": "simplestatements_set_timezone", "symbols": ["kw_time", "kw_zone", "simplestatements_set_timezone_val"], "postprocess": x => lexer_2.track(x, { type: 'set timezone', to: x[2] }) },
            { "name": "simplestatements_set_timezone_val$subexpression$1", "symbols": ["string"] },
            { "name": "simplestatements_set_timezone_val$subexpression$1", "symbols": ["int"] },
            { "name": "simplestatements_set_timezone_val", "symbols": ["simplestatements_set_timezone_val$subexpression$1"], "postprocess": x => lexer_2.track(x, { type: 'value', value: unwrap(x[0]) }) },
            { "name": "simplestatements_set_timezone_val", "symbols": ["kw_local"], "postprocess": x => lexer_2.track(x, { type: 'local' }) },
            { "name": "simplestatements_set_timezone_val", "symbols": [(lexer_1.lexerAny.has("kw_default") ? { type: "kw_default" } : kw_default)], "postprocess": x => lexer_2.track(x, { type: 'default' }) },
            { "name": "simplestatements_set_timezone_val", "symbols": ["kw_interval", "string", "kw_hour", (lexer_1.lexerAny.has("kw_to") ? { type: "kw_to" } : kw_to), "kw_minute"], "postprocess": x => lexer_2.track(x, { type: 'interval', value: lexer_2.unbox(x[1]) }) },
            { "name": "simplestatements_set_simple$subexpression$1", "symbols": [(lexer_1.lexerAny.has("op_eq") ? { type: "op_eq" } : op_eq)] },
            { "name": "simplestatements_set_simple$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_to") ? { type: "kw_to" } : kw_to)] },
            { "name": "simplestatements_set_simple", "symbols": ["ident", "simplestatements_set_simple$subexpression$1", "simplestatements_set_val"], "postprocess": x => lexer_2.track(x, {
                    type: 'set',
                    variable: asName(x[0]),
                    set: lexer_2.unbox(x[2]),
                }) },
            { "name": "simplestatements_set_val", "symbols": ["simplestatements_set_val_raw"], "postprocess": unwrap },
            { "name": "simplestatements_set_val", "symbols": [(lexer_1.lexerAny.has("kw_default") ? { type: "kw_default" } : kw_default)], "postprocess": x => lexer_2.track(x, { type: 'default' }) },
            { "name": "simplestatements_set_val$ebnf$1$subexpression$1", "symbols": ["comma", "simplestatements_set_val_raw"] },
            { "name": "simplestatements_set_val$ebnf$1", "symbols": ["simplestatements_set_val$ebnf$1$subexpression$1"] },
            { "name": "simplestatements_set_val$ebnf$1$subexpression$2", "symbols": ["comma", "simplestatements_set_val_raw"] },
            { "name": "simplestatements_set_val$ebnf$1", "symbols": ["simplestatements_set_val$ebnf$1", "simplestatements_set_val$ebnf$1$subexpression$2"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "simplestatements_set_val", "symbols": ["simplestatements_set_val_raw", "simplestatements_set_val$ebnf$1"], "postprocess": x => lexer_2.track(x, {
                    type: 'list',
                    values: [x[0], ...(x[1] || [])]
                }) },
            { "name": "simplestatements_set_val_raw$subexpression$1", "symbols": ["string"] },
            { "name": "simplestatements_set_val_raw$subexpression$1", "symbols": ["int"] },
            { "name": "simplestatements_set_val_raw", "symbols": ["simplestatements_set_val_raw$subexpression$1"], "postprocess": x => lexer_2.track(x, { type: 'value', value: unwrap(x) }) },
            { "name": "simplestatements_set_val_raw$subexpression$2", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)] },
            { "name": "simplestatements_set_val_raw$subexpression$2", "symbols": [(lexer_1.lexerAny.has("kw_on") ? { type: "kw_on" } : kw_on)] },
            { "name": "simplestatements_set_val_raw$subexpression$2", "symbols": [(lexer_1.lexerAny.has("kw_true") ? { type: "kw_true" } : kw_true)] },
            { "name": "simplestatements_set_val_raw$subexpression$2", "symbols": [(lexer_1.lexerAny.has("kw_false") ? { type: "kw_false" } : kw_false)] },
            { "name": "simplestatements_set_val_raw", "symbols": ["simplestatements_set_val_raw$subexpression$2"], "postprocess": x => lexer_2.track(x, { type: 'identifier', name: unwrap(x).value }) },
            { "name": "simplestatements_show", "symbols": ["kw_show", "ident"], "postprocess": x => lexer_2.track(x, { type: 'show', variable: asName(x[1]) }) },
            { "name": "create_schema$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_create") ? { type: "kw_create" } : kw_create), "kw_schema"] },
            { "name": "create_schema$ebnf$1", "symbols": ["kw_ifnotexists"], "postprocess": id },
            { "name": "create_schema$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "create_schema", "symbols": ["create_schema$subexpression$1", "create_schema$ebnf$1", "ident"], "postprocess": x => lexer_2.track(x, {
                    type: 'create schema',
                    name: asName(x[2]),
                    ...!!x[1] ? { ifNotExists: true } : {},
                }) },
            { "name": "raise_statement$ebnf$1$subexpression$1", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": anyKw('debug', 'log', 'info', 'notice', 'warning', 'exception') },
            { "name": "raise_statement$ebnf$1", "symbols": ["raise_statement$ebnf$1$subexpression$1"], "postprocess": id },
            { "name": "raise_statement$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "raise_statement$ebnf$2$subexpression$1", "symbols": ["comma", "expr_list_raw"], "postprocess": last },
            { "name": "raise_statement$ebnf$2", "symbols": ["raise_statement$ebnf$2$subexpression$1"], "postprocess": id },
            { "name": "raise_statement$ebnf$2", "symbols": [], "postprocess": () => null },
            { "name": "raise_statement$ebnf$3", "symbols": ["raise_using"], "postprocess": id },
            { "name": "raise_statement$ebnf$3", "symbols": [], "postprocess": () => null },
            { "name": "raise_statement", "symbols": ["kw_raise", "raise_statement$ebnf$1", "string", "raise_statement$ebnf$2", "raise_statement$ebnf$3"], "postprocess": x => lexer_2.track(x, {
                    type: 'raise',
                    format: toStr(x[2]),
                    ...x[1] && { level: toStr(x[1]) },
                    ...x[3] && x[3].length && { formatExprs: x[3] },
                    ...x[4] && x[4].length && { using: x[4] },
                }) },
            { "name": "raise_using$macrocall$2", "symbols": ["raise_using_one"] },
            { "name": "raise_using$macrocall$1$ebnf$1", "symbols": [] },
            { "name": "raise_using$macrocall$1$ebnf$1$subexpression$1", "symbols": [(lexer_1.lexerAny.has("comma") ? { type: "comma" } : comma), "raise_using$macrocall$2"], "postprocess": last },
            { "name": "raise_using$macrocall$1$ebnf$1", "symbols": ["raise_using$macrocall$1$ebnf$1", "raise_using$macrocall$1$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "raise_using$macrocall$1", "symbols": ["raise_using$macrocall$2", "raise_using$macrocall$1$ebnf$1"], "postprocess": ([head, tail]) => {
                    return [unwrap(head), ...(tail.map(unwrap) || [])];
                } },
            { "name": "raise_using", "symbols": [(lexer_1.lexerAny.has("kw_using") ? { type: "kw_using" } : kw_using), "raise_using$macrocall$1"], "postprocess": last },
            { "name": "raise_using_one", "symbols": ["raise_using_what", (lexer_1.lexerAny.has("op_eq") ? { type: "op_eq" } : op_eq), "expr"], "postprocess": x => lexer_2.track(x, {
                    type: toStr(x[0]),
                    value: x[2],
                }) },
            { "name": "raise_using_what", "symbols": [(lexer_1.lexerAny.has("kw_table") ? { type: "kw_table" } : kw_table)] },
            { "name": "raise_using_what", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": anyKw('message', 'detail', 'hint', 'errcode', 'column', 'constraint', 'datatype', 'schema') },
            { "name": "comment_statement", "symbols": ["kw_comment", (lexer_1.lexerAny.has("kw_on") ? { type: "kw_on" } : kw_on), "comment_what", (lexer_1.lexerAny.has("kw_is") ? { type: "kw_is" } : kw_is), "string"], "postprocess": x => lexer_2.track(x, {
                    type: 'comment',
                    comment: lexer_2.unbox(last(x)),
                    on: unwrap(x[2]),
                }) },
            { "name": "comment_what", "symbols": ["comment_what_col"] },
            { "name": "comment_what", "symbols": ["comment_what_nm"] },
            { "name": "comment_what_nm$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_table") ? { type: "kw_table" } : kw_table)] },
            { "name": "comment_what_nm$subexpression$1", "symbols": ["kw_materialized", "kw_view"] },
            { "name": "comment_what_nm$subexpression$1", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": anyKw('database', 'index', 'trigger', 'type', 'view') },
            { "name": "comment_what_nm", "symbols": ["comment_what_nm$subexpression$1", "qualified_name"], "postprocess": x => lexer_2.track(x, {
                    type: toStr(x[0]),
                    name: x[1],
                }) },
            { "name": "comment_what_col", "symbols": [(lexer_1.lexerAny.has("kw_column") ? { type: "kw_column" } : kw_column), "qcolumn"], "postprocess": x => lexer_2.track(x, {
                    type: 'column',
                    column: last(x),
                }) },
            { "name": "simplestatements_begin$ebnf$1$subexpression$1", "symbols": ["kw_transaction"] },
            { "name": "simplestatements_begin$ebnf$1$subexpression$1", "symbols": ["kw_work"] },
            { "name": "simplestatements_begin$ebnf$1", "symbols": ["simplestatements_begin$ebnf$1$subexpression$1"], "postprocess": id },
            { "name": "simplestatements_begin$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "simplestatements_begin$ebnf$2", "symbols": [] },
            { "name": "simplestatements_begin$ebnf$2$subexpression$1", "symbols": ["simplestatements_begin_isol"] },
            { "name": "simplestatements_begin$ebnf$2$subexpression$1", "symbols": ["simplestatements_begin_writ"] },
            { "name": "simplestatements_begin$ebnf$2$subexpression$1", "symbols": ["simplestatements_begin_def"] },
            { "name": "simplestatements_begin$ebnf$2", "symbols": ["simplestatements_begin$ebnf$2", "simplestatements_begin$ebnf$2$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "simplestatements_begin", "symbols": ["kw_begin", "simplestatements_begin$ebnf$1", "simplestatements_begin$ebnf$2"], "postprocess": x => lexer_2.track(x, {
                    type: 'begin',
                    ...x[2].reduce((a, b) => ({ ...unwrap(a), ...unwrap(b) }), {}),
                })
            },
            { "name": "simplestatements_begin_isol$subexpression$1", "symbols": ["kw_isolation", "kw_level"] },
            { "name": "simplestatements_begin_isol$subexpression$2", "symbols": ["kw_serializable"] },
            { "name": "simplestatements_begin_isol$subexpression$2$subexpression$1", "symbols": ["word"], "postprocess": kw('repeatable') },
            { "name": "simplestatements_begin_isol$subexpression$2", "symbols": ["simplestatements_begin_isol$subexpression$2$subexpression$1", "kw_read"] },
            { "name": "simplestatements_begin_isol$subexpression$2$subexpression$2", "symbols": ["word"], "postprocess": kw('committed') },
            { "name": "simplestatements_begin_isol$subexpression$2", "symbols": ["kw_read", "simplestatements_begin_isol$subexpression$2$subexpression$2"] },
            { "name": "simplestatements_begin_isol$subexpression$2$subexpression$3", "symbols": ["word"], "postprocess": kw('uncommitted') },
            { "name": "simplestatements_begin_isol$subexpression$2", "symbols": ["kw_read", "simplestatements_begin_isol$subexpression$2$subexpression$3"] },
            { "name": "simplestatements_begin_isol", "symbols": ["simplestatements_begin_isol$subexpression$1", "simplestatements_begin_isol$subexpression$2"], "postprocess": x => lexer_2.track(x, {
                    isolationLevel: toStr(x[1], ' '),
                }) },
            { "name": "simplestatements_begin_writ$subexpression$1", "symbols": ["kw_read", "kw_write"] },
            { "name": "simplestatements_begin_writ$subexpression$1", "symbols": ["kw_read", (lexer_1.lexerAny.has("kw_only") ? { type: "kw_only" } : kw_only)] },
            { "name": "simplestatements_begin_writ", "symbols": ["simplestatements_begin_writ$subexpression$1"], "postprocess": x => lexer_2.track(x, {
                    writeable: toStr(x, ' '),
                }) },
            { "name": "simplestatements_begin_def$ebnf$1", "symbols": [(lexer_1.lexerAny.has("kw_not") ? { type: "kw_not" } : kw_not)], "postprocess": id },
            { "name": "simplestatements_begin_def$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "simplestatements_begin_def", "symbols": ["simplestatements_begin_def$ebnf$1", (lexer_1.lexerAny.has("kw_deferrable") ? { type: "kw_deferrable" } : kw_deferrable)], "postprocess": x => lexer_2.track(x, {
                    deferrable: !x[0]
                }) },
            { "name": "insert_statement$subexpression$1", "symbols": ["kw_insert", (lexer_1.lexerAny.has("kw_into") ? { type: "kw_into" } : kw_into)] },
            { "name": "insert_statement$ebnf$1", "symbols": ["collist_paren"], "postprocess": id },
            { "name": "insert_statement$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "insert_statement$ebnf$2$subexpression$1$subexpression$1", "symbols": ["kw_system"] },
            { "name": "insert_statement$ebnf$2$subexpression$1$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_user") ? { type: "kw_user" } : kw_user)] },
            { "name": "insert_statement$ebnf$2$subexpression$1", "symbols": ["kw_overriding", "insert_statement$ebnf$2$subexpression$1$subexpression$1", "kw_value"], "postprocess": get(1) },
            { "name": "insert_statement$ebnf$2", "symbols": ["insert_statement$ebnf$2$subexpression$1"], "postprocess": id },
            { "name": "insert_statement$ebnf$2", "symbols": [], "postprocess": () => null },
            { "name": "insert_statement$ebnf$3$subexpression$1", "symbols": ["selection"] },
            { "name": "insert_statement$ebnf$3$subexpression$1", "symbols": ["selection_paren"] },
            { "name": "insert_statement$ebnf$3", "symbols": ["insert_statement$ebnf$3$subexpression$1"], "postprocess": id },
            { "name": "insert_statement$ebnf$3", "symbols": [], "postprocess": () => null },
            { "name": "insert_statement$ebnf$4$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_on") ? { type: "kw_on" } : kw_on), "kw_conflict", "insert_on_conflict"], "postprocess": last },
            { "name": "insert_statement$ebnf$4", "symbols": ["insert_statement$ebnf$4$subexpression$1"], "postprocess": id },
            { "name": "insert_statement$ebnf$4", "symbols": [], "postprocess": () => null },
            { "name": "insert_statement$ebnf$5$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_returning") ? { type: "kw_returning" } : kw_returning), "select_expr_list_aliased"], "postprocess": last },
            { "name": "insert_statement$ebnf$5", "symbols": ["insert_statement$ebnf$5$subexpression$1"], "postprocess": id },
            { "name": "insert_statement$ebnf$5", "symbols": [], "postprocess": () => null },
            { "name": "insert_statement", "symbols": ["insert_statement$subexpression$1", "table_ref_aliased", "insert_statement$ebnf$1", "insert_statement$ebnf$2", "insert_statement$ebnf$3", "insert_statement$ebnf$4", "insert_statement$ebnf$5"], "postprocess": x => {
                    const columns = x[2] && x[2].map(asName);
                    const overriding = toStr(x[3]);
                    const insert = unwrap(x[4]);
                    const onConflict = x[5];
                    const returning = x[6];
                    return lexer_2.track(x, {
                        type: 'insert',
                        into: unwrap(x[1]),
                        insert,
                        ...overriding && { overriding },
                        ...columns && { columns },
                        ...returning && { returning },
                        ...onConflict && { onConflict },
                    });
                } },
            { "name": "insert_values$ebnf$1", "symbols": [] },
            { "name": "insert_values$ebnf$1$subexpression$1", "symbols": ["comma", "insert_value"], "postprocess": last },
            { "name": "insert_values$ebnf$1", "symbols": ["insert_values$ebnf$1", "insert_values$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "insert_values", "symbols": ["insert_value", "insert_values$ebnf$1"], "postprocess": ([head, tail]) => {
                    return [head, ...(tail || [])];
                } },
            { "name": "insert_value", "symbols": ["lparen", "insert_expr_list_raw", "rparen"], "postprocess": get(1) },
            { "name": "insert_expr_list_raw$ebnf$1", "symbols": [] },
            { "name": "insert_expr_list_raw$ebnf$1$subexpression$1", "symbols": ["comma", "expr_or_select"], "postprocess": last },
            { "name": "insert_expr_list_raw$ebnf$1", "symbols": ["insert_expr_list_raw$ebnf$1", "insert_expr_list_raw$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "insert_expr_list_raw", "symbols": ["expr_or_select", "insert_expr_list_raw$ebnf$1"], "postprocess": ([head, tail]) => {
                    return [head, ...(tail || [])];
                } },
            { "name": "insert_on_conflict$ebnf$1", "symbols": ["insert_on_conflict_what"], "postprocess": id },
            { "name": "insert_on_conflict$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "insert_on_conflict", "symbols": ["insert_on_conflict$ebnf$1", "insert_on_conflict_do"], "postprocess": x => lexer_2.track(x, {
                    ...x[0] ? { on: x[0][0] } : {},
                    do: lexer_2.unbox(x[1]),
                }) },
            { "name": "insert_on_conflict_what$subexpression$1", "symbols": ["lparen", "expr_list_raw", "rparen"], "postprocess": get(1) },
            { "name": "insert_on_conflict_what", "symbols": ["insert_on_conflict_what$subexpression$1"] },
            { "name": "insert_on_conflict_do", "symbols": [(lexer_1.lexerAny.has("kw_do") ? { type: "kw_do" } : kw_do), "kw_nothing"], "postprocess": x => lexer_2.box(x, 'do nothing') },
            { "name": "insert_on_conflict_do", "symbols": [(lexer_1.lexerAny.has("kw_do") ? { type: "kw_do" } : kw_do), "kw_update", "kw_set", "update_set_list"], "postprocess": x => lexer_2.box(x, { sets: last(x) }) },
            { "name": "update_statement$ebnf$1", "symbols": ["select_where"], "postprocess": id },
            { "name": "update_statement$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "update_statement$ebnf$2$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_returning") ? { type: "kw_returning" } : kw_returning), "select_expr_list_aliased"], "postprocess": last },
            { "name": "update_statement$ebnf$2", "symbols": ["update_statement$ebnf$2$subexpression$1"], "postprocess": id },
            { "name": "update_statement$ebnf$2", "symbols": [], "postprocess": () => null },
            { "name": "update_statement", "symbols": ["kw_update", "table_ref_aliased", "kw_set", "update_set_list", "update_statement$ebnf$1", "update_statement$ebnf$2"], "postprocess": x => {
                    const where = unwrap(x[4]);
                    const returning = x[5];
                    return lexer_2.track(x, {
                        type: 'update',
                        table: unwrap(x[1]),
                        sets: x[3],
                        ...where ? { where } : {},
                        ...returning ? { returning } : {},
                    });
                } },
            { "name": "update_set_list$ebnf$1", "symbols": [] },
            { "name": "update_set_list$ebnf$1$subexpression$1", "symbols": ["comma", "update_set"], "postprocess": last },
            { "name": "update_set_list$ebnf$1", "symbols": ["update_set_list$ebnf$1", "update_set_list$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "update_set_list", "symbols": ["update_set", "update_set_list$ebnf$1"], "postprocess": ([head, tail]) => {
                    const ret = [];
                    for (const _t of [head, ...(tail || [])]) {
                        const t = unwrap(_t);
                        if (Array.isArray(t)) {
                            ret.push(...t);
                        }
                        else {
                            ret.push(t);
                        }
                    }
                    return ret;
                } },
            { "name": "update_set", "symbols": ["update_set_one"] },
            { "name": "update_set", "symbols": ["update_set_multiple"] },
            { "name": "update_set_one$subexpression$1", "symbols": ["expr"] },
            { "name": "update_set_one$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_default") ? { type: "kw_default" } : kw_default)], "postprocess": value },
            { "name": "update_set_one", "symbols": ["ident", (lexer_1.lexerAny.has("op_eq") ? { type: "op_eq" } : op_eq), "update_set_one$subexpression$1"], "postprocess": x => lexer_2.box(x, {
                    column: asName(x[0]),
                    value: unwrap(x[2]),
                }) },
            { "name": "update_set_multiple$subexpression$1", "symbols": ["lparen", "expr_list_raw", "rparen"], "postprocess": get(1) },
            { "name": "update_set_multiple", "symbols": ["collist_paren", (lexer_1.lexerAny.has("op_eq") ? { type: "op_eq" } : op_eq), "update_set_multiple$subexpression$1"], "postprocess": x => {
                    const cols = x[0];
                    const exprs = x[2];
                    if (cols.length !== exprs.length) {
                        throw new Error('number of columns does not match number of values');
                    }
                    return lexer_2.box(x, cols.map((x, i) => ({
                        column: asName(x),
                        value: unwrap(exprs[i]),
                    })));
                } },
            { "name": "altertable_statement$ebnf$1", "symbols": ["kw_ifexists"], "postprocess": id },
            { "name": "altertable_statement$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "altertable_statement$ebnf$2", "symbols": [(lexer_1.lexerAny.has("kw_only") ? { type: "kw_only" } : kw_only)], "postprocess": id },
            { "name": "altertable_statement$ebnf$2", "symbols": [], "postprocess": () => null },
            { "name": "altertable_statement", "symbols": ["kw_alter", (lexer_1.lexerAny.has("kw_table") ? { type: "kw_table" } : kw_table), "altertable_statement$ebnf$1", "altertable_statement$ebnf$2", "table_ref", "altertable_action"], "postprocess": x => lexer_2.track(x, {
                    type: 'alter table',
                    ...x[2] ? { ifExists: true } : {},
                    ...x[3] ? { only: true } : {},
                    table: unwrap(x[4]),
                    change: unwrap(x[5]),
                }) },
            { "name": "altertable_action", "symbols": ["altertable_rename_table"] },
            { "name": "altertable_action", "symbols": ["altertable_rename_column"] },
            { "name": "altertable_action", "symbols": ["altertable_rename_constraint"] },
            { "name": "altertable_action", "symbols": ["altertable_add_column"] },
            { "name": "altertable_action", "symbols": ["altertable_drop_column"] },
            { "name": "altertable_action", "symbols": ["altertable_alter_column"] },
            { "name": "altertable_action", "symbols": ["altertable_add_constraint"] },
            { "name": "altertable_action", "symbols": ["altertable_owner"] },
            { "name": "altertable_rename_table", "symbols": ["kw_rename", (lexer_1.lexerAny.has("kw_to") ? { type: "kw_to" } : kw_to), "word"], "postprocess": x => lexer_2.track(x, {
                    type: 'rename',
                    to: asName(last(x)),
                }) },
            { "name": "altertable_rename_column$ebnf$1", "symbols": [(lexer_1.lexerAny.has("kw_column") ? { type: "kw_column" } : kw_column)], "postprocess": id },
            { "name": "altertable_rename_column$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "altertable_rename_column", "symbols": ["kw_rename", "altertable_rename_column$ebnf$1", "ident", (lexer_1.lexerAny.has("kw_to") ? { type: "kw_to" } : kw_to), "ident"], "postprocess": x => lexer_2.track(x, {
                    type: 'rename column',
                    column: asName(x[2]),
                    to: asName(last(x)),
                }) },
            { "name": "altertable_rename_constraint", "symbols": ["kw_rename", (lexer_1.lexerAny.has("kw_constraint") ? { type: "kw_constraint" } : kw_constraint), "ident", (lexer_1.lexerAny.has("kw_to") ? { type: "kw_to" } : kw_to), "ident"], "postprocess": x => lexer_2.track(x, {
                    type: 'rename constraint',
                    constraint: asName(x[2]),
                    to: asName(last(x)),
                }) },
            { "name": "altertable_add_column$ebnf$1", "symbols": [(lexer_1.lexerAny.has("kw_column") ? { type: "kw_column" } : kw_column)], "postprocess": id },
            { "name": "altertable_add_column$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "altertable_add_column$ebnf$2", "symbols": ["kw_ifnotexists"], "postprocess": id },
            { "name": "altertable_add_column$ebnf$2", "symbols": [], "postprocess": () => null },
            { "name": "altertable_add_column", "symbols": ["kw_add", "altertable_add_column$ebnf$1", "altertable_add_column$ebnf$2", "createtable_column"], "postprocess": x => lexer_2.track(x, {
                    type: 'add column',
                    ...x[2] ? { ifNotExists: true } : {},
                    column: unwrap(x[3]),
                }) },
            { "name": "altertable_drop_column$ebnf$1", "symbols": [(lexer_1.lexerAny.has("kw_column") ? { type: "kw_column" } : kw_column)], "postprocess": id },
            { "name": "altertable_drop_column$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "altertable_drop_column$ebnf$2", "symbols": ["kw_ifexists"], "postprocess": id },
            { "name": "altertable_drop_column$ebnf$2", "symbols": [], "postprocess": () => null },
            { "name": "altertable_drop_column", "symbols": ["kw_drop", "altertable_drop_column$ebnf$1", "altertable_drop_column$ebnf$2", "ident"], "postprocess": x => lexer_2.track(x, {
                    type: 'drop column',
                    ...x[2] ? { ifExists: true } : {},
                    column: asName(x[3]),
                }) },
            { "name": "altertable_alter_column$ebnf$1", "symbols": [(lexer_1.lexerAny.has("kw_column") ? { type: "kw_column" } : kw_column)], "postprocess": id },
            { "name": "altertable_alter_column$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "altertable_alter_column", "symbols": ["kw_alter", "altertable_alter_column$ebnf$1", "ident", "altercol"], "postprocess": x => lexer_2.track(x, {
                    type: 'alter column',
                    column: asName(x[2]),
                    alter: unwrap(x[3])
                }) },
            { "name": "altercol$ebnf$1$subexpression$1", "symbols": ["kw_set", "kw_data"] },
            { "name": "altercol$ebnf$1", "symbols": ["altercol$ebnf$1$subexpression$1"], "postprocess": id },
            { "name": "altercol$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "altercol", "symbols": ["altercol$ebnf$1", "kw_type", "data_type"], "postprocess": x => lexer_2.track(x, { type: 'set type', dataType: unwrap(last(x)) }) },
            { "name": "altercol", "symbols": ["kw_set", (lexer_1.lexerAny.has("kw_default") ? { type: "kw_default" } : kw_default), "expr"], "postprocess": x => lexer_2.track(x, { type: 'set default', default: unwrap(last(x)) }) },
            { "name": "altercol", "symbols": ["kw_drop", (lexer_1.lexerAny.has("kw_default") ? { type: "kw_default" } : kw_default)], "postprocess": x => lexer_2.track(x, { type: 'drop default' }) },
            { "name": "altercol$subexpression$1", "symbols": ["kw_set"] },
            { "name": "altercol$subexpression$1", "symbols": ["kw_drop"] },
            { "name": "altercol", "symbols": ["altercol$subexpression$1", "kw_not_null"], "postprocess": x => lexer_2.track(x, { type: toStr(x, ' ') }) },
            { "name": "altercol", "symbols": ["altercol_generated_add"], "postprocess": unwrap },
            { "name": "altertable_add_constraint", "symbols": ["kw_add", "createtable_constraint"], "postprocess": x => lexer_2.track(x, {
                    type: 'add constraint',
                    constraint: unwrap(last(x)),
                }) },
            { "name": "altertable_owner", "symbols": ["kw_owner", (lexer_1.lexerAny.has("kw_to") ? { type: "kw_to" } : kw_to), "ident"], "postprocess": x => lexer_2.track(x, {
                    type: 'owner',
                    to: asName(last(x)),
                }) },
            { "name": "altercol_generated_add", "symbols": ["kw_add", "altercol_generated"], "postprocess": last },
            { "name": "altercol_generated$ebnf$1$subexpression$1", "symbols": ["kw_always"] },
            { "name": "altercol_generated$ebnf$1$subexpression$1", "symbols": ["kw_by", (lexer_1.lexerAny.has("kw_default") ? { type: "kw_default" } : kw_default)] },
            { "name": "altercol_generated$ebnf$1", "symbols": ["altercol_generated$ebnf$1$subexpression$1"], "postprocess": id },
            { "name": "altercol_generated$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "altercol_generated$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_as") ? { type: "kw_as" } : kw_as), "kw_identity"] },
            { "name": "altercol_generated$ebnf$2$subexpression$1", "symbols": ["lparen", "altercol_generated_seq", "rparen"], "postprocess": get(1) },
            { "name": "altercol_generated$ebnf$2", "symbols": ["altercol_generated$ebnf$2$subexpression$1"], "postprocess": id },
            { "name": "altercol_generated$ebnf$2", "symbols": [], "postprocess": () => null },
            { "name": "altercol_generated", "symbols": ["kw_generated", "altercol_generated$ebnf$1", "altercol_generated$subexpression$1", "altercol_generated$ebnf$2"], "postprocess": x => lexer_2.track(x, {
                    type: 'add generated',
                    ...x[1] && { always: toStr(x[1], ' ') },
                    ...x[3] && { sequence: unwrap(x[3]) },
                }) },
            { "name": "altercol_generated_seq$ebnf$1$subexpression$1", "symbols": ["kw_sequence", "kw_name", "qualified_name"] },
            { "name": "altercol_generated_seq$ebnf$1", "symbols": ["altercol_generated_seq$ebnf$1$subexpression$1"], "postprocess": id },
            { "name": "altercol_generated_seq$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "altercol_generated_seq$ebnf$2", "symbols": [] },
            { "name": "altercol_generated_seq$ebnf$2", "symbols": ["altercol_generated_seq$ebnf$2", "create_sequence_option"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "altercol_generated_seq", "symbols": ["altercol_generated_seq$ebnf$1", "altercol_generated_seq$ebnf$2"], "postprocess": x => {
                    const ret = {
                        ...x[0] && { name: unwrap(last(x[0])) },
                    };
                    setSeqOpts(ret, x[1]);
                    return lexer_2.track(x, ret);
                } },
            { "name": "delete_statement", "symbols": ["delete_delete"] },
            { "name": "delete_statement", "symbols": ["delete_truncate"] },
            { "name": "delete_delete$subexpression$1", "symbols": ["kw_delete", (lexer_1.lexerAny.has("kw_from") ? { type: "kw_from" } : kw_from)] },
            { "name": "delete_delete$ebnf$1", "symbols": ["select_where"], "postprocess": id },
            { "name": "delete_delete$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "delete_delete$ebnf$2$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_returning") ? { type: "kw_returning" } : kw_returning), "select_expr_list_aliased"], "postprocess": last },
            { "name": "delete_delete$ebnf$2", "symbols": ["delete_delete$ebnf$2$subexpression$1"], "postprocess": id },
            { "name": "delete_delete$ebnf$2", "symbols": [], "postprocess": () => null },
            { "name": "delete_delete", "symbols": ["delete_delete$subexpression$1", "table_ref_aliased", "delete_delete$ebnf$1", "delete_delete$ebnf$2"], "postprocess": x => {
                    const where = x[2];
                    const returning = x[3];
                    return lexer_2.track(x, {
                        type: 'delete',
                        from: unwrap(x[1]),
                        ...where ? { where } : {},
                        ...returning ? { returning } : {},
                    });
                } },
            { "name": "delete_truncate$subexpression$1$ebnf$1", "symbols": [(lexer_1.lexerAny.has("kw_table") ? { type: "kw_table" } : kw_table)], "postprocess": id },
            { "name": "delete_truncate$subexpression$1$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "delete_truncate$subexpression$1", "symbols": ["kw_truncate", "delete_truncate$subexpression$1$ebnf$1"] },
            { "name": "delete_truncate$macrocall$2", "symbols": ["table_ref"] },
            { "name": "delete_truncate$macrocall$1$ebnf$1", "symbols": [] },
            { "name": "delete_truncate$macrocall$1$ebnf$1$subexpression$1", "symbols": [(lexer_1.lexerAny.has("comma") ? { type: "comma" } : comma), "delete_truncate$macrocall$2"], "postprocess": last },
            { "name": "delete_truncate$macrocall$1$ebnf$1", "symbols": ["delete_truncate$macrocall$1$ebnf$1", "delete_truncate$macrocall$1$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "delete_truncate$macrocall$1", "symbols": ["delete_truncate$macrocall$2", "delete_truncate$macrocall$1$ebnf$1"], "postprocess": ([head, tail]) => {
                    return [unwrap(head), ...(tail.map(unwrap) || [])];
                } },
            { "name": "delete_truncate$ebnf$1$subexpression$1$subexpression$1", "symbols": ["kw_restart"] },
            { "name": "delete_truncate$ebnf$1$subexpression$1$subexpression$1", "symbols": ["kw_continue"] },
            { "name": "delete_truncate$ebnf$1$subexpression$1", "symbols": ["delete_truncate$ebnf$1$subexpression$1$subexpression$1", "kw_identity"] },
            { "name": "delete_truncate$ebnf$1", "symbols": ["delete_truncate$ebnf$1$subexpression$1"], "postprocess": id },
            { "name": "delete_truncate$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "delete_truncate", "symbols": ["delete_truncate$subexpression$1", "delete_truncate$macrocall$1", "delete_truncate$ebnf$1"], "postprocess": x => lexer_2.track(x, {
                    type: 'truncate table',
                    tables: x[1],
                    ...x[2] && { identity: toStr(x[2][0]) }
                }) },
            { "name": "create_sequence_statement$ebnf$1$subexpression$1", "symbols": ["kw_temp"] },
            { "name": "create_sequence_statement$ebnf$1$subexpression$1", "symbols": ["kw_temporary"] },
            { "name": "create_sequence_statement$ebnf$1", "symbols": ["create_sequence_statement$ebnf$1$subexpression$1"], "postprocess": id },
            { "name": "create_sequence_statement$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "create_sequence_statement$ebnf$2", "symbols": ["kw_ifnotexists"], "postprocess": id },
            { "name": "create_sequence_statement$ebnf$2", "symbols": [], "postprocess": () => null },
            { "name": "create_sequence_statement$ebnf$3", "symbols": [] },
            { "name": "create_sequence_statement$ebnf$3", "symbols": ["create_sequence_statement$ebnf$3", "create_sequence_option"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "create_sequence_statement", "symbols": [(lexer_1.lexerAny.has("kw_create") ? { type: "kw_create" } : kw_create), "create_sequence_statement$ebnf$1", "kw_sequence", "create_sequence_statement$ebnf$2", "qualified_name", "create_sequence_statement$ebnf$3"], "postprocess": x => {
                    const ret = {
                        type: 'create sequence',
                        ...x[1] && { temp: true },
                        ...x[3] && { ifNotExists: true },
                        name: unwrap(x[4]),
                        options: {},
                    };
                    setSeqOpts(ret.options, x[5]);
                    return lexer_2.track(x, ret);
                } },
            { "name": "create_sequence_option", "symbols": [(lexer_1.lexerAny.has("kw_as") ? { type: "kw_as" } : kw_as), "data_type"], "postprocess": x => lexer_2.box(x, ['as', x[1]]) },
            { "name": "create_sequence_option$ebnf$1", "symbols": ["kw_by"], "postprocess": id },
            { "name": "create_sequence_option$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "create_sequence_option", "symbols": ["kw_increment", "create_sequence_option$ebnf$1", "int"], "postprocess": x => lexer_2.box(x, ['incrementBy', x[2]]) },
            { "name": "create_sequence_option", "symbols": ["create_sequence_minvalue"], "postprocess": x => lexer_2.box(x, ['minValue', x[0]]) },
            { "name": "create_sequence_option", "symbols": ["create_sequence_maxvalue"], "postprocess": x => lexer_2.box(x, ['maxValue', x[0]]) },
            { "name": "create_sequence_option$ebnf$2", "symbols": [(lexer_1.lexerAny.has("kw_with") ? { type: "kw_with" } : kw_with)], "postprocess": id },
            { "name": "create_sequence_option$ebnf$2", "symbols": [], "postprocess": () => null },
            { "name": "create_sequence_option", "symbols": ["kw_start", "create_sequence_option$ebnf$2", "int"], "postprocess": x => lexer_2.box(x, ['startWith', x[2]]) },
            { "name": "create_sequence_option", "symbols": ["kw_cache", "int"], "postprocess": x => lexer_2.box(x, ['cache', x[1]]) },
            { "name": "create_sequence_option$ebnf$3", "symbols": ["kw_no"], "postprocess": id },
            { "name": "create_sequence_option$ebnf$3", "symbols": [], "postprocess": () => null },
            { "name": "create_sequence_option", "symbols": ["create_sequence_option$ebnf$3", "kw_cycle"], "postprocess": x => lexer_2.box(x, ['cycle', toStr(x, ' ')]) },
            { "name": "create_sequence_option", "symbols": ["create_sequence_owned_by"], "postprocess": x => lexer_2.box(x, ['ownedBy', unwrap(x)]) },
            { "name": "create_sequence_minvalue", "symbols": ["kw_minvalue", "int"], "postprocess": last },
            { "name": "create_sequence_minvalue", "symbols": ["kw_no", "kw_minvalue"], "postprocess": x => lexer_2.box(x, 'no minvalue') },
            { "name": "create_sequence_maxvalue", "symbols": ["kw_maxvalue", "int"], "postprocess": last },
            { "name": "create_sequence_maxvalue", "symbols": ["kw_no", "kw_maxvalue"], "postprocess": x => lexer_2.box(x, 'no maxvalue') },
            { "name": "create_sequence_owned_by$subexpression$1", "symbols": ["kw_none"] },
            { "name": "create_sequence_owned_by$subexpression$1", "symbols": ["qcolumn"] },
            { "name": "create_sequence_owned_by", "symbols": ["kw_owned", "kw_by", "create_sequence_owned_by$subexpression$1"], "postprocess": x => lexer_2.box(x, unwrap(last(x))) },
            { "name": "alter_sequence_statement$ebnf$1", "symbols": ["kw_ifexists"], "postprocess": id },
            { "name": "alter_sequence_statement$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "alter_sequence_statement", "symbols": ["kw_alter", "kw_sequence", "alter_sequence_statement$ebnf$1", "qualified_name", "alter_sequence_statement_body"], "postprocess": x => {
                    const ret = {
                        type: 'alter sequence',
                        ...x[2] && { ifExists: true },
                        name: unwrap(x[3]),
                        change: x[4],
                    };
                    return lexer_2.track(x, ret);
                } },
            { "name": "alter_sequence_statement_body$ebnf$1", "symbols": ["alter_sequence_option"] },
            { "name": "alter_sequence_statement_body$ebnf$1", "symbols": ["alter_sequence_statement_body$ebnf$1", "alter_sequence_option"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "alter_sequence_statement_body", "symbols": ["alter_sequence_statement_body$ebnf$1"], "postprocess": x => {
                    const ret = {
                        type: 'set options',
                    };
                    setSeqOpts(ret, x[0]);
                    return lexer_2.track(x, ret);
                } },
            { "name": "alter_sequence_statement_body$subexpression$1", "symbols": ["ident"] },
            { "name": "alter_sequence_statement_body$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_session_user") ? { type: "kw_session_user" } : kw_session_user)] },
            { "name": "alter_sequence_statement_body$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_current_user") ? { type: "kw_current_user" } : kw_current_user)] },
            { "name": "alter_sequence_statement_body", "symbols": ["kw_owner", (lexer_1.lexerAny.has("kw_to") ? { type: "kw_to" } : kw_to), "alter_sequence_statement_body$subexpression$1"], "postprocess": x => lexer_2.track(x, { type: 'owner to', owner: asName(last(x)), }) },
            { "name": "alter_sequence_statement_body", "symbols": ["kw_rename", (lexer_1.lexerAny.has("kw_to") ? { type: "kw_to" } : kw_to), "ident"], "postprocess": x => lexer_2.track(x, { type: 'rename', newName: asName(last(x)) }) },
            { "name": "alter_sequence_statement_body", "symbols": ["kw_set", "kw_schema", "ident"], "postprocess": x => lexer_2.track(x, { type: 'set schema', newSchema: asName(last(x)) }) },
            { "name": "alter_sequence_option", "symbols": ["create_sequence_option"], "postprocess": unwrap },
            { "name": "alter_sequence_option$ebnf$1$subexpression$1$ebnf$1", "symbols": [(lexer_1.lexerAny.has("kw_with") ? { type: "kw_with" } : kw_with)], "postprocess": id },
            { "name": "alter_sequence_option$ebnf$1$subexpression$1$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "alter_sequence_option$ebnf$1$subexpression$1", "symbols": ["alter_sequence_option$ebnf$1$subexpression$1$ebnf$1", "int"], "postprocess": last },
            { "name": "alter_sequence_option$ebnf$1", "symbols": ["alter_sequence_option$ebnf$1$subexpression$1"], "postprocess": id },
            { "name": "alter_sequence_option$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "alter_sequence_option", "symbols": ["kw_restart", "alter_sequence_option$ebnf$1"], "postprocess": x => lexer_2.box(x, ['restart', typeof lexer_2.unbox(x[1]) === 'number' ? lexer_2.unbox(x[1]) : true]) },
            { "name": "drop_statement$ebnf$1", "symbols": ["kw_ifexists"], "postprocess": id },
            { "name": "drop_statement$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "drop_statement", "symbols": ["kw_drop", "drop_what", "drop_statement$ebnf$1", "qualified_name"], "postprocess": (x, rej) => {
                    const v = unwrap(x[1]);
                    return lexer_2.track(x, {
                        ...v,
                        ...x[2] && { ifExists: true },
                        name: unwrap(x[3]),
                    });
                } },
            { "name": "drop_what", "symbols": [(lexer_1.lexerAny.has("kw_table") ? { type: "kw_table" } : kw_table)], "postprocess": x => lexer_2.track(x, { type: 'drop table' }) },
            { "name": "drop_what", "symbols": ["kw_sequence"], "postprocess": x => lexer_2.track(x, { type: 'drop sequence' }) },
            { "name": "drop_what$ebnf$1", "symbols": [(lexer_1.lexerAny.has("kw_concurrently") ? { type: "kw_concurrently" } : kw_concurrently)], "postprocess": id },
            { "name": "drop_what$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "drop_what", "symbols": ["kw_index", "drop_what$ebnf$1"], "postprocess": x => lexer_2.track(x, {
                    type: 'drop index',
                    ...x[1] && { concurrently: true },
                }) },
            { "name": "with_statement", "symbols": [(lexer_1.lexerAny.has("kw_with") ? { type: "kw_with" } : kw_with), "with_statement_bindings", "with_statement_statement"], "postprocess": x => lexer_2.track(x, {
                    type: 'with',
                    bind: x[1],
                    in: unwrap(x[2]),
                }) },
            { "name": "with_recursive_statement$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_with") ? { type: "kw_with" } : kw_with), "kw_recursive"] },
            { "name": "with_recursive_statement", "symbols": ["with_recursive_statement$subexpression$1", "ident", "collist_paren", (lexer_1.lexerAny.has("kw_as") ? { type: "kw_as" } : kw_as), "lparen", "union_statement", "rparen", "with_statement_statement"], "postprocess": x => lexer_2.track(x, {
                    type: 'with recursive',
                    alias: asName(x[1]),
                    columnNames: x[2].map(asName),
                    bind: x[5],
                    in: unwrap(x[7]),
                }) },
            { "name": "with_statement_bindings$ebnf$1", "symbols": [] },
            { "name": "with_statement_bindings$ebnf$1$subexpression$1", "symbols": ["comma", "with_statement_binding"], "postprocess": last },
            { "name": "with_statement_bindings$ebnf$1", "symbols": ["with_statement_bindings$ebnf$1", "with_statement_bindings$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "with_statement_bindings", "symbols": ["with_statement_binding", "with_statement_bindings$ebnf$1"], "postprocess": ([head, tail]) => {
                    return [head, ...(tail || [])];
                } },
            { "name": "with_statement_binding", "symbols": ["word", (lexer_1.lexerAny.has("kw_as") ? { type: "kw_as" } : kw_as), "lparen", "with_statement_statement", "rparen"], "postprocess": x => lexer_2.track(x, {
                    alias: asName(x[0]),
                    statement: unwrap(x[3]),
                }) },
            { "name": "with_statement_statement", "symbols": ["selection"] },
            { "name": "with_statement_statement", "symbols": ["insert_statement"] },
            { "name": "with_statement_statement", "symbols": ["update_statement"] },
            { "name": "with_statement_statement", "symbols": ["delete_statement"] },
            { "name": "createtype_statement$subexpression$1", "symbols": ["createtype_enum"] },
            { "name": "createtype_statement", "symbols": [(lexer_1.lexerAny.has("kw_create") ? { type: "kw_create" } : kw_create), "kw_type", "qualified_name", "createtype_statement$subexpression$1"], "postprocess": x => lexer_2.track(x, {
                    name: x[2],
                    ...unwrap(x[3]),
                }) },
            { "name": "createtype_enum$macrocall$2", "symbols": ["enum_value"] },
            { "name": "createtype_enum$macrocall$1$ebnf$1", "symbols": [] },
            { "name": "createtype_enum$macrocall$1$ebnf$1$subexpression$1", "symbols": [(lexer_1.lexerAny.has("comma") ? { type: "comma" } : comma), "createtype_enum$macrocall$2"], "postprocess": last },
            { "name": "createtype_enum$macrocall$1$ebnf$1", "symbols": ["createtype_enum$macrocall$1$ebnf$1", "createtype_enum$macrocall$1$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "createtype_enum$macrocall$1", "symbols": ["createtype_enum$macrocall$2", "createtype_enum$macrocall$1$ebnf$1"], "postprocess": ([head, tail]) => {
                    return [unwrap(head), ...(tail.map(unwrap) || [])];
                } },
            { "name": "createtype_enum", "symbols": [(lexer_1.lexerAny.has("kw_as") ? { type: "kw_as" } : kw_as), "kw_enum", "lparen", "createtype_enum$macrocall$1", "rparen"], "postprocess": x => lexer_2.track(x, {
                    type: 'create enum',
                    values: x[3],
                }) },
            { "name": "enum_value", "symbols": ["string"], "postprocess": x => lexer_2.track(x, { value: toStr(x) }) },
            { "name": "union_left", "symbols": ["select_statement"] },
            { "name": "union_left", "symbols": ["select_values"] },
            { "name": "union_left", "symbols": ["selection_paren"] },
            { "name": "union_right", "symbols": ["selection"] },
            { "name": "union_right", "symbols": ["selection_paren"] },
            { "name": "union_statement$subexpression$1$ebnf$1", "symbols": [(lexer_1.lexerAny.has("kw_all") ? { type: "kw_all" } : kw_all)], "postprocess": id },
            { "name": "union_statement$subexpression$1$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "union_statement$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_union") ? { type: "kw_union" } : kw_union), "union_statement$subexpression$1$ebnf$1"] },
            { "name": "union_statement", "symbols": ["union_left", "union_statement$subexpression$1", "union_right"], "postprocess": x => {
                    return lexer_2.track(x, {
                        type: toStr(x[1], ' '),
                        left: unwrap(x[0]),
                        right: unwrap(x[2]),
                    });
                } },
            { "name": "prepare$ebnf$1$subexpression$1", "symbols": ["lparen", "data_type_list", "rparen"], "postprocess": get(1) },
            { "name": "prepare$ebnf$1", "symbols": ["prepare$ebnf$1$subexpression$1"], "postprocess": id },
            { "name": "prepare$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "prepare", "symbols": ["kw_prepare", "ident", "prepare$ebnf$1", (lexer_1.lexerAny.has("kw_as") ? { type: "kw_as" } : kw_as), "statement_noprep"], "postprocess": x => lexer_2.track(x, {
                    type: 'prepare',
                    name: asName(x[1]),
                    ...x[2] && { args: x[2] },
                    statement: unwrap(last(x)),
                }) },
            { "name": "create_view_statements", "symbols": ["create_view"] },
            { "name": "create_view_statements", "symbols": ["create_materialized_view"] },
            { "name": "create_view$ebnf$1$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_or") ? { type: "kw_or" } : kw_or), "kw_replace"] },
            { "name": "create_view$ebnf$1", "symbols": ["create_view$ebnf$1$subexpression$1"], "postprocess": id },
            { "name": "create_view$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "create_view$ebnf$2$subexpression$1", "symbols": ["kw_temp"] },
            { "name": "create_view$ebnf$2$subexpression$1", "symbols": ["kw_temporary"] },
            { "name": "create_view$ebnf$2", "symbols": ["create_view$ebnf$2$subexpression$1"], "postprocess": id },
            { "name": "create_view$ebnf$2", "symbols": [], "postprocess": () => null },
            { "name": "create_view$ebnf$3", "symbols": ["kw_recursive"], "postprocess": id },
            { "name": "create_view$ebnf$3", "symbols": [], "postprocess": () => null },
            { "name": "create_view$ebnf$4$subexpression$1$macrocall$2", "symbols": ["ident"] },
            { "name": "create_view$ebnf$4$subexpression$1$macrocall$1$ebnf$1", "symbols": [] },
            { "name": "create_view$ebnf$4$subexpression$1$macrocall$1$ebnf$1$subexpression$1", "symbols": [(lexer_1.lexerAny.has("comma") ? { type: "comma" } : comma), "create_view$ebnf$4$subexpression$1$macrocall$2"], "postprocess": last },
            { "name": "create_view$ebnf$4$subexpression$1$macrocall$1$ebnf$1", "symbols": ["create_view$ebnf$4$subexpression$1$macrocall$1$ebnf$1", "create_view$ebnf$4$subexpression$1$macrocall$1$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "create_view$ebnf$4$subexpression$1$macrocall$1", "symbols": ["create_view$ebnf$4$subexpression$1$macrocall$2", "create_view$ebnf$4$subexpression$1$macrocall$1$ebnf$1"], "postprocess": ([head, tail]) => {
                    return [unwrap(head), ...(tail.map(unwrap) || [])];
                } },
            { "name": "create_view$ebnf$4$subexpression$1", "symbols": ["lparen", "create_view$ebnf$4$subexpression$1$macrocall$1", "rparen"], "postprocess": get(1) },
            { "name": "create_view$ebnf$4", "symbols": ["create_view$ebnf$4$subexpression$1"], "postprocess": id },
            { "name": "create_view$ebnf$4", "symbols": [], "postprocess": () => null },
            { "name": "create_view$ebnf$5", "symbols": ["create_view_opts"], "postprocess": id },
            { "name": "create_view$ebnf$5", "symbols": [], "postprocess": () => null },
            { "name": "create_view$ebnf$6$subexpression$1$subexpression$1", "symbols": ["kw_local"] },
            { "name": "create_view$ebnf$6$subexpression$1$subexpression$1", "symbols": ["kw_cascaded"] },
            { "name": "create_view$ebnf$6$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_with") ? { type: "kw_with" } : kw_with), "create_view$ebnf$6$subexpression$1$subexpression$1", (lexer_1.lexerAny.has("kw_check") ? { type: "kw_check" } : kw_check), "kw_option"], "postprocess": get(1) },
            { "name": "create_view$ebnf$6", "symbols": ["create_view$ebnf$6$subexpression$1"], "postprocess": id },
            { "name": "create_view$ebnf$6", "symbols": [], "postprocess": () => null },
            { "name": "create_view", "symbols": [(lexer_1.lexerAny.has("kw_create") ? { type: "kw_create" } : kw_create), "create_view$ebnf$1", "create_view$ebnf$2", "create_view$ebnf$3", "kw_view", "qualified_name", "create_view$ebnf$4", "create_view$ebnf$5", (lexer_1.lexerAny.has("kw_as") ? { type: "kw_as" } : kw_as), "selection", "create_view$ebnf$6"], "postprocess": x => {
                    return lexer_2.track(x, {
                        type: 'create view',
                        ...x[1] && { orReplace: true },
                        ...x[2] && { temp: true },
                        ...x[3] && { recursive: true },
                        name: x[5],
                        ...x[6] && { columnNames: x[6].map(asName) },
                        ...x[7] && { parameters: fromEntries(x[7]) },
                        query: x[9],
                        ...x[10] && { checkOption: toStr(x[10]) },
                    });
                } },
            { "name": "create_view_opt", "symbols": ["ident", (lexer_1.lexerAny.has("op_eq") ? { type: "op_eq" } : op_eq), "ident"], "postprocess": ([a, _, b]) => [toStr(a), toStr(b)] },
            { "name": "create_view_opts$macrocall$2", "symbols": ["create_view_opt"] },
            { "name": "create_view_opts$macrocall$1$ebnf$1", "symbols": [] },
            { "name": "create_view_opts$macrocall$1$ebnf$1$subexpression$1", "symbols": [(lexer_1.lexerAny.has("comma") ? { type: "comma" } : comma), "create_view_opts$macrocall$2"], "postprocess": last },
            { "name": "create_view_opts$macrocall$1$ebnf$1", "symbols": ["create_view_opts$macrocall$1$ebnf$1", "create_view_opts$macrocall$1$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "create_view_opts$macrocall$1", "symbols": ["create_view_opts$macrocall$2", "create_view_opts$macrocall$1$ebnf$1"], "postprocess": ([head, tail]) => {
                    return [unwrap(head), ...(tail.map(unwrap) || [])];
                } },
            { "name": "create_view_opts", "symbols": [(lexer_1.lexerAny.has("kw_with") ? { type: "kw_with" } : kw_with), "create_view_opts$macrocall$1"], "postprocess": last },
            { "name": "create_materialized_view$ebnf$1", "symbols": ["kw_ifnotexists"], "postprocess": id },
            { "name": "create_materialized_view$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "create_materialized_view$ebnf$2$subexpression$1$macrocall$2", "symbols": ["ident"] },
            { "name": "create_materialized_view$ebnf$2$subexpression$1$macrocall$1$ebnf$1", "symbols": [] },
            { "name": "create_materialized_view$ebnf$2$subexpression$1$macrocall$1$ebnf$1$subexpression$1", "symbols": [(lexer_1.lexerAny.has("comma") ? { type: "comma" } : comma), "create_materialized_view$ebnf$2$subexpression$1$macrocall$2"], "postprocess": last },
            { "name": "create_materialized_view$ebnf$2$subexpression$1$macrocall$1$ebnf$1", "symbols": ["create_materialized_view$ebnf$2$subexpression$1$macrocall$1$ebnf$1", "create_materialized_view$ebnf$2$subexpression$1$macrocall$1$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "create_materialized_view$ebnf$2$subexpression$1$macrocall$1", "symbols": ["create_materialized_view$ebnf$2$subexpression$1$macrocall$2", "create_materialized_view$ebnf$2$subexpression$1$macrocall$1$ebnf$1"], "postprocess": ([head, tail]) => {
                    return [unwrap(head), ...(tail.map(unwrap) || [])];
                } },
            { "name": "create_materialized_view$ebnf$2$subexpression$1", "symbols": ["lparen", "create_materialized_view$ebnf$2$subexpression$1$macrocall$1", "rparen"], "postprocess": get(1) },
            { "name": "create_materialized_view$ebnf$2", "symbols": ["create_materialized_view$ebnf$2$subexpression$1"], "postprocess": id },
            { "name": "create_materialized_view$ebnf$2", "symbols": [], "postprocess": () => null },
            { "name": "create_materialized_view$ebnf$3", "symbols": ["create_view_opts"], "postprocess": id },
            { "name": "create_materialized_view$ebnf$3", "symbols": [], "postprocess": () => null },
            { "name": "create_materialized_view$ebnf$4$subexpression$1", "symbols": ["kw_tablespace", "ident"], "postprocess": last },
            { "name": "create_materialized_view$ebnf$4", "symbols": ["create_materialized_view$ebnf$4$subexpression$1"], "postprocess": id },
            { "name": "create_materialized_view$ebnf$4", "symbols": [], "postprocess": () => null },
            { "name": "create_materialized_view$ebnf$5$subexpression$1$ebnf$1", "symbols": ["kw_no"], "postprocess": id },
            { "name": "create_materialized_view$ebnf$5$subexpression$1$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "create_materialized_view$ebnf$5$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_with") ? { type: "kw_with" } : kw_with), "create_materialized_view$ebnf$5$subexpression$1$ebnf$1", "kw_data"] },
            { "name": "create_materialized_view$ebnf$5", "symbols": ["create_materialized_view$ebnf$5$subexpression$1"], "postprocess": id },
            { "name": "create_materialized_view$ebnf$5", "symbols": [], "postprocess": () => null },
            { "name": "create_materialized_view", "symbols": [(lexer_1.lexerAny.has("kw_create") ? { type: "kw_create" } : kw_create), "kw_materialized", "kw_view", "create_materialized_view$ebnf$1", "qualified_name", "create_materialized_view$ebnf$2", "create_materialized_view$ebnf$3", "create_materialized_view$ebnf$4", (lexer_1.lexerAny.has("kw_as") ? { type: "kw_as" } : kw_as), "selection", "create_materialized_view$ebnf$5"], "postprocess": x => {
                    return lexer_2.track(x, {
                        type: 'create materialized view',
                        ...x[3] && { ifNotExists: true },
                        name: x[4],
                        ...x[5] && { columnNames: x[6].map(asName) },
                        ...x[6] && { parameters: fromEntries(x[6]) },
                        ...x[7] && { tablespace: asName(x[7]) },
                        query: x[9],
                        ...x[10] && { withData: toStr(x[10][1]) !== 'no' },
                    });
                } },
            { "name": "functions_statements", "symbols": ["create_func"] },
            { "name": "functions_statements", "symbols": ["do_stm"] },
            { "name": "create_func$ebnf$1$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_or") ? { type: "kw_or" } : kw_or), "kw_replace"] },
            { "name": "create_func$ebnf$1", "symbols": ["create_func$ebnf$1$subexpression$1"], "postprocess": id },
            { "name": "create_func$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "create_func$subexpression$1$ebnf$1$macrocall$2", "symbols": ["func_argdef"] },
            { "name": "create_func$subexpression$1$ebnf$1$macrocall$1$ebnf$1", "symbols": [] },
            { "name": "create_func$subexpression$1$ebnf$1$macrocall$1$ebnf$1$subexpression$1", "symbols": [(lexer_1.lexerAny.has("comma") ? { type: "comma" } : comma), "create_func$subexpression$1$ebnf$1$macrocall$2"], "postprocess": last },
            { "name": "create_func$subexpression$1$ebnf$1$macrocall$1$ebnf$1", "symbols": ["create_func$subexpression$1$ebnf$1$macrocall$1$ebnf$1", "create_func$subexpression$1$ebnf$1$macrocall$1$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "create_func$subexpression$1$ebnf$1$macrocall$1", "symbols": ["create_func$subexpression$1$ebnf$1$macrocall$2", "create_func$subexpression$1$ebnf$1$macrocall$1$ebnf$1"], "postprocess": ([head, tail]) => {
                    return [unwrap(head), ...(tail.map(unwrap) || [])];
                } },
            { "name": "create_func$subexpression$1$ebnf$1", "symbols": ["create_func$subexpression$1$ebnf$1$macrocall$1"], "postprocess": id },
            { "name": "create_func$subexpression$1$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "create_func$subexpression$1", "symbols": ["lparen", "create_func$subexpression$1$ebnf$1", "rparen"], "postprocess": get(1) },
            { "name": "create_func$ebnf$2", "symbols": ["func_returns"], "postprocess": id },
            { "name": "create_func$ebnf$2", "symbols": [], "postprocess": () => null },
            { "name": "create_func$subexpression$2", "symbols": [(lexer_1.lexerAny.has("codeblock") ? { type: "codeblock" } : codeblock)], "postprocess": x => unwrap(x).value },
            { "name": "create_func$subexpression$2", "symbols": ["string"] },
            { "name": "create_func$ebnf$3", "symbols": [] },
            { "name": "create_func$ebnf$3", "symbols": ["create_func$ebnf$3", "func_spec"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "create_func", "symbols": [(lexer_1.lexerAny.has("kw_create") ? { type: "kw_create" } : kw_create), "create_func$ebnf$1", "kw_function", "qname", "create_func$subexpression$1", "create_func$ebnf$2", (lexer_1.lexerAny.has("kw_as") ? { type: "kw_as" } : kw_as), "create_func$subexpression$2", "create_func$ebnf$3"], "postprocess": x => {
                    var _a;
                    const specs = {};
                    for (const s of x[8]) {
                        Object.assign(specs, s);
                    }
                    return lexer_2.track(x, {
                        type: 'create function',
                        ...x[1] && { orReplace: true },
                        name: x[3],
                        ...x[5] && { returns: unwrap(x[5]) },
                        arguments: (_a = x[4]) !== null && _a !== void 0 ? _a : [],
                        code: unwrap(x[7]),
                        ...specs,
                    });
                } },
            { "name": "func_argdef$ebnf$1", "symbols": ["func_argopts"], "postprocess": id },
            { "name": "func_argdef$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "func_argdef", "symbols": ["func_argdef$ebnf$1", "data_type"], "postprocess": x => lexer_2.track(x, {
                    type: x[1],
                    ...x[0],
                }) },
            { "name": "func_argopts$ebnf$1", "symbols": ["word"], "postprocess": id },
            { "name": "func_argopts$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "func_argopts", "symbols": ["func_argmod", "func_argopts$ebnf$1"], "postprocess": x => lexer_2.track(x, {
                    mode: toStr(x[0]),
                    ...x[1] && { name: asName(x[1]) },
                }) },
            { "name": "func_argopts", "symbols": ["word"], "postprocess": (x, rej) => {
                    const name = asName(x);
                    if (name === 'out' || name === 'inout' || name === 'variadic') {
                        return rej; // avoid ambiguous syntax
                    }
                    return lexer_2.track(x, { name });
                } },
            { "name": "func_argmod", "symbols": [(lexer_1.lexerAny.has("kw_in") ? { type: "kw_in" } : kw_in)] },
            { "name": "func_argmod", "symbols": ["kw_out"] },
            { "name": "func_argmod", "symbols": ["kw_inout"] },
            { "name": "func_argmod", "symbols": ["kw_variadic"] },
            { "name": "func_spec", "symbols": ["kw_language", "word"], "postprocess": x => lexer_2.track(x, { language: asName(last(x)) }) },
            { "name": "func_spec", "symbols": ["func_purity"], "postprocess": x => lexer_2.track(x, { purity: toStr(x) }) },
            { "name": "func_spec$ebnf$1", "symbols": [(lexer_1.lexerAny.has("kw_not") ? { type: "kw_not" } : kw_not)], "postprocess": id },
            { "name": "func_spec$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "func_spec$subexpression$1", "symbols": ["word"], "postprocess": kw('leakproof') },
            { "name": "func_spec", "symbols": ["func_spec$ebnf$1", "func_spec$subexpression$1"], "postprocess": x => lexer_2.track(x, { leakproof: !x[0] }) },
            { "name": "func_spec", "symbols": ["func_spec_nil"], "postprocess": unwrap },
            { "name": "func_spec_nil$subexpression$1", "symbols": ["word"], "postprocess": kw('called') },
            { "name": "func_spec_nil", "symbols": ["func_spec_nil$subexpression$1", "oninp"], "postprocess": () => ({ onNullInput: 'call' }) },
            { "name": "func_spec_nil$subexpression$2", "symbols": ["word"], "postprocess": kw('returns') },
            { "name": "func_spec_nil", "symbols": ["func_spec_nil$subexpression$2", (lexer_1.lexerAny.has("kw_null") ? { type: "kw_null" } : kw_null), "oninp"], "postprocess": () => ({ onNullInput: 'null' }) },
            { "name": "func_spec_nil$subexpression$3", "symbols": ["word"], "postprocess": kw('strict') },
            { "name": "func_spec_nil", "symbols": ["func_spec_nil$subexpression$3"], "postprocess": () => ({ onNullInput: 'strict' }) },
            { "name": "func_purity", "symbols": ["word"], "postprocess": kw('immutable') },
            { "name": "func_purity", "symbols": ["word"], "postprocess": kw('stable') },
            { "name": "func_purity", "symbols": ["word"], "postprocess": kw('volatile') },
            { "name": "oninp$subexpression$1", "symbols": ["word"], "postprocess": kw('input') },
            { "name": "oninp", "symbols": [(lexer_1.lexerAny.has("kw_on") ? { type: "kw_on" } : kw_on), (lexer_1.lexerAny.has("kw_null") ? { type: "kw_null" } : kw_null), "oninp$subexpression$1"] },
            { "name": "func_returns", "symbols": ["kw_returns", "data_type"], "postprocess": last },
            { "name": "func_returns$macrocall$2", "symbols": ["func_ret_table_col"] },
            { "name": "func_returns$macrocall$1$ebnf$1", "symbols": [] },
            { "name": "func_returns$macrocall$1$ebnf$1$subexpression$1", "symbols": [(lexer_1.lexerAny.has("comma") ? { type: "comma" } : comma), "func_returns$macrocall$2"], "postprocess": last },
            { "name": "func_returns$macrocall$1$ebnf$1", "symbols": ["func_returns$macrocall$1$ebnf$1", "func_returns$macrocall$1$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "func_returns$macrocall$1", "symbols": ["func_returns$macrocall$2", "func_returns$macrocall$1$ebnf$1"], "postprocess": ([head, tail]) => {
                    return [unwrap(head), ...(tail.map(unwrap) || [])];
                } },
            { "name": "func_returns", "symbols": ["kw_returns", (lexer_1.lexerAny.has("kw_table") ? { type: "kw_table" } : kw_table), "lparen", "func_returns$macrocall$1", "rparen"], "postprocess": x => lexer_2.track(x, {
                    kind: 'table',
                    columns: x[3],
                }) },
            { "name": "func_ret_table_col", "symbols": ["word", "data_type"], "postprocess": x => lexer_2.track(x, { name: asName(x[0]), type: x[1] }) },
            { "name": "do_stm$ebnf$1$subexpression$1", "symbols": ["kw_language", "word"], "postprocess": last },
            { "name": "do_stm$ebnf$1", "symbols": ["do_stm$ebnf$1$subexpression$1"], "postprocess": id },
            { "name": "do_stm$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "do_stm", "symbols": [(lexer_1.lexerAny.has("kw_do") ? { type: "kw_do" } : kw_do), "do_stm$ebnf$1", (lexer_1.lexerAny.has("codeblock") ? { type: "codeblock" } : codeblock)], "postprocess": x => lexer_2.track(x, {
                    type: 'do',
                    ...x[1] && { language: asName(x[1]) },
                    code: x[2].value,
                }) },
            { "name": "main$ebnf$1", "symbols": [] },
            { "name": "main$ebnf$1", "symbols": ["main$ebnf$1", "statement_separator"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "main$ebnf$2", "symbols": [] },
            { "name": "main$ebnf$2$subexpression$1$ebnf$1", "symbols": ["statement_separator"] },
            { "name": "main$ebnf$2$subexpression$1$ebnf$1", "symbols": ["main$ebnf$2$subexpression$1$ebnf$1", "statement_separator"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "main$ebnf$2$subexpression$1", "symbols": ["main$ebnf$2$subexpression$1$ebnf$1", "statement"] },
            { "name": "main$ebnf$2", "symbols": ["main$ebnf$2", "main$ebnf$2$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "main$ebnf$3", "symbols": [] },
            { "name": "main$ebnf$3", "symbols": ["main$ebnf$3", "statement_separator"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "main", "symbols": ["main$ebnf$1", "statement", "main$ebnf$2", "main$ebnf$3"], "postprocess": ([_, head, _tail]) => {
                    const tail = _tail;
                    const ret = [unwrap(head), ...tail.map((x) => unwrap(x[1]))];
                    return ret.length === 1
                        ? ret[0]
                        : ret;
                } },
            { "name": "statement_separator", "symbols": [(lexer_1.lexerAny.has("semicolon") ? { type: "semicolon" } : semicolon)] },
            { "name": "statement", "symbols": ["statement_noprep"] },
            { "name": "statement", "symbols": ["prepare"] },
            { "name": "statement_noprep", "symbols": ["selection"] },
            { "name": "statement_noprep", "symbols": ["createtable_statement"] },
            { "name": "statement_noprep", "symbols": ["createextension_statement"] },
            { "name": "statement_noprep", "symbols": ["createindex_statement"] },
            { "name": "statement_noprep", "symbols": ["simplestatements_all"] },
            { "name": "statement_noprep", "symbols": ["insert_statement"] },
            { "name": "statement_noprep", "symbols": ["update_statement"] },
            { "name": "statement_noprep", "symbols": ["altertable_statement"] },
            { "name": "statement_noprep", "symbols": ["delete_statement"] },
            { "name": "statement_noprep", "symbols": ["create_sequence_statement"] },
            { "name": "statement_noprep", "symbols": ["alter_sequence_statement"] },
            { "name": "statement_noprep", "symbols": ["drop_statement"] },
            { "name": "statement_noprep", "symbols": ["createtype_statement"] },
            { "name": "statement_noprep", "symbols": ["create_view_statements"] },
            { "name": "statement_noprep", "symbols": ["create_schema"] },
            { "name": "statement_noprep", "symbols": ["raise_statement"] },
            { "name": "statement_noprep", "symbols": ["comment_statement"] },
            { "name": "statement_noprep", "symbols": ["functions_statements"] },
            { "name": "selection", "symbols": ["select_statement"], "postprocess": unwrap },
            { "name": "selection", "symbols": ["select_values"], "postprocess": unwrap },
            { "name": "selection", "symbols": ["with_statement"], "postprocess": unwrap },
            { "name": "selection", "symbols": ["with_recursive_statement"], "postprocess": unwrap },
            { "name": "selection", "symbols": ["union_statement"], "postprocess": unwrap },
            { "name": "selection_paren", "symbols": ["lparen", "selection", "rparen"], "postprocess": get(1) }
        ],
        ParserStart: "main",
    };
    exports.default = grammar;


    /***/ }),
    /* 11 */
    /***/ (function(module, exports, __webpack_require__) {

    Object.defineProperty(exports, "__esModule", { value: true });
    // Generated automatically by nearley, version unknown
    // http://github.com/Hardmath123/nearley
    // Bypasses TS6133. Allow declared but unused functions.
    // @ts-ignore
    function id(d) { return d[0]; }
    const array_lexer_1 = __webpack_require__(12);
    const last = (x) => x && x[x.length - 1];
    const grammar = {
        Lexer: array_lexer_1.lexerAny,
        ParserRules: [
            { "name": "main$ebnf$1", "symbols": ["elements"], "postprocess": id },
            { "name": "main$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "main", "symbols": [(array_lexer_1.lexerAny.has("start_list") ? { type: "start_list" } : start_list), "main$ebnf$1", (array_lexer_1.lexerAny.has("end_list") ? { type: "end_list" } : end_list)], "postprocess": x => x[1] || [] },
            { "name": "elements$ebnf$1", "symbols": [] },
            { "name": "elements$ebnf$1$subexpression$1", "symbols": [(array_lexer_1.lexerAny.has("comma") ? { type: "comma" } : comma), "elt"], "postprocess": last },
            { "name": "elements$ebnf$1", "symbols": ["elements$ebnf$1", "elements$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "elements", "symbols": ["elt", "elements$ebnf$1"], "postprocess": ([head, tail]) => {
                    return [head, ...(tail || [])];
                } },
            { "name": "elt", "symbols": [(array_lexer_1.lexerAny.has("value") ? { type: "value" } : value)], "postprocess": x => x[0].value },
            { "name": "elt", "symbols": ["main"], "postprocess": x => x[0] }
        ],
        ParserStart: "main",
    };
    exports.default = grammar;


    /***/ }),
    /* 12 */
    /***/ (function(module, exports, __webpack_require__) {

    Object.defineProperty(exports, "__esModule", { value: true });
    exports.lexerAny = exports.lexer = void 0;
    const moo_1 = __webpack_require__(0);
    // build lexer
    exports.lexer = moo_1.compile({
        valueString: {
            match: /"(?:\\["\\]|[^\n"\\])*"/,
            value: x => JSON.parse(x),
            type: x => 'value',
        },
        valueRaw: {
            match: /[^\s,\{\}"](?:[^,\{\}"]*[^\s,\{\}"])?/,
            type: () => 'value',
        },
        comma: ',',
        space: { match: /[\s\t\n\v\f\r]+/, lineBreaks: true, },
        start_list: '{',
        end_list: '}',
    });
    exports.lexer.next = (next => () => {
        let tok;
        while ((tok = next.call(exports.lexer)) && (tok.type === 'space')) {
        }
        return tok;
    })(exports.lexer.next);
    exports.lexerAny = exports.lexer;


    /***/ }),
    /* 13 */
    /***/ (function(module, exports, __webpack_require__) {

    Object.defineProperty(exports, "__esModule", { value: true });
    // Generated automatically by nearley, version unknown
    // http://github.com/Hardmath123/nearley
    // Bypasses TS6133. Allow declared but unused functions.
    // @ts-ignore
    function id(d) { return d[0]; }
    const geometric_lexer_1 = __webpack_require__(14);
    const get = (i) => (x) => x[i];
    const last = (x) => x && x[x.length - 1];
    function unwrap(e) {
        if (Array.isArray(e) && e.length === 1) {
            e = unwrap(e[0]);
        }
        if (Array.isArray(e) && !e.length) {
            return null;
        }
        return e;
    }
    const grammar = {
        Lexer: geometric_lexer_1.lexerAny,
        ParserRules: [
            { "name": "number$subexpression$1", "symbols": ["float"] },
            { "name": "number$subexpression$1", "symbols": ["int"] },
            { "name": "number", "symbols": ["number$subexpression$1"], "postprocess": unwrap },
            { "name": "float", "symbols": [(geometric_lexer_1.lexerAny.has("float") ? { type: "float" } : float)], "postprocess": args => parseFloat(unwrap(args)) },
            { "name": "int", "symbols": [(geometric_lexer_1.lexerAny.has("int") ? { type: "int" } : int)], "postprocess": arg => parseInt(unwrap(arg), 10) },
            { "name": "comma", "symbols": [(geometric_lexer_1.lexerAny.has("comma") ? { type: "comma" } : comma)], "postprocess": id },
            { "name": "point$macrocall$2", "symbols": ["point_content"] },
            { "name": "point$macrocall$1$subexpression$1", "symbols": ["point$macrocall$2"] },
            { "name": "point$macrocall$1$subexpression$1", "symbols": [(geometric_lexer_1.lexerAny.has("lparen") ? { type: "lparen" } : lparen), "point$macrocall$2", (geometric_lexer_1.lexerAny.has("rparen") ? { type: "rparen" } : rparen)], "postprocess": get(1) },
            { "name": "point$macrocall$1", "symbols": ["point$macrocall$1$subexpression$1"], "postprocess": unwrap },
            { "name": "point", "symbols": ["point$macrocall$1"], "postprocess": unwrap },
            { "name": "point_content", "symbols": ["number", "comma", "number"], "postprocess": x => ({ x: x[0], y: x[2] }) },
            { "name": "line", "symbols": [(geometric_lexer_1.lexerAny.has("lcurl") ? { type: "lcurl" } : lcurl), "number", "comma", "number", "comma", "number", (geometric_lexer_1.lexerAny.has("rcurl") ? { type: "rcurl" } : rcurl)], "postprocess": x => ({
                    a: x[1],
                    b: x[3],
                    c: x[5],
                }) },
            { "name": "box", "symbols": ["closed_path"], "postprocess": ([x], rej) => {
                    if (x.length !== 2) {
                        return rej;
                    }
                    return x;
                } },
            { "name": "lseg", "symbols": ["path"], "postprocess": ([x], rej) => {
                    if (x.path.length !== 2) {
                        return rej;
                    }
                    return x.path;
                } },
            { "name": "path", "symbols": ["open_path"], "postprocess": ([path]) => ({ closed: false, path }) },
            { "name": "path", "symbols": ["closed_path"], "postprocess": ([path]) => ({ closed: true, path }) },
            { "name": "open_path$macrocall$2", "symbols": [(geometric_lexer_1.lexerAny.has("lbracket") ? { type: "lbracket" } : lbracket)] },
            { "name": "open_path$macrocall$3", "symbols": [(geometric_lexer_1.lexerAny.has("rbracket") ? { type: "rbracket" } : rbracket)] },
            { "name": "open_path$macrocall$1$macrocall$2", "symbols": ["point"] },
            { "name": "open_path$macrocall$1$macrocall$1$ebnf$1", "symbols": [] },
            { "name": "open_path$macrocall$1$macrocall$1$ebnf$1$subexpression$1", "symbols": [(geometric_lexer_1.lexerAny.has("comma") ? { type: "comma" } : comma), "open_path$macrocall$1$macrocall$2"], "postprocess": last },
            { "name": "open_path$macrocall$1$macrocall$1$ebnf$1", "symbols": ["open_path$macrocall$1$macrocall$1$ebnf$1", "open_path$macrocall$1$macrocall$1$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "open_path$macrocall$1$macrocall$1", "symbols": ["open_path$macrocall$1$macrocall$2", "open_path$macrocall$1$macrocall$1$ebnf$1"], "postprocess": ([head, tail]) => {
                    return [unwrap(head), ...(tail.map(unwrap) || [])];
                } },
            { "name": "open_path$macrocall$1", "symbols": ["open_path$macrocall$2", "open_path$macrocall$1$macrocall$1", "open_path$macrocall$3"], "postprocess": get(1) },
            { "name": "open_path", "symbols": ["open_path$macrocall$1"], "postprocess": last },
            { "name": "closed_path$subexpression$1$macrocall$2", "symbols": [(geometric_lexer_1.lexerAny.has("lparen") ? { type: "lparen" } : lparen)] },
            { "name": "closed_path$subexpression$1$macrocall$3", "symbols": [(geometric_lexer_1.lexerAny.has("rparen") ? { type: "rparen" } : rparen)] },
            { "name": "closed_path$subexpression$1$macrocall$1$macrocall$2", "symbols": ["point"] },
            { "name": "closed_path$subexpression$1$macrocall$1$macrocall$1$ebnf$1", "symbols": [] },
            { "name": "closed_path$subexpression$1$macrocall$1$macrocall$1$ebnf$1$subexpression$1", "symbols": [(geometric_lexer_1.lexerAny.has("comma") ? { type: "comma" } : comma), "closed_path$subexpression$1$macrocall$1$macrocall$2"], "postprocess": last },
            { "name": "closed_path$subexpression$1$macrocall$1$macrocall$1$ebnf$1", "symbols": ["closed_path$subexpression$1$macrocall$1$macrocall$1$ebnf$1", "closed_path$subexpression$1$macrocall$1$macrocall$1$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "closed_path$subexpression$1$macrocall$1$macrocall$1", "symbols": ["closed_path$subexpression$1$macrocall$1$macrocall$2", "closed_path$subexpression$1$macrocall$1$macrocall$1$ebnf$1"], "postprocess": ([head, tail]) => {
                    return [unwrap(head), ...(tail.map(unwrap) || [])];
                } },
            { "name": "closed_path$subexpression$1$macrocall$1", "symbols": ["closed_path$subexpression$1$macrocall$2", "closed_path$subexpression$1$macrocall$1$macrocall$1", "closed_path$subexpression$1$macrocall$3"], "postprocess": get(1) },
            { "name": "closed_path$subexpression$1", "symbols": ["closed_path$subexpression$1$macrocall$1"], "postprocess": last },
            { "name": "closed_path$subexpression$1$macrocall$5", "symbols": ["point"] },
            { "name": "closed_path$subexpression$1$macrocall$4$ebnf$1", "symbols": [] },
            { "name": "closed_path$subexpression$1$macrocall$4$ebnf$1$subexpression$1", "symbols": [(geometric_lexer_1.lexerAny.has("comma") ? { type: "comma" } : comma), "closed_path$subexpression$1$macrocall$5"], "postprocess": last },
            { "name": "closed_path$subexpression$1$macrocall$4$ebnf$1", "symbols": ["closed_path$subexpression$1$macrocall$4$ebnf$1", "closed_path$subexpression$1$macrocall$4$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "closed_path$subexpression$1$macrocall$4", "symbols": ["closed_path$subexpression$1$macrocall$5", "closed_path$subexpression$1$macrocall$4$ebnf$1"], "postprocess": ([head, tail]) => {
                    return [unwrap(head), ...(tail.map(unwrap) || [])];
                } },
            { "name": "closed_path$subexpression$1", "symbols": ["closed_path$subexpression$1$macrocall$4"], "postprocess": last },
            { "name": "closed_path", "symbols": ["closed_path$subexpression$1"], "postprocess": get(0) },
            { "name": "polygon", "symbols": ["closed_path"], "postprocess": get(0) },
            { "name": "circle_body", "symbols": ["point", "comma", "number"], "postprocess": x => ({ c: x[0], r: x[2] }) },
            { "name": "circle$subexpression$1$macrocall$2", "symbols": [(geometric_lexer_1.lexerAny.has("lcomp") ? { type: "lcomp" } : lcomp)] },
            { "name": "circle$subexpression$1$macrocall$3", "symbols": [(geometric_lexer_1.lexerAny.has("rcomp") ? { type: "rcomp" } : rcomp)] },
            { "name": "circle$subexpression$1$macrocall$1", "symbols": ["circle$subexpression$1$macrocall$2", "circle_body", "circle$subexpression$1$macrocall$3"], "postprocess": get(1) },
            { "name": "circle$subexpression$1", "symbols": ["circle$subexpression$1$macrocall$1"] },
            { "name": "circle$subexpression$1$macrocall$5", "symbols": [(geometric_lexer_1.lexerAny.has("lparen") ? { type: "lparen" } : lparen)] },
            { "name": "circle$subexpression$1$macrocall$6", "symbols": [(geometric_lexer_1.lexerAny.has("rparen") ? { type: "rparen" } : rparen)] },
            { "name": "circle$subexpression$1$macrocall$4", "symbols": ["circle$subexpression$1$macrocall$5", "circle_body", "circle$subexpression$1$macrocall$6"], "postprocess": get(1) },
            { "name": "circle$subexpression$1", "symbols": ["circle$subexpression$1$macrocall$4"] },
            { "name": "circle$subexpression$1", "symbols": ["circle_body"] },
            { "name": "circle", "symbols": ["circle$subexpression$1"], "postprocess": unwrap }
        ],
        ParserStart: "number",
    };
    exports.default = grammar;


    /***/ }),
    /* 14 */
    /***/ (function(module, exports, __webpack_require__) {

    Object.defineProperty(exports, "__esModule", { value: true });
    exports.lexerAny = exports.lexer = void 0;
    const moo_1 = __webpack_require__(0);
    // build lexer
    exports.lexer = moo_1.compile({
        comma: ',',
        space: { match: /[\s\t\n\v\f\r]+/, lineBreaks: true, },
        int: /\-?\d+(?![\.\d])/,
        float: /\-?(?:(?:\d*\.\d+)|(?:\d+\.\d*))/,
        lcurl: '{',
        rcurl: '}',
        lparen: '(',
        rparen: ')',
        lbracket: '[',
        rbracket: ']',
        lcomp: '<',
        rcomp: '>',
    });
    exports.lexer.next = (next => () => {
        let tok;
        while ((tok = next.call(exports.lexer)) && (tok.type === 'space')) {
        }
        return tok;
    })(exports.lexer.next);
    exports.lexerAny = exports.lexer;


    /***/ }),
    /* 15 */
    /***/ (function(module, exports, __webpack_require__) {

    Object.defineProperty(exports, "__esModule", { value: true });
    // Generated automatically by nearley, version unknown
    // http://github.com/Hardmath123/nearley
    // Bypasses TS6133. Allow declared but unused functions.
    // @ts-ignore
    function id(d) { return d[0]; }
    const interval_lexer_1 = __webpack_require__(16);
    const grammar = {
        Lexer: interval_lexer_1.lexerAny,
        ParserRules: [
            { "name": "main$ebnf$1", "symbols": ["elt"] },
            { "name": "main$ebnf$1", "symbols": ["main$ebnf$1", "elt"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "main", "symbols": ["main$ebnf$1"], "postprocess": ([elts]) => {
                    // check unicity
                    const s = new Set();
                    for (const e of elts) {
                        const k = typeof e[1] === 'number'
                            ? e[0]
                            : 'time';
                        if (s.has(k)) {
                            return 'invalid';
                        }
                        s.add(k);
                    }
                    return elts;
                } },
            { "name": "elt", "symbols": ["time"] },
            { "name": "elt", "symbols": ["num", "unit"], "postprocess": ([[n], u]) => {
                    u = u[0].type;
                    return [u, n];
                } },
            { "name": "unit", "symbols": [(interval_lexer_1.lexerAny.has("years") ? { type: "years" } : years)] },
            { "name": "unit", "symbols": [(interval_lexer_1.lexerAny.has("months") ? { type: "months" } : months)] },
            { "name": "unit", "symbols": [(interval_lexer_1.lexerAny.has("days") ? { type: "days" } : days)] },
            { "name": "unit", "symbols": [(interval_lexer_1.lexerAny.has("hours") ? { type: "hours" } : hours)] },
            { "name": "unit", "symbols": [(interval_lexer_1.lexerAny.has("minutes") ? { type: "minutes" } : minutes)] },
            { "name": "unit", "symbols": [(interval_lexer_1.lexerAny.has("seconds") ? { type: "seconds" } : seconds)] },
            { "name": "unit", "symbols": [(interval_lexer_1.lexerAny.has("milliseconds") ? { type: "milliseconds" } : milliseconds)] },
            { "name": "num", "symbols": ["int"] },
            { "name": "num", "symbols": ["float"] },
            { "name": "uint", "symbols": [(interval_lexer_1.lexerAny.has("int") ? { type: "int" } : int)], "postprocess": ([x]) => parseInt(x, 10) },
            { "name": "int$ebnf$1$subexpression$1", "symbols": [(interval_lexer_1.lexerAny.has("neg") ? { type: "neg" } : neg)] },
            { "name": "int$ebnf$1", "symbols": ["int$ebnf$1$subexpression$1"], "postprocess": id },
            { "name": "int$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "int", "symbols": ["int$ebnf$1", (interval_lexer_1.lexerAny.has("int") ? { type: "int" } : int)], "postprocess": ([neg, x]) => parseInt(x, 10) * (neg ? -1 : 1) },
            { "name": "float$ebnf$1$subexpression$1", "symbols": [(interval_lexer_1.lexerAny.has("neg") ? { type: "neg" } : neg)] },
            { "name": "float$ebnf$1", "symbols": ["float$ebnf$1$subexpression$1"], "postprocess": id },
            { "name": "float$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "float$ebnf$2", "symbols": [(interval_lexer_1.lexerAny.has("int") ? { type: "int" } : int)], "postprocess": id },
            { "name": "float$ebnf$2", "symbols": [], "postprocess": () => null },
            { "name": "float", "symbols": ["float$ebnf$1", "float$ebnf$2", (interval_lexer_1.lexerAny.has("dot") ? { type: "dot" } : dot), (interval_lexer_1.lexerAny.has("int") ? { type: "int" } : int)], "postprocess": ([neg, ...v]) => parseFloat(v.map(v => v ? v.text : '0').join('')) * (neg ? -1 : 1) },
            { "name": "time$ebnf$1$subexpression$1", "symbols": [(interval_lexer_1.lexerAny.has("colon") ? { type: "colon" } : colon), "uint"] },
            { "name": "time$ebnf$1", "symbols": ["time$ebnf$1$subexpression$1"], "postprocess": id },
            { "name": "time$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "time$ebnf$2$subexpression$1", "symbols": [(interval_lexer_1.lexerAny.has("dot") ? { type: "dot" } : dot), (interval_lexer_1.lexerAny.has("int") ? { type: "int" } : int)] },
            { "name": "time$ebnf$2", "symbols": ["time$ebnf$2$subexpression$1"], "postprocess": id },
            { "name": "time$ebnf$2", "symbols": [], "postprocess": () => null },
            { "name": "time", "symbols": ["uint", (interval_lexer_1.lexerAny.has("colon") ? { type: "colon" } : colon), "uint", "time$ebnf$1", "time$ebnf$2"], "postprocess": ([a, _, b, c, d]) => {
                    c = c && c[1];
                    d = d && d[1];
                    const ret = typeof c === 'number' ? [
                        ['hours', a],
                        ['minutes', b],
                        ['seconds', c],
                    ] : [
                        ['minutes', a],
                        ['seconds', b],
                    ];
                    if (d) {
                        ret.push(['milliseconds', parseFloat('0.' + d) * 1000]);
                    }
                    return ret;
                } }
        ],
        ParserStart: "main",
    };
    exports.default = grammar;


    /***/ }),
    /* 16 */
    /***/ (function(module, exports, __webpack_require__) {

    Object.defineProperty(exports, "__esModule", { value: true });
    exports.lexerAny = exports.lexer = void 0;
    const moo_1 = __webpack_require__(0);
    // build lexer
    exports.lexer = moo_1.compile({
        int: /\d+/,
        neg: '-',
        dot: '.',
        years: /(?:y|yrs?|years?)\b/,
        months: /(?:mon(?:th)?s?)\b/,
        days: /(?:d|days?)\b/,
        hours: /(?:h|hrs?|hours?)\b/,
        minutes: /(?:m|mins?|minutes?)\b/,
        seconds: /(?:s|secs?|seconds?)\b/,
        milliseconds: /(?:ms|milliseconds?)\b/,
        space: { match: /[\s\t\n\v\f\r]+/, lineBreaks: true, },
        colon: ':',
    });
    exports.lexer.next = (next => () => {
        let tok;
        while ((tok = next.call(exports.lexer)) && (tok.type === 'space')) {
        }
        return tok;
    })(exports.lexer.next);
    exports.lexerAny = exports.lexer;


    /***/ }),
    /* 17 */
    /***/ (function(module, exports, __webpack_require__) {

    Object.defineProperty(exports, "__esModule", { value: true });
    // Generated automatically by nearley, version unknown
    // http://github.com/Hardmath123/nearley
    // Bypasses TS6133. Allow declared but unused functions.
    // @ts-ignore
    function id(d) { return d[0]; }
    const interval_iso_lexer_1 = __webpack_require__(18);
    const grammar = {
        Lexer: interval_iso_lexer_1.lexerAny,
        ParserRules: [
            { "name": "num", "symbols": [(interval_iso_lexer_1.lexerAny.has("int") ? { type: "int" } : int)] },
            { "name": "num", "symbols": [(interval_iso_lexer_1.lexerAny.has("float") ? { type: "float" } : float)] },
            { "name": "main$ebnf$1", "symbols": [] },
            { "name": "main$ebnf$1", "symbols": ["main$ebnf$1", "long"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "main$ebnf$2$subexpression$1$ebnf$1", "symbols": ["short"] },
            { "name": "main$ebnf$2$subexpression$1$ebnf$1", "symbols": ["main$ebnf$2$subexpression$1$ebnf$1", "short"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "main$ebnf$2$subexpression$1", "symbols": [(interval_iso_lexer_1.lexerAny.has("T") ? { type: "T" } : T), "main$ebnf$2$subexpression$1$ebnf$1"] },
            { "name": "main$ebnf$2", "symbols": ["main$ebnf$2$subexpression$1"], "postprocess": id },
            { "name": "main$ebnf$2", "symbols": [], "postprocess": () => null },
            { "name": "main", "symbols": [(interval_iso_lexer_1.lexerAny.has("P") ? { type: "P" } : P), "main$ebnf$1", "main$ebnf$2"], "postprocess": ([_, a, b], rej) => {
                    b = !b ? [] : b[1];
                    if (!a.length && !b.length) {
                        return rej;
                    }
                    return !a.length ? b
                        : !b.length ? a
                            : [...a, ...b];
                } },
            { "name": "long$subexpression$1", "symbols": [(interval_iso_lexer_1.lexerAny.has("Y") ? { type: "Y" } : Y)] },
            { "name": "long$subexpression$1", "symbols": [(interval_iso_lexer_1.lexerAny.has("M") ? { type: "M" } : M)] },
            { "name": "long$subexpression$1", "symbols": [(interval_iso_lexer_1.lexerAny.has("W") ? { type: "W" } : W)] },
            { "name": "long$subexpression$1", "symbols": [(interval_iso_lexer_1.lexerAny.has("D") ? { type: "D" } : D)] },
            { "name": "long", "symbols": ["num", "long$subexpression$1"], "postprocess": ([n, u]) => {
                    n = parseFloat(n[0].value);
                    u = u[0].type;
                    switch (u) {
                        case 'Y':
                            return ['years', n];
                        case 'M':
                            return ['months', n];
                        case 'W':
                            return ['days', n * 7];
                        case 'D':
                            return ['days', n];
                        default:
                            throw new Error('Unexpected unit ' + u);
                    }
                } },
            { "name": "short$ebnf$1", "symbols": [(interval_iso_lexer_1.lexerAny.has("T") ? { type: "T" } : T)], "postprocess": id },
            { "name": "short$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "short$subexpression$1", "symbols": [(interval_iso_lexer_1.lexerAny.has("H") ? { type: "H" } : H)] },
            { "name": "short$subexpression$1", "symbols": [(interval_iso_lexer_1.lexerAny.has("M") ? { type: "M" } : M)] },
            { "name": "short$subexpression$1", "symbols": [(interval_iso_lexer_1.lexerAny.has("S") ? { type: "S" } : S)] },
            { "name": "short", "symbols": ["short$ebnf$1", "num", "short$subexpression$1"], "postprocess": ([_, n, u]) => {
                    n = parseFloat(n[0].value);
                    u = u[0].type;
                    switch (u) {
                        case 'H':
                            return ['hours', n];
                        case 'M':
                            return ['minutes', n];
                        case 'S':
                            return ['seconds', n];
                        default:
                            throw new Error('Unexpected unit ' + u);
                    }
                } }
        ],
        ParserStart: "num",
    };
    exports.default = grammar;


    /***/ }),
    /* 18 */
    /***/ (function(module, exports, __webpack_require__) {

    Object.defineProperty(exports, "__esModule", { value: true });
    exports.lexerAny = exports.lexer = void 0;
    const moo_1 = __webpack_require__(0);
    // build lexer
    exports.lexer = moo_1.compile({
        int: /\-?\d+(?![\.\d])/,
        float: /\-?(?:(?:\d*\.\d+)|(?:\d+\.\d*))/,
        P: 'P',
        Y: 'Y',
        M: 'M',
        W: 'W',
        D: 'D',
        H: 'H',
        S: 'S',
        T: 'T',
    });
    exports.lexerAny = exports.lexer;


    /***/ }),
    /* 19 */
    /***/ (function(module, exports, __webpack_require__) {

    Object.defineProperty(exports, "__esModule", { value: true });
    exports.toSql = void 0;
    const ast_mapper_1 = __webpack_require__(2);
    const ast_visitor_1 = __webpack_require__(5);
    const utils_1 = __webpack_require__(6);
    const pg_escape_1 = __webpack_require__(20);
    const keywords_1 = __webpack_require__(3);
    const kwSet = new Set(keywords_1.sqlKeywords.map(x => x.toLowerCase()));
    let ret = [];
    function name(nm) {
        return ident(nm.name);
    }
    function ident(nm) {
        // only add quotes if has upper cases, or if it is a keyword.
        const low = nm.toLowerCase();
        if (low === nm && !kwSet.has(low) && /^[a-z][a-z0-9_]*$/.test(low)) {
            return nm;
        }
        return '"' + nm + '"';
    }
    function list(elems, act, addParen) {
        if (addParen) {
            ret.push('(');
        }
        let first = true;
        for (const e of elems) {
            if (!first) {
                ret.push(', ');
            }
            first = false;
            act(e);
        }
        if (addParen) {
            ret.push(')');
        }
    }
    function addConstraint(c, m) {
        ret.push(c.type);
        switch (c.type) {
            case 'foreign key':
                ret.push('(', ...c.localColumns.map(name).join(', '), ') REFERENCES ');
                m.tableRef(c.foreignTable);
                ret.push('(', ...c.foreignColumns.map(name).join(', '), ') ');
                if (c.match) {
                    ret.push(' MATCH ', c.match.toUpperCase());
                }
                if (c.onDelete) {
                    ret.push(' ON DELETE ', c.onDelete);
                }
                if (c.onUpdate) {
                    ret.push(' ON UPDATE ', c.onUpdate);
                }
                break;
            case 'primary key':
            case 'unique':
                if ('columns' in c) {
                    ret.push('(', ...c.columns.map(name).join(', '), ') ');
                }
                break;
            case 'check':
                m.expr(c.expr);
                break;
            case 'not null':
            case 'null':
                break;
            case 'default':
                ret.push(' DEFAULT ');
                m.expr(c.default);
                break;
            case 'add generated':
                ret.push(' GENERATED ');
                visitGenerated(m, c);
                break;
            default:
                throw utils_1.NotSupported.never(c);
        }
    }
    function visitQualifiedName(cs) {
        if (cs.schema) {
            ret.push(ident(cs.schema), '.');
        }
        ret.push(ident(cs.name), ' ');
    }
    function visitOrderBy(m, orderBy) {
        ret.push(' ORDER BY ');
        list(orderBy, e => {
            m.expr(e.by);
            if (e.order) {
                ret.push(' ', e.order);
            }
        }, false);
    }
    function visitSetVal(set) {
        switch (set.type) {
            case 'default':
                ret.push('DEFAULT ');
                break;
            case 'identifier':
                ret.push(set.name);
                break;
            case 'list':
                let first = true;
                for (const v of set.values) {
                    if (!first) {
                        ret.push(', ');
                    }
                    first = false;
                    visitSetVal(v);
                }
                break;
            case 'value':
                ret.push(typeof set.value === 'number' ? set.value.toString() : pg_escape_1.literal(set.value));
                break;
            default:
                throw utils_1.NotSupported.never(set);
        }
    }
    function visitGenerated(m, alter) {
        if (alter.always) {
            ret.push(alter.always.toUpperCase(), ' ');
        }
        ret.push('AS IDENTITY ');
        if (alter.sequence) {
            ret.push('(');
            if (alter.sequence.name) {
                ret.push('SEQUENCE NAME ');
                visitQualifiedName(alter.sequence.name);
                ret.push(' ');
            }
            visitSeqOpts(m, alter.sequence);
            ret.push(') ');
        }
    }
    function visitSeqOpts(m, cs) {
        if (cs.as) {
            ret.push('AS ');
            m.dataType(cs.as);
            ret.push(' ');
        }
        if (typeof cs.incrementBy === 'number') {
            ret.push('INCREMENT BY ', cs.incrementBy.toString(), ' ');
        }
        if (cs.minValue === 'no minvalue') {
            ret.push('NO MINVALUE ');
        }
        if (typeof cs.minValue === 'number') {
            ret.push('MINVALUE ', cs.minValue.toString(), ' ');
        }
        if (cs.maxValue === 'no maxvalue') {
            ret.push('NO MAXVALUE ');
        }
        if (typeof cs.maxValue === 'number') {
            ret.push('MAXVALUE ', cs.maxValue.toString(), ' ');
        }
        if (typeof cs.startWith === 'number') {
            ret.push('START WITH ', cs.startWith.toString(), ' ');
        }
        if (typeof cs.cache === 'number') {
            ret.push('CACHE ', cs.cache.toString(), ' ');
        }
        if (cs.cycle) {
            ret.push(cs.cycle, ' ');
        }
        if (cs.ownedBy === 'none') {
            ret.push('OWNED BY NONE ');
        }
        else if (cs.ownedBy) {
            ret.push('OWNED BY ');
            visitQColumn(cs.ownedBy);
        }
        if ('restart' in cs) {
            if (cs.restart === true) {
                ret.push('RESTART ');
            }
            else if (cs.restart) {
                ret.push('RESTART WITH ', cs.restart.toString(), ' ');
            }
        }
    }
    function visitQColumn(col) {
        if (col.schema) {
            ret.push(ident(col.schema), '.');
        }
        ret.push(ident(col.table), '.', ident(col.column), ' ');
    }
    function join(m, j, tbl) {
        if (!j) {
            tbl();
            return;
        }
        ret.push(j.type, ' ');
        tbl();
        if (j.on) {
            ret.push('ON ');
            m.expr(j.on);
        }
        if (j.using) {
            ret.push('USING (');
            list(j.using, x => ret.push(name(x)), false);
            ret.push(') ');
        }
        ret.push(' ');
    }
    function visitOp(v) {
        if (v.opSchema) {
            ret.push(' operator(', ident(v.opSchema), '.', v.op, ') ');
        }
        else {
            ret.push(' ', v.op, ' ');
        }
    }
    const visitor = ast_visitor_1.astVisitor(m => ({
        addColumn: (...args) => {
            ret.push(' ADD COLUMN ');
            if (args[0].ifNotExists) {
                ret.push('IF NOT EXISTS ');
            }
            m.super().addColumn(...args);
        },
        createExtension: e => {
            ret.push('CREATE EXTENSION ');
            if (e.ifNotExists) {
                ret.push(' IF NOT EXISTS ');
            }
            ret.push(name(e.extension));
            if (!e.from && !e.version && !e.schema) {
                return;
            }
            ret.push(' WITH');
            if (e.schema) {
                ret.push(' SCHEMA ', name(e.schema));
            }
            if (e.version) {
                ret.push(' VERSION ', pg_escape_1.literal(e.version.value));
            }
            if (e.from) {
                ret.push(' FROM ', pg_escape_1.literal(e.from.value));
            }
        },
        tablespace: t => {
            ret.push('TABLESPACE ', name(t.tablespace));
        },
        addConstraint: c => {
            ret.push(' ADD ');
            const cname = c.constraint.constraintName;
            if (cname) {
                ret.push(' CONSTRAINT ', name(cname), ' ');
            }
            addConstraint(c.constraint, m);
        },
        alterColumn: (c, t) => {
            ret.push(' ALTER COLUMN ', name(c.column), ' ');
            m.super().alterColumn(c, t);
        },
        setColumnDefault: (a, t, c) => {
            ret.push(' SET DEFAULT ');
            m.expr(a.default);
            if (a.updateExisting) {
                throw new Error('Not implemented: updateExisting on set column default');
            }
        },
        createEnum: t => {
            ret.push('CREATE TYPE ');
            visitQualifiedName(t.name);
            ret.push(' AS ENUM ');
            list(t.values, x => ret.push(pg_escape_1.literal(x.value)), true);
            ret.push(' ');
        },
        setTableOwner: o => {
            ret.push(' OWNER TO ', name(o.to));
        },
        alterColumnSimple: c => ret.push(c.type),
        alterColumnAddGenerated: (alter) => {
            ret.push(' ADD GENERATED ');
            visitGenerated(m, alter);
        },
        setColumnType: t => {
            ret.push(' SET DATA TYPE ');
            m.dataType(t.dataType);
            ret.push(' ');
        },
        alterTable: t => {
            ret.push('ALTER TABLE ');
            if (t.ifExists) {
                ret.push(' IF EXISTS ');
            }
            if (t.only) {
                ret.push(' ONLY ');
            }
            m.super().alterTable(t);
        },
        array: v => {
            ret.push(v.type === 'array' ? 'ARRAY[' : '(');
            list(v.expressions, e => m.expr(e), false);
            ret.push(v.type === 'array' ? ']' : ')');
        },
        arrayIndex: v => {
            m.expr(v.array);
            ret.push('[');
            m.expr(v.index);
            ret.push('] ');
        },
        expr: e => {
            if (e.type === 'ref') {
                m.ref(e);
                return;
            }
            // lists can become incorrect with an additional set of parentheses
            if (e.type === 'list') {
                m.super().expr(e);
                return;
            }
            // this forces to respect precedence
            // (however, it will introduce lots of unecessary parenthesis)
            ret.push('(');
            m.super().expr(e);
            ret.push(')');
        },
        callOverlay: o => {
            ret.push('OVERLAY(');
            m.expr(o.value);
            ret.push(' PLACING ');
            m.expr(o.placing);
            ret.push(' FROM ');
            m.expr(o.from);
            if (o.for) {
                ret.push(' FOR ');
                m.expr(o.for);
            }
            ret.push(')');
        },
        callSubstring: s => {
            ret.push('SUBSTRING(');
            m.expr(s.value);
            if (s.from) {
                ret.push(' FROM ');
                m.expr(s.from);
            }
            if (s.for) {
                ret.push(' FOR ');
                m.expr(s.for);
            }
            ret.push(')');
        },
        binary: v => {
            m.expr(v.left);
            visitOp(v);
            m.expr(v.right);
        },
        call: v => {
            visitQualifiedName(v.function);
            ret.push('(');
            if (v.distinct) {
                ret.push(v.distinct, ' ');
            }
            list(v.args, e => m.expr(e), false);
            if (v.orderBy) {
                visitOrderBy(m, v.orderBy);
            }
            ret.push(') ');
            if (v.filter) {
                ret.push('filter (where ');
                m.expr(v.filter);
                ret.push(') ');
            }
            if (v.over) {
                ret.push('over (');
                if (v.over.partitionBy) {
                    ret.push('PARTITION BY ');
                    list(v.over.partitionBy, x => m.expr(x), false);
                    ret.push(' ');
                }
                if (v.over.orderBy) {
                    visitOrderBy(m, v.over.orderBy);
                    ret.push(' ');
                }
                ret.push(') ');
            }
        },
        case: c => {
            ret.push('CASE ');
            if (c.value) {
                m.expr(c.value);
            }
            for (const e of c.whens) {
                ret.push(' WHEN ');
                m.expr(e.when);
                ret.push(' THEN ');
                m.expr(e.value);
            }
            if (c.else) {
                ret.push(' ELSE ');
                m.expr(c.else);
            }
            ret.push(' END ');
        },
        cast: c => {
            m.expr(c.operand);
            ret.push('::');
            m.dataType(c.to);
        },
        constant: c => {
            switch (c.type) {
                case 'boolean':
                    ret.push(c.value ? 'true' : 'false');
                    break;
                case 'integer':
                    ret.push(c.value.toString(10));
                    break;
                case 'numeric':
                    ret.push(c.value.toString());
                    if (Number.isInteger(c.value)) {
                        ret.push('.');
                    }
                    break;
                case 'null':
                    ret.push('null');
                    break;
                case 'constant':
                    break;
                case 'string':
                    ret.push(pg_escape_1.literal(c.value));
                    break;
                default:
                    throw utils_1.NotSupported.never(c);
            }
        },
        valueKeyword: v => {
            ret.push(v.keyword, ' ');
        },
        comment: c => {
            ret.push('COMMENT ON ', c.on.type.toUpperCase(), ' ');
            switch (c.on.type) {
                case 'column':
                    visitQColumn(c.on.column);
                    break;
                default:
                    visitQualifiedName(c.on.name);
                    break;
            }
            ret.push(' IS ', pg_escape_1.literal(c.comment), ' ');
        },
        extract: v => {
            ret.push('EXTRACT (', v.field.name.toUpperCase(), ' FROM ');
            m.expr(v.from);
            ret.push(') ');
        },
        createColumn: c => {
            var _a;
            ret.push(name(c.name), ' ');
            m.dataType(c.dataType);
            ret.push(' ');
            if (c.collate) {
                ret.push('COLLATE ');
                visitQualifiedName(c.collate);
            }
            for (const cst of (_a = c.constraints) !== null && _a !== void 0 ? _a : []) {
                m.constraint(cst);
            }
        },
        begin: beg => {
            ret.push('BEGIN ');
            if (beg.isolationLevel) {
                ret.push('ISOLATION LEVEL ', beg.isolationLevel.toUpperCase(), ' ');
            }
            if (beg.writeable) {
                ret.push(beg.writeable.toUpperCase(), ' ');
            }
            if (typeof beg.deferrable === 'boolean') {
                if (!beg.deferrable) {
                    ret.push('NOT ');
                }
                ret.push('DEFERRABLE ');
            }
        },
        alterSequence: cs => {
            ret.push('ALTER SEQUENCE ');
            if (cs.ifExists) {
                ret.push('IF EXISTS ');
            }
            visitQualifiedName(cs.name);
            switch (cs.change.type) {
                case 'set options':
                    visitSeqOpts(m, cs.change);
                    break;
                case 'rename':
                    ret.push('RENAME TO ', name(cs.change.newName), ' ');
                    break;
                case 'set schema':
                    ret.push('SET SCHEMA ', name(cs.change.newSchema), ' ');
                    break;
                case 'owner to':
                    cs.change.owner;
                    ret.push('OWNER TO ', name(cs.change.owner), ' ');
                    break;
                default:
                    throw utils_1.NotSupported.never(cs.change);
            }
        },
        createSequence: cs => {
            ret.push('CREATE ');
            if (cs.temp) {
                ret.push('TEMPORARY ');
            }
            ret.push('SEQUENCE ');
            if (cs.ifNotExists) {
                ret.push('IF NOT EXISTS ');
            }
            visitQualifiedName(cs.name);
            visitSeqOpts(m, cs.options);
        },
        dropTable: val => {
            ret.push('DROP TABLE ');
            if (val.ifExists) {
                ret.push('IF EXISTS ');
            }
            m.tableRef(val.name);
        },
        dropIndex: val => {
            ret.push('DROP INDEX ');
            if (val.concurrently) {
                ret.push('CONCURRENTLY ');
            }
            if (val.ifExists) {
                ret.push('IF EXISTS ');
            }
            m.tableRef(val.name);
        },
        dropSequence: val => {
            ret.push('DROP SEQUENCE ');
            if (val.ifExists) {
                ret.push('IF EXISTS ');
            }
            m.tableRef(val.name);
        },
        constraint: cst => {
            if (cst.constraintName) {
                ret.push(' CONSTRAINT ', name(cst.constraintName), ' ');
            }
            switch (cst.type) {
                case 'not null':
                case 'null':
                case 'primary key':
                case 'unique':
                    ret.push(' ', cst.type, ' ');
                    return;
                case 'default':
                    ret.push(' DEFAULT ');
                    m.expr(cst.default);
                    break;
                case 'check':
                    ret.push(' CHECK ');
                    m.expr(cst.expr);
                    break;
                case 'add generated':
                    ret.push(' GENERATED ');
                    visitGenerated(m, cst);
                    break;
                default:
                    throw utils_1.NotSupported.never(cst);
            }
        },
        do: d => {
            ret.push('DO');
            if (d.language) {
                ret.push(' LANGUAGE ', d.language.name);
            }
            ret.push(' $$', d.code, '$$');
        },
        createFunction: c => {
            ret.push(c.orReplace ? 'CREATE OR REPLACE FUNCTION ' : 'CREATE FUNCTION ');
            visitQualifiedName(c.name);
            // args
            list(c.arguments, a => {
                if (a.mode) {
                    ret.push(a.mode, ' ');
                }
                if (a.name) {
                    ret.push(name(a.name), ' ');
                }
                m.dataType(a.type);
            }, true);
            // ret type
            if (c.returns) {
                switch (c.returns.kind) {
                    case 'table':
                        ret.push(' RETURNS TABLE ');
                        list(c.returns.columns, t => {
                            ret.push(name(t.name), ' ');
                            m.dataType(t.type);
                        }, true);
                        break;
                    case undefined:
                    case null:
                    case 'array':
                        ret.push(' RETURNS ');
                        m.dataType(c.returns);
                        break;
                    default:
                        throw utils_1.NotSupported.never(c.returns);
                }
            }
            ret.push(' AS $$', c.code, '$$');
            // function settings
            if (c.language) {
                ret.push('LANGUAGE ', c.language.name, ' ');
            }
            if (c.purity) {
                ret.push(c.purity.toUpperCase(), ' ');
            }
            if (typeof c.leakproof === 'boolean') {
                ret.push(c.leakproof ? 'LEAKPROOF ' : 'NOT LEAKPROOF ');
            }
            switch (c.onNullInput) {
                case 'call':
                    ret.push('CALLED ON NULL INPUT ');
                    break;
                case 'null':
                    ret.push('RETURNS NULL ON NULL INPUT ');
                    break;
                case 'strict':
                    ret.push('STRICT ');
                    break;
                case null:
                case undefined:
                    break;
                default:
                    throw utils_1.NotSupported.never(c.onNullInput);
            }
        },
        with: w => {
            ret.push('WITH ');
            list(w.bind, b => {
                ret.push(name(b.alias), ' AS (');
                m.statement(b.statement);
                ret.push(') ');
            }, false);
            m.statement(w.in);
        },
        withRecursive: val => {
            ret.push('WITH RECURSIVE ', name(val.alias), '(', ...val.columnNames.map(name).join(', '), ') AS (');
            m.union(val.bind);
            ret.push(') ');
            m.statement(val.in);
        },
        setGlobal: g => {
            ret.push('SET ', name(g.variable), ' = ');
            visitSetVal(g.set);
        },
        setTimezone: g => {
            ret.push('SET TIME ZONE ');
            switch (g.to.type) {
                case 'default':
                case 'local':
                    ret.push(g.to.type.toUpperCase(), ' ');
                    break;
                case 'value':
                    ret.push(typeof g.to.value === 'string'
                        ? pg_escape_1.literal(g.to.value)
                        : g.to.value.toString(10));
                    break;
                case 'interval':
                    ret.push('INTERVAL ', pg_escape_1.literal(g.to.value), ' HOUR TO MINUTE');
                    break;
                default:
                    throw utils_1.NotSupported.never(g.to);
            }
        },
        dataType: d => {
            var _a;
            if ((d === null || d === void 0 ? void 0 : d.kind) === 'array') {
                m.dataType(d.arrayOf);
                ret.push('[]');
                return;
            }
            if (!(d === null || d === void 0 ? void 0 : d.name)) {
                ret.push('unkown');
                return;
            }
            if (d.schema) {
                visitQualifiedName(d);
            }
            else {
                // see https://www.postgresql.org/docs/13/datatype.html
                // & issue https://github.com/oguimbal/pgsql-ast-parser/issues/38
                switch (d.name) {
                    case 'double precision':
                    case 'character varying':
                    case 'bit varying':
                    case 'time without time zone':
                    case 'timestamp without time zone':
                    case 'time with time zone':
                    case 'timestamp with time zone':
                        ret.push(d.name, ' ');
                        break;
                    default:
                        visitQualifiedName(d);
                        break;
                }
            }
            if ((_a = d.config) === null || _a === void 0 ? void 0 : _a.length) {
                list(d.config, v => ret.push(v.toString(10)), true);
            }
        },
        createIndex: c => {
            ret.push(c.unique ? 'CREATE UNIQUE INDEX ' : 'CREATE INDEX ');
            if (c.ifNotExists) {
                ret.push(' IF NOT EXISTS ');
            }
            if (c.indexName) {
                ret.push(name(c.indexName), ' ');
            }
            ret.push('ON ');
            m.tableRef(c.table);
            if (c.using) {
                ret.push('USING ', name(c.using), ' ');
            }
            list(c.expressions, e => {
                m.expr(e.expression);
                ret.push(' ');
                if (e.collate) {
                    ret.push('COLLATE ');
                    visitQualifiedName(e.collate);
                }
                if (e.opclass) {
                    visitQualifiedName(e.opclass);
                }
                if (e.order) {
                    ret.push(e.order, ' ');
                }
                if (e.nulls) {
                    ret.push('nulls ', e.nulls, ' ');
                }
            }, true);
            ret.push(' ');
        },
        createTable: t => {
            var _a;
            ret.push('CREATE ');
            if (t.locality) {
                ret.push(t.locality.toUpperCase(), ' ');
            }
            if (t.temporary) {
                ret.push('TEMPORARY ');
            }
            if (t.unlogged) {
                ret.push('UNLOGGED ');
            }
            ret.push(t.ifNotExists ? 'TABLE IF NOT EXISTS ' : 'TABLE ');
            m.tableRef(t.name);
            ret.push('(');
            list(t.columns, c => {
                switch (c.kind) {
                    case 'column':
                        return m.createColumn(c);
                    case 'like table':
                        return m.likeTable(c);
                    default:
                        throw utils_1.NotSupported.never(c);
                }
            }, false);
            if (t.constraints) {
                ret.push(', ');
                list(t.constraints, c => {
                    const cname = c.constraintName;
                    if (cname) {
                        ret.push('CONSTRAINT ', name(cname), ' ');
                    }
                    addConstraint(c, m);
                }, false);
            }
            ret.push(') ');
            if ((_a = t.inherits) === null || _a === void 0 ? void 0 : _a.length) {
                ret.push(' INHERITS ');
                list(t.inherits, i => visitQualifiedName(i), true);
            }
        },
        likeTable: l => {
            ret.push(' LIKE ');
            m.tableRef(l.like);
            ret.push(' ');
            for (const { verb, option } of l.options) {
                ret.push(verb.toUpperCase(), ' ', option.toUpperCase(), ' ');
            }
        },
        createSchema: s => {
            ret.push(s.ifNotExists ? 'CREATE SCHEMA IF NOT EXISTS ' : 'CREATE SCHEMA ');
            ret.push(name(s.name));
        },
        truncateTable: t => {
            ret.push('TRUNCATE TABLE ');
            let first = true;
            for (const tbl of t.tables) {
                if (!first) {
                    ret.push(', ');
                }
                first = false;
                m.tableRef(tbl);
            }
            if (t.identity) {
                switch (t.identity) {
                    case 'restart':
                        ret.push(' RESTART IDENTITY ');
                        break;
                    case 'continue':
                        ret.push(' CONTINUE IDENTITY ');
                        break;
                }
            }
        },
        delete: t => {
            ret.push('DELETE FROM ');
            m.tableRef(t.from);
            if (t.where) {
                ret.push(' WHERE ');
                m.expr(t.where);
            }
            if (t.returning) {
                ret.push(' RETURNING ');
                list(t.returning, r => m.selectionColumn(r), false);
            }
            ret.push(' ');
        },
        dropColumn: t => {
            ret.push(' DROP COLUMN ');
            if (t.ifExists) {
                ret.push(' IF EXISTS ');
            }
            ret.push(name(t.column));
        },
        from: t => m.super().from(t),
        fromCall: s => {
            join(m, s.join, () => {
                m.call(s);
                if (s.alias) {
                    ret.push(' AS ', name(s.alias), ' ');
                }
            });
            ret.push(' ');
        },
        fromStatement: s => {
            // todo: use 's.db' if defined
            join(m, s.join, () => {
                ret.push('(');
                m.select(s.statement);
                ret.push(') ');
                if (s.alias) {
                    ret.push(' AS ', ident(s.alias));
                    if (s.columnNames) {
                        list(s.columnNames, c => ret.push(name(c)), true);
                    }
                    ret.push(' ');
                }
            });
            ret.push(' ');
        },
        values: s => {
            ret.push('VALUES ');
            list(s.values, vlist => {
                list(vlist, e => {
                    m.expr(e);
                }, true);
            }, false);
        },
        fromTable: s => {
            join(m, s.join, () => {
                m.tableRef(s.name);
                if (s.name.columnNames) {
                    if (!s.name.alias) {
                        throw new Error('Cannot specify aliased column names without an alias');
                    }
                    list(s.name.columnNames, c => ret.push(name(c)), true);
                }
            });
        },
        join: j => {
            throw new Error('Should not happen 💀');
        },
        insert: i => {
            ret.push('INSERT INTO ');
            m.tableRef(i.into);
            if (i.columns) {
                ret.push('(', i.columns.map(name).join(', '), ')');
            }
            ret.push(' ');
            if (i.overriding) {
                ret.push('OVERRIDING ', i.overriding.toUpperCase(), ' VALUE ');
            }
            m.select(i.insert);
            ret.push(' ');
            if (i.onConflict) {
                ret.push('ON CONFLICT ');
                if (i.onConflict.on) {
                    list(i.onConflict.on, e => m.expr(e), true);
                }
                if (i.onConflict.do === 'do nothing') {
                    ret.push(' DO NOTHING');
                }
                else {
                    ret.push(' DO UPDATE SET ');
                    list(i.onConflict.do.sets, s => m.set(s), false);
                }
                ret.push(' ');
            }
            if (i.returning) {
                ret.push(' RETURNING ');
                list(i.returning, r => m.selectionColumn(r), false);
            }
        },
        raise: r => {
            var _a, _b;
            ret.push('RAISE ');
            if (r.level) {
                ret.push(r.level.toUpperCase(), ' ');
            }
            ret.push(pg_escape_1.literal(r.format), ' ');
            if ((_a = r.formatExprs) === null || _a === void 0 ? void 0 : _a.length) {
                ret.push(', ');
                list(r.formatExprs, e => m.expr(e), false);
            }
            if ((_b = r.using) === null || _b === void 0 ? void 0 : _b.length) {
                ret.push(' USING ');
                list(r.using, ({ type, value }) => {
                    ret.push(type.toUpperCase(), '=');
                    m.expr(value);
                }, false);
            }
            ret.push(' ');
        },
        default: () => {
            ret.push(' DEFAULT ');
        },
        member: e => {
            m.expr(e.operand);
            ret.push(e.op);
            ret.push(typeof e.member === 'number'
                ? e.member.toString(10)
                : pg_escape_1.literal(e.member));
        },
        ref: r => {
            if (r.table) {
                visitQualifiedName(r.table);
                ret.push('.');
            }
            ret.push(r.name === '*' ? '*' : ident(r.name));
        },
        parameter: p => {
            ret.push(p.name);
        },
        renameColumn: r => {
            ret.push(' RENAME COLUMN ', name(r.column), ' TO ', name(r.to));
        },
        renameConstraint: r => {
            ret.push(' RENAME CONSTRAINT ', name(r.constraint), ' TO ', name(r.to));
        },
        renameTable: r => {
            ret.push(' RENAME TO ', name(r.to));
        },
        createView: c => {
            ret.push('CREATE ');
            if (c.orReplace) {
                ret.push('OR REPLACE ');
            }
            if (c.temp) {
                ret.push('TEMP ');
            }
            if (c.recursive) {
                ret.push('RECURSIVE ');
            }
            ret.push('VIEW ');
            m.tableRef(c.name);
            if (c.columnNames) {
                list(c.columnNames, c => ret.push(name(c)), true);
            }
            const opts = c.parameters && Object.entries(c.parameters);
            if (opts === null || opts === void 0 ? void 0 : opts.length) {
                ret.push(' WITH ');
                list(opts, ([k, v]) => ret.push(k, '=', v), false);
            }
            ret.push(' AS ');
            m.select(c.query);
            if (c.checkOption) {
                ret.push(' WITH ', c.checkOption.toUpperCase(), ' CHECK OPTION');
            }
        },
        createMaterializedView: c => {
            ret.push('CREATE MATERIALIZED VIEW ');
            if (c.ifNotExists) {
                ret.push('IF NOT EXISTS ');
            }
            m.tableRef(c.name);
            if (c.columnNames) {
                list(c.columnNames, c => ret.push(name(c)), true);
            }
            const opts = c.parameters && Object.entries(c.parameters);
            if (opts === null || opts === void 0 ? void 0 : opts.length) {
                ret.push(' WITH ');
                list(opts, ([k, v]) => ret.push(k, '=', v), false);
            }
            if (c.tablespace) {
                ret.push(' TABLESPACE ', name(c.tablespace));
            }
            ret.push(' AS ');
            m.select(c.query);
            if (typeof c.withData === 'boolean') {
                ret.push(c.withData ? ' WITH DATA' : ' WITH NO DATA');
            }
        },
        select: s => m.super().select(s),
        selection: s => {
            ret.push('SELECT ');
            if (s.distinct) {
                if (typeof s.distinct === 'string') {
                    ret.push(s.distinct.toUpperCase());
                }
                else {
                    ret.push(' DISTINCT ON ');
                    list(s.distinct, v => m.expr(v), true);
                }
                ret.push(' ');
            }
            if (s.columns) {
                list(s.columns, c => m.selectionColumn(c), false);
            }
            ret.push(' ');
            if (s.from) {
                ret.push('FROM ');
                for (const f of s.from) {
                    m.from(f);
                }
                ret.push(' ');
            }
            if (s.where) {
                ret.push('WHERE ');
                m.expr(s.where);
                ret.push(' ');
            }
            if (s.groupBy) {
                ret.push('GROUP BY ');
                list(s.groupBy, e => m.expr(e), false);
                ret.push(' ');
            }
            if (s.orderBy) {
                visitOrderBy(m, s.orderBy);
                ret.push(' ');
            }
            if (s.limit) {
                if (s.limit.offset) {
                    ret.push(`OFFSET `);
                    m.expr(s.limit.offset);
                    if (s.limit.limit) {
                        ret.push(`FETCH `);
                        m.expr(s.limit.limit);
                    }
                }
                else if (s.limit.limit) {
                    ret.push(`LIMIT `);
                    m.expr(s.limit.limit);
                }
            }
        },
        show: s => {
            ret.push('SHOW ', name(s.variable));
        },
        prepare: s => {
            var _a;
            ret.push('PREPARE ', name(s.name));
            if ((_a = s.args) === null || _a === void 0 ? void 0 : _a.length) {
                list(s.args, a => m.dataType(a), true);
            }
            ret.push(' AS ');
            m.statement(s.statement);
        },
        arraySelect: s => {
            ret.push('array(');
            m.select(s.select);
            ret.push(')');
        },
        union: s => {
            ret.push('(');
            m.statement(s.left);
            ret.push(') ', s.type.toUpperCase(), ' ');
            if (s.right.type === 'union' || s.right.type === 'union all') {
                m.union(s.right);
            }
            else {
                ret.push('(');
                m.statement(s.right);
                ret.push(')');
            }
        },
        selectionColumn: c => {
            m.expr(c.expr);
            if (c.alias) {
                ret.push(' AS ', name(c.alias));
            }
            ret.push(' ');
        },
        set: s => {
            ret.push(name(s.column), ' = ');
            if (s.value === 'default') {
                ret.push('default');
            }
            else {
                m.expr(s.value);
            }
            ret.push(' ');
        },
        statement: s => m.super().statement(s),
        tableRef: r => {
            visitQualifiedName(r);
            if (r.alias) {
                ret.push(' AS ', ident(r.alias));
            }
            ret.push(' ');
        },
        ternary: t => {
            m.expr(t.value);
            ret.push(' ', t.op, ' ');
            m.expr(t.lo);
            ret.push(' AND ');
            m.expr(t.hi);
            ret.push(' ');
        },
        transaction: t => {
            ret.push(t.type);
        },
        unary: t => {
            switch (t.op) {
                case '+':
                case '-':
                    // prefix ops
                    visitOp(t);
                    m.expr(t.operand);
                    break;
                case 'NOT':
                    // prefix ops
                    ret.push(t.op);
                    ret.push(' ');
                    m.expr(t.operand);
                    break;
                default:
                    // postfix ops
                    m.expr(t.operand);
                    ret.push(' ');
                    ret.push(t.op);
            }
        },
        update: u => {
            ret.push('UPDATE ');
            m.tableRef(u.table);
            ret.push(' SET ');
            list(u.sets, s => m.set(s), false);
            ret.push(' ');
            if (u.where) {
                ret.push('WHERE ');
                m.expr(u.where);
                ret.push(' ');
            }
            if (u.returning) {
                ret.push(' RETURNING ');
                list(u.returning, r => m.selectionColumn(r), false);
                ret.push(' ');
            }
        },
    }));
    exports.toSql = {};
    const proto = ast_mapper_1.AstDefaultMapper.prototype;
    for (const k of Object.getOwnPropertyNames(proto)) {
        const orig = proto[k];
        if (k === 'constructor' || k === 'super' || typeof orig !== 'function') {
            continue;
        }
        exports.toSql[k] = function (...args) {
            try {
                visitor[k].apply(visitor, args);
                return ret.join('').trim();
            }
            finally {
                ret = [];
            }
        };
    }


    /***/ }),
    /* 20 */
    /***/ (function(module, exports, __webpack_require__) {

    // stolen from https://github.com/segmentio/pg-escape/blob/master/index.js
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.literal = void 0;
    function literal(val) {
        if (null == val)
            return 'NULL';
        if (Array.isArray(val)) {
            var vals = val.map(literal);
            return "(" + vals.join(", ") + ")";
        }
        var backslash = ~val.indexOf('\\');
        var prefix = backslash ? 'E' : '';
        val = val.replace(/'/g, "''");
        val = val.replace(/\\/g, '\\\\');
        return prefix + "'" + val + "'";
    }
    exports.literal = literal;


    /***/ }),
    /* 21 */
    /***/ (function(module, exports, __webpack_require__) {

    Object.defineProperty(exports, "__esModule", { value: true });
    exports.locationOf = void 0;
    function locationOf(node) {
        const n = node._location;
        if (!n) {
            throw new Error('This statement has not been parsed using location tracking (which has a small performance hit). ');
        }
        return n;
    }
    exports.locationOf = locationOf;


    /***/ })
    /******/ ])));

    });

    var postgres = createCommonjsModule(function (module, exports) {
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.PostgreSQLParser = void 0;

    class PostgreSQLParser {
        constructor() { }
        // Auto Increment에 해당하는 타입인지 체크
        // postgres의 경우에는 시퀀스를 자동 생성해주는 타입
        checkAutoIncrement(typename) {
            return ["serial", "serial8", "bigserial"].includes(typename.toLowerCase());
        }
        // 데이터베이스 타입 일반화
        normalizeDbType(typename) {
            if (typename.toLowerCase() === "serial") {
                return "int";
            }
            else if (["serial8", "bigserial"].includes(typename.toLowerCase())) {
                return "int8";
            }
            else {
                return typename;
            }
        }
        // 데이터베이스의 컬럼타입을 타입스크립트 타입으로 변환
        convertDbTypeToTsType(typename) {
            if (["text", "varchar"].includes(typename.toLocaleLowerCase())) {
                return "string";
            }
            else if (["bool", "boolean"].includes(typename.toLocaleLowerCase())) {
                return "boolean";
            }
            else if (["int", "int2", "int4", "int8", "bigint"].includes(typename.toLocaleLowerCase())) {
                return "number";
            }
            else if (["timestamp", "timestamptz", "date"].includes(typename.toLocaleLowerCase())) {
                return "Date";
            }
            else if (typename[0] === "_") {
                return this.convertDbTypeToTsType(typename.slice(1)) + "[]";
            }
            else {
                return "string";
            }
        }
        convertDbTypeToJavaType(typename) {
            if (["text", "varchar"].includes(typename.toLocaleLowerCase())) {
                return "String";
            }
            else if (["bool", "boolean"].includes(typename.toLocaleLowerCase())) {
                return "Boolean";
            }
            else if (["int", "int2", "int4", "int8", "bigint"].includes(typename.toLocaleLowerCase())) {
                switch (typename.toLocaleLowerCase()) {
                    case "int":
                    case "int2":
                    case "int4":
                        return "Integer";
                    case "int8":
                    case "bigint":
                        return "Long";
                }
            }
            else if (["timestamp", "timestamptz", "date"].includes(typename.toLocaleLowerCase())) {
                return "LocalDateTime";
            }
            else {
                return "String";
            }
        }
        convertDbTypeToSQLAlchemyType(typename) {
            if (["text", "varchar"].includes(typename.toLocaleLowerCase())) {
                return "String";
            }
            else if (["bool", "boolean"].includes(typename.toLocaleLowerCase())) {
                return "Boolean";
            }
            else if (["int", "int2", "int4", "int8", "bigint"].includes(typename.toLocaleLowerCase())) {
                switch (typename.toLocaleLowerCase()) {
                    case "int":
                    case "int2":
                    case "int4":
                        return "Integer";
                    case "int8":
                    case "bigint":
                        return "BigInteger";
                }
            }
            else if (["timestamp", "timestamptz", "date"].includes(typename.toLocaleLowerCase())) {
                return "DateTime";
            }
            else {
                return "String";
            }
        }
        // 파싱
        parse(sql) {
            var _a, _b;
            const parsedList = (0, pgsqlAstParser.parse)(sql);
            const tables = [];
            for (const node of parsedList) {
                switch (node.type) {
                    case "create table":
                        tables.push(this.parseTable(node));
                        break;
                    case "comment":
                        this.parseComment(node, tables);
                        break;
                    case "alter table":
                        if (((_b = (_a = node === null || node === void 0 ? void 0 : node.change) === null || _a === void 0 ? void 0 : _a.constraint) === null || _b === void 0 ? void 0 : _b.type) === "primary key") {
                            this.parsePrimaryKey(node, tables);
                        }
                        break;
                    default:
                        console.log("예외 케이스");
                        console.log(node);
                        break;
                }
            }
            return tables;
        }
        // 테이블 구성 분석
        parseTable(node) {
            var _a, _b, _c, _d;
            const table = {
                tableName: (_a = node === null || node === void 0 ? void 0 : node.name) === null || _a === void 0 ? void 0 : _a.name,
                columns: [],
            };
            for (const nodeOfTable of node.columns) {
                switch (nodeOfTable.kind) {
                    case "column":
                        const columnName = (_b = nodeOfTable === null || nodeOfTable === void 0 ? void 0 : nodeOfTable.name) === null || _b === void 0 ? void 0 : _b.name;
                        const dbType = (_c = nodeOfTable === null || nodeOfTable === void 0 ? void 0 : nodeOfTable.dataType) === null || _c === void 0 ? void 0 : _c.name;
                        const normalizedDbType = this.normalizeDbType(dbType);
                        const isAutoIncrement = this.checkAutoIncrement(dbType);
                        let isNotNull = false;
                        let isPrimaryKey = false;
                        let defaultValue = null;
                        for (const nodeOfConstraints of nodeOfTable === null || nodeOfTable === void 0 ? void 0 : nodeOfTable.constraints) {
                            switch (nodeOfConstraints.type) {
                                case "not null":
                                    isNotNull = true;
                                    break;
                                case "default":
                                    defaultValue = (_d = nodeOfConstraints === null || nodeOfConstraints === void 0 ? void 0 : nodeOfConstraints.default) === null || _d === void 0 ? void 0 : _d.keyword;
                            }
                        }
                        const column = {
                            name: columnName,
                            dbType: normalizedDbType,
                            tsType: this.convertDbTypeToTsType(normalizedDbType),
                            javaType: this.convertDbTypeToJavaType(normalizedDbType),
                            pythonType: this.convertDbTypeToSQLAlchemyType(normalizedDbType),
                            isNotNull,
                            isPrimaryKey,
                            default: defaultValue,
                            isAutoIncrement,
                            comment: "",
                        };
                        table.columns.push(column);
                        break;
                }
            }
            return table;
        }
        // 코멘트 분석
        parseComment(node, tables) {
            var _a, _b, _c, _d, _e, _f;
            const commentContents = node === null || node === void 0 ? void 0 : node.comment;
            const commentTargetTableName = (_b = (_a = node === null || node === void 0 ? void 0 : node.on) === null || _a === void 0 ? void 0 : _a.column) === null || _b === void 0 ? void 0 : _b.table;
            const commentTargetColumnName = (_d = (_c = node === null || node === void 0 ? void 0 : node.on) === null || _c === void 0 ? void 0 : _c.column) === null || _d === void 0 ? void 0 : _d.column;
            const commenttargetColumn = (_f = (_e = tables
                .find((e) => e.tableName === commentTargetTableName)) === null || _e === void 0 ? void 0 : _e.columns) === null || _f === void 0 ? void 0 : _f.find((e) => e.name === commentTargetColumnName);
            if (commenttargetColumn) {
                commenttargetColumn.comment = commentContents;
            }
        }
        // 기본키 분석
        parsePrimaryKey(node, tables) {
            var _a, _b, _c, _d, _e, _f, _g, _h, _j;
            const pkTargetColumnNames = (_c = (_b = (_a = node === null || node === void 0 ? void 0 : node.change) === null || _a === void 0 ? void 0 : _a.constraint) === null || _b === void 0 ? void 0 : _b.columns) === null || _c === void 0 ? void 0 : _c.map((e) => e === null || e === void 0 ? void 0 : e.name);
            const pkTargetTableName = (_d = node === null || node === void 0 ? void 0 : node.table) === null || _d === void 0 ? void 0 : _d.name;
            // not use
            (_g = (_f = (_e = node === null || node === void 0 ? void 0 : node.change) === null || _e === void 0 ? void 0 : _e.constraint) === null || _f === void 0 ? void 0 : _f.constraintName) === null || _g === void 0 ? void 0 : _g.name;
            (_j = (_h = tables
                .find((e) => e.tableName === pkTargetTableName)) === null || _h === void 0 ? void 0 : _h.columns) === null || _j === void 0 ? void 0 : _j.forEach((e) => {
                if (pkTargetColumnNames.includes(e.name)) {
                    e.isPrimaryKey = true;
                }
            });
        }
    }
    exports.PostgreSQLParser = PostgreSQLParser;

    });

    var strings = createCommonjsModule(function (module, exports) {
    /**
     * @license
     * Copyright Google LLC All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.levenshtein = exports.capitalize = exports.underscore = exports.classify = exports.camelize = exports.dasherize = exports.decamelize = void 0;
    const STRING_DASHERIZE_REGEXP = /[ _]/g;
    const STRING_DECAMELIZE_REGEXP = /([a-z\d])([A-Z])/g;
    const STRING_CAMELIZE_REGEXP = /(-|_|\.|\s)+(.)?/g;
    const STRING_UNDERSCORE_REGEXP_1 = /([a-z\d])([A-Z]+)/g;
    const STRING_UNDERSCORE_REGEXP_2 = /-|\s+/g;
    /**
     * Converts a camelized string into all lower case separated by underscores.
     *
     ```javascript
     decamelize('innerHTML');         // 'inner_html'
     decamelize('action_name');       // 'action_name'
     decamelize('css-class-name');    // 'css-class-name'
     decamelize('my favorite items'); // 'my favorite items'
     ```

     @method decamelize
     @param {String} str The string to decamelize.
     @return {String} the decamelized string.
     */
    function decamelize(str) {
        return str.replace(STRING_DECAMELIZE_REGEXP, '$1_$2').toLowerCase();
    }
    exports.decamelize = decamelize;
    /**
     Replaces underscores, spaces, or camelCase with dashes.

     ```javascript
     dasherize('innerHTML');         // 'inner-html'
     dasherize('action_name');       // 'action-name'
     dasherize('css-class-name');    // 'css-class-name'
     dasherize('my favorite items'); // 'my-favorite-items'
     ```

     @method dasherize
     @param {String} str The string to dasherize.
     @return {String} the dasherized string.
     */
    function dasherize(str) {
        return decamelize(str).replace(STRING_DASHERIZE_REGEXP, '-');
    }
    exports.dasherize = dasherize;
    /**
     Returns the lowerCamelCase form of a string.

     ```javascript
     camelize('innerHTML');          // 'innerHTML'
     camelize('action_name');        // 'actionName'
     camelize('css-class-name');     // 'cssClassName'
     camelize('my favorite items');  // 'myFavoriteItems'
     camelize('My Favorite Items');  // 'myFavoriteItems'
     ```

     @method camelize
     @param {String} str The string to camelize.
     @return {String} the camelized string.
     */
    function camelize(str) {
        return str
            .replace(STRING_CAMELIZE_REGEXP, (_match, _separator, chr) => {
            return chr ? chr.toUpperCase() : '';
        })
            .replace(/^([A-Z])/, (match) => match.toLowerCase());
    }
    exports.camelize = camelize;
    /**
     Returns the UpperCamelCase form of a string.

     ```javascript
     'innerHTML'.classify();          // 'InnerHTML'
     'action_name'.classify();        // 'ActionName'
     'css-class-name'.classify();     // 'CssClassName'
     'my favorite items'.classify();  // 'MyFavoriteItems'
     ```

     @method classify
     @param {String} str the string to classify
     @return {String} the classified string
     */
    function classify(str) {
        return str
            .split('.')
            .map((part) => capitalize(camelize(part)))
            .join('.');
    }
    exports.classify = classify;
    /**
     More general than decamelize. Returns the lower\_case\_and\_underscored
     form of a string.

     ```javascript
     'innerHTML'.underscore();          // 'inner_html'
     'action_name'.underscore();        // 'action_name'
     'css-class-name'.underscore();     // 'css_class_name'
     'my favorite items'.underscore();  // 'my_favorite_items'
     ```

     @method underscore
     @param {String} str The string to underscore.
     @return {String} the underscored string.
     */
    function underscore(str) {
        return str
            .replace(STRING_UNDERSCORE_REGEXP_1, '$1_$2')
            .replace(STRING_UNDERSCORE_REGEXP_2, '_')
            .toLowerCase();
    }
    exports.underscore = underscore;
    /**
     Returns the Capitalized form of a string

     ```javascript
     'innerHTML'.capitalize()         // 'InnerHTML'
     'action_name'.capitalize()       // 'Action_name'
     'css-class-name'.capitalize()    // 'Css-class-name'
     'my favorite items'.capitalize() // 'My favorite items'
     ```

     @method capitalize
     @param {String} str The string to capitalize.
     @return {String} The capitalized string.
     */
    function capitalize(str) {
        return str.charAt(0).toUpperCase() + str.substr(1);
    }
    exports.capitalize = capitalize;
    /**
     * Calculate the levenshtein distance of two strings.
     * See https://en.wikipedia.org/wiki/Levenshtein_distance.
     * Based off https://gist.github.com/andrei-m/982927 (for using the faster dynamic programming
     * version).
     *
     * @param a String a.
     * @param b String b.
     * @returns A number that represents the distance between the two strings. The greater the number
     *   the more distant the strings are from each others.
     */
    function levenshtein(a, b) {
        if (a.length == 0) {
            return b.length;
        }
        if (b.length == 0) {
            return a.length;
        }
        const matrix = [];
        // increment along the first column of each row
        for (let i = 0; i <= b.length; i++) {
            matrix[i] = [i];
        }
        // increment each column in the first row
        for (let j = 0; j <= a.length; j++) {
            matrix[0][j] = j;
        }
        // Fill in the rest of the matrix
        for (let i = 1; i <= b.length; i++) {
            for (let j = 1; j <= a.length; j++) {
                if (b.charAt(i - 1) == a.charAt(j - 1)) {
                    matrix[i][j] = matrix[i - 1][j - 1];
                }
                else {
                    matrix[i][j] = Math.min(matrix[i - 1][j - 1] + 1, // substitution
                    matrix[i][j - 1] + 1, // insertion
                    matrix[i - 1][j] + 1);
                }
            }
        }
        return matrix[b.length][a.length];
    }
    exports.levenshtein = levenshtein;
    });

    const UPPERCASE = /[\p{Lu}]/u;
    const LOWERCASE = /[\p{Ll}]/u;
    const LEADING_CAPITAL = /^[\p{Lu}](?![\p{Lu}])/gu;
    const IDENTIFIER = /([\p{Alpha}\p{N}_]|$)/u;
    const SEPARATORS = /[_.\- ]+/;

    const LEADING_SEPARATORS = new RegExp('^' + SEPARATORS.source);
    const SEPARATORS_AND_IDENTIFIER = new RegExp(SEPARATORS.source + IDENTIFIER.source, 'gu');
    const NUMBERS_AND_IDENTIFIER = new RegExp('\\d+' + IDENTIFIER.source, 'gu');

    const preserveCamelCase = (string, toLowerCase, toUpperCase) => {
    	let isLastCharLower = false;
    	let isLastCharUpper = false;
    	let isLastLastCharUpper = false;

    	for (let i = 0; i < string.length; i++) {
    		const character = string[i];

    		if (isLastCharLower && UPPERCASE.test(character)) {
    			string = string.slice(0, i) + '-' + string.slice(i);
    			isLastCharLower = false;
    			isLastLastCharUpper = isLastCharUpper;
    			isLastCharUpper = true;
    			i++;
    		} else if (isLastCharUpper && isLastLastCharUpper && LOWERCASE.test(character)) {
    			string = string.slice(0, i - 1) + '-' + string.slice(i - 1);
    			isLastLastCharUpper = isLastCharUpper;
    			isLastCharUpper = false;
    			isLastCharLower = true;
    		} else {
    			isLastCharLower = toLowerCase(character) === character && toUpperCase(character) !== character;
    			isLastLastCharUpper = isLastCharUpper;
    			isLastCharUpper = toUpperCase(character) === character && toLowerCase(character) !== character;
    		}
    	}

    	return string;
    };

    const preserveConsecutiveUppercase = (input, toLowerCase) => {
    	LEADING_CAPITAL.lastIndex = 0;

    	return input.replace(LEADING_CAPITAL, m1 => toLowerCase(m1));
    };

    const postProcess = (input, toUpperCase) => {
    	SEPARATORS_AND_IDENTIFIER.lastIndex = 0;
    	NUMBERS_AND_IDENTIFIER.lastIndex = 0;

    	return input.replace(SEPARATORS_AND_IDENTIFIER, (_, identifier) => toUpperCase(identifier))
    		.replace(NUMBERS_AND_IDENTIFIER, m => toUpperCase(m));
    };

    const camelCase = (input, options) => {
    	if (!(typeof input === 'string' || Array.isArray(input))) {
    		throw new TypeError('Expected the input to be `string | string[]`');
    	}

    	options = {
    		pascalCase: false,
    		preserveConsecutiveUppercase: false,
    		...options
    	};

    	if (Array.isArray(input)) {
    		input = input.map(x => x.trim())
    			.filter(x => x.length)
    			.join('-');
    	} else {
    		input = input.trim();
    	}

    	if (input.length === 0) {
    		return '';
    	}

    	const toLowerCase = options.locale === false ?
    		string => string.toLowerCase() :
    		string => string.toLocaleLowerCase(options.locale);
    	const toUpperCase = options.locale === false ?
    		string => string.toUpperCase() :
    		string => string.toLocaleUpperCase(options.locale);

    	if (input.length === 1) {
    		return options.pascalCase ? toUpperCase(input) : toLowerCase(input);
    	}

    	const hasUpperCase = input !== toLowerCase(input);

    	if (hasUpperCase) {
    		input = preserveCamelCase(input, toLowerCase, toUpperCase);
    	}

    	input = input.replace(LEADING_SEPARATORS, '');

    	if (options.preserveConsecutiveUppercase) {
    		input = preserveConsecutiveUppercase(input, toLowerCase);
    	} else {
    		input = toLowerCase(input);
    	}

    	if (options.pascalCase) {
    		input = toUpperCase(input.charAt(0)) + input.slice(1);
    	}

    	return postProcess(input, toUpperCase);
    };

    var camelcase = camelCase;
    // TODO: Remove this for the next major release
    var _default = camelCase;
    camelcase.default = _default;

    /******************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */

    var __assign = function() {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };

    typeof SuppressedError === "function" ? SuppressedError : function (error, suppressed, message) {
        var e = new Error(message);
        return e.name = "SuppressedError", e.error = error, e.suppressed = suppressed, e;
    };

    /**
     * Source: ftp://ftp.unicode.org/Public/UCD/latest/ucd/SpecialCasing.txt
     */
    /**
     * Lower case as a function.
     */
    function lowerCase(str) {
        return str.toLowerCase();
    }

    // Support camel case ("camelCase" -> "camel Case" and "CAMELCase" -> "CAMEL Case").
    var DEFAULT_SPLIT_REGEXP = [/([a-z0-9])([A-Z])/g, /([A-Z])([A-Z][a-z])/g];
    // Remove all non-word characters.
    var DEFAULT_STRIP_REGEXP = /[^A-Z0-9]+/gi;
    /**
     * Normalize the string into something other libraries can manipulate easier.
     */
    function noCase(input, options) {
        if (options === void 0) { options = {}; }
        var _a = options.splitRegexp, splitRegexp = _a === void 0 ? DEFAULT_SPLIT_REGEXP : _a, _b = options.stripRegexp, stripRegexp = _b === void 0 ? DEFAULT_STRIP_REGEXP : _b, _c = options.transform, transform = _c === void 0 ? lowerCase : _c, _d = options.delimiter, delimiter = _d === void 0 ? " " : _d;
        var result = replace(replace(input, splitRegexp, "$1\0$2"), stripRegexp, "\0");
        var start = 0;
        var end = result.length;
        // Trim the delimiter from around the output string.
        while (result.charAt(start) === "\0")
            start++;
        while (result.charAt(end - 1) === "\0")
            end--;
        // Transform each token independently.
        return result.slice(start, end).split("\0").map(transform).join(delimiter);
    }
    /**
     * Replace `re` in the input string with the replacement value.
     */
    function replace(input, re, value) {
        if (re instanceof RegExp)
            return input.replace(re, value);
        return re.reduce(function (input, re) { return input.replace(re, value); }, input);
    }

    function dotCase(input, options) {
        if (options === void 0) { options = {}; }
        return noCase(input, __assign({ delimiter: "." }, options));
    }

    function snakeCase(input, options) {
        if (options === void 0) { options = {}; }
        return dotCase(input, __assign({ delimiter: "_" }, options));
    }

    var dist_es2015 = /*#__PURE__*/Object.freeze({
        __proto__: null,
        snakeCase: snakeCase
    });

    var snake_case_1 = /*@__PURE__*/getAugmentedNamespace(dist_es2015);

    var name = createCommonjsModule(function (module, exports) {
    var __importDefault = (commonjsGlobal && commonjsGlobal.__importDefault) || function (mod) {
        return (mod && mod.__esModule) ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.convertNameCaseByOption = exports.toSnakeCase = exports.toCamelCase = exports.toPascalCase = void 0;

    const camelcase_1 = __importDefault(camelcase);

    const lowercased = (name) => {
        const classifiedName = (0, strings.classify)(name);
        return classifiedName.charAt(0).toLowerCase() + classifiedName.slice(1);
    };
    // 식별자를 파스칼케이스로 변환
    function toPascalCase(name) {
        return (0, camelcase_1.default)((0, strings.classify)(name), { pascalCase: true });
    }
    exports.toPascalCase = toPascalCase;
    // 식별자를 카멜케이스로 변환
    function toCamelCase(name) {
        return (0, camelcase_1.default)(lowercased(name));
    }
    exports.toCamelCase = toCamelCase;
    // 식별자를 스네이크케이스로 변환
    function toSnakeCase(name) {
        return (0, snake_case_1.snakeCase)(name);
    }
    exports.toSnakeCase = toSnakeCase;
    function convertNameCaseByOption(option, name) {
        switch (option) {
            case "CAMEL":
                return toCamelCase(name);
            case "SNAKE":
                return toSnakeCase(name);
            case "PASCAL":
                return toPascalCase(name);
            case "NONE":
                return name;
            default:
                return name;
        }
    }
    exports.convertNameCaseByOption = convertNameCaseByOption;

    });

    var tab = createCommonjsModule(function (module, exports) {
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.TAB = void 0;
    exports.TAB = "    ";

    });

    var sequelizeTypescript = createCommonjsModule(function (module, exports) {
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SequelizeTypescriptEmitter = void 0;


    const importTemplate = `import { literal } from 'sequelize';
import {
  Model,
  Table,
  Column,
  HasMany,
  CreatedAt,
  UpdatedAt,
  DeletedAt,
  DataType,
  Sequelize,
  HasOne,
  DefaultScope,
  Scopes,
  Index,
  createIndexDecorator,
  ForeignKey,
  BelongsTo,
  PrimaryKey,
  AllowNull,
  Default,
  Comment,
} from 'sequelize-typescript';
`;
    class SequelizeTypescriptEmitter {
        dbTypeToDataType(dbtype) {
            if (["varchar", "text", "char"].includes(dbtype.toLowerCase())) {
                return "DataType.STRING";
            }
            else if (["bool", "boolean"].includes(dbtype.toLowerCase())) {
                return "DataType.BOOLEAN";
            }
            else if (["uuid"].includes(dbtype.toLowerCase())) {
                return "DataType.UUID";
            }
            else if (["int", "int2", "int4", "int8", "bigint"].includes(dbtype.toLowerCase())) {
                return "DataType.INTEGER";
            }
            else {
                return `'${dbtype}'`;
            }
        }
        // 컬럼 필드 코드 생성
        generateColumn(column) {
            var _a;
            const columnFieldName = (0, name.convertNameCaseByOption)(this.option.outputFieldNameCase, column.name);
            const hasCreatedAt = column.name == this.option.autoAddCreatedAt;
            const hasUpdatedAt = column.name == this.option.autoAddUpdatedAt;
            const hasDeletedAt = column.name == this.option.autoAddDeletedAt;
            // PrimaryKey 강제 추가 옵션
            if (column.name == this.option.autoAddPrimaryKey) {
                column.isPrimaryKey = true;
            }
            const createdAt = hasCreatedAt ? `\n${tab.TAB}@CreatedAt` : "";
            const updatedAt = hasUpdatedAt ? `\n${tab.TAB}@UpdatedAt` : "";
            const deletedAt = hasDeletedAt ? `\n${tab.TAB}@DeletedAt` : "";
            const primaryKey = column.isPrimaryKey
                ? `primaryKey: true, \n${tab.TAB}${tab.TAB}`
                : "";
            const autoIncrement = column.isAutoIncrement
                ? `autoIncrement: true, \n${tab.TAB}${tab.TAB}`
                : "";
            const defaultValue = column.default
                ? `\n${tab.TAB}${tab.TAB}default: literal("${column.default.replace('"', '\\"')}"),`
                : "";
            const dataType = this.dbTypeToDataType(column.dbType);
            return `    @Comment(\`${(_a = column.comment) !== null && _a !== void 0 ? _a : ""}\`)${createdAt}${updatedAt}${deletedAt}
    @Column({
        ${primaryKey}${autoIncrement}field: '${column.name}',
        type: ${dataType}, 
        allowNull: ${!column.isNotNull},${defaultValue}
    })
    ${columnFieldName}: ${column.tsType};`;
        }
        // 테이블 클래스 코드 생성
        generateTableCode(table) {
            var _a;
            const hasCreatedAt = table.columns.find((e) => e.name == this.option.autoAddCreatedAt) != null;
            const hasUpdatedAt = table.columns.find((e) => e.name == this.option.autoAddUpdatedAt) != null;
            const hasDeletedAt = table.columns.find((e) => e.name == this.option.autoAddDeletedAt) != null;
            const hasDatabaseName = this.option.databaseName != null;
            const tableClassName = (0, name.convertNameCaseByOption)(this.option.outputClassNameCase, table.tableName);
            return `@Table({
    tableName: '${table.tableName}',
    paranoid: ${hasDeletedAt},
    freezeTableName: true,
    timestamps: ${hasCreatedAt || hasCreatedAt || hasDeletedAt},
    createdAt: ${hasCreatedAt},
    updatedAt: ${hasUpdatedAt},
    deletedAt: ${hasDeletedAt},
    ${hasDatabaseName ? "" : "// "}schema: '${(_a = this.option.databaseName) !== null && _a !== void 0 ? _a : "public"}',
})
export class ${tableClassName} extends Model {
${table.columns.map((column) => this.generateColumn(column)).join("\n\n")}
}`;
        }
        emit(tables, option = {
            sourceSplit: true,
            outputClassNameCase: "PASCAL",
            outputFieldNameCase: "CAMEL",
        }) {
            this.option = option;
            if (option === null || option === void 0 ? void 0 : option.sourceSplit) {
                return tables.map((table) => ({
                    sourceName: table.tableName,
                    source: importTemplate + "\n" + this.generateTableCode(table),
                }));
            }
            else {
                return [
                    {
                        sourceName: "all",
                        source: importTemplate +
                            "\n" +
                            tables.map((table) => this.generateTableCode(table)).join("\n\n"),
                    },
                ];
            }
        }
    }
    exports.SequelizeTypescriptEmitter = SequelizeTypescriptEmitter;

    });

    var _escape = createCommonjsModule(function (module, exports) {
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.escapeDoubleQuote = void 0;
    function escapeDoubleQuote(str) {
        return str.replace(/"/g, '\\"');
    }
    exports.escapeDoubleQuote = escapeDoubleQuote;

    });

    var jpaJava = createCommonjsModule(function (module, exports) {
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.JPAEmitter = void 0;



    const importTemplate = `// If under EE 9, change jakarta to javax
import jakarta.annotation.*;
import jakarta.persistence.*;
import jakarta.persistence.Table;

import org.hibernate.annotations.*;
import java.time.LocalDateTime;
`;
    class JPAEmitter {
        // 컬럼 필드 코드 생성
        generateColumn(column) {
            const columnFieldName = (0, name.convertNameCaseByOption)(this.option.outputFieldNameCase, column.name);
            const hasCreatedAt = column.name == this.option.autoAddCreatedAt;
            const hasUpdatedAt = column.name == this.option.autoAddUpdatedAt;
            // const hasDeletedAt = column.name == this.option.autoAddDeletedAt
            // PrimaryKey 강제 추가 옵션
            if (column.name == this.option.autoAddPrimaryKey) {
                column.isPrimaryKey = true;
            }
            const createdAt = hasCreatedAt ? `\n${tab.TAB}@CreationTimestamp` : "";
            const updatedAt = hasUpdatedAt ? `\n${tab.TAB}@UpdateTimestamp` : "";
            const deletedAt = ""; // hibernate에는 해당 기능이 없음
            const primaryKey = column.isPrimaryKey ? `\n${tab.TAB}@Id` : "";
            const autoIncrement = column.isAutoIncrement
                ? `\n${tab.TAB}@GeneratedValue(strategy = GenerationType.IDENTITY)`
                : "";
            const defaultValue = column.default
                ? `\n${tab.TAB}@ColumnDefault("${(0, _escape.escapeDoubleQuote)(column.default)}")`
                : "";
            const comment = column.comment
                ? `\n${tab.TAB}@Comment("${(0, _escape.escapeDoubleQuote)(column.comment)}")`
                : "";
            //const dataType = this.dbTypeToDataType(column.dbType);
            const columnAnnotation = `\n${tab.TAB}@Column(name = "${(0, _escape.escapeDoubleQuote)(column.name)}")`;
            const notNullAnnotaion = column.isNotNull
                ? `\n${tab.TAB}@Nonnull`
                : `\n${tab.TAB}@Nullable`;
            return `${primaryKey}${autoIncrement}${columnAnnotation}${notNullAnnotaion}${comment}${defaultValue}${createdAt}${updatedAt}${deletedAt}
${tab.TAB}${column.javaType} ${columnFieldName};`;
        }
        // 테이블 클래스 코드 생성
        generateTableCode(table) {
            const hasDatabaseName = this.option.databaseName != null;
            const tableClassName = (0, name.convertNameCaseByOption)(this.option.outputClassNameCase, table.tableName);
            const schema = hasDatabaseName
                ? `, schema = "\\"${this.option.databaseName}\\""`
                : "";
            return `@Entity()
@Table(name = "\\"${table.tableName}\\""${schema})
public class ${tableClassName} {
${table.columns.map((column) => this.generateColumn(column)).join("\n")}
}`;
        }
        emit(tables, option = {
            sourceSplit: true,
            outputClassNameCase: "PASCAL",
            outputFieldNameCase: "CAMEL",
        }) {
            this.option = option;
            if (option === null || option === void 0 ? void 0 : option.sourceSplit) {
                return tables.map((table) => ({
                    sourceName: table.tableName,
                    source: importTemplate + "\n" + this.generateTableCode(table),
                }));
            }
            else {
                return [
                    {
                        sourceName: "all",
                        source: importTemplate +
                            "\n" +
                            tables.map((table) => this.generateTableCode(table)).join("\n\n"),
                    },
                ];
            }
        }
    }
    exports.JPAEmitter = JPAEmitter;

    });

    var jpaKotlin = createCommonjsModule(function (module, exports) {
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.JPAKotlinEmitter = void 0;



    const importTemplate = `// If under EE 9, change jakarta to javax
import jakarta.annotation.*
import jakarta.persistence.*
import jakarta.persistence.Table

import org.hibernate.annotations.*
import java.time.LocalDateTime
`;
    class JPAKotlinEmitter {
        // 컬럼 필드 코드 생성
        generateColumn(column) {
            const columnFieldName = (0, name.convertNameCaseByOption)(this.option.outputFieldNameCase, column.name);
            const hasCreatedAt = column.name == this.option.autoAddCreatedAt;
            const hasUpdatedAt = column.name == this.option.autoAddUpdatedAt;
            // const hasDeletedAt = column.name == this.option.autoAddDeletedAt
            // PrimaryKey 강제 추가 옵션
            if (column.name == this.option.autoAddPrimaryKey) {
                column.isPrimaryKey = true;
            }
            const createdAt = hasCreatedAt ? `\n${tab.TAB}@CreationTimestamp` : "";
            const updatedAt = hasUpdatedAt ? `\n${tab.TAB}@UpdateTimestamp` : "";
            const deletedAt = ""; // hibernate에는 해당 기능이 없음
            const primaryKey = column.isPrimaryKey ? `\n${tab.TAB}@Id` : "";
            const autoIncrement = column.isAutoIncrement
                ? `\n${tab.TAB}@GeneratedValue(strategy = GenerationType.IDENTITY)`
                : "";
            const defaultValue = column.default
                ? `\n${tab.TAB}@ColumnDefault("${(0, _escape.escapeDoubleQuote)(column.default)}")`
                : "";
            const comment = column.comment
                ? `\n${tab.TAB}@Comment("${(0, _escape.escapeDoubleQuote)(column.comment)}")`
                : "";
            //const dataType = this.dbTypeToDataType(column.dbType);
            const columnAnnotation = `\n${tab.TAB}@Column(name = "${(0, _escape.escapeDoubleQuote)(column.name)}")`;
            const notNullAnnotaion = column.isNotNull
                ? `\n${tab.TAB}@Nonnull`
                : `\n${tab.TAB}@Nullable`;
            return `${primaryKey}${autoIncrement}${columnAnnotation}${notNullAnnotaion}${comment}${defaultValue}${createdAt}${updatedAt}${deletedAt}
${tab.TAB}var ${columnFieldName}: ${column.javaType}? = null`;
        }
        // 테이블 클래스 코드 생성
        generateTableCode(table) {
            const hasDatabaseName = this.option.databaseName != null;
            const tableClassName = (0, name.convertNameCaseByOption)(this.option.outputClassNameCase, table.tableName);
            const schema = hasDatabaseName
                ? `, schema = "\\"${this.option.databaseName}\\""`
                : "";
            return `@Entity()
@Table(name = "\\"${table.tableName}\\""${schema})
class ${tableClassName} {
${table.columns.map((column) => this.generateColumn(column)).join("\n")}
}`;
        }
        emit(tables, option = {
            sourceSplit: true,
            outputClassNameCase: "PASCAL",
            outputFieldNameCase: "CAMEL",
        }) {
            this.option = option;
            if (option === null || option === void 0 ? void 0 : option.sourceSplit) {
                return tables.map((table) => ({
                    sourceName: table.tableName,
                    source: importTemplate + "\n" + this.generateTableCode(table),
                }));
            }
            else {
                return [
                    {
                        sourceName: "all",
                        source: importTemplate +
                            "\n" +
                            tables.map((table) => this.generateTableCode(table)).join("\n\n"),
                    },
                ];
            }
        }
    }
    exports.JPAKotlinEmitter = JPAKotlinEmitter;

    });

    var sqlalchemy = createCommonjsModule(function (module, exports) {
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SQLAlchemyEmitter = void 0;



    const importTemplate = `from sqlalchemy import Column
from sqlalchemy import String, Integer, Double, Float, BigInteger, DateTime, Boolean
from sqlalchemy.orm import declarative_base

Base = declarative_base()
`;
    class SQLAlchemyEmitter {
        // 컬럼 필드 코드 생성
        generateColumn(column) {
            const columnFieldName = (0, name.convertNameCaseByOption)(this.option.outputFieldNameCase, column.name);
            // PrimaryKey 강제 추가 옵션
            if (column.name == this.option.autoAddPrimaryKey) {
                column.isPrimaryKey = true;
            }
            const primaryKey = column.isPrimaryKey ? `, primary_key=True` : "";
            const autoIncrement = column.isAutoIncrement ? `, autoincrement=True` : "";
            const defaultValue = column.default
                ? `, default="${(0, _escape.escapeDoubleQuote)(column.default)}"`
                : "";
            const comment = column.comment
                ? `, comment="${(0, _escape.escapeDoubleQuote)(column.comment)}"`
                : "";
            const notNull = column.isNotNull ? `, nullable=False` : `, nullable=True`;
            const type = column.pythonType;
            return `${tab.TAB}${columnFieldName} = Column(${type}${primaryKey}${autoIncrement}${notNull}${defaultValue}${comment})`;
        }
        // 테이블 클래스 코드 생성
        generateTableCode(table) {
            this.option.databaseName != null;
            const tableClassName = (0, name.convertNameCaseByOption)(this.option.outputClassNameCase, table.tableName);
            return `class ${tableClassName}(Base):
${tab.TAB}__tablename__ = "${table.tableName}"

${table.columns.map((column) => this.generateColumn(column)).join("\n")}`;
        }
        emit(tables, option = {
            sourceSplit: true,
            outputClassNameCase: "PASCAL",
            outputFieldNameCase: "CAMEL",
        }) {
            this.option = option;
            if (option === null || option === void 0 ? void 0 : option.sourceSplit) {
                return tables.map((table) => ({
                    sourceName: table.tableName,
                    source: importTemplate + "\n" + this.generateTableCode(table),
                }));
            }
            else {
                return [
                    {
                        sourceName: "all",
                        source: importTemplate +
                            "\n" +
                            tables.map((table) => this.generateTableCode(table)).join("\n\n"),
                    },
                ];
            }
        }
    }
    exports.SQLAlchemyEmitter = SQLAlchemyEmitter;

    });

    var BigInteger = createCommonjsModule(function (module) {
    var bigInt = (function (undefined$1) {

        var BASE = 1e7,
            LOG_BASE = 7,
            MAX_INT = 9007199254740992,
            MAX_INT_ARR = smallToArray(MAX_INT),
            DEFAULT_ALPHABET = "0123456789abcdefghijklmnopqrstuvwxyz";

        var supportsNativeBigInt = typeof BigInt === "function";

        function Integer(v, radix, alphabet, caseSensitive) {
            if (typeof v === "undefined") return Integer[0];
            if (typeof radix !== "undefined") return +radix === 10 && !alphabet ? parseValue(v) : parseBase(v, radix, alphabet, caseSensitive);
            return parseValue(v);
        }

        function BigInteger(value, sign) {
            this.value = value;
            this.sign = sign;
            this.isSmall = false;
        }
        BigInteger.prototype = Object.create(Integer.prototype);

        function SmallInteger(value) {
            this.value = value;
            this.sign = value < 0;
            this.isSmall = true;
        }
        SmallInteger.prototype = Object.create(Integer.prototype);

        function NativeBigInt(value) {
            this.value = value;
        }
        NativeBigInt.prototype = Object.create(Integer.prototype);

        function isPrecise(n) {
            return -MAX_INT < n && n < MAX_INT;
        }

        function smallToArray(n) { // For performance reasons doesn't reference BASE, need to change this function if BASE changes
            if (n < 1e7)
                return [n];
            if (n < 1e14)
                return [n % 1e7, Math.floor(n / 1e7)];
            return [n % 1e7, Math.floor(n / 1e7) % 1e7, Math.floor(n / 1e14)];
        }

        function arrayToSmall(arr) { // If BASE changes this function may need to change
            trim(arr);
            var length = arr.length;
            if (length < 4 && compareAbs(arr, MAX_INT_ARR) < 0) {
                switch (length) {
                    case 0: return 0;
                    case 1: return arr[0];
                    case 2: return arr[0] + arr[1] * BASE;
                    default: return arr[0] + (arr[1] + arr[2] * BASE) * BASE;
                }
            }
            return arr;
        }

        function trim(v) {
            var i = v.length;
            while (v[--i] === 0);
            v.length = i + 1;
        }

        function createArray(length) { // function shamelessly stolen from Yaffle's library https://github.com/Yaffle/BigInteger
            var x = new Array(length);
            var i = -1;
            while (++i < length) {
                x[i] = 0;
            }
            return x;
        }

        function truncate(n) {
            if (n > 0) return Math.floor(n);
            return Math.ceil(n);
        }

        function add(a, b) { // assumes a and b are arrays with a.length >= b.length
            var l_a = a.length,
                l_b = b.length,
                r = new Array(l_a),
                carry = 0,
                base = BASE,
                sum, i;
            for (i = 0; i < l_b; i++) {
                sum = a[i] + b[i] + carry;
                carry = sum >= base ? 1 : 0;
                r[i] = sum - carry * base;
            }
            while (i < l_a) {
                sum = a[i] + carry;
                carry = sum === base ? 1 : 0;
                r[i++] = sum - carry * base;
            }
            if (carry > 0) r.push(carry);
            return r;
        }

        function addAny(a, b) {
            if (a.length >= b.length) return add(a, b);
            return add(b, a);
        }

        function addSmall(a, carry) { // assumes a is array, carry is number with 0 <= carry < MAX_INT
            var l = a.length,
                r = new Array(l),
                base = BASE,
                sum, i;
            for (i = 0; i < l; i++) {
                sum = a[i] - base + carry;
                carry = Math.floor(sum / base);
                r[i] = sum - carry * base;
                carry += 1;
            }
            while (carry > 0) {
                r[i++] = carry % base;
                carry = Math.floor(carry / base);
            }
            return r;
        }

        BigInteger.prototype.add = function (v) {
            var n = parseValue(v);
            if (this.sign !== n.sign) {
                return this.subtract(n.negate());
            }
            var a = this.value, b = n.value;
            if (n.isSmall) {
                return new BigInteger(addSmall(a, Math.abs(b)), this.sign);
            }
            return new BigInteger(addAny(a, b), this.sign);
        };
        BigInteger.prototype.plus = BigInteger.prototype.add;

        SmallInteger.prototype.add = function (v) {
            var n = parseValue(v);
            var a = this.value;
            if (a < 0 !== n.sign) {
                return this.subtract(n.negate());
            }
            var b = n.value;
            if (n.isSmall) {
                if (isPrecise(a + b)) return new SmallInteger(a + b);
                b = smallToArray(Math.abs(b));
            }
            return new BigInteger(addSmall(b, Math.abs(a)), a < 0);
        };
        SmallInteger.prototype.plus = SmallInteger.prototype.add;

        NativeBigInt.prototype.add = function (v) {
            return new NativeBigInt(this.value + parseValue(v).value);
        };
        NativeBigInt.prototype.plus = NativeBigInt.prototype.add;

        function subtract(a, b) { // assumes a and b are arrays with a >= b
            var a_l = a.length,
                b_l = b.length,
                r = new Array(a_l),
                borrow = 0,
                base = BASE,
                i, difference;
            for (i = 0; i < b_l; i++) {
                difference = a[i] - borrow - b[i];
                if (difference < 0) {
                    difference += base;
                    borrow = 1;
                } else borrow = 0;
                r[i] = difference;
            }
            for (i = b_l; i < a_l; i++) {
                difference = a[i] - borrow;
                if (difference < 0) difference += base;
                else {
                    r[i++] = difference;
                    break;
                }
                r[i] = difference;
            }
            for (; i < a_l; i++) {
                r[i] = a[i];
            }
            trim(r);
            return r;
        }

        function subtractAny(a, b, sign) {
            var value;
            if (compareAbs(a, b) >= 0) {
                value = subtract(a, b);
            } else {
                value = subtract(b, a);
                sign = !sign;
            }
            value = arrayToSmall(value);
            if (typeof value === "number") {
                if (sign) value = -value;
                return new SmallInteger(value);
            }
            return new BigInteger(value, sign);
        }

        function subtractSmall(a, b, sign) { // assumes a is array, b is number with 0 <= b < MAX_INT
            var l = a.length,
                r = new Array(l),
                carry = -b,
                base = BASE,
                i, difference;
            for (i = 0; i < l; i++) {
                difference = a[i] + carry;
                carry = Math.floor(difference / base);
                difference %= base;
                r[i] = difference < 0 ? difference + base : difference;
            }
            r = arrayToSmall(r);
            if (typeof r === "number") {
                if (sign) r = -r;
                return new SmallInteger(r);
            } return new BigInteger(r, sign);
        }

        BigInteger.prototype.subtract = function (v) {
            var n = parseValue(v);
            if (this.sign !== n.sign) {
                return this.add(n.negate());
            }
            var a = this.value, b = n.value;
            if (n.isSmall)
                return subtractSmall(a, Math.abs(b), this.sign);
            return subtractAny(a, b, this.sign);
        };
        BigInteger.prototype.minus = BigInteger.prototype.subtract;

        SmallInteger.prototype.subtract = function (v) {
            var n = parseValue(v);
            var a = this.value;
            if (a < 0 !== n.sign) {
                return this.add(n.negate());
            }
            var b = n.value;
            if (n.isSmall) {
                return new SmallInteger(a - b);
            }
            return subtractSmall(b, Math.abs(a), a >= 0);
        };
        SmallInteger.prototype.minus = SmallInteger.prototype.subtract;

        NativeBigInt.prototype.subtract = function (v) {
            return new NativeBigInt(this.value - parseValue(v).value);
        };
        NativeBigInt.prototype.minus = NativeBigInt.prototype.subtract;

        BigInteger.prototype.negate = function () {
            return new BigInteger(this.value, !this.sign);
        };
        SmallInteger.prototype.negate = function () {
            var sign = this.sign;
            var small = new SmallInteger(-this.value);
            small.sign = !sign;
            return small;
        };
        NativeBigInt.prototype.negate = function () {
            return new NativeBigInt(-this.value);
        };

        BigInteger.prototype.abs = function () {
            return new BigInteger(this.value, false);
        };
        SmallInteger.prototype.abs = function () {
            return new SmallInteger(Math.abs(this.value));
        };
        NativeBigInt.prototype.abs = function () {
            return new NativeBigInt(this.value >= 0 ? this.value : -this.value);
        };


        function multiplyLong(a, b) {
            var a_l = a.length,
                b_l = b.length,
                l = a_l + b_l,
                r = createArray(l),
                base = BASE,
                product, carry, i, a_i, b_j;
            for (i = 0; i < a_l; ++i) {
                a_i = a[i];
                for (var j = 0; j < b_l; ++j) {
                    b_j = b[j];
                    product = a_i * b_j + r[i + j];
                    carry = Math.floor(product / base);
                    r[i + j] = product - carry * base;
                    r[i + j + 1] += carry;
                }
            }
            trim(r);
            return r;
        }

        function multiplySmall(a, b) { // assumes a is array, b is number with |b| < BASE
            var l = a.length,
                r = new Array(l),
                base = BASE,
                carry = 0,
                product, i;
            for (i = 0; i < l; i++) {
                product = a[i] * b + carry;
                carry = Math.floor(product / base);
                r[i] = product - carry * base;
            }
            while (carry > 0) {
                r[i++] = carry % base;
                carry = Math.floor(carry / base);
            }
            return r;
        }

        function shiftLeft(x, n) {
            var r = [];
            while (n-- > 0) r.push(0);
            return r.concat(x);
        }

        function multiplyKaratsuba(x, y) {
            var n = Math.max(x.length, y.length);

            if (n <= 30) return multiplyLong(x, y);
            n = Math.ceil(n / 2);

            var b = x.slice(n),
                a = x.slice(0, n),
                d = y.slice(n),
                c = y.slice(0, n);

            var ac = multiplyKaratsuba(a, c),
                bd = multiplyKaratsuba(b, d),
                abcd = multiplyKaratsuba(addAny(a, b), addAny(c, d));

            var product = addAny(addAny(ac, shiftLeft(subtract(subtract(abcd, ac), bd), n)), shiftLeft(bd, 2 * n));
            trim(product);
            return product;
        }

        // The following function is derived from a surface fit of a graph plotting the performance difference
        // between long multiplication and karatsuba multiplication versus the lengths of the two arrays.
        function useKaratsuba(l1, l2) {
            return -0.012 * l1 - 0.012 * l2 + 0.000015 * l1 * l2 > 0;
        }

        BigInteger.prototype.multiply = function (v) {
            var n = parseValue(v),
                a = this.value, b = n.value,
                sign = this.sign !== n.sign,
                abs;
            if (n.isSmall) {
                if (b === 0) return Integer[0];
                if (b === 1) return this;
                if (b === -1) return this.negate();
                abs = Math.abs(b);
                if (abs < BASE) {
                    return new BigInteger(multiplySmall(a, abs), sign);
                }
                b = smallToArray(abs);
            }
            if (useKaratsuba(a.length, b.length)) // Karatsuba is only faster for certain array sizes
                return new BigInteger(multiplyKaratsuba(a, b), sign);
            return new BigInteger(multiplyLong(a, b), sign);
        };

        BigInteger.prototype.times = BigInteger.prototype.multiply;

        function multiplySmallAndArray(a, b, sign) { // a >= 0
            if (a < BASE) {
                return new BigInteger(multiplySmall(b, a), sign);
            }
            return new BigInteger(multiplyLong(b, smallToArray(a)), sign);
        }
        SmallInteger.prototype._multiplyBySmall = function (a) {
            if (isPrecise(a.value * this.value)) {
                return new SmallInteger(a.value * this.value);
            }
            return multiplySmallAndArray(Math.abs(a.value), smallToArray(Math.abs(this.value)), this.sign !== a.sign);
        };
        BigInteger.prototype._multiplyBySmall = function (a) {
            if (a.value === 0) return Integer[0];
            if (a.value === 1) return this;
            if (a.value === -1) return this.negate();
            return multiplySmallAndArray(Math.abs(a.value), this.value, this.sign !== a.sign);
        };
        SmallInteger.prototype.multiply = function (v) {
            return parseValue(v)._multiplyBySmall(this);
        };
        SmallInteger.prototype.times = SmallInteger.prototype.multiply;

        NativeBigInt.prototype.multiply = function (v) {
            return new NativeBigInt(this.value * parseValue(v).value);
        };
        NativeBigInt.prototype.times = NativeBigInt.prototype.multiply;

        function square(a) {
            //console.assert(2 * BASE * BASE < MAX_INT);
            var l = a.length,
                r = createArray(l + l),
                base = BASE,
                product, carry, i, a_i, a_j;
            for (i = 0; i < l; i++) {
                a_i = a[i];
                carry = 0 - a_i * a_i;
                for (var j = i; j < l; j++) {
                    a_j = a[j];
                    product = 2 * (a_i * a_j) + r[i + j] + carry;
                    carry = Math.floor(product / base);
                    r[i + j] = product - carry * base;
                }
                r[i + l] = carry;
            }
            trim(r);
            return r;
        }

        BigInteger.prototype.square = function () {
            return new BigInteger(square(this.value), false);
        };

        SmallInteger.prototype.square = function () {
            var value = this.value * this.value;
            if (isPrecise(value)) return new SmallInteger(value);
            return new BigInteger(square(smallToArray(Math.abs(this.value))), false);
        };

        NativeBigInt.prototype.square = function (v) {
            return new NativeBigInt(this.value * this.value);
        };

        function divMod1(a, b) { // Left over from previous version. Performs faster than divMod2 on smaller input sizes.
            var a_l = a.length,
                b_l = b.length,
                base = BASE,
                result = createArray(b.length),
                divisorMostSignificantDigit = b[b_l - 1],
                // normalization
                lambda = Math.ceil(base / (2 * divisorMostSignificantDigit)),
                remainder = multiplySmall(a, lambda),
                divisor = multiplySmall(b, lambda),
                quotientDigit, shift, carry, borrow, i, l, q;
            if (remainder.length <= a_l) remainder.push(0);
            divisor.push(0);
            divisorMostSignificantDigit = divisor[b_l - 1];
            for (shift = a_l - b_l; shift >= 0; shift--) {
                quotientDigit = base - 1;
                if (remainder[shift + b_l] !== divisorMostSignificantDigit) {
                    quotientDigit = Math.floor((remainder[shift + b_l] * base + remainder[shift + b_l - 1]) / divisorMostSignificantDigit);
                }
                // quotientDigit <= base - 1
                carry = 0;
                borrow = 0;
                l = divisor.length;
                for (i = 0; i < l; i++) {
                    carry += quotientDigit * divisor[i];
                    q = Math.floor(carry / base);
                    borrow += remainder[shift + i] - (carry - q * base);
                    carry = q;
                    if (borrow < 0) {
                        remainder[shift + i] = borrow + base;
                        borrow = -1;
                    } else {
                        remainder[shift + i] = borrow;
                        borrow = 0;
                    }
                }
                while (borrow !== 0) {
                    quotientDigit -= 1;
                    carry = 0;
                    for (i = 0; i < l; i++) {
                        carry += remainder[shift + i] - base + divisor[i];
                        if (carry < 0) {
                            remainder[shift + i] = carry + base;
                            carry = 0;
                        } else {
                            remainder[shift + i] = carry;
                            carry = 1;
                        }
                    }
                    borrow += carry;
                }
                result[shift] = quotientDigit;
            }
            // denormalization
            remainder = divModSmall(remainder, lambda)[0];
            return [arrayToSmall(result), arrayToSmall(remainder)];
        }

        function divMod2(a, b) { // Implementation idea shamelessly stolen from Silent Matt's library http://silentmatt.com/biginteger/
            // Performs faster than divMod1 on larger input sizes.
            var a_l = a.length,
                b_l = b.length,
                result = [],
                part = [],
                base = BASE,
                guess, xlen, highx, highy, check;
            while (a_l) {
                part.unshift(a[--a_l]);
                trim(part);
                if (compareAbs(part, b) < 0) {
                    result.push(0);
                    continue;
                }
                xlen = part.length;
                highx = part[xlen - 1] * base + part[xlen - 2];
                highy = b[b_l - 1] * base + b[b_l - 2];
                if (xlen > b_l) {
                    highx = (highx + 1) * base;
                }
                guess = Math.ceil(highx / highy);
                do {
                    check = multiplySmall(b, guess);
                    if (compareAbs(check, part) <= 0) break;
                    guess--;
                } while (guess);
                result.push(guess);
                part = subtract(part, check);
            }
            result.reverse();
            return [arrayToSmall(result), arrayToSmall(part)];
        }

        function divModSmall(value, lambda) {
            var length = value.length,
                quotient = createArray(length),
                base = BASE,
                i, q, remainder, divisor;
            remainder = 0;
            for (i = length - 1; i >= 0; --i) {
                divisor = remainder * base + value[i];
                q = truncate(divisor / lambda);
                remainder = divisor - q * lambda;
                quotient[i] = q | 0;
            }
            return [quotient, remainder | 0];
        }

        function divModAny(self, v) {
            var value, n = parseValue(v);
            if (supportsNativeBigInt) {
                return [new NativeBigInt(self.value / n.value), new NativeBigInt(self.value % n.value)];
            }
            var a = self.value, b = n.value;
            var quotient;
            if (b === 0) throw new Error("Cannot divide by zero");
            if (self.isSmall) {
                if (n.isSmall) {
                    return [new SmallInteger(truncate(a / b)), new SmallInteger(a % b)];
                }
                return [Integer[0], self];
            }
            if (n.isSmall) {
                if (b === 1) return [self, Integer[0]];
                if (b == -1) return [self.negate(), Integer[0]];
                var abs = Math.abs(b);
                if (abs < BASE) {
                    value = divModSmall(a, abs);
                    quotient = arrayToSmall(value[0]);
                    var remainder = value[1];
                    if (self.sign) remainder = -remainder;
                    if (typeof quotient === "number") {
                        if (self.sign !== n.sign) quotient = -quotient;
                        return [new SmallInteger(quotient), new SmallInteger(remainder)];
                    }
                    return [new BigInteger(quotient, self.sign !== n.sign), new SmallInteger(remainder)];
                }
                b = smallToArray(abs);
            }
            var comparison = compareAbs(a, b);
            if (comparison === -1) return [Integer[0], self];
            if (comparison === 0) return [Integer[self.sign === n.sign ? 1 : -1], Integer[0]];

            // divMod1 is faster on smaller input sizes
            if (a.length + b.length <= 200)
                value = divMod1(a, b);
            else value = divMod2(a, b);

            quotient = value[0];
            var qSign = self.sign !== n.sign,
                mod = value[1],
                mSign = self.sign;
            if (typeof quotient === "number") {
                if (qSign) quotient = -quotient;
                quotient = new SmallInteger(quotient);
            } else quotient = new BigInteger(quotient, qSign);
            if (typeof mod === "number") {
                if (mSign) mod = -mod;
                mod = new SmallInteger(mod);
            } else mod = new BigInteger(mod, mSign);
            return [quotient, mod];
        }

        BigInteger.prototype.divmod = function (v) {
            var result = divModAny(this, v);
            return {
                quotient: result[0],
                remainder: result[1]
            };
        };
        NativeBigInt.prototype.divmod = SmallInteger.prototype.divmod = BigInteger.prototype.divmod;


        BigInteger.prototype.divide = function (v) {
            return divModAny(this, v)[0];
        };
        NativeBigInt.prototype.over = NativeBigInt.prototype.divide = function (v) {
            return new NativeBigInt(this.value / parseValue(v).value);
        };
        SmallInteger.prototype.over = SmallInteger.prototype.divide = BigInteger.prototype.over = BigInteger.prototype.divide;

        BigInteger.prototype.mod = function (v) {
            return divModAny(this, v)[1];
        };
        NativeBigInt.prototype.mod = NativeBigInt.prototype.remainder = function (v) {
            return new NativeBigInt(this.value % parseValue(v).value);
        };
        SmallInteger.prototype.remainder = SmallInteger.prototype.mod = BigInteger.prototype.remainder = BigInteger.prototype.mod;

        BigInteger.prototype.pow = function (v) {
            var n = parseValue(v),
                a = this.value,
                b = n.value,
                value, x, y;
            if (b === 0) return Integer[1];
            if (a === 0) return Integer[0];
            if (a === 1) return Integer[1];
            if (a === -1) return n.isEven() ? Integer[1] : Integer[-1];
            if (n.sign) {
                return Integer[0];
            }
            if (!n.isSmall) throw new Error("The exponent " + n.toString() + " is too large.");
            if (this.isSmall) {
                if (isPrecise(value = Math.pow(a, b)))
                    return new SmallInteger(truncate(value));
            }
            x = this;
            y = Integer[1];
            while (true) {
                if (b & 1 === 1) {
                    y = y.times(x);
                    --b;
                }
                if (b === 0) break;
                b /= 2;
                x = x.square();
            }
            return y;
        };
        SmallInteger.prototype.pow = BigInteger.prototype.pow;

        NativeBigInt.prototype.pow = function (v) {
            var n = parseValue(v);
            var a = this.value, b = n.value;
            var _0 = BigInt(0), _1 = BigInt(1), _2 = BigInt(2);
            if (b === _0) return Integer[1];
            if (a === _0) return Integer[0];
            if (a === _1) return Integer[1];
            if (a === BigInt(-1)) return n.isEven() ? Integer[1] : Integer[-1];
            if (n.isNegative()) return new NativeBigInt(_0);
            var x = this;
            var y = Integer[1];
            while (true) {
                if ((b & _1) === _1) {
                    y = y.times(x);
                    --b;
                }
                if (b === _0) break;
                b /= _2;
                x = x.square();
            }
            return y;
        };

        BigInteger.prototype.modPow = function (exp, mod) {
            exp = parseValue(exp);
            mod = parseValue(mod);
            if (mod.isZero()) throw new Error("Cannot take modPow with modulus 0");
            var r = Integer[1],
                base = this.mod(mod);
            if (exp.isNegative()) {
                exp = exp.multiply(Integer[-1]);
                base = base.modInv(mod);
            }
            while (exp.isPositive()) {
                if (base.isZero()) return Integer[0];
                if (exp.isOdd()) r = r.multiply(base).mod(mod);
                exp = exp.divide(2);
                base = base.square().mod(mod);
            }
            return r;
        };
        NativeBigInt.prototype.modPow = SmallInteger.prototype.modPow = BigInteger.prototype.modPow;

        function compareAbs(a, b) {
            if (a.length !== b.length) {
                return a.length > b.length ? 1 : -1;
            }
            for (var i = a.length - 1; i >= 0; i--) {
                if (a[i] !== b[i]) return a[i] > b[i] ? 1 : -1;
            }
            return 0;
        }

        BigInteger.prototype.compareAbs = function (v) {
            var n = parseValue(v),
                a = this.value,
                b = n.value;
            if (n.isSmall) return 1;
            return compareAbs(a, b);
        };
        SmallInteger.prototype.compareAbs = function (v) {
            var n = parseValue(v),
                a = Math.abs(this.value),
                b = n.value;
            if (n.isSmall) {
                b = Math.abs(b);
                return a === b ? 0 : a > b ? 1 : -1;
            }
            return -1;
        };
        NativeBigInt.prototype.compareAbs = function (v) {
            var a = this.value;
            var b = parseValue(v).value;
            a = a >= 0 ? a : -a;
            b = b >= 0 ? b : -b;
            return a === b ? 0 : a > b ? 1 : -1;
        };

        BigInteger.prototype.compare = function (v) {
            // See discussion about comparison with Infinity:
            // https://github.com/peterolson/BigInteger.js/issues/61
            if (v === Infinity) {
                return -1;
            }
            if (v === -Infinity) {
                return 1;
            }

            var n = parseValue(v),
                a = this.value,
                b = n.value;
            if (this.sign !== n.sign) {
                return n.sign ? 1 : -1;
            }
            if (n.isSmall) {
                return this.sign ? -1 : 1;
            }
            return compareAbs(a, b) * (this.sign ? -1 : 1);
        };
        BigInteger.prototype.compareTo = BigInteger.prototype.compare;

        SmallInteger.prototype.compare = function (v) {
            if (v === Infinity) {
                return -1;
            }
            if (v === -Infinity) {
                return 1;
            }

            var n = parseValue(v),
                a = this.value,
                b = n.value;
            if (n.isSmall) {
                return a == b ? 0 : a > b ? 1 : -1;
            }
            if (a < 0 !== n.sign) {
                return a < 0 ? -1 : 1;
            }
            return a < 0 ? 1 : -1;
        };
        SmallInteger.prototype.compareTo = SmallInteger.prototype.compare;

        NativeBigInt.prototype.compare = function (v) {
            if (v === Infinity) {
                return -1;
            }
            if (v === -Infinity) {
                return 1;
            }
            var a = this.value;
            var b = parseValue(v).value;
            return a === b ? 0 : a > b ? 1 : -1;
        };
        NativeBigInt.prototype.compareTo = NativeBigInt.prototype.compare;

        BigInteger.prototype.equals = function (v) {
            return this.compare(v) === 0;
        };
        NativeBigInt.prototype.eq = NativeBigInt.prototype.equals = SmallInteger.prototype.eq = SmallInteger.prototype.equals = BigInteger.prototype.eq = BigInteger.prototype.equals;

        BigInteger.prototype.notEquals = function (v) {
            return this.compare(v) !== 0;
        };
        NativeBigInt.prototype.neq = NativeBigInt.prototype.notEquals = SmallInteger.prototype.neq = SmallInteger.prototype.notEquals = BigInteger.prototype.neq = BigInteger.prototype.notEquals;

        BigInteger.prototype.greater = function (v) {
            return this.compare(v) > 0;
        };
        NativeBigInt.prototype.gt = NativeBigInt.prototype.greater = SmallInteger.prototype.gt = SmallInteger.prototype.greater = BigInteger.prototype.gt = BigInteger.prototype.greater;

        BigInteger.prototype.lesser = function (v) {
            return this.compare(v) < 0;
        };
        NativeBigInt.prototype.lt = NativeBigInt.prototype.lesser = SmallInteger.prototype.lt = SmallInteger.prototype.lesser = BigInteger.prototype.lt = BigInteger.prototype.lesser;

        BigInteger.prototype.greaterOrEquals = function (v) {
            return this.compare(v) >= 0;
        };
        NativeBigInt.prototype.geq = NativeBigInt.prototype.greaterOrEquals = SmallInteger.prototype.geq = SmallInteger.prototype.greaterOrEquals = BigInteger.prototype.geq = BigInteger.prototype.greaterOrEquals;

        BigInteger.prototype.lesserOrEquals = function (v) {
            return this.compare(v) <= 0;
        };
        NativeBigInt.prototype.leq = NativeBigInt.prototype.lesserOrEquals = SmallInteger.prototype.leq = SmallInteger.prototype.lesserOrEquals = BigInteger.prototype.leq = BigInteger.prototype.lesserOrEquals;

        BigInteger.prototype.isEven = function () {
            return (this.value[0] & 1) === 0;
        };
        SmallInteger.prototype.isEven = function () {
            return (this.value & 1) === 0;
        };
        NativeBigInt.prototype.isEven = function () {
            return (this.value & BigInt(1)) === BigInt(0);
        };

        BigInteger.prototype.isOdd = function () {
            return (this.value[0] & 1) === 1;
        };
        SmallInteger.prototype.isOdd = function () {
            return (this.value & 1) === 1;
        };
        NativeBigInt.prototype.isOdd = function () {
            return (this.value & BigInt(1)) === BigInt(1);
        };

        BigInteger.prototype.isPositive = function () {
            return !this.sign;
        };
        SmallInteger.prototype.isPositive = function () {
            return this.value > 0;
        };
        NativeBigInt.prototype.isPositive = SmallInteger.prototype.isPositive;

        BigInteger.prototype.isNegative = function () {
            return this.sign;
        };
        SmallInteger.prototype.isNegative = function () {
            return this.value < 0;
        };
        NativeBigInt.prototype.isNegative = SmallInteger.prototype.isNegative;

        BigInteger.prototype.isUnit = function () {
            return false;
        };
        SmallInteger.prototype.isUnit = function () {
            return Math.abs(this.value) === 1;
        };
        NativeBigInt.prototype.isUnit = function () {
            return this.abs().value === BigInt(1);
        };

        BigInteger.prototype.isZero = function () {
            return false;
        };
        SmallInteger.prototype.isZero = function () {
            return this.value === 0;
        };
        NativeBigInt.prototype.isZero = function () {
            return this.value === BigInt(0);
        };

        BigInteger.prototype.isDivisibleBy = function (v) {
            var n = parseValue(v);
            if (n.isZero()) return false;
            if (n.isUnit()) return true;
            if (n.compareAbs(2) === 0) return this.isEven();
            return this.mod(n).isZero();
        };
        NativeBigInt.prototype.isDivisibleBy = SmallInteger.prototype.isDivisibleBy = BigInteger.prototype.isDivisibleBy;

        function isBasicPrime(v) {
            var n = v.abs();
            if (n.isUnit()) return false;
            if (n.equals(2) || n.equals(3) || n.equals(5)) return true;
            if (n.isEven() || n.isDivisibleBy(3) || n.isDivisibleBy(5)) return false;
            if (n.lesser(49)) return true;
            // we don't know if it's prime: let the other functions figure it out
        }

        function millerRabinTest(n, a) {
            var nPrev = n.prev(),
                b = nPrev,
                r = 0,
                d, i, x;
            while (b.isEven()) b = b.divide(2), r++;
            next: for (i = 0; i < a.length; i++) {
                if (n.lesser(a[i])) continue;
                x = bigInt(a[i]).modPow(b, n);
                if (x.isUnit() || x.equals(nPrev)) continue;
                for (d = r - 1; d != 0; d--) {
                    x = x.square().mod(n);
                    if (x.isUnit()) return false;
                    if (x.equals(nPrev)) continue next;
                }
                return false;
            }
            return true;
        }

        // Set "strict" to true to force GRH-supported lower bound of 2*log(N)^2
        BigInteger.prototype.isPrime = function (strict) {
            var isPrime = isBasicPrime(this);
            if (isPrime !== undefined$1) return isPrime;
            var n = this.abs();
            var bits = n.bitLength();
            if (bits <= 64)
                return millerRabinTest(n, [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37]);
            var logN = Math.log(2) * bits.toJSNumber();
            var t = Math.ceil((strict === true) ? (2 * Math.pow(logN, 2)) : logN);
            for (var a = [], i = 0; i < t; i++) {
                a.push(bigInt(i + 2));
            }
            return millerRabinTest(n, a);
        };
        NativeBigInt.prototype.isPrime = SmallInteger.prototype.isPrime = BigInteger.prototype.isPrime;

        BigInteger.prototype.isProbablePrime = function (iterations, rng) {
            var isPrime = isBasicPrime(this);
            if (isPrime !== undefined$1) return isPrime;
            var n = this.abs();
            var t = iterations === undefined$1 ? 5 : iterations;
            for (var a = [], i = 0; i < t; i++) {
                a.push(bigInt.randBetween(2, n.minus(2), rng));
            }
            return millerRabinTest(n, a);
        };
        NativeBigInt.prototype.isProbablePrime = SmallInteger.prototype.isProbablePrime = BigInteger.prototype.isProbablePrime;

        BigInteger.prototype.modInv = function (n) {
            var t = bigInt.zero, newT = bigInt.one, r = parseValue(n), newR = this.abs(), q, lastT, lastR;
            while (!newR.isZero()) {
                q = r.divide(newR);
                lastT = t;
                lastR = r;
                t = newT;
                r = newR;
                newT = lastT.subtract(q.multiply(newT));
                newR = lastR.subtract(q.multiply(newR));
            }
            if (!r.isUnit()) throw new Error(this.toString() + " and " + n.toString() + " are not co-prime");
            if (t.compare(0) === -1) {
                t = t.add(n);
            }
            if (this.isNegative()) {
                return t.negate();
            }
            return t;
        };

        NativeBigInt.prototype.modInv = SmallInteger.prototype.modInv = BigInteger.prototype.modInv;

        BigInteger.prototype.next = function () {
            var value = this.value;
            if (this.sign) {
                return subtractSmall(value, 1, this.sign);
            }
            return new BigInteger(addSmall(value, 1), this.sign);
        };
        SmallInteger.prototype.next = function () {
            var value = this.value;
            if (value + 1 < MAX_INT) return new SmallInteger(value + 1);
            return new BigInteger(MAX_INT_ARR, false);
        };
        NativeBigInt.prototype.next = function () {
            return new NativeBigInt(this.value + BigInt(1));
        };

        BigInteger.prototype.prev = function () {
            var value = this.value;
            if (this.sign) {
                return new BigInteger(addSmall(value, 1), true);
            }
            return subtractSmall(value, 1, this.sign);
        };
        SmallInteger.prototype.prev = function () {
            var value = this.value;
            if (value - 1 > -MAX_INT) return new SmallInteger(value - 1);
            return new BigInteger(MAX_INT_ARR, true);
        };
        NativeBigInt.prototype.prev = function () {
            return new NativeBigInt(this.value - BigInt(1));
        };

        var powersOfTwo = [1];
        while (2 * powersOfTwo[powersOfTwo.length - 1] <= BASE) powersOfTwo.push(2 * powersOfTwo[powersOfTwo.length - 1]);
        var powers2Length = powersOfTwo.length, highestPower2 = powersOfTwo[powers2Length - 1];

        function shift_isSmall(n) {
            return Math.abs(n) <= BASE;
        }

        BigInteger.prototype.shiftLeft = function (v) {
            var n = parseValue(v).toJSNumber();
            if (!shift_isSmall(n)) {
                throw new Error(String(n) + " is too large for shifting.");
            }
            if (n < 0) return this.shiftRight(-n);
            var result = this;
            if (result.isZero()) return result;
            while (n >= powers2Length) {
                result = result.multiply(highestPower2);
                n -= powers2Length - 1;
            }
            return result.multiply(powersOfTwo[n]);
        };
        NativeBigInt.prototype.shiftLeft = SmallInteger.prototype.shiftLeft = BigInteger.prototype.shiftLeft;

        BigInteger.prototype.shiftRight = function (v) {
            var remQuo;
            var n = parseValue(v).toJSNumber();
            if (!shift_isSmall(n)) {
                throw new Error(String(n) + " is too large for shifting.");
            }
            if (n < 0) return this.shiftLeft(-n);
            var result = this;
            while (n >= powers2Length) {
                if (result.isZero() || (result.isNegative() && result.isUnit())) return result;
                remQuo = divModAny(result, highestPower2);
                result = remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];
                n -= powers2Length - 1;
            }
            remQuo = divModAny(result, powersOfTwo[n]);
            return remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];
        };
        NativeBigInt.prototype.shiftRight = SmallInteger.prototype.shiftRight = BigInteger.prototype.shiftRight;

        function bitwise(x, y, fn) {
            y = parseValue(y);
            var xSign = x.isNegative(), ySign = y.isNegative();
            var xRem = xSign ? x.not() : x,
                yRem = ySign ? y.not() : y;
            var xDigit = 0, yDigit = 0;
            var xDivMod = null, yDivMod = null;
            var result = [];
            while (!xRem.isZero() || !yRem.isZero()) {
                xDivMod = divModAny(xRem, highestPower2);
                xDigit = xDivMod[1].toJSNumber();
                if (xSign) {
                    xDigit = highestPower2 - 1 - xDigit; // two's complement for negative numbers
                }

                yDivMod = divModAny(yRem, highestPower2);
                yDigit = yDivMod[1].toJSNumber();
                if (ySign) {
                    yDigit = highestPower2 - 1 - yDigit; // two's complement for negative numbers
                }

                xRem = xDivMod[0];
                yRem = yDivMod[0];
                result.push(fn(xDigit, yDigit));
            }
            var sum = fn(xSign ? 1 : 0, ySign ? 1 : 0) !== 0 ? bigInt(-1) : bigInt(0);
            for (var i = result.length - 1; i >= 0; i -= 1) {
                sum = sum.multiply(highestPower2).add(bigInt(result[i]));
            }
            return sum;
        }

        BigInteger.prototype.not = function () {
            return this.negate().prev();
        };
        NativeBigInt.prototype.not = SmallInteger.prototype.not = BigInteger.prototype.not;

        BigInteger.prototype.and = function (n) {
            return bitwise(this, n, function (a, b) { return a & b; });
        };
        NativeBigInt.prototype.and = SmallInteger.prototype.and = BigInteger.prototype.and;

        BigInteger.prototype.or = function (n) {
            return bitwise(this, n, function (a, b) { return a | b; });
        };
        NativeBigInt.prototype.or = SmallInteger.prototype.or = BigInteger.prototype.or;

        BigInteger.prototype.xor = function (n) {
            return bitwise(this, n, function (a, b) { return a ^ b; });
        };
        NativeBigInt.prototype.xor = SmallInteger.prototype.xor = BigInteger.prototype.xor;

        var LOBMASK_I = 1 << 30, LOBMASK_BI = (BASE & -BASE) * (BASE & -BASE) | LOBMASK_I;
        function roughLOB(n) { // get lowestOneBit (rough)
            // SmallInteger: return Min(lowestOneBit(n), 1 << 30)
            // BigInteger: return Min(lowestOneBit(n), 1 << 14) [BASE=1e7]
            var v = n.value,
                x = typeof v === "number" ? v | LOBMASK_I :
                    typeof v === "bigint" ? v | BigInt(LOBMASK_I) :
                        v[0] + v[1] * BASE | LOBMASK_BI;
            return x & -x;
        }

        function integerLogarithm(value, base) {
            if (base.compareTo(value) <= 0) {
                var tmp = integerLogarithm(value, base.square(base));
                var p = tmp.p;
                var e = tmp.e;
                var t = p.multiply(base);
                return t.compareTo(value) <= 0 ? { p: t, e: e * 2 + 1 } : { p: p, e: e * 2 };
            }
            return { p: bigInt(1), e: 0 };
        }

        BigInteger.prototype.bitLength = function () {
            var n = this;
            if (n.compareTo(bigInt(0)) < 0) {
                n = n.negate().subtract(bigInt(1));
            }
            if (n.compareTo(bigInt(0)) === 0) {
                return bigInt(0);
            }
            return bigInt(integerLogarithm(n, bigInt(2)).e).add(bigInt(1));
        };
        NativeBigInt.prototype.bitLength = SmallInteger.prototype.bitLength = BigInteger.prototype.bitLength;

        function max(a, b) {
            a = parseValue(a);
            b = parseValue(b);
            return a.greater(b) ? a : b;
        }
        function min(a, b) {
            a = parseValue(a);
            b = parseValue(b);
            return a.lesser(b) ? a : b;
        }
        function gcd(a, b) {
            a = parseValue(a).abs();
            b = parseValue(b).abs();
            if (a.equals(b)) return a;
            if (a.isZero()) return b;
            if (b.isZero()) return a;
            var c = Integer[1], d, t;
            while (a.isEven() && b.isEven()) {
                d = min(roughLOB(a), roughLOB(b));
                a = a.divide(d);
                b = b.divide(d);
                c = c.multiply(d);
            }
            while (a.isEven()) {
                a = a.divide(roughLOB(a));
            }
            do {
                while (b.isEven()) {
                    b = b.divide(roughLOB(b));
                }
                if (a.greater(b)) {
                    t = b; b = a; a = t;
                }
                b = b.subtract(a);
            } while (!b.isZero());
            return c.isUnit() ? a : a.multiply(c);
        }
        function lcm(a, b) {
            a = parseValue(a).abs();
            b = parseValue(b).abs();
            return a.divide(gcd(a, b)).multiply(b);
        }
        function randBetween(a, b, rng) {
            a = parseValue(a);
            b = parseValue(b);
            var usedRNG = rng || Math.random;
            var low = min(a, b), high = max(a, b);
            var range = high.subtract(low).add(1);
            if (range.isSmall) return low.add(Math.floor(usedRNG() * range));
            var digits = toBase(range, BASE).value;
            var result = [], restricted = true;
            for (var i = 0; i < digits.length; i++) {
                var top = restricted ? digits[i] + (i + 1 < digits.length ? digits[i + 1] / BASE : 0) : BASE;
                var digit = truncate(usedRNG() * top);
                result.push(digit);
                if (digit < digits[i]) restricted = false;
            }
            return low.add(Integer.fromArray(result, BASE, false));
        }

        var parseBase = function (text, base, alphabet, caseSensitive) {
            alphabet = alphabet || DEFAULT_ALPHABET;
            text = String(text);
            if (!caseSensitive) {
                text = text.toLowerCase();
                alphabet = alphabet.toLowerCase();
            }
            var length = text.length;
            var i;
            var absBase = Math.abs(base);
            var alphabetValues = {};
            for (i = 0; i < alphabet.length; i++) {
                alphabetValues[alphabet[i]] = i;
            }
            for (i = 0; i < length; i++) {
                var c = text[i];
                if (c === "-") continue;
                if (c in alphabetValues) {
                    if (alphabetValues[c] >= absBase) {
                        if (c === "1" && absBase === 1) continue;
                        throw new Error(c + " is not a valid digit in base " + base + ".");
                    }
                }
            }
            base = parseValue(base);
            var digits = [];
            var isNegative = text[0] === "-";
            for (i = isNegative ? 1 : 0; i < text.length; i++) {
                var c = text[i];
                if (c in alphabetValues) digits.push(parseValue(alphabetValues[c]));
                else if (c === "<") {
                    var start = i;
                    do { i++; } while (text[i] !== ">" && i < text.length);
                    digits.push(parseValue(text.slice(start + 1, i)));
                }
                else throw new Error(c + " is not a valid character");
            }
            return parseBaseFromArray(digits, base, isNegative);
        };

        function parseBaseFromArray(digits, base, isNegative) {
            var val = Integer[0], pow = Integer[1], i;
            for (i = digits.length - 1; i >= 0; i--) {
                val = val.add(digits[i].times(pow));
                pow = pow.times(base);
            }
            return isNegative ? val.negate() : val;
        }

        function stringify(digit, alphabet) {
            alphabet = alphabet || DEFAULT_ALPHABET;
            if (digit < alphabet.length) {
                return alphabet[digit];
            }
            return "<" + digit + ">";
        }

        function toBase(n, base) {
            base = bigInt(base);
            if (base.isZero()) {
                if (n.isZero()) return { value: [0], isNegative: false };
                throw new Error("Cannot convert nonzero numbers to base 0.");
            }
            if (base.equals(-1)) {
                if (n.isZero()) return { value: [0], isNegative: false };
                if (n.isNegative())
                    return {
                        value: [].concat.apply([], Array.apply(null, Array(-n.toJSNumber()))
                            .map(Array.prototype.valueOf, [1, 0])
                        ),
                        isNegative: false
                    };

                var arr = Array.apply(null, Array(n.toJSNumber() - 1))
                    .map(Array.prototype.valueOf, [0, 1]);
                arr.unshift([1]);
                return {
                    value: [].concat.apply([], arr),
                    isNegative: false
                };
            }

            var neg = false;
            if (n.isNegative() && base.isPositive()) {
                neg = true;
                n = n.abs();
            }
            if (base.isUnit()) {
                if (n.isZero()) return { value: [0], isNegative: false };

                return {
                    value: Array.apply(null, Array(n.toJSNumber()))
                        .map(Number.prototype.valueOf, 1),
                    isNegative: neg
                };
            }
            var out = [];
            var left = n, divmod;
            while (left.isNegative() || left.compareAbs(base) >= 0) {
                divmod = left.divmod(base);
                left = divmod.quotient;
                var digit = divmod.remainder;
                if (digit.isNegative()) {
                    digit = base.minus(digit).abs();
                    left = left.next();
                }
                out.push(digit.toJSNumber());
            }
            out.push(left.toJSNumber());
            return { value: out.reverse(), isNegative: neg };
        }

        function toBaseString(n, base, alphabet) {
            var arr = toBase(n, base);
            return (arr.isNegative ? "-" : "") + arr.value.map(function (x) {
                return stringify(x, alphabet);
            }).join('');
        }

        BigInteger.prototype.toArray = function (radix) {
            return toBase(this, radix);
        };

        SmallInteger.prototype.toArray = function (radix) {
            return toBase(this, radix);
        };

        NativeBigInt.prototype.toArray = function (radix) {
            return toBase(this, radix);
        };

        BigInteger.prototype.toString = function (radix, alphabet) {
            if (radix === undefined$1) radix = 10;
            if (radix !== 10) return toBaseString(this, radix, alphabet);
            var v = this.value, l = v.length, str = String(v[--l]), zeros = "0000000", digit;
            while (--l >= 0) {
                digit = String(v[l]);
                str += zeros.slice(digit.length) + digit;
            }
            var sign = this.sign ? "-" : "";
            return sign + str;
        };

        SmallInteger.prototype.toString = function (radix, alphabet) {
            if (radix === undefined$1) radix = 10;
            if (radix != 10) return toBaseString(this, radix, alphabet);
            return String(this.value);
        };

        NativeBigInt.prototype.toString = SmallInteger.prototype.toString;

        NativeBigInt.prototype.toJSON = BigInteger.prototype.toJSON = SmallInteger.prototype.toJSON = function () { return this.toString(); };

        BigInteger.prototype.valueOf = function () {
            return parseInt(this.toString(), 10);
        };
        BigInteger.prototype.toJSNumber = BigInteger.prototype.valueOf;

        SmallInteger.prototype.valueOf = function () {
            return this.value;
        };
        SmallInteger.prototype.toJSNumber = SmallInteger.prototype.valueOf;
        NativeBigInt.prototype.valueOf = NativeBigInt.prototype.toJSNumber = function () {
            return parseInt(this.toString(), 10);
        };

        function parseStringValue(v) {
            if (isPrecise(+v)) {
                var x = +v;
                if (x === truncate(x))
                    return supportsNativeBigInt ? new NativeBigInt(BigInt(x)) : new SmallInteger(x);
                throw new Error("Invalid integer: " + v);
            }
            var sign = v[0] === "-";
            if (sign) v = v.slice(1);
            var split = v.split(/e/i);
            if (split.length > 2) throw new Error("Invalid integer: " + split.join("e"));
            if (split.length === 2) {
                var exp = split[1];
                if (exp[0] === "+") exp = exp.slice(1);
                exp = +exp;
                if (exp !== truncate(exp) || !isPrecise(exp)) throw new Error("Invalid integer: " + exp + " is not a valid exponent.");
                var text = split[0];
                var decimalPlace = text.indexOf(".");
                if (decimalPlace >= 0) {
                    exp -= text.length - decimalPlace - 1;
                    text = text.slice(0, decimalPlace) + text.slice(decimalPlace + 1);
                }
                if (exp < 0) throw new Error("Cannot include negative exponent part for integers");
                text += (new Array(exp + 1)).join("0");
                v = text;
            }
            var isValid = /^([0-9][0-9]*)$/.test(v);
            if (!isValid) throw new Error("Invalid integer: " + v);
            if (supportsNativeBigInt) {
                return new NativeBigInt(BigInt(sign ? "-" + v : v));
            }
            var r = [], max = v.length, l = LOG_BASE, min = max - l;
            while (max > 0) {
                r.push(+v.slice(min, max));
                min -= l;
                if (min < 0) min = 0;
                max -= l;
            }
            trim(r);
            return new BigInteger(r, sign);
        }

        function parseNumberValue(v) {
            if (supportsNativeBigInt) {
                return new NativeBigInt(BigInt(v));
            }
            if (isPrecise(v)) {
                if (v !== truncate(v)) throw new Error(v + " is not an integer.");
                return new SmallInteger(v);
            }
            return parseStringValue(v.toString());
        }

        function parseValue(v) {
            if (typeof v === "number") {
                return parseNumberValue(v);
            }
            if (typeof v === "string") {
                return parseStringValue(v);
            }
            if (typeof v === "bigint") {
                return new NativeBigInt(v);
            }
            return v;
        }
        // Pre-define numbers in range [-999,999]
        for (var i = 0; i < 1000; i++) {
            Integer[i] = parseValue(i);
            if (i > 0) Integer[-i] = parseValue(-i);
        }
        // Backwards compatibility
        Integer.one = Integer[1];
        Integer.zero = Integer[0];
        Integer.minusOne = Integer[-1];
        Integer.max = max;
        Integer.min = min;
        Integer.gcd = gcd;
        Integer.lcm = lcm;
        Integer.isInstance = function (x) { return x instanceof BigInteger || x instanceof SmallInteger || x instanceof NativeBigInt; };
        Integer.randBetween = randBetween;

        Integer.fromArray = function (digits, base, isNegative) {
            return parseBaseFromArray(digits.map(parseValue), parseValue(base || 10), isNegative);
        };

        return Integer;
    })();

    // Node.js check
    if (module.hasOwnProperty("exports")) {
        module.exports = bigInt;
    }
    });

    var nodeSqlParser = createCommonjsModule(function (module, exports) {
    !function(r,t){for(var e in t)r[e]=t[e];}(exports,function(r){var t={};function e(n){if(t[n])return t[n].exports;var u=t[n]={i:n,l:!1,exports:{}};return r[n].call(u.exports,u,u.exports,e),u.l=!0,u.exports}return e.m=r,e.c=t,e.d=function(r,t,n){e.o(r,t)||Object.defineProperty(r,t,{enumerable:!0,get:n});},e.r=function(r){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(r,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(r,"__esModule",{value:!0});},e.t=function(r,t){if(1&t&&(r=e(r)),8&t)return r;if(4&t&&"object"==typeof r&&r&&r.__esModule)return r;var n=Object.create(null);if(e.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:r}),2&t&&"string"!=typeof r)for(var u in r)e.d(n,u,function(t){return r[t]}.bind(null,u));return n},e.n=function(r){var t=r&&r.__esModule?function(){return r.default}:function(){return r};return e.d(t,"a",t),t},e.o=function(r,t){return Object.prototype.hasOwnProperty.call(r,t)},e.p="",e(e.s=10)}([function(r,t){r.exports=BigInteger;},function(r,t,e){var n=e(0);function u(r,t,e,n){this.message=r,this.expected=t,this.found=e,this.location=n,this.name="SyntaxError","function"==typeof Error.captureStackTrace&&Error.captureStackTrace(this,u);}!function(r,t){function e(){this.constructor=r;}e.prototype=t.prototype,r.prototype=new e;}(u,Error),u.buildMessage=function(r,t){var e={literal:function(r){return '"'+u(r.text)+'"'},class:function(r){var t,e="";for(t=0;t<r.parts.length;t++)e+=r.parts[t]instanceof Array?s(r.parts[t][0])+"-"+s(r.parts[t][1]):s(r.parts[t]);return "["+(r.inverted?"^":"")+e+"]"},any:function(r){return "any character"},end:function(r){return "end of input"},other:function(r){return r.description}};function n(r){return r.charCodeAt(0).toString(16).toUpperCase()}function u(r){return r.replace(/\\/g,"\\\\").replace(/"/g,'\\"').replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(r){return "\\x0"+n(r)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(r){return "\\x"+n(r)}))}function s(r){return r.replace(/\\/g,"\\\\").replace(/\]/g,"\\]").replace(/\^/g,"\\^").replace(/-/g,"\\-").replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(r){return "\\x0"+n(r)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(r){return "\\x"+n(r)}))}return "Expected "+function(r){var t,n,u,s=new Array(r.length);for(t=0;t<r.length;t++)s[t]=(u=r[t],e[u.type](u));if(s.sort(),s.length>0){for(t=1,n=1;t<s.length;t++)s[t-1]!==s[t]&&(s[n]=s[t],n++);s.length=n;}switch(s.length){case 1:return s[0];case 2:return s[0]+" or "+s[1];default:return s.slice(0,-1).join(", ")+", or "+s[s.length-1]}}(r)+" but "+function(r){return r?'"'+u(r)+'"':"end of input"}(t)+" found."},r.exports={SyntaxError:u,parse:function(r,t){t=void 0!==t?t:{};var e,s={},o={start:Ze},a=Ze,i=Be("(",!1),c=Be(")",!1),l=Be("INTERSECT",!0),b=Be("EXCEPT",!0),v=function(r,t){return fs(r,t)},d=Be("FOR",!0),L=Be("SYSTEM_TIME",!0),C=Be("AS",!0),p=Be("OF",!0),w=Be("REPLACE",!0),E=Be("UNNEST",!0),h=function(r,t){return t.unshift(r),t.forEach(r=>{const{table:t,as:e}=r;ps[t]=t,e&&(ps[e]=t),function(r){const t=ds(r);r.clear(),t.forEach(t=>r.add(t));}(Cs);}),t},A=Be("RANGE",!0),y=Be("UNBOUNDED",!0),T=Be("PRECEDING",!0),m=Be("CURRENT",!0),S=Be("ROW",!1),I=Be("ROWS",!0),N=Be("FOLLOWING",!0),R=function(r,t){return bs(r,t)},_=Be("!",!1),O=Be("=",!1),g=function(r){return r[0]+" "+r[2]},x=Be(">=",!1),U=Be(">",!1),M=Be("<=",!1),D=Be("<>",!1),k=Be("<",!1),$=Be("!=",!1),F=Be("+",!1),P=Be("-",!1),G=Be("*",!1),H=Be("/",!1),j=Be("%",!1),Y=function(r){return !0===os[r.toUpperCase()]},B=Be('"',!1),X=/^[^"]/,W=Xe(['"'],!0,!1),V=function(r){return r.join("")},K=Be("'",!1),q=/^[^']/,Z=Xe(["'"],!0,!1),z=Be("`",!1),J=/^[^`]/,Q=Xe(["`"],!0,!1),rr=function(r,t){return r+t.join("")},tr=/^[A-Za-z_]/,er=Xe([["A","Z"],["a","z"],"_"],!1,!1),nr=/^[A-Za-z0-9_]/,ur=Xe([["A","Z"],["a","z"],["0","9"],"_"],!1,!1),sr=/^[A-Za-z0-9_:]/,or=Xe([["A","Z"],["a","z"],["0","9"],"_",":"],!1,!1),ar=Be(":",!1),ir=Be("UPDATE",!0),cr=function(r,t,e){return {type:"function",name:r,args:t||{type:"expr_list",value:[]},over:e}},lr=Be("CENTURY",!0),fr=Be("DAY",!0),br=Be("DECADE",!0),vr=Be("DOW",!0),dr=Be("DOY",!0),Lr=Be("EPOCH",!0),Cr=Be("HOUR",!0),pr=Be("ISODOW",!0),wr=Be("ISOYEAR",!0),Er=Be("MICROSECONDS",!0),hr=Be("MILLENNIUM",!0),Ar=Be("MILLISECONDS",!0),yr=Be("MINUTE",!0),Tr=Be("MONTH",!0),mr=Be("QUARTER",!0),Sr=Be("SECOND",!0),Ir=Be("TIMEZONE",!0),Nr=Be("TIMEZONE_HOUR",!0),Rr=Be("TIMEZONE_MINUTE",!0),_r=Be("WEEK",!0),Or=Be("YEAR",!0),gr=Be("R",!0),xr=function(r,t){return {type:r.toLowerCase(),value:t[1].join("")}},Ur=/^[^"\\\0-\x1F\x7F]/,Mr=Xe(['"',"\\",["\0",""],""],!0,!1),Dr=/^[^'\\]/,kr=Xe(["'","\\"],!0,!1),$r=Be("\\'",!1),Fr=Be('\\"',!1),Pr=Be("\\\\",!1),Gr=Be("\\/",!1),Hr=Be("\\b",!1),jr=Be("\\f",!1),Yr=Be("\\n",!1),Br=Be("\\r",!1),Xr=Be("\\t",!1),Wr=Be("\\u",!1),Vr=Be("\\",!1),Kr=/^[\n\r]/,qr=Xe(["\n","\r"],!1,!1),Zr=Be(".",!1),zr=/^[0-9]/,Jr=Xe([["0","9"]],!1,!1),Qr=/^[0-9a-fA-F]/,rt=Xe([["0","9"],["a","f"],["A","F"]],!1,!1),tt=/^[eE]/,et=Xe(["e","E"],!1,!1),nt=/^[+\-]/,ut=Xe(["+","-"],!1,!1),st=Be("NULL",!0),ot=(Be("TRUE",!0)),at=(Be("FALSE",!0)),it=(Be("SELECT",!0)),ct=(Be("PARTITION",!0)),lt=(Be("FROM",!0)),ft=(Be("ON",!0)),bt=Be("LEFT",!0),vt=Be("RIGHT",!0),dt=Be("FULL",!0),Lt=Be("INNER",!0),Ct=Be("CROSS",!0),pt=Be("JOIN",!0),wt=Be("OUTER",!0),Et=Be("OVER",!0),ht=Be("UNION",!0),At=Be("VALUE",!0),yt=(Be("USING",!0)),Tt=Be("WHERE",!0),mt=Be("WITH",!0),St=Be("GROUP",!0),It=Be("BY",!0),Nt=Be("ORDER",!0),Rt=Be("HAVING",!0),_t=Be("WINDOW",!0),Ot=Be("ORDINAL",!0),gt=Be("LIMIT",!0),xt=Be("OFFSET",!0),Ut=Be("ASC",!0),Mt=Be("DESC",!0),Dt=Be("ALL",!0),kt=Be("DISTINCT",!0),$t=Be("BETWEEN",!0),Ft=Be("IN",!0),Pt=Be("IS",!0),Gt=Be("LIKE",!0),Ht=Be("EXISTS",!0),jt=Be("NOT",!0),Yt=Be("AND",!0),Bt=Be("OR",!0),Xt=Be("COUNT",!0),Wt=Be("MAX",!0),Vt=Be("MIN",!0),Kt=Be("SUM",!0),qt=Be("AVG",!0),Zt=Be("EXTRACT",!0),zt=(Be("CASE",!0)),Jt=Be("WHEN",!0),Qt=Be("THEN",!0),re=Be("ELSE",!0),te=Be("END",!0),ee=Be("CAST",!0),ne=Be("ARRAY",!0),ue=Be("BYTES",!0),se=Be("BOOL",!0),oe=(Be("GEOGRAPHY",!0)),ae=(Be("NUMERIC",!0)),ie=Be("DECIMAL",!0),ce=Be("SIGNED",!0),le=Be("UNSIGNED",!0),fe=Be("INT64",!0),be=(Be("INTEGER",!0)),ve=(Be("STRING",!0)),de=Be("STRUCT",!0),Le=(Be("FLOAT64",!0)),Ce=(Be("DATE",!0)),pe=Be("DATETIME",!0),we=Be("TIME",!0),Ee=Be("TIMESTAMP",!0),he=(Be("CURRENT_DATE",!0)),Ae=(Be("INTERVAL",!0)),ye=Be("CURRENT_TIME",!0),Te=Be("CURRENT_TIMESTAMP",!0),me=(Be(",",!1)),Se=Be("[",!1),Ie=Be("]",!1),Ne=Be(";",!1),Re=Be("||",!1),_e=Be("&&",!1),Oe=Be("/*",!1),ge=Be("*/",!1),xe=Be("--",!1),Ue=Be("#",!1),Me={type:"any"},De=/^[ \t\n\r]/,ke=Xe([" ","\t","\n","\r"],!1,!1),$e=function(r){return {dataType:r}},Fe=function(r,t){return {dataType:r,definition:t,anglebracket:!0}},Pe=0,Ge=[{line:1,column:1}],He=0,je=[],Ye=0;if("startRule"in t){if(!(t.startRule in o))throw new Error("Can't start parsing from rule \""+t.startRule+'".');a=o[t.startRule];}function Be(r,t){return {type:"literal",text:r,ignoreCase:t}}function Xe(r,t,e){return {type:"class",parts:r,inverted:t,ignoreCase:e}}function We(t){var e,n=Ge[t];if(n)return n;for(e=t-1;!Ge[e];)e--;for(n={line:(n=Ge[e]).line,column:n.column};e<t;)10===r.charCodeAt(e)?(n.line++,n.column=1):n.column++,e++;return Ge[t]=n,n}function Ve(r,t){var e=We(r),n=We(t);return {start:{offset:r,line:e.line,column:e.column},end:{offset:t,line:n.line,column:n.column}}}function Ke(r){Pe<He||(Pe>He&&(He=Pe,je=[]),je.push(r));}function qe(r,t,e){return new u(u.buildMessage(r,t),r,t,e)}function Ze(){var r,t;return r=Pe,qu()!==s?((t=function(){var r,t,e,n,u,o,a,i;if(r=Pe,(t=ze())!==s){if(e=[],n=Pe,(u=qu())!==s&&(o=Vu())!==s&&(a=qu())!==s&&(i=ze())!==s?n=u=[u,o,a,i]:(Pe=n,n=s),n!==s)for(;n!==s;)e.push(n),n=Pe,(u=qu())!==s&&(o=Vu())!==s&&(a=qu())!==s&&(i=ze())!==s?n=u=[u,o,a,i]:(Pe=n,n=s);else e=s;e!==s?(t=function(r,t){const e=[r&&r.ast||r];for(let r=0;r<t.length;r++)t[r][3]&&0!==t[r][3].length&&e.push(t[r][3]&&t[r][3].ast||t[r][3]);return {tableList:Array.from(Ls),columnList:ds(Cs),ast:e}}(t,e),r=t):(Pe=r,r=s);}else Pe=r,r=s;return r}())===s&&(t=ze()),t!==s?(r=t):(Pe=r,r=s)):(Pe=r,r=s),r}function ze(){var t,e,n,u,o,a,l;return (t=function(){var r,t,e,n,u,o;r=Pe,(t=function(){var r,t,e,n,u,o,a,i,c;if(r=Pe,(t=vu())!==s)if(qu()!==s)if((e=en())!==s){for(n=[],u=Pe,(o=qu())!==s&&(a=Pu())!==s&&(i=qu())!==s&&(c=en())!==s?u=o=[o,a,i,c]:(Pe=u,u=s);u!==s;)n.push(u),u=Pe,(o=qu())!==s&&(a=Pu())!==s&&(i=qu())!==s&&(c=en())!==s?u=o=[o,a,i,c]:(Pe=u,u=s);n!==s?(t=v(e,n),r=t):(Pe=r,r=s);}else Pe=r,r=s;else Pe=r,r=s;else Pe=r,r=s;return r}())===s&&(t=null);t!==s&&qu()!==s&&(e=Qe())!==s&&qu()!==s?((n=pn())===s&&(n=null),n!==s&&qu()!==s?((u=hn())===s&&(u=null),u!==s&&qu()!==s?((o=Vu())===s&&(o=null),o!==s?(a=t,i=e,c=n,l=u,t={tableList:Array.from(Ls),columnList:ds(Cs),ast:{type:"bigquery",with:a,select:i&&i.ast,orderby:c,limit:l,parentheses:i&&i.parentheses||!1}},r=t):(Pe=r,r=s)):(Pe=r,r=s)):(Pe=r,r=s)):(Pe=r,r=s);var a,i,c,l;return r}())===s&&(t=Pe,e=Pe,40===r.charCodeAt(Pe)?(n="(",Pe++):(n=s,0===Ye&&Ke(i)),n!==s&&(u=qu())!==s&&(o=tn())!==s&&(a=qu())!==s?(41===r.charCodeAt(Pe)?(l=")",Pe++):(l=s,0===Ye&&Ke(c)),l!==s?e=n=[n,u,o,a,l]:(Pe=e,e=s)):(Pe=e,e=s),e!==s&&(e={...e[2],parentheses:!0}),t=e),t}function Je(){var t,e,n,u;return t=Pe,(e=function(){var t,e,n,u;t=Pe,"union"===r.substr(Pe,5).toLowerCase()?(e=r.substr(Pe,5),Pe+=5):(e=s,0===Ye&&Ke(ht));e!==s?(n=Pe,Ye++,u=Yn(),Ye--,u===s?n=void 0:(Pe=n,n=s),n!==s?t=e=[e,n]:(Pe=t,t=s)):(Pe=t,t=s);return t}())!==s&&qu()!==s?((n=Cu())===s&&(n=pu()),n===s&&(n=null),n!==s?(t=e=(u=n)?"union "+u.toLowerCase():"union"):(Pe=t,t=s)):(Pe=t,t=s),t===s&&(t=Pe,"intersect"===r.substr(Pe,9).toLowerCase()?(e=r.substr(Pe,9),Pe+=9):(e=s,0===Ye&&Ke(l)),e===s&&("except"===r.substr(Pe,6).toLowerCase()?(e=r.substr(Pe,6),Pe+=6):(e=s,0===Ye&&Ke(b))),e!==s&&qu()!==s&&(n=pu())!==s?(t=e=function(r,t){return `${r.toLowerCase()} ${t.toLowerCase()}`}(e,n)):(Pe=t,t=s)),t}function Qe(){var t,e,n,u,o,a,l;return (t=rn())===s&&(t=Pe,e=Pe,40===r.charCodeAt(Pe)?(n="(",Pe++):(n=s,0===Ye&&Ke(i)),n!==s&&(u=qu())!==s&&(o=rn())!==s&&(a=qu())!==s?(41===r.charCodeAt(Pe)?(l=")",Pe++):(l=s,0===Ye&&Ke(c)),l!==s?e=n=[n,u,o,a,l]:(Pe=e,e=s)):(Pe=e,e=s),e!==s&&(e={...e[2],parentheses:!0}),t=e),t}function rn(){var r,t,e,n,u,o,a,i;if(r=Pe,(t=tn())!==s){for(e=[],n=Pe,(u=qu())!==s?((o=Je())===s&&(o=null),o!==s&&(a=qu())!==s&&(i=tn())!==s?n=u=[u,o,a,i]:(Pe=n,n=s)):(Pe=n,n=s);n!==s;)e.push(n),n=Pe,(u=qu())!==s?((o=Je())===s&&(o=null),o!==s&&(a=qu())!==s&&(i=tn())!==s?n=u=[u,o,a,i]:(Pe=n,n=s)):(Pe=n,n=s);e!==s?(r=t=function(r,t){let e=r;for(let r=0;r<t.length;r++)e._next=t[r][3],e.union=t[r][1],e=e._next;return {tableList:Array.from(Ls),columnList:ds(Cs),ast:r}}(t,e)):(Pe=r,r=s);}else Pe=r,r=s;return r}function tn(){var t,e,n,u,o,a,l;return (t=function(){var t,e,n,u,o,a,i,c,l,f,b,w,A;t=Pe,(e=function(){var t,e,n,u;t=Pe,"select"===r.substr(Pe,6).toLowerCase()?(e=r.substr(Pe,6),Pe+=6):(e=s,0===Ye&&Ke(it));e!==s?(n=Pe,Ye++,u=Yn(),Ye--,u===s?n=void 0:(Pe=n,n=s),n!==s?t=e=[e,n]:(Pe=t,t=s)):(Pe=t,t=s);return t}())!==s&&Zu()!==s?((n=function(){var t,e,n;t=Pe,(e=iu())!==s&&qu()!==s?((n=gu())===s&&(n=function(){var t,e,n,u;t=Pe,"value"===r.substr(Pe,5).toLowerCase()?(e=r.substr(Pe,5),Pe+=5):(e=s,0===Ye&&Ke(At));e!==s?(n=Pe,Ye++,u=Yn(),Ye--,u===s?n=void 0:(Pe=n,n=s),n!==s?(t=e="VALUE"):(Pe=t,t=s)):(Pe=t,t=s);return t}()),n!==s?(u=n,e=`${e[0].toLowerCase()} ${u.toLowerCase()}`,t=e):(Pe=t,t=s)):(Pe=t,t=s);var u;return t}())===s&&(n=null),n!==s&&qu()!==s?((u=Cu())===s&&(u=pu()),u===s&&(u=null),u!==s&&qu()!==s&&(o=nn())!==s&&qu()!==s?((a=function(){var t,e,n,u,o;t=Pe,au()!==s&&qu()!==s?("unnest"===r.substr(Pe,6).toLowerCase()?(e=r.substr(Pe,6),Pe+=6):(e=s,0===Ye&&Ke(E)),e!==s&&qu()!==s&&Hu()!==s&&qu()!==s?((n=yn())===s&&(n=null),n!==s&&qu()!==s&&ju()!==s&&qu()!==s?((u=an())===s&&(u=null),u!==s&&qu()!==s?((o=function(){var r,t;r=Pe,vu()!==s&&qu()!==s&&Lu()!==s&&qu()!==s?((t=an())===s&&(t=null),t!==s?(r={keyword:"with offset as",as:t}):(Pe=r,r=s)):(Pe=r,r=s);return r}())===s&&(o=null),o!==s?(t={type:"unnest",expr:n,parentheses:!0,as:u,with_offset:o}):(Pe=t,t=s)):(Pe=t,t=s)):(Pe=t,t=s)):(Pe=t,t=s)):(Pe=t,t=s);t===s&&(t=Pe,au()!==s&&qu()!==s&&(e=function(){var r,t,e,n;if(r=Pe,(t=ln())!==s){for(e=[],n=cn();n!==s;)e.push(n),n=cn();e!==s?(t=h(t,e),r=t):(Pe=r,r=s);}else Pe=r,r=s;return r}())!==s?(t=e):(Pe=t,t=s));return t}())===s&&(a=null),a!==s&&qu()!==s?((i=function(){var t,e,n,u,o,a;t=Pe,"for"===r.substr(Pe,3).toLowerCase()?(e=r.substr(Pe,3),Pe+=3):(e=s,0===Ye&&Ke(d));e!==s&&qu()!==s?("system_time"===r.substr(Pe,11).toLowerCase()?(n=r.substr(Pe,11),Pe+=11):(n=s,0===Ye&&Ke(L)),n!==s&&qu()!==s?("as"===r.substr(Pe,2).toLowerCase()?(u=r.substr(Pe,2),Pe+=2):(u=s,0===Ye&&Ke(C)),u!==s&&qu()!==s?("of"===r.substr(Pe,2).toLowerCase()?(o=r.substr(Pe,2),Pe+=2):(o=s,0===Ye&&Ke(p)),o!==s&&qu()!==s&&(a=yn())!==s?(t=e={keyword:"for system_time as of",expr:a}):(Pe=t,t=s)):(Pe=t,t=s)):(Pe=t,t=s)):(Pe=t,t=s);return t}())===s&&(i=null),i!==s&&qu()!==s?((c=function(){var t,e;t=Pe,function(){var t,e,n,u;t=Pe,"where"===r.substr(Pe,5).toLowerCase()?(e=r.substr(Pe,5),Pe+=5):(e=s,0===Ye&&Ke(Tt));e!==s?(n=Pe,Ye++,u=Yn(),Ye--,u===s?n=void 0:(Pe=n,n=s),n!==s?t=e=[e,n]:(Pe=t,t=s)):(Pe=t,t=s);return t}()!==s&&qu()!==s&&(e=mn())!==s?(t=e):(Pe=t,t=s);return t}())===s&&(c=null),c!==s&&qu()!==s?((l=function(){var t,e,n;t=Pe,(e=function(){var t,e,n,u;t=Pe,"group"===r.substr(Pe,5).toLowerCase()?(e=r.substr(Pe,5),Pe+=5):(e=s,0===Ye&&Ke(St));e!==s?(n=Pe,Ye++,u=Yn(),Ye--,u===s?n=void 0:(Pe=n,n=s),n!==s?t=e=[e,n]:(Pe=t,t=s)):(Pe=t,t=s);return t}())!==s&&qu()!==s&&du()!==s&&qu()!==s&&(n=An())!==s?(e=n.value,t=e):(Pe=t,t=s);return t}())===s&&(l=null),l!==s&&qu()!==s?((f=function(){var t,e;t=Pe,function(){var t,e,n,u;t=Pe,"having"===r.substr(Pe,6).toLowerCase()?(e=r.substr(Pe,6),Pe+=6):(e=s,0===Ye&&Ke(Rt));e!==s?(n=Pe,Ye++,u=Yn(),Ye--,u===s?n=void 0:(Pe=n,n=s),n!==s?t=e=[e,n]:(Pe=t,t=s)):(Pe=t,t=s);return t}()!==s&&qu()!==s&&(e=yn())!==s?(t=e):(Pe=t,t=s);return t}())===s&&(f=null),f!==s&&qu()!==s?((b=pn())===s&&(b=null),b!==s&&qu()!==s?((w=hn())===s&&(w=null),w!==s&&qu()!==s?((A=function(){var t,e;t=Pe,function(){var t,e,n,u;t=Pe,"window"===r.substr(Pe,6).toLowerCase()?(e=r.substr(Pe,6),Pe+=6):(e=s,0===Ye&&Ke(_t));e!==s?(n=Pe,Ye++,u=Yn(),Ye--,u===s?n=void 0:(Pe=n,n=s),n!==s?t=e=[e,n]:(Pe=t,t=s)):(Pe=t,t=s);return t}()!==s&&qu()!==s&&(e=function(){var r,t,e,n,u,o,a,i;if(r=Pe,(t=dn())!==s){for(e=[],n=Pe,(u=qu())!==s&&(o=Pu())!==s&&(a=qu())!==s&&(i=dn())!==s?n=u=[u,o,a,i]:(Pe=n,n=s);n!==s;)e.push(n),n=Pe,(u=qu())!==s&&(o=Pu())!==s&&(a=qu())!==s&&(i=dn())!==s?n=u=[u,o,a,i]:(Pe=n,n=s);e!==s?(t=v(t,e),r=t):(Pe=r,r=s);}else Pe=r,r=s;return r}())!==s?(t={keyword:"window",type:"window",expr:e}):(Pe=t,t=s);return t}())===s&&(A=null),A!==s?(e=function(r,t,e,n,u,s,o,a,i,c,l){return Array.isArray(n)&&n.forEach(r=>r.table&&Ls.add(`select::${r.db}::${r.table}`)),{type:"select",as_struct_val:r,distinct:t,columns:e,from:n,for_sys_time_as_of:u,where:s,groupby:o,having:a,orderby:i,limit:c,window:l}}(n,u,o,a,i,c,l,f,b,w,A),t=e):(Pe=t,t=s)):(Pe=t,t=s)):(Pe=t,t=s)):(Pe=t,t=s)):(Pe=t,t=s)):(Pe=t,t=s)):(Pe=t,t=s)):(Pe=t,t=s)):(Pe=t,t=s)):(Pe=t,t=s)):(Pe=t,t=s);return t}())===s&&(t=Pe,e=Pe,40===r.charCodeAt(Pe)?(n="(",Pe++):(n=s,0===Ye&&Ke(i)),n!==s&&(u=qu())!==s&&(o=tn())!==s&&(a=qu())!==s?(41===r.charCodeAt(Pe)?(l=")",Pe++):(l=s,0===Ye&&Ke(c)),l!==s?e=n=[n,u,o,a,l]:(Pe=e,e=s)):(Pe=e,e=s),e!==s&&(e={...e[2],parentheses_symbol:!0}),t=e),t}function en(){var r,t,e,n;return r=Pe,(t=Zn())===s&&(t=jn()),t!==s&&qu()!==s&&iu()!==s&&qu()!==s&&Hu()!==s&&qu()!==s&&(e=Qe())!==s&&qu()!==s&&ju()!==s?("string"==typeof(n=t)&&(n={type:"default",value:n}),r=t={name:n,stmt:e}):(Pe=r,r=s),r}function nn(){var t,e,n,u,o,a,i,c,l,f,v,d;if(t=Pe,(e=Gu())!==s&&(n=qu())!==s?("except"===r.substr(Pe,6).toLowerCase()?(u=r.substr(Pe,6),Pe+=6):(u=s,0===Ye&&Ke(b)),u===s&&("replace"===r.substr(Pe,7).toLowerCase()?(u=r.substr(Pe,7),Pe+=7):(u=s,0===Ye&&Ke(w))),u!==s&&(o=qu())!==s&&(a=Hu())!==s&&(i=qu())!==s&&(c=un())!==s&&qu()!==s&&ju()!==s?(l=u,f=c,Cs.add("select::null::(.*)"),t=e={expr_list:f,parentheses:!0,star:"*",type:l.toLowerCase()}):(Pe=t,t=s)):(Pe=t,t=s),t===s){if(t=Pe,(e=Cu())===s&&(e=Pe,(n=Gu())!==s?(u=Pe,Ye++,o=Yn(),Ye--,o===s?u=void 0:(Pe=u,u=s),u!==s?e=n=[n,u]:(Pe=e,e=s)):(Pe=e,e=s),e===s&&(e=Gu())),e!==s){for(n=[],u=Pe,(o=qu())!==s&&(a=Pu())!==s&&(i=qu())!==s&&(c=on())!==s?u=o=[o,a,i,c]:(Pe=u,u=s);u!==s;)n.push(u),u=Pe,(o=qu())!==s&&(a=Pu())!==s&&(i=qu())!==s&&(c=on())!==s?u=o=[o,a,i,c]:(Pe=u,u=s);n!==s&&(u=qu())!==s?((o=Pu())===s&&(o=null),o!==s?(v=e,d=n,Cs.add("select::null::(.*)"),t=e=d&&d.length>0?(v[0]={expr:{type:"column_ref",table:null,column:"*"},as:null},fs(v[0],d)):v[0]):(Pe=t,t=s)):(Pe=t,t=s);}else Pe=t,t=s;t===s&&(t=Pe,(e=un())!==s&&(n=qu())!==s?((u=Pu())===s&&(u=null),u!==s?(t=e=e):(Pe=t,t=s)):(Pe=t,t=s));}return t}function un(){var r,t,e,n,u,o,a,i;if(r=Pe,(t=on())!==s){for(e=[],n=Pe,(u=qu())!==s&&(o=Pu())!==s&&(a=qu())!==s&&(i=on())!==s?n=u=[u,o,a,i]:(Pe=n,n=s);n!==s;)e.push(n),n=Pe,(u=qu())!==s&&(o=Pu())!==s&&(a=qu())!==s&&(i=on())!==s?n=u=[u,o,a,i]:(Pe=n,n=s);e!==s?(r=t=v(t,e)):(Pe=r,r=s);}else Pe=r,r=s;return r}function sn(){var t,e,n,u;return t=Pe,(e=yn())!==s&&qu()!==s&&Xu()!==s&&qu()!==s?((n=Lu())===s&&(n=function(){var t,e,n,u;t=Pe,"ordinal"===r.substr(Pe,7).toLowerCase()?(e=r.substr(Pe,7),Pe+=7):(e=s,0===Ye&&Ke(Ot));e!==s?(n=Pe,Ye++,u=Yn(),Ye--,u===s?n=void 0:(Pe=n,n=s),n!==s?(t=e="ORDINAL"):(Pe=t,t=s)):(Pe=t,t=s);return t}()),n!==s&&qu()!==s&&Hu()!==s&&qu()!==s&&(u=ru())!==s&&qu()!==s&&ju()!==s&&qu()!==s&&Wu()!==s?(t=e={expr:e,offset:`[${n}(${u.value})]`}):(Pe=t,t=s)):(Pe=t,t=s),t}function on(){var r,t,e,n,u,o,a;return r=Pe,(t=Fn())!==s&&qu()!==s&&(e=Fu())!==s?(n=Pe,(u=sn())===s&&(u=Fn()),u!==s&&(o=qu())!==s&&(a=Fu())!==s?n=u=[u,o,a]:(Pe=n,n=s),n===s&&(n=null),n!==s&&(u=qu())!==s&&(o=Gu())!==s?(r=t=function(r,t){Cs.add(`select::${r}::(.*)`);let e="*";const n=t&&t[0];return "string"==typeof n&&(e=n+".*"),n&&n.expr&&n.offset&&(e={...n,suffix:".*"}),{expr:{type:"column_ref",table:r,column:e},as:null}}(t,n)):(Pe=r,r=s)):(Pe=r,r=s),r===s&&(r=Pe,(t=sn())!==s&&qu()!==s?((e=an())===s&&(e=null),e!==s?(r=t={expr:{type:"column_ref",table:null,column:t},as:e}):(Pe=r,r=s)):(Pe=r,r=s),r===s&&(r=function(){var r,t,e;return r=Pe,(t=yn())!==s&&qu()!==s?((e=an())===s&&(e=null),e!==s?(r=t={expr:t,as:e}):(Pe=r,r=s)):(Pe=r,r=s),r}())),r}function an(){var r,t,e;return r=Pe,(t=iu())!==s&&qu()!==s&&(e=function(){var r,t;r=Pe,(t=jn())!==s?((function(r){if(!0===os[r.toUpperCase()])throw new Error("Error: "+JSON.stringify(r)+" is a reserved word, can not as alias clause");return !1}(t)?s:void 0)!==s?(r=t=t):(Pe=r,r=s)):(Pe=r,r=s);r===s&&(r=Pe,(t=Pn())!==s&&(t=t),r=t);return r}())!==s?(r=t=e):(Pe=r,r=s),r===s&&(r=Pe,(t=iu())===s&&(t=null),t!==s&&qu()!==s&&(e=Fn())!==s?(r=t=e):(Pe=r,r=s)),r}function cn(){var t,e,n;return t=Pe,qu()!==s&&(e=Pu())!==s&&qu()!==s&&(n=ln())!==s?(t=n):(Pe=t,t=s),t===s&&(t=Pe,qu()!==s&&(e=function(){var t,e,n,u,o,a,i,c,l,f,b;if(t=Pe,(e=fn())!==s)if(qu()!==s)if((n=ln())!==s)if(qu()!==s)if((u=function(){var t,e,n,u;t=Pe,"using"===r.substr(Pe,5).toLowerCase()?(e=r.substr(Pe,5),Pe+=5):(e=s,0===Ye&&Ke(yt));e!==s?(n=Pe,Ye++,u=Yn(),Ye--,u===s?n=void 0:(Pe=n,n=s),n!==s?t=e=[e,n]:(Pe=t,t=s)):(Pe=t,t=s);return t}())!==s)if(qu()!==s)if(Hu()!==s)if(qu()!==s)if((o=jn())!==s){for(a=[],i=Pe,(c=qu())!==s&&(l=Pu())!==s&&(f=qu())!==s&&(b=jn())!==s?i=c=[c,l,f,b]:(Pe=i,i=s);i!==s;)a.push(i),i=Pe,(c=qu())!==s&&(l=Pu())!==s&&(f=qu())!==s&&(b=jn())!==s?i=c=[c,l,f,b]:(Pe=i,i=s);a!==s&&(i=qu())!==s&&(c=ju())!==s?(v=e,L=o,C=a,(d=n).join=v,d.using=fs(L,C),t=e=d):(Pe=t,t=s);}else Pe=t,t=s;else Pe=t,t=s;else Pe=t,t=s;else Pe=t,t=s;else Pe=t,t=s;else Pe=t,t=s;else Pe=t,t=s;else Pe=t,t=s;else Pe=t,t=s;var v,d,L,C;t===s&&(t=Pe,(e=fn())!==s&&qu()!==s&&(n=ln())!==s&&qu()!==s?((u=vn())===s&&(u=null),u!==s?(e=function(r,t,e){return t.join=r,t.on=e,t}(e,n,u),t=e):(Pe=t,t=s)):(Pe=t,t=s),t===s&&(t=Pe,(e=fn())!==s&&qu()!==s&&(n=Hu())!==s&&qu()!==s&&(u=Qe())!==s&&qu()!==s&&ju()!==s&&qu()!==s?((o=an())===s&&(o=null),o!==s&&(a=qu())!==s?((i=vn())===s&&(i=null),i!==s?(e=function(r,t,e,n){return t.parentheses=!0,{expr:t,as:e,join:r,on:n}}(e,u,o,i),t=e):(Pe=t,t=s)):(Pe=t,t=s)):(Pe=t,t=s)));return t}())!==s?(t=e):(Pe=t,t=s)),t}function ln(){var r,t,e,n,u,o;return r=Pe,(t=bn())!==s&&qu()!==s?((e=an())===s&&(e=null),e!==s?(o=e,r=t="var"===(u=t).type?(u.as=o,u):{db:u.db,table:u.table,as:o}):(Pe=r,r=s)):(Pe=r,r=s),r===s&&(r=Pe,(t=Hu())!==s&&qu()!==s&&(e=Qe())!==s&&qu()!==s&&ju()!==s&&qu()!==s?((n=an())===s&&(n=null),n!==s?(r=t=function(r,t){return r.parentheses=!0,{expr:r,as:t}}(e,n)):(Pe=r,r=s)):(Pe=r,r=s)),r}function fn(){var t,e,n;return t=Pe,(e=function(){var t,e,n,u;t=Pe,"left"===r.substr(Pe,4).toLowerCase()?(e=r.substr(Pe,4),Pe+=4):(e=s,0===Ye&&Ke(bt));e!==s?(n=Pe,Ye++,u=Yn(),Ye--,u===s?n=void 0:(Pe=n,n=s),n!==s?t=e=[e,n]:(Pe=t,t=s)):(Pe=t,t=s);return t}())!==s&&qu()!==s?((n=fu())===s&&(n=null),n!==s&&qu()!==s&&lu()!==s?(t=e="LEFT JOIN"):(Pe=t,t=s)):(Pe=t,t=s),t===s&&(t=Pe,(e=function(){var t,e,n,u;t=Pe,"right"===r.substr(Pe,5).toLowerCase()?(e=r.substr(Pe,5),Pe+=5):(e=s,0===Ye&&Ke(vt));e!==s?(n=Pe,Ye++,u=Yn(),Ye--,u===s?n=void 0:(Pe=n,n=s),n!==s?t=e=[e,n]:(Pe=t,t=s)):(Pe=t,t=s);return t}())!==s&&qu()!==s?((n=fu())===s&&(n=null),n!==s&&qu()!==s&&lu()!==s?(t=e="RIGHT JOIN"):(Pe=t,t=s)):(Pe=t,t=s),t===s&&(t=Pe,(e=function(){var t,e,n,u;t=Pe,"full"===r.substr(Pe,4).toLowerCase()?(e=r.substr(Pe,4),Pe+=4):(e=s,0===Ye&&Ke(dt));e!==s?(n=Pe,Ye++,u=Yn(),Ye--,u===s?n=void 0:(Pe=n,n=s),n!==s?t=e=[e,n]:(Pe=t,t=s)):(Pe=t,t=s);return t}())!==s&&qu()!==s?((n=fu())===s&&(n=null),n!==s&&qu()!==s&&lu()!==s?(t=e="FULL JOIN"):(Pe=t,t=s)):(Pe=t,t=s),t===s&&(t=Pe,(e=function(){var t,e,n,u;t=Pe,"cross"===r.substr(Pe,5).toLowerCase()?(e=r.substr(Pe,5),Pe+=5):(e=s,0===Ye&&Ke(Ct));e!==s?(n=Pe,Ye++,u=Yn(),Ye--,u===s?n=void 0:(Pe=n,n=s),n!==s?t=e=[e,n]:(Pe=t,t=s)):(Pe=t,t=s);return t}())!==s&&qu()!==s&&(n=lu())!==s?(t=e=e[0].toUpperCase()+" JOIN"):(Pe=t,t=s),t===s&&(t=Pe,(e=function(){var t,e,n,u;t=Pe,"inner"===r.substr(Pe,5).toLowerCase()?(e=r.substr(Pe,5),Pe+=5):(e=s,0===Ye&&Ke(Lt));e!==s?(n=Pe,Ye++,u=Yn(),Ye--,u===s?n=void 0:(Pe=n,n=s),n!==s?t=e=[e,n]:(Pe=t,t=s)):(Pe=t,t=s);return t}())===s&&(e=null),e!==s&&qu()!==s&&(n=lu())!==s?(t=e=function(r){return r?r[0].toUpperCase()+" JOIN":"JOIN"}(e)):(Pe=t,t=s))))),t}function bn(){var r,t,e,n,u,o,a,i;return r=Pe,(t=Fn())!==s?(e=Pe,(n=qu())!==s&&(u=Fu())!==s&&(o=qu())!==s&&(a=Fn())!==s?e=n=[n,u,o,a]:(Pe=e,e=s),e!==s?(n=Pe,(u=qu())!==s&&(o=Fu())!==s&&(a=qu())!==s&&(i=Fn())!==s?n=u=[u,o,a,i]:(Pe=n,n=s),n!==s?(r=t=function(r,t,e){const n={db:null,table:r};return null!==e&&(n.db=`${r}.${t[3]}`,n.table=e[3]),n}(t,e,n)):(Pe=r,r=s)):(Pe=r,r=s)):(Pe=r,r=s),r===s&&(r=Pe,(t=Fn())!==s?(e=Pe,(n=qu())!==s&&(u=Fu())!==s&&(o=qu())!==s&&(a=Fn())!==s?e=n=[n,u,o,a]:(Pe=e,e=s),e===s&&(e=null),e!==s?(r=t=function(r,t){const e={db:null,table:r};return null!==t&&(e.db=r,e.table=t[3]),e}(t,e)):(Pe=r,r=s)):(Pe=r,r=s)),r}function vn(){var r,t;return r=Pe,cu()!==s&&qu()!==s&&(t=yn())!==s?(r=t):(Pe=r,r=s),r}function dn(){var r,t,e;return r=Pe,(t=jn())!==s&&qu()!==s&&iu()!==s&&qu()!==s&&(e=Ln())!==s?(r=t={name:t,as_window_specification:e}):(Pe=r,r=s),r}function Ln(){var t,e,n;return t=Pe,(e=jn())!==s&&(e=e),(t=e)===s&&(t=Pe,(e=Hu())!==s&&qu()!==s?((n=function(){var t,e,n,u,o;t=Pe,(e=Fn())===s&&(e=null);e!==s&&qu()!==s?((n=Cn())===s&&(n=null),n!==s&&qu()!==s?((u=pn())===s&&(u=null),u!==s&&qu()!==s?((o=function(){var t,e,n,u,o,a,i,c,l,f;t=Pe,"range"===r.substr(Pe,5).toLowerCase()?(e=r.substr(Pe,5),Pe+=5):(e=s,0===Ye&&Ke(A));e!==s&&qu()!==s&&wu()!==s?("unbounded"===r.substr(Pe,9).toLowerCase()?(n=r.substr(Pe,9),Pe+=9):(n=s,0===Ye&&Ke(y)),n!==s&&(u=qu())!==s?("preceding"===r.substr(Pe,9).toLowerCase()?(o=r.substr(Pe,9),Pe+=9):(o=s,0===Ye&&Ke(T)),o!==s&&(a=qu())!==s&&mu()!==s&&qu()!==s?("current"===r.substr(Pe,7).toLowerCase()?(i=r.substr(Pe,7),Pe+=7):(i=s,0===Ye&&Ke(m)),i!==s&&(c=qu())!==s?("ROW"===r.substr(Pe,3)?(l="ROW",Pe+=3):(l=s,0===Ye&&Ke(S)),l!==s?(t=e="range between unbounded preceding and current row"):(Pe=t,t=s)):(Pe=t,t=s)):(Pe=t,t=s)):(Pe=t,t=s)):(Pe=t,t=s);t===s&&(t=Pe,"rows"===r.substr(Pe,4).toLowerCase()?(e=r.substr(Pe,4),Pe+=4):(e=s,0===Ye&&Ke(I)),e!==s&&qu()!==s&&wu()!==s&&(n=qu())!==s&&(u=ru())!==s&&(o=qu())!==s?("preceding"===r.substr(Pe,9).toLowerCase()?(a=r.substr(Pe,9),Pe+=9):(a=s,0===Ye&&Ke(T)),a!==s&&qu()!==s&&mu()!==s&&(i=qu())!==s&&(c=ru())!==s&&(l=qu())!==s?("following"===r.substr(Pe,9).toLowerCase()?(f=r.substr(Pe,9),Pe+=9):(f=s,0===Ye&&Ke(N)),f!==s?(b=c,e=`rows between ${u.value} preceding and ${b.value} following`,t=e):(Pe=t,t=s)):(Pe=t,t=s)):(Pe=t,t=s));var b;return t}())===s&&(o=null),o!==s?(e=function(r,t,e,n){return {name:r,partitionby:t,orderby:e,window_frame_clause:n}}(e,n,u,o),t=e):(Pe=t,t=s)):(Pe=t,t=s)):(Pe=t,t=s)):(Pe=t,t=s);return t}())===s&&(n=null),n!==s&&qu()!==s&&ju()!==s?(t=e={window_specification:n,parentheses:!0}):(Pe=t,t=s)):(Pe=t,t=s)),t}function Cn(){var t,e;return t=Pe,function(){var t,e,n,u;t=Pe,"partition"===r.substr(Pe,9).toLowerCase()?(e=r.substr(Pe,9),Pe+=9):(e=s,0===Ye&&Ke(ct));e!==s?(n=Pe,Ye++,u=Yn(),Ye--,u===s?n=void 0:(Pe=n,n=s),n!==s?(t=e="PARTITION"):(Pe=t,t=s)):(Pe=t,t=s);return t}()!==s&&qu()!==s&&du()!==s&&qu()!==s&&(e=nn())!==s?(t=e):(Pe=t,t=s),t}function pn(){var t,e;return t=Pe,function(){var t,e,n,u;t=Pe,"order"===r.substr(Pe,5).toLowerCase()?(e=r.substr(Pe,5),Pe+=5):(e=s,0===Ye&&Ke(Nt));e!==s?(n=Pe,Ye++,u=Yn(),Ye--,u===s?n=void 0:(Pe=n,n=s),n!==s?t=e=[e,n]:(Pe=t,t=s)):(Pe=t,t=s);return t}()!==s&&qu()!==s&&du()!==s&&qu()!==s&&(e=function(){var r,t,e,n,u,o,a,i;if(r=Pe,(t=wn())!==s){for(e=[],n=Pe,(u=qu())!==s&&(o=Pu())!==s&&(a=qu())!==s&&(i=wn())!==s?n=u=[u,o,a,i]:(Pe=n,n=s);n!==s;)e.push(n),n=Pe,(u=qu())!==s&&(o=Pu())!==s&&(a=qu())!==s&&(i=wn())!==s?n=u=[u,o,a,i]:(Pe=n,n=s);e!==s?(t=v(t,e),r=t):(Pe=r,r=s);}else Pe=r,r=s;return r}())!==s?(t=e):(Pe=t,t=s),t}function wn(){var t,e,n;return t=Pe,(e=yn())!==s&&qu()!==s?((n=function(){var t,e,n,u;t=Pe,"desc"===r.substr(Pe,4).toLowerCase()?(e=r.substr(Pe,4),Pe+=4):(e=s,0===Ye&&Ke(Mt));e!==s?(n=Pe,Ye++,u=Yn(),Ye--,u===s?n=void 0:(Pe=n,n=s),n!==s?(t=e="DESC"):(Pe=t,t=s)):(Pe=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=Pe,"asc"===r.substr(Pe,3).toLowerCase()?(e=r.substr(Pe,3),Pe+=3):(e=s,0===Ye&&Ke(Ut));e!==s?(n=Pe,Ye++,u=Yn(),Ye--,u===s?n=void 0:(Pe=n,n=s),n!==s?(t=e="ASC"):(Pe=t,t=s)):(Pe=t,t=s);return t}()),n===s&&(n=null),n!==s?(t=e=function(r,t){const e={expr:r,type:"ASC"};return "DESC"===t&&(e.type="DESC"),e}(e,n)):(Pe=t,t=s)):(Pe=t,t=s),t}function En(){var r;return (r=ru())===s&&(r=Wn()),r}function hn(){var t,e,n,u,o,a;return t=Pe,function(){var t,e,n,u;t=Pe,"limit"===r.substr(Pe,5).toLowerCase()?(e=r.substr(Pe,5),Pe+=5):(e=s,0===Ye&&Ke(gt));e!==s?(n=Pe,Ye++,u=Yn(),Ye--,u===s?n=void 0:(Pe=n,n=s),n!==s?t=e=[e,n]:(Pe=t,t=s)):(Pe=t,t=s);return t}()!==s&&qu()!==s&&(e=En())!==s&&qu()!==s?(n=Pe,(u=Pu())===s&&(u=Lu()),u!==s&&(o=qu())!==s&&(a=En())!==s?n=u=[u,o,a]:(Pe=n,n=s),n===s&&(n=null),n!==s?(t=function(r,t){const e=[r];return t&&e.push(t[2]),{seperator:t&&t[0]&&t[0].toLowerCase()||"",value:e}}(e,n)):(Pe=t,t=s)):(Pe=t,t=s),t}function An(){var r,t,e,n,u,o,a,i;if(r=Pe,(t=yn())!==s){for(e=[],n=Pe,(u=qu())!==s&&(o=Pu())!==s&&(a=qu())!==s&&(i=yn())!==s?n=u=[u,o,a,i]:(Pe=n,n=s);n!==s;)e.push(n),n=Pe,(u=qu())!==s&&(o=Pu())!==s&&(a=qu())!==s&&(i=yn())!==s?n=u=[u,o,a,i]:(Pe=n,n=s);e!==s?(r=t=function(r,t){const e={type:"expr_list"};return e.value=fs(r,t),e}(t,e)):(Pe=r,r=s);}else Pe=r,r=s;return r}function yn(){var r;return (r=function(){var r,t,e;r=Pe,(t=ss())===s&&(t=gu());t!==s&&qu()!==s&&Hu()!==s&&qu()!==s&&(e=nn())!==s&&qu()!==s&&ju()!==s?(r=t={definition:n=t,expr_list:e,type:"struct",keyword:n&&"struct",parentheses:!0}):(Pe=r,r=s);var n;return r}())===s&&(r=function(){var r,t,e,n,u,o,a,i;if(r=Pe,(t=Mn())!==s){if(e=[],n=Pe,(u=qu())!==s&&(o=Ku())!==s&&(a=qu())!==s&&(i=Mn())!==s?n=u=[u,o,a,i]:(Pe=n,n=s),n!==s)for(;n!==s;)e.push(n),n=Pe,(u=qu())!==s&&(o=Ku())!==s&&(a=qu())!==s&&(i=Mn())!==s?n=u=[u,o,a,i]:(Pe=n,n=s);else e=s;e!==s?(t=bs(t,e),r=t):(Pe=r,r=s);}else Pe=r,r=s;return r}())===s&&(r=function(){var r,t,e,n,u,o,a,i;if(r=Pe,(t=Sn())!==s){for(e=[],n=Pe,(u=Zu())!==s&&(o=Su())!==s&&(a=qu())!==s&&(i=Sn())!==s?n=u=[u,o,a,i]:(Pe=n,n=s);n!==s;)e.push(n),n=Pe,(u=Zu())!==s&&(o=Su())!==s&&(a=qu())!==s&&(i=Sn())!==s?n=u=[u,o,a,i]:(Pe=n,n=s);e!==s?(t=R(t,e),r=t):(Pe=r,r=s);}else Pe=r,r=s;return r}())===s&&(r=function(){var r,t,e,n,u,o;if(r=Pe,(t=gn())!==s){if(e=[],n=Pe,(u=qu())!==s&&(o=Mn())!==s?n=u=[u,o]:(Pe=n,n=s),n!==s)for(;n!==s;)e.push(n),n=Pe,(u=qu())!==s&&(o=Mn())!==s?n=u=[u,o]:(Pe=n,n=s);else e=s;e!==s?(t=is(t,e[0][1]),r=t):(Pe=r,r=s);}else Pe=r,r=s;return r}())===s&&(r=tn())===s&&(r=function(){var r,t,e,n,u,o;r=Pe,(t=Xu())!==s&&qu()!==s&&(e=nn())!==s&&(n=qu())!==s&&(u=Wu())!==s?(r=t={array_path:e,type:"array",keyword:"",parentheses:!0}):(Pe=r,r=s);r===s&&(r=Pe,(t=us())===s&&(t=_u()),t===s&&(t=null),t!==s&&Xu()!==s&&(e=qu())!==s&&(n=function(){var r,t,e,n,u,o,a,i;if(r=Pe,(t=qn())!==s){for(e=[],n=Pe,(u=qu())!==s&&(o=Pu())!==s&&(a=qu())!==s&&(i=qn())!==s?n=u=[u,o,a,i]:(Pe=n,n=s);n!==s;)e.push(n),n=Pe,(u=qu())!==s&&(o=Pu())!==s&&(a=qu())!==s&&(i=qn())!==s?n=u=[u,o,a,i]:(Pe=n,n=s);e!==s?(t=v(t,e),r=t):(Pe=r,r=s);}else Pe=r,r=s;return r}())!==s&&(u=qu())!==s&&Wu()!==s?(t=function(r,t){return {definition:r,array_path:t.map(r=>({expr:r,as:null})),type:"array",keyword:r&&"array",parentheses:!0}}(t,n),r=t):(Pe=r,r=s),r===s&&(r=Pe,(t=us())===s&&(t=_u()),t===s&&(t=null),t!==s&&qu()!==s?((e=Xu())===s&&(e=Hu()),e!==s&&(n=qu())!==s?((u=function(){var r,t,e,n,u,o,a,i;if(r=Pe,(t=Tn())!==s){for(e=[],n=Pe,(u=qu())!==s&&(o=Pu())!==s&&(a=qu())!==s&&(i=Tn())!==s?n=u=[u,o,a,i]:(Pe=n,n=s);n!==s;)e.push(n),n=Pe,(u=qu())!==s&&(o=Pu())!==s&&(a=qu())!==s&&(i=Tn())!==s?n=u=[u,o,a,i]:(Pe=n,n=s);e!==s?(t=v(t,e),r=t):(Pe=r,r=s);}else Pe=r,r=s;return r}())===s&&(u=yn()),u!==s&&qu()!==s?((o=Wu())===s&&(o=ju()),o!==s?(t=function(r,t){return {definition:r,expr_list:t,type:"array",keyword:r&&"array",parentheses:!0}}(t,u),r=t):(Pe=r,r=s)):(Pe=r,r=s)):(Pe=r,r=s)):(Pe=r,r=s)));return r}()),r}function Tn(){var r,t;return r=Pe,Hu()!==s&&qu()!==s&&(t=nn())!==s&&qu()!==s&&ju()!==s?(r=t):(Pe=r,r=s),r}function mn(){var r,t,e,n,u,o,a,i;if(r=Pe,(t=yn())!==s){for(e=[],n=Pe,(u=qu())!==s?((o=mu())===s&&(o=Su())===s&&(o=Pu()),o!==s&&(a=qu())!==s&&(i=yn())!==s?n=u=[u,o,a,i]:(Pe=n,n=s)):(Pe=n,n=s);n!==s;)e.push(n),n=Pe,(u=qu())!==s?((o=mu())===s&&(o=Su())===s&&(o=Pu()),o!==s&&(a=qu())!==s&&(i=yn())!==s?n=u=[u,o,a,i]:(Pe=n,n=s)):(Pe=n,n=s);e!==s?(r=t=function(r,t){let e=r,n="";for(let u=0;u<t.length;u++)","===t[u][1]?(n=",",0===u&&(e=[r]),e.push(t[u][3])):e=cs(t[u][1],e,t[u][3]);if(","===n){const r={type:"expr_list"};return r.value=e,r}return e}(t,e)):(Pe=r,r=s);}else Pe=r,r=s;return r}function Sn(){var r,t,e,n,u,o,a,i;if(r=Pe,(t=In())!==s){for(e=[],n=Pe,(u=Zu())!==s&&(o=mu())!==s&&(a=qu())!==s&&(i=In())!==s?n=u=[u,o,a,i]:(Pe=n,n=s);n!==s;)e.push(n),n=Pe,(u=Zu())!==s&&(o=mu())!==s&&(a=qu())!==s&&(i=In())!==s?n=u=[u,o,a,i]:(Pe=n,n=s);e!==s?(r=t=R(t,e)):(Pe=r,r=s);}else Pe=r,r=s;return r}function In(){var t,e,n,u,o;return (t=Nn())===s&&(t=function(){var r,t,e;r=Pe,(t=function(){var r,t,e,n,u;r=Pe,t=Pe,(e=Tu())!==s&&(n=qu())!==s&&(u=yu())!==s?t=e=[e,n,u]:(Pe=t,t=s);t!==s&&(t=g(t));(r=t)===s&&(r=yu());return r}())!==s&&qu()!==s&&Hu()!==s&&qu()!==s&&(e=Qe())!==s&&qu()!==s&&ju()!==s?(n=t,(u=e).parentheses=!0,t=is(n,u),r=t):(Pe=r,r=s);var n,u;return r}())===s&&(t=Pe,(e=Tu())===s&&(e=Pe,33===r.charCodeAt(Pe)?(n="!",Pe++):(n=s,0===Ye&&Ke(_)),n!==s?(u=Pe,Ye++,61===r.charCodeAt(Pe)?(o="=",Pe++):(o=s,0===Ye&&Ke(O)),Ye--,o===s?u=void 0:(Pe=u,u=s),u!==s?e=n=[n,u]:(Pe=e,e=s)):(Pe=e,e=s)),e!==s&&(n=qu())!==s&&(u=In())!==s?(t=e=is("NOT",u)):(Pe=t,t=s)),t}function Nn(){var r,t,e,n,u;return r=Pe,(t=On())!==s&&qu()!==s?((e=function(){var r;(r=function(){var t,e,n,u,o,a;t=[],e=Pe,(n=qu())!==s&&(u=Rn())!==s&&(o=qu())!==s&&(a=On())!==s?e=n=[n,u,o,a]:(Pe=e,e=s);if(e!==s)for(;e!==s;)t.push(e),e=Pe,(n=qu())!==s&&(u=Rn())!==s&&(o=qu())!==s&&(a=On())!==s?e=n=[n,u,o,a]:(Pe=e,e=s);else t=s;t!==s&&(t={type:"arithmetic",tail:t});return t}())===s&&(r=function(){var r,t,e,n;r=Pe,(t=_n())!==s&&qu()!==s&&(e=Hu())!==s&&qu()!==s&&(n=An())!==s&&qu()!==s&&ju()!==s?(r=t={op:t,right:n}):(Pe=r,r=s);r===s&&(r=Pe,(t=_n())!==s&&qu()!==s&&(e=Zn())!==s?(t=function(r,t){return {op:r,right:t}}(t,e),r=t):(Pe=r,r=s));return r}())===s&&(r=function(){var r,t,e,n;r=Pe,(t=function(){var r,t,e,n,u;r=Pe,t=Pe,(e=Tu())!==s&&(n=qu())!==s&&(u=wu())!==s?t=e=[e,n,u]:(Pe=t,t=s);t!==s&&(t=g(t));(r=t)===s&&(r=wu());return r}())!==s&&qu()!==s&&(e=On())!==s&&qu()!==s&&mu()!==s&&qu()!==s&&(n=On())!==s?(r=t={op:t,right:{type:"expr_list",value:[e,n]}}):(Pe=r,r=s);return r}())===s&&(r=function(){var r,t,e,n,u;r=Pe,(t=hu())!==s&&(e=qu())!==s&&(n=On())!==s?(r=t={op:"IS",right:n}):(Pe=r,r=s);r===s&&(r=Pe,t=Pe,(e=hu())!==s&&(n=qu())!==s&&(u=Tu())!==s?t=e=[e,n,u]:(Pe=t,t=s),t!==s&&(e=qu())!==s&&(n=On())!==s?(t=function(r){return {op:"IS NOT",right:r}}(n),r=t):(Pe=r,r=s));return r}())===s&&(r=function(){var r,t,e;r=Pe,(t=function(){var r,t,e,n,u;r=Pe,t=Pe,(e=Tu())!==s&&(n=qu())!==s&&(u=Au())!==s?t=e=[e,n,u]:(Pe=t,t=s);t!==s&&(t=g(t));(r=t)===s&&(r=Au());return r}())!==s&&qu()!==s?((e=qn())===s&&(e=Nn()),e!==s?(r=t={op:t,right:e}):(Pe=r,r=s)):(Pe=r,r=s);return r}());return r}())===s&&(e=null),e!==s?(n=t,r=t=null===(u=e)?n:"arithmetic"===u.type?bs(n,u.tail):cs(u.op,n,u.right)):(Pe=r,r=s)):(Pe=r,r=s),r===s&&(r=Zn())===s&&(r=$n()),r}function Rn(){var t;return ">="===r.substr(Pe,2)?(t=">=",Pe+=2):(t=s,0===Ye&&Ke(x)),t===s&&(62===r.charCodeAt(Pe)?(t=">",Pe++):(t=s,0===Ye&&Ke(U)),t===s&&("<="===r.substr(Pe,2)?(t="<=",Pe+=2):(t=s,0===Ye&&Ke(M)),t===s&&("<>"===r.substr(Pe,2)?(t="<>",Pe+=2):(t=s,0===Ye&&Ke(D)),t===s&&(60===r.charCodeAt(Pe)?(t="<",Pe++):(t=s,0===Ye&&Ke(k)),t===s&&(61===r.charCodeAt(Pe)?(t="=",Pe++):(t=s,0===Ye&&Ke(O)),t===s&&("!="===r.substr(Pe,2)?(t="!=",Pe+=2):(t=s,0===Ye&&Ke($)))))))),t}function _n(){var r,t,e,n,u;return r=Pe,t=Pe,(e=Tu())!==s&&(n=qu())!==s&&(u=Eu())!==s?t=e=[e,n,u]:(Pe=t,t=s),t!==s&&(t=g(t)),(r=t)===s&&(r=Eu()),r}function On(){var r,t,e,n,u,o,a,i;if(r=Pe,(t=xn())!==s){for(e=[],n=Pe,(u=qu())!==s&&(o=gn())!==s&&(a=qu())!==s&&(i=xn())!==s?n=u=[u,o,a,i]:(Pe=n,n=s);n!==s;)e.push(n),n=Pe,(u=qu())!==s&&(o=gn())!==s&&(a=qu())!==s&&(i=xn())!==s?n=u=[u,o,a,i]:(Pe=n,n=s);e!==s?(r=t=R(t,e)):(Pe=r,r=s);}else Pe=r,r=s;return r}function gn(){var t;return 43===r.charCodeAt(Pe)?(t="+",Pe++):(t=s,0===Ye&&Ke(F)),t===s&&(45===r.charCodeAt(Pe)?(t="-",Pe++):(t=s,0===Ye&&Ke(P))),t}function xn(){var r,t,e,n,u,o,a,i;if(r=Pe,(t=Mn())!==s){for(e=[],n=Pe,(u=qu())!==s&&(o=Un())!==s&&(a=qu())!==s&&(i=Mn())!==s?n=u=[u,o,a,i]:(Pe=n,n=s);n!==s;)e.push(n),n=Pe,(u=qu())!==s&&(o=Un())!==s&&(a=qu())!==s&&(i=Mn())!==s?n=u=[u,o,a,i]:(Pe=n,n=s);e!==s?(r=t=bs(t,e)):(Pe=r,r=s);}else Pe=r,r=s;return r}function Un(){var t;return 42===r.charCodeAt(Pe)?(t="*",Pe++):(t=s,0===Ye&&Ke(G)),t===s&&(47===r.charCodeAt(Pe)?(t="/",Pe++):(t=s,0===Ye&&Ke(H)),t===s&&(37===r.charCodeAt(Pe)?(t="%",Pe++):(t=s,0===Ye&&Ke(j)))),t}function Mn(){var t,e,n;return (t=function(){var t,e,n,u,o,a,i;t=Pe,(e=Ru())!==s&&qu()!==s&&Hu()!==s&&qu()!==s&&(n=yn())!==s&&qu()!==s&&iu()!==s&&qu()!==s&&(u=ns())!==s&&qu()!==s&&(o=ju())!==s?(t=e={type:"cast",expr:n,symbol:"as",target:u}):(Pe=t,t=s);t===s&&(t=Pe,(e=Ru())!==s&&qu()!==s&&Hu()!==s&&qu()!==s&&(n=yn())!==s&&qu()!==s&&iu()!==s&&qu()!==s&&(u=Ou())!==s&&qu()!==s&&(o=Hu())!==s&&qu()!==s&&(a=tu())!==s&&qu()!==s&&ju()!==s&&qu()!==s&&(i=ju())!==s?(e=function(r,t){return {type:"cast",expr:r,symbol:"as",target:{dataType:"DECIMAL("+t+")"}}}(n,a),t=e):(Pe=t,t=s),t===s&&(t=Pe,(e=Ru())!==s&&qu()!==s&&Hu()!==s&&qu()!==s&&(n=yn())!==s&&qu()!==s&&iu()!==s&&qu()!==s&&(u=Ou())!==s&&qu()!==s&&(o=Hu())!==s&&qu()!==s&&(a=tu())!==s&&qu()!==s&&Pu()!==s&&qu()!==s&&(i=tu())!==s&&qu()!==s&&ju()!==s&&qu()!==s&&ju()!==s?(e=function(r,t,e){return {type:"cast",expr:r,symbol:"as",target:{dataType:"DECIMAL("+t+", "+e+")"}}}(n,a,i),t=e):(Pe=t,t=s),t===s&&(t=Pe,(e=Ru())!==s&&qu()!==s&&Hu()!==s&&qu()!==s&&(n=yn())!==s&&qu()!==s&&iu()!==s&&qu()!==s&&(u=function(){var t;(t=function(){var t,e,n,u;t=Pe,"signed"===r.substr(Pe,6).toLowerCase()?(e=r.substr(Pe,6),Pe+=6):(e=s,0===Ye&&Ke(ce));e!==s?(n=Pe,Ye++,u=Yn(),Ye--,u===s?n=void 0:(Pe=n,n=s),n!==s?(t=e="SIGNED"):(Pe=t,t=s)):(Pe=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Pe,"unsigned"===r.substr(Pe,8).toLowerCase()?(e=r.substr(Pe,8),Pe+=8):(e=s,0===Ye&&Ke(le));e!==s?(n=Pe,Ye++,u=Yn(),Ye--,u===s?n=void 0:(Pe=n,n=s),n!==s?(t=e="UNSIGNED"):(Pe=t,t=s)):(Pe=t,t=s);return t}());return t}())!==s&&qu()!==s?((o=function(){var t,e,n,u;t=Pe,"integer"===r.substr(Pe,7).toLowerCase()?(e=r.substr(Pe,7),Pe+=7):(e=s,0===Ye&&Ke(be));e!==s?(n=Pe,Ye++,u=Yn(),Ye--,u===s?n=void 0:(Pe=n,n=s),n!==s?(t=e="INTEGER"):(Pe=t,t=s)):(Pe=t,t=s);return t}())===s&&(o=null),o!==s&&qu()!==s&&(a=ju())!==s?(e=function(r,t,e){return {type:"cast",expr:r,symbol:"as",target:{dataType:t+(e?" "+e:"")}}}(n,u,o),t=e):(Pe=t,t=s)):(Pe=t,t=s))));return t}())===s&&(t=qn())===s&&(t=function(){var t;(t=function(){var t,e,n,u;t=Pe,(e=function(){var t,e,n,u;t=Pe,"count"===r.substr(Pe,5).toLowerCase()?(e=r.substr(Pe,5),Pe+=5):(e=s,0===Ye&&Ke(Xt));e!==s?(n=Pe,Ye++,u=Yn(),Ye--,u===s?n=void 0:(Pe=n,n=s),n!==s?(t=e="COUNT"):(Pe=t,t=s)):(Pe=t,t=s);return t}())!==s&&qu()!==s&&Hu()!==s&&qu()!==s&&(n=function(){var t,e,n,u,o;t=Pe,(e=function(){var e;42===r.charCodeAt(Pe)?(e="*",Pe++):(e=s,0===Ye&&Ke(G));e!==s&&(e={type:"star",value:"*"});return e}())!==s&&(e={expr:e});(t=e)===s&&(t=Pe,(e=pu())===s&&(e=null),e!==s&&qu()!==s&&(n=$n())!==s?(t=e={distinct:e,expr:n}):(Pe=t,t=s),t===s&&(t=Pe,(e=pu())===s&&(e=null),e!==s&&qu()!==s&&(n=Hu())!==s&&qu()!==s&&(u=yn())!==s&&qu()!==s&&ju()!==s&&qu()!==s?((o=pn())===s&&(o=null),o!==s?(e=function(r,t,e){return t.parentheses=!0,{distinct:r,expr:t,orderby:e}}(e,u,o),t=e):(Pe=t,t=s)):(Pe=t,t=s)));return t}())!==s&&qu()!==s&&ju()!==s&&qu()!==s?((u=Kn())===s&&(u=null),u!==s?(e=function(r,t,e){return {type:"aggr_func",name:r,args:t,over:e}}(e,n,u),t=e):(Pe=t,t=s)):(Pe=t,t=s);return t}())===s&&(t=function(){var t,e,n;t=Pe,(e=function(){var t;(t=function(){var t,e,n,u;t=Pe,"sum"===r.substr(Pe,3).toLowerCase()?(e=r.substr(Pe,3),Pe+=3):(e=s,0===Ye&&Ke(Kt));e!==s?(n=Pe,Ye++,u=Yn(),Ye--,u===s?n=void 0:(Pe=n,n=s),n!==s?(t=e="SUM"):(Pe=t,t=s)):(Pe=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Pe,"max"===r.substr(Pe,3).toLowerCase()?(e=r.substr(Pe,3),Pe+=3):(e=s,0===Ye&&Ke(Wt));e!==s?(n=Pe,Ye++,u=Yn(),Ye--,u===s?n=void 0:(Pe=n,n=s),n!==s?(t=e="MAX"):(Pe=t,t=s)):(Pe=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Pe,"min"===r.substr(Pe,3).toLowerCase()?(e=r.substr(Pe,3),Pe+=3):(e=s,0===Ye&&Ke(Vt));e!==s?(n=Pe,Ye++,u=Yn(),Ye--,u===s?n=void 0:(Pe=n,n=s),n!==s?(t=e="MIN"):(Pe=t,t=s)):(Pe=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Pe,"avg"===r.substr(Pe,3).toLowerCase()?(e=r.substr(Pe,3),Pe+=3):(e=s,0===Ye&&Ke(qt));e!==s?(n=Pe,Ye++,u=Yn(),Ye--,u===s?n=void 0:(Pe=n,n=s),n!==s?(t=e="AVG"):(Pe=t,t=s)):(Pe=t,t=s);return t}());return t}())!==s&&qu()!==s&&Hu()!==s&&qu()!==s&&(n=On())!==s&&qu()!==s&&ju()!==s?(t=e={type:"aggr_func",name:e,args:{expr:n}}):(Pe=t,t=s);return t}());return t}())===s&&(t=function(){var t,e,n,u,o;(t=function(){var t,e,n,u,o;t=Pe,(e=function(){var t,e,n,u;t=Pe,"extract"===r.substr(Pe,7).toLowerCase()?(e=r.substr(Pe,7),Pe+=7):(e=s,0===Ye&&Ke(Zt));e!==s?(n=Pe,Ye++,u=Yn(),Ye--,u===s?n=void 0:(Pe=n,n=s),n!==s?(t=e="EXTRACT"):(Pe=t,t=s)):(Pe=t,t=s);return t}())!==s&&qu()!==s&&Hu()!==s&&qu()!==s&&(n=function(){var t,e;"century"===r.substr(Pe,7).toLowerCase()?(t=r.substr(Pe,7),Pe+=7):(t=s,0===Ye&&Ke(lr));t===s&&("day"===r.substr(Pe,3).toLowerCase()?(t=r.substr(Pe,3),Pe+=3):(t=s,0===Ye&&Ke(fr)),t===s&&("decade"===r.substr(Pe,6).toLowerCase()?(t=r.substr(Pe,6),Pe+=6):(t=s,0===Ye&&Ke(br)),t===s&&("dow"===r.substr(Pe,3).toLowerCase()?(t=r.substr(Pe,3),Pe+=3):(t=s,0===Ye&&Ke(vr)),t===s&&("doy"===r.substr(Pe,3).toLowerCase()?(t=r.substr(Pe,3),Pe+=3):(t=s,0===Ye&&Ke(dr)),t===s&&("epoch"===r.substr(Pe,5).toLowerCase()?(t=r.substr(Pe,5),Pe+=5):(t=s,0===Ye&&Ke(Lr)),t===s&&("hour"===r.substr(Pe,4).toLowerCase()?(t=r.substr(Pe,4),Pe+=4):(t=s,0===Ye&&Ke(Cr)),t===s&&("isodow"===r.substr(Pe,6).toLowerCase()?(t=r.substr(Pe,6),Pe+=6):(t=s,0===Ye&&Ke(pr)),t===s&&("isoyear"===r.substr(Pe,7).toLowerCase()?(t=r.substr(Pe,7),Pe+=7):(t=s,0===Ye&&Ke(wr)),t===s&&("microseconds"===r.substr(Pe,12).toLowerCase()?(t=r.substr(Pe,12),Pe+=12):(t=s,0===Ye&&Ke(Er)),t===s&&("millennium"===r.substr(Pe,10).toLowerCase()?(t=r.substr(Pe,10),Pe+=10):(t=s,0===Ye&&Ke(hr)),t===s&&("milliseconds"===r.substr(Pe,12).toLowerCase()?(t=r.substr(Pe,12),Pe+=12):(t=s,0===Ye&&Ke(Ar)),t===s&&("minute"===r.substr(Pe,6).toLowerCase()?(t=r.substr(Pe,6),Pe+=6):(t=s,0===Ye&&Ke(yr)),t===s&&("month"===r.substr(Pe,5).toLowerCase()?(t=r.substr(Pe,5),Pe+=5):(t=s,0===Ye&&Ke(Tr)),t===s&&("quarter"===r.substr(Pe,7).toLowerCase()?(t=r.substr(Pe,7),Pe+=7):(t=s,0===Ye&&Ke(mr)),t===s&&("second"===r.substr(Pe,6).toLowerCase()?(t=r.substr(Pe,6),Pe+=6):(t=s,0===Ye&&Ke(Sr)),t===s&&("timezone"===r.substr(Pe,8).toLowerCase()?(t=r.substr(Pe,8),Pe+=8):(t=s,0===Ye&&Ke(Ir)),t===s&&("timezone_hour"===r.substr(Pe,13).toLowerCase()?(t=r.substr(Pe,13),Pe+=13):(t=s,0===Ye&&Ke(Nr)),t===s&&("timezone_minute"===r.substr(Pe,15).toLowerCase()?(t=r.substr(Pe,15),Pe+=15):(t=s,0===Ye&&Ke(Rr)),t===s&&("week"===r.substr(Pe,4).toLowerCase()?(t=r.substr(Pe,4),Pe+=4):(t=s,0===Ye&&Ke(_r)),t===s&&(t=Pe,"year"===r.substr(Pe,4).toLowerCase()?(e=r.substr(Pe,4),Pe+=4):(e=s,0===Ye&&Ke(Or)),e!==s&&(e=f),t=e))))))))))))))))))));return t}())!==s&&qu()!==s&&au()!==s&&qu()!==s?((u=Du())===s&&(u=ku())===s&&(u=Mu())===s&&(u=xu()),u===s&&(u=null),u!==s&&qu()!==s&&(o=yn())!==s&&qu()!==s&&ju()!==s?(e=function(r,t,e,n){return {type:r.toLowerCase(),args:{field:t,cast_type:e,source:n}}}(e,n,u,o),t=e):(Pe=t,t=s)):(Pe=t,t=s);return t}())===s&&(t=Pe,(e=function(){var r,t,e,n,u,o,a;r=Pe,(t=Fn())!==s?(e=Pe,(n=qu())!==s&&(u=Fu())!==s&&(o=qu())!==s&&(a=Fn())!==s?e=n=[n,u,o,a]:(Pe=e,e=s),e===s&&(e=null),e!==s?(t=function(r,t){let e=r;return null!==t&&(e=`${r}.${t[3]}`),e}(t,e),r=t):(Pe=r,r=s)):(Pe=r,r=s);return r}())!==s&&qu()!==s&&(n=Hu())!==s&&qu()!==s?((u=An())===s&&(u=null),u!==s&&qu()!==s&&ju()!==s&&qu()!==s?((o=Kn())===s&&(o=null),o!==s?(e=cr(e,u,o),t=e):(Pe=t,t=s)):(Pe=t,t=s)):(Pe=t,t=s),t===s&&(t=Pe,(e=function(){var t;(t=function(){var t,e,n,u;t=Pe,"current_date"===r.substr(Pe,12).toLowerCase()?(e=r.substr(Pe,12),Pe+=12):(e=s,0===Ye&&Ke(he));e!==s?(n=Pe,Ye++,u=Yn(),Ye--,u===s?n=void 0:(Pe=n,n=s),n!==s?(t=e="CURRENT_DATE"):(Pe=t,t=s)):(Pe=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Pe,"current_time"===r.substr(Pe,12).toLowerCase()?(e=r.substr(Pe,12),Pe+=12):(e=s,0===Ye&&Ke(ye));e!==s?(n=Pe,Ye++,u=Yn(),Ye--,u===s?n=void 0:(Pe=n,n=s),n!==s?(t=e="CURRENT_TIME"):(Pe=t,t=s)):(Pe=t,t=s);return t}())===s&&(t=$u());return t}())!==s&&qu()!==s&&(n=Hu())!==s&&qu()!==s?((u=An())===s&&(u=null),u!==s&&qu()!==s&&ju()!==s&&qu()!==s?((o=Kn())===s&&(o=null),o!==s?(e=cr(e,u,o),t=e):(Pe=t,t=s)):(Pe=t,t=s)):(Pe=t,t=s),t===s&&(t=Pe,(e=$u())!==s&&qu()!==s?((n=Vn())===s&&(n=null),n!==s?(e=function(r,t){return {type:"function",name:r,over:t}}(e,n),t=e):(Pe=t,t=s)):(Pe=t,t=s))));return t}())===s&&(t=function(){var r,t,e,n,u,o,a,i,c;if(r=Pe,(t=Iu())!==s)if(qu()!==s){if(e=[],(n=Dn())!==s)for(;n!==s;)e.push(n),n=Dn();else e=s;e!==s&&(n=qu())!==s?((u=kn())===s&&(u=null),u!==s&&(o=qu())!==s&&(a=Nu())!==s&&qu()!==s?((i=Iu())===s&&(i=null),i!==s?(l=e,(f=u)&&l.push(f),r=t={type:"case",expr:null,args:l}):(Pe=r,r=s)):(Pe=r,r=s)):(Pe=r,r=s);}else Pe=r,r=s;else Pe=r,r=s;var l,f;if(r===s)if(r=Pe,(t=Iu())!==s)if(qu()!==s)if((e=yn())!==s)if((n=qu())!==s){if(u=[],(o=Dn())!==s)for(;o!==s;)u.push(o),o=Dn();else u=s;u!==s&&(o=qu())!==s?((a=kn())===s&&(a=null),a!==s&&qu()!==s&&(i=Nu())!==s&&qu()!==s?((c=Iu())===s&&(c=null),c!==s?(t=function(r,t,e){return e&&t.push(e),{type:"case",expr:r,args:t}}(e,u,a),r=t):(Pe=r,r=s)):(Pe=r,r=s)):(Pe=r,r=s);}else Pe=r,r=s;else Pe=r,r=s;else Pe=r,r=s;else Pe=r,r=s;return r}())===s&&(t=function(){var t,e,n,u;t=Pe,(e=ku())!==s&&qu()!==s&&(n=yn())!==s&&qu()!==s&&(u=function(){var t;(t=function(){var t,e,n,u;t=Pe,"year"===r.substr(Pe,4).toLowerCase()?(e=r.substr(Pe,4),Pe+=4):(e=s,0===Ye&&Ke(Or));e!==s?(n=Pe,Ye++,u=Yn(),Ye--,u===s?n=void 0:(Pe=n,n=s),n!==s?(t=e="YEAR"):(Pe=t,t=s)):(Pe=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Pe,"month"===r.substr(Pe,5).toLowerCase()?(e=r.substr(Pe,5),Pe+=5):(e=s,0===Ye&&Ke(Tr));e!==s?(n=Pe,Ye++,u=Yn(),Ye--,u===s?n=void 0:(Pe=n,n=s),n!==s?(t=e="MONTH"):(Pe=t,t=s)):(Pe=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Pe,"day"===r.substr(Pe,3).toLowerCase()?(e=r.substr(Pe,3),Pe+=3):(e=s,0===Ye&&Ke(fr));e!==s?(n=Pe,Ye++,u=Yn(),Ye--,u===s?n=void 0:(Pe=n,n=s),n!==s?(t=e="DAY"):(Pe=t,t=s)):(Pe=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Pe,"hour"===r.substr(Pe,4).toLowerCase()?(e=r.substr(Pe,4),Pe+=4):(e=s,0===Ye&&Ke(Cr));e!==s?(n=Pe,Ye++,u=Yn(),Ye--,u===s?n=void 0:(Pe=n,n=s),n!==s?(t=e="HOUR"):(Pe=t,t=s)):(Pe=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Pe,"minute"===r.substr(Pe,6).toLowerCase()?(e=r.substr(Pe,6),Pe+=6):(e=s,0===Ye&&Ke(yr));e!==s?(n=Pe,Ye++,u=Yn(),Ye--,u===s?n=void 0:(Pe=n,n=s),n!==s?(t=e="MINUTE"):(Pe=t,t=s)):(Pe=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Pe,"second"===r.substr(Pe,6).toLowerCase()?(e=r.substr(Pe,6),Pe+=6):(e=s,0===Ye&&Ke(Sr));e!==s?(n=Pe,Ye++,u=Yn(),Ye--,u===s?n=void 0:(Pe=n,n=s),n!==s?(t=e="SECOND"):(Pe=t,t=s)):(Pe=t,t=s);return t}());return t}())!==s?(e={type:"interval",expr:n,unit:u.toLowerCase()},t=e):(Pe=t,t=s);return t}())===s&&(t=$n())===s&&(t=Wn())===s&&(t=Pe,Hu()!==s&&qu()!==s&&(e=mn())!==s&&qu()!==s&&ju()!==s?((n=e).parentheses=!0,t=n):(Pe=t,t=s)),t}function Dn(){var t,e,n;return t=Pe,function(){var t,e,n,u;t=Pe,"when"===r.substr(Pe,4).toLowerCase()?(e=r.substr(Pe,4),Pe+=4):(e=s,0===Ye&&Ke(Jt));e!==s?(n=Pe,Ye++,u=Yn(),Ye--,u===s?n=void 0:(Pe=n,n=s),n!==s?t=e=[e,n]:(Pe=t,t=s)):(Pe=t,t=s);return t}()!==s&&qu()!==s&&(e=mn())!==s&&qu()!==s&&function(){var t,e,n,u;t=Pe,"then"===r.substr(Pe,4).toLowerCase()?(e=r.substr(Pe,4),Pe+=4):(e=s,0===Ye&&Ke(Qt));e!==s?(n=Pe,Ye++,u=Yn(),Ye--,u===s?n=void 0:(Pe=n,n=s),n!==s?t=e=[e,n]:(Pe=t,t=s)):(Pe=t,t=s);return t}()!==s&&qu()!==s&&(n=yn())!==s?(t={type:"when",cond:e,result:n}):(Pe=t,t=s),t}function kn(){var t,e;return t=Pe,function(){var t,e,n,u;t=Pe,"else"===r.substr(Pe,4).toLowerCase()?(e=r.substr(Pe,4),Pe+=4):(e=s,0===Ye&&Ke(re));e!==s?(n=Pe,Ye++,u=Yn(),Ye--,u===s?n=void 0:(Pe=n,n=s),n!==s?t=e=[e,n]:(Pe=t,t=s)):(Pe=t,t=s);return t}()!==s&&qu()!==s&&(e=yn())!==s?(t={type:"else",result:e}):(Pe=t,t=s),t}function $n(){var r,t,e,n,u;return r=Pe,(t=Fn())!==s&&qu()!==s&&Fu()!==s&&qu()!==s&&(e=function(){var r,t;r=Pe,(t=Hn())!==s&&(t=t);(r=t)===s&&(r=Pn());return r}())!==s?(n=t,u=e,Cs.add(`select::${n}::${u}`),r=t={type:"column_ref",table:n,column:u}):(Pe=r,r=s),r===s&&(r=Pe,(t=Gn())!==s&&(t=function(r){return Cs.add("select::null::"+r),{type:"column_ref",table:null,column:r}}(t)),r=t),r}function Fn(){var r,t;return r=Pe,(t=jn())!==s?((Y(t)?s:void 0)!==s?(r=t=t):(Pe=r,r=s)):(Pe=r,r=s),r===s&&(r=Pe,(t=Pn())!==s&&(t=t),r=t),r}function Pn(){var t;return (t=function(){var t,e,n,u;t=Pe,34===r.charCodeAt(Pe)?(e='"',Pe++):(e=s,0===Ye&&Ke(B));if(e!==s){if(n=[],X.test(r.charAt(Pe))?(u=r.charAt(Pe),Pe++):(u=s,0===Ye&&Ke(W)),u!==s)for(;u!==s;)n.push(u),X.test(r.charAt(Pe))?(u=r.charAt(Pe),Pe++):(u=s,0===Ye&&Ke(W));else n=s;n!==s?(34===r.charCodeAt(Pe)?(u='"',Pe++):(u=s,0===Ye&&Ke(B)),u!==s?(e=V(n),t=e):(Pe=t,t=s)):(Pe=t,t=s);}else Pe=t,t=s;return t}())===s&&(t=function(){var t,e,n,u;t=Pe,39===r.charCodeAt(Pe)?(e="'",Pe++):(e=s,0===Ye&&Ke(K));if(e!==s){if(n=[],q.test(r.charAt(Pe))?(u=r.charAt(Pe),Pe++):(u=s,0===Ye&&Ke(Z)),u!==s)for(;u!==s;)n.push(u),q.test(r.charAt(Pe))?(u=r.charAt(Pe),Pe++):(u=s,0===Ye&&Ke(Z));else n=s;n!==s?(39===r.charCodeAt(Pe)?(u="'",Pe++):(u=s,0===Ye&&Ke(K)),u!==s?(e=V(n),t=e):(Pe=t,t=s)):(Pe=t,t=s);}else Pe=t,t=s;return t}())===s&&(t=function(){var t,e,n,u;t=Pe,96===r.charCodeAt(Pe)?(e="`",Pe++):(e=s,0===Ye&&Ke(z));if(e!==s){if(n=[],J.test(r.charAt(Pe))?(u=r.charAt(Pe),Pe++):(u=s,0===Ye&&Ke(Q)),u!==s)for(;u!==s;)n.push(u),J.test(r.charAt(Pe))?(u=r.charAt(Pe),Pe++):(u=s,0===Ye&&Ke(Q));else n=s;n!==s?(96===r.charCodeAt(Pe)?(u="`",Pe++):(u=s,0===Ye&&Ke(z)),u!==s?(e=`\`${n.join("")}\``,t=e):(Pe=t,t=s)):(Pe=t,t=s);}else Pe=t,t=s;return t}()),t}function Gn(){var r,t;return r=Pe,(t=Hn())!==s?((Y(t)?s:void 0)!==s?(r=t=t):(Pe=r,r=s)):(Pe=r,r=s),r===s&&(r=Pn()),r}function Hn(){var r,t,e,n;if(r=Pe,(t=Yn())!==s){for(e=[],n=Xn();n!==s;)e.push(n),n=Xn();e!==s?(r=t=rr(t,e)):(Pe=r,r=s);}else Pe=r,r=s;return r}function jn(){var r,t,e,n;if(r=Pe,(t=Yn())!==s){for(e=[],n=Bn();n!==s;)e.push(n),n=Bn();e!==s?(r=t=rr(t,e)):(Pe=r,r=s);}else Pe=r,r=s;return r}function Yn(){var t;return tr.test(r.charAt(Pe))?(t=r.charAt(Pe),Pe++):(t=s,0===Ye&&Ke(er)),t}function Bn(){var t;return nr.test(r.charAt(Pe))?(t=r.charAt(Pe),Pe++):(t=s,0===Ye&&Ke(ur)),t}function Xn(){var t;return sr.test(r.charAt(Pe))?(t=r.charAt(Pe),Pe++):(t=s,0===Ye&&Ke(or)),t}function Wn(){var e,n,u;return e=Pe,58===r.charCodeAt(Pe)?(n=":",Pe++):(n=s,0===Ye&&Ke(ar)),n!==s&&(u=jn())!==s?e=n=[n,u]:(Pe=e,e=s),e!==s&&(e={type:"param",value:e[1]}),e}function Vn(){var t,e,n,u;return t=Pe,cu()!==s&&qu()!==s?("update"===r.substr(Pe,6).toLowerCase()?(e=r.substr(Pe,6),Pe+=6):(e=s,0===Ye&&Ke(ir)),e!==s&&qu()!==s&&(n=$u())!==s&&qu()!==s&&Hu()!==s&&qu()!==s?((u=An())===s&&(u=null),u!==s&&qu()!==s&&ju()!==s?(t={type:"on update",keyword:n,parentheses:!0,expr:u}):(Pe=t,t=s)):(Pe=t,t=s)):(Pe=t,t=s),t===s&&(t=Pe,cu()!==s&&qu()!==s?("update"===r.substr(Pe,6).toLowerCase()?(e=r.substr(Pe,6),Pe+=6):(e=s,0===Ye&&Ke(ir)),e!==s&&qu()!==s&&(n=$u())!==s?(t=function(r){return {type:"on update",keyword:r}}(n)):(Pe=t,t=s)):(Pe=t,t=s)),t}function Kn(){var r,t,e,n;return r=Pe,bu()!==s&&qu()!==s&&(t=Ln())!==s?(r={type:"window",as_window_specification:t}):(Pe=r,r=s),r===s&&(r=Pe,bu()!==s&&qu()!==s&&(t=Hu())!==s&&qu()!==s&&(e=Cn())!==s&&qu()!==s?((n=pn())===s&&(n=null),n!==s&&qu()!==s&&ju()!==s?(r=function(r,t){return {partitionby:r,orderby:t}}(e,n)):(Pe=r,r=s)):(Pe=r,r=s),r===s&&(r=Vn())),r}function qn(){var t;return (t=Zn())===s&&(t=ru())===s&&(t=function(){var t,e;t=Pe,(e=function(){var t,e,n,u;t=Pe,"true"===r.substr(Pe,4).toLowerCase()?(e=r.substr(Pe,4),Pe+=4):(e=s,0===Ye&&Ke(ot));e!==s?(n=Pe,Ye++,u=Yn(),Ye--,u===s?n=void 0:(Pe=n,n=s),n!==s?t=e=[e,n]:(Pe=t,t=s)):(Pe=t,t=s);return t}())!==s&&(e={type:"bool",value:!0});(t=e)===s&&(t=Pe,(e=function(){var t,e,n,u;t=Pe,"false"===r.substr(Pe,5).toLowerCase()?(e=r.substr(Pe,5),Pe+=5):(e=s,0===Ye&&Ke(at));e!==s?(n=Pe,Ye++,u=Yn(),Ye--,u===s?n=void 0:(Pe=n,n=s),n!==s?t=e=[e,n]:(Pe=t,t=s)):(Pe=t,t=s);return t}())!==s&&(e={type:"bool",value:!1}),t=e);return t}())===s&&(t=function(){var e;(e=function(){var t,e,n,u;t=Pe,"null"===r.substr(Pe,4).toLowerCase()?(e=r.substr(Pe,4),Pe+=4):(e=s,0===Ye&&Ke(st));e!==s?(n=Pe,Ye++,u=Yn(),Ye--,u===s?n=void 0:(Pe=n,n=s),n!==s?t=e=[e,n]:(Pe=t,t=s)):(Pe=t,t=s);return t}())!==s&&(e={type:"null",value:null});return e}())===s&&(t=function(){var t,e,n,u,o,a;t=Pe,(e=Mu())===s&&(e=xu())===s&&(e=Du())===s&&(e=Uu());if(e!==s)if(qu()!==s){if(n=Pe,39===r.charCodeAt(Pe)?(u="'",Pe++):(u=s,0===Ye&&Ke(K)),u!==s){for(o=[],a=Jn();a!==s;)o.push(a),a=Jn();o!==s?(39===r.charCodeAt(Pe)?(a="'",Pe++):(a=s,0===Ye&&Ke(K)),a!==s?n=u=[u,o,a]:(Pe=n,n=s)):(Pe=n,n=s);}else Pe=n,n=s;n!==s?(e=xr(e,n),t=e):(Pe=t,t=s);}else Pe=t,t=s;else Pe=t,t=s;if(t===s)if(t=Pe,(e=Mu())===s&&(e=xu())===s&&(e=Du())===s&&(e=Uu()),e!==s)if(qu()!==s){if(n=Pe,34===r.charCodeAt(Pe)?(u='"',Pe++):(u=s,0===Ye&&Ke(B)),u!==s){for(o=[],a=zn();a!==s;)o.push(a),a=zn();o!==s?(34===r.charCodeAt(Pe)?(a='"',Pe++):(a=s,0===Ye&&Ke(B)),a!==s?n=u=[u,o,a]:(Pe=n,n=s)):(Pe=n,n=s);}else Pe=n,n=s;n!==s?(e=xr(e,n),t=e):(Pe=t,t=s);}else Pe=t,t=s;else Pe=t,t=s;return t}()),t}function Zn(){var t,e,n,u,o,a;if(t=Pe,"r"===r.substr(Pe,1).toLowerCase()?(e=r.charAt(Pe),Pe++):(e=s,0===Ye&&Ke(gr)),e===s&&(e=null),e!==s)if(qu()!==s){if(n=Pe,39===r.charCodeAt(Pe)?(u="'",Pe++):(u=s,0===Ye&&Ke(K)),u!==s){for(o=[],a=Jn();a!==s;)o.push(a),a=Jn();o!==s?(39===r.charCodeAt(Pe)?(a="'",Pe++):(a=s,0===Ye&&Ke(K)),a!==s?n=u=[u,o,a]:(Pe=n,n=s)):(Pe=n,n=s);}else Pe=n,n=s;n!==s?(t=e={type:e?"regex_string":"single_quote_string",value:n[1].join("")}):(Pe=t,t=s);}else Pe=t,t=s;else Pe=t,t=s;if(t===s)if(t=Pe,"r"===r.substr(Pe,1).toLowerCase()?(e=r.charAt(Pe),Pe++):(e=s,0===Ye&&Ke(gr)),e===s&&(e=null),e!==s)if(qu()!==s){if(n=Pe,34===r.charCodeAt(Pe)?(u='"',Pe++):(u=s,0===Ye&&Ke(B)),u!==s){for(o=[],a=zn();a!==s;)o.push(a),a=zn();o!==s?(34===r.charCodeAt(Pe)?(a='"',Pe++):(a=s,0===Ye&&Ke(B)),a!==s?n=u=[u,o,a]:(Pe=n,n=s)):(Pe=n,n=s);}else Pe=n,n=s;n!==s?(t=e=function(r,t){return {type:r?"regex_string":"string",value:t[1].join("")}}(e,n)):(Pe=t,t=s);}else Pe=t,t=s;else Pe=t,t=s;return t}function zn(){var t;return Ur.test(r.charAt(Pe))?(t=r.charAt(Pe),Pe++):(t=s,0===Ye&&Ke(Mr)),t===s&&(t=Qn()),t}function Jn(){var t;return Dr.test(r.charAt(Pe))?(t=r.charAt(Pe),Pe++):(t=s,0===Ye&&Ke(kr)),t===s&&(t=Qn()),t}function Qn(){var t,e,n,u,o,a,i,c,l,f;return t=Pe,"\\'"===r.substr(Pe,2)?(e="\\'",Pe+=2):(e=s,0===Ye&&Ke($r)),e!==s&&(e="'"),(t=e)===s&&(t=Pe,'\\"'===r.substr(Pe,2)?(e='\\"',Pe+=2):(e=s,0===Ye&&Ke(Fr)),e!==s&&(e='"'),(t=e)===s&&(t=Pe,"\\\\"===r.substr(Pe,2)?(e="\\\\",Pe+=2):(e=s,0===Ye&&Ke(Pr)),e!==s&&(e="\\"),(t=e)===s&&(t=Pe,"\\/"===r.substr(Pe,2)?(e="\\/",Pe+=2):(e=s,0===Ye&&Ke(Gr)),e!==s&&(e="/"),(t=e)===s&&(t=Pe,"\\b"===r.substr(Pe,2)?(e="\\b",Pe+=2):(e=s,0===Ye&&Ke(Hr)),e!==s&&(e="\b"),(t=e)===s&&(t=Pe,"\\f"===r.substr(Pe,2)?(e="\\f",Pe+=2):(e=s,0===Ye&&Ke(jr)),e!==s&&(e="\f"),(t=e)===s&&(t=Pe,"\\n"===r.substr(Pe,2)?(e="\\n",Pe+=2):(e=s,0===Ye&&Ke(Yr)),e!==s&&(e="\n"),(t=e)===s&&(t=Pe,"\\r"===r.substr(Pe,2)?(e="\\r",Pe+=2):(e=s,0===Ye&&Ke(Br)),e!==s&&(e="\r"),(t=e)===s&&(t=Pe,"\\t"===r.substr(Pe,2)?(e="\\t",Pe+=2):(e=s,0===Ye&&Ke(Xr)),e!==s&&(e="\t"),(t=e)===s&&(t=Pe,"\\u"===r.substr(Pe,2)?(e="\\u",Pe+=2):(e=s,0===Ye&&Ke(Wr)),e!==s&&(n=ou())!==s&&(u=ou())!==s&&(o=ou())!==s&&(a=ou())!==s?(i=n,c=u,l=o,f=a,t=e=String.fromCharCode(parseInt("0x"+i+c+l+f))):(Pe=t,t=s),t===s&&(t=Pe,92===r.charCodeAt(Pe)?(e="\\",Pe++):(e=s,0===Ye&&Ke(Vr)),e!==s&&(e="\\"),t=e)))))))))),t}function ru(){var t,e;return (t=function(){var r,t,e,n;r=Pe,(t=tu())!==s&&(e=eu())!==s&&(n=nu())!==s?(r=t={type:"bigint",value:t+e+n}):(Pe=r,r=s);r===s&&(r=Pe,(t=tu())!==s&&(e=eu())!==s?(t=function(r,t){const e=r+t;return ls(r)?{type:"bigint",value:e}:parseFloat(e)}(t,e),r=t):(Pe=r,r=s),r===s&&(r=Pe,(t=tu())!==s&&(e=nu())!==s?(t=function(r,t){return {type:"bigint",value:r+t}}(t,e),r=t):(Pe=r,r=s),r===s&&(r=Pe,(t=tu())!==s&&(t=function(r){return ls(r)?{type:"bigint",value:r}:parseFloat(r)}(t)),r=t)));return r}())!==s&&(t=(e=t)&&"bigint"===e.type?e:{type:"number",value:e}),t}function tu(){var t,e,n;return (t=uu())===s&&(t=su())===s&&(t=Pe,45===r.charCodeAt(Pe)?(e="-",Pe++):(e=s,0===Ye&&Ke(P)),e===s&&(43===r.charCodeAt(Pe)?(e="+",Pe++):(e=s,0===Ye&&Ke(F))),e!==s&&(n=uu())!==s?(t=e="-"+n):(Pe=t,t=s),t===s&&(t=Pe,45===r.charCodeAt(Pe)?(e="-",Pe++):(e=s,0===Ye&&Ke(P)),e===s&&(43===r.charCodeAt(Pe)?(e="+",Pe++):(e=s,0===Ye&&Ke(F))),e!==s&&(n=su())!==s?(t=e="-"+n):(Pe=t,t=s))),t}function eu(){var t,e,n;return t=Pe,46===r.charCodeAt(Pe)?(e=".",Pe++):(e=s,0===Ye&&Ke(Zr)),e!==s&&(n=uu())!==s?(t=e="."+n):(Pe=t,t=s),t}function nu(){var t,e,n;return t=Pe,(e=function(){var t,e,n;t=Pe,tt.test(r.charAt(Pe))?(e=r.charAt(Pe),Pe++):(e=s,0===Ye&&Ke(et));e!==s?(nt.test(r.charAt(Pe))?(n=r.charAt(Pe),Pe++):(n=s,0===Ye&&Ke(ut)),n===s&&(n=null),n!==s?(t=e=e+(null!==(u=n)?u:"")):(Pe=t,t=s)):(Pe=t,t=s);var u;return t}())!==s&&(n=uu())!==s?(t=e=e+n):(Pe=t,t=s),t}function uu(){var t,e;if(t=[],(e=su())!==s)for(;e!==s;)t.push(e),e=su();else t=s;return t!==s&&(t=t.join("")),t}function su(){var t;return zr.test(r.charAt(Pe))?(t=r.charAt(Pe),Pe++):(t=s,0===Ye&&Ke(Jr)),t}function ou(){var t;return Qr.test(r.charAt(Pe))?(t=r.charAt(Pe),Pe++):(t=s,0===Ye&&Ke(rt)),t}function au(){var t,e,n,u;return t=Pe,"from"===r.substr(Pe,4).toLowerCase()?(e=r.substr(Pe,4),Pe+=4):(e=s,0===Ye&&Ke(lt)),e!==s?(n=Pe,Ye++,u=Yn(),Ye--,u===s?n=void 0:(Pe=n,n=s),n!==s?t=e=[e,n]:(Pe=t,t=s)):(Pe=t,t=s),t}function iu(){var t,e,n,u;return t=Pe,"as"===r.substr(Pe,2).toLowerCase()?(e=r.substr(Pe,2),Pe+=2):(e=s,0===Ye&&Ke(C)),e!==s?(n=Pe,Ye++,u=Yn(),Ye--,u===s?n=void 0:(Pe=n,n=s),n!==s?t=e=[e,n]:(Pe=t,t=s)):(Pe=t,t=s),t}function cu(){var t,e,n,u;return t=Pe,"on"===r.substr(Pe,2).toLowerCase()?(e=r.substr(Pe,2),Pe+=2):(e=s,0===Ye&&Ke(ft)),e!==s?(n=Pe,Ye++,u=Yn(),Ye--,u===s?n=void 0:(Pe=n,n=s),n!==s?t=e=[e,n]:(Pe=t,t=s)):(Pe=t,t=s),t}function lu(){var t,e,n,u;return t=Pe,"join"===r.substr(Pe,4).toLowerCase()?(e=r.substr(Pe,4),Pe+=4):(e=s,0===Ye&&Ke(pt)),e!==s?(n=Pe,Ye++,u=Yn(),Ye--,u===s?n=void 0:(Pe=n,n=s),n!==s?t=e=[e,n]:(Pe=t,t=s)):(Pe=t,t=s),t}function fu(){var t,e,n,u;return t=Pe,"outer"===r.substr(Pe,5).toLowerCase()?(e=r.substr(Pe,5),Pe+=5):(e=s,0===Ye&&Ke(wt)),e!==s?(n=Pe,Ye++,u=Yn(),Ye--,u===s?n=void 0:(Pe=n,n=s),n!==s?t=e=[e,n]:(Pe=t,t=s)):(Pe=t,t=s),t}function bu(){var t,e,n,u;return t=Pe,"over"===r.substr(Pe,4).toLowerCase()?(e=r.substr(Pe,4),Pe+=4):(e=s,0===Ye&&Ke(Et)),e!==s?(n=Pe,Ye++,u=Yn(),Ye--,u===s?n=void 0:(Pe=n,n=s),n!==s?t=e=[e,n]:(Pe=t,t=s)):(Pe=t,t=s),t}function vu(){var t,e,n,u;return t=Pe,"with"===r.substr(Pe,4).toLowerCase()?(e=r.substr(Pe,4),Pe+=4):(e=s,0===Ye&&Ke(mt)),e!==s?(n=Pe,Ye++,u=Yn(),Ye--,u===s?n=void 0:(Pe=n,n=s),n!==s?t=e=[e,n]:(Pe=t,t=s)):(Pe=t,t=s),t}function du(){var t,e,n,u;return t=Pe,"by"===r.substr(Pe,2).toLowerCase()?(e=r.substr(Pe,2),Pe+=2):(e=s,0===Ye&&Ke(It)),e!==s?(n=Pe,Ye++,u=Yn(),Ye--,u===s?n=void 0:(Pe=n,n=s),n!==s?t=e=[e,n]:(Pe=t,t=s)):(Pe=t,t=s),t}function Lu(){var t,e,n,u;return t=Pe,"offset"===r.substr(Pe,6).toLowerCase()?(e=r.substr(Pe,6),Pe+=6):(e=s,0===Ye&&Ke(xt)),e!==s?(n=Pe,Ye++,u=Yn(),Ye--,u===s?n=void 0:(Pe=n,n=s),n!==s?(t=e="OFFSET"):(Pe=t,t=s)):(Pe=t,t=s),t}function Cu(){var t,e,n,u;return t=Pe,"all"===r.substr(Pe,3).toLowerCase()?(e=r.substr(Pe,3),Pe+=3):(e=s,0===Ye&&Ke(Dt)),e!==s?(n=Pe,Ye++,u=Yn(),Ye--,u===s?n=void 0:(Pe=n,n=s),n!==s?(t=e="ALL"):(Pe=t,t=s)):(Pe=t,t=s),t}function pu(){var t,e,n,u;return t=Pe,"distinct"===r.substr(Pe,8).toLowerCase()?(e=r.substr(Pe,8),Pe+=8):(e=s,0===Ye&&Ke(kt)),e!==s?(n=Pe,Ye++,u=Yn(),Ye--,u===s?n=void 0:(Pe=n,n=s),n!==s?(t=e="DISTINCT"):(Pe=t,t=s)):(Pe=t,t=s),t}function wu(){var t,e,n,u;return t=Pe,"between"===r.substr(Pe,7).toLowerCase()?(e=r.substr(Pe,7),Pe+=7):(e=s,0===Ye&&Ke($t)),e!==s?(n=Pe,Ye++,u=Yn(),Ye--,u===s?n=void 0:(Pe=n,n=s),n!==s?(t=e="BETWEEN"):(Pe=t,t=s)):(Pe=t,t=s),t}function Eu(){var t,e,n,u;return t=Pe,"in"===r.substr(Pe,2).toLowerCase()?(e=r.substr(Pe,2),Pe+=2):(e=s,0===Ye&&Ke(Ft)),e!==s?(n=Pe,Ye++,u=Yn(),Ye--,u===s?n=void 0:(Pe=n,n=s),n!==s?(t=e="IN"):(Pe=t,t=s)):(Pe=t,t=s),t}function hu(){var t,e,n,u;return t=Pe,"is"===r.substr(Pe,2).toLowerCase()?(e=r.substr(Pe,2),Pe+=2):(e=s,0===Ye&&Ke(Pt)),e!==s?(n=Pe,Ye++,u=Yn(),Ye--,u===s?n=void 0:(Pe=n,n=s),n!==s?(t=e="IS"):(Pe=t,t=s)):(Pe=t,t=s),t}function Au(){var t,e,n,u;return t=Pe,"like"===r.substr(Pe,4).toLowerCase()?(e=r.substr(Pe,4),Pe+=4):(e=s,0===Ye&&Ke(Gt)),e!==s?(n=Pe,Ye++,u=Yn(),Ye--,u===s?n=void 0:(Pe=n,n=s),n!==s?(t=e="LIKE"):(Pe=t,t=s)):(Pe=t,t=s),t}function yu(){var t,e,n,u;return t=Pe,"exists"===r.substr(Pe,6).toLowerCase()?(e=r.substr(Pe,6),Pe+=6):(e=s,0===Ye&&Ke(Ht)),e!==s?(n=Pe,Ye++,u=Yn(),Ye--,u===s?n=void 0:(Pe=n,n=s),n!==s?(t=e="EXISTS"):(Pe=t,t=s)):(Pe=t,t=s),t}function Tu(){var t,e,n,u;return t=Pe,"not"===r.substr(Pe,3).toLowerCase()?(e=r.substr(Pe,3),Pe+=3):(e=s,0===Ye&&Ke(jt)),e!==s?(n=Pe,Ye++,u=Yn(),Ye--,u===s?n=void 0:(Pe=n,n=s),n!==s?(t=e="NOT"):(Pe=t,t=s)):(Pe=t,t=s),t}function mu(){var t,e,n,u;return t=Pe,"and"===r.substr(Pe,3).toLowerCase()?(e=r.substr(Pe,3),Pe+=3):(e=s,0===Ye&&Ke(Yt)),e!==s?(n=Pe,Ye++,u=Yn(),Ye--,u===s?n=void 0:(Pe=n,n=s),n!==s?(t=e="AND"):(Pe=t,t=s)):(Pe=t,t=s),t}function Su(){var t,e,n,u;return t=Pe,"or"===r.substr(Pe,2).toLowerCase()?(e=r.substr(Pe,2),Pe+=2):(e=s,0===Ye&&Ke(Bt)),e!==s?(n=Pe,Ye++,u=Yn(),Ye--,u===s?n=void 0:(Pe=n,n=s),n!==s?(t=e="OR"):(Pe=t,t=s)):(Pe=t,t=s),t}function Iu(){var t,e,n,u;return t=Pe,"case"===r.substr(Pe,4).toLowerCase()?(e=r.substr(Pe,4),Pe+=4):(e=s,0===Ye&&Ke(zt)),e!==s?(n=Pe,Ye++,u=Yn(),Ye--,u===s?n=void 0:(Pe=n,n=s),n!==s?t=e=[e,n]:(Pe=t,t=s)):(Pe=t,t=s),t}function Nu(){var t,e,n,u;return t=Pe,"end"===r.substr(Pe,3).toLowerCase()?(e=r.substr(Pe,3),Pe+=3):(e=s,0===Ye&&Ke(te)),e!==s?(n=Pe,Ye++,u=Yn(),Ye--,u===s?n=void 0:(Pe=n,n=s),n!==s?t=e=[e,n]:(Pe=t,t=s)):(Pe=t,t=s),t}function Ru(){var t,e,n,u;return t=Pe,"cast"===r.substr(Pe,4).toLowerCase()?(e=r.substr(Pe,4),Pe+=4):(e=s,0===Ye&&Ke(ee)),e!==s?(n=Pe,Ye++,u=Yn(),Ye--,u===s?n=void 0:(Pe=n,n=s),n!==s?t=e=[e,n]:(Pe=t,t=s)):(Pe=t,t=s),t}function _u(){var t,e,n,u;return t=Pe,"array"===r.substr(Pe,5).toLowerCase()?(e=r.substr(Pe,5),Pe+=5):(e=s,0===Ye&&Ke(ne)),e!==s?(n=Pe,Ye++,u=Yn(),Ye--,u===s?n=void 0:(Pe=n,n=s),n!==s?(t=e="ARRAY"):(Pe=t,t=s)):(Pe=t,t=s),t}function Ou(){var t,e,n,u;return t=Pe,"decimal"===r.substr(Pe,7).toLowerCase()?(e=r.substr(Pe,7),Pe+=7):(e=s,0===Ye&&Ke(ie)),e!==s?(n=Pe,Ye++,u=Yn(),Ye--,u===s?n=void 0:(Pe=n,n=s),n!==s?(t=e="DECIMAL"):(Pe=t,t=s)):(Pe=t,t=s),t}function gu(){var t,e,n,u;return t=Pe,"struct"===r.substr(Pe,6).toLowerCase()?(e=r.substr(Pe,6),Pe+=6):(e=s,0===Ye&&Ke(de)),e!==s?(n=Pe,Ye++,u=Yn(),Ye--,u===s?n=void 0:(Pe=n,n=s),n!==s?(t=e="STRUCT"):(Pe=t,t=s)):(Pe=t,t=s),t}function xu(){var t,e,n,u;return t=Pe,"date"===r.substr(Pe,4).toLowerCase()?(e=r.substr(Pe,4),Pe+=4):(e=s,0===Ye&&Ke(Ce)),e!==s?(n=Pe,Ye++,u=Yn(),Ye--,u===s?n=void 0:(Pe=n,n=s),n!==s?(t=e="DATE"):(Pe=t,t=s)):(Pe=t,t=s),t}function Uu(){var t,e,n,u;return t=Pe,"datetime"===r.substr(Pe,8).toLowerCase()?(e=r.substr(Pe,8),Pe+=8):(e=s,0===Ye&&Ke(pe)),e!==s?(n=Pe,Ye++,u=Yn(),Ye--,u===s?n=void 0:(Pe=n,n=s),n!==s?(t=e="DATETIME"):(Pe=t,t=s)):(Pe=t,t=s),t}function Mu(){var t,e,n,u;return t=Pe,"time"===r.substr(Pe,4).toLowerCase()?(e=r.substr(Pe,4),Pe+=4):(e=s,0===Ye&&Ke(we)),e!==s?(n=Pe,Ye++,u=Yn(),Ye--,u===s?n=void 0:(Pe=n,n=s),n!==s?(t=e="TIME"):(Pe=t,t=s)):(Pe=t,t=s),t}function Du(){var t,e,n,u;return t=Pe,"timestamp"===r.substr(Pe,9).toLowerCase()?(e=r.substr(Pe,9),Pe+=9):(e=s,0===Ye&&Ke(Ee)),e!==s?(n=Pe,Ye++,u=Yn(),Ye--,u===s?n=void 0:(Pe=n,n=s),n!==s?(t=e="TIMESTAMP"):(Pe=t,t=s)):(Pe=t,t=s),t}function ku(){var t,e,n,u;return t=Pe,"interval"===r.substr(Pe,8).toLowerCase()?(e=r.substr(Pe,8),Pe+=8):(e=s,0===Ye&&Ke(Ae)),e!==s?(n=Pe,Ye++,u=Yn(),Ye--,u===s?n=void 0:(Pe=n,n=s),n!==s?(t=e="INTERVAL"):(Pe=t,t=s)):(Pe=t,t=s),t}function $u(){var t,e,n,u;return t=Pe,"current_timestamp"===r.substr(Pe,17).toLowerCase()?(e=r.substr(Pe,17),Pe+=17):(e=s,0===Ye&&Ke(Te)),e!==s?(n=Pe,Ye++,u=Yn(),Ye--,u===s?n=void 0:(Pe=n,n=s),n!==s?(t=e="CURRENT_TIMESTAMP"):(Pe=t,t=s)):(Pe=t,t=s),t}function Fu(){var t;return 46===r.charCodeAt(Pe)?(t=".",Pe++):(t=s,0===Ye&&Ke(Zr)),t}function Pu(){var t;return 44===r.charCodeAt(Pe)?(t=",",Pe++):(t=s,0===Ye&&Ke(me)),t}function Gu(){var t;return 42===r.charCodeAt(Pe)?(t="*",Pe++):(t=s,0===Ye&&Ke(G)),t}function Hu(){var t;return 40===r.charCodeAt(Pe)?(t="(",Pe++):(t=s,0===Ye&&Ke(i)),t}function ju(){var t;return 41===r.charCodeAt(Pe)?(t=")",Pe++):(t=s,0===Ye&&Ke(c)),t}function Yu(){var t;return 60===r.charCodeAt(Pe)?(t="<",Pe++):(t=s,0===Ye&&Ke(k)),t}function Bu(){var t;return 62===r.charCodeAt(Pe)?(t=">",Pe++):(t=s,0===Ye&&Ke(U)),t}function Xu(){var t;return 91===r.charCodeAt(Pe)?(t="[",Pe++):(t=s,0===Ye&&Ke(Se)),t}function Wu(){var t;return 93===r.charCodeAt(Pe)?(t="]",Pe++):(t=s,0===Ye&&Ke(Ie)),t}function Vu(){var t;return 59===r.charCodeAt(Pe)?(t=";",Pe++):(t=s,0===Ye&&Ke(Ne)),t}function Ku(){var t;return (t=function(){var t;return "||"===r.substr(Pe,2)?(t="||",Pe+=2):(t=s,0===Ye&&Ke(Re)),t}())===s&&(t=function(){var t;return "&&"===r.substr(Pe,2)?(t="&&",Pe+=2):(t=s,0===Ye&&Ke(_e)),t}()),t}function qu(){var r,t;for(r=[],(t=Qu())===s&&(t=zu());t!==s;)r.push(t),(t=Qu())===s&&(t=zu());return r}function Zu(){var r,t;if(r=[],(t=Qu())===s&&(t=zu()),t!==s)for(;t!==s;)r.push(t),(t=Qu())===s&&(t=zu());else r=s;return r}function zu(){var t;return (t=function(){var t,e,n,u,o,a;t=Pe,"/*"===r.substr(Pe,2)?(e="/*",Pe+=2):(e=s,0===Ye&&Ke(Oe));if(e!==s){for(n=[],u=Pe,o=Pe,Ye++,"*/"===r.substr(Pe,2)?(a="*/",Pe+=2):(a=s,0===Ye&&Ke(ge)),Ye--,a===s?o=void 0:(Pe=o,o=s),o!==s&&(a=Ju())!==s?u=o=[o,a]:(Pe=u,u=s);u!==s;)n.push(u),u=Pe,o=Pe,Ye++,"*/"===r.substr(Pe,2)?(a="*/",Pe+=2):(a=s,0===Ye&&Ke(ge)),Ye--,a===s?o=void 0:(Pe=o,o=s),o!==s&&(a=Ju())!==s?u=o=[o,a]:(Pe=u,u=s);n!==s?("*/"===r.substr(Pe,2)?(u="*/",Pe+=2):(u=s,0===Ye&&Ke(ge)),u!==s?t=e=[e,n,u]:(Pe=t,t=s)):(Pe=t,t=s);}else Pe=t,t=s;return t}())===s&&(t=function(){var t,e,n,u,o,a;t=Pe,"--"===r.substr(Pe,2)?(e="--",Pe+=2):(e=s,0===Ye&&Ke(xe));if(e!==s){for(n=[],u=Pe,o=Pe,Ye++,a=rs(),Ye--,a===s?o=void 0:(Pe=o,o=s),o!==s&&(a=Ju())!==s?u=o=[o,a]:(Pe=u,u=s);u!==s;)n.push(u),u=Pe,o=Pe,Ye++,a=rs(),Ye--,a===s?o=void 0:(Pe=o,o=s),o!==s&&(a=Ju())!==s?u=o=[o,a]:(Pe=u,u=s);n!==s?t=e=[e,n]:(Pe=t,t=s);}else Pe=t,t=s;return t}())===s&&(t=function(){var t,e,n,u,o,a;t=Pe,35===r.charCodeAt(Pe)?(e="#",Pe++):(e=s,0===Ye&&Ke(Ue));if(e!==s){for(n=[],u=Pe,o=Pe,Ye++,a=rs(),Ye--,a===s?o=void 0:(Pe=o,o=s),o!==s&&(a=Ju())!==s?u=o=[o,a]:(Pe=u,u=s);u!==s;)n.push(u),u=Pe,o=Pe,Ye++,a=rs(),Ye--,a===s?o=void 0:(Pe=o,o=s),o!==s&&(a=Ju())!==s?u=o=[o,a]:(Pe=u,u=s);n!==s?t=e=[e,n]:(Pe=t,t=s);}else Pe=t,t=s;return t}()),t}function Ju(){var t;return r.length>Pe?(t=r.charAt(Pe),Pe++):(t=s,0===Ye&&Ke(Me)),t}function Qu(){var t;return De.test(r.charAt(Pe))?(t=r.charAt(Pe),Pe++):(t=s,0===Ye&&Ke(ke)),t}function rs(){var t,e;if((t=function(){var t,e;t=Pe,Ye++,r.length>Pe?(e=r.charAt(Pe),Pe++):(e=s,0===Ye&&Ke(Me));Ye--,e===s?t=void 0:(Pe=t,t=s);return t}())===s)if(t=[],Kr.test(r.charAt(Pe))?(e=r.charAt(Pe),Pe++):(e=s,0===Ye&&Ke(qr)),e!==s)for(;e!==s;)t.push(e),Kr.test(r.charAt(Pe))?(e=r.charAt(Pe),Pe++):(e=s,0===Ye&&Ke(qr));else t=s;return t}function ts(){var r,t,e,n,u,o,a,i;if(r=Pe,(t=es())!==s){for(e=[],n=Pe,(u=qu())!==s&&(o=Pu())!==s&&(a=qu())!==s&&(i=es())!==s?n=u=[u,o,a,i]:(Pe=n,n=s);n!==s;)e.push(n),n=Pe,(u=qu())!==s&&(o=Pu())!==s&&(a=qu())!==s&&(i=es())!==s?n=u=[u,o,a,i]:(Pe=n,n=s);e!==s?(r=t=v(t,e)):(Pe=r,r=s);}else Pe=r,r=s;return r}function es(){var r,t,e,n;return r=Pe,t=Pe,(e=jn())!==s?((n=(n=!0===as[e.toUpperCase()])?s:void 0)!==s?(t=e=e):(Pe=t,t=s)):(Pe=t,t=s),t===s&&(t=null),t!==s&&(e=qu())!==s&&(n=ns())!==s?(r=t=function(r,t){return {field_name:r,field_type:t}}(t,n)):(Pe=r,r=s),r}function ns(){var t;return (t=ss())===s&&(t=us())===s&&(t=function(){var e;(e=function(){var t,e,n,u;return t=Pe,"string"===r.substr(Pe,6).toLowerCase()?(e=r.substr(Pe,6),Pe+=6):(e=s,0===Ye&&Ke(ve)),e!==s?(n=Pe,Ye++,u=Yn(),Ye--,u===s?n=void 0:(Pe=n,n=s),n!==s?(t=e="STRING"):(Pe=t,t=s)):(Pe=t,t=s),t}())!==s&&(e=$e(e));return e}())===s&&(t=function(){var e;(e=function(){var t,e,n,u;return t=Pe,"numeric"===r.substr(Pe,7).toLowerCase()?(e=r.substr(Pe,7),Pe+=7):(e=s,0===Ye&&Ke(ae)),e!==s?(n=Pe,Ye++,u=Yn(),Ye--,u===s?n=void 0:(Pe=n,n=s),n!==s?(t=e="NUMERIC"):(Pe=t,t=s)):(Pe=t,t=s),t}())===s&&(e=function(){var t,e,n,u;return t=Pe,"int64"===r.substr(Pe,5).toLowerCase()?(e=r.substr(Pe,5),Pe+=5):(e=s,0===Ye&&Ke(fe)),e!==s?(n=Pe,Ye++,u=Yn(),Ye--,u===s?n=void 0:(Pe=n,n=s),n!==s?(t=e="INT64"):(Pe=t,t=s)):(Pe=t,t=s),t}())===s&&(e=function(){var t,e,n,u;return t=Pe,"float64"===r.substr(Pe,7).toLowerCase()?(e=r.substr(Pe,7),Pe+=7):(e=s,0===Ye&&Ke(Le)),e!==s?(n=Pe,Ye++,u=Yn(),Ye--,u===s?n=void 0:(Pe=n,n=s),n!==s?(t=e="FLOAT64"):(Pe=t,t=s)):(Pe=t,t=s),t}());e!==s&&(e=$e(e));return e}())===s&&(t=function(){var t,e,n,u;t=Pe,(e=xu())===s&&(e=Uu())===s&&(e=Mu())===s&&(e=Du());if(e!==s)if(qu()!==s)if(Hu()!==s)if(qu()!==s){if(n=[],zr.test(r.charAt(Pe))?(u=r.charAt(Pe),Pe++):(u=s,0===Ye&&Ke(Jr)),u!==s)for(;u!==s;)n.push(u),zr.test(r.charAt(Pe))?(u=r.charAt(Pe),Pe++):(u=s,0===Ye&&Ke(Jr));else n=s;n!==s&&(u=qu())!==s&&ju()!==s?(e={dataType:e,length:parseInt(n.join(""),10)},t=e):(Pe=t,t=s);}else Pe=t,t=s;else Pe=t,t=s;else Pe=t,t=s;else Pe=t,t=s;t===s&&(t=Pe,(e=xu())===s&&(e=Uu())===s&&(e=Mu())===s&&(e=Du()),e!==s&&(e=$e(e)),t=e);return t}())===s&&(t=function(){var e;(e=function(){var t,e,n,u;return t=Pe,"bytes"===r.substr(Pe,5).toLowerCase()?(e=r.substr(Pe,5),Pe+=5):(e=s,0===Ye&&Ke(ue)),e!==s?(n=Pe,Ye++,u=Yn(),Ye--,u===s?n=void 0:(Pe=n,n=s),n!==s?(t=e="BYTES"):(Pe=t,t=s)):(Pe=t,t=s),t}())===s&&(e=function(){var t,e,n,u;return t=Pe,"bool"===r.substr(Pe,4).toLowerCase()?(e=r.substr(Pe,4),Pe+=4):(e=s,0===Ye&&Ke(se)),e!==s?(n=Pe,Ye++,u=Yn(),Ye--,u===s?n=void 0:(Pe=n,n=s),n!==s?(t=e="BOOL"):(Pe=t,t=s)):(Pe=t,t=s),t}())===s&&(e=function(){var t,e,n,u;return t=Pe,"geography"===r.substr(Pe,9).toLowerCase()?(e=r.substr(Pe,9),Pe+=9):(e=s,0===Ye&&Ke(oe)),e!==s?(n=Pe,Ye++,u=Yn(),Ye--,u===s?n=void 0:(Pe=n,n=s),n!==s?(t=e="GEOGRAPHY"):(Pe=t,t=s)):(Pe=t,t=s),t}());e!==s&&(e=$e(e));return e}()),t}function us(){var r,t,e;return r=Pe,(t=_u())!==s&&qu()!==s&&Yu()!==s&&qu()!==s&&(e=ts())!==s&&qu()!==s&&Bu()!==s?(r=t=Fe(t,e)):(Pe=r,r=s),r}function ss(){var r,t,e;return r=Pe,(t=gu())!==s&&qu()!==s&&Yu()!==s&&qu()!==s&&(e=ts())!==s&&qu()!==s&&Bu()!==s?(r=t=Fe(t,e)):(Pe=r,r=s),r}const os={ARRAY:!0,ALTER:!0,ALL:!0,ADD:!0,AND:!0,AS:!0,ASC:!0,BETWEEN:!0,BY:!0,CALL:!0,CASE:!0,CREATE:!0,CROSS:!0,CONTAINS:!0,CURRENT_DATE:!0,CURRENT_TIME:!0,CURRENT_TIMESTAMP:!0,CURRENT_USER:!0,DELETE:!0,DESC:!0,DISTINCT:!0,DROP:!0,ELSE:!0,END:!0,EXISTS:!0,EXPLAIN:!0,FALSE:!0,FROM:!0,FULL:!0,FOR:!0,GROUP:!0,HAVING:!0,IN:!0,INNER:!0,INSERT:!0,INTO:!0,IS:!0,JOIN:!0,JSON:!0,KEY:!0,LEFT:!0,LIKE:!0,LIMIT:!0,LOW_PRIORITY:!0,NOT:!0,NULL:!0,ON:!0,OR:!0,ORDER:!0,OUTER:!0,PARTITION:!0,RECURSIVE:!0,RENAME:!0,READ:!0,RIGHT:!0,SELECT:!0,SESSION_USER:!0,SET:!0,SHOW:!0,SYSTEM_USER:!0,TABLE:!0,THEN:!0,TRUE:!0,TRUNCATE:!0,TYPE:!0,UNION:!0,UPDATE:!0,USING:!0,VALUES:!0,WINDOW:!0,WITH:!0,WHEN:!0,WHERE:!0,WRITE:!0,GLOBAL:!0,SESSION:!0,LOCAL:!0,PERSIST:!0,PERSIST_ONLY:!0},as={BOOL:!0,BYTE:!0,DATE:!0,DATETIME:!0,FLOAT64:!0,INT64:!0,NUMERIC:!0,STRING:!0,TIME:!0,TIMESTAMP:!0,ARRAY:!0,STRUCT:!0};function is(r,t){return {type:"unary_expr",operator:r,expr:t}}function cs(r,t,e){return {type:"binary_expr",operator:r,left:t,right:e}}function ls(r){const t=n(Number.MAX_SAFE_INTEGER);return !(n(r)<t)}function fs(r,t,e=3){const n=[r];for(let r=0;r<t.length;r++)n.push(t[r][e]);return n}function bs(r,t){let e=r;for(let r=0;r<t.length;r++)e=cs(t[r][1],e,t[r][3]);return e}function vs(r){const t=ps[r];return t||(r||null)}function ds(r){const t=new Set;for(let e of r.keys()){const r=e.split("::");if(!r){t.add(e);break}r&&r[1]&&(r[1]=vs(r[1])),t.add(r.join("::"));}return Array.from(t)}const Ls=new Set,Cs=new Set,ps={};if((e=a())!==s&&Pe===r.length)return e;throw e!==s&&Pe<r.length&&Ke({type:"end"}),qe(je,He<r.length?r.charAt(He):null,He<r.length?Ve(He,He+1):Ve(He,He))}};},function(r,t,e){var n=e(0);function u(r,t,e,n){this.message=r,this.expected=t,this.found=e,this.location=n,this.name="SyntaxError","function"==typeof Error.captureStackTrace&&Error.captureStackTrace(this,u);}!function(r,t){function e(){this.constructor=r;}e.prototype=t.prototype,r.prototype=new e;}(u,Error),u.buildMessage=function(r,t){var e={literal:function(r){return '"'+u(r.text)+'"'},class:function(r){var t,e="";for(t=0;t<r.parts.length;t++)e+=r.parts[t]instanceof Array?s(r.parts[t][0])+"-"+s(r.parts[t][1]):s(r.parts[t]);return "["+(r.inverted?"^":"")+e+"]"},any:function(r){return "any character"},end:function(r){return "end of input"},other:function(r){return r.description}};function n(r){return r.charCodeAt(0).toString(16).toUpperCase()}function u(r){return r.replace(/\\/g,"\\\\").replace(/"/g,'\\"').replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(r){return "\\x0"+n(r)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(r){return "\\x"+n(r)}))}function s(r){return r.replace(/\\/g,"\\\\").replace(/\]/g,"\\]").replace(/\^/g,"\\^").replace(/-/g,"\\-").replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(r){return "\\x0"+n(r)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(r){return "\\x"+n(r)}))}return "Expected "+function(r){var t,n,u,s=new Array(r.length);for(t=0;t<r.length;t++)s[t]=(u=r[t],e[u.type](u));if(s.sort(),s.length>0){for(t=1,n=1;t<s.length;t++)s[t-1]!==s[t]&&(s[n]=s[t],n++);s.length=n;}switch(s.length){case 1:return s[0];case 2:return s[0]+" or "+s[1];default:return s.slice(0,-1).join(", ")+", or "+s[s.length-1]}}(r)+" but "+function(r){return r?'"'+u(r)+'"':"end of input"}(t)+" found."},r.exports={SyntaxError:u,parse:function(r,t){t=void 0!==t?t:{};var e,s={},o={start:Nu},a=Nu,i=function(r,t){return za(r,t,1)},c=function(r,t){return za(r,t)},l=Au("AUTO_INCREMENT",!0),f=Au("UNIQUE",!0),b=Au("PRIMARY",!0),v=Au("KEY",!0),d=Au("COLUMN_FORMAT",!0),L=Au("FIXED",!0),C=Au("DYNAMIC",!0),p=Au("DEFAULT",!0),w=Au("STORAGE",!0),E=Au("DISK",!0),h=Au("MEMORY",!0),A=Au("ALGORITHM",!0),y=Au("INSTANT",!0),T=Au("INPLACE",!0),m=Au("COPY",!0),S=Au("LOCK",!0),I=Au("NONE",!0),N=Au("SHARED",!0),R=Au("EXCLUSIVE",!0),_=Au("CHECK",!0),O=Au("NOCHECK",!0),g=Au("PRIMARY KEY",!0),x=Au("NOT",!0),U=Au("FOR",!0),M=Au("REPLICATION",!0),D=Au("FOREIGN KEY",!0),k=Au("MATCH FULL",!0),$=Au("MATCH PARTIAL",!0),F=Au("MATCH SIMPLE",!0),P=Au("ON",!0),G=Au("DELETE",!0),H=Au("UPDATE",!0),j=Au("RESTRICT",!0),Y=Au("CASCADE",!0),B=Au("SET NULL",!0),X=Au("NO ACTION",!0),W=Au("SET DEFAULT",!0),V=Au("CHARACTER",!0),K=Au("SET",!0),q=Au("CHARSET",!0),Z=Au("COLLATE",!0),z=Au("AVG_ROW_LENGTH",!0),J=Au("KEY_BLOCK_SIZE",!0),Q=Au("MAX_ROWS",!0),rr=Au("MIN_ROWS",!0),tr=Au("STATS_SAMPLE_PAGES",!0),er=Au("CONNECTION",!0),nr=Au("COMPRESSION",!0),ur=Au("'",!1),sr=Au("ZLIB",!0),or=Au("LZ4",!0),ar=Au("ENGINE",!0),ir=Au("READ",!0),cr=Au("LOCAL",!0),lr=Au("LOW_PRIORITY",!0),fr=Au("WRITE",!0),br=Au("(",!1),vr=Au(")",!1),dr=Au("BTREE",!0),Lr=Au("HASH",!0),Cr=Au("WITH",!0),pr=Au("PARSER",!0),wr=Au("VISIBLE",!0),Er=Au("INVISIBLE",!0),hr=function(r,t){return t.unshift(r),t.forEach(r=>{const{table:t,as:e}=r;ui[t]=t,e&&(ui[e]=t),function(r){const t=ri(r);r.clear(),t.forEach(t=>r.add(t));}(ni);}),t},Ar=Au("FIRST",!0),yr=Au("ROWS",!0),Tr=Au("ONLY",!0),mr=Au("NEXT",!0),Sr=Au("=",!1),Ir=Au("DUPLICATE",!0),Nr=function(r,t){return Ja(r,t)},Rr=Au("!",!1),_r=function(r){return r[0]+" "+r[2]},Or=Au(">=",!1),gr=Au(">",!1),xr=Au("<=",!1),Ur=Au("<>",!1),Mr=Au("<",!1),Dr=Au("!=",!1),kr=Au("+",!1),$r=Au("-",!1),Fr=Au("*",!1),Pr=Au("/",!1),Gr=Au("%",!1),Hr=function(r){return !0===Va[r.toUpperCase()]},jr=Au('"',!1),Yr=/^[^"]/,Br=yu(['"'],!0,!1),Xr=function(r){return r.join("")},Wr=/^[^']/,Vr=yu(["'"],!0,!1),Kr=Au("`",!1),qr=/^[^`]/,Zr=yu(["`"],!0,!1),zr=function(r,t){return r+t.join("")},Jr=/^[A-Za-z_]/,Qr=yu([["A","Z"],["a","z"],"_"],!1,!1),rt=/^[A-Za-z0-9_]/,tt=yu([["A","Z"],["a","z"],["0","9"],"_"],!1,!1),et=/^[A-Za-z0-9_:]/,nt=yu([["A","Z"],["a","z"],["0","9"],"_",":"],!1,!1),ut=Au(":",!1),st=function(r){return {type:"string",value:r[1].join("")}},ot=function(r,t){return {type:r.toLowerCase(),value:t[1].join("")}},at=/^[^"\\\0-\x1F\x7F]/,it=yu(['"',"\\",["\0",""],""],!0,!1),ct=/^[^'\\]/,lt=yu(["'","\\"],!0,!1),ft=Au("\\'",!1),bt=Au('\\"',!1),vt=Au("\\\\",!1),dt=Au("\\/",!1),Lt=Au("\\b",!1),Ct=Au("\\f",!1),pt=Au("\\n",!1),wt=Au("\\r",!1),Et=Au("\\t",!1),ht=Au("\\u",!1),At=Au("\\",!1),yt=/^[\n\r]/,Tt=yu(["\n","\r"],!1,!1),mt=Au(".",!1),St=/^[0-9]/,It=yu([["0","9"]],!1,!1),Nt=/^[0-9a-fA-F]/,Rt=yu([["0","9"],["a","f"],["A","F"]],!1,!1),_t=/^[eE]/,Ot=yu(["e","E"],!1,!1),gt=/^[+\-]/,xt=yu(["+","-"],!1,!1),Ut=Au("NULL",!0),Mt=Au("NOT NULL",!0),Dt=Au("TRUE",!0),kt=Au("TO",!0),$t=Au("FALSE",!0),Ft=(Au("DROP",!0)),Pt=Au("USE",!0),Gt=Au("ALTER",!0),Ht=Au("SELECT",!0),jt=Au("CREATE",!0),Yt=Au("TEMPORARY",!0),Bt=Au("IF NOT EXISTS",!0),Xt=Au("INSERT",!0),Wt=Au("RECURSIVE",!1),Vt=Au("REPLACE",!0),Kt=Au("RENAME",!0),qt=Au("IGNORE",!0),Zt=(Au("PARTITION",!0)),zt=Au("INTO",!0),Jt=Au("FROM",!0),Qt=Au("UNLOCK",!0),re=Au("AS",!0),te=Au("TABLE",!0),ee=Au("TABLES",!0),ne=Au("DATABASE",!0),ue=Au("SCHEME",!0),se=Au("LEFT",!0),oe=Au("RIGHT",!0),ae=Au("FULL",!0),ie=Au("INNER",!0),ce=Au("JOIN",!0),le=Au("OUTER",!0),fe=Au("OVER",!0),be=Au("UNION",!0),ve=Au("VALUES",!0),de=Au("USING",!0),Le=Au("WHERE",!0),Ce=Au("GROUP",!0),pe=Au("BY",!0),we=Au("ORDER",!0),Ee=Au("HAVING",!0),he=Au("FETCH",!0),Ae=Au("OFFSET",!0),ye=Au("ASC",!0),Te=Au("DESC",!0),me=Au("ALL",!0),Se=Au("DISTINCT",!0),Ie=Au("BETWEEN",!0),Ne=Au("IN",!0),Re=Au("IS",!0),_e=Au("LIKE",!0),Oe=Au("EXISTS",!0),ge=Au("AND",!0),xe=Au("OR",!0),Ue=Au("COUNT",!0),Me=Au("MAX",!0),De=Au("MIN",!0),ke=Au("SUM",!0),$e=Au("AVG",!0),Fe=Au("CALL",!0),Pe=Au("CASE",!0),Ge=Au("WHEN",!0),He=Au("THEN",!0),je=Au("ELSE",!0),Ye=Au("END",!0),Be=Au("CAST",!0),Xe=Au("CHAR",!0),We=Au("VARCHAR",!0),Ve=Au("NUMERIC",!0),Ke=Au("DECIMAL",!0),qe=Au("SIGNED",!0),Ze=Au("UNSIGNED",!0),ze=Au("INT",!0),Je=Au("ZEROFILL",!0),Qe=Au("INTEGER",!0),rn=Au("JSON",!0),tn=Au("SMALLINT",!0),en=Au("TINYINT",!0),nn=Au("TINYTEXT",!0),un=Au("TEXT",!0),sn=Au("MEDIUMTEXT",!0),on=Au("LONGTEXT",!0),an=Au("BIGINT",!0),cn=Au("FLOAT",!0),ln=Au("DOUBLE",!0),fn=Au("DATE",!0),bn=Au("DATETIME",!0),vn=Au("TIME",!0),dn=Au("TIMESTAMP",!0),Ln=Au("TRUNCATE",!0),Cn=Au("USER",!0),pn=Au("CURRENT_DATE",!0),wn=(Au("INTERVAL",!0)),En=Au("YEAR",!0),hn=Au("MONTH",!0),An=Au("DAY",!0),yn=Au("HOUR",!0),Tn=Au("MINUTE",!0),mn=Au("SECOND",!0),Sn=Au("CURRENT_TIME",!0),In=Au("CURRENT_TIMESTAMP",!0),Nn=Au("CURRENT_USER",!0),Rn=Au("SESSION_USER",!0),_n=Au("SYSTEM_USER",!0),On=Au("GLOBAL",!0),gn=Au("SESSION",!0),xn=Au("PERSIST",!0),Un=Au("PERSIST_ONLY",!0),Mn=Au("@",!1),Dn=Au("@@",!1),kn=Au("$",!1),$n=Au("return",!0),Fn=Au(":=",!1),Pn=Au("DUAL",!0),Gn=Au("ADD",!0),Hn=Au("COLUMN",!0),jn=Au("INDEX",!0),Yn=Au("FULLTEXT",!0),Bn=Au("SPATIAL",!0),Xn=Au("COMMENT",!0),Wn=Au("CONSTRAINT",!0),Vn=Au("REFERENCES",!0),Kn=Au("SQL_CALC_FOUND_ROWS",!0),qn=Au("SQL_CACHE",!0),Zn=Au("SQL_NO_CACHE",!0),zn=Au("SQL_SMALL_RESULT",!0),Jn=Au("SQL_BIG_RESULT",!0),Qn=Au("SQL_BUFFER_RESULT",!0),ru=Au(",",!1),tu=Au("[",!1),eu=Au("]",!1),nu=Au(";",!1),uu=Au("->",!1),su=Au("->>",!1),ou=Au("||",!1),au=Au("&&",!1),iu=Au("/*",!1),cu=Au("*/",!1),lu=Au("--",!1),fu=Au("#",!1),bu={type:"any"},vu=/^[ \t\n\r]/,du=yu([" ","\t","\n","\r"],!1,!1),Lu=function(r){return {dataType:r}},Cu=0,pu=[{line:1,column:1}],wu=0,Eu=[],hu=0;if("startRule"in t){if(!(t.startRule in o))throw new Error("Can't start parsing from rule \""+t.startRule+'".');a=o[t.startRule];}function Au(r,t){return {type:"literal",text:r,ignoreCase:t}}function yu(r,t,e){return {type:"class",parts:r,inverted:t,ignoreCase:e}}function Tu(t){var e,n=pu[t];if(n)return n;for(e=t-1;!pu[e];)e--;for(n={line:(n=pu[e]).line,column:n.column};e<t;)10===r.charCodeAt(e)?(n.line++,n.column=1):n.column++,e++;return pu[t]=n,n}function mu(r,t){var e=Tu(r),n=Tu(t);return {start:{offset:r,line:e.line,column:e.column},end:{offset:t,line:n.line,column:n.column}}}function Su(r){Cu<wu||(Cu>wu&&(wu=Cu,Eu=[]),Eu.push(r));}function Iu(r,t,e){return new u(u.buildMessage(r,t),r,t,e)}function Nu(){var r,t;return r=Cu,Na()!==s?((t=function(){var r,t,e,n,u,o,a,i;if(r=Cu,(t=_u())!==s){if(e=[],n=Cu,(u=Na())!==s&&(o=Sa())!==s&&(a=Na())!==s&&(i=_u())!==s?n=u=[u,o,a,i]:(Cu=n,n=s),n!==s)for(;n!==s;)e.push(n),n=Cu,(u=Na())!==s&&(o=Sa())!==s&&(a=Na())!==s&&(i=_u())!==s?n=u=[u,o,a,i]:(Cu=n,n=s);else e=s;e!==s?(t=function(r,t){const e=[r&&r.ast||r];for(let r=0;r<t.length;r++)t[r][3]&&0!==t[r][3].length&&e.push(t[r][3]&&t[r][3].ast||t[r][3]);return {tableList:Array.from(ei),columnList:ri(ni),ast:e}}(t,e),r=t):(Cu=r,r=s);}else Cu=r,r=s;return r}())===s&&(t=Ru())===s&&(t=_u()),t!==s?(r=t):(Cu=r,r=s)):(Cu=r,r=s),r}function Ru(){var t;return (t=function(){var r,t,e,n,u,o;r=Cu,(t=vo())!==s&&Na()!==s&&(e=So())!==s&&Na()!==s&&(n=os())!==s?(a=t,c=e,(l=n)&&l.forEach(r=>ei.add(`${a}::${r.db}::${r.table}`)),t={tableList:Array.from(ei),columnList:ri(ni),ast:{type:a.toLowerCase(),keyword:c.toLowerCase(),name:l}},r=t):(Cu=r,r=s);var a,c,l;r===s&&(r=Cu,(t=vo())!==s&&Na()!==s&&(e=Ca())!==s&&Na()!==s&&(n=Gs())!==s&&Na()!==s&&No()!==s&&Na()!==s&&(u=ls())!==s&&Na()!==s?((o=function(){var r,t,e,n,u,o;r=Cu,(t=Du())===s&&(t=ku());if(t!==s){for(e=[],n=Cu,(u=Na())!==s?((o=Du())===s&&(o=ku()),o!==s?n=u=[u,o]:(Cu=n,n=s)):(Cu=n,n=s);n!==s;)e.push(n),n=Cu,(u=Na())!==s?((o=Du())===s&&(o=ku()),o!==s?n=u=[u,o]:(Cu=n,n=s)):(Cu=n,n=s);e!==s?(t=i(t,e),r=t):(Cu=r,r=s);}else Cu=r,r=s;return r}())===s&&(o=null),o!==s&&Na()!==s?(t=function(r,t,e,n,u){return {tableList:Array.from(ei),columnList:ri(ni),ast:{type:r.toLowerCase(),keyword:t.toLowerCase(),name:e,table:n,options:u}}}(t,e,n,u,o),r=t):(Cu=r,r=s)):(Cu=r,r=s));return r}())===s&&(t=function(){var t;(t=function(){var t,e,n,u,o,a,i,l,f,b;t=Cu,(e=Co())!==s&&Na()!==s?((n=po())===s&&(n=null),n!==s&&Na()!==s&&So()!==s&&Na()!==s?((u=wo())===s&&(u=null),u!==s&&Na()!==s&&(o=os())!==s&&Na()!==s&&(a=function(){var r,t,e,n,u,o,a,i,l;if(r=Cu,(t=Ta())!==s)if(Na()!==s)if((e=gu())!==s){for(n=[],u=Cu,(o=Na())!==s&&(a=Aa())!==s&&(i=Na())!==s&&(l=gu())!==s?u=o=[o,a,i,l]:(Cu=u,u=s);u!==s;)n.push(u),u=Cu,(o=Na())!==s&&(a=Aa())!==s&&(i=Na())!==s&&(l=gu())!==s?u=o=[o,a,i,l]:(Cu=u,u=s);n!==s&&(u=Na())!==s&&(o=ma())!==s?(t=c(e,n),r=t):(Cu=r,r=s);}else Cu=r,r=s;else Cu=r,r=s;else Cu=r,r=s;return r}())!==s&&Na()!==s?((i=function(){var r,t,e,n,u,o,a,i;if(r=Cu,(t=Bu())!==s){for(e=[],n=Cu,(u=Na())!==s?((o=Aa())===s&&(o=null),o!==s&&(a=Na())!==s&&(i=Bu())!==s?n=u=[u,o,a,i]:(Cu=n,n=s)):(Cu=n,n=s);n!==s;)e.push(n),n=Cu,(u=Na())!==s?((o=Aa())===s&&(o=null),o!==s&&(a=Na())!==s&&(i=Bu())!==s?n=u=[u,o,a,i]:(Cu=n,n=s)):(Cu=n,n=s);e!==s?(t=za(t,e),r=t):(Cu=r,r=s);}else Cu=r,r=s;return r}())===s&&(i=null),i!==s&&Na()!==s?((l=function(){var t,e,n,u;t=Cu,"ignore"===r.substr(Cu,6).toLowerCase()?(e=r.substr(Cu,6),Cu+=6):(e=s,0===hu&&Su(qt));e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?t=e=[e,n]:(Cu=t,t=s)):(Cu=t,t=s);return t}())===s&&(l=Eo()),l===s&&(l=null),l!==s&&Na()!==s?((f=mo())===s&&(f=null),f!==s&&Na()!==s?((b=Ou())===s&&(b=null),b!==s?(v=e,d=n,L=u,p=a,w=i,E=l,h=f,A=b,(C=o)&&C.forEach(r=>ei.add(`create::${r.db}::${r.table}`)),e={tableList:Array.from(ei),columnList:ri(ni),ast:{type:v[0].toLowerCase(),keyword:"table",temporary:d&&d[0].toLowerCase(),if_not_exists:L&&L[0].toLowerCase(),table:C,ignore_replace:E&&E[0].toLowerCase(),as:h&&h[0].toLowerCase(),query_expr:A&&A.ast,create_definitions:p,table_options:w}},t=e):(Cu=t,t=s)):(Cu=t,t=s)):(Cu=t,t=s)):(Cu=t,t=s)):(Cu=t,t=s)):(Cu=t,t=s)):(Cu=t,t=s);var v,d,L,C,p,w,E,h,A;t===s&&(t=Cu,(e=Co())!==s&&Na()!==s?((n=po())===s&&(n=null),n!==s&&Na()!==s&&So()!==s&&Na()!==s?((u=wo())===s&&(u=null),u!==s&&Na()!==s&&(o=os())!==s&&Na()!==s&&(a=function r(){var t,e;(t=function(){var r,t;r=Cu,Ho()!==s&&Na()!==s&&(t=os())!==s?(r={type:"like",table:t}):(Cu=r,r=s);return r}())===s&&(t=Cu,Ta()!==s&&Na()!==s&&(e=r())!==s&&Na()!==s&&ma()!==s?((n=e).parentheses=!0,t=n):(Cu=t,t=s));var n;return t}())!==s?(e=function(r,t,e,n,u){return n&&n.forEach(r=>ei.add(`create::${r.db}::${r.table}`)),{tableList:Array.from(ei),columnList:ri(ni),ast:{type:r[0].toLowerCase(),keyword:"table",temporary:t&&t[0].toLowerCase(),if_not_exists:e&&e[0].toLowerCase(),table:n,like:u}}}(e,n,u,o,a),t=e):(Cu=t,t=s)):(Cu=t,t=s)):(Cu=t,t=s));return t}())===s&&(t=function(){var t,e,n,u,o,a;t=Cu,(e=Co())!==s&&Na()!==s?((n=function(){var t,e,n,u;t=Cu,"database"===r.substr(Cu,8).toLowerCase()?(e=r.substr(Cu,8),Cu+=8):(e=s,0===hu&&Su(ne));e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?(t=e="DATABASE"):(Cu=t,t=s)):(Cu=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=Cu,"scheme"===r.substr(Cu,6).toLowerCase()?(e=r.substr(Cu,6),Cu+=6):(e=s,0===hu&&Su(ue));e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?(t=e="SCHEME"):(Cu=t,t=s)):(Cu=t,t=s);return t}()),n!==s&&Na()!==s?((u=wo())===s&&(u=null),u!==s&&Na()!==s&&(o=Xs())!==s&&Na()!==s?((a=function(){var r,t,e,n,u,o;if(r=Cu,(t=Yu())!==s){for(e=[],n=Cu,(u=Na())!==s&&(o=Yu())!==s?n=u=[u,o]:(Cu=n,n=s);n!==s;)e.push(n),n=Cu,(u=Na())!==s&&(o=Yu())!==s?n=u=[u,o]:(Cu=n,n=s);e!==s?(t=i(t,e),r=t):(Cu=r,r=s);}else Cu=r,r=s;return r}())===s&&(a=null),a!==s?(c=e,l=u,f=o,b=a,e={tableList:Array.from(ei),columnList:ri(ni),ast:{type:c[0].toLowerCase(),keyword:"database",if_not_exists:l&&l[0].toLowerCase(),database:f,create_definitions:b}},t=e):(Cu=t,t=s)):(Cu=t,t=s)):(Cu=t,t=s)):(Cu=t,t=s);var c,l,f,b;return t}());return t}())===s&&(t=function(){var t,e,n,u;t=Cu,(e=function(){var t,e,n,u;t=Cu,"truncate"===r.substr(Cu,8).toLowerCase()?(e=r.substr(Cu,8),Cu+=8):(e=s,0===hu&&Su(Ln));e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?(t=e="TRUNCATE"):(Cu=t,t=s)):(Cu=t,t=s);return t}())!==s&&Na()!==s?((n=So())===s&&(n=null),n!==s&&Na()!==s&&(u=os())!==s?(o=e,a=n,(i=u)&&i.forEach(r=>ei.add(`${o}::${r.db}::${r.table}`)),e={tableList:Array.from(ei),columnList:ri(ni),ast:{type:o.toLowerCase(),keyword:a&&a.toLowerCase()||"table",name:i}},t=e):(Cu=t,t=s)):(Cu=t,t=s);var o,a,i;return t}())===s&&(t=function(){var r,t,e;r=Cu,(t=ho())!==s&&Na()!==s&&So()!==s&&Na()!==s&&(e=function(){var r,t,e,n,u,o,a,i;if(r=Cu,(t=es())!==s){for(e=[],n=Cu,(u=Na())!==s&&(o=Aa())!==s&&(a=Na())!==s&&(i=es())!==s?n=u=[u,o,a,i]:(Cu=n,n=s);n!==s;)e.push(n),n=Cu,(u=Na())!==s&&(o=Aa())!==s&&(a=Na())!==s&&(i=es())!==s?n=u=[u,o,a,i]:(Cu=n,n=s);e!==s?(t=c(t,e),r=t):(Cu=r,r=s);}else Cu=r,r=s;return r}())!==s?((n=e).forEach(r=>r.forEach(r=>r.table&&ei.add(`rename::${r.db}::${r.table}`))),t={tableList:Array.from(ei),columnList:ri(ni),ast:{type:"rename",table:n}},r=t):(Cu=r,r=s);var n;return r}())===s&&(t=function(){var t,e,n;t=Cu,(e=function(){var t,e,n,u;t=Cu,"call"===r.substr(Cu,4).toLowerCase()?(e=r.substr(Cu,4),Cu+=4):(e=s,0===hu&&Su(Fe));e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?(t=e="CALL"):(Cu=t,t=s)):(Cu=t,t=s);return t}())!==s&&Na()!==s&&(n=Ha())!==s?(u=n,e={tableList:Array.from(ei),columnList:ri(ni),ast:{type:"call",expr:u}},t=e):(Cu=t,t=s);var u;return t}())===s&&(t=function(){var t,e,n;t=Cu,(e=function(){var t,e,n,u;t=Cu,"use"===r.substr(Cu,3).toLowerCase()?(e=r.substr(Cu,3),Cu+=3):(e=s,0===hu&&Su(Pt));e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?t=e=[e,n]:(Cu=t,t=s)):(Cu=t,t=s);return t}())!==s&&Na()!==s&&(n=Hs())!==s?(u=n,ei.add(`use::${u}::null`),e={tableList:Array.from(ei),columnList:ri(ni),ast:{type:"use",db:u}},t=e):(Cu=t,t=s);var u;return t}())===s&&(t=function(){var t,e,n,u;t=Cu,(e=function(){var t,e,n,u;t=Cu,"alter"===r.substr(Cu,5).toLowerCase()?(e=r.substr(Cu,5),Cu+=5):(e=s,0===hu&&Su(Gt));e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?t=e=[e,n]:(Cu=t,t=s)):(Cu=t,t=s);return t}())!==s&&Na()!==s&&So()!==s&&Na()!==s&&(n=os())!==s&&Na()!==s&&(u=function(){var r,t,e,n,u,o,a,i;if(r=Cu,(t=Mu())!==s){for(e=[],n=Cu,(u=Na())!==s&&(o=Aa())!==s&&(a=Na())!==s&&(i=Mu())!==s?n=u=[u,o,a,i]:(Cu=n,n=s);n!==s;)e.push(n),n=Cu,(u=Na())!==s&&(o=Aa())!==s&&(a=Na())!==s&&(i=Mu())!==s?n=u=[u,o,a,i]:(Cu=n,n=s);e!==s?(t=c(t,e),r=t):(Cu=r,r=s);}else Cu=r,r=s;return r}())!==s?(a=u,(o=n)&&o.length>0&&o.forEach(r=>ei.add(`alter::${r.db}::${r.table}`)),e={tableList:Array.from(ei),columnList:ri(ni),ast:{type:"alter",table:o,expr:a}},t=e):(Cu=t,t=s);var o,a;return t}())===s&&(t=function(){var t,e,n,u;t=Cu,(e=To())!==s&&Na()!==s?((n=function(){var t,e,n,u;t=Cu,"global"===r.substr(Cu,6).toLowerCase()?(e=r.substr(Cu,6),Cu+=6):(e=s,0===hu&&Su(On));e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?(t=e="GLOBAL"):(Cu=t,t=s)):(Cu=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=Cu,"session"===r.substr(Cu,7).toLowerCase()?(e=r.substr(Cu,7),Cu+=7):(e=s,0===hu&&Su(gn));e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?(t=e="SESSION"):(Cu=t,t=s)):(Cu=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=Cu,"local"===r.substr(Cu,5).toLowerCase()?(e=r.substr(Cu,5),Cu+=5):(e=s,0===hu&&Su(cr));e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?(t=e="LOCAL"):(Cu=t,t=s)):(Cu=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=Cu,"persist"===r.substr(Cu,7).toLowerCase()?(e=r.substr(Cu,7),Cu+=7):(e=s,0===hu&&Su(xn));e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?(t=e="PERSIST"):(Cu=t,t=s)):(Cu=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=Cu,"persist_only"===r.substr(Cu,12).toLowerCase()?(e=r.substr(Cu,12),Cu+=12):(e=s,0===hu&&Su(Un));e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?(t=e="PERSIST_ONLY"):(Cu=t,t=s)):(Cu=t,t=s);return t}()),n===s&&(n=null),n!==s&&Na()!==s&&(u=Da())!==s?(o=n,(a=u).keyword=o,e={tableList:Array.from(ei),columnList:ri(ni),ast:{type:"set",expr:a}},t=e):(Cu=t,t=s)):(Cu=t,t=s);var o,a;return t}())===s&&(t=function(){var t,e,n;t=Cu,(e=function(){var t,e,n,u;t=Cu,"lock"===r.substr(Cu,4).toLowerCase()?(e=r.substr(Cu,4),Cu+=4):(e=s,0===hu&&Su(S));e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?t=e=[e,n]:(Cu=t,t=s)):(Cu=t,t=s);return t}())!==s&&Na()!==s&&Io()!==s&&Na()!==s&&(n=function(){var r,t,e,n,u,o,a,i;if(r=Cu,(t=Xu())!==s){for(e=[],n=Cu,(u=Na())!==s&&(o=Aa())!==s&&(a=Na())!==s&&(i=Xu())!==s?n=u=[u,o,a,i]:(Cu=n,n=s);n!==s;)e.push(n),n=Cu,(u=Na())!==s&&(o=Aa())!==s&&(a=Na())!==s&&(i=Xu())!==s?n=u=[u,o,a,i]:(Cu=n,n=s);e!==s?(t=za(t,e),r=t):(Cu=r,r=s);}else Cu=r,r=s;return r}())!==s?(u=n,e={tableList:Array.from(ei),columnList:ri(ni),ast:{type:"lock",keyword:"tables",tables:u}},t=e):(Cu=t,t=s);var u;return t}())===s&&(t=function(){var t,e;t=Cu,(e=function(){var t,e,n,u;t=Cu,"unlock"===r.substr(Cu,6).toLowerCase()?(e=r.substr(Cu,6),Cu+=6):(e=s,0===hu&&Su(Qt));e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?t=e=[e,n]:(Cu=t,t=s)):(Cu=t,t=s);return t}())!==s&&Na()!==s&&Io()!==s?(e={tableList:Array.from(ei),columnList:ri(ni),ast:{type:"unlock",keyword:"tables"}},t=e):(Cu=t,t=s);return t}()),t}function _u(){var t;return (t=Ou())===s&&(t=function(){var r,t,e,n,u;r=Cu,(t=Lo())!==s&&Na()!==s&&(e=os())!==s&&Na()!==s&&To()!==s&&Na()!==s&&(n=ps())!==s&&Na()!==s?((u=bs())===s&&(u=null),u!==s?(a=n,i=u,(o=e)&&o.forEach(r=>{const{db:t,as:e,table:n}=r;ei.add(`update::${t}::${n}`);}),a&&a.forEach(r=>ni.add(`update::${r.table}::${r.column}`)),t={tableList:Array.from(ei),columnList:ri(ni),ast:{type:"update",table:o,set:a,where:i}},r=t):(Cu=r,r=s)):(Cu=r,r=s);var o,a,i;return r}())===s&&(t=function(){var r,t,e,n,u,o,a,i;r=Cu,(t=ys())!==s&&Na()!==s?((e=yo())===s&&(e=null),e!==s&&Na()!==s&&(n=ls())!==s&&Na()!==s?((u=hs())===s&&(u=null),u!==s&&Na()!==s&&Ta()!==s&&Na()!==s&&(o=function(){var r,t,e,n,u,o,a,i;if(r=Cu,(t=Ys())!==s){for(e=[],n=Cu,(u=Na())!==s&&(o=Aa())!==s&&(a=Na())!==s&&(i=Ys())!==s?n=u=[u,o,a,i]:(Cu=n,n=s);n!==s;)e.push(n),n=Cu,(u=Na())!==s&&(o=Aa())!==s&&(a=Na())!==s&&(i=Ys())!==s?n=u=[u,o,a,i]:(Cu=n,n=s);e!==s?(t=c(t,e),r=t):(Cu=r,r=s);}else Cu=r,r=s;return r}())!==s&&Na()!==s&&ma()!==s&&Na()!==s&&(a=Es())!==s&&Na()!==s?((i=As())===s&&(i=null),i!==s?(t=function(r,t,e,n,u,s){if(t&&(ei.add(`insert::${t.db}::${t.table}`),t.as=null),n){let r=t&&t.table||null;Array.isArray(u)&&u.forEach((r,t)=>{if(r.value.length!=n.length)throw new Error("Error: column count doesn't match value count at row "+(t+1))}),n.forEach(t=>ni.add(`insert::${r}::${t}`));}return {tableList:Array.from(ei),columnList:ri(ni),ast:{type:r,table:[t],columns:n,values:u,partition:e,on_duplicate_update:s}}}(t,n,u,o,a,i),r=t):(Cu=r,r=s)):(Cu=r,r=s)):(Cu=r,r=s)):(Cu=r,r=s);return r}())===s&&(t=function(){var r,t,e,n,u,o;r=Cu,(t=ys())!==s&&Na()!==s&&yo()!==s&&Na()!==s&&(e=ls())!==s&&Na()!==s?((n=hs())===s&&(n=null),n!==s&&Na()!==s&&(u=Es())!==s&&Na()!==s?((o=As())===s&&(o=null),o!==s?(a=t,c=n,l=u,f=o,(i=e)&&(ei.add(`insert::${i.db}::${i.table}`),ni.add(`insert::${i.table}::(.*)`),i.as=null),t={tableList:Array.from(ei),columnList:ri(ni),ast:{type:a,table:[i],columns:null,values:l,partition:c,on_duplicate_update:f}},r=t):(Cu=r,r=s)):(Cu=r,r=s)):(Cu=r,r=s);var a,i,c,l,f;return r}())===s&&(t=function(){var r,t,e,n,u,o;r=Cu,(t=ys())!==s&&Na()!==s&&yo()!==s&&Na()!==s&&(e=ls())!==s&&Na()!==s?((n=hs())===s&&(n=null),n!==s&&Na()!==s&&To()!==s&&Na()!==s&&(u=ps())!==s&&Na()!==s?((o=As())===s&&(o=null),o!==s?(a=t,c=n,l=u,f=o,(i=e)&&(ei.add(`insert::${i.db}::${i.table}`),ni.add(`insert::${i.table}::(.*)`),i.as=null),t={tableList:Array.from(ei),columnList:ri(ni),ast:{type:a,table:[i],columns:null,partition:c,set:l,on_duplicate_update:f}},r=t):(Cu=r,r=s)):(Cu=r,r=s)):(Cu=r,r=s);var a,i,c,l,f;return r}())===s&&(t=function(){var t,e,n,u,o;t=Cu,(e=function(){var t,e,n,u;t=Cu,"delete"===r.substr(Cu,6).toLowerCase()?(e=r.substr(Cu,6),Cu+=6):(e=s,0===hu&&Su(G));e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?t=e=[e,n]:(Cu=t,t=s)):(Cu=t,t=s);return t}())!==s&&Na()!==s?((n=os())===s&&(n=null),n!==s&&Na()!==s&&(u=ts())!==s&&Na()!==s?((o=bs())===s&&(o=null),o!==s?(e=function(r,t,e){if(t&&t.forEach(r=>{r.table&&ei.add(`delete::${r.db}::${r.table}`),ni.add(`delete::${r.table}::(.*)`);}),null===r&&1===t.length){const e=t[0];r=[{db:e.db,table:e.table,as:e.as,addition:!0}];}return {tableList:Array.from(ei),columnList:ri(ni),ast:{type:"delete",table:r,from:t,where:e}}}(n,u,o),t=e):(Cu=t,t=s)):(Cu=t,t=s)):(Cu=t,t=s);return t}())===s&&(t=Ru())===s&&(t=function(){var r,t;r=[],t=Ma();for(;t!==s;)r.push(t),t=Ma();return r}()),t}function Ou(){var r,t,e,n,u,o,a,i,c,l;if(r=Cu,(t=Wu())!==s){for(e=[],n=Cu,(u=Na())!==s&&(o=Oo())!==s&&(a=Na())!==s?((i=ko())===s&&(i=null),i!==s&&(c=Na())!==s&&(l=Wu())!==s?n=u=[u,o,a,i,c,l]:(Cu=n,n=s)):(Cu=n,n=s);n!==s;)e.push(n),n=Cu,(u=Na())!==s&&(o=Oo())!==s&&(a=Na())!==s?((i=ko())===s&&(i=null),i!==s&&(c=Na())!==s&&(l=Wu())!==s?n=u=[u,o,a,i,c,l]:(Cu=n,n=s)):(Cu=n,n=s);e!==s&&(n=Na())!==s?((u=vs())===s&&(u=null),u!==s&&(o=Na())!==s?((a=Cs())===s&&(a=null),a!==s?(r=t=function(r,t,e,n){let u=r;for(let r=0;r<t.length;r++)u._next=t[r][5],u.union=t[r][3]?"union all":"union",u=u._next;return e&&(r._orderby=e),n&&(r._limit=n),{tableList:Array.from(ei),columnList:ri(ni),ast:r}}(t,e,u,a)):(Cu=r,r=s)):(Cu=r,r=s)):(Cu=r,r=s);}else Cu=r,r=s;return r}function gu(){var r;return (r=Pu())===s&&(r=xu())===s&&(r=$u())===s&&(r=Fu()),r}function xu(){var t,e,n,u,o,a,i,c,A,y,T,m,S,I,N,R,_,O,g,x,U,M,D,k,$;return t=Cu,(e=Gs())!==s&&Na()!==s&&(n=Xa())!==s&&Na()!==s?((u=function(){var e;(e=function(){var t,e,n,u;t=Cu,"not null"===r.substr(Cu,8).toLowerCase()?(e=r.substr(Cu,8),Cu+=8):(e=s,0===hu&&Su(Mt));e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?t=e=[e,n]:(Cu=t,t=s)):(Cu=t,t=s);return t}())!==s&&(e={type:"not null",value:"not null"});return e}())===s&&(u=Qs()),u===s&&(u=null),u!==s&&Na()!==s?((o=function(){var r,t;r=Cu,fo()!==s&&Na()!==s?((t=Js())===s&&(t=Rs()),t!==s?(r={type:"default",value:t}):(Cu=r,r=s)):(Cu=r,r=s);return r}())===s&&(o=null),o!==s&&Na()!==s?("auto_increment"===r.substr(Cu,14).toLowerCase()?(a=r.substr(Cu,14),Cu+=14):(a=s,0===hu&&Su(l)),a===s&&(a=null),a!==s&&Na()!==s?(i=Cu,"unique"===r.substr(Cu,6).toLowerCase()?(c=r.substr(Cu,6),Cu+=6):(c=s,0===hu&&Su(f)),c===s&&("primary"===r.substr(Cu,7).toLowerCase()?(c=r.substr(Cu,7),Cu+=7):(c=s,0===hu&&Su(b))),c===s&&(c=null),c!==s&&(A=Na())!==s?("key"===r.substr(Cu,3).toLowerCase()?(y=r.substr(Cu,3),Cu+=3):(y=s,0===hu&&Su(v)),y!==s?i=c=[c,A,y]:(Cu=i,i=s)):(Cu=i,i=s),i===s&&(i=null),i!==s&&(c=Na())!==s?((A=Oa())===s&&(A=null),A!==s&&(y=Na())!==s?((T=Uu())===s&&(T=null),T!==s&&Na()!==s?((m=function(){var t,e,n;t=Cu,"column_format"===r.substr(Cu,13).toLowerCase()?(e=r.substr(Cu,13),Cu+=13):(e=s,0===hu&&Su(d));e!==s&&Na()!==s?("fixed"===r.substr(Cu,5).toLowerCase()?(n=r.substr(Cu,5),Cu+=5):(n=s,0===hu&&Su(L)),n===s&&("dynamic"===r.substr(Cu,7).toLowerCase()?(n=r.substr(Cu,7),Cu+=7):(n=s,0===hu&&Su(C)),n===s&&("default"===r.substr(Cu,7).toLowerCase()?(n=r.substr(Cu,7),Cu+=7):(n=s,0===hu&&Su(p)))),n!==s?(e=function(r,t){return {type:"column_format",value:t.toLowerCase()}}(0,n),t=e):(Cu=t,t=s)):(Cu=t,t=s);return t}())===s&&(m=null),m!==s&&Na()!==s?((S=function(){var t,e,n;t=Cu,"storage"===r.substr(Cu,7).toLowerCase()?(e=r.substr(Cu,7),Cu+=7):(e=s,0===hu&&Su(w));e!==s&&Na()!==s?("disk"===r.substr(Cu,4).toLowerCase()?(n=r.substr(Cu,4),Cu+=4):(n=s,0===hu&&Su(E)),n===s&&("memory"===r.substr(Cu,6).toLowerCase()?(n=r.substr(Cu,6),Cu+=6):(n=s,0===hu&&Su(h))),n!==s?(e={type:"storage",value:n.toLowerCase()},t=e):(Cu=t,t=s)):(Cu=t,t=s);return t}())===s&&(S=null),S!==s&&Na()!==s?((I=Hu())===s&&(I=null),I!==s?(N=e,R=n,_=u,O=o,g=a,x=i,U=A,M=T,D=m,k=S,$=I,ni.add(`create::${N.table}::${N.column}`),_&&!_.value&&(_.value="null"),t=e={column:N,definition:R,nullable:_,default_val:O,auto_increment:g&&g.toLowerCase(),unique_or_primary:x&&`${x[0].toLowerCase()} ${x[2].toLowerCase()}`,comment:U,collate:M,column_format:D,storage:k,reference_definition:$,resource:"column"}):(Cu=t,t=s)):(Cu=t,t=s)):(Cu=t,t=s)):(Cu=t,t=s)):(Cu=t,t=s)):(Cu=t,t=s)):(Cu=t,t=s)):(Cu=t,t=s)):(Cu=t,t=s)):(Cu=t,t=s),t}function Uu(){var t,e;return t=Cu,function(){var t,e,n,u;t=Cu,"collate"===r.substr(Cu,7).toLowerCase()?(e=r.substr(Cu,7),Cu+=7):(e=s,0===hu&&Su(Z));e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?(t=e="COLLATE"):(Cu=t,t=s)):(Cu=t,t=s);return t}()!==s&&Na()!==s&&(e=Xs())!==s?(t={type:"collate",value:e}):(Cu=t,t=s),t}function Mu(){var t;return (t=function(){var r,t;r=Cu,da()!==s&&Na()!==s&&(t=Pu())!==s?(r={action:"add",create_definitions:t,resource:"constraint",type:"alter"}):(Cu=r,r=s);return r}())===s&&(t=function(){var t,e,n,u;t=Cu,(e=vo())!==s&&Na()!==s?("check"===r.substr(Cu,5).toLowerCase()?(n=r.substr(Cu,5),Cu+=5):(n=s,0===hu&&Su(_)),n!==s&&Na()!==s&&(u=Xs())!==s?(e={action:"drop",constraint:u,keyword:n.toLowerCase(),resource:"constraint",type:"alter"},t=e):(Cu=t,t=s)):(Cu=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Cu,Uo()!==s&&Na()!==s?("check"===r.substr(Cu,5).toLowerCase()?(e=r.substr(Cu,5),Cu+=5):(e=s,0===hu&&Su(_)),e!==s&&Na()!==s?("check"===r.substr(Cu,5).toLowerCase()?(n=r.substr(Cu,5),Cu+=5):(n=s,0===hu&&Su(_)),n!==s&&Na()!==s&&Ea()!==s&&Na()!==s&&(u=Xs())!==s?(t={action:"with",constraint:u,keyword:"check check",resource:"constraint",type:"alter"}):(Cu=t,t=s)):(Cu=t,t=s)):(Cu=t,t=s);return t}())===s&&(t=function(){var t,e,n;t=Cu,"nocheck"===r.substr(Cu,7).toLowerCase()?(e=r.substr(Cu,7),Cu+=7):(e=s,0===hu&&Su(O));e!==s&&Na()!==s&&Ea()!==s&&Na()!==s&&(n=Xs())!==s?(t=e={action:"nocheck",constraint:n,resource:"constraint",type:"alter"}):(Cu=t,t=s);return t}())===s&&(t=function(){var r,t,e,n;r=Cu,(t=da())!==s&&Na()!==s?((e=La())===s&&(e=null),e!==s&&Na()!==s&&(n=xu())!==s?(u=e,o=n,t={action:"add",...o,keyword:u,resource:"column",type:"alter"},r=t):(Cu=r,r=s)):(Cu=r,r=s);var u,o;return r}())===s&&(t=function(){var r,t,e;r=Cu,vo()!==s&&Na()!==s?((t=La())===s&&(t=null),t!==s&&Na()!==s&&(e=Gs())!==s?(r={action:"drop",column:e,keyword:t,resource:"column",type:"alter"}):(Cu=r,r=s)):(Cu=r,r=s);return r}())===s&&(t=function(){var r,t,e;r=Cu,(t=da())!==s&&Na()!==s&&(e=$u())!==s?(n=e,t={action:"add",type:"alter",...n},r=t):(Cu=r,r=s);var n;return r}())===s&&(t=function(){var r,t,e;r=Cu,(t=da())!==s&&Na()!==s&&(e=Fu())!==s?(n=e,t={action:"add",type:"alter",...n},r=t):(Cu=r,r=s);var n;return r}())===s&&(t=function(){var r,t,e,n;r=Cu,(t=ho())!==s&&Na()!==s?((e=bo())===s&&(e=mo()),e===s&&(e=null),e!==s&&Na()!==s&&(n=Hs())!==s?(o=n,t={action:"rename",type:"alter",resource:"table",keyword:(u=e)&&u[0].toLowerCase(),table:o},r=t):(Cu=r,r=s)):(Cu=r,r=s);var u,o;return r}())===s&&(t=Du())===s&&(t=ku()),t}function Du(){var t,e,n,u;return t=Cu,"algorithm"===r.substr(Cu,9).toLowerCase()?(e=r.substr(Cu,9),Cu+=9):(e=s,0===hu&&Su(A)),e!==s&&Na()!==s?((n=va())===s&&(n=null),n!==s&&Na()!==s?("default"===r.substr(Cu,7).toLowerCase()?(u=r.substr(Cu,7),Cu+=7):(u=s,0===hu&&Su(p)),u===s&&("instant"===r.substr(Cu,7).toLowerCase()?(u=r.substr(Cu,7),Cu+=7):(u=s,0===hu&&Su(y)),u===s&&("inplace"===r.substr(Cu,7).toLowerCase()?(u=r.substr(Cu,7),Cu+=7):(u=s,0===hu&&Su(T)),u===s&&("copy"===r.substr(Cu,4).toLowerCase()?(u=r.substr(Cu,4),Cu+=4):(u=s,0===hu&&Su(m))))),u!==s?(t=e={type:"alter",keyword:"algorithm",resource:"algorithm",symbol:n,algorithm:u}):(Cu=t,t=s)):(Cu=t,t=s)):(Cu=t,t=s),t}function ku(){var t,e,n,u;return t=Cu,"lock"===r.substr(Cu,4).toLowerCase()?(e=r.substr(Cu,4),Cu+=4):(e=s,0===hu&&Su(S)),e!==s&&Na()!==s?((n=va())===s&&(n=null),n!==s&&Na()!==s?("default"===r.substr(Cu,7).toLowerCase()?(u=r.substr(Cu,7),Cu+=7):(u=s,0===hu&&Su(p)),u===s&&("none"===r.substr(Cu,4).toLowerCase()?(u=r.substr(Cu,4),Cu+=4):(u=s,0===hu&&Su(I)),u===s&&("shared"===r.substr(Cu,6).toLowerCase()?(u=r.substr(Cu,6),Cu+=6):(u=s,0===hu&&Su(N)),u===s&&("exclusive"===r.substr(Cu,9).toLowerCase()?(u=r.substr(Cu,9),Cu+=9):(u=s,0===hu&&Su(R))))),u!==s?(t=e={type:"alter",keyword:"lock",resource:"lock",symbol:n,lock:u}):(Cu=t,t=s)):(Cu=t,t=s)):(Cu=t,t=s),t}function $u(){var r,t,e,n,u,o,a,i;return r=Cu,(t=Ca())===s&&(t=pa()),t!==s&&Na()!==s?((e=Ys())===s&&(e=null),e!==s&&Na()!==s?((n=ns())===s&&(n=null),n!==s&&Na()!==s&&(u=qu())!==s&&Na()!==s?((o=us())===s&&(o=null),o!==s&&Na()!==s?(a=n,i=o,r=t={index:e,definition:u,keyword:t.toLowerCase(),index_type:a,resource:"index",index_options:i}):(Cu=r,r=s)):(Cu=r,r=s)):(Cu=r,r=s)):(Cu=r,r=s),r}function Fu(){var t,e,n,u,o,a,i,c,l;return t=Cu,(e=function(){var t,e,n,u;t=Cu,"fulltext"===r.substr(Cu,8).toLowerCase()?(e=r.substr(Cu,8),Cu+=8):(e=s,0===hu&&Su(Yn));e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?(t=e="FULLTEXT"):(Cu=t,t=s)):(Cu=t,t=s);return t}())===s&&(e=function(){var t,e,n,u;t=Cu,"spatial"===r.substr(Cu,7).toLowerCase()?(e=r.substr(Cu,7),Cu+=7):(e=s,0===hu&&Su(Bn));e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?(t=e="SPATIAL"):(Cu=t,t=s)):(Cu=t,t=s);return t}()),e!==s&&Na()!==s?((n=Ca())===s&&(n=pa()),n===s&&(n=null),n!==s&&Na()!==s?((u=Ys())===s&&(u=null),u!==s&&Na()!==s&&(o=qu())!==s&&Na()!==s?((a=us())===s&&(a=null),a!==s&&Na()!==s?(i=e,l=a,t=e={index:u,definition:o,keyword:(c=n)&&`${i.toLowerCase()} ${c.toLowerCase()}`||i.toLowerCase(),index_options:l,resource:"index"}):(Cu=t,t=s)):(Cu=t,t=s)):(Cu=t,t=s)):(Cu=t,t=s),t}function Pu(){var t;return (t=function(){var t,e,n,u,o,a;t=Cu,(e=Gu())===s&&(e=null);e!==s&&Na()!==s?("primary key"===r.substr(Cu,11).toLowerCase()?(n=r.substr(Cu,11),Cu+=11):(n=s,0===hu&&Su(g)),n!==s&&Na()!==s?((u=ns())===s&&(u=null),u!==s&&Na()!==s&&(o=qu())!==s&&Na()!==s?((a=us())===s&&(a=null),a!==s?(c=n,l=u,f=o,b=a,e={constraint:(i=e)&&i.constraint,definition:f,constraint_type:c.toLowerCase(),keyword:i&&i.keyword,index_type:l,resource:"constraint",index_options:b},t=e):(Cu=t,t=s)):(Cu=t,t=s)):(Cu=t,t=s)):(Cu=t,t=s);var i,c,l,f,b;return t}())===s&&(t=function(){var t,e,n,u,o,a,i,c;t=Cu,(e=Gu())===s&&(e=null);e!==s&&Na()!==s&&(n=function(){var t,e,n,u;t=Cu,"unique"===r.substr(Cu,6).toLowerCase()?(e=r.substr(Cu,6),Cu+=6):(e=s,0===hu&&Su(f));e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?(t=e="UNIQUE"):(Cu=t,t=s)):(Cu=t,t=s);return t}())!==s&&Na()!==s?((u=Ca())===s&&(u=pa()),u===s&&(u=null),u!==s&&Na()!==s?((o=Ys())===s&&(o=null),o!==s&&Na()!==s?((a=ns())===s&&(a=null),a!==s&&Na()!==s&&(i=qu())!==s&&Na()!==s?((c=us())===s&&(c=null),c!==s?(b=n,v=u,d=o,L=a,C=i,p=c,e={constraint:(l=e)&&l.constraint,definition:C,constraint_type:v&&`${b.toLowerCase()} ${v.toLowerCase()}`||b.toLowerCase(),keyword:l&&l.keyword,index_type:L,index:d,resource:"constraint",index_options:p},t=e):(Cu=t,t=s)):(Cu=t,t=s)):(Cu=t,t=s)):(Cu=t,t=s)):(Cu=t,t=s);var l,b,v,d,L,C,p;return t}())===s&&(t=function(){var t,e,n,u,o,a;t=Cu,(e=Gu())===s&&(e=null);e!==s&&Na()!==s?("foreign key"===r.substr(Cu,11).toLowerCase()?(n=r.substr(Cu,11),Cu+=11):(n=s,0===hu&&Su(D)),n!==s&&Na()!==s?((u=Ys())===s&&(u=null),u!==s&&Na()!==s&&(o=qu())!==s&&Na()!==s?((a=Hu())===s&&(a=null),a!==s?(c=n,l=u,f=o,b=a,e={constraint:(i=e)&&i.constraint,definition:f,constraint_type:c,keyword:i&&i.keyword,index:l,resource:"constraint",reference_definition:b},t=e):(Cu=t,t=s)):(Cu=t,t=s)):(Cu=t,t=s)):(Cu=t,t=s);var i,c,l,f,b;return t}())===s&&(t=function(){var t,e,n,u,o,a,i,c,l,f;t=Cu,(e=Gu())===s&&(e=null);e!==s&&Na()!==s?("check"===r.substr(Cu,5).toLowerCase()?(n=r.substr(Cu,5),Cu+=5):(n=s,0===hu&&Su(_)),n!==s&&Na()!==s?(u=Cu,"not"===r.substr(Cu,3).toLowerCase()?(o=r.substr(Cu,3),Cu+=3):(o=s,0===hu&&Su(x)),o!==s&&(a=Na())!==s?("for"===r.substr(Cu,3).toLowerCase()?(i=r.substr(Cu,3),Cu+=3):(i=s,0===hu&&Su(U)),i!==s&&(c=Na())!==s?("replication"===r.substr(Cu,11).toLowerCase()?(l=r.substr(Cu,11),Cu+=11):(l=s,0===hu&&Su(M)),l!==s&&(f=Na())!==s?u=o=[o,a,i,c,l,f]:(Cu=u,u=s)):(Cu=u,u=s)):(Cu=u,u=s),u===s&&(u=null),u!==s&&(o=Ta())!==s&&(a=Na())!==s&&(i=Rs())!==s&&(c=Na())!==s&&(l=ma())!==s?(b=e,v=u,d=i,e={constraint_type:n.toLowerCase(),keyword:b&&b.keyword,constraint:b&&b.constraint,index_type:v&&{keyword:"not for replication"},definition:[d],resource:"constraint"},t=e):(Cu=t,t=s)):(Cu=t,t=s)):(Cu=t,t=s);var b,v,d;return t}()),t}function Gu(){var r,t,e,n;return r=Cu,(t=Ea())!==s&&Na()!==s?((e=Hs())===s&&(e=null),e!==s?(n=e,r=t={keyword:t.toLowerCase(),constraint:n}):(Cu=r,r=s)):(Cu=r,r=s),r}function Hu(){var t,e,n,u,o,a,i,c,l,f;return t=Cu,(e=function(){var t,e,n,u;t=Cu,"references"===r.substr(Cu,10).toLowerCase()?(e=r.substr(Cu,10),Cu+=10):(e=s,0===hu&&Su(Vn));e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?(t=e="REFERENCES"):(Cu=t,t=s)):(Cu=t,t=s);return t}())!==s&&Na()!==s&&(n=os())!==s&&Na()!==s&&(u=qu())!==s&&Na()!==s?("match full"===r.substr(Cu,10).toLowerCase()?(o=r.substr(Cu,10),Cu+=10):(o=s,0===hu&&Su(k)),o===s&&("match partial"===r.substr(Cu,13).toLowerCase()?(o=r.substr(Cu,13),Cu+=13):(o=s,0===hu&&Su($)),o===s&&("match simple"===r.substr(Cu,12).toLowerCase()?(o=r.substr(Cu,12),Cu+=12):(o=s,0===hu&&Su(F)))),o===s&&(o=null),o!==s&&Na()!==s?((a=ju())===s&&(a=null),a!==s&&Na()!==s?((i=ju())===s&&(i=null),i!==s?(c=o,l=a,f=i,t=e={definition:u,table:n,keyword:e.toLowerCase(),match:c&&c.toLowerCase(),on_delete:l,on_update:f}):(Cu=t,t=s)):(Cu=t,t=s)):(Cu=t,t=s)):(Cu=t,t=s),t}function ju(){var t,e,n,u,o,a;return t=Cu,"on"===r.substr(Cu,2).toLowerCase()?(e=r.substr(Cu,2),Cu+=2):(e=s,0===hu&&Su(P)),e!==s&&Na()!==s?("delete"===r.substr(Cu,6).toLowerCase()?(n=r.substr(Cu,6),Cu+=6):(n=s,0===hu&&Su(G)),n===s&&("update"===r.substr(Cu,6).toLowerCase()?(n=r.substr(Cu,6),Cu+=6):(n=s,0===hu&&Su(H))),n!==s&&Na()!==s&&(u=function(){var e;"restrict"===r.substr(Cu,8).toLowerCase()?(e=r.substr(Cu,8),Cu+=8):(e=s,0===hu&&Su(j));e===s&&("cascade"===r.substr(Cu,7).toLowerCase()?(e=r.substr(Cu,7),Cu+=7):(e=s,0===hu&&Su(Y)),e===s&&("set null"===r.substr(Cu,8).toLowerCase()?(e=r.substr(Cu,8),Cu+=8):(e=s,0===hu&&Su(B)),e===s&&("no action"===r.substr(Cu,9).toLowerCase()?(e=r.substr(Cu,9),Cu+=9):(e=s,0===hu&&Su(X)),e===s&&("set default"===r.substr(Cu,11).toLowerCase()?(e=r.substr(Cu,11),Cu+=11):(e=s,0===hu&&Su(W))))));e!==s&&(e=e.toLowerCase());return e}())!==s?(o=n,a=u,t=e={type:`${e.toLowerCase()} ${o.toLowerCase()}`,value:a}):(Cu=t,t=s)):(Cu=t,t=s),t}function Yu(){var t,e,n,u,o,a,i,c,l;return t=Cu,(e=fo())===s&&(e=null),e!==s&&Na()!==s?((n=function(){var t,e,n;return t=Cu,"character"===r.substr(Cu,9).toLowerCase()?(e=r.substr(Cu,9),Cu+=9):(e=s,0===hu&&Su(V)),e!==s&&Na()!==s?("set"===r.substr(Cu,3).toLowerCase()?(n=r.substr(Cu,3),Cu+=3):(n=s,0===hu&&Su(K)),n!==s?(t=e="CHARACTER SET"):(Cu=t,t=s)):(Cu=t,t=s),t}())===s&&("charset"===r.substr(Cu,7).toLowerCase()?(n=r.substr(Cu,7),Cu+=7):(n=s,0===hu&&Su(q)),n===s&&("collate"===r.substr(Cu,7).toLowerCase()?(n=r.substr(Cu,7),Cu+=7):(n=s,0===hu&&Su(Z)))),n!==s&&Na()!==s?((u=va())===s&&(u=null),u!==s&&Na()!==s&&(o=Xs())!==s?(i=n,c=u,l=o,t=e={keyword:(a=e)&&`${a[0].toLowerCase()} ${i.toLowerCase()}`||i.toLowerCase(),symbol:c,value:l}):(Cu=t,t=s)):(Cu=t,t=s)):(Cu=t,t=s),t}function Bu(){var t,e,n,u,o,a,i,c,f;return t=Cu,"auto_increment"===r.substr(Cu,14).toLowerCase()?(e=r.substr(Cu,14),Cu+=14):(e=s,0===hu&&Su(l)),e===s&&("avg_row_length"===r.substr(Cu,14).toLowerCase()?(e=r.substr(Cu,14),Cu+=14):(e=s,0===hu&&Su(z)),e===s&&("key_block_size"===r.substr(Cu,14).toLowerCase()?(e=r.substr(Cu,14),Cu+=14):(e=s,0===hu&&Su(J)),e===s&&("max_rows"===r.substr(Cu,8).toLowerCase()?(e=r.substr(Cu,8),Cu+=8):(e=s,0===hu&&Su(Q)),e===s&&("min_rows"===r.substr(Cu,8).toLowerCase()?(e=r.substr(Cu,8),Cu+=8):(e=s,0===hu&&Su(rr)),e===s&&("stats_sample_pages"===r.substr(Cu,18).toLowerCase()?(e=r.substr(Cu,18),Cu+=18):(e=s,0===hu&&Su(tr))))))),e!==s&&Na()!==s?((n=va())===s&&(n=null),n!==s&&Na()!==s&&(u=uo())!==s?(c=n,f=u,t=e={keyword:e.toLowerCase(),symbol:c,value:f.value}):(Cu=t,t=s)):(Cu=t,t=s),t===s&&(t=Yu())===s&&(t=Cu,(e=wa())===s&&("connection"===r.substr(Cu,10).toLowerCase()?(e=r.substr(Cu,10),Cu+=10):(e=s,0===hu&&Su(er))),e!==s&&Na()!==s?((n=va())===s&&(n=null),n!==s&&Na()!==s&&(u=ro())!==s?(t=e=function(r,t,e){return {keyword:r.toLowerCase(),symbol:t,value:`'${e.value}'`}}(e,n,u)):(Cu=t,t=s)):(Cu=t,t=s),t===s&&(t=Cu,"compression"===r.substr(Cu,11).toLowerCase()?(e=r.substr(Cu,11),Cu+=11):(e=s,0===hu&&Su(nr)),e!==s&&Na()!==s?((n=va())===s&&(n=null),n!==s&&Na()!==s?(u=Cu,39===r.charCodeAt(Cu)?(o="'",Cu++):(o=s,0===hu&&Su(ur)),o!==s?("zlib"===r.substr(Cu,4).toLowerCase()?(a=r.substr(Cu,4),Cu+=4):(a=s,0===hu&&Su(sr)),a===s&&("lz4"===r.substr(Cu,3).toLowerCase()?(a=r.substr(Cu,3),Cu+=3):(a=s,0===hu&&Su(or)),a===s&&("none"===r.substr(Cu,4).toLowerCase()?(a=r.substr(Cu,4),Cu+=4):(a=s,0===hu&&Su(I)))),a!==s?(39===r.charCodeAt(Cu)?(i="'",Cu++):(i=s,0===hu&&Su(ur)),i!==s?u=o=[o,a,i]:(Cu=u,u=s)):(Cu=u,u=s)):(Cu=u,u=s),u!==s?(t=e=function(r,t,e){return {keyword:r.toLowerCase(),symbol:t,value:e.join("").toUpperCase()}}(e,n,u)):(Cu=t,t=s)):(Cu=t,t=s)):(Cu=t,t=s),t===s&&(t=Cu,"engine"===r.substr(Cu,6).toLowerCase()?(e=r.substr(Cu,6),Cu+=6):(e=s,0===hu&&Su(ar)),e!==s&&Na()!==s?((n=va())===s&&(n=null),n!==s&&Na()!==s&&(u=Xs())!==s?(t=e=function(r,t,e){return {keyword:r.toLowerCase(),symbol:t,value:e.toUpperCase()}}(e,n,u)):(Cu=t,t=s)):(Cu=t,t=s)))),t}function Xu(){var t,e,n,u,o;return t=Cu,(e=is())!==s&&Na()!==s&&(n=function(){var t,e,n;return t=Cu,"read"===r.substr(Cu,4).toLowerCase()?(e=r.substr(Cu,4),Cu+=4):(e=s,0===hu&&Su(ir)),e!==s&&Na()!==s?("local"===r.substr(Cu,5).toLowerCase()?(n=r.substr(Cu,5),Cu+=5):(n=s,0===hu&&Su(cr)),n===s&&(n=null),n!==s?(t=e={type:"read",suffix:n&&"local"}):(Cu=t,t=s)):(Cu=t,t=s),t===s&&(t=Cu,"low_priority"===r.substr(Cu,12).toLowerCase()?(e=r.substr(Cu,12),Cu+=12):(e=s,0===hu&&Su(lr)),e===s&&(e=null),e!==s&&Na()!==s?("write"===r.substr(Cu,5).toLowerCase()?(n=r.substr(Cu,5),Cu+=5):(n=s,0===hu&&Su(fr)),n!==s?(t=e={type:"write",prefix:e&&"low_priority"}):(Cu=t,t=s)):(Cu=t,t=s)),t}())!==s?(u=e,o=n,ei.add(`lock::${u.db}::${u.table}`),t=e={table:u,lock_type:o}):(Cu=t,t=s),t}function Wu(){var t,e,n,u,o,a,i;return (t=Zu())===s&&(t=Cu,e=Cu,40===r.charCodeAt(Cu)?(n="(",Cu++):(n=s,0===hu&&Su(br)),n!==s&&(u=Na())!==s&&(o=Wu())!==s&&(a=Na())!==s?(41===r.charCodeAt(Cu)?(i=")",Cu++):(i=s,0===hu&&Su(vr)),i!==s?e=n=[n,u,o,a,i]:(Cu=e,e=s)):(Cu=e,e=s),e!==s&&(e={...e[2],parentheses_symbol:!0}),t=e),t}function Vu(){var t,e,n,u,o,a,i,l,f;if(t=Cu,Uo()!==s)if(Na()!==s)if((e=Ku())!==s){for(n=[],u=Cu,(o=Na())!==s&&(a=Aa())!==s&&(i=Na())!==s&&(l=Ku())!==s?u=o=[o,a,i,l]:(Cu=u,u=s);u!==s;)n.push(u),u=Cu,(o=Na())!==s&&(a=Aa())!==s&&(i=Na())!==s&&(l=Ku())!==s?u=o=[o,a,i,l]:(Cu=u,u=s);n!==s?(t=c(e,n)):(Cu=t,t=s);}else Cu=t,t=s;else Cu=t,t=s;else Cu=t,t=s;return t===s&&(t=Cu,Na()!==s&&Uo()!==s&&(e=Na())!==s&&(n=function(){var t,e,n,u;t=Cu,"RECURSIVE"===r.substr(Cu,9)?(e="RECURSIVE",Cu+=9):(e=s,0===hu&&Su(Wt));e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?t=e=[e,n]:(Cu=t,t=s)):(Cu=t,t=s);return t}())!==s&&(u=Na())!==s&&(o=Ku())!==s?((f=o).recursive=!0,t=[f]):(Cu=t,t=s)),t}function Ku(){var r,t,e,n,u;return r=Cu,(t=ro())===s&&(t=Xs()),t!==s&&Na()!==s?((e=qu())===s&&(e=null),e!==s&&Na()!==s&&mo()!==s&&Na()!==s&&Ta()!==s&&Na()!==s&&(n=Ou())!==s&&Na()!==s&&ma()!==s?("string"==typeof(u=t)&&(u={type:"default",value:u}),r=t={name:u,stmt:n,columns:e}):(Cu=r,r=s)):(Cu=r,r=s),r}function qu(){var r,t,e,n,u,o,a,i;if(r=Cu,Ta()!==s)if(Na()!==s)if((t=Ys())!==s){for(e=[],n=Cu,(u=Na())!==s&&(o=Aa())!==s&&(a=Na())!==s&&(i=Ys())!==s?n=u=[u,o,a,i]:(Cu=n,n=s);n!==s;)e.push(n),n=Cu,(u=Na())!==s&&(o=Aa())!==s&&(a=Na())!==s&&(i=Ys())!==s?n=u=[u,o,a,i]:(Cu=n,n=s);e!==s&&(n=Na())!==s&&(u=ma())!==s?(r=c(t,e)):(Cu=r,r=s);}else Cu=r,r=s;else Cu=r,r=s;else Cu=r,r=s;return r}function Zu(){var t,e,n,u,o,a,i,c,l,f,b;return t=Cu,Na()!==s?((e=Vu())===s&&(e=null),e!==s&&Na()!==s&&function(){var t,e,n,u;t=Cu,"select"===r.substr(Cu,6).toLowerCase()?(e=r.substr(Cu,6),Cu+=6):(e=s,0===hu&&Su(Ht));e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?t=e=[e,n]:(Cu=t,t=s)):(Cu=t,t=s);return t}()!==s&&Ra()!==s?((n=function(){var r,t,e,n,u,o;if(r=Cu,(t=zu())!==s){for(e=[],n=Cu,(u=Na())!==s&&(o=zu())!==s?n=u=[u,o]:(Cu=n,n=s);n!==s;)e.push(n),n=Cu,(u=Na())!==s&&(o=zu())!==s?n=u=[u,o]:(Cu=n,n=s);e!==s?(t=function(r,t){const e=[r];for(let r=0,n=t.length;r<n;++r)e.push(t[r][1]);return e}(t,e),r=t):(Cu=r,r=s);}else Cu=r,r=s;return r}())===s&&(n=null),n!==s&&Na()!==s?((u=$o())===s&&(u=null),u!==s&&Na()!==s&&(o=Ju())!==s&&Na()!==s?((a=ts())===s&&(a=null),a!==s&&Na()!==s?((i=bs())===s&&(i=null),i!==s&&Na()!==s?((c=function(){var t,e,n;t=Cu,(e=function(){var t,e,n,u;t=Cu,"group"===r.substr(Cu,5).toLowerCase()?(e=r.substr(Cu,5),Cu+=5):(e=s,0===hu&&Su(Ce));e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?t=e=[e,n]:(Cu=t,t=s)):(Cu=t,t=s);return t}())!==s&&Na()!==s&&Mo()!==s&&Na()!==s&&(n=ms())!==s?(e=n.value,t=e):(Cu=t,t=s);return t}())===s&&(c=null),c!==s&&Na()!==s?((l=function(){var t,e;t=Cu,function(){var t,e,n,u;t=Cu,"having"===r.substr(Cu,6).toLowerCase()?(e=r.substr(Cu,6),Cu+=6):(e=s,0===hu&&Su(Ee));e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?t=e=[e,n]:(Cu=t,t=s)):(Cu=t,t=s);return t}()!==s&&Na()!==s&&(e=Rs())!==s?(t=e):(Cu=t,t=s);return t}())===s&&(l=null),l!==s&&Na()!==s?((f=vs())===s&&(f=null),f!==s&&Na()!==s?((b=Cs())===s&&(b=null),b!==s?(t=function(r,t,e,n,u,s,o,a,i,c){return u&&u.forEach(r=>r.table&&ei.add(`select::${r.db}::${r.table}`)),{with:r,type:"select",options:t,distinct:e,columns:n,from:u,where:s,groupby:o,having:a,orderby:i,limit:c}}(e,n,u,o,a,i,c,l,f,b)):(Cu=t,t=s)):(Cu=t,t=s)):(Cu=t,t=s)):(Cu=t,t=s)):(Cu=t,t=s)):(Cu=t,t=s)):(Cu=t,t=s)):(Cu=t,t=s)):(Cu=t,t=s)):(Cu=t,t=s),t}function zu(){var e;return (e=function(){var t;"sql_calc_found_rows"===r.substr(Cu,19).toLowerCase()?(t=r.substr(Cu,19),Cu+=19):(t=s,0===hu&&Su(Kn));return t}())===s&&((e=function(){var t;"sql_cache"===r.substr(Cu,9).toLowerCase()?(t=r.substr(Cu,9),Cu+=9):(t=s,0===hu&&Su(qn));return t}())===s&&(e=function(){var t;"sql_no_cache"===r.substr(Cu,12).toLowerCase()?(t=r.substr(Cu,12),Cu+=12):(t=s,0===hu&&Su(Zn));return t}()),e===s&&(e=function(){var t;"sql_big_result"===r.substr(Cu,14).toLowerCase()?(t=r.substr(Cu,14),Cu+=14):(t=s,0===hu&&Su(Jn));return t}())===s&&(e=function(){var t;"sql_small_result"===r.substr(Cu,16).toLowerCase()?(t=r.substr(Cu,16),Cu+=16):(t=s,0===hu&&Su(zn));return t}())===s&&(e=function(){var t;"sql_buffer_result"===r.substr(Cu,17).toLowerCase()?(t=r.substr(Cu,17),Cu+=17):(t=s,0===hu&&Su(Qn));return t}())),e!==s&&(e=e),e}function Ju(){var r,t,e,n,u,o,a,i,l,f;if(r=Cu,(t=ko())===s&&(t=Cu,(e=ya())!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?t=e=[e,n]:(Cu=t,t=s)):(Cu=t,t=s),t===s&&(t=ya())),t!==s){for(e=[],n=Cu,(u=Na())!==s&&(o=Aa())!==s&&(a=Na())!==s&&(i=Qu())!==s?n=u=[u,o,a,i]:(Cu=n,n=s);n!==s;)e.push(n),n=Cu,(u=Na())!==s&&(o=Aa())!==s&&(a=Na())!==s&&(i=Qu())!==s?n=u=[u,o,a,i]:(Cu=n,n=s);e!==s?(l=t,f=e,ni.add("select::null::(.*)"),r=t=f&&f.length>0?(l[0]={expr:{type:"column_ref",table:null,column:"*"},as:null},za(l[0],f)):l[0]):(Cu=r,r=s);}else Cu=r,r=s;if(r===s)if(r=Cu,(t=Qu())!==s){for(e=[],n=Cu,(u=Na())!==s&&(o=Aa())!==s&&(a=Na())!==s&&(i=Qu())!==s?n=u=[u,o,a,i]:(Cu=n,n=s);n!==s;)e.push(n),n=Cu,(u=Na())!==s&&(o=Aa())!==s&&(a=Na())!==s&&(i=Qu())!==s?n=u=[u,o,a,i]:(Cu=n,n=s);e!==s?(r=t=c(t,e)):(Cu=r,r=s);}else Cu=r,r=s;return r}function Qu(){var r,t,e,n;return r=Cu,(t=Hs())!==s&&Na()!==s&&(e=ha())!==s&&Na()!==s&&ya()!==s?(n=t,ni.add(`select::${n}::(.*)`),r=t={expr:{type:"column_ref",table:n,column:"*"},as:null}):(Cu=r,r=s),r===s&&(r=Cu,(t=Rs())!==s&&Na()!==s?((e=rs())===s&&(e=null),e!==s?(r=t={expr:t,as:e}):(Cu=r,r=s)):(Cu=r,r=s)),r}function rs(){var r,t,e;return r=Cu,(t=mo())!==s&&Na()!==s&&(e=function(){var r,t;r=Cu,(t=Xs())!==s?((function(r){if(!0===Va[r.toUpperCase()])throw new Error("Error: "+JSON.stringify(r)+" is a reserved word, can not as alias clause");return !1}(t)?s:void 0)!==s?(r=t=t):(Cu=r,r=s)):(Cu=r,r=s);r===s&&(r=Cu,(t=js())!==s&&(t=t),r=t);return r}())!==s?(r=t=e):(Cu=r,r=s),r===s&&(r=Cu,(t=mo())===s&&(t=null),t!==s&&Na()!==s&&(e=Hs())!==s?(r=t=e):(Cu=r,r=s)),r}function ts(){var t,e;return t=Cu,function(){var t,e,n,u;t=Cu,"from"===r.substr(Cu,4).toLowerCase()?(e=r.substr(Cu,4),Cu+=4):(e=s,0===hu&&Su(Jt));e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?t=e=[e,n]:(Cu=t,t=s)):(Cu=t,t=s);return t}()!==s&&Na()!==s&&(e=os())!==s?(t=e):(Cu=t,t=s),t}function es(){var r,t,e;return r=Cu,(t=ls())!==s&&Na()!==s&&bo()!==s&&Na()!==s&&(e=ls())!==s?(r=t=[t,e]):(Cu=r,r=s),r}function ns(){var t,e;return t=Cu,xo()!==s&&Na()!==s?("btree"===r.substr(Cu,5).toLowerCase()?(e=r.substr(Cu,5),Cu+=5):(e=s,0===hu&&Su(dr)),e===s&&("hash"===r.substr(Cu,4).toLowerCase()?(e=r.substr(Cu,4),Cu+=4):(e=s,0===hu&&Su(Lr))),e!==s?(t={keyword:"using",type:e.toLowerCase()}):(Cu=t,t=s)):(Cu=t,t=s),t}function us(){var r,t,e,n,u,o;if(r=Cu,(t=ss())!==s){for(e=[],n=Cu,(u=Na())!==s&&(o=ss())!==s?n=u=[u,o]:(Cu=n,n=s);n!==s;)e.push(n),n=Cu,(u=Na())!==s&&(o=ss())!==s?n=u=[u,o]:(Cu=n,n=s);e!==s?(r=t=function(r,t){const e=[r];for(let r=0;r<t.length;r++)e.push(t[r][1]);return e}(t,e)):(Cu=r,r=s);}else Cu=r,r=s;return r}function ss(){var t,e,n,u,o,a;return t=Cu,(e=function(){var t,e,n,u;t=Cu,"key_block_size"===r.substr(Cu,14).toLowerCase()?(e=r.substr(Cu,14),Cu+=14):(e=s,0===hu&&Su(J));e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?(t=e="KEY_BLOCK_SIZE"):(Cu=t,t=s)):(Cu=t,t=s);return t}())!==s&&Na()!==s?((n=va())===s&&(n=null),n!==s&&Na()!==s&&(u=uo())!==s?(o=n,a=u,t=e={type:e.toLowerCase(),symbol:o,expr:a}):(Cu=t,t=s)):(Cu=t,t=s),t===s&&(t=ns())===s&&(t=Cu,"with"===r.substr(Cu,4).toLowerCase()?(e=r.substr(Cu,4),Cu+=4):(e=s,0===hu&&Su(Cr)),e!==s&&Na()!==s?("parser"===r.substr(Cu,6).toLowerCase()?(n=r.substr(Cu,6),Cu+=6):(n=s,0===hu&&Su(pr)),n!==s&&Na()!==s&&(u=Xs())!==s?(t=e={type:"with parser",expr:u}):(Cu=t,t=s)):(Cu=t,t=s),t===s&&(t=Cu,"visible"===r.substr(Cu,7).toLowerCase()?(e=r.substr(Cu,7),Cu+=7):(e=s,0===hu&&Su(wr)),e===s&&("invisible"===r.substr(Cu,9).toLowerCase()?(e=r.substr(Cu,9),Cu+=9):(e=s,0===hu&&Su(Er))),e!==s&&(e=function(r){return {type:r.toLowerCase(),expr:r.toLowerCase()}}(e)),(t=e)===s&&(t=Oa()))),t}function os(){var r,t,e,n;if(r=Cu,(t=is())!==s){for(e=[],n=as();n!==s;)e.push(n),n=as();e!==s?(r=t=hr(t,e)):(Cu=r,r=s);}else Cu=r,r=s;return r}function as(){var r,t,e;return r=Cu,Na()!==s&&(t=Aa())!==s&&Na()!==s&&(e=is())!==s?(r=e):(Cu=r,r=s),r===s&&(r=Cu,Na()!==s&&(t=function(){var r,t,e,n,u,o,a,i,c,l,f;if(r=Cu,(t=cs())!==s)if(Na()!==s)if((e=is())!==s)if(Na()!==s)if((n=xo())!==s)if(Na()!==s)if(Ta()!==s)if(Na()!==s)if((u=Xs())!==s){for(o=[],a=Cu,(i=Na())!==s&&(c=Aa())!==s&&(l=Na())!==s&&(f=Xs())!==s?a=i=[i,c,l,f]:(Cu=a,a=s);a!==s;)o.push(a),a=Cu,(i=Na())!==s&&(c=Aa())!==s&&(l=Na())!==s&&(f=Xs())!==s?a=i=[i,c,l,f]:(Cu=a,a=s);o!==s&&(a=Na())!==s&&(i=ma())!==s?(b=t,d=u,L=o,(v=e).join=b,v.using=za(d,L),r=t=v):(Cu=r,r=s);}else Cu=r,r=s;else Cu=r,r=s;else Cu=r,r=s;else Cu=r,r=s;else Cu=r,r=s;else Cu=r,r=s;else Cu=r,r=s;else Cu=r,r=s;else Cu=r,r=s;var b,v,d,L;r===s&&(r=Cu,(t=cs())!==s&&Na()!==s&&(e=is())!==s&&Na()!==s?((n=fs())===s&&(n=null),n!==s?(t=function(r,t,e){return t.join=r,t.on=e,t}(t,e,n),r=t):(Cu=r,r=s)):(Cu=r,r=s),r===s&&(r=Cu,(t=cs())!==s&&Na()!==s&&(e=Ta())!==s&&Na()!==s&&(n=Ou())!==s&&Na()!==s&&ma()!==s&&Na()!==s?((u=rs())===s&&(u=null),u!==s&&(o=Na())!==s?((a=fs())===s&&(a=null),a!==s?(t=function(r,t,e,n){return t.parentheses=!0,{expr:t,as:e,join:r,on:n}}(t,n,u,a),r=t):(Cu=r,r=s)):(Cu=r,r=s)):(Cu=r,r=s)));return r}())!==s?(r=t):(Cu=r,r=s)),r}function is(){var t,e,n,u,o,a;return t=Cu,(e=function(){var t;"dual"===r.substr(Cu,4).toLowerCase()?(t=r.substr(Cu,4),Cu+=4):(t=s,0===hu&&Su(Pn));return t}())!==s&&(e={type:"dual"}),(t=e)===s&&(t=Cu,(e=ls())!==s&&Na()!==s?((n=rs())===s&&(n=null),n!==s?(a=n,t=e="var"===(o=e).type?(o.as=a,o):{db:o.db,table:o.table,as:a}):(Cu=t,t=s)):(Cu=t,t=s),t===s&&(t=Cu,(e=Ta())!==s&&Na()!==s&&(n=Ou())!==s&&Na()!==s&&ma()!==s&&Na()!==s?((u=rs())===s&&(u=null),u!==s?(t=e=function(r,t){return r.parentheses=!0,{expr:r,as:t}}(n,u)):(Cu=t,t=s)):(Cu=t,t=s))),t}function cs(){var t,e,n,u;return t=Cu,(e=function(){var t,e,n,u;t=Cu,"left"===r.substr(Cu,4).toLowerCase()?(e=r.substr(Cu,4),Cu+=4):(e=s,0===hu&&Su(se));e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?t=e=[e,n]:(Cu=t,t=s)):(Cu=t,t=s);return t}())!==s&&(n=Na())!==s?((u=_o())===s&&(u=null),u!==s&&Na()!==s&&Ro()!==s?(t=e="LEFT JOIN"):(Cu=t,t=s)):(Cu=t,t=s),t===s&&(t=Cu,(e=function(){var t,e,n,u;t=Cu,"right"===r.substr(Cu,5).toLowerCase()?(e=r.substr(Cu,5),Cu+=5):(e=s,0===hu&&Su(oe));e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?t=e=[e,n]:(Cu=t,t=s)):(Cu=t,t=s);return t}())!==s&&(n=Na())!==s?((u=_o())===s&&(u=null),u!==s&&Na()!==s&&Ro()!==s?(t=e="RIGHT JOIN"):(Cu=t,t=s)):(Cu=t,t=s),t===s&&(t=Cu,(e=function(){var t,e,n,u;t=Cu,"full"===r.substr(Cu,4).toLowerCase()?(e=r.substr(Cu,4),Cu+=4):(e=s,0===hu&&Su(ae));e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?t=e=[e,n]:(Cu=t,t=s)):(Cu=t,t=s);return t}())!==s&&(n=Na())!==s?((u=_o())===s&&(u=null),u!==s&&Na()!==s&&Ro()!==s?(t=e="FULL JOIN"):(Cu=t,t=s)):(Cu=t,t=s),t===s&&(t=Cu,e=Cu,(n=function(){var t,e,n,u;t=Cu,"inner"===r.substr(Cu,5).toLowerCase()?(e=r.substr(Cu,5),Cu+=5):(e=s,0===hu&&Su(ie));e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?t=e=[e,n]:(Cu=t,t=s)):(Cu=t,t=s);return t}())!==s&&(u=Na())!==s?e=n=[n,u]:(Cu=e,e=s),e===s&&(e=null),e!==s&&(n=Ro())!==s?(t=e="INNER JOIN"):(Cu=t,t=s)))),t}function ls(){var r,t,e,n,u,o,a,i;return r=Cu,(t=Hs())!==s?(e=Cu,(n=Na())!==s&&(u=ha())!==s&&(o=Na())!==s&&(a=Hs())!==s?e=n=[n,u,o,a]:(Cu=e,e=s),e===s&&(e=null),e!==s?(r=t=function(r,t){const e={db:null,table:r};return null!==t&&(e.db=r,e.table=t[3]),e}(t,e)):(Cu=r,r=s)):(Cu=r,r=s),r===s&&(r=Cu,(t=Ya())!==s&&((i=t).db=null,i.table=i.name,t=i),r=t),r}function fs(){var r,t;return r=Cu,No()!==s&&Na()!==s&&(t=Rs())!==s?(r=t):(Cu=r,r=s),r}function bs(){var t,e;return t=Cu,function(){var t,e,n,u;t=Cu,"where"===r.substr(Cu,5).toLowerCase()?(e=r.substr(Cu,5),Cu+=5):(e=s,0===hu&&Su(Le));e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?t=e=[e,n]:(Cu=t,t=s)):(Cu=t,t=s);return t}()!==s&&Na()!==s&&(e=_s())!==s?(t=e):(Cu=t,t=s),t}function vs(){var t,e;return t=Cu,function(){var t,e,n,u;t=Cu,"order"===r.substr(Cu,5).toLowerCase()?(e=r.substr(Cu,5),Cu+=5):(e=s,0===hu&&Su(we));e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?t=e=[e,n]:(Cu=t,t=s)):(Cu=t,t=s);return t}()!==s&&Na()!==s&&Mo()!==s&&Na()!==s&&(e=function(){var r,t,e,n,u,o,a,i;if(r=Cu,(t=ds())!==s){for(e=[],n=Cu,(u=Na())!==s&&(o=Aa())!==s&&(a=Na())!==s&&(i=ds())!==s?n=u=[u,o,a,i]:(Cu=n,n=s);n!==s;)e.push(n),n=Cu,(u=Na())!==s&&(o=Aa())!==s&&(a=Na())!==s&&(i=ds())!==s?n=u=[u,o,a,i]:(Cu=n,n=s);e!==s?(t=c(t,e),r=t):(Cu=r,r=s);}else Cu=r,r=s;return r}())!==s?(t=e):(Cu=t,t=s),t}function ds(){var t,e,n;return t=Cu,(e=Rs())!==s&&Na()!==s?((n=function(){var t,e,n,u;t=Cu,"desc"===r.substr(Cu,4).toLowerCase()?(e=r.substr(Cu,4),Cu+=4):(e=s,0===hu&&Su(Te));e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?(t=e="DESC"):(Cu=t,t=s)):(Cu=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=Cu,"asc"===r.substr(Cu,3).toLowerCase()?(e=r.substr(Cu,3),Cu+=3):(e=s,0===hu&&Su(ye));e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?(t=e="ASC"):(Cu=t,t=s)):(Cu=t,t=s);return t}()),n===s&&(n=null),n!==s?(t=e=function(r,t){const e={expr:r,type:"ASC"};return "DESC"===t&&(e.type="DESC"),e}(e,n)):(Cu=t,t=s)):(Cu=t,t=s),t}function Ls(){var r;return (r=uo())===s&&(r=qs()),r}function Cs(){var t,e,n,u,o,a,i,c;return t=Cu,Do()!==s&&Na()!==s?("first"===r.substr(Cu,5).toLowerCase()?(e=r.substr(Cu,5),Cu+=5):(e=s,0===hu&&Su(Ar)),e!==s&&Na()!==s&&(n=Ls())!==s&&Na()!==s?("rows"===r.substr(Cu,4).toLowerCase()?(u=r.substr(Cu,4),Cu+=4):(u=s,0===hu&&Su(yr)),u!==s&&Na()!==s?("only"===r.substr(Cu,4).toLowerCase()?(o=r.substr(Cu,4),Cu+=4):(o=s,0===hu&&Su(Tr)),o!==s?(t={fetch:{prefix:"fetch first",value:n,suffix:"rows only"}}):(Cu=t,t=s)):(Cu=t,t=s)):(Cu=t,t=s)):(Cu=t,t=s),t===s&&(t=Cu,function(){var t,e,n,u;t=Cu,"offset"===r.substr(Cu,6).toLowerCase()?(e=r.substr(Cu,6),Cu+=6):(e=s,0===hu&&Su(Ae));e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?(t=e="OFFSET"):(Cu=t,t=s)):(Cu=t,t=s);return t}()!==s&&Na()!==s&&(e=Ls())!==s&&Na()!==s?("rows"===r.substr(Cu,4).toLowerCase()?(n=r.substr(Cu,4),Cu+=4):(n=s,0===hu&&Su(yr)),n!==s&&Na()!==s&&(u=Do())!==s&&Na()!==s?("next"===r.substr(Cu,4).toLowerCase()?(o=r.substr(Cu,4),Cu+=4):(o=s,0===hu&&Su(mr)),o!==s&&Na()!==s&&(a=Ls())!==s&&Na()!==s?("rows"===r.substr(Cu,4).toLowerCase()?(i=r.substr(Cu,4),Cu+=4):(i=s,0===hu&&Su(yr)),i!==s&&Na()!==s?("only"===r.substr(Cu,4).toLowerCase()?(c=r.substr(Cu,4),Cu+=4):(c=s,0===hu&&Su(Tr)),c!==s?(t=function(r,t){return {offset:{prefix:"offset",value:r,suffix:"rows"},fetch:{prefix:"fetch next",value:t,suffix:"rows only"}}}(e,a)):(Cu=t,t=s)):(Cu=t,t=s)):(Cu=t,t=s)):(Cu=t,t=s)):(Cu=t,t=s)),t}function ps(){var r,t,e,n,u,o,a,i;if(r=Cu,(t=ws())!==s){for(e=[],n=Cu,(u=Na())!==s&&(o=Aa())!==s&&(a=Na())!==s&&(i=ws())!==s?n=u=[u,o,a,i]:(Cu=n,n=s);n!==s;)e.push(n),n=Cu,(u=Na())!==s&&(o=Aa())!==s&&(a=Na())!==s&&(i=ws())!==s?n=u=[u,o,a,i]:(Cu=n,n=s);e!==s?(r=t=c(t,e)):(Cu=r,r=s);}else Cu=r,r=s;return r}function ws(){var t,e,n,u,o,a,i,c,l;return t=Cu,e=Cu,(n=Hs())!==s&&(u=Na())!==s&&(o=ha())!==s?e=n=[n,u,o]:(Cu=e,e=s),e===s&&(e=null),e!==s&&(n=Na())!==s&&(u=Ys())!==s&&(o=Na())!==s?(61===r.charCodeAt(Cu)?(a="=",Cu++):(a=s,0===hu&&Su(Sr)),a!==s&&Na()!==s&&(i=Ds())!==s?(t=e={column:u,value:i,table:(l=e)&&l[0]}):(Cu=t,t=s)):(Cu=t,t=s),t===s&&(t=Cu,e=Cu,(n=Hs())!==s&&(u=Na())!==s&&(o=ha())!==s?e=n=[n,u,o]:(Cu=e,e=s),e===s&&(e=null),e!==s&&(n=Na())!==s&&(u=Ys())!==s&&(o=Na())!==s?(61===r.charCodeAt(Cu)?(a="=",Cu++):(a=s,0===hu&&Su(Sr)),a!==s&&Na()!==s&&(i=go())!==s&&Na()!==s&&Ta()!==s&&Na()!==s&&(c=Gs())!==s&&Na()!==s&&ma()!==s?(t=e=function(r,t,e){return {column:t,value:e,table:r&&r[0],keyword:"values"}}(e,u,c)):(Cu=t,t=s)):(Cu=t,t=s)),t}function Es(){var r;return (r=function(){var r,t;r=Cu,go()!==s&&Na()!==s&&(t=function(){var r,t,e,n,u,o,a,i;if(r=Cu,(t=Ts())!==s){for(e=[],n=Cu,(u=Na())!==s&&(o=Aa())!==s&&(a=Na())!==s&&(i=Ts())!==s?n=u=[u,o,a,i]:(Cu=n,n=s);n!==s;)e.push(n),n=Cu,(u=Na())!==s&&(o=Aa())!==s&&(a=Na())!==s&&(i=Ts())!==s?n=u=[u,o,a,i]:(Cu=n,n=s);e!==s?(t=c(t,e),r=t):(Cu=r,r=s);}else Cu=r,r=s;return r}())!==s?(r=t):(Cu=r,r=s);return r}())===s&&(r=Zu()),r}function hs(){var r,t,e,n,u,o,a,i,c;if(r=Cu,Ao()!==s)if(Na()!==s)if((t=Ta())!==s)if(Na()!==s)if((e=Xs())!==s){for(n=[],u=Cu,(o=Na())!==s&&(a=Aa())!==s&&(i=Na())!==s&&(c=Xs())!==s?u=o=[o,a,i,c]:(Cu=u,u=s);u!==s;)n.push(u),u=Cu,(o=Na())!==s&&(a=Aa())!==s&&(i=Na())!==s&&(c=Xs())!==s?u=o=[o,a,i,c]:(Cu=u,u=s);n!==s&&(u=Na())!==s&&(o=ma())!==s?(r=za(e,n)):(Cu=r,r=s);}else Cu=r,r=s;else Cu=r,r=s;else Cu=r,r=s;else Cu=r,r=s;else Cu=r,r=s;return r===s&&(r=Cu,Ao()!==s&&Na()!==s&&(t=Ts())!==s?(r=t):(Cu=r,r=s)),r}function As(){var t,e,n;return t=Cu,No()!==s&&Na()!==s?("duplicate"===r.substr(Cu,9).toLowerCase()?(e=r.substr(Cu,9),Cu+=9):(e=s,0===hu&&Su(Ir)),e!==s&&Na()!==s&&pa()!==s&&Na()!==s&&Lo()!==s&&Na()!==s&&(n=ps())!==s?(t={keyword:"on duplicate key update",set:n}):(Cu=t,t=s)):(Cu=t,t=s),t}function ys(){var t,e;return t=Cu,(e=function(){var t,e,n,u;t=Cu,"insert"===r.substr(Cu,6).toLowerCase()?(e=r.substr(Cu,6),Cu+=6):(e=s,0===hu&&Su(Xt));e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?t=e=[e,n]:(Cu=t,t=s)):(Cu=t,t=s);return t}())!==s&&(e="insert"),(t=e)===s&&(t=Cu,(e=Eo())!==s&&(e="replace"),t=e),t}function Ts(){var r,t;return r=Cu,Ta()!==s&&Na()!==s&&(t=ms())!==s&&Na()!==s&&ma()!==s?(r=t):(Cu=r,r=s),r}function ms(){var r,t,e,n,u,o,a,i;if(r=Cu,(t=Rs())!==s){for(e=[],n=Cu,(u=Na())!==s&&(o=Aa())!==s&&(a=Na())!==s&&(i=Rs())!==s?n=u=[u,o,a,i]:(Cu=n,n=s);n!==s;)e.push(n),n=Cu,(u=Na())!==s&&(o=Aa())!==s&&(a=Na())!==s&&(i=Rs())!==s?n=u=[u,o,a,i]:(Cu=n,n=s);e!==s?(r=t=function(r,t){const e={type:"expr_list"};return e.value=za(r,t),e}(t,e)):(Cu=r,r=s);}else Cu=r,r=s;return r}function Ss(){var t,e,n;return t=Cu,function(){var t,e,n,u;t=Cu,"interval"===r.substr(Cu,8).toLowerCase()?(e=r.substr(Cu,8),Cu+=8):(e=s,0===hu&&Su(wn));e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?(t=e="INTERVAL"):(Cu=t,t=s)):(Cu=t,t=s);return t}()!==s&&Na()!==s&&(e=Rs())!==s&&Na()!==s&&(n=function(){var t;(t=function(){var t,e,n,u;t=Cu,"year"===r.substr(Cu,4).toLowerCase()?(e=r.substr(Cu,4),Cu+=4):(e=s,0===hu&&Su(En));e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?(t=e="YEAR"):(Cu=t,t=s)):(Cu=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Cu,"month"===r.substr(Cu,5).toLowerCase()?(e=r.substr(Cu,5),Cu+=5):(e=s,0===hu&&Su(hn));e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?(t=e="MONTH"):(Cu=t,t=s)):(Cu=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Cu,"day"===r.substr(Cu,3).toLowerCase()?(e=r.substr(Cu,3),Cu+=3):(e=s,0===hu&&Su(An));e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?(t=e="DAY"):(Cu=t,t=s)):(Cu=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Cu,"hour"===r.substr(Cu,4).toLowerCase()?(e=r.substr(Cu,4),Cu+=4):(e=s,0===hu&&Su(yn));e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?(t=e="HOUR"):(Cu=t,t=s)):(Cu=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Cu,"minute"===r.substr(Cu,6).toLowerCase()?(e=r.substr(Cu,6),Cu+=6):(e=s,0===hu&&Su(Tn));e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?(t=e="MINUTE"):(Cu=t,t=s)):(Cu=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Cu,"second"===r.substr(Cu,6).toLowerCase()?(e=r.substr(Cu,6),Cu+=6):(e=s,0===hu&&Su(mn));e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?(t=e="SECOND"):(Cu=t,t=s)):(Cu=t,t=s);return t}());return t}())!==s?(t={type:"interval",expr:e,unit:n.toLowerCase()}):(Cu=t,t=s),t}function Is(){var t,e,n;return t=Cu,function(){var t,e,n,u;t=Cu,"when"===r.substr(Cu,4).toLowerCase()?(e=r.substr(Cu,4),Cu+=4):(e=s,0===hu&&Su(Ge));e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?t=e=[e,n]:(Cu=t,t=s)):(Cu=t,t=s);return t}()!==s&&Na()!==s&&(e=_s())!==s&&Na()!==s&&function(){var t,e,n,u;t=Cu,"then"===r.substr(Cu,4).toLowerCase()?(e=r.substr(Cu,4),Cu+=4):(e=s,0===hu&&Su(He));e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?t=e=[e,n]:(Cu=t,t=s)):(Cu=t,t=s);return t}()!==s&&Na()!==s&&(n=Rs())!==s?(t={type:"when",cond:e,result:n}):(Cu=t,t=s),t}function Ns(){var t,e;return t=Cu,function(){var t,e,n,u;t=Cu,"else"===r.substr(Cu,4).toLowerCase()?(e=r.substr(Cu,4),Cu+=4):(e=s,0===hu&&Su(je));e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?t=e=[e,n]:(Cu=t,t=s)):(Cu=t,t=s);return t}()!==s&&Na()!==s&&(e=Rs())!==s?(t={type:"else",result:e}):(Cu=t,t=s),t}function Rs(){var r;return (r=function(){var r,t,e,n,u,o,a,i;if(r=Cu,(t=Ps())!==s){if(e=[],n=Cu,(u=Na())!==s&&(o=Ia())!==s&&(a=Na())!==s&&(i=Ps())!==s?n=u=[u,o,a,i]:(Cu=n,n=s),n!==s)for(;n!==s;)e.push(n),n=Cu,(u=Na())!==s&&(o=Ia())!==s&&(a=Na())!==s&&(i=Ps())!==s?n=u=[u,o,a,i]:(Cu=n,n=s);else e=s;e!==s?(t=Ja(t,e),r=t):(Cu=r,r=s);}else Cu=r,r=s;return r}())===s&&(r=function(){var r,t,e,n,u,o,a,i;if(r=Cu,(t=Os())!==s){for(e=[],n=Cu,(u=Ra())!==s&&(o=Xo())!==s&&(a=Na())!==s&&(i=Os())!==s?n=u=[u,o,a,i]:(Cu=n,n=s);n!==s;)e.push(n),n=Cu,(u=Ra())!==s&&(o=Xo())!==s&&(a=Na())!==s&&(i=Os())!==s?n=u=[u,o,a,i]:(Cu=n,n=s);e!==s?(t=Nr(t,e),r=t):(Cu=r,r=s);}else Cu=r,r=s;return r}())===s&&(r=function(){var r,t,e,n,u,o;if(r=Cu,(t=ks())!==s){if(e=[],n=Cu,(u=Na())!==s&&(o=Ps())!==s?n=u=[u,o]:(Cu=n,n=s),n!==s)for(;n!==s;)e.push(n),n=Cu,(u=Na())!==s&&(o=Ps())!==s?n=u=[u,o]:(Cu=n,n=s);else e=s;e!==s?(t=Ka(t,e[0][1]),r=t):(Cu=r,r=s);}else Cu=r,r=s;return r}())===s&&(r=Wu()),r}function _s(){var r,t,e,n,u,o,a,i;if(r=Cu,(t=Rs())!==s){for(e=[],n=Cu,(u=Na())!==s?((o=Bo())===s&&(o=Xo())===s&&(o=Aa()),o!==s&&(a=Na())!==s&&(i=Rs())!==s?n=u=[u,o,a,i]:(Cu=n,n=s)):(Cu=n,n=s);n!==s;)e.push(n),n=Cu,(u=Na())!==s?((o=Bo())===s&&(o=Xo())===s&&(o=Aa()),o!==s&&(a=Na())!==s&&(i=Rs())!==s?n=u=[u,o,a,i]:(Cu=n,n=s)):(Cu=n,n=s);e!==s?(r=t=function(r,t){let e=r,n="";for(let u=0;u<t.length;u++)","===t[u][1]?(n=",",0===u&&(e=[r]),e.push(t[u][3])):e=qa(t[u][1],e,t[u][3]);if(","===n){const r={type:"expr_list"};return r.value=e,r}return e}(t,e)):(Cu=r,r=s);}else Cu=r,r=s;return r}function Os(){var r,t,e,n,u,o,a,i;if(r=Cu,(t=gs())!==s){for(e=[],n=Cu,(u=Ra())!==s&&(o=Bo())!==s&&(a=Na())!==s&&(i=gs())!==s?n=u=[u,o,a,i]:(Cu=n,n=s);n!==s;)e.push(n),n=Cu,(u=Ra())!==s&&(o=Bo())!==s&&(a=Na())!==s&&(i=gs())!==s?n=u=[u,o,a,i]:(Cu=n,n=s);e!==s?(r=t=Nr(t,e)):(Cu=r,r=s);}else Cu=r,r=s;return r}function gs(){var t,e,n,u,o;return (t=xs())===s&&(t=function(){var r,t,e;r=Cu,(t=function(){var r,t,e,n,u;r=Cu,t=Cu,(e=Yo())!==s&&(n=Na())!==s&&(u=jo())!==s?t=e=[e,n,u]:(Cu=t,t=s);t!==s&&(t=_r(t));(r=t)===s&&(r=jo());return r}())!==s&&Na()!==s&&Ta()!==s&&Na()!==s&&(e=Ou())!==s&&Na()!==s&&ma()!==s?(n=t,(u=e).parentheses=!0,t=Ka(n,u),r=t):(Cu=r,r=s);var n,u;return r}())===s&&(t=Cu,(e=Yo())===s&&(e=Cu,33===r.charCodeAt(Cu)?(n="!",Cu++):(n=s,0===hu&&Su(Rr)),n!==s?(u=Cu,hu++,61===r.charCodeAt(Cu)?(o="=",Cu++):(o=s,0===hu&&Su(Sr)),hu--,o===s?u=void 0:(Cu=u,u=s),u!==s?e=n=[n,u]:(Cu=e,e=s)):(Cu=e,e=s)),e!==s&&(n=Na())!==s&&(u=gs())!==s?(t=e=Ka("NOT",u)):(Cu=t,t=s)),t}function xs(){var r,t,e,n,u;return r=Cu,(t=Ds())!==s&&Na()!==s?((e=function(){var r;(r=function(){var t,e,n,u,o,a;t=[],e=Cu,(n=Na())!==s&&(u=Us())!==s&&(o=Na())!==s&&(a=Ds())!==s?e=n=[n,u,o,a]:(Cu=e,e=s);if(e!==s)for(;e!==s;)t.push(e),e=Cu,(n=Na())!==s&&(u=Us())!==s&&(o=Na())!==s&&(a=Ds())!==s?e=n=[n,u,o,a]:(Cu=e,e=s);else t=s;t!==s&&(t={type:"arithmetic",tail:t});return t}())===s&&(r=function(){var r,t,e,n;r=Cu,(t=Ms())!==s&&Na()!==s&&(e=Ta())!==s&&Na()!==s&&(n=ms())!==s&&Na()!==s&&ma()!==s?(r=t={op:t,right:n}):(Cu=r,r=s);r===s&&(r=Cu,(t=Ms())!==s&&Na()!==s?((e=Ya())===s&&(e=ro()),e!==s?(t=function(r,t){return {op:r,right:t}}(t,e),r=t):(Cu=r,r=s)):(Cu=r,r=s));return r}())===s&&(r=function(){var r,t,e,n;r=Cu,(t=function(){var r,t,e,n,u;r=Cu,t=Cu,(e=Yo())!==s&&(n=Na())!==s&&(u=Fo())!==s?t=e=[e,n,u]:(Cu=t,t=s);t!==s&&(t=_r(t));(r=t)===s&&(r=Fo());return r}())!==s&&Na()!==s&&(e=Ds())!==s&&Na()!==s&&Bo()!==s&&Na()!==s&&(n=Ds())!==s?(r=t={op:t,right:{type:"expr_list",value:[e,n]}}):(Cu=r,r=s);return r}())===s&&(r=function(){var r,t,e,n,u;r=Cu,(t=Go())!==s&&(e=Na())!==s&&(n=Ds())!==s?(r=t={op:"IS",right:n}):(Cu=r,r=s);r===s&&(r=Cu,t=Cu,(e=Go())!==s&&(n=Na())!==s&&(u=Yo())!==s?t=e=[e,n,u]:(Cu=t,t=s),t!==s&&(e=Na())!==s&&(n=Ds())!==s?(t=function(r){return {op:"IS NOT",right:r}}(n),r=t):(Cu=r,r=s));return r}())===s&&(r=function(){var r,t,e;r=Cu,(t=function(){var r,t,e,n,u;r=Cu,t=Cu,(e=Yo())!==s&&(n=Na())!==s&&(u=Ho())!==s?t=e=[e,n,u]:(Cu=t,t=s);t!==s&&(t=_r(t));(r=t)===s&&(r=Ho());return r}())!==s&&Na()!==s?((e=Js())===s&&(e=xs()),e!==s?(r=t={op:t,right:e}):(Cu=r,r=s)):(Cu=r,r=s);return r}());return r}())===s&&(e=null),e!==s?(n=t,r=t=null===(u=e)?n:"arithmetic"===u.type?Ja(n,u.tail):qa(u.op,n,u.right)):(Cu=r,r=s)):(Cu=r,r=s),r===s&&(r=ro())===s&&(r=Gs()),r}function Us(){var t;return ">="===r.substr(Cu,2)?(t=">=",Cu+=2):(t=s,0===hu&&Su(Or)),t===s&&(62===r.charCodeAt(Cu)?(t=">",Cu++):(t=s,0===hu&&Su(gr)),t===s&&("<="===r.substr(Cu,2)?(t="<=",Cu+=2):(t=s,0===hu&&Su(xr)),t===s&&("<>"===r.substr(Cu,2)?(t="<>",Cu+=2):(t=s,0===hu&&Su(Ur)),t===s&&(60===r.charCodeAt(Cu)?(t="<",Cu++):(t=s,0===hu&&Su(Mr)),t===s&&(61===r.charCodeAt(Cu)?(t="=",Cu++):(t=s,0===hu&&Su(Sr)),t===s&&("!="===r.substr(Cu,2)?(t="!=",Cu+=2):(t=s,0===hu&&Su(Dr)))))))),t}function Ms(){var r,t,e,n,u;return r=Cu,t=Cu,(e=Yo())!==s&&(n=Na())!==s&&(u=Po())!==s?t=e=[e,n,u]:(Cu=t,t=s),t!==s&&(t=_r(t)),(r=t)===s&&(r=Po()),r}function Ds(){var r,t,e,n,u,o,a,i;if(r=Cu,(t=$s())!==s){for(e=[],n=Cu,(u=Na())!==s&&(o=ks())!==s&&(a=Na())!==s&&(i=$s())!==s?n=u=[u,o,a,i]:(Cu=n,n=s);n!==s;)e.push(n),n=Cu,(u=Na())!==s&&(o=ks())!==s&&(a=Na())!==s&&(i=$s())!==s?n=u=[u,o,a,i]:(Cu=n,n=s);e!==s?(r=t=Nr(t,e)):(Cu=r,r=s);}else Cu=r,r=s;return r}function ks(){var t;return 43===r.charCodeAt(Cu)?(t="+",Cu++):(t=s,0===hu&&Su(kr)),t===s&&(45===r.charCodeAt(Cu)?(t="-",Cu++):(t=s,0===hu&&Su($r))),t}function $s(){var r,t,e,n,u,o,a,i;if(r=Cu,(t=Ps())!==s){for(e=[],n=Cu,(u=Na())!==s&&(o=Fs())!==s&&(a=Na())!==s&&(i=Ps())!==s?n=u=[u,o,a,i]:(Cu=n,n=s);n!==s;)e.push(n),n=Cu,(u=Na())!==s&&(o=Fs())!==s&&(a=Na())!==s&&(i=Ps())!==s?n=u=[u,o,a,i]:(Cu=n,n=s);e!==s?(r=t=Ja(t,e)):(Cu=r,r=s);}else Cu=r,r=s;return r}function Fs(){var t;return 42===r.charCodeAt(Cu)?(t="*",Cu++):(t=s,0===hu&&Su(Fr)),t===s&&(47===r.charCodeAt(Cu)?(t="/",Cu++):(t=s,0===hu&&Su(Pr)),t===s&&(37===r.charCodeAt(Cu)?(t="%",Cu++):(t=s,0===hu&&Su(Gr)))),t}function Ps(){var t,e,n;return (t=function(){var t,e,n,u,o,a,i;t=Cu,(e=Ko())!==s&&Na()!==s&&Ta()!==s&&Na()!==s&&(n=Rs())!==s&&Na()!==s&&mo()!==s&&Na()!==s&&(u=Xa())!==s&&Na()!==s&&(o=ma())!==s?(t=e={type:"cast",expr:n,symbol:"as",target:u}):(Cu=t,t=s);t===s&&(t=Cu,(e=Ko())!==s&&Na()!==s&&Ta()!==s&&Na()!==s&&(n=Rs())!==s&&Na()!==s&&mo()!==s&&Na()!==s&&(u=Jo())!==s&&Na()!==s&&(o=Ta())!==s&&Na()!==s&&(a=so())!==s&&Na()!==s&&ma()!==s&&Na()!==s&&(i=ma())!==s?(e=function(r,t){return {type:"cast",expr:r,symbol:"as",target:{dataType:"DECIMAL("+t+")"}}}(n,a),t=e):(Cu=t,t=s),t===s&&(t=Cu,(e=Ko())!==s&&Na()!==s&&Ta()!==s&&Na()!==s&&(n=Rs())!==s&&Na()!==s&&mo()!==s&&Na()!==s&&(u=Jo())!==s&&Na()!==s&&(o=Ta())!==s&&Na()!==s&&(a=so())!==s&&Na()!==s&&Aa()!==s&&Na()!==s&&(i=so())!==s&&Na()!==s&&ma()!==s&&Na()!==s&&ma()!==s?(e=function(r,t,e){return {type:"cast",expr:r,symbol:"as",target:{dataType:"DECIMAL("+t+", "+e+")"}}}(n,a,i),t=e):(Cu=t,t=s),t===s&&(t=Cu,(e=Ko())!==s&&Na()!==s&&Ta()!==s&&Na()!==s&&(n=Rs())!==s&&Na()!==s&&mo()!==s&&Na()!==s&&(u=function(){var t;(t=function(){var t,e,n,u;t=Cu,"signed"===r.substr(Cu,6).toLowerCase()?(e=r.substr(Cu,6),Cu+=6):(e=s,0===hu&&Su(qe));e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?(t=e="SIGNED"):(Cu=t,t=s)):(Cu=t,t=s);return t}())===s&&(t=Qo());return t}())!==s&&Na()!==s?((o=ta())===s&&(o=null),o!==s&&Na()!==s&&(a=ma())!==s?(e=function(r,t,e){return {type:"cast",expr:r,symbol:"as",target:{dataType:t+(e?" "+e:"")}}}(n,u,o),t=e):(Cu=t,t=s)):(Cu=t,t=s))));return t}())===s&&(t=Js())===s&&(t=function(){var t;(t=function(){var t,e,n,u;t=Cu,(e=function(){var t,e,n,u;t=Cu,"count"===r.substr(Cu,5).toLowerCase()?(e=r.substr(Cu,5),Cu+=5):(e=s,0===hu&&Su(Ue));e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?(t=e="COUNT"):(Cu=t,t=s)):(Cu=t,t=s);return t}())!==s&&Na()!==s&&Ta()!==s&&Na()!==s&&(n=function(){var t,e,n,u;t=Cu,(e=function(){var e;42===r.charCodeAt(Cu)?(e="*",Cu++):(e=s,0===hu&&Su(Fr));e!==s&&(e={type:"star",value:"*"});return e}())!==s&&(e={expr:e});(t=e)===s&&(t=Cu,(e=$o())===s&&(e=null),e!==s&&Na()!==s&&(n=Gs())!==s?(t=e={distinct:e,expr:n}):(Cu=t,t=s),t===s&&(t=Cu,(e=$o())===s&&(e=null),e!==s&&Na()!==s&&(n=Ta())!==s&&Na()!==s&&(u=Rs())!==s&&Na()!==s&&ma()!==s?(e=function(r,t){return t.parentheses=!0,{distinct:r,expr:t}}(e,u),t=e):(Cu=t,t=s)));return t}())!==s&&Na()!==s&&ma()!==s&&Na()!==s?((u=zs())===s&&(u=null),u!==s?(e=function(r,t,e){return {type:"aggr_func",name:r,args:t,over:e}}(e,n,u),t=e):(Cu=t,t=s)):(Cu=t,t=s);return t}())===s&&(t=function(){var t,e,n;t=Cu,(e=function(){var t;(t=function(){var t,e,n,u;t=Cu,"sum"===r.substr(Cu,3).toLowerCase()?(e=r.substr(Cu,3),Cu+=3):(e=s,0===hu&&Su(ke));e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?(t=e="SUM"):(Cu=t,t=s)):(Cu=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Cu,"max"===r.substr(Cu,3).toLowerCase()?(e=r.substr(Cu,3),Cu+=3):(e=s,0===hu&&Su(Me));e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?(t=e="MAX"):(Cu=t,t=s)):(Cu=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Cu,"min"===r.substr(Cu,3).toLowerCase()?(e=r.substr(Cu,3),Cu+=3):(e=s,0===hu&&Su(De));e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?(t=e="MIN"):(Cu=t,t=s)):(Cu=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Cu,"avg"===r.substr(Cu,3).toLowerCase()?(e=r.substr(Cu,3),Cu+=3):(e=s,0===hu&&Su($e));e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?(t=e="AVG"):(Cu=t,t=s)):(Cu=t,t=s);return t}());return t}())!==s&&Na()!==s&&Ta()!==s&&Na()!==s&&(n=Ds())!==s&&Na()!==s&&ma()!==s?(t=e={type:"aggr_func",name:e,args:{expr:n}}):(Cu=t,t=s);return t}());return t}())===s&&(t=function(){var t,e,n,u,o;t=Cu,(e=Ga())!==s&&Na()!==s&&(n=Ta())!==s&&Na()!==s?((u=ms())===s&&(u=null),u!==s&&Na()!==s&&ma()!==s&&Na()!==s?((o=zs())===s&&(o=null),o!==s?(e=function(r,t,e){return {type:"function",name:r,args:t||{type:"expr_list",value:[]},over:e}}(e,u,o),t=e):(Cu=t,t=s)):(Cu=t,t=s)):(Cu=t,t=s);t===s&&(t=Cu,(e=function(){var t;(t=function(){var t,e,n,u;t=Cu,"current_date"===r.substr(Cu,12).toLowerCase()?(e=r.substr(Cu,12),Cu+=12):(e=s,0===hu&&Su(pn));e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?(t=e="CURRENT_DATE"):(Cu=t,t=s)):(Cu=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Cu,"current_time"===r.substr(Cu,12).toLowerCase()?(e=r.substr(Cu,12),Cu+=12):(e=s,0===hu&&Su(Sn));e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?(t=e="CURRENT_TIME"):(Cu=t,t=s)):(Cu=t,t=s);return t}())===s&&(t=fa())===s&&(t=function(){var t,e,n,u;t=Cu,"current_user"===r.substr(Cu,12).toLowerCase()?(e=r.substr(Cu,12),Cu+=12):(e=s,0===hu&&Su(Nn));e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?(t=e="CURRENT_USER"):(Cu=t,t=s)):(Cu=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Cu,"user"===r.substr(Cu,4).toLowerCase()?(e=r.substr(Cu,4),Cu+=4):(e=s,0===hu&&Su(Cn));e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?(t=e="USER"):(Cu=t,t=s)):(Cu=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Cu,"session_user"===r.substr(Cu,12).toLowerCase()?(e=r.substr(Cu,12),Cu+=12):(e=s,0===hu&&Su(Rn));e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?(t=e="SESSION_USER"):(Cu=t,t=s)):(Cu=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Cu,"system_user"===r.substr(Cu,11).toLowerCase()?(e=r.substr(Cu,11),Cu+=11):(e=s,0===hu&&Su(_n));e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?(t=e="SYSTEM_USER"):(Cu=t,t=s)):(Cu=t,t=s);return t}());return t}())!==s&&Na()!==s&&(n=Ta())!==s&&Na()!==s?((u=ms())===s&&(u=null),u!==s&&Na()!==s&&ma()!==s&&Na()!==s?((o=zs())===s&&(o=null),o!==s?(e=function(r,t,e){return {type:"function",name:r,args:t||{type:"expr_list",value:[]},over:e}}(e,u,o),t=e):(Cu=t,t=s)):(Cu=t,t=s)):(Cu=t,t=s),t===s&&(t=Cu,(e=fa())!==s&&Na()!==s?((n=Zs())===s&&(n=null),n!==s?(e=function(r,t){return {type:"function",name:r,over:t}}(e,n),t=e):(Cu=t,t=s)):(Cu=t,t=s)));return t}())===s&&(t=function(){var r,t,e,n,u,o,a,i,c,l;if(r=Cu,Wo()!==s)if(Na()!==s){if(t=[],(e=Is())!==s)for(;e!==s;)t.push(e),e=Is();else t=s;t!==s&&(e=Na())!==s?((n=Ns())===s&&(n=null),n!==s&&(u=Na())!==s&&(o=Vo())!==s&&Na()!==s?((a=Wo())===s&&(a=null),a!==s?(c=t,(l=n)&&c.push(l),r={type:"case",expr:null,args:c}):(Cu=r,r=s)):(Cu=r,r=s)):(Cu=r,r=s);}else Cu=r,r=s;else Cu=r,r=s;if(r===s)if(r=Cu,Wo()!==s)if(Na()!==s)if((t=Rs())!==s)if((e=Na())!==s){if(n=[],(u=Is())!==s)for(;u!==s;)n.push(u),u=Is();else n=s;n!==s&&(u=Na())!==s?((o=Ns())===s&&(o=null),o!==s&&Na()!==s&&(a=Vo())!==s&&Na()!==s?((i=Wo())===s&&(i=null),i!==s?(r=function(r,t,e){return e&&t.push(e),{type:"case",expr:r,args:t}}(t,n,o)):(Cu=r,r=s)):(Cu=r,r=s)):(Cu=r,r=s);}else Cu=r,r=s;else Cu=r,r=s;else Cu=r,r=s;else Cu=r,r=s;return r}())===s&&(t=Ss())===s&&(t=Gs())===s&&(t=qs())===s&&(t=Cu,Ta()!==s&&Na()!==s&&(e=_s())!==s&&Na()!==s&&ma()!==s?((n=e).parentheses=!0,t=n):(Cu=t,t=s),t===s&&(t=Ya())),t}function Gs(){var t,e,n,u,o,a,i,c,l,f;return t=Cu,e=Cu,(n=Hs())!==s&&(u=Na())!==s&&(o=ha())!==s&&(a=Na())!==s?e=n=[n,u,o,a]:(Cu=e,e=s),e===s&&(e=null),e!==s&&(n=Ys())!==s&&(u=Na())!==s?((o=function(){var t;"->>"===r.substr(Cu,3)?(t="->>",Cu+=3):(t=s,0===hu&&Su(su));return t}())===s&&(o=function(){var t;"->"===r.substr(Cu,2)?(t="->",Cu+=2):(t=s,0===hu&&Su(uu));return t}()),o!==s&&(a=Na())!==s?((i=ro())===s&&(i=uo()),i!==s&&Na()!==s?((c=Uu())===s&&(c=null),c!==s?(t=e=function(r,t,e,n,u){const s=r&&r[0]||null;return ni.add(`select::${s}::${t}`),{type:"column_ref",table:s,column:t,collate:u,arrow:e,property:n}}(e,n,o,i,c)):(Cu=t,t=s)):(Cu=t,t=s)):(Cu=t,t=s)):(Cu=t,t=s),t===s&&(t=Cu,(e=Hs())!==s&&(n=Na())!==s&&(u=ha())!==s&&(o=Na())!==s&&(a=function(){var r,t;r=Cu,(t=Bs())!==s&&(t=t);(r=t)===s&&(r=js());return r}())!==s?(l=e,f=a,ni.add(`select::${l}::${f}`),t=e={type:"column_ref",table:l,column:f}):(Cu=t,t=s),t===s&&(t=Cu,(e=Ys())!==s&&(e=function(r){return ni.add("select::null::"+r),{type:"column_ref",table:null,column:r}}(e)),t=e)),t}function Hs(){var r,t;return r=Cu,(t=Xs())!==s?((Hr(t)?s:void 0)!==s?(r=t=t):(Cu=r,r=s)):(Cu=r,r=s),r===s&&(r=Cu,(t=js())!==s&&(t=t),r=t),r}function js(){var t;return (t=function(){var t,e,n,u;t=Cu,34===r.charCodeAt(Cu)?(e='"',Cu++):(e=s,0===hu&&Su(jr));if(e!==s){if(n=[],Yr.test(r.charAt(Cu))?(u=r.charAt(Cu),Cu++):(u=s,0===hu&&Su(Br)),u!==s)for(;u!==s;)n.push(u),Yr.test(r.charAt(Cu))?(u=r.charAt(Cu),Cu++):(u=s,0===hu&&Su(Br));else n=s;n!==s?(34===r.charCodeAt(Cu)?(u='"',Cu++):(u=s,0===hu&&Su(jr)),u!==s?(e=Xr(n),t=e):(Cu=t,t=s)):(Cu=t,t=s);}else Cu=t,t=s;return t}())===s&&(t=function(){var t,e,n,u;t=Cu,39===r.charCodeAt(Cu)?(e="'",Cu++):(e=s,0===hu&&Su(ur));if(e!==s){if(n=[],Wr.test(r.charAt(Cu))?(u=r.charAt(Cu),Cu++):(u=s,0===hu&&Su(Vr)),u!==s)for(;u!==s;)n.push(u),Wr.test(r.charAt(Cu))?(u=r.charAt(Cu),Cu++):(u=s,0===hu&&Su(Vr));else n=s;n!==s?(39===r.charCodeAt(Cu)?(u="'",Cu++):(u=s,0===hu&&Su(ur)),u!==s?(e=Xr(n),t=e):(Cu=t,t=s)):(Cu=t,t=s);}else Cu=t,t=s;return t}())===s&&(t=function(){var t,e,n,u;t=Cu,96===r.charCodeAt(Cu)?(e="`",Cu++):(e=s,0===hu&&Su(Kr));if(e!==s){if(n=[],qr.test(r.charAt(Cu))?(u=r.charAt(Cu),Cu++):(u=s,0===hu&&Su(Zr)),u!==s)for(;u!==s;)n.push(u),qr.test(r.charAt(Cu))?(u=r.charAt(Cu),Cu++):(u=s,0===hu&&Su(Zr));else n=s;n!==s?(96===r.charCodeAt(Cu)?(u="`",Cu++):(u=s,0===hu&&Su(Kr)),u!==s?(e=Xr(n),t=e):(Cu=t,t=s)):(Cu=t,t=s);}else Cu=t,t=s;return t}()),t}function Ys(){var r,t;return r=Cu,(t=Bs())!==s?((Hr(t)?s:void 0)!==s?(r=t=t):(Cu=r,r=s)):(Cu=r,r=s),r===s&&(r=js()),r}function Bs(){var r,t,e,n;if(r=Cu,(t=Ws())!==s){for(e=[],n=Ks();n!==s;)e.push(n),n=Ks();e!==s?(r=t=zr(t,e)):(Cu=r,r=s);}else Cu=r,r=s;return r}function Xs(){var r,t,e,n;if(r=Cu,(t=Ws())!==s){for(e=[],n=Vs();n!==s;)e.push(n),n=Vs();e!==s?(r=t=zr(t,e)):(Cu=r,r=s);}else Cu=r,r=s;return r}function Ws(){var t;return Jr.test(r.charAt(Cu))?(t=r.charAt(Cu),Cu++):(t=s,0===hu&&Su(Qr)),t}function Vs(){var t;return rt.test(r.charAt(Cu))?(t=r.charAt(Cu),Cu++):(t=s,0===hu&&Su(tt)),t}function Ks(){var t;return et.test(r.charAt(Cu))?(t=r.charAt(Cu),Cu++):(t=s,0===hu&&Su(nt)),t}function qs(){var e,n,u;return e=Cu,58===r.charCodeAt(Cu)?(n=":",Cu++):(n=s,0===hu&&Su(ut)),n!==s&&(u=Xs())!==s?e=n=[n,u]:(Cu=e,e=s),e!==s&&(e={type:"param",value:e[1]}),e}function Zs(){var r,t,e;return r=Cu,No()!==s&&Na()!==s&&Lo()!==s&&Na()!==s&&(t=fa())!==s&&Na()!==s&&Ta()!==s&&Na()!==s?((e=ms())===s&&(e=null),e!==s&&Na()!==s&&ma()!==s?(r={type:"on update",keyword:t,parentheses:!0,expr:e}):(Cu=r,r=s)):(Cu=r,r=s),r===s&&(r=Cu,No()!==s&&Na()!==s&&Lo()!==s&&Na()!==s&&(t=fa())!==s?(r=function(r){return {type:"on update",keyword:r}}(t)):(Cu=r,r=s)),r}function zs(){var t,e,n;return t=Cu,function(){var t,e,n,u;t=Cu,"over"===r.substr(Cu,4).toLowerCase()?(e=r.substr(Cu,4),Cu+=4):(e=s,0===hu&&Su(fe));e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?t=e=[e,n]:(Cu=t,t=s)):(Cu=t,t=s);return t}()!==s&&Na()!==s&&Ta()!==s&&Na()!==s&&Ao()!==s&&Na()!==s&&Mo()!==s&&Na()!==s&&(e=Ju())!==s&&Na()!==s?((n=vs())===s&&(n=null),n!==s&&Na()!==s&&ma()!==s?(t=function(r,t){return {partitionby:r,orderby:t}}(e,n)):(Cu=t,t=s)):(Cu=t,t=s),t===s&&(t=Zs()),t}function Js(){var t;return (t=ro())===s&&(t=uo())===s&&(t=function(){var t,e;t=Cu,(e=function(){var t,e,n,u;t=Cu,"true"===r.substr(Cu,4).toLowerCase()?(e=r.substr(Cu,4),Cu+=4):(e=s,0===hu&&Su(Dt));e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?t=e=[e,n]:(Cu=t,t=s)):(Cu=t,t=s);return t}())!==s&&(e={type:"bool",value:!0});(t=e)===s&&(t=Cu,(e=function(){var t,e,n,u;t=Cu,"false"===r.substr(Cu,5).toLowerCase()?(e=r.substr(Cu,5),Cu+=5):(e=s,0===hu&&Su($t));e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?t=e=[e,n]:(Cu=t,t=s)):(Cu=t,t=s);return t}())!==s&&(e={type:"bool",value:!1}),t=e);return t}())===s&&(t=Qs())===s&&(t=function(){var t,e,n,u,o,a;t=Cu,(e=ca())===s&&(e=aa())===s&&(e=la())===s&&(e=ia());if(e!==s)if(Na()!==s){if(n=Cu,39===r.charCodeAt(Cu)?(u="'",Cu++):(u=s,0===hu&&Su(ur)),u!==s){for(o=[],a=eo();a!==s;)o.push(a),a=eo();o!==s?(39===r.charCodeAt(Cu)?(a="'",Cu++):(a=s,0===hu&&Su(ur)),a!==s?n=u=[u,o,a]:(Cu=n,n=s)):(Cu=n,n=s);}else Cu=n,n=s;n!==s?(e=ot(e,n),t=e):(Cu=t,t=s);}else Cu=t,t=s;else Cu=t,t=s;if(t===s)if(t=Cu,(e=ca())===s&&(e=aa())===s&&(e=la())===s&&(e=ia()),e!==s)if(Na()!==s){if(n=Cu,34===r.charCodeAt(Cu)?(u='"',Cu++):(u=s,0===hu&&Su(jr)),u!==s){for(o=[],a=to();a!==s;)o.push(a),a=to();o!==s?(34===r.charCodeAt(Cu)?(a='"',Cu++):(a=s,0===hu&&Su(jr)),a!==s?n=u=[u,o,a]:(Cu=n,n=s)):(Cu=n,n=s);}else Cu=n,n=s;n!==s?(e=ot(e,n),t=e):(Cu=t,t=s);}else Cu=t,t=s;else Cu=t,t=s;return t}()),t}function Qs(){var e;return (e=function(){var t,e,n,u;t=Cu,"null"===r.substr(Cu,4).toLowerCase()?(e=r.substr(Cu,4),Cu+=4):(e=s,0===hu&&Su(Ut));e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?t=e=[e,n]:(Cu=t,t=s)):(Cu=t,t=s);return t}())!==s&&(e={type:"null",value:null}),e}function ro(){var t,e,n,u,o;if(t=Cu,e=Cu,39===r.charCodeAt(Cu)?(n="'",Cu++):(n=s,0===hu&&Su(ur)),n!==s){for(u=[],o=eo();o!==s;)u.push(o),o=eo();u!==s?(39===r.charCodeAt(Cu)?(o="'",Cu++):(o=s,0===hu&&Su(ur)),o!==s?e=n=[n,u,o]:(Cu=e,e=s)):(Cu=e,e=s);}else Cu=e,e=s;if(e!==s&&(e=st(e)),(t=e)===s){if(t=Cu,e=Cu,34===r.charCodeAt(Cu)?(n='"',Cu++):(n=s,0===hu&&Su(jr)),n!==s){for(u=[],o=to();o!==s;)u.push(o),o=to();u!==s?(34===r.charCodeAt(Cu)?(o='"',Cu++):(o=s,0===hu&&Su(jr)),o!==s?e=n=[n,u,o]:(Cu=e,e=s)):(Cu=e,e=s);}else Cu=e,e=s;e!==s&&(e=st(e)),t=e;}return t}function to(){var t;return at.test(r.charAt(Cu))?(t=r.charAt(Cu),Cu++):(t=s,0===hu&&Su(it)),t===s&&(t=no()),t}function eo(){var t;return ct.test(r.charAt(Cu))?(t=r.charAt(Cu),Cu++):(t=s,0===hu&&Su(lt)),t===s&&(t=no()),t}function no(){var t,e,n,u,o,a,i,c,l,f;return t=Cu,"\\'"===r.substr(Cu,2)?(e="\\'",Cu+=2):(e=s,0===hu&&Su(ft)),e!==s&&(e="'"),(t=e)===s&&(t=Cu,'\\"'===r.substr(Cu,2)?(e='\\"',Cu+=2):(e=s,0===hu&&Su(bt)),e!==s&&(e='"'),(t=e)===s&&(t=Cu,"\\\\"===r.substr(Cu,2)?(e="\\\\",Cu+=2):(e=s,0===hu&&Su(vt)),e!==s&&(e="\\"),(t=e)===s&&(t=Cu,"\\/"===r.substr(Cu,2)?(e="\\/",Cu+=2):(e=s,0===hu&&Su(dt)),e!==s&&(e="/"),(t=e)===s&&(t=Cu,"\\b"===r.substr(Cu,2)?(e="\\b",Cu+=2):(e=s,0===hu&&Su(Lt)),e!==s&&(e="\b"),(t=e)===s&&(t=Cu,"\\f"===r.substr(Cu,2)?(e="\\f",Cu+=2):(e=s,0===hu&&Su(Ct)),e!==s&&(e="\f"),(t=e)===s&&(t=Cu,"\\n"===r.substr(Cu,2)?(e="\\n",Cu+=2):(e=s,0===hu&&Su(pt)),e!==s&&(e="\n"),(t=e)===s&&(t=Cu,"\\r"===r.substr(Cu,2)?(e="\\r",Cu+=2):(e=s,0===hu&&Su(wt)),e!==s&&(e="\r"),(t=e)===s&&(t=Cu,"\\t"===r.substr(Cu,2)?(e="\\t",Cu+=2):(e=s,0===hu&&Su(Et)),e!==s&&(e="\t"),(t=e)===s&&(t=Cu,"\\u"===r.substr(Cu,2)?(e="\\u",Cu+=2):(e=s,0===hu&&Su(ht)),e!==s&&(n=lo())!==s&&(u=lo())!==s&&(o=lo())!==s&&(a=lo())!==s?(i=n,c=u,l=o,f=a,t=e=String.fromCharCode(parseInt("0x"+i+c+l+f))):(Cu=t,t=s),t===s&&(t=Cu,92===r.charCodeAt(Cu)?(e="\\",Cu++):(e=s,0===hu&&Su(At)),e!==s&&(e="\\"),t=e)))))))))),t}function uo(){var t,e;return (t=function(){var r,t,e,n;r=Cu,(t=so())!==s&&(e=oo())!==s&&(n=ao())!==s?(r=t={type:"bigint",value:t+e+n}):(Cu=r,r=s);r===s&&(r=Cu,(t=so())!==s&&(e=oo())!==s?(t=function(r,t){const e=r+t;return Za(r)?{type:"bigint",value:e}:parseFloat(e)}(t,e),r=t):(Cu=r,r=s),r===s&&(r=Cu,(t=so())!==s&&(e=ao())!==s?(t=function(r,t){return {type:"bigint",value:r+t}}(t,e),r=t):(Cu=r,r=s),r===s&&(r=Cu,(t=so())!==s&&(t=function(r){return Za(r)?{type:"bigint",value:r}:parseFloat(r)}(t)),r=t)));return r}())!==s&&(t=(e=t)&&"bigint"===e.type?e:{type:"number",value:e}),t}function so(){var t,e,n;return (t=io())===s&&(t=co())===s&&(t=Cu,45===r.charCodeAt(Cu)?(e="-",Cu++):(e=s,0===hu&&Su($r)),e===s&&(43===r.charCodeAt(Cu)?(e="+",Cu++):(e=s,0===hu&&Su(kr))),e!==s&&(n=io())!==s?(t=e="-"+n):(Cu=t,t=s),t===s&&(t=Cu,45===r.charCodeAt(Cu)?(e="-",Cu++):(e=s,0===hu&&Su($r)),e===s&&(43===r.charCodeAt(Cu)?(e="+",Cu++):(e=s,0===hu&&Su(kr))),e!==s&&(n=co())!==s?(t=e="-"+n):(Cu=t,t=s))),t}function oo(){var t,e,n;return t=Cu,46===r.charCodeAt(Cu)?(e=".",Cu++):(e=s,0===hu&&Su(mt)),e!==s&&(n=io())!==s?(t=e="."+n):(Cu=t,t=s),t}function ao(){var t,e,n;return t=Cu,(e=function(){var t,e,n;t=Cu,_t.test(r.charAt(Cu))?(e=r.charAt(Cu),Cu++):(e=s,0===hu&&Su(Ot));e!==s?(gt.test(r.charAt(Cu))?(n=r.charAt(Cu),Cu++):(n=s,0===hu&&Su(xt)),n===s&&(n=null),n!==s?(t=e=e+(null!==(u=n)?u:"")):(Cu=t,t=s)):(Cu=t,t=s);var u;return t}())!==s&&(n=io())!==s?(t=e=e+n):(Cu=t,t=s),t}function io(){var t,e;if(t=[],(e=co())!==s)for(;e!==s;)t.push(e),e=co();else t=s;return t!==s&&(t=t.join("")),t}function co(){var t;return St.test(r.charAt(Cu))?(t=r.charAt(Cu),Cu++):(t=s,0===hu&&Su(It)),t}function lo(){var t;return Nt.test(r.charAt(Cu))?(t=r.charAt(Cu),Cu++):(t=s,0===hu&&Su(Rt)),t}function fo(){var t,e,n,u;return t=Cu,"default"===r.substr(Cu,7).toLowerCase()?(e=r.substr(Cu,7),Cu+=7):(e=s,0===hu&&Su(p)),e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?t=e=[e,n]:(Cu=t,t=s)):(Cu=t,t=s),t}function bo(){var t,e,n,u;return t=Cu,"to"===r.substr(Cu,2).toLowerCase()?(e=r.substr(Cu,2),Cu+=2):(e=s,0===hu&&Su(kt)),e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?t=e=[e,n]:(Cu=t,t=s)):(Cu=t,t=s),t}function vo(){var t,e,n,u;return t=Cu,"drop"===r.substr(Cu,4).toLowerCase()?(e=r.substr(Cu,4),Cu+=4):(e=s,0===hu&&Su(Ft)),e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?(t=e="DROP"):(Cu=t,t=s)):(Cu=t,t=s),t}function Lo(){var t,e,n,u;return t=Cu,"update"===r.substr(Cu,6).toLowerCase()?(e=r.substr(Cu,6),Cu+=6):(e=s,0===hu&&Su(H)),e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?t=e=[e,n]:(Cu=t,t=s)):(Cu=t,t=s),t}function Co(){var t,e,n,u;return t=Cu,"create"===r.substr(Cu,6).toLowerCase()?(e=r.substr(Cu,6),Cu+=6):(e=s,0===hu&&Su(jt)),e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?t=e=[e,n]:(Cu=t,t=s)):(Cu=t,t=s),t}function po(){var t,e,n,u;return t=Cu,"temporary"===r.substr(Cu,9).toLowerCase()?(e=r.substr(Cu,9),Cu+=9):(e=s,0===hu&&Su(Yt)),e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?t=e=[e,n]:(Cu=t,t=s)):(Cu=t,t=s),t}function wo(){var t,e,n,u;return t=Cu,"if not exists"===r.substr(Cu,13).toLowerCase()?(e=r.substr(Cu,13),Cu+=13):(e=s,0===hu&&Su(Bt)),e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?t=e=[e,n]:(Cu=t,t=s)):(Cu=t,t=s),t}function Eo(){var t,e,n,u;return t=Cu,"replace"===r.substr(Cu,7).toLowerCase()?(e=r.substr(Cu,7),Cu+=7):(e=s,0===hu&&Su(Vt)),e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?t=e=[e,n]:(Cu=t,t=s)):(Cu=t,t=s),t}function ho(){var t,e,n,u;return t=Cu,"rename"===r.substr(Cu,6).toLowerCase()?(e=r.substr(Cu,6),Cu+=6):(e=s,0===hu&&Su(Kt)),e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?t=e=[e,n]:(Cu=t,t=s)):(Cu=t,t=s),t}function Ao(){var t,e,n,u;return t=Cu,"partition"===r.substr(Cu,9).toLowerCase()?(e=r.substr(Cu,9),Cu+=9):(e=s,0===hu&&Su(Zt)),e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?(t=e="PARTITION"):(Cu=t,t=s)):(Cu=t,t=s),t}function yo(){var t,e,n,u;return t=Cu,"into"===r.substr(Cu,4).toLowerCase()?(e=r.substr(Cu,4),Cu+=4):(e=s,0===hu&&Su(zt)),e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?t=e=[e,n]:(Cu=t,t=s)):(Cu=t,t=s),t}function To(){var t,e,n,u;return t=Cu,"set"===r.substr(Cu,3).toLowerCase()?(e=r.substr(Cu,3),Cu+=3):(e=s,0===hu&&Su(K)),e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?t=e=[e,n]:(Cu=t,t=s)):(Cu=t,t=s),t}function mo(){var t,e,n,u;return t=Cu,"as"===r.substr(Cu,2).toLowerCase()?(e=r.substr(Cu,2),Cu+=2):(e=s,0===hu&&Su(re)),e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?t=e=[e,n]:(Cu=t,t=s)):(Cu=t,t=s),t}function So(){var t,e,n,u;return t=Cu,"table"===r.substr(Cu,5).toLowerCase()?(e=r.substr(Cu,5),Cu+=5):(e=s,0===hu&&Su(te)),e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?(t=e="TABLE"):(Cu=t,t=s)):(Cu=t,t=s),t}function Io(){var t,e,n,u;return t=Cu,"tables"===r.substr(Cu,6).toLowerCase()?(e=r.substr(Cu,6),Cu+=6):(e=s,0===hu&&Su(ee)),e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?(t=e="TABLES"):(Cu=t,t=s)):(Cu=t,t=s),t}function No(){var t,e,n,u;return t=Cu,"on"===r.substr(Cu,2).toLowerCase()?(e=r.substr(Cu,2),Cu+=2):(e=s,0===hu&&Su(P)),e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?t=e=[e,n]:(Cu=t,t=s)):(Cu=t,t=s),t}function Ro(){var t,e,n,u;return t=Cu,"join"===r.substr(Cu,4).toLowerCase()?(e=r.substr(Cu,4),Cu+=4):(e=s,0===hu&&Su(ce)),e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?t=e=[e,n]:(Cu=t,t=s)):(Cu=t,t=s),t}function _o(){var t,e,n,u;return t=Cu,"outer"===r.substr(Cu,5).toLowerCase()?(e=r.substr(Cu,5),Cu+=5):(e=s,0===hu&&Su(le)),e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?t=e=[e,n]:(Cu=t,t=s)):(Cu=t,t=s),t}function Oo(){var t,e,n,u;return t=Cu,"union"===r.substr(Cu,5).toLowerCase()?(e=r.substr(Cu,5),Cu+=5):(e=s,0===hu&&Su(be)),e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?t=e=[e,n]:(Cu=t,t=s)):(Cu=t,t=s),t}function go(){var t,e,n,u;return t=Cu,"values"===r.substr(Cu,6).toLowerCase()?(e=r.substr(Cu,6),Cu+=6):(e=s,0===hu&&Su(ve)),e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?t=e=[e,n]:(Cu=t,t=s)):(Cu=t,t=s),t}function xo(){var t,e,n,u;return t=Cu,"using"===r.substr(Cu,5).toLowerCase()?(e=r.substr(Cu,5),Cu+=5):(e=s,0===hu&&Su(de)),e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?t=e=[e,n]:(Cu=t,t=s)):(Cu=t,t=s),t}function Uo(){var t,e,n,u;return t=Cu,"with"===r.substr(Cu,4).toLowerCase()?(e=r.substr(Cu,4),Cu+=4):(e=s,0===hu&&Su(Cr)),e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?t=e=[e,n]:(Cu=t,t=s)):(Cu=t,t=s),t}function Mo(){var t,e,n,u;return t=Cu,"by"===r.substr(Cu,2).toLowerCase()?(e=r.substr(Cu,2),Cu+=2):(e=s,0===hu&&Su(pe)),e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?t=e=[e,n]:(Cu=t,t=s)):(Cu=t,t=s),t}function Do(){var t,e,n,u;return t=Cu,"fetch"===r.substr(Cu,5).toLowerCase()?(e=r.substr(Cu,5),Cu+=5):(e=s,0===hu&&Su(he)),e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?(t=e="FETCH"):(Cu=t,t=s)):(Cu=t,t=s),t}function ko(){var t,e,n,u;return t=Cu,"all"===r.substr(Cu,3).toLowerCase()?(e=r.substr(Cu,3),Cu+=3):(e=s,0===hu&&Su(me)),e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?(t=e="ALL"):(Cu=t,t=s)):(Cu=t,t=s),t}function $o(){var t,e,n,u;return t=Cu,"distinct"===r.substr(Cu,8).toLowerCase()?(e=r.substr(Cu,8),Cu+=8):(e=s,0===hu&&Su(Se)),e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?(t=e="DISTINCT"):(Cu=t,t=s)):(Cu=t,t=s),t}function Fo(){var t,e,n,u;return t=Cu,"between"===r.substr(Cu,7).toLowerCase()?(e=r.substr(Cu,7),Cu+=7):(e=s,0===hu&&Su(Ie)),e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?(t=e="BETWEEN"):(Cu=t,t=s)):(Cu=t,t=s),t}function Po(){var t,e,n,u;return t=Cu,"in"===r.substr(Cu,2).toLowerCase()?(e=r.substr(Cu,2),Cu+=2):(e=s,0===hu&&Su(Ne)),e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?(t=e="IN"):(Cu=t,t=s)):(Cu=t,t=s),t}function Go(){var t,e,n,u;return t=Cu,"is"===r.substr(Cu,2).toLowerCase()?(e=r.substr(Cu,2),Cu+=2):(e=s,0===hu&&Su(Re)),e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?(t=e="IS"):(Cu=t,t=s)):(Cu=t,t=s),t}function Ho(){var t,e,n,u;return t=Cu,"like"===r.substr(Cu,4).toLowerCase()?(e=r.substr(Cu,4),Cu+=4):(e=s,0===hu&&Su(_e)),e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?(t=e="LIKE"):(Cu=t,t=s)):(Cu=t,t=s),t}function jo(){var t,e,n,u;return t=Cu,"exists"===r.substr(Cu,6).toLowerCase()?(e=r.substr(Cu,6),Cu+=6):(e=s,0===hu&&Su(Oe)),e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?(t=e="EXISTS"):(Cu=t,t=s)):(Cu=t,t=s),t}function Yo(){var t,e,n,u;return t=Cu,"not"===r.substr(Cu,3).toLowerCase()?(e=r.substr(Cu,3),Cu+=3):(e=s,0===hu&&Su(x)),e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?(t=e="NOT"):(Cu=t,t=s)):(Cu=t,t=s),t}function Bo(){var t,e,n,u;return t=Cu,"and"===r.substr(Cu,3).toLowerCase()?(e=r.substr(Cu,3),Cu+=3):(e=s,0===hu&&Su(ge)),e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?(t=e="AND"):(Cu=t,t=s)):(Cu=t,t=s),t}function Xo(){var t,e,n,u;return t=Cu,"or"===r.substr(Cu,2).toLowerCase()?(e=r.substr(Cu,2),Cu+=2):(e=s,0===hu&&Su(xe)),e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?(t=e="OR"):(Cu=t,t=s)):(Cu=t,t=s),t}function Wo(){var t,e,n,u;return t=Cu,"case"===r.substr(Cu,4).toLowerCase()?(e=r.substr(Cu,4),Cu+=4):(e=s,0===hu&&Su(Pe)),e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?t=e=[e,n]:(Cu=t,t=s)):(Cu=t,t=s),t}function Vo(){var t,e,n,u;return t=Cu,"end"===r.substr(Cu,3).toLowerCase()?(e=r.substr(Cu,3),Cu+=3):(e=s,0===hu&&Su(Ye)),e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?t=e=[e,n]:(Cu=t,t=s)):(Cu=t,t=s),t}function Ko(){var t,e,n,u;return t=Cu,"cast"===r.substr(Cu,4).toLowerCase()?(e=r.substr(Cu,4),Cu+=4):(e=s,0===hu&&Su(Be)),e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?t=e=[e,n]:(Cu=t,t=s)):(Cu=t,t=s),t}function qo(){var t,e,n,u;return t=Cu,"char"===r.substr(Cu,4).toLowerCase()?(e=r.substr(Cu,4),Cu+=4):(e=s,0===hu&&Su(Xe)),e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?(t=e="CHAR"):(Cu=t,t=s)):(Cu=t,t=s),t}function Zo(){var t,e,n,u;return t=Cu,"varchar"===r.substr(Cu,7).toLowerCase()?(e=r.substr(Cu,7),Cu+=7):(e=s,0===hu&&Su(We)),e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?(t=e="VARCHAR"):(Cu=t,t=s)):(Cu=t,t=s),t}function zo(){var t,e,n,u;return t=Cu,"numeric"===r.substr(Cu,7).toLowerCase()?(e=r.substr(Cu,7),Cu+=7):(e=s,0===hu&&Su(Ve)),e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?(t=e="NUMERIC"):(Cu=t,t=s)):(Cu=t,t=s),t}function Jo(){var t,e,n,u;return t=Cu,"decimal"===r.substr(Cu,7).toLowerCase()?(e=r.substr(Cu,7),Cu+=7):(e=s,0===hu&&Su(Ke)),e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?(t=e="DECIMAL"):(Cu=t,t=s)):(Cu=t,t=s),t}function Qo(){var t,e,n,u;return t=Cu,"unsigned"===r.substr(Cu,8).toLowerCase()?(e=r.substr(Cu,8),Cu+=8):(e=s,0===hu&&Su(Ze)),e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?(t=e="UNSIGNED"):(Cu=t,t=s)):(Cu=t,t=s),t}function ra(){var t,e,n,u;return t=Cu,"int"===r.substr(Cu,3).toLowerCase()?(e=r.substr(Cu,3),Cu+=3):(e=s,0===hu&&Su(ze)),e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?(t=e="INT"):(Cu=t,t=s)):(Cu=t,t=s),t}function ta(){var t,e,n,u;return t=Cu,"integer"===r.substr(Cu,7).toLowerCase()?(e=r.substr(Cu,7),Cu+=7):(e=s,0===hu&&Su(Qe)),e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?(t=e="INTEGER"):(Cu=t,t=s)):(Cu=t,t=s),t}function ea(){var t,e,n,u;return t=Cu,"smallint"===r.substr(Cu,8).toLowerCase()?(e=r.substr(Cu,8),Cu+=8):(e=s,0===hu&&Su(tn)),e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?(t=e="SMALLINT"):(Cu=t,t=s)):(Cu=t,t=s),t}function na(){var t,e,n,u;return t=Cu,"tinyint"===r.substr(Cu,7).toLowerCase()?(e=r.substr(Cu,7),Cu+=7):(e=s,0===hu&&Su(en)),e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?(t=e="TINYINT"):(Cu=t,t=s)):(Cu=t,t=s),t}function ua(){var t,e,n,u;return t=Cu,"bigint"===r.substr(Cu,6).toLowerCase()?(e=r.substr(Cu,6),Cu+=6):(e=s,0===hu&&Su(an)),e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?(t=e="BIGINT"):(Cu=t,t=s)):(Cu=t,t=s),t}function sa(){var t,e,n,u;return t=Cu,"float"===r.substr(Cu,5).toLowerCase()?(e=r.substr(Cu,5),Cu+=5):(e=s,0===hu&&Su(cn)),e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?(t=e="FLOAT"):(Cu=t,t=s)):(Cu=t,t=s),t}function oa(){var t,e,n,u;return t=Cu,"double"===r.substr(Cu,6).toLowerCase()?(e=r.substr(Cu,6),Cu+=6):(e=s,0===hu&&Su(ln)),e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?(t=e="DOUBLE"):(Cu=t,t=s)):(Cu=t,t=s),t}function aa(){var t,e,n,u;return t=Cu,"date"===r.substr(Cu,4).toLowerCase()?(e=r.substr(Cu,4),Cu+=4):(e=s,0===hu&&Su(fn)),e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?(t=e="DATE"):(Cu=t,t=s)):(Cu=t,t=s),t}function ia(){var t,e,n,u;return t=Cu,"datetime"===r.substr(Cu,8).toLowerCase()?(e=r.substr(Cu,8),Cu+=8):(e=s,0===hu&&Su(bn)),e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?(t=e="DATETIME"):(Cu=t,t=s)):(Cu=t,t=s),t}function ca(){var t,e,n,u;return t=Cu,"time"===r.substr(Cu,4).toLowerCase()?(e=r.substr(Cu,4),Cu+=4):(e=s,0===hu&&Su(vn)),e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?(t=e="TIME"):(Cu=t,t=s)):(Cu=t,t=s),t}function la(){var t,e,n,u;return t=Cu,"timestamp"===r.substr(Cu,9).toLowerCase()?(e=r.substr(Cu,9),Cu+=9):(e=s,0===hu&&Su(dn)),e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?(t=e="TIMESTAMP"):(Cu=t,t=s)):(Cu=t,t=s),t}function fa(){var t,e,n,u;return t=Cu,"current_timestamp"===r.substr(Cu,17).toLowerCase()?(e=r.substr(Cu,17),Cu+=17):(e=s,0===hu&&Su(In)),e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?(t=e="CURRENT_TIMESTAMP"):(Cu=t,t=s)):(Cu=t,t=s),t}function ba(){var t;return (t=function(){var t;return "@@"===r.substr(Cu,2)?(t="@@",Cu+=2):(t=s,0===hu&&Su(Dn)),t}())===s&&(t=function(){var t;return 64===r.charCodeAt(Cu)?(t="@",Cu++):(t=s,0===hu&&Su(Mn)),t}())===s&&(t=function(){var t;return 36===r.charCodeAt(Cu)?(t="$",Cu++):(t=s,0===hu&&Su(kn)),t}()),t}function va(){var t;return 61===r.charCodeAt(Cu)?(t="=",Cu++):(t=s,0===hu&&Su(Sr)),t}function da(){var t,e,n,u;return t=Cu,"add"===r.substr(Cu,3).toLowerCase()?(e=r.substr(Cu,3),Cu+=3):(e=s,0===hu&&Su(Gn)),e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?(t=e="ADD"):(Cu=t,t=s)):(Cu=t,t=s),t}function La(){var t,e,n,u;return t=Cu,"column"===r.substr(Cu,6).toLowerCase()?(e=r.substr(Cu,6),Cu+=6):(e=s,0===hu&&Su(Hn)),e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?(t=e="COLUMN"):(Cu=t,t=s)):(Cu=t,t=s),t}function Ca(){var t,e,n,u;return t=Cu,"index"===r.substr(Cu,5).toLowerCase()?(e=r.substr(Cu,5),Cu+=5):(e=s,0===hu&&Su(jn)),e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?(t=e="INDEX"):(Cu=t,t=s)):(Cu=t,t=s),t}function pa(){var t,e,n,u;return t=Cu,"key"===r.substr(Cu,3).toLowerCase()?(e=r.substr(Cu,3),Cu+=3):(e=s,0===hu&&Su(v)),e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?(t=e="KEY"):(Cu=t,t=s)):(Cu=t,t=s),t}function wa(){var t,e,n,u;return t=Cu,"comment"===r.substr(Cu,7).toLowerCase()?(e=r.substr(Cu,7),Cu+=7):(e=s,0===hu&&Su(Xn)),e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?(t=e="COMMENT"):(Cu=t,t=s)):(Cu=t,t=s),t}function Ea(){var t,e,n,u;return t=Cu,"constraint"===r.substr(Cu,10).toLowerCase()?(e=r.substr(Cu,10),Cu+=10):(e=s,0===hu&&Su(Wn)),e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?(t=e="CONSTRAINT"):(Cu=t,t=s)):(Cu=t,t=s),t}function ha(){var t;return 46===r.charCodeAt(Cu)?(t=".",Cu++):(t=s,0===hu&&Su(mt)),t}function Aa(){var t;return 44===r.charCodeAt(Cu)?(t=",",Cu++):(t=s,0===hu&&Su(ru)),t}function ya(){var t;return 42===r.charCodeAt(Cu)?(t="*",Cu++):(t=s,0===hu&&Su(Fr)),t}function Ta(){var t;return 40===r.charCodeAt(Cu)?(t="(",Cu++):(t=s,0===hu&&Su(br)),t}function ma(){var t;return 41===r.charCodeAt(Cu)?(t=")",Cu++):(t=s,0===hu&&Su(vr)),t}function Sa(){var t;return 59===r.charCodeAt(Cu)?(t=";",Cu++):(t=s,0===hu&&Su(nu)),t}function Ia(){var t;return (t=function(){var t;return "||"===r.substr(Cu,2)?(t="||",Cu+=2):(t=s,0===hu&&Su(ou)),t}())===s&&(t=function(){var t;return "&&"===r.substr(Cu,2)?(t="&&",Cu+=2):(t=s,0===hu&&Su(au)),t}()),t}function Na(){var r,t;for(r=[],(t=xa())===s&&(t=_a());t!==s;)r.push(t),(t=xa())===s&&(t=_a());return r}function Ra(){var r,t;if(r=[],(t=xa())===s&&(t=_a()),t!==s)for(;t!==s;)r.push(t),(t=xa())===s&&(t=_a());else r=s;return r}function _a(){var t;return (t=function(){var t,e,n,u,o,a;t=Cu,"/*"===r.substr(Cu,2)?(e="/*",Cu+=2):(e=s,0===hu&&Su(iu));if(e!==s){for(n=[],u=Cu,o=Cu,hu++,"*/"===r.substr(Cu,2)?(a="*/",Cu+=2):(a=s,0===hu&&Su(cu)),hu--,a===s?o=void 0:(Cu=o,o=s),o!==s&&(a=ga())!==s?u=o=[o,a]:(Cu=u,u=s);u!==s;)n.push(u),u=Cu,o=Cu,hu++,"*/"===r.substr(Cu,2)?(a="*/",Cu+=2):(a=s,0===hu&&Su(cu)),hu--,a===s?o=void 0:(Cu=o,o=s),o!==s&&(a=ga())!==s?u=o=[o,a]:(Cu=u,u=s);n!==s?("*/"===r.substr(Cu,2)?(u="*/",Cu+=2):(u=s,0===hu&&Su(cu)),u!==s?t=e=[e,n,u]:(Cu=t,t=s)):(Cu=t,t=s);}else Cu=t,t=s;return t}())===s&&(t=function(){var t,e,n,u,o,a;t=Cu,"--"===r.substr(Cu,2)?(e="--",Cu+=2):(e=s,0===hu&&Su(lu));if(e!==s){for(n=[],u=Cu,o=Cu,hu++,a=Ua(),hu--,a===s?o=void 0:(Cu=o,o=s),o!==s&&(a=ga())!==s?u=o=[o,a]:(Cu=u,u=s);u!==s;)n.push(u),u=Cu,o=Cu,hu++,a=Ua(),hu--,a===s?o=void 0:(Cu=o,o=s),o!==s&&(a=ga())!==s?u=o=[o,a]:(Cu=u,u=s);n!==s?t=e=[e,n]:(Cu=t,t=s);}else Cu=t,t=s;return t}())===s&&(t=function(){var t,e,n,u,o,a;t=Cu,35===r.charCodeAt(Cu)?(e="#",Cu++):(e=s,0===hu&&Su(fu));if(e!==s){for(n=[],u=Cu,o=Cu,hu++,a=Ua(),hu--,a===s?o=void 0:(Cu=o,o=s),o!==s&&(a=ga())!==s?u=o=[o,a]:(Cu=u,u=s);u!==s;)n.push(u),u=Cu,o=Cu,hu++,a=Ua(),hu--,a===s?o=void 0:(Cu=o,o=s),o!==s&&(a=ga())!==s?u=o=[o,a]:(Cu=u,u=s);n!==s?t=e=[e,n]:(Cu=t,t=s);}else Cu=t,t=s;return t}()),t}function Oa(){var r,t,e,n,u,o,a;return r=Cu,(t=wa())!==s&&Na()!==s?((e=va())===s&&(e=null),e!==s&&Na()!==s&&(n=ro())!==s?(o=e,a=n,r=t={type:(u=t).toLowerCase(),keyword:u.toLowerCase(),symbol:o,value:a}):(Cu=r,r=s)):(Cu=r,r=s),r}function ga(){var t;return r.length>Cu?(t=r.charAt(Cu),Cu++):(t=s,0===hu&&Su(bu)),t}function xa(){var t;return vu.test(r.charAt(Cu))?(t=r.charAt(Cu),Cu++):(t=s,0===hu&&Su(du)),t}function Ua(){var t,e;if((t=function(){var t,e;t=Cu,hu++,r.length>Cu?(e=r.charAt(Cu),Cu++):(e=s,0===hu&&Su(bu));hu--,e===s?t=void 0:(Cu=t,t=s);return t}())===s)if(t=[],yt.test(r.charAt(Cu))?(e=r.charAt(Cu),Cu++):(e=s,0===hu&&Su(Tt)),e!==s)for(;e!==s;)t.push(e),yt.test(r.charAt(Cu))?(e=r.charAt(Cu),Cu++):(e=s,0===hu&&Su(Tt));else t=s;return t}function Ma(){var t,e;return t=Cu,ti=[],(void 0)!==s&&Na()!==s?((e=Da())===s&&(e=function(){var t,e;t=Cu,function(){var t;return "return"===r.substr(Cu,6).toLowerCase()?(t=r.substr(Cu,6),Cu+=6):(t=s,0===hu&&Su($n)),t}()!==s&&Na()!==s&&(e=ka())!==s?(t={type:"return",expr:e}):(Cu=t,t=s);return t}()),e!==s?(t={stmt:e,vars:ti}):(Cu=t,t=s)):(Cu=t,t=s),t}function Da(){var t,e,n,u;return t=Cu,(e=Ya())===s&&(e=Ba()),e!==s&&Na()!==s?((n=function(){var t;return ":="===r.substr(Cu,2)?(t=":=",Cu+=2):(t=s,0===hu&&Su(Fn)),t}())===s&&(n=va()),n!==s&&Na()!==s&&(u=ka())!==s?(t=e={type:"assign",left:e,symbol:n,right:u}):(Cu=t,t=s)):(Cu=t,t=s),t}function ka(){var t;return (t=Wu())===s&&(t=function(){var r,t,e,n,u;r=Cu,(t=Ya())!==s&&Na()!==s&&(e=cs())!==s&&Na()!==s&&(n=Ya())!==s&&Na()!==s&&(u=fs())!==s?(r=t={type:"join",ltable:t,rtable:n,op:e,on:u}):(Cu=r,r=s);return r}())===s&&(t=$a())===s&&(t=function(){var t,e;t=Cu,function(){var t;return 91===r.charCodeAt(Cu)?(t="[",Cu++):(t=s,0===hu&&Su(tu)),t}()!==s&&Na()!==s&&(e=ja())!==s&&Na()!==s&&function(){var t;return 93===r.charCodeAt(Cu)?(t="]",Cu++):(t=s,0===hu&&Su(eu)),t}()!==s?(t={type:"array",value:e}):(Cu=t,t=s);return t}()),t}function $a(){var r,t,e,n,u,o,a,i;if(r=Cu,(t=Fa())!==s){for(e=[],n=Cu,(u=Na())!==s&&(o=ks())!==s&&(a=Na())!==s&&(i=Fa())!==s?n=u=[u,o,a,i]:(Cu=n,n=s);n!==s;)e.push(n),n=Cu,(u=Na())!==s&&(o=ks())!==s&&(a=Na())!==s&&(i=Fa())!==s?n=u=[u,o,a,i]:(Cu=n,n=s);e!==s?(r=t=Nr(t,e)):(Cu=r,r=s);}else Cu=r,r=s;return r}function Fa(){var r,t,e,n,u,o,a,i;if(r=Cu,(t=Pa())!==s){for(e=[],n=Cu,(u=Na())!==s&&(o=Fs())!==s&&(a=Na())!==s&&(i=Pa())!==s?n=u=[u,o,a,i]:(Cu=n,n=s);n!==s;)e.push(n),n=Cu,(u=Na())!==s&&(o=Fs())!==s&&(a=Na())!==s&&(i=Pa())!==s?n=u=[u,o,a,i]:(Cu=n,n=s);e!==s?(r=t=Nr(t,e)):(Cu=r,r=s);}else Cu=r,r=s;return r}function Pa(){var r,t,e;return (r=Js())===s&&(r=Ya())===s&&(r=Ha())===s&&(r=qs())===s&&(r=Cu,Ta()!==s&&Na()!==s&&(t=$a())!==s&&Na()!==s&&ma()!==s?((e=t).parentheses=!0,r=e):(Cu=r,r=s)),r}function Ga(){var r,t,e,n,u,o,a;return r=Cu,(t=Hs())!==s?(e=Cu,(n=Na())!==s&&(u=ha())!==s&&(o=Na())!==s&&(a=Hs())!==s?e=n=[n,u,o,a]:(Cu=e,e=s),e===s&&(e=null),e!==s?(r=t=function(r,t){let e=r;return null!==t&&(e=`${r}.${t[3]}`),e}(t,e)):(Cu=r,r=s)):(Cu=r,r=s),r}function Ha(){var r,t,e;return r=Cu,(t=Ga())!==s&&Na()!==s&&Ta()!==s&&Na()!==s?((e=ja())===s&&(e=null),e!==s&&Na()!==s&&ma()!==s?(r=t={type:"function",name:t,args:{type:"expr_list",value:e}}):(Cu=r,r=s)):(Cu=r,r=s),r===s&&(r=Cu,(t=Ga())!==s&&(t=function(r){return {type:"function",name:r,args:null}}(t)),r=t),r}function ja(){var r,t,e,n,u,o,a,i;if(r=Cu,(t=Pa())!==s){for(e=[],n=Cu,(u=Na())!==s&&(o=Aa())!==s&&(a=Na())!==s&&(i=Pa())!==s?n=u=[u,o,a,i]:(Cu=n,n=s);n!==s;)e.push(n),n=Cu,(u=Na())!==s&&(o=Aa())!==s&&(a=Na())!==s&&(i=Pa())!==s?n=u=[u,o,a,i]:(Cu=n,n=s);e!==s?(r=t=c(t,e)):(Cu=r,r=s);}else Cu=r,r=s;return r}function Ya(){var r,t,e,n,u;return r=Cu,(t=ba())!==s&&(e=Ba())!==s?(n=t,u=e,r=t={type:"var",...u,prefix:n}):(Cu=r,r=s),r}function Ba(){var t,e,n,u,o;return t=Cu,(e=Xs())!==s&&(n=function(){var e,n,u,o;e=[],n=Cu,46===r.charCodeAt(Cu)?(u=".",Cu++):(u=s,0===hu&&Su(mt));u!==s&&(o=Xs())!==s?n=u=[u,o]:(Cu=n,n=s);for(;n!==s;)e.push(n),n=Cu,46===r.charCodeAt(Cu)?(u=".",Cu++):(u=s,0===hu&&Su(mt)),u!==s&&(o=Xs())!==s?n=u=[u,o]:(Cu=n,n=s);e!==s&&(e=function(r){const t=[];for(let e=0;e<r.length;e++)t.push(r[e][1]);return t}(e));return e}())!==s?(u=e,o=n,ti.push(u),t=e={type:"var",name:u,members:o,prefix:null}):(Cu=t,t=s),t}function Xa(){var t;return (t=function(){var t,e,n,u;t=Cu,(e=qo())===s&&(e=Zo());if(e!==s)if(Na()!==s)if(Ta()!==s)if(Na()!==s){if(n=[],St.test(r.charAt(Cu))?(u=r.charAt(Cu),Cu++):(u=s,0===hu&&Su(It)),u!==s)for(;u!==s;)n.push(u),St.test(r.charAt(Cu))?(u=r.charAt(Cu),Cu++):(u=s,0===hu&&Su(It));else n=s;n!==s&&(u=Na())!==s&&ma()!==s?(e={dataType:e,length:parseInt(n.join(""),10)},t=e):(Cu=t,t=s);}else Cu=t,t=s;else Cu=t,t=s;else Cu=t,t=s;else Cu=t,t=s;t===s&&(t=Cu,(e=qo())!==s&&(e=Lu(e)),(t=e)===s&&(t=Cu,(e=Zo())!==s&&(e=Lu(e)),t=e));return t}())===s&&(t=function(){var t,e,n,u,o,a,i,c,l,f,b,v;t=Cu,(e=zo())===s&&(e=Jo())===s&&(e=ra())===s&&(e=ta())===s&&(e=ea())===s&&(e=na())===s&&(e=ua())===s&&(e=sa())===s&&(e=oa());if(e!==s)if((n=Na())!==s)if((u=Ta())!==s)if((o=Na())!==s){if(a=[],St.test(r.charAt(Cu))?(i=r.charAt(Cu),Cu++):(i=s,0===hu&&Su(It)),i!==s)for(;i!==s;)a.push(i),St.test(r.charAt(Cu))?(i=r.charAt(Cu),Cu++):(i=s,0===hu&&Su(It));else a=s;if(a!==s)if((i=Na())!==s){if(c=Cu,(l=Aa())!==s)if((f=Na())!==s){if(b=[],St.test(r.charAt(Cu))?(v=r.charAt(Cu),Cu++):(v=s,0===hu&&Su(It)),v!==s)for(;v!==s;)b.push(v),St.test(r.charAt(Cu))?(v=r.charAt(Cu),Cu++):(v=s,0===hu&&Su(It));else b=s;b!==s?c=l=[l,f,b]:(Cu=c,c=s);}else Cu=c,c=s;else Cu=c,c=s;c===s&&(c=null),c!==s&&(l=Na())!==s&&(f=ma())!==s&&(b=Na())!==s?((v=Wa())===s&&(v=null),v!==s?(d=c,L=v,e={dataType:e,length:parseInt(a.join(""),10),scale:d&&parseInt(d[2].join(""),10),parentheses:!0,suffix:L},t=e):(Cu=t,t=s)):(Cu=t,t=s);}else Cu=t,t=s;else Cu=t,t=s;}else Cu=t,t=s;else Cu=t,t=s;else Cu=t,t=s;else Cu=t,t=s;var d,L;if(t===s){if(t=Cu,(e=zo())===s&&(e=Jo())===s&&(e=ra())===s&&(e=ta())===s&&(e=ea())===s&&(e=na())===s&&(e=ua())===s&&(e=sa())===s&&(e=oa()),e!==s){if(n=[],St.test(r.charAt(Cu))?(u=r.charAt(Cu),Cu++):(u=s,0===hu&&Su(It)),u!==s)for(;u!==s;)n.push(u),St.test(r.charAt(Cu))?(u=r.charAt(Cu),Cu++):(u=s,0===hu&&Su(It));else n=s;n!==s&&(u=Na())!==s?((o=Wa())===s&&(o=null),o!==s?(e=function(r,t,e){return {dataType:r,length:parseInt(t.join(""),10),suffix:e}}(e,n,o),t=e):(Cu=t,t=s)):(Cu=t,t=s);}else Cu=t,t=s;t===s&&(t=Cu,(e=zo())===s&&(e=Jo())===s&&(e=ra())===s&&(e=ta())===s&&(e=ea())===s&&(e=na())===s&&(e=ua())===s&&(e=sa())===s&&(e=oa()),e!==s&&(n=Na())!==s?((u=Wa())===s&&(u=null),u!==s&&(o=Na())!==s?(e=function(r,t){return {dataType:r,suffix:t}}(e,u),t=e):(Cu=t,t=s)):(Cu=t,t=s));}return t}())===s&&(t=function(){var t,e,n,u;t=Cu,(e=aa())===s&&(e=ia())===s&&(e=ca())===s&&(e=la());if(e!==s)if(Na()!==s)if(Ta()!==s)if(Na()!==s){if(n=[],St.test(r.charAt(Cu))?(u=r.charAt(Cu),Cu++):(u=s,0===hu&&Su(It)),u!==s)for(;u!==s;)n.push(u),St.test(r.charAt(Cu))?(u=r.charAt(Cu),Cu++):(u=s,0===hu&&Su(It));else n=s;n!==s&&(u=Na())!==s&&ma()!==s?(e={dataType:e,length:parseInt(n.join(""),10)},t=e):(Cu=t,t=s);}else Cu=t,t=s;else Cu=t,t=s;else Cu=t,t=s;else Cu=t,t=s;t===s&&(t=Cu,(e=aa())===s&&(e=ia())===s&&(e=ca())===s&&(e=la()),e!==s&&(e=Lu(e)),t=e);return t}())===s&&(t=function(){var e;(e=function(){var t,e,n,u;return t=Cu,"json"===r.substr(Cu,4).toLowerCase()?(e=r.substr(Cu,4),Cu+=4):(e=s,0===hu&&Su(rn)),e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?(t=e="JSON"):(Cu=t,t=s)):(Cu=t,t=s),t}())!==s&&(e=Lu(e));return e}())===s&&(t=function(){var e;(e=function(){var t,e,n,u;return t=Cu,"tinytext"===r.substr(Cu,8).toLowerCase()?(e=r.substr(Cu,8),Cu+=8):(e=s,0===hu&&Su(nn)),e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?(t=e="TINYTEXT"):(Cu=t,t=s)):(Cu=t,t=s),t}())===s&&(e=function(){var t,e,n,u;return t=Cu,"text"===r.substr(Cu,4).toLowerCase()?(e=r.substr(Cu,4),Cu+=4):(e=s,0===hu&&Su(un)),e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?(t=e="TEXT"):(Cu=t,t=s)):(Cu=t,t=s),t}())===s&&(e=function(){var t,e,n,u;return t=Cu,"mediumtext"===r.substr(Cu,10).toLowerCase()?(e=r.substr(Cu,10),Cu+=10):(e=s,0===hu&&Su(sn)),e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?(t=e="MEDIUMTEXT"):(Cu=t,t=s)):(Cu=t,t=s),t}())===s&&(e=function(){var t,e,n,u;return t=Cu,"longtext"===r.substr(Cu,8).toLowerCase()?(e=r.substr(Cu,8),Cu+=8):(e=s,0===hu&&Su(on)),e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?(t=e="LONGTEXT"):(Cu=t,t=s)):(Cu=t,t=s),t}());e!==s&&(e={dataType:e});return e}()),t}function Wa(){var t,e,n;return t=Cu,(e=Qo())===s&&(e=null),e!==s&&Na()!==s?((n=function(){var t,e,n,u;return t=Cu,"zerofill"===r.substr(Cu,8).toLowerCase()?(e=r.substr(Cu,8),Cu+=8):(e=s,0===hu&&Su(Je)),e!==s?(n=Cu,hu++,u=Ws(),hu--,u===s?n=void 0:(Cu=n,n=s),n!==s?(t=e="ZEROFILL"):(Cu=t,t=s)):(Cu=t,t=s),t}())===s&&(n=null),n!==s?(t=e=function(r,t){const e=[];return r&&e.push(r),t&&e.push(t),e}(e,n)):(Cu=t,t=s)):(Cu=t,t=s),t}const Va={ALTER:!0,ALL:!0,ADD:!0,AND:!0,AS:!0,ASC:!0,BETWEEN:!0,BY:!0,CALL:!0,CASE:!0,CREATE:!0,CONTAINS:!0,CURRENT_DATE:!0,CURRENT_TIME:!0,CURRENT_TIMESTAMP:!0,CURRENT_USER:!0,DELETE:!0,DESC:!0,DISTINCT:!0,DROP:!0,ELSE:!0,END:!0,EXISTS:!0,EXPLAIN:!0,FALSE:!0,FROM:!0,FULL:!0,GROUP:!0,HAVING:!0,IN:!0,INNER:!0,INSERT:!0,INTO:!0,IS:!0,JOIN:!0,JSON:!0,KEY:!0,LEFT:!0,LIKE:!0,LIMIT:!0,LOW_PRIORITY:!0,NOT:!0,NULL:!0,ON:!0,OR:!0,ORDER:!0,OUTER:!0,RECURSIVE:!0,RENAME:!0,READ:!0,RIGHT:!0,SELECT:!0,SESSION_USER:!0,SET:!0,SHOW:!0,SYSTEM_USER:!0,TABLE:!0,THEN:!0,TRUE:!0,TRUNCATE:!0,TYPE:!0,UNION:!0,UPDATE:!0,USING:!0,VALUES:!0,WITH:!0,WHEN:!0,WHERE:!0,WRITE:!0,GLOBAL:!0,SESSION:!0,LOCAL:!0,PERSIST:!0,PERSIST_ONLY:!0};function Ka(r,t){return {type:"unary_expr",operator:r,expr:t}}function qa(r,t,e){return {type:"binary_expr",operator:r,left:t,right:e}}function Za(r){const t=n(Number.MAX_SAFE_INTEGER);return !(n(r)<t)}function za(r,t,e=3){const n=[r];for(let r=0;r<t.length;r++)n.push(t[r][e]);return n}function Ja(r,t){let e=r;for(let r=0;r<t.length;r++)e=qa(t[r][1],e,t[r][3]);return e}function Qa(r){const t=ui[r];return t||(r||null)}function ri(r){const t=new Set;for(let e of r.keys()){const r=e.split("::");if(!r){t.add(e);break}r&&r[1]&&(r[1]=Qa(r[1])),t.add(r.join("::"));}return Array.from(t)}let ti=[];const ei=new Set,ni=new Set,ui={};if((e=a())!==s&&Cu===r.length)return e;throw e!==s&&Cu<r.length&&Su({type:"end"}),Iu(Eu,wu<r.length?r.charAt(wu):null,wu<r.length?mu(wu,wu+1):mu(wu,wu))}};},function(r,t,e){var n=e(0);function u(r,t,e,n){this.message=r,this.expected=t,this.found=e,this.location=n,this.name="SyntaxError","function"==typeof Error.captureStackTrace&&Error.captureStackTrace(this,u);}!function(r,t){function e(){this.constructor=r;}e.prototype=t.prototype,r.prototype=new e;}(u,Error),u.buildMessage=function(r,t){var e={literal:function(r){return '"'+u(r.text)+'"'},class:function(r){var t,e="";for(t=0;t<r.parts.length;t++)e+=r.parts[t]instanceof Array?s(r.parts[t][0])+"-"+s(r.parts[t][1]):s(r.parts[t]);return "["+(r.inverted?"^":"")+e+"]"},any:function(r){return "any character"},end:function(r){return "end of input"},other:function(r){return r.description}};function n(r){return r.charCodeAt(0).toString(16).toUpperCase()}function u(r){return r.replace(/\\/g,"\\\\").replace(/"/g,'\\"').replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(r){return "\\x0"+n(r)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(r){return "\\x"+n(r)}))}function s(r){return r.replace(/\\/g,"\\\\").replace(/\]/g,"\\]").replace(/\^/g,"\\^").replace(/-/g,"\\-").replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(r){return "\\x0"+n(r)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(r){return "\\x"+n(r)}))}return "Expected "+function(r){var t,n,u,s=new Array(r.length);for(t=0;t<r.length;t++)s[t]=(u=r[t],e[u.type](u));if(s.sort(),s.length>0){for(t=1,n=1;t<s.length;t++)s[t-1]!==s[t]&&(s[n]=s[t],n++);s.length=n;}switch(s.length){case 1:return s[0];case 2:return s[0]+" or "+s[1];default:return s.slice(0,-1).join(", ")+", or "+s[s.length-1]}}(r)+" but "+function(r){return r?'"'+u(r)+'"':"end of input"}(t)+" found."},r.exports={SyntaxError:u,parse:function(r,t){t=void 0!==t?t:{};var e,s={},o={start:hu},a=hu,i=function(r,t){return Fa(r,t,1)},c=function(r,t){return Fa(r,t)},l=du("AUTO_INCREMENT",!0),f=du("UNIQUE",!0),b=du("KEY",!0),v=du("PRIMARY",!0),d=du("COLUMN_FORMAT",!0),L=du("FIXED",!0),C=du("DYNAMIC",!0),p=du("DEFAULT",!0),w=du("STORAGE",!0),E=du("DISK",!0),h=du("MEMORY",!0),A=du("ALGORITHM",!0),y=du("INSTANT",!0),T=du("INPLACE",!0),m=du("COPY",!0),S=du("LOCK",!0),I=du("NONE",!0),N=du("SHARED",!0),R=du("EXCLUSIVE",!0),_=du("PRIMARY KEY",!0),O=du("FOREIGN KEY",!0),g=du("MATCH FULL",!0),x=du("MATCH PARTIAL",!0),U=du("MATCH SIMPLE",!0),M=du("ON",!0),D=du("DELETE",!0),k=du("UPDATE",!0),$=du("RESTRICT",!0),F=du("CASCADE",!0),P=du("SET NULL",!0),G=du("NO ACTION",!0),H=du("SET DEFAULT",!0),j=du("CHARACTER",!0),Y=du("SET",!0),B=du("CHARSET",!0),X=du("COLLATE",!0),W=du("AVG_ROW_LENGTH",!0),V=du("KEY_BLOCK_SIZE",!0),K=du("MAX_ROWS",!0),q=du("MIN_ROWS",!0),Z=du("STATS_SAMPLE_PAGES",!0),z=du("CONNECTION",!0),J=du("COMPRESSION",!0),Q=du("'",!1),rr=du("ZLIB",!0),tr=du("LZ4",!0),er=du("ENGINE",!0),nr=du("READ",!0),ur=du("LOCAL",!0),sr=du("LOW_PRIORITY",!0),or=du("WRITE",!0),ar=du("(",!1),ir=du(")",!1),cr=du("BTREE",!0),lr=du("HASH",!0),fr=du("WITH",!0),br=du("PARSER",!0),vr=du("VISIBLE",!0),dr=du("INVISIBLE",!0),Lr=function(r,t){return t.unshift(r),t.forEach(r=>{const{table:t,as:e}=r;Xa[t]=t,e&&(Xa[e]=t),function(r){const t=Ha(r);r.clear(),t.forEach(t=>r.add(t));}(Ba);}),t},Cr=du("=",!1),pr=function(r,t){return Pa(r,t)},wr=function(r,t){return Pa(r,t)},Er=du("!",!1),hr=function(r){return r[0]+" "+r[2]},Ar=du(">=",!1),yr=du(">",!1),Tr=du("<=",!1),mr=du("<>",!1),Sr=du("<",!1),Ir=du("!=",!1),Nr=du("+",!1),Rr=du("-",!1),_r=du("*",!1),Or=du("/",!1),gr=du("%",!1),xr=function(r){return !0===Ma[r.toUpperCase()]},Ur=du('"',!1),Mr=/^[^"]/,Dr=Lu(['"'],!0,!1),kr=function(r){return r.join("")},$r=/^[^']/,Fr=Lu(["'"],!0,!1),Pr=du("`",!1),Gr=/^[^`]/,Hr=Lu(["`"],!0,!1),jr=function(r,t){return r+t.join("")},Yr=/^[A-Za-z_]/,Br=Lu([["A","Z"],["a","z"],"_"],!1,!1),Xr=/^[A-Za-z0-9_]/,Wr=Lu([["A","Z"],["a","z"],["0","9"],"_"],!1,!1),Vr=/^[A-Za-z0-9_:]/,Kr=Lu([["A","Z"],["a","z"],["0","9"],"_",":"],!1,!1),qr=du(":",!1),Zr=function(r,t,e){return {type:"function",name:r,args:t||{type:"expr_list",value:[]},over:e}},zr=function(r){return {type:"string",value:r[1].join("")}},Jr=function(r,t){return {type:r.toLowerCase(),value:t[1].join("")}},Qr=/^[^"\\\0-\x1F\x7F]/,rt=Lu(['"',"\\",["\0",""],""],!0,!1),tt=/^[^'\\]/,et=Lu(["'","\\"],!0,!1),nt=du("\\'",!1),ut=du('\\"',!1),st=du("\\\\",!1),ot=du("\\/",!1),at=du("\\b",!1),it=du("\\f",!1),ct=du("\\n",!1),lt=du("\\r",!1),ft=du("\\t",!1),bt=du("\\u",!1),vt=du("\\",!1),dt=/^[\n\r]/,Lt=Lu(["\n","\r"],!1,!1),Ct=du(".",!1),pt=/^[0-9]/,wt=Lu([["0","9"]],!1,!1),Et=/^[0-9a-fA-F]/,ht=Lu([["0","9"],["a","f"],["A","F"]],!1,!1),At=/^[eE]/,yt=Lu(["e","E"],!1,!1),Tt=/^[+\-]/,mt=Lu(["+","-"],!1,!1),St=du("NULL",!0),It=du("NOT NULL",!0),Nt=du("TRUE",!0),Rt=du("TO",!0),_t=du("FALSE",!0),Ot=(du("DROP",!0)),gt=du("USE",!0),xt=du("ALTER",!0),Ut=du("SELECT",!0),Mt=du("CREATE",!0),Dt=du("TEMPORARY",!0),kt=du("IF NOT EXISTS",!0),$t=du("INSERT",!0),Ft=du("RECURSIVE",!1),Pt=du("REPLACE",!0),Gt=du("RENAME",!0),Ht=du("IGNORE",!0),jt=(du("PARTITION",!0)),Yt=du("INTO",!0),Bt=du("OVERWRITE",!0),Xt=du("FROM",!0),Wt=du("UNLOCK",!0),Vt=du("AS",!0),Kt=du("TABLE",!0),qt=du("TABLES",!0),Zt=du("DATABASE",!0),zt=du("SCHEME",!0),Jt=du("LEFT",!0),Qt=du("RIGHT",!0),re=du("FULL",!0),te=du("INNER",!0),ee=du("JOIN",!0),ne=du("OUTER",!0),ue=du("OVER",!0),se=du("UNION",!0),oe=du("VALUES",!0),ae=du("USING",!0),ie=du("WHERE",!0),ce=du("GROUP",!0),le=du("BY",!0),fe=du("ORDER",!0),be=du("HAVING",!0),ve=du("LIMIT",!0),de=du("OFFSET",!0),Le=du("ASC",!0),Ce=du("DESC",!0),pe=du("ALL",!0),we=du("DISTINCT",!0),Ee=du("BETWEEN",!0),he=du("IN",!0),Ae=du("IS",!0),ye=du("LIKE",!0),Te=du("EXISTS",!0),me=du("NOT",!0),Se=du("AND",!0),Ie=du("OR",!0),Ne=du("COUNT",!0),Re=du("MAX",!0),_e=du("MIN",!0),Oe=du("SUM",!0),ge=du("AVG",!0),xe=du("CALL",!0),Ue=du("CASE",!0),Me=du("WHEN",!0),De=du("THEN",!0),ke=du("ELSE",!0),$e=du("END",!0),Fe=du("CAST",!0),Pe=du("CHAR",!0),Ge=du("VARCHAR",!0),He=du("NUMERIC",!0),je=du("DECIMAL",!0),Ye=du("SIGNED",!0),Be=du("STRING",!0),Xe=du("UNSIGNED",!0),We=du("INT",!0),Ve=du("ZEROFILL",!0),Ke=du("INTEGER",!0),qe=du("JSON",!0),Ze=du("SMALLINT",!0),ze=du("TINYINT",!0),Je=du("TINYTEXT",!0),Qe=du("TEXT",!0),rn=du("MEDIUMTEXT",!0),tn=du("LONGTEXT",!0),en=du("BIGINT",!0),nn=du("FLOAT",!0),un=du("DOUBLE",!0),sn=du("DATE",!0),on=du("DATETIME",!0),an=du("TIME",!0),cn=du("TIMESTAMP",!0),ln=du("TRUNCATE",!0),fn=du("USER",!0),bn=du("CURRENT_DATE",!0),vn=(du("INTERVAL",!0)),dn=du("YEAR",!0),Ln=du("MONTH",!0),Cn=du("DAY",!0),pn=du("HOUR",!0),wn=du("MINUTE",!0),En=du("SECOND",!0),hn=du("CURRENT_TIME",!0),An=du("CURRENT_TIMESTAMP",!0),yn=du("CURRENT_USER",!0),Tn=du("SESSION_USER",!0),mn=du("SYSTEM_USER",!0),Sn=du("GLOBAL",!0),In=du("SESSION",!0),Nn=du("PERSIST",!0),Rn=du("PERSIST_ONLY",!0),_n=du("@",!1),On=du("@@",!1),gn=du("$",!1),xn=du("return",!0),Un=du(":=",!1),Mn=du("DUAL",!0),Dn=du("ADD",!0),kn=du("COLUMN",!0),$n=du("INDEX",!0),Fn=du("FULLTEXT",!0),Pn=du("SPATIAL",!0),Gn=du("COMMENT",!0),Hn=du("CONSTRAINT",!0),jn=du("REFERENCES",!0),Yn=du("SQL_CALC_FOUND_ROWS",!0),Bn=du("SQL_CACHE",!0),Xn=du("SQL_NO_CACHE",!0),Wn=du("SQL_SMALL_RESULT",!0),Vn=du("SQL_BIG_RESULT",!0),Kn=du("SQL_BUFFER_RESULT",!0),qn=du(",",!1),Zn=du("[",!1),zn=du("]",!1),Jn=du(";",!1),Qn=du("||",!1),ru=du("&&",!1),tu=du("/*",!1),eu=du("*/",!1),nu=du("--",!1),uu=du("#",!1),su={type:"any"},ou=/^[ \t\n\r]/,au=Lu([" ","\t","\n","\r"],!1,!1),iu=function(r){return {dataType:r}},cu=0,lu=[{line:1,column:1}],fu=0,bu=[],vu=0;if("startRule"in t){if(!(t.startRule in o))throw new Error("Can't start parsing from rule \""+t.startRule+'".');a=o[t.startRule];}function du(r,t){return {type:"literal",text:r,ignoreCase:t}}function Lu(r,t,e){return {type:"class",parts:r,inverted:t,ignoreCase:e}}function Cu(t){var e,n=lu[t];if(n)return n;for(e=t-1;!lu[e];)e--;for(n={line:(n=lu[e]).line,column:n.column};e<t;)10===r.charCodeAt(e)?(n.line++,n.column=1):n.column++,e++;return lu[t]=n,n}function pu(r,t){var e=Cu(r),n=Cu(t);return {start:{offset:r,line:e.line,column:e.column},end:{offset:t,line:n.line,column:n.column}}}function wu(r){cu<fu||(cu>fu&&(fu=cu,bu=[]),bu.push(r));}function Eu(r,t,e){return new u(u.buildMessage(r,t),r,t,e)}function hu(){var r,t;return r=cu,da()!==s?((t=function(){var r,t,e,n,u,o,a,i;if(r=cu,(t=yu())!==s){if(e=[],n=cu,(u=da())!==s&&(o=ba())!==s&&(a=da())!==s&&(i=yu())!==s?n=u=[u,o,a,i]:(cu=n,n=s),n!==s)for(;n!==s;)e.push(n),n=cu,(u=da())!==s&&(o=ba())!==s&&(a=da())!==s&&(i=yu())!==s?n=u=[u,o,a,i]:(cu=n,n=s);else e=s;e!==s?(t=function(r,t){const e=[r&&r.ast||r];for(let r=0;r<t.length;r++)t[r][3]&&0!==t[r][3].length&&e.push(t[r][3]&&t[r][3].ast||t[r][3]);return {tableList:Array.from(Ya),columnList:Ha(Ba),ast:e}}(t,e),r=t):(cu=r,r=s);}else cu=r,r=s;return r}())===s&&(t=Au())===s&&(t=yu()),t!==s?(r=t):(cu=r,r=s)):(cu=r,r=s),r}function Au(){var t;return (t=function(){var r,t,e,n,u,o;r=cu,(t=eo())!==s&&da()!==s&&(e=vo())!==s&&da()!==s&&(n=Ju())!==s?(a=t,c=e,(l=n)&&l.forEach(r=>Ya.add(`${a}::${r.db}::${r.table}`)),t={tableList:Array.from(Ya),columnList:Ha(Ba),ast:{type:a.toLowerCase(),keyword:c.toLowerCase(),name:l}},r=t):(cu=r,r=s);var a,c,l;r===s&&(r=cu,(t=eo())!==s&&da()!==s&&(e=ua())!==s&&da()!==s&&(n=Os())!==s&&da()!==s&&Co()!==s&&da()!==s&&(u=es())!==s&&da()!==s?((o=function(){var r,t,e,n,u,o;r=cu,(t=Ru())===s&&(t=_u());if(t!==s){for(e=[],n=cu,(u=da())!==s?((o=Ru())===s&&(o=_u()),o!==s?n=u=[u,o]:(cu=n,n=s)):(cu=n,n=s);n!==s;)e.push(n),n=cu,(u=da())!==s?((o=Ru())===s&&(o=_u()),o!==s?n=u=[u,o]:(cu=n,n=s)):(cu=n,n=s);e!==s?(t=i(t,e),r=t):(cu=r,r=s);}else cu=r,r=s;return r}())===s&&(o=null),o!==s&&da()!==s?(t=function(r,t,e,n,u){return {tableList:Array.from(Ya),columnList:Ha(Ba),ast:{type:r.toLowerCase(),keyword:t.toLowerCase(),name:e,table:n,options:u}}}(t,e,n,u,o),r=t):(cu=r,r=s)):(cu=r,r=s));return r}())===s&&(t=function(){var t;(t=function(){var t,e,n,u,o,a,i,l,f,b;t=cu,(e=uo())!==s&&da()!==s?((n=so())===s&&(n=null),n!==s&&da()!==s&&vo()!==s&&da()!==s?((u=oo())===s&&(u=null),u!==s&&da()!==s&&(o=Ju())!==s&&da()!==s&&(a=function(){var r,t,e,n,u,o,a,i,l;if(r=cu,(t=la())!==s)if(da()!==s)if((e=mu())!==s){for(n=[],u=cu,(o=da())!==s&&(a=ia())!==s&&(i=da())!==s&&(l=mu())!==s?u=o=[o,a,i,l]:(cu=u,u=s);u!==s;)n.push(u),u=cu,(o=da())!==s&&(a=ia())!==s&&(i=da())!==s&&(l=mu())!==s?u=o=[o,a,i,l]:(cu=u,u=s);n!==s&&(u=da())!==s&&(o=fa())!==s?(t=c(e,n),r=t):(cu=r,r=s);}else cu=r,r=s;else cu=r,r=s;else cu=r,r=s;return r}())!==s&&da()!==s?((i=function(){var r,t,e,n,u,o,a,i;if(r=cu,(t=ku())!==s){for(e=[],n=cu,(u=da())!==s?((o=ia())===s&&(o=null),o!==s&&(a=da())!==s&&(i=ku())!==s?n=u=[u,o,a,i]:(cu=n,n=s)):(cu=n,n=s);n!==s;)e.push(n),n=cu,(u=da())!==s?((o=ia())===s&&(o=null),o!==s&&(a=da())!==s&&(i=ku())!==s?n=u=[u,o,a,i]:(cu=n,n=s)):(cu=n,n=s);e!==s?(t=Fa(t,e),r=t):(cu=r,r=s);}else cu=r,r=s;return r}())===s&&(i=null),i!==s&&da()!==s?((l=function(){var t,e,n,u;t=cu,"ignore"===r.substr(cu,6).toLowerCase()?(e=r.substr(cu,6),cu+=6):(e=s,0===vu&&wu(Ht));e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?t=e=[e,n]:(cu=t,t=s)):(cu=t,t=s);return t}())===s&&(l=ao()),l===s&&(l=null),l!==s&&da()!==s?((f=bo())===s&&(f=null),f!==s&&da()!==s?((b=Tu())===s&&(b=null),b!==s?(v=e,d=n,L=u,p=a,w=i,E=l,h=f,A=b,(C=o)&&C.forEach(r=>Ya.add(`create::${r.db}::${r.table}`)),e={tableList:Array.from(Ya),columnList:Ha(Ba),ast:{type:v[0].toLowerCase(),keyword:"table",temporary:d&&d[0].toLowerCase(),if_not_exists:L&&L[0].toLowerCase(),table:C,ignore_replace:E&&E[0].toLowerCase(),as:h&&h[0].toLowerCase(),query_expr:A&&A.ast,create_definitions:p,table_options:w}},t=e):(cu=t,t=s)):(cu=t,t=s)):(cu=t,t=s)):(cu=t,t=s)):(cu=t,t=s)):(cu=t,t=s)):(cu=t,t=s);var v,d,L,C,p,w,E,h,A;t===s&&(t=cu,(e=uo())!==s&&da()!==s?((n=so())===s&&(n=null),n!==s&&da()!==s&&vo()!==s&&da()!==s?((u=oo())===s&&(u=null),u!==s&&da()!==s&&(o=Ju())!==s&&da()!==s&&(a=function r(){var t,e;(t=function(){var r,t;r=cu,_o()!==s&&da()!==s&&(t=Ju())!==s?(r={type:"like",table:t}):(cu=r,r=s);return r}())===s&&(t=cu,la()!==s&&da()!==s&&(e=r())!==s&&da()!==s&&fa()!==s?((n=e).parentheses=!0,t=n):(cu=t,t=s));var n;return t}())!==s?(e=function(r,t,e,n,u){return n&&n.forEach(r=>Ya.add(`create::${r.db}::${r.table}`)),{tableList:Array.from(Ya),columnList:Ha(Ba),ast:{type:r[0].toLowerCase(),keyword:"table",temporary:t&&t[0].toLowerCase(),if_not_exists:e&&e[0].toLowerCase(),table:n,like:u}}}(e,n,u,o,a),t=e):(cu=t,t=s)):(cu=t,t=s)):(cu=t,t=s));return t}())===s&&(t=function(){var t,e,n,u,o,a;t=cu,(e=uo())!==s&&da()!==s?((n=function(){var t,e,n,u;t=cu,"database"===r.substr(cu,8).toLowerCase()?(e=r.substr(cu,8),cu+=8):(e=s,0===vu&&wu(Zt));e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?(t=e="DATABASE"):(cu=t,t=s)):(cu=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=cu,"scheme"===r.substr(cu,6).toLowerCase()?(e=r.substr(cu,6),cu+=6):(e=s,0===vu&&wu(zt));e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?(t=e="SCHEME"):(cu=t,t=s)):(cu=t,t=s);return t}()),n!==s&&da()!==s?((u=oo())===s&&(u=null),u!==s&&da()!==s&&(o=Ms())!==s&&da()!==s?((a=function(){var r,t,e,n,u,o;if(r=cu,(t=Du())!==s){for(e=[],n=cu,(u=da())!==s&&(o=Du())!==s?n=u=[u,o]:(cu=n,n=s);n!==s;)e.push(n),n=cu,(u=da())!==s&&(o=Du())!==s?n=u=[u,o]:(cu=n,n=s);e!==s?(t=i(t,e),r=t):(cu=r,r=s);}else cu=r,r=s;return r}())===s&&(a=null),a!==s?(c=e,l=u,f=o,b=a,e={tableList:Array.from(Ya),columnList:Ha(Ba),ast:{type:c[0].toLowerCase(),keyword:"database",if_not_exists:l&&l[0].toLowerCase(),database:f,create_definitions:b}},t=e):(cu=t,t=s)):(cu=t,t=s)):(cu=t,t=s)):(cu=t,t=s);var c,l,f,b;return t}());return t}())===s&&(t=function(){var t,e,n,u;t=cu,(e=function(){var t,e,n,u;t=cu,"truncate"===r.substr(cu,8).toLowerCase()?(e=r.substr(cu,8),cu+=8):(e=s,0===vu&&wu(ln));e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?(t=e="TRUNCATE"):(cu=t,t=s)):(cu=t,t=s);return t}())!==s&&da()!==s?((n=vo())===s&&(n=null),n!==s&&da()!==s&&(u=Ju())!==s?(o=e,a=n,(i=u)&&i.forEach(r=>Ya.add(`${o}::${r.db}::${r.table}`)),e={tableList:Array.from(Ya),columnList:Ha(Ba),ast:{type:o.toLowerCase(),keyword:a&&a.toLowerCase()||"table",name:i}},t=e):(cu=t,t=s)):(cu=t,t=s);var o,a,i;return t}())===s&&(t=function(){var r,t,e;r=cu,(t=io())!==s&&da()!==s&&vo()!==s&&da()!==s&&(e=function(){var r,t,e,n,u,o,a,i;if(r=cu,(t=Ku())!==s){for(e=[],n=cu,(u=da())!==s&&(o=ia())!==s&&(a=da())!==s&&(i=Ku())!==s?n=u=[u,o,a,i]:(cu=n,n=s);n!==s;)e.push(n),n=cu,(u=da())!==s&&(o=ia())!==s&&(a=da())!==s&&(i=Ku())!==s?n=u=[u,o,a,i]:(cu=n,n=s);e!==s?(t=c(t,e),r=t):(cu=r,r=s);}else cu=r,r=s;return r}())!==s?((n=e).forEach(r=>r.forEach(r=>r.table&&Ya.add(`rename::${r.db}::${r.table}`))),t={tableList:Array.from(Ya),columnList:Ha(Ba),ast:{type:"rename",table:n}},r=t):(cu=r,r=s);var n;return r}())===s&&(t=function(){var t,e,n;t=cu,(e=function(){var t,e,n,u;t=cu,"call"===r.substr(cu,4).toLowerCase()?(e=r.substr(cu,4),cu+=4):(e=s,0===vu&&wu(xe));e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?(t=e="CALL"):(cu=t,t=s)):(cu=t,t=s);return t}())!==s&&da()!==s&&(n=Ra())!==s?(u=n,e={tableList:Array.from(Ya),columnList:Ha(Ba),ast:{type:"call",expr:u}},t=e):(cu=t,t=s);var u;return t}())===s&&(t=function(){var t,e,n;t=cu,(e=function(){var t,e,n,u;t=cu,"use"===r.substr(cu,3).toLowerCase()?(e=r.substr(cu,3),cu+=3):(e=s,0===vu&&wu(gt));e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?t=e=[e,n]:(cu=t,t=s)):(cu=t,t=s);return t}())!==s&&da()!==s&&(n=gs())!==s?(u=n,Ya.add(`use::${u}::null`),e={tableList:Array.from(Ya),columnList:Ha(Ba),ast:{type:"use",db:u}},t=e):(cu=t,t=s);var u;return t}())===s&&(t=function(){var t,e,n,u;t=cu,(e=function(){var t,e,n,u;t=cu,"alter"===r.substr(cu,5).toLowerCase()?(e=r.substr(cu,5),cu+=5):(e=s,0===vu&&wu(xt));e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?t=e=[e,n]:(cu=t,t=s)):(cu=t,t=s);return t}())!==s&&da()!==s&&vo()!==s&&da()!==s&&(n=Ju())!==s&&da()!==s&&(u=function(){var r,t,e,n,u,o,a,i;if(r=cu,(t=Nu())!==s){for(e=[],n=cu,(u=da())!==s&&(o=ia())!==s&&(a=da())!==s&&(i=Nu())!==s?n=u=[u,o,a,i]:(cu=n,n=s);n!==s;)e.push(n),n=cu,(u=da())!==s&&(o=ia())!==s&&(a=da())!==s&&(i=Nu())!==s?n=u=[u,o,a,i]:(cu=n,n=s);e!==s?(t=c(t,e),r=t):(cu=r,r=s);}else cu=r,r=s;return r}())!==s?(a=u,(o=n)&&o.length>0&&o.forEach(r=>Ya.add(`alter::${r.db}::${r.table}`)),e={tableList:Array.from(Ya),columnList:Ha(Ba),ast:{type:"alter",table:o,expr:a}},t=e):(cu=t,t=s);var o,a;return t}())===s&&(t=function(){var t,e,n,u;t=cu,(e=fo())!==s&&da()!==s?((n=function(){var t,e,n,u;t=cu,"global"===r.substr(cu,6).toLowerCase()?(e=r.substr(cu,6),cu+=6):(e=s,0===vu&&wu(Sn));e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?(t=e="GLOBAL"):(cu=t,t=s)):(cu=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=cu,"session"===r.substr(cu,7).toLowerCase()?(e=r.substr(cu,7),cu+=7):(e=s,0===vu&&wu(In));e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?(t=e="SESSION"):(cu=t,t=s)):(cu=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=cu,"local"===r.substr(cu,5).toLowerCase()?(e=r.substr(cu,5),cu+=5):(e=s,0===vu&&wu(ur));e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?(t=e="LOCAL"):(cu=t,t=s)):(cu=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=cu,"persist"===r.substr(cu,7).toLowerCase()?(e=r.substr(cu,7),cu+=7):(e=s,0===vu&&wu(Nn));e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?(t=e="PERSIST"):(cu=t,t=s)):(cu=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=cu,"persist_only"===r.substr(cu,12).toLowerCase()?(e=r.substr(cu,12),cu+=12):(e=s,0===vu&&wu(Rn));e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?(t=e="PERSIST_ONLY"):(cu=t,t=s)):(cu=t,t=s);return t}()),n===s&&(n=null),n!==s&&da()!==s&&(u=ya())!==s?(o=n,(a=u).keyword=o,e={tableList:Array.from(Ya),columnList:Ha(Ba),ast:{type:"set",expr:a}},t=e):(cu=t,t=s)):(cu=t,t=s);var o,a;return t}())===s&&(t=function(){var t,e,n;t=cu,(e=function(){var t,e,n,u;t=cu,"lock"===r.substr(cu,4).toLowerCase()?(e=r.substr(cu,4),cu+=4):(e=s,0===vu&&wu(S));e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?t=e=[e,n]:(cu=t,t=s)):(cu=t,t=s);return t}())!==s&&da()!==s&&Lo()!==s&&da()!==s&&(n=function(){var r,t,e,n,u,o,a,i;if(r=cu,(t=$u())!==s){for(e=[],n=cu,(u=da())!==s&&(o=ia())!==s&&(a=da())!==s&&(i=$u())!==s?n=u=[u,o,a,i]:(cu=n,n=s);n!==s;)e.push(n),n=cu,(u=da())!==s&&(o=ia())!==s&&(a=da())!==s&&(i=$u())!==s?n=u=[u,o,a,i]:(cu=n,n=s);e!==s?(t=Fa(t,e),r=t):(cu=r,r=s);}else cu=r,r=s;return r}())!==s?(u=n,e={tableList:Array.from(Ya),columnList:Ha(Ba),ast:{type:"lock",keyword:"tables",tables:u}},t=e):(cu=t,t=s);var u;return t}())===s&&(t=function(){var t,e;t=cu,(e=function(){var t,e,n,u;t=cu,"unlock"===r.substr(cu,6).toLowerCase()?(e=r.substr(cu,6),cu+=6):(e=s,0===vu&&wu(Wt));e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?t=e=[e,n]:(cu=t,t=s)):(cu=t,t=s);return t}())!==s&&da()!==s&&Lo()!==s?(e={tableList:Array.from(Ya),columnList:Ha(Ba),ast:{type:"unlock",keyword:"tables"}},t=e):(cu=t,t=s);return t}()),t}function yu(){var t;return (t=Tu())===s&&(t=function(){var r,t,e,n,u;r=cu,(t=no())!==s&&da()!==s&&(e=Ju())!==s&&da()!==s&&fo()!==s&&da()!==s&&(n=function(){var r,t,e,n,u,o,a,i;if(r=cu,(t=cs())!==s){for(e=[],n=cu,(u=da())!==s&&(o=ia())!==s&&(a=da())!==s&&(i=cs())!==s?n=u=[u,o,a,i]:(cu=n,n=s);n!==s;)e.push(n),n=cu,(u=da())!==s&&(o=ia())!==s&&(a=da())!==s&&(i=cs())!==s?n=u=[u,o,a,i]:(cu=n,n=s);e!==s?(t=c(t,e),r=t):(cu=r,r=s);}else cu=r,r=s;return r}())!==s&&da()!==s?((u=us())===s&&(u=null),u!==s?(a=n,i=u,(o=e)&&o.forEach(r=>{const{db:t,as:e,table:n}=r;Ya.add(`update::${t}::${n}`);}),a&&a.forEach(r=>Ba.add(`update::${r.table}::${r.column}`)),t={tableList:Array.from(Ya),columnList:Ha(Ba),ast:{type:"update",table:o,set:a,where:i}},r=t):(cu=r,r=s)):(cu=r,r=s);var o,a,i;return r}())===s&&(t=function(){var r,t,e,n,u,o,a,i;r=cu,(t=bs())!==s&&da()!==s&&(e=lo())!==s&&da()!==s?((n=vo())===s&&(n=null),n!==s&&da()!==s&&(u=es())!==s?((o=fs())===s&&(o=null),o!==s&&da()!==s&&la()!==s&&da()!==s&&(a=function(){var r,t,e,n,u,o,a,i;if(r=cu,(t=Us())!==s){for(e=[],n=cu,(u=da())!==s&&(o=ia())!==s&&(a=da())!==s&&(i=Us())!==s?n=u=[u,o,a,i]:(cu=n,n=s);n!==s;)e.push(n),n=cu,(u=da())!==s&&(o=ia())!==s&&(a=da())!==s&&(i=Us())!==s?n=u=[u,o,a,i]:(cu=n,n=s);e!==s?(t=c(t,e),r=t):(cu=r,r=s);}else cu=r,r=s;return r}())!==s&&da()!==s&&fa()!==s&&da()!==s&&(i=ls())!==s?(t=function(r,t,e,n,u,s,o){if(n&&(Ya.add(`insert::${n.db}::${n.table}`),n.as=null),s){let r=n&&n.table||null;Array.isArray(o)&&o.forEach((r,t)=>{if(r.value.length!=s.length)throw new Error("Error: column count doesn't match value count at row "+(t+1))}),s.forEach(t=>Ba.add(`insert::${r}::${t}`));}const a=e?" "+e.toLowerCase():"";return {tableList:Array.from(Ya),columnList:Ha(Ba),ast:{type:r,prefix:`${t.toLowerCase()}${a}`,table:[n],columns:s,values:o,partition:u}}}(t,e,n,u,o,a,i),r=t):(cu=r,r=s)):(cu=r,r=s)):(cu=r,r=s);return r}())===s&&(t=function(){var t,e,n,u,o,a,i;t=cu,(e=bs())!==s&&da()!==s?((n=lo())===s&&(n=function(){var t,e,n,u;t=cu,"overwrite"===r.substr(cu,9).toLowerCase()?(e=r.substr(cu,9),cu+=9):(e=s,0===vu&&wu(Bt));e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?(t=e="OVERWRITE"):(cu=t,t=s)):(cu=t,t=s);return t}()),n!==s&&da()!==s?((u=vo())===s&&(u=null),u!==s&&da()!==s&&(o=es())!==s&&da()!==s?((a=fs())===s&&(a=null),a!==s&&da()!==s&&(i=ls())!==s?(e=function(r,t,e,n,u,s){n&&(Ya.add(`insert::${n.db}::${n.table}`),Ba.add(`insert::${n.table}::(.*)`),n.as=null);const o=e?" "+e.toLowerCase():"";return {tableList:Array.from(Ya),columnList:Ha(Ba),ast:{type:r,prefix:`${t.toLowerCase()}${o}`,table:[n],columns:null,values:s,partition:u}}}(e,n,u,o,a,i),t=e):(cu=t,t=s)):(cu=t,t=s)):(cu=t,t=s)):(cu=t,t=s);return t}())===s&&(t=function(){var t,e,n,u,o;t=cu,(e=function(){var t,e,n,u;t=cu,"delete"===r.substr(cu,6).toLowerCase()?(e=r.substr(cu,6),cu+=6):(e=s,0===vu&&wu(D));e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?t=e=[e,n]:(cu=t,t=s)):(cu=t,t=s);return t}())!==s&&da()!==s?((n=Ju())===s&&(n=null),n!==s&&da()!==s&&(u=Vu())!==s&&da()!==s?((o=us())===s&&(o=null),o!==s?(e=function(r,t,e){if(t&&t.forEach(r=>{r.table&&Ya.add(`delete::${r.db}::${r.table}`),Ba.add(`delete::${r.table}::(.*)`);}),null===r&&1===t.length){const e=t[0];r=[{db:e.db,table:e.table,as:e.as,addition:!0}];}return {tableList:Array.from(Ya),columnList:Ha(Ba),ast:{type:"delete",table:r,from:t,where:e}}}(n,u,o),t=e):(cu=t,t=s)):(cu=t,t=s)):(cu=t,t=s);return t}())===s&&(t=Au())===s&&(t=function(){var r,t;r=[],t=Aa();for(;t!==s;)r.push(t),t=Aa();return r}()),t}function Tu(){var r,t,e,n,u,o,a,i,c,l;if(r=cu,(t=Fu())!==s){for(e=[],n=cu,(u=da())!==s&&(o=Eo())!==s&&(a=da())!==s?((i=mo())===s&&(i=null),i!==s&&(c=da())!==s&&(l=Fu())!==s?n=u=[u,o,a,i,c,l]:(cu=n,n=s)):(cu=n,n=s);n!==s;)e.push(n),n=cu,(u=da())!==s&&(o=Eo())!==s&&(a=da())!==s?((i=mo())===s&&(i=null),i!==s&&(c=da())!==s&&(l=Fu())!==s?n=u=[u,o,a,i,c,l]:(cu=n,n=s)):(cu=n,n=s);e!==s&&(n=da())!==s?((u=ss())===s&&(u=null),u!==s&&(o=da())!==s?((a=is())===s&&(a=null),a!==s?(r=t=function(r,t,e,n){t.forEach(r=>r.slice(1,1));let u=r;for(let r=0;r<t.length;r++)u._next=t[r][5],u.union=t[r][3]?"union all":"union",u=u._next;return e&&(r._orderby=e),n&&(r._limit=n),{tableList:Array.from(Ya),columnList:Ha(Ba),ast:r}}(t,e,u,a)):(cu=r,r=s)):(cu=r,r=s)):(cu=r,r=s);}else cu=r,r=s;return r}function mu(){var t;return (t=Iu())===s&&(t=Ou())===s&&(t=gu())===s&&(t=function(){var t;(t=function(){var t,e,n,u,o,a;t=cu,(e=xu())===s&&(e=null);e!==s&&da()!==s?("primary key"===r.substr(cu,11).toLowerCase()?(n=r.substr(cu,11),cu+=11):(n=s,0===vu&&wu(_)),n!==s&&da()!==s?((u=qu())===s&&(u=null),u!==s&&da()!==s&&(o=Hu())!==s&&da()!==s?((a=Zu())===s&&(a=null),a!==s?(c=n,l=u,f=o,b=a,e={constraint:(i=e)&&i.constraint,definition:f,constraint_type:c.toLowerCase(),keyword:i&&i.keyword,index_type:l,resource:"constraint",index_options:b},t=e):(cu=t,t=s)):(cu=t,t=s)):(cu=t,t=s)):(cu=t,t=s);var i,c,l,f,b;return t}())===s&&(t=function(){var t,e,n,u,o,a,i,c;t=cu,(e=xu())===s&&(e=null);e!==s&&da()!==s&&(n=function(){var t,e,n,u;t=cu,"unique"===r.substr(cu,6).toLowerCase()?(e=r.substr(cu,6),cu+=6):(e=s,0===vu&&wu(f));e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?(t=e="UNIQUE"):(cu=t,t=s)):(cu=t,t=s);return t}())!==s&&da()!==s?((u=ua())===s&&(u=sa()),u===s&&(u=null),u!==s&&da()!==s?((o=Us())===s&&(o=null),o!==s&&da()!==s?((a=qu())===s&&(a=null),a!==s&&da()!==s&&(i=Hu())!==s&&da()!==s?((c=Zu())===s&&(c=null),c!==s?(b=n,v=u,d=o,L=a,C=i,p=c,e={constraint:(l=e)&&l.constraint,definition:C,constraint_type:v&&`${b.toLowerCase()} ${v.toLowerCase()}`||b.toLowerCase(),keyword:l&&l.keyword,index_type:L,index:d,resource:"constraint",index_options:p},t=e):(cu=t,t=s)):(cu=t,t=s)):(cu=t,t=s)):(cu=t,t=s)):(cu=t,t=s);var l,b,v,d,L,C,p;return t}())===s&&(t=function(){var t,e,n,u,o,a;t=cu,(e=xu())===s&&(e=null);e!==s&&da()!==s?("foreign key"===r.substr(cu,11).toLowerCase()?(n=r.substr(cu,11),cu+=11):(n=s,0===vu&&wu(O)),n!==s&&da()!==s?((u=Us())===s&&(u=null),u!==s&&da()!==s&&(o=Hu())!==s&&da()!==s?((a=Uu())===s&&(a=null),a!==s?(c=n,l=u,f=o,b=a,e={constraint:(i=e)&&i.constraint,definition:f,constraint_type:c,keyword:i&&i.keyword,index:l,resource:"constraint",reference_definition:b},t=e):(cu=t,t=s)):(cu=t,t=s)):(cu=t,t=s)):(cu=t,t=s);var i,c,l,f,b;return t}());return t}()),t}function Su(){var t,e,n,u,o,a;return t=cu,(e=function(){var e;(e=function(){var t,e,n,u;t=cu,"not null"===r.substr(cu,8).toLowerCase()?(e=r.substr(cu,8),cu+=8):(e=s,0===vu&&wu(It));e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?t=e=[e,n]:(cu=t,t=s)):(cu=t,t=s);return t}())!==s&&(e={type:"not null",value:"not null"});return e}())===s&&(e=js()),e!==s&&((a=e)&&!a.value&&(a.value="null"),e={nullable:a}),(t=e)===s&&(t=cu,(e=function(){var r,t;r=cu,ro()!==s&&da()!==s?((t=Hs())===s&&(t=ws()),t!==s?(r={type:"default",value:t}):(cu=r,r=s)):(cu=r,r=s);return r}())!==s&&(e={default_val:e}),(t=e)===s&&(t=cu,"auto_increment"===r.substr(cu,14).toLowerCase()?(e=r.substr(cu,14),cu+=14):(e=s,0===vu&&wu(l)),e!==s&&(e={auto_increment:e.toLowerCase()}),(t=e)===s&&(t=cu,e=cu,"unique"===r.substr(cu,6).toLowerCase()?(n=r.substr(cu,6),cu+=6):(n=s,0===vu&&wu(f)),n!==s&&(u=da())!==s?("key"===r.substr(cu,3).toLowerCase()?(o=r.substr(cu,3),cu+=3):(o=s,0===vu&&wu(b)),o===s&&(o=null),o!==s?e=n=[n,u,o]:(cu=e,e=s)):(cu=e,e=s),e===s&&(e=cu,"primary"===r.substr(cu,7).toLowerCase()?(n=r.substr(cu,7),cu+=7):(n=s,0===vu&&wu(v)),n===s&&(n=null),n!==s&&(u=da())!==s?("key"===r.substr(cu,3).toLowerCase()?(o=r.substr(cu,3),cu+=3):(o=s,0===vu&&wu(b)),o!==s?e=n=[n,u,o]:(cu=e,e=s)):(cu=e,e=s)),e!==s&&(e=function(r){const t=[];return r&&t.push(r[0],r[2]),{unique_or_primary:t.filter(r=>r).join(" ").toLowerCase("")}}(e)),(t=e)===s&&(t=cu,(e=pa())!==s&&(e={comment:e}),(t=e)===s&&(t=cu,(e=function(){var t,e;t=cu,function(){var t,e,n,u;t=cu,"collate"===r.substr(cu,7).toLowerCase()?(e=r.substr(cu,7),cu+=7):(e=s,0===vu&&wu(X));e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?(t=e="COLLATE"):(cu=t,t=s)):(cu=t,t=s);return t}()!==s&&da()!==s&&(e=Ms())!==s?(t={type:"collate",value:e}):(cu=t,t=s);return t}())!==s&&(e={collate:e}),(t=e)===s&&(t=cu,(e=function(){var t,e,n;t=cu,"column_format"===r.substr(cu,13).toLowerCase()?(e=r.substr(cu,13),cu+=13):(e=s,0===vu&&wu(d));e!==s&&da()!==s?("fixed"===r.substr(cu,5).toLowerCase()?(n=r.substr(cu,5),cu+=5):(n=s,0===vu&&wu(L)),n===s&&("dynamic"===r.substr(cu,7).toLowerCase()?(n=r.substr(cu,7),cu+=7):(n=s,0===vu&&wu(C)),n===s&&("default"===r.substr(cu,7).toLowerCase()?(n=r.substr(cu,7),cu+=7):(n=s,0===vu&&wu(p)))),n!==s?(e=function(r,t){return {type:"column_format",value:t.toLowerCase()}}(0,n),t=e):(cu=t,t=s)):(cu=t,t=s);return t}())!==s&&(e={column_format:e}),(t=e)===s&&(t=cu,(e=function(){var t,e,n;t=cu,"storage"===r.substr(cu,7).toLowerCase()?(e=r.substr(cu,7),cu+=7):(e=s,0===vu&&wu(w));e!==s&&da()!==s?("disk"===r.substr(cu,4).toLowerCase()?(n=r.substr(cu,4),cu+=4):(n=s,0===vu&&wu(E)),n===s&&("memory"===r.substr(cu,6).toLowerCase()?(n=r.substr(cu,6),cu+=6):(n=s,0===vu&&wu(h))),n!==s?(e={type:"storage",value:n.toLowerCase()},t=e):(cu=t,t=s)):(cu=t,t=s);return t}())!==s&&(e={storage:e}),(t=e)===s&&(t=cu,(e=Uu())!==s&&(e={reference_definition:e}),t=e)))))))),t}function Iu(){var r,t,e,n,u,o,a;return r=cu,(t=Os())!==s&&da()!==s&&(e=xa())!==s&&da()!==s?((n=function(){var r,t,e,n,u,o;if(r=cu,(t=Su())!==s)if(da()!==s){for(e=[],n=cu,(u=da())!==s&&(o=Su())!==s?n=u=[u,o]:(cu=n,n=s);n!==s;)e.push(n),n=cu,(u=da())!==s&&(o=Su())!==s?n=u=[u,o]:(cu=n,n=s);e!==s?(r=t=function(r,t){let e=r;for(let r=0;r<t.length;r++)e={...e,...t[r][1]};return e}(t,e)):(cu=r,r=s);}else cu=r,r=s;else cu=r,r=s;return r}())===s&&(n=null),n!==s?(u=t,o=e,a=n,Ba.add(`create::${u.table}::${u.column}`),r=t={column:u,definition:o,resource:"column",...a||{}}):(cu=r,r=s)):(cu=r,r=s),r}function Nu(){var r;return (r=function(){var r,t,e,n;r=cu,(t=ea())!==s&&da()!==s?((e=na())===s&&(e=null),e!==s&&da()!==s&&(n=Iu())!==s?(u=e,o=n,t={action:"add",...o,keyword:u,resource:"column",type:"alter"},r=t):(cu=r,r=s)):(cu=r,r=s);var u,o;return r}())===s&&(r=function(){var r,t,e;r=cu,eo()!==s&&da()!==s?((t=na())===s&&(t=null),t!==s&&da()!==s&&(e=Os())!==s?(r={action:"drop",column:e,keyword:t,resource:"column",type:"alter"}):(cu=r,r=s)):(cu=r,r=s);return r}())===s&&(r=function(){var r,t,e;r=cu,(t=ea())!==s&&da()!==s&&(e=Ou())!==s?(n=e,t={action:"add",type:"alter",...n},r=t):(cu=r,r=s);var n;return r}())===s&&(r=function(){var r,t,e;r=cu,(t=ea())!==s&&da()!==s&&(e=gu())!==s?(n=e,t={action:"add",type:"alter",...n},r=t):(cu=r,r=s);var n;return r}())===s&&(r=function(){var r,t,e,n;r=cu,(t=io())!==s&&da()!==s?((e=to())===s&&(e=bo()),e===s&&(e=null),e!==s&&da()!==s&&(n=gs())!==s?(o=n,t={action:"rename",type:"alter",resource:"table",keyword:(u=e)&&u[0].toLowerCase(),table:o},r=t):(cu=r,r=s)):(cu=r,r=s);var u,o;return r}())===s&&(r=Ru())===s&&(r=_u()),r}function Ru(){var t,e,n,u;return t=cu,"algorithm"===r.substr(cu,9).toLowerCase()?(e=r.substr(cu,9),cu+=9):(e=s,0===vu&&wu(A)),e!==s&&da()!==s?((n=ta())===s&&(n=null),n!==s&&da()!==s?("default"===r.substr(cu,7).toLowerCase()?(u=r.substr(cu,7),cu+=7):(u=s,0===vu&&wu(p)),u===s&&("instant"===r.substr(cu,7).toLowerCase()?(u=r.substr(cu,7),cu+=7):(u=s,0===vu&&wu(y)),u===s&&("inplace"===r.substr(cu,7).toLowerCase()?(u=r.substr(cu,7),cu+=7):(u=s,0===vu&&wu(T)),u===s&&("copy"===r.substr(cu,4).toLowerCase()?(u=r.substr(cu,4),cu+=4):(u=s,0===vu&&wu(m))))),u!==s?(t=e={type:"alter",keyword:"algorithm",resource:"algorithm",symbol:n,algorithm:u}):(cu=t,t=s)):(cu=t,t=s)):(cu=t,t=s),t}function _u(){var t,e,n,u;return t=cu,"lock"===r.substr(cu,4).toLowerCase()?(e=r.substr(cu,4),cu+=4):(e=s,0===vu&&wu(S)),e!==s&&da()!==s?((n=ta())===s&&(n=null),n!==s&&da()!==s?("default"===r.substr(cu,7).toLowerCase()?(u=r.substr(cu,7),cu+=7):(u=s,0===vu&&wu(p)),u===s&&("none"===r.substr(cu,4).toLowerCase()?(u=r.substr(cu,4),cu+=4):(u=s,0===vu&&wu(I)),u===s&&("shared"===r.substr(cu,6).toLowerCase()?(u=r.substr(cu,6),cu+=6):(u=s,0===vu&&wu(N)),u===s&&("exclusive"===r.substr(cu,9).toLowerCase()?(u=r.substr(cu,9),cu+=9):(u=s,0===vu&&wu(R))))),u!==s?(t=e={type:"alter",keyword:"lock",resource:"lock",symbol:n,lock:u}):(cu=t,t=s)):(cu=t,t=s)):(cu=t,t=s),t}function Ou(){var r,t,e,n,u,o,a,i;return r=cu,(t=ua())===s&&(t=sa()),t!==s&&da()!==s?((e=Us())===s&&(e=null),e!==s&&da()!==s?((n=qu())===s&&(n=null),n!==s&&da()!==s&&(u=Hu())!==s&&da()!==s?((o=Zu())===s&&(o=null),o!==s&&da()!==s?(a=n,i=o,r=t={index:e,definition:u,keyword:t.toLowerCase(),index_type:a,resource:"index",index_options:i}):(cu=r,r=s)):(cu=r,r=s)):(cu=r,r=s)):(cu=r,r=s),r}function gu(){var t,e,n,u,o,a,i,c,l;return t=cu,(e=function(){var t,e,n,u;t=cu,"fulltext"===r.substr(cu,8).toLowerCase()?(e=r.substr(cu,8),cu+=8):(e=s,0===vu&&wu(Fn));e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?(t=e="FULLTEXT"):(cu=t,t=s)):(cu=t,t=s);return t}())===s&&(e=function(){var t,e,n,u;t=cu,"spatial"===r.substr(cu,7).toLowerCase()?(e=r.substr(cu,7),cu+=7):(e=s,0===vu&&wu(Pn));e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?(t=e="SPATIAL"):(cu=t,t=s)):(cu=t,t=s);return t}()),e!==s&&da()!==s?((n=ua())===s&&(n=sa()),n===s&&(n=null),n!==s&&da()!==s?((u=Us())===s&&(u=null),u!==s&&da()!==s&&(o=Hu())!==s&&da()!==s?((a=Zu())===s&&(a=null),a!==s&&da()!==s?(i=e,l=a,t=e={index:u,definition:o,keyword:(c=n)&&`${i.toLowerCase()} ${c.toLowerCase()}`||i.toLowerCase(),index_options:l,resource:"index"}):(cu=t,t=s)):(cu=t,t=s)):(cu=t,t=s)):(cu=t,t=s),t}function xu(){var t,e,n,u;return t=cu,(e=function(){var t,e,n,u;t=cu,"constraint"===r.substr(cu,10).toLowerCase()?(e=r.substr(cu,10),cu+=10):(e=s,0===vu&&wu(Hn));e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?(t=e="CONSTRAINT"):(cu=t,t=s)):(cu=t,t=s);return t}())!==s&&da()!==s?((n=gs())===s&&(n=null),n!==s?(u=n,t=e={keyword:e.toLowerCase(),constraint:u}):(cu=t,t=s)):(cu=t,t=s),t}function Uu(){var t,e,n,u,o,a,i,c,l,f;return t=cu,(e=function(){var t,e,n,u;t=cu,"references"===r.substr(cu,10).toLowerCase()?(e=r.substr(cu,10),cu+=10):(e=s,0===vu&&wu(jn));e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?(t=e="REFERENCES"):(cu=t,t=s)):(cu=t,t=s);return t}())!==s&&da()!==s&&(n=Ju())!==s&&da()!==s&&(u=Hu())!==s&&da()!==s?("match full"===r.substr(cu,10).toLowerCase()?(o=r.substr(cu,10),cu+=10):(o=s,0===vu&&wu(g)),o===s&&("match partial"===r.substr(cu,13).toLowerCase()?(o=r.substr(cu,13),cu+=13):(o=s,0===vu&&wu(x)),o===s&&("match simple"===r.substr(cu,12).toLowerCase()?(o=r.substr(cu,12),cu+=12):(o=s,0===vu&&wu(U)))),o===s&&(o=null),o!==s&&da()!==s?((a=Mu())===s&&(a=null),a!==s&&da()!==s?((i=Mu())===s&&(i=null),i!==s?(c=o,l=a,f=i,t=e={definition:u,table:n,keyword:e.toLowerCase(),match:c&&c.toLowerCase(),on_delete:l,on_update:f}):(cu=t,t=s)):(cu=t,t=s)):(cu=t,t=s)):(cu=t,t=s),t}function Mu(){var t,e,n,u,o,a;return t=cu,"on"===r.substr(cu,2).toLowerCase()?(e=r.substr(cu,2),cu+=2):(e=s,0===vu&&wu(M)),e!==s&&da()!==s?("delete"===r.substr(cu,6).toLowerCase()?(n=r.substr(cu,6),cu+=6):(n=s,0===vu&&wu(D)),n===s&&("update"===r.substr(cu,6).toLowerCase()?(n=r.substr(cu,6),cu+=6):(n=s,0===vu&&wu(k))),n!==s&&da()!==s&&(u=function(){var e;"restrict"===r.substr(cu,8).toLowerCase()?(e=r.substr(cu,8),cu+=8):(e=s,0===vu&&wu($));e===s&&("cascade"===r.substr(cu,7).toLowerCase()?(e=r.substr(cu,7),cu+=7):(e=s,0===vu&&wu(F)),e===s&&("set null"===r.substr(cu,8).toLowerCase()?(e=r.substr(cu,8),cu+=8):(e=s,0===vu&&wu(P)),e===s&&("no action"===r.substr(cu,9).toLowerCase()?(e=r.substr(cu,9),cu+=9):(e=s,0===vu&&wu(G)),e===s&&("set default"===r.substr(cu,11).toLowerCase()?(e=r.substr(cu,11),cu+=11):(e=s,0===vu&&wu(H))))));e!==s&&(e=e.toLowerCase());return e}())!==s?(o=n,a=u,t=e={type:`${e.toLowerCase()} ${o.toLowerCase()}`,value:a}):(cu=t,t=s)):(cu=t,t=s),t}function Du(){var t,e,n,u,o,a,i,c,l;return t=cu,(e=ro())===s&&(e=null),e!==s&&da()!==s?((n=function(){var t,e,n;return t=cu,"character"===r.substr(cu,9).toLowerCase()?(e=r.substr(cu,9),cu+=9):(e=s,0===vu&&wu(j)),e!==s&&da()!==s?("set"===r.substr(cu,3).toLowerCase()?(n=r.substr(cu,3),cu+=3):(n=s,0===vu&&wu(Y)),n!==s?(t=e="CHARACTER SET"):(cu=t,t=s)):(cu=t,t=s),t}())===s&&("charset"===r.substr(cu,7).toLowerCase()?(n=r.substr(cu,7),cu+=7):(n=s,0===vu&&wu(B)),n===s&&("collate"===r.substr(cu,7).toLowerCase()?(n=r.substr(cu,7),cu+=7):(n=s,0===vu&&wu(X)))),n!==s&&da()!==s?((u=ta())===s&&(u=null),u!==s&&da()!==s&&(o=Ms())!==s?(i=n,c=u,l=o,t=e={keyword:(a=e)&&`${a[0].toLowerCase()} ${i.toLowerCase()}`||i.toLowerCase(),symbol:c,value:l}):(cu=t,t=s)):(cu=t,t=s)):(cu=t,t=s),t}function ku(){var t,e,n,u,o,a,i,c,f;return t=cu,"auto_increment"===r.substr(cu,14).toLowerCase()?(e=r.substr(cu,14),cu+=14):(e=s,0===vu&&wu(l)),e===s&&("avg_row_length"===r.substr(cu,14).toLowerCase()?(e=r.substr(cu,14),cu+=14):(e=s,0===vu&&wu(W)),e===s&&("key_block_size"===r.substr(cu,14).toLowerCase()?(e=r.substr(cu,14),cu+=14):(e=s,0===vu&&wu(V)),e===s&&("max_rows"===r.substr(cu,8).toLowerCase()?(e=r.substr(cu,8),cu+=8):(e=s,0===vu&&wu(K)),e===s&&("min_rows"===r.substr(cu,8).toLowerCase()?(e=r.substr(cu,8),cu+=8):(e=s,0===vu&&wu(q)),e===s&&("stats_sample_pages"===r.substr(cu,18).toLowerCase()?(e=r.substr(cu,18),cu+=18):(e=s,0===vu&&wu(Z))))))),e!==s&&da()!==s?((n=ta())===s&&(n=null),n!==s&&da()!==s&&(u=Vs())!==s?(c=n,f=u,t=e={keyword:e.toLowerCase(),symbol:c,value:f.value}):(cu=t,t=s)):(cu=t,t=s),t===s&&(t=Du())===s&&(t=cu,(e=oa())===s&&("connection"===r.substr(cu,10).toLowerCase()?(e=r.substr(cu,10),cu+=10):(e=s,0===vu&&wu(z))),e!==s&&da()!==s?((n=ta())===s&&(n=null),n!==s&&da()!==s&&(u=Ys())!==s?(t=e=function(r,t,e){return {keyword:r.toLowerCase(),symbol:t,value:`'${e.value}'`}}(e,n,u)):(cu=t,t=s)):(cu=t,t=s),t===s&&(t=cu,"compression"===r.substr(cu,11).toLowerCase()?(e=r.substr(cu,11),cu+=11):(e=s,0===vu&&wu(J)),e!==s&&da()!==s?((n=ta())===s&&(n=null),n!==s&&da()!==s?(u=cu,39===r.charCodeAt(cu)?(o="'",cu++):(o=s,0===vu&&wu(Q)),o!==s?("zlib"===r.substr(cu,4).toLowerCase()?(a=r.substr(cu,4),cu+=4):(a=s,0===vu&&wu(rr)),a===s&&("lz4"===r.substr(cu,3).toLowerCase()?(a=r.substr(cu,3),cu+=3):(a=s,0===vu&&wu(tr)),a===s&&("none"===r.substr(cu,4).toLowerCase()?(a=r.substr(cu,4),cu+=4):(a=s,0===vu&&wu(I)))),a!==s?(39===r.charCodeAt(cu)?(i="'",cu++):(i=s,0===vu&&wu(Q)),i!==s?u=o=[o,a,i]:(cu=u,u=s)):(cu=u,u=s)):(cu=u,u=s),u!==s?(t=e=function(r,t,e){return {keyword:r.toLowerCase(),symbol:t,value:e.join("").toUpperCase()}}(e,n,u)):(cu=t,t=s)):(cu=t,t=s)):(cu=t,t=s),t===s&&(t=cu,"engine"===r.substr(cu,6).toLowerCase()?(e=r.substr(cu,6),cu+=6):(e=s,0===vu&&wu(er)),e!==s&&da()!==s?((n=ta())===s&&(n=null),n!==s&&da()!==s&&(u=Ms())!==s?(t=e=function(r,t,e){return {keyword:r.toLowerCase(),symbol:t,value:e.toUpperCase()}}(e,n,u)):(cu=t,t=s)):(cu=t,t=s)))),t}function $u(){var t,e,n,u,o;return t=cu,(e=rs())!==s&&da()!==s&&(n=function(){var t,e,n;return t=cu,"read"===r.substr(cu,4).toLowerCase()?(e=r.substr(cu,4),cu+=4):(e=s,0===vu&&wu(nr)),e!==s&&da()!==s?("local"===r.substr(cu,5).toLowerCase()?(n=r.substr(cu,5),cu+=5):(n=s,0===vu&&wu(ur)),n===s&&(n=null),n!==s?(t=e={type:"read",suffix:n&&"local"}):(cu=t,t=s)):(cu=t,t=s),t===s&&(t=cu,"low_priority"===r.substr(cu,12).toLowerCase()?(e=r.substr(cu,12),cu+=12):(e=s,0===vu&&wu(sr)),e===s&&(e=null),e!==s&&da()!==s?("write"===r.substr(cu,5).toLowerCase()?(n=r.substr(cu,5),cu+=5):(n=s,0===vu&&wu(or)),n!==s?(t=e={type:"write",prefix:e&&"low_priority"}):(cu=t,t=s)):(cu=t,t=s)),t}())!==s?(u=e,o=n,Ya.add(`lock::${u.db}::${u.table}`),t=e={table:u,lock_type:o}):(cu=t,t=s),t}function Fu(){var t,e,n,u,o,a,i;return (t=ju())===s&&(t=cu,e=cu,40===r.charCodeAt(cu)?(n="(",cu++):(n=s,0===vu&&wu(ar)),n!==s&&(u=da())!==s&&(o=Fu())!==s&&(a=da())!==s?(41===r.charCodeAt(cu)?(i=")",cu++):(i=s,0===vu&&wu(ir)),i!==s?e=n=[n,u,o,a,i]:(cu=e,e=s)):(cu=e,e=s),e!==s&&(e={...e[2],parentheses_symbol:!0}),t=e),t}function Pu(){var t,e,n,u,o,a,i,l,f;if(t=cu,yo()!==s)if(da()!==s)if((e=Gu())!==s){for(n=[],u=cu,(o=da())!==s&&(a=ia())!==s&&(i=da())!==s&&(l=Gu())!==s?u=o=[o,a,i,l]:(cu=u,u=s);u!==s;)n.push(u),u=cu,(o=da())!==s&&(a=ia())!==s&&(i=da())!==s&&(l=Gu())!==s?u=o=[o,a,i,l]:(cu=u,u=s);n!==s?(t=c(e,n)):(cu=t,t=s);}else cu=t,t=s;else cu=t,t=s;else cu=t,t=s;return t===s&&(t=cu,da()!==s&&yo()!==s&&(e=da())!==s&&(n=function(){var t,e,n,u;t=cu,"RECURSIVE"===r.substr(cu,9)?(e="RECURSIVE",cu+=9):(e=s,0===vu&&wu(Ft));e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?t=e=[e,n]:(cu=t,t=s)):(cu=t,t=s);return t}())!==s&&(u=da())!==s&&(o=Gu())!==s?((f=o).recursive=!0,t=[f]):(cu=t,t=s)),t}function Gu(){var r,t,e,n,u;return r=cu,(t=Ys())===s&&(t=Ms()),t!==s&&da()!==s?((e=Hu())===s&&(e=null),e!==s&&da()!==s&&bo()!==s&&da()!==s&&la()!==s&&da()!==s&&(n=Tu())!==s&&da()!==s&&fa()!==s?("string"==typeof(u=t)&&(u={type:"default",value:u}),r=t={name:u,stmt:n,columns:e}):(cu=r,r=s)):(cu=r,r=s),r}function Hu(){var r,t,e,n,u,o,a,i;if(r=cu,la()!==s)if(da()!==s)if((t=Us())!==s){for(e=[],n=cu,(u=da())!==s&&(o=ia())!==s&&(a=da())!==s&&(i=Us())!==s?n=u=[u,o,a,i]:(cu=n,n=s);n!==s;)e.push(n),n=cu,(u=da())!==s&&(o=ia())!==s&&(a=da())!==s&&(i=Us())!==s?n=u=[u,o,a,i]:(cu=n,n=s);e!==s&&(n=da())!==s&&(u=fa())!==s?(r=c(t,e)):(cu=r,r=s);}else cu=r,r=s;else cu=r,r=s;else cu=r,r=s;return r}function ju(){var t,e,n,u,o,a,i,c,l,f,b;return t=cu,da()!==s?((e=Pu())===s&&(e=null),e!==s&&da()!==s&&function(){var t,e,n,u;t=cu,"select"===r.substr(cu,6).toLowerCase()?(e=r.substr(cu,6),cu+=6):(e=s,0===vu&&wu(Ut));e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?t=e=[e,n]:(cu=t,t=s)):(cu=t,t=s);return t}()!==s&&La()!==s?((n=function(){var r,t,e,n,u,o;if(r=cu,(t=Yu())!==s){for(e=[],n=cu,(u=da())!==s&&(o=Yu())!==s?n=u=[u,o]:(cu=n,n=s);n!==s;)e.push(n),n=cu,(u=da())!==s&&(o=Yu())!==s?n=u=[u,o]:(cu=n,n=s);e!==s?(t=function(r,t){const e=[r];for(let r=0,n=t.length;r<n;++r)e.push(t[r][1]);return e}(t,e),r=t):(cu=r,r=s);}else cu=r,r=s;return r}())===s&&(n=null),n!==s&&da()!==s?((u=So())===s&&(u=null),u!==s&&da()!==s&&(o=Bu())!==s&&da()!==s?((a=Vu())===s&&(a=null),a!==s&&da()!==s?((i=us())===s&&(i=null),i!==s&&da()!==s?((c=function(){var t,e,n;t=cu,(e=function(){var t,e,n,u;t=cu,"group"===r.substr(cu,5).toLowerCase()?(e=r.substr(cu,5),cu+=5):(e=s,0===vu&&wu(ce));e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?t=e=[e,n]:(cu=t,t=s)):(cu=t,t=s);return t}())!==s&&da()!==s&&To()!==s&&da()!==s&&(n=ds())!==s?(e=n.value,t=e):(cu=t,t=s);return t}())===s&&(c=null),c!==s&&da()!==s?((l=function(){var t,e;t=cu,function(){var t,e,n,u;t=cu,"having"===r.substr(cu,6).toLowerCase()?(e=r.substr(cu,6),cu+=6):(e=s,0===vu&&wu(be));e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?t=e=[e,n]:(cu=t,t=s)):(cu=t,t=s);return t}()!==s&&da()!==s&&(e=ws())!==s?(t=e):(cu=t,t=s);return t}())===s&&(l=null),l!==s&&da()!==s?((f=ss())===s&&(f=null),f!==s&&da()!==s?((b=is())===s&&(b=null),b!==s?(t=function(r,t,e,n,u,s,o,a,i,c){return u&&u.forEach(r=>r.table&&Ya.add(`select::${r.db}::${r.table}`)),{with:r,type:"select",options:t,distinct:e,columns:n,from:u,where:s,groupby:o,having:a,orderby:i,limit:c}}(e,n,u,o,a,i,c,l,f,b)):(cu=t,t=s)):(cu=t,t=s)):(cu=t,t=s)):(cu=t,t=s)):(cu=t,t=s)):(cu=t,t=s)):(cu=t,t=s)):(cu=t,t=s)):(cu=t,t=s)):(cu=t,t=s),t}function Yu(){var e;return (e=function(){var t;"sql_calc_found_rows"===r.substr(cu,19).toLowerCase()?(t=r.substr(cu,19),cu+=19):(t=s,0===vu&&wu(Yn));return t}())===s&&((e=function(){var t;"sql_cache"===r.substr(cu,9).toLowerCase()?(t=r.substr(cu,9),cu+=9):(t=s,0===vu&&wu(Bn));return t}())===s&&(e=function(){var t;"sql_no_cache"===r.substr(cu,12).toLowerCase()?(t=r.substr(cu,12),cu+=12):(t=s,0===vu&&wu(Xn));return t}()),e===s&&(e=function(){var t;"sql_big_result"===r.substr(cu,14).toLowerCase()?(t=r.substr(cu,14),cu+=14):(t=s,0===vu&&wu(Vn));return t}())===s&&(e=function(){var t;"sql_small_result"===r.substr(cu,16).toLowerCase()?(t=r.substr(cu,16),cu+=16):(t=s,0===vu&&wu(Wn));return t}())===s&&(e=function(){var t;"sql_buffer_result"===r.substr(cu,17).toLowerCase()?(t=r.substr(cu,17),cu+=17):(t=s,0===vu&&wu(Kn));return t}())),e!==s&&(e=e),e}function Bu(){var r,t,e,n,u,o,a,i,l,f;if(r=cu,(t=mo())===s&&(t=cu,(e=ca())!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?t=e=[e,n]:(cu=t,t=s)):(cu=t,t=s),t===s&&(t=ca())),t!==s){for(e=[],n=cu,(u=da())!==s&&(o=ia())!==s&&(a=da())!==s&&(i=Xu())!==s?n=u=[u,o,a,i]:(cu=n,n=s);n!==s;)e.push(n),n=cu,(u=da())!==s&&(o=ia())!==s&&(a=da())!==s&&(i=Xu())!==s?n=u=[u,o,a,i]:(cu=n,n=s);e!==s?(l=t,f=e,Ba.add("select::null::(.*)"),r=t=f&&f.length>0?(l[0]={expr:{type:"column_ref",table:null,column:"*"},as:null},Fa(l[0],f)):l[0]):(cu=r,r=s);}else cu=r,r=s;if(r===s)if(r=cu,(t=Xu())!==s){for(e=[],n=cu,(u=da())!==s&&(o=ia())!==s&&(a=da())!==s&&(i=Xu())!==s?n=u=[u,o,a,i]:(cu=n,n=s);n!==s;)e.push(n),n=cu,(u=da())!==s&&(o=ia())!==s&&(a=da())!==s&&(i=Xu())!==s?n=u=[u,o,a,i]:(cu=n,n=s);e!==s?(r=t=c(t,e)):(cu=r,r=s);}else cu=r,r=s;return r}function Xu(){var r,t,e,n;return r=cu,(t=gs())!==s&&da()!==s&&(e=aa())!==s&&da()!==s&&ca()!==s?(n=t,Ba.add(`select::${n}::(.*)`),r=t={expr:{type:"column_ref",table:n,column:"*"},as:null}):(cu=r,r=s),r===s&&(r=cu,(t=ws())!==s&&da()!==s?((e=Wu())===s&&(e=null),e!==s?(r=t={expr:t,as:e}):(cu=r,r=s)):(cu=r,r=s)),r}function Wu(){var r,t,e;return r=cu,(t=bo())!==s&&da()!==s&&(e=function(){var r,t;r=cu,(t=Ms())!==s?((function(r){if(!0===Ma[r.toUpperCase()])throw new Error("Error: "+JSON.stringify(r)+" is a reserved word, can not as alias clause");return !1}(t)?s:void 0)!==s?(r=t=t):(cu=r,r=s)):(cu=r,r=s);r===s&&(r=cu,(t=xs())!==s&&(t=t),r=t);return r}())!==s?(r=t=e):(cu=r,r=s),r===s&&(r=cu,(t=bo())===s&&(t=null),t!==s&&da()!==s&&(e=gs())!==s?(r=t=e):(cu=r,r=s)),r}function Vu(){var t,e;return t=cu,function(){var t,e,n,u;t=cu,"from"===r.substr(cu,4).toLowerCase()?(e=r.substr(cu,4),cu+=4):(e=s,0===vu&&wu(Xt));e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?t=e=[e,n]:(cu=t,t=s)):(cu=t,t=s);return t}()!==s&&da()!==s&&(e=Ju())!==s?(t=e):(cu=t,t=s),t}function Ku(){var r,t,e;return r=cu,(t=es())!==s&&da()!==s&&to()!==s&&da()!==s&&(e=es())!==s?(r=t=[t,e]):(cu=r,r=s),r}function qu(){var t,e;return t=cu,Ao()!==s&&da()!==s?("btree"===r.substr(cu,5).toLowerCase()?(e=r.substr(cu,5),cu+=5):(e=s,0===vu&&wu(cr)),e===s&&("hash"===r.substr(cu,4).toLowerCase()?(e=r.substr(cu,4),cu+=4):(e=s,0===vu&&wu(lr))),e!==s?(t={keyword:"using",type:e.toLowerCase()}):(cu=t,t=s)):(cu=t,t=s),t}function Zu(){var r,t,e,n,u,o;if(r=cu,(t=zu())!==s){for(e=[],n=cu,(u=da())!==s&&(o=zu())!==s?n=u=[u,o]:(cu=n,n=s);n!==s;)e.push(n),n=cu,(u=da())!==s&&(o=zu())!==s?n=u=[u,o]:(cu=n,n=s);e!==s?(r=t=function(r,t){const e=[r];for(let r=0;r<t.length;r++)e.push(t[r][1]);return e}(t,e)):(cu=r,r=s);}else cu=r,r=s;return r}function zu(){var t,e,n,u,o,a;return t=cu,(e=function(){var t,e,n,u;t=cu,"key_block_size"===r.substr(cu,14).toLowerCase()?(e=r.substr(cu,14),cu+=14):(e=s,0===vu&&wu(V));e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?(t=e="KEY_BLOCK_SIZE"):(cu=t,t=s)):(cu=t,t=s);return t}())!==s&&da()!==s?((n=ta())===s&&(n=null),n!==s&&da()!==s&&(u=Vs())!==s?(o=n,a=u,t=e={type:e.toLowerCase(),symbol:o,expr:a}):(cu=t,t=s)):(cu=t,t=s),t===s&&(t=qu())===s&&(t=cu,"with"===r.substr(cu,4).toLowerCase()?(e=r.substr(cu,4),cu+=4):(e=s,0===vu&&wu(fr)),e!==s&&da()!==s?("parser"===r.substr(cu,6).toLowerCase()?(n=r.substr(cu,6),cu+=6):(n=s,0===vu&&wu(br)),n!==s&&da()!==s&&(u=Ms())!==s?(t=e={type:"with parser",expr:u}):(cu=t,t=s)):(cu=t,t=s),t===s&&(t=cu,"visible"===r.substr(cu,7).toLowerCase()?(e=r.substr(cu,7),cu+=7):(e=s,0===vu&&wu(vr)),e===s&&("invisible"===r.substr(cu,9).toLowerCase()?(e=r.substr(cu,9),cu+=9):(e=s,0===vu&&wu(dr))),e!==s&&(e=function(r){return {type:r.toLowerCase(),expr:r.toLowerCase()}}(e)),(t=e)===s&&(t=pa()))),t}function Ju(){var r,t,e,n;if(r=cu,(t=rs())!==s){for(e=[],n=Qu();n!==s;)e.push(n),n=Qu();e!==s?(r=t=Lr(t,e)):(cu=r,r=s);}else cu=r,r=s;return r}function Qu(){var r,t,e;return r=cu,da()!==s&&(t=ia())!==s&&da()!==s&&(e=rs())!==s?(r=e):(cu=r,r=s),r===s&&(r=cu,da()!==s&&(t=function(){var r,t,e,n,u,o,a,i,c,l,f;if(r=cu,(t=ts())!==s)if(da()!==s)if((e=rs())!==s)if(da()!==s)if((n=Ao())!==s)if(da()!==s)if(la()!==s)if(da()!==s)if((u=Ms())!==s){for(o=[],a=cu,(i=da())!==s&&(c=ia())!==s&&(l=da())!==s&&(f=Ms())!==s?a=i=[i,c,l,f]:(cu=a,a=s);a!==s;)o.push(a),a=cu,(i=da())!==s&&(c=ia())!==s&&(l=da())!==s&&(f=Ms())!==s?a=i=[i,c,l,f]:(cu=a,a=s);o!==s&&(a=da())!==s&&(i=fa())!==s?(b=t,d=u,L=o,(v=e).join=b,v.using=Fa(d,L),r=t=v):(cu=r,r=s);}else cu=r,r=s;else cu=r,r=s;else cu=r,r=s;else cu=r,r=s;else cu=r,r=s;else cu=r,r=s;else cu=r,r=s;else cu=r,r=s;else cu=r,r=s;var b,v,d,L;r===s&&(r=cu,(t=ts())!==s&&da()!==s&&(e=rs())!==s&&da()!==s?((n=ns())===s&&(n=null),n!==s?(t=function(r,t,e){return t.join=r,t.on=e,t}(t,e,n),r=t):(cu=r,r=s)):(cu=r,r=s),r===s&&(r=cu,(t=ts())!==s&&da()!==s&&(e=la())!==s&&da()!==s&&(n=Tu())!==s&&da()!==s&&fa()!==s&&da()!==s?((u=Wu())===s&&(u=null),u!==s&&(o=da())!==s?((a=ns())===s&&(a=null),a!==s?(t=function(r,t,e,n){return t.parentheses=!0,{expr:t,as:e,join:r,on:n}}(t,n,u,a),r=t):(cu=r,r=s)):(cu=r,r=s)):(cu=r,r=s)));return r}())!==s?(r=t):(cu=r,r=s)),r}function rs(){var t,e,n,u,o,a;return t=cu,(e=function(){var t;"dual"===r.substr(cu,4).toLowerCase()?(t=r.substr(cu,4),cu+=4):(t=s,0===vu&&wu(Mn));return t}())!==s&&(e={type:"dual"}),(t=e)===s&&(t=cu,(e=es())!==s&&da()!==s?((n=Wu())===s&&(n=null),n!==s?(a=n,t=e="var"===(o=e).type?(o.as=a,o):{db:o.db,table:o.table,as:a}):(cu=t,t=s)):(cu=t,t=s),t===s&&(t=cu,(e=la())!==s&&da()!==s&&(n=Tu())!==s&&da()!==s&&fa()!==s&&da()!==s?((u=Wu())===s&&(u=null),u!==s?(t=e=function(r,t){return r.parentheses=!0,{expr:r,as:t}}(n,u)):(cu=t,t=s)):(cu=t,t=s))),t}function ts(){var t,e,n,u;return t=cu,(e=function(){var t,e,n,u;t=cu,"left"===r.substr(cu,4).toLowerCase()?(e=r.substr(cu,4),cu+=4):(e=s,0===vu&&wu(Jt));e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?t=e=[e,n]:(cu=t,t=s)):(cu=t,t=s);return t}())!==s&&(n=da())!==s?((u=wo())===s&&(u=null),u!==s&&da()!==s&&po()!==s?(t=e="LEFT JOIN"):(cu=t,t=s)):(cu=t,t=s),t===s&&(t=cu,(e=function(){var t,e,n,u;t=cu,"right"===r.substr(cu,5).toLowerCase()?(e=r.substr(cu,5),cu+=5):(e=s,0===vu&&wu(Qt));e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?t=e=[e,n]:(cu=t,t=s)):(cu=t,t=s);return t}())!==s&&(n=da())!==s?((u=wo())===s&&(u=null),u!==s&&da()!==s&&po()!==s?(t=e="RIGHT JOIN"):(cu=t,t=s)):(cu=t,t=s),t===s&&(t=cu,(e=function(){var t,e,n,u;t=cu,"full"===r.substr(cu,4).toLowerCase()?(e=r.substr(cu,4),cu+=4):(e=s,0===vu&&wu(re));e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?t=e=[e,n]:(cu=t,t=s)):(cu=t,t=s);return t}())!==s&&(n=da())!==s?((u=wo())===s&&(u=null),u!==s&&da()!==s&&po()!==s?(t=e="FULL JOIN"):(cu=t,t=s)):(cu=t,t=s),t===s&&(t=cu,e=cu,(n=function(){var t,e,n,u;t=cu,"inner"===r.substr(cu,5).toLowerCase()?(e=r.substr(cu,5),cu+=5):(e=s,0===vu&&wu(te));e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?t=e=[e,n]:(cu=t,t=s)):(cu=t,t=s);return t}())!==s&&(u=da())!==s?e=n=[n,u]:(cu=e,e=s),e===s&&(e=null),e!==s&&(n=po())!==s?(t=e="INNER JOIN"):(cu=t,t=s)))),t}function es(){var r,t,e,n,u,o,a,i;return r=cu,(t=gs())!==s?(e=cu,(n=da())!==s&&(u=aa())!==s&&(o=da())!==s&&(a=gs())!==s?e=n=[n,u,o,a]:(cu=e,e=s),e===s&&(e=null),e!==s?(r=t=function(r,t){const e={db:null,table:r};return null!==t&&(e.db=r,e.table=t[3]),e}(t,e)):(cu=r,r=s)):(cu=r,r=s),r===s&&(r=cu,(t=Oa())!==s&&((i=t).db=null,i.table=i.name,t=i),r=t),r}function ns(){var r,t;return r=cu,Co()!==s&&da()!==s&&(t=ws())!==s?(r=t):(cu=r,r=s),r}function us(){var t,e;return t=cu,function(){var t,e,n,u;t=cu,"where"===r.substr(cu,5).toLowerCase()?(e=r.substr(cu,5),cu+=5):(e=s,0===vu&&wu(ie));e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?t=e=[e,n]:(cu=t,t=s)):(cu=t,t=s);return t}()!==s&&da()!==s&&(e=Es())!==s?(t=e):(cu=t,t=s),t}function ss(){var t,e;return t=cu,function(){var t,e,n,u;t=cu,"order"===r.substr(cu,5).toLowerCase()?(e=r.substr(cu,5),cu+=5):(e=s,0===vu&&wu(fe));e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?t=e=[e,n]:(cu=t,t=s)):(cu=t,t=s);return t}()!==s&&da()!==s&&To()!==s&&da()!==s&&(e=function(){var r,t,e,n,u,o,a,i;if(r=cu,(t=os())!==s){for(e=[],n=cu,(u=da())!==s&&(o=ia())!==s&&(a=da())!==s&&(i=os())!==s?n=u=[u,o,a,i]:(cu=n,n=s);n!==s;)e.push(n),n=cu,(u=da())!==s&&(o=ia())!==s&&(a=da())!==s&&(i=os())!==s?n=u=[u,o,a,i]:(cu=n,n=s);e!==s?(t=c(t,e),r=t):(cu=r,r=s);}else cu=r,r=s;return r}())!==s?(t=e):(cu=t,t=s),t}function os(){var t,e,n;return t=cu,(e=ws())!==s&&da()!==s?((n=function(){var t,e,n,u;t=cu,"desc"===r.substr(cu,4).toLowerCase()?(e=r.substr(cu,4),cu+=4):(e=s,0===vu&&wu(Ce));e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?(t=e="DESC"):(cu=t,t=s)):(cu=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=cu,"asc"===r.substr(cu,3).toLowerCase()?(e=r.substr(cu,3),cu+=3):(e=s,0===vu&&wu(Le));e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?(t=e="ASC"):(cu=t,t=s)):(cu=t,t=s);return t}()),n===s&&(n=null),n!==s?(t=e=function(r,t){const e={expr:r,type:"ASC"};return "DESC"===t&&(e.type="DESC"),e}(e,n)):(cu=t,t=s)):(cu=t,t=s),t}function as(){var r;return (r=Vs())===s&&(r=Fs()),r}function is(){var t,e,n,u,o,a;return t=cu,function(){var t,e,n,u;t=cu,"limit"===r.substr(cu,5).toLowerCase()?(e=r.substr(cu,5),cu+=5):(e=s,0===vu&&wu(ve));e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?t=e=[e,n]:(cu=t,t=s)):(cu=t,t=s);return t}()!==s&&da()!==s&&(e=as())!==s&&da()!==s?(n=cu,(u=ia())===s&&(u=function(){var t,e,n,u;t=cu,"offset"===r.substr(cu,6).toLowerCase()?(e=r.substr(cu,6),cu+=6):(e=s,0===vu&&wu(de));e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?(t=e="OFFSET"):(cu=t,t=s)):(cu=t,t=s);return t}()),u!==s&&(o=da())!==s&&(a=as())!==s?n=u=[u,o,a]:(cu=n,n=s),n===s&&(n=null),n!==s?(t=function(r,t){const e=[r];return t&&e.push(t[2]),{seperator:t&&t[0]&&t[0].toLowerCase()||"",value:e}}(e,n)):(cu=t,t=s)):(cu=t,t=s),t}function cs(){var t,e,n,u,o,a,i,c,l;return t=cu,e=cu,(n=gs())!==s&&(u=da())!==s&&(o=aa())!==s?e=n=[n,u,o]:(cu=e,e=s),e===s&&(e=null),e!==s&&(n=da())!==s&&(u=Us())!==s&&(o=da())!==s?(61===r.charCodeAt(cu)?(a="=",cu++):(a=s,0===vu&&wu(Cr)),a!==s&&da()!==s&&(i=Ss())!==s?(t=e={column:u,value:i,table:(l=e)&&l[0]}):(cu=t,t=s)):(cu=t,t=s),t===s&&(t=cu,e=cu,(n=gs())!==s&&(u=da())!==s&&(o=aa())!==s?e=n=[n,u,o]:(cu=e,e=s),e===s&&(e=null),e!==s&&(n=da())!==s&&(u=Us())!==s&&(o=da())!==s?(61===r.charCodeAt(cu)?(a="=",cu++):(a=s,0===vu&&wu(Cr)),a!==s&&da()!==s&&(i=ho())!==s&&da()!==s&&la()!==s&&da()!==s&&(c=Os())!==s&&da()!==s&&fa()!==s?(t=e=function(r,t,e){return {column:t,value:e,table:r&&r[0],keyword:"values"}}(e,u,c)):(cu=t,t=s)):(cu=t,t=s)),t}function ls(){var r;return (r=function(){var r,t;r=cu,ho()!==s&&da()!==s&&(t=function(){var r,t,e,n,u,o,a,i;if(r=cu,(t=vs())!==s){for(e=[],n=cu,(u=da())!==s&&(o=ia())!==s&&(a=da())!==s&&(i=vs())!==s?n=u=[u,o,a,i]:(cu=n,n=s);n!==s;)e.push(n),n=cu,(u=da())!==s&&(o=ia())!==s&&(a=da())!==s&&(i=vs())!==s?n=u=[u,o,a,i]:(cu=n,n=s);e!==s?(t=c(t,e),r=t):(cu=r,r=s);}else cu=r,r=s;return r}())!==s?(r=t):(cu=r,r=s);return r}())===s&&(r=ju()),r}function fs(){var r,t,e,n,u,o,a,i,c;if(r=cu,co()!==s)if(da()!==s)if((t=la())!==s)if(da()!==s)if((e=Ms())!==s){for(n=[],u=cu,(o=da())!==s&&(a=ia())!==s&&(i=da())!==s&&(c=Ms())!==s?u=o=[o,a,i,c]:(cu=u,u=s);u!==s;)n.push(u),u=cu,(o=da())!==s&&(a=ia())!==s&&(i=da())!==s&&(c=Ms())!==s?u=o=[o,a,i,c]:(cu=u,u=s);n!==s&&(u=da())!==s&&(o=fa())!==s?(r=Fa(e,n)):(cu=r,r=s);}else cu=r,r=s;else cu=r,r=s;else cu=r,r=s;else cu=r,r=s;else cu=r,r=s;return r===s&&(r=cu,co()!==s&&da()!==s&&(t=vs())!==s?(r=t):(cu=r,r=s)),r}function bs(){var t,e;return t=cu,(e=function(){var t,e,n,u;t=cu,"insert"===r.substr(cu,6).toLowerCase()?(e=r.substr(cu,6),cu+=6):(e=s,0===vu&&wu($t));e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?t=e=[e,n]:(cu=t,t=s)):(cu=t,t=s);return t}())!==s&&(e="insert"),(t=e)===s&&(t=cu,(e=ao())!==s&&(e="replace"),t=e),t}function vs(){var r,t;return r=cu,la()!==s&&da()!==s&&(t=ds())!==s&&da()!==s&&fa()!==s?(r=t):(cu=r,r=s),r}function ds(){var r,t,e,n,u,o,a,i;if(r=cu,(t=ws())!==s){for(e=[],n=cu,(u=da())!==s&&(o=ia())!==s&&(a=da())!==s&&(i=ws())!==s?n=u=[u,o,a,i]:(cu=n,n=s);n!==s;)e.push(n),n=cu,(u=da())!==s&&(o=ia())!==s&&(a=da())!==s&&(i=ws())!==s?n=u=[u,o,a,i]:(cu=n,n=s);e!==s?(r=t=function(r,t){const e={type:"expr_list"};return e.value=Fa(r,t),e}(t,e)):(cu=r,r=s);}else cu=r,r=s;return r}function Ls(){var t,e,n;return t=cu,function(){var t,e,n,u;t=cu,"interval"===r.substr(cu,8).toLowerCase()?(e=r.substr(cu,8),cu+=8):(e=s,0===vu&&wu(vn));e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?(t=e="INTERVAL"):(cu=t,t=s)):(cu=t,t=s);return t}()!==s&&da()!==s&&(e=ws())!==s&&da()!==s&&(n=function(){var t;(t=function(){var t,e,n,u;t=cu,"year"===r.substr(cu,4).toLowerCase()?(e=r.substr(cu,4),cu+=4):(e=s,0===vu&&wu(dn));e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?(t=e="YEAR"):(cu=t,t=s)):(cu=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=cu,"month"===r.substr(cu,5).toLowerCase()?(e=r.substr(cu,5),cu+=5):(e=s,0===vu&&wu(Ln));e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?(t=e="MONTH"):(cu=t,t=s)):(cu=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=cu,"day"===r.substr(cu,3).toLowerCase()?(e=r.substr(cu,3),cu+=3):(e=s,0===vu&&wu(Cn));e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?(t=e="DAY"):(cu=t,t=s)):(cu=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=cu,"hour"===r.substr(cu,4).toLowerCase()?(e=r.substr(cu,4),cu+=4):(e=s,0===vu&&wu(pn));e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?(t=e="HOUR"):(cu=t,t=s)):(cu=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=cu,"minute"===r.substr(cu,6).toLowerCase()?(e=r.substr(cu,6),cu+=6):(e=s,0===vu&&wu(wn));e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?(t=e="MINUTE"):(cu=t,t=s)):(cu=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=cu,"second"===r.substr(cu,6).toLowerCase()?(e=r.substr(cu,6),cu+=6):(e=s,0===vu&&wu(En));e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?(t=e="SECOND"):(cu=t,t=s)):(cu=t,t=s);return t}());return t}())!==s?(t={type:"interval",expr:e,unit:n.toLowerCase()}):(cu=t,t=s),t}function Cs(){var t,e,n;return t=cu,function(){var t,e,n,u;t=cu,"when"===r.substr(cu,4).toLowerCase()?(e=r.substr(cu,4),cu+=4):(e=s,0===vu&&wu(Me));e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?t=e=[e,n]:(cu=t,t=s)):(cu=t,t=s);return t}()!==s&&da()!==s&&(e=Es())!==s&&da()!==s&&function(){var t,e,n,u;t=cu,"then"===r.substr(cu,4).toLowerCase()?(e=r.substr(cu,4),cu+=4):(e=s,0===vu&&wu(De));e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?t=e=[e,n]:(cu=t,t=s)):(cu=t,t=s);return t}()!==s&&da()!==s&&(n=ws())!==s?(t={type:"when",cond:e,result:n}):(cu=t,t=s),t}function ps(){var t,e;return t=cu,function(){var t,e,n,u;t=cu,"else"===r.substr(cu,4).toLowerCase()?(e=r.substr(cu,4),cu+=4):(e=s,0===vu&&wu(ke));e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?t=e=[e,n]:(cu=t,t=s)):(cu=t,t=s);return t}()!==s&&da()!==s&&(e=ws())!==s?(t={type:"else",result:e}):(cu=t,t=s),t}function ws(){var r;return (r=function(){var r,t,e,n,u,o,a,i;if(r=cu,(t=_s())!==s){if(e=[],n=cu,(u=da())!==s&&(o=va())!==s&&(a=da())!==s&&(i=_s())!==s?n=u=[u,o,a,i]:(cu=n,n=s),n!==s)for(;n!==s;)e.push(n),n=cu,(u=da())!==s&&(o=va())!==s&&(a=da())!==s&&(i=_s())!==s?n=u=[u,o,a,i]:(cu=n,n=s);else e=s;e!==s?(t=pr(t,e),r=t):(cu=r,r=s);}else cu=r,r=s;return r}())===s&&(r=function(){var r,t,e,n,u,o,a,i;if(r=cu,(t=hs())!==s){for(e=[],n=cu,(u=La())!==s&&(o=Uo())!==s&&(a=da())!==s&&(i=hs())!==s?n=u=[u,o,a,i]:(cu=n,n=s);n!==s;)e.push(n),n=cu,(u=La())!==s&&(o=Uo())!==s&&(a=da())!==s&&(i=hs())!==s?n=u=[u,o,a,i]:(cu=n,n=s);e!==s?(t=wr(t,e),r=t):(cu=r,r=s);}else cu=r,r=s;return r}())===s&&(r=function(){var r,t,e,n,u,o;if(r=cu,(t=Is())!==s){if(e=[],n=cu,(u=da())!==s&&(o=_s())!==s?n=u=[u,o]:(cu=n,n=s),n!==s)for(;n!==s;)e.push(n),n=cu,(u=da())!==s&&(o=_s())!==s?n=u=[u,o]:(cu=n,n=s);else e=s;e!==s?(t=Da(t,e[0][1]),r=t):(cu=r,r=s);}else cu=r,r=s;return r}())===s&&(r=Fu()),r}function Es(){var r,t,e,n,u,o,a,i;if(r=cu,(t=ws())!==s){for(e=[],n=cu,(u=da())!==s?((o=xo())===s&&(o=Uo())===s&&(o=ia()),o!==s&&(a=da())!==s&&(i=ws())!==s?n=u=[u,o,a,i]:(cu=n,n=s)):(cu=n,n=s);n!==s;)e.push(n),n=cu,(u=da())!==s?((o=xo())===s&&(o=Uo())===s&&(o=ia()),o!==s&&(a=da())!==s&&(i=ws())!==s?n=u=[u,o,a,i]:(cu=n,n=s)):(cu=n,n=s);e!==s?(r=t=function(r,t){let e=r,n="";for(let u=0;u<t.length;u++)","===t[u][1]?(n=",",0===u&&(e=[r]),e.push(t[u][3])):e=ka(t[u][1],e,t[u][3]);if(","===n){const r={type:"expr_list"};return r.value=e,r}return e}(t,e)):(cu=r,r=s);}else cu=r,r=s;return r}function hs(){var r,t,e,n,u,o,a,i;if(r=cu,(t=As())!==s){for(e=[],n=cu,(u=La())!==s&&(o=xo())!==s&&(a=da())!==s&&(i=As())!==s?n=u=[u,o,a,i]:(cu=n,n=s);n!==s;)e.push(n),n=cu,(u=La())!==s&&(o=xo())!==s&&(a=da())!==s&&(i=As())!==s?n=u=[u,o,a,i]:(cu=n,n=s);e!==s?(r=t=pr(t,e)):(cu=r,r=s);}else cu=r,r=s;return r}function As(){var t,e,n,u,o;return (t=ys())===s&&(t=function(){var r,t,e;r=cu,(t=function(){var r,t,e,n,u;r=cu,t=cu,(e=go())!==s&&(n=da())!==s&&(u=Oo())!==s?t=e=[e,n,u]:(cu=t,t=s);t!==s&&(t=hr(t));(r=t)===s&&(r=Oo());return r}())!==s&&da()!==s&&la()!==s&&da()!==s&&(e=Tu())!==s&&da()!==s&&fa()!==s?(n=t,(u=e).parentheses=!0,t=Da(n,u),r=t):(cu=r,r=s);var n,u;return r}())===s&&(t=cu,(e=go())===s&&(e=cu,33===r.charCodeAt(cu)?(n="!",cu++):(n=s,0===vu&&wu(Er)),n!==s?(u=cu,vu++,61===r.charCodeAt(cu)?(o="=",cu++):(o=s,0===vu&&wu(Cr)),vu--,o===s?u=void 0:(cu=u,u=s),u!==s?e=n=[n,u]:(cu=e,e=s)):(cu=e,e=s)),e!==s&&(n=da())!==s&&(u=As())!==s?(t=e=Da("NOT",u)):(cu=t,t=s)),t}function ys(){var r,t,e,n,u;return r=cu,(t=Ss())!==s&&da()!==s?((e=function(){var r;(r=function(){var t,e,n,u,o,a;t=[],e=cu,(n=da())!==s&&(u=Ts())!==s&&(o=da())!==s&&(a=Ss())!==s?e=n=[n,u,o,a]:(cu=e,e=s);if(e!==s)for(;e!==s;)t.push(e),e=cu,(n=da())!==s&&(u=Ts())!==s&&(o=da())!==s&&(a=Ss())!==s?e=n=[n,u,o,a]:(cu=e,e=s);else t=s;t!==s&&(t={type:"arithmetic",tail:t});return t}())===s&&(r=function(){var r,t,e,n;r=cu,(t=ms())!==s&&da()!==s&&(e=la())!==s&&da()!==s&&(n=ds())!==s&&da()!==s&&fa()!==s?(r=t={op:t,right:n}):(cu=r,r=s);r===s&&(r=cu,(t=ms())!==s&&da()!==s?((e=Oa())===s&&(e=Ys()),e!==s?(t=function(r,t){return {op:r,right:t}}(t,e),r=t):(cu=r,r=s)):(cu=r,r=s));return r}())===s&&(r=function(){var r,t,e,n;r=cu,(t=function(){var r,t,e,n,u;r=cu,t=cu,(e=go())!==s&&(n=da())!==s&&(u=Io())!==s?t=e=[e,n,u]:(cu=t,t=s);t!==s&&(t=hr(t));(r=t)===s&&(r=Io());return r}())!==s&&da()!==s&&(e=Ss())!==s&&da()!==s&&xo()!==s&&da()!==s&&(n=Ss())!==s?(r=t={op:t,right:{type:"expr_list",value:[e,n]}}):(cu=r,r=s);return r}())===s&&(r=function(){var r,t,e,n,u;r=cu,(t=Ro())!==s&&(e=da())!==s&&(n=Ss())!==s?(r=t={op:"IS",right:n}):(cu=r,r=s);r===s&&(r=cu,t=cu,(e=Ro())!==s&&(n=da())!==s&&(u=go())!==s?t=e=[e,n,u]:(cu=t,t=s),t!==s&&(e=da())!==s&&(n=Ss())!==s?(t=function(r){return {op:"IS NOT",right:r}}(n),r=t):(cu=r,r=s));return r}())===s&&(r=function(){var r,t,e;r=cu,(t=function(){var r,t,e,n,u;r=cu,t=cu,(e=go())!==s&&(n=da())!==s&&(u=_o())!==s?t=e=[e,n,u]:(cu=t,t=s);t!==s&&(t=hr(t));(r=t)===s&&(r=_o());return r}())!==s&&da()!==s?((e=Hs())===s&&(e=ys()),e!==s?(r=t={op:t,right:e}):(cu=r,r=s)):(cu=r,r=s);return r}());return r}())===s&&(e=null),e!==s?(n=t,r=t=null===(u=e)?n:"arithmetic"===u.type?Pa(n,u.tail):ka(u.op,n,u.right)):(cu=r,r=s)):(cu=r,r=s),r===s&&(r=Ys())===s&&(r=Os()),r}function Ts(){var t;return ">="===r.substr(cu,2)?(t=">=",cu+=2):(t=s,0===vu&&wu(Ar)),t===s&&(62===r.charCodeAt(cu)?(t=">",cu++):(t=s,0===vu&&wu(yr)),t===s&&("<="===r.substr(cu,2)?(t="<=",cu+=2):(t=s,0===vu&&wu(Tr)),t===s&&("<>"===r.substr(cu,2)?(t="<>",cu+=2):(t=s,0===vu&&wu(mr)),t===s&&(60===r.charCodeAt(cu)?(t="<",cu++):(t=s,0===vu&&wu(Sr)),t===s&&(61===r.charCodeAt(cu)?(t="=",cu++):(t=s,0===vu&&wu(Cr)),t===s&&("!="===r.substr(cu,2)?(t="!=",cu+=2):(t=s,0===vu&&wu(Ir)))))))),t}function ms(){var r,t,e,n,u;return r=cu,t=cu,(e=go())!==s&&(n=da())!==s&&(u=No())!==s?t=e=[e,n,u]:(cu=t,t=s),t!==s&&(t=hr(t)),(r=t)===s&&(r=No()),r}function Ss(){var r,t,e,n,u,o,a,i;if(r=cu,(t=Ns())!==s){for(e=[],n=cu,(u=da())!==s&&(o=Is())!==s&&(a=da())!==s&&(i=Ns())!==s?n=u=[u,o,a,i]:(cu=n,n=s);n!==s;)e.push(n),n=cu,(u=da())!==s&&(o=Is())!==s&&(a=da())!==s&&(i=Ns())!==s?n=u=[u,o,a,i]:(cu=n,n=s);e!==s?(r=t=wr(t,e)):(cu=r,r=s);}else cu=r,r=s;return r}function Is(){var t;return 43===r.charCodeAt(cu)?(t="+",cu++):(t=s,0===vu&&wu(Nr)),t===s&&(45===r.charCodeAt(cu)?(t="-",cu++):(t=s,0===vu&&wu(Rr))),t}function Ns(){var r,t,e,n,u,o,a,i;if(r=cu,(t=_s())!==s){for(e=[],n=cu,(u=da())!==s&&(o=Rs())!==s&&(a=da())!==s&&(i=_s())!==s?n=u=[u,o,a,i]:(cu=n,n=s);n!==s;)e.push(n),n=cu,(u=da())!==s&&(o=Rs())!==s&&(a=da())!==s&&(i=_s())!==s?n=u=[u,o,a,i]:(cu=n,n=s);e!==s?(r=t=Pa(t,e)):(cu=r,r=s);}else cu=r,r=s;return r}function Rs(){var t;return 42===r.charCodeAt(cu)?(t="*",cu++):(t=s,0===vu&&wu(_r)),t===s&&(47===r.charCodeAt(cu)?(t="/",cu++):(t=s,0===vu&&wu(Or)),t===s&&(37===r.charCodeAt(cu)?(t="%",cu++):(t=s,0===vu&&wu(gr)))),t}function _s(){var t,e,n;return (t=function(){var t,e,n,u,o,a,i;t=cu,(e=ko())!==s&&da()!==s&&la()!==s&&da()!==s&&(n=ws())!==s&&da()!==s&&bo()!==s&&da()!==s&&(u=xa())!==s&&da()!==s&&(o=fa())!==s?(t=e={type:"cast",expr:n,symbol:"as",target:u}):(cu=t,t=s);t===s&&(t=cu,(e=ko())!==s&&da()!==s&&la()!==s&&da()!==s&&(n=ws())!==s&&da()!==s&&bo()!==s&&da()!==s&&(u=Go())!==s&&da()!==s&&(o=la())!==s&&da()!==s&&(a=Ks())!==s&&da()!==s&&fa()!==s&&da()!==s&&(i=fa())!==s?(e=function(r,t){return {type:"cast",expr:r,symbol:"as",target:{dataType:"DECIMAL("+t+")"}}}(n,a),t=e):(cu=t,t=s),t===s&&(t=cu,(e=ko())!==s&&da()!==s&&la()!==s&&da()!==s&&(n=ws())!==s&&da()!==s&&bo()!==s&&da()!==s&&(u=Go())!==s&&da()!==s&&(o=la())!==s&&da()!==s&&(a=Ks())!==s&&da()!==s&&ia()!==s&&da()!==s&&(i=Ks())!==s&&da()!==s&&fa()!==s&&da()!==s&&fa()!==s?(e=function(r,t,e){return {type:"cast",expr:r,symbol:"as",target:{dataType:"DECIMAL("+t+", "+e+")"}}}(n,a,i),t=e):(cu=t,t=s),t===s&&(t=cu,(e=ko())!==s&&da()!==s&&la()!==s&&da()!==s&&(n=ws())!==s&&da()!==s&&bo()!==s&&da()!==s&&(u=function(){var t;(t=function(){var t,e,n,u;t=cu,"signed"===r.substr(cu,6).toLowerCase()?(e=r.substr(cu,6),cu+=6):(e=s,0===vu&&wu(Ye));e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?(t=e="SIGNED"):(cu=t,t=s)):(cu=t,t=s);return t}())===s&&(t=Ho());return t}())!==s&&da()!==s?((o=Yo())===s&&(o=null),o!==s&&da()!==s&&(a=fa())!==s?(e=function(r,t,e){return {type:"cast",expr:r,symbol:"as",target:{dataType:t+(e?" "+e:"")}}}(n,u,o),t=e):(cu=t,t=s)):(cu=t,t=s))));return t}())===s&&(t=Hs())===s&&(t=function(){var t;(t=function(){var t,e,n,u;t=cu,(e=function(){var t,e,n,u;t=cu,"count"===r.substr(cu,5).toLowerCase()?(e=r.substr(cu,5),cu+=5):(e=s,0===vu&&wu(Ne));e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?(t=e="COUNT"):(cu=t,t=s)):(cu=t,t=s);return t}())!==s&&da()!==s&&la()!==s&&da()!==s&&(n=function(){var t,e,n,u,o;t=cu,(e=function(){var e;42===r.charCodeAt(cu)?(e="*",cu++):(e=s,0===vu&&wu(_r));e!==s&&(e={type:"star",value:"*"});return e}())!==s&&(e={expr:e});(t=e)===s&&(t=cu,(e=So())===s&&(e=null),e!==s&&da()!==s&&(n=Os())!==s?(t=e={distinct:e,expr:n}):(cu=t,t=s),t===s&&(t=cu,(e=So())===s&&(e=null),e!==s&&da()!==s&&(n=la())!==s&&da()!==s&&(u=ws())!==s&&da()!==s&&fa()!==s&&da()!==s?((o=ss())===s&&(o=null),o!==s?(e=function(r,t,e){return t.parentheses=!0,{distinct:r,expr:t,orderby:e}}(e,u,o),t=e):(cu=t,t=s)):(cu=t,t=s)));return t}())!==s&&da()!==s&&fa()!==s&&da()!==s?((u=Gs())===s&&(u=null),u!==s?(e=function(r,t,e){return {type:"aggr_func",name:r,args:t,over:e}}(e,n,u),t=e):(cu=t,t=s)):(cu=t,t=s);return t}())===s&&(t=function(){var t,e,n;t=cu,(e=function(){var t;(t=function(){var t,e,n,u;t=cu,"sum"===r.substr(cu,3).toLowerCase()?(e=r.substr(cu,3),cu+=3):(e=s,0===vu&&wu(Oe));e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?(t=e="SUM"):(cu=t,t=s)):(cu=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=cu,"max"===r.substr(cu,3).toLowerCase()?(e=r.substr(cu,3),cu+=3):(e=s,0===vu&&wu(Re));e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?(t=e="MAX"):(cu=t,t=s)):(cu=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=cu,"min"===r.substr(cu,3).toLowerCase()?(e=r.substr(cu,3),cu+=3):(e=s,0===vu&&wu(_e));e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?(t=e="MIN"):(cu=t,t=s)):(cu=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=cu,"avg"===r.substr(cu,3).toLowerCase()?(e=r.substr(cu,3),cu+=3):(e=s,0===vu&&wu(ge));e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?(t=e="AVG"):(cu=t,t=s)):(cu=t,t=s);return t}());return t}())!==s&&da()!==s&&la()!==s&&da()!==s&&(n=Ss())!==s&&da()!==s&&fa()!==s?(t=e={type:"aggr_func",name:e,args:{expr:n}}):(cu=t,t=s);return t}());return t}())===s&&(t=function(){var t,e,n,u,o;t=cu,(e=Na())!==s&&da()!==s&&(n=la())!==s&&da()!==s?((u=ds())===s&&(u=null),u!==s&&da()!==s&&fa()!==s&&da()!==s?((o=Gs())===s&&(o=null),o!==s?(e=Zr(e,u,o),t=e):(cu=t,t=s)):(cu=t,t=s)):(cu=t,t=s);t===s&&(t=cu,(e=function(){var t;(t=function(){var t,e,n,u;t=cu,"current_date"===r.substr(cu,12).toLowerCase()?(e=r.substr(cu,12),cu+=12):(e=s,0===vu&&wu(bn));e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?(t=e="CURRENT_DATE"):(cu=t,t=s)):(cu=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=cu,"current_time"===r.substr(cu,12).toLowerCase()?(e=r.substr(cu,12),cu+=12):(e=s,0===vu&&wu(hn));e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?(t=e="CURRENT_TIME"):(cu=t,t=s)):(cu=t,t=s);return t}())===s&&(t=Qo())===s&&(t=function(){var t,e,n,u;t=cu,"current_user"===r.substr(cu,12).toLowerCase()?(e=r.substr(cu,12),cu+=12):(e=s,0===vu&&wu(yn));e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?(t=e="CURRENT_USER"):(cu=t,t=s)):(cu=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=cu,"user"===r.substr(cu,4).toLowerCase()?(e=r.substr(cu,4),cu+=4):(e=s,0===vu&&wu(fn));e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?(t=e="USER"):(cu=t,t=s)):(cu=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=cu,"session_user"===r.substr(cu,12).toLowerCase()?(e=r.substr(cu,12),cu+=12):(e=s,0===vu&&wu(Tn));e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?(t=e="SESSION_USER"):(cu=t,t=s)):(cu=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=cu,"system_user"===r.substr(cu,11).toLowerCase()?(e=r.substr(cu,11),cu+=11):(e=s,0===vu&&wu(mn));e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?(t=e="SYSTEM_USER"):(cu=t,t=s)):(cu=t,t=s);return t}());return t}())!==s&&da()!==s&&(n=la())!==s&&da()!==s?((u=ds())===s&&(u=null),u!==s&&da()!==s&&fa()!==s&&da()!==s?((o=Gs())===s&&(o=null),o!==s?(e=Zr(e,u,o),t=e):(cu=t,t=s)):(cu=t,t=s)):(cu=t,t=s),t===s&&(t=cu,(e=Qo())!==s&&da()!==s?((n=Ps())===s&&(n=null),n!==s?(e=function(r,t){return {type:"function",name:r,over:t}}(e,n),t=e):(cu=t,t=s)):(cu=t,t=s)));return t}())===s&&(t=function(){var r,t,e,n,u,o,a,i,c,l;if(r=cu,Mo()!==s)if(da()!==s){if(t=[],(e=Cs())!==s)for(;e!==s;)t.push(e),e=Cs();else t=s;t!==s&&(e=da())!==s?((n=ps())===s&&(n=null),n!==s&&(u=da())!==s&&(o=Do())!==s&&da()!==s?((a=Mo())===s&&(a=null),a!==s?(c=t,(l=n)&&c.push(l),r={type:"case",expr:null,args:c}):(cu=r,r=s)):(cu=r,r=s)):(cu=r,r=s);}else cu=r,r=s;else cu=r,r=s;if(r===s)if(r=cu,Mo()!==s)if(da()!==s)if((t=ws())!==s)if((e=da())!==s){if(n=[],(u=Cs())!==s)for(;u!==s;)n.push(u),u=Cs();else n=s;n!==s&&(u=da())!==s?((o=ps())===s&&(o=null),o!==s&&da()!==s&&(a=Do())!==s&&da()!==s?((i=Mo())===s&&(i=null),i!==s?(r=function(r,t,e){return e&&t.push(e),{type:"case",expr:r,args:t}}(t,n,o)):(cu=r,r=s)):(cu=r,r=s)):(cu=r,r=s);}else cu=r,r=s;else cu=r,r=s;else cu=r,r=s;else cu=r,r=s;return r}())===s&&(t=Ls())===s&&(t=Os())===s&&(t=Fs())===s&&(t=cu,la()!==s&&da()!==s&&(e=Es())!==s&&da()!==s&&fa()!==s?((n=e).parentheses=!0,t=n):(cu=t,t=s),t===s&&(t=Oa())),t}function Os(){var r,t,e,n,u;return r=cu,(t=gs())!==s&&da()!==s&&aa()!==s&&da()!==s&&(e=Us())!==s?(n=t,u=e,Ba.add(`select::${n}::${u}`),r=t={type:"column_ref",table:n,column:u}):(cu=r,r=s),r===s&&(r=cu,(t=Us())!==s&&(t=function(r){return Ba.add("select::null::"+r),{type:"column_ref",table:null,column:r}}(t)),r=t),r}function gs(){var r,t;return r=cu,(t=Ms())!==s?((xr(t)?s:void 0)!==s?(r=t=t):(cu=r,r=s)):(cu=r,r=s),r===s&&(r=cu,(t=xs())!==s&&(t=t),r=t),r}function xs(){var t;return (t=function(){var t,e,n,u;t=cu,34===r.charCodeAt(cu)?(e='"',cu++):(e=s,0===vu&&wu(Ur));if(e!==s){if(n=[],Mr.test(r.charAt(cu))?(u=r.charAt(cu),cu++):(u=s,0===vu&&wu(Dr)),u!==s)for(;u!==s;)n.push(u),Mr.test(r.charAt(cu))?(u=r.charAt(cu),cu++):(u=s,0===vu&&wu(Dr));else n=s;n!==s?(34===r.charCodeAt(cu)?(u='"',cu++):(u=s,0===vu&&wu(Ur)),u!==s?(e=kr(n),t=e):(cu=t,t=s)):(cu=t,t=s);}else cu=t,t=s;return t}())===s&&(t=function(){var t,e,n,u;t=cu,39===r.charCodeAt(cu)?(e="'",cu++):(e=s,0===vu&&wu(Q));if(e!==s){if(n=[],$r.test(r.charAt(cu))?(u=r.charAt(cu),cu++):(u=s,0===vu&&wu(Fr)),u!==s)for(;u!==s;)n.push(u),$r.test(r.charAt(cu))?(u=r.charAt(cu),cu++):(u=s,0===vu&&wu(Fr));else n=s;n!==s?(39===r.charCodeAt(cu)?(u="'",cu++):(u=s,0===vu&&wu(Q)),u!==s?(e=kr(n),t=e):(cu=t,t=s)):(cu=t,t=s);}else cu=t,t=s;return t}())===s&&(t=function(){var t,e,n,u;t=cu,96===r.charCodeAt(cu)?(e="`",cu++):(e=s,0===vu&&wu(Pr));if(e!==s){if(n=[],Gr.test(r.charAt(cu))?(u=r.charAt(cu),cu++):(u=s,0===vu&&wu(Hr)),u!==s)for(;u!==s;)n.push(u),Gr.test(r.charAt(cu))?(u=r.charAt(cu),cu++):(u=s,0===vu&&wu(Hr));else n=s;n!==s?(96===r.charCodeAt(cu)?(u="`",cu++):(u=s,0===vu&&wu(Pr)),u!==s?(e=kr(n),t=e):(cu=t,t=s)):(cu=t,t=s);}else cu=t,t=s;return t}()),t}function Us(){var r,t;return r=cu,(t=function(){var r,t,e,n;if(r=cu,(t=ks())!==s){for(e=[],n=$s();n!==s;)e.push(n),n=$s();e!==s?(t=jr(t,e),r=t):(cu=r,r=s);}else cu=r,r=s;return r}())!==s?((xr(t)?s:void 0)!==s?(r=t=t):(cu=r,r=s)):(cu=r,r=s),r===s&&(r=xs()),r}function Ms(){var r,t,e,n;if(r=cu,(t=Ds())!==s){for(e=[],n=ks();n!==s;)e.push(n),n=ks();e!==s?(r=t=jr(t,e)):(cu=r,r=s);}else cu=r,r=s;return r}function Ds(){var t;return Yr.test(r.charAt(cu))?(t=r.charAt(cu),cu++):(t=s,0===vu&&wu(Br)),t}function ks(){var t;return Xr.test(r.charAt(cu))?(t=r.charAt(cu),cu++):(t=s,0===vu&&wu(Wr)),t}function $s(){var t;return Vr.test(r.charAt(cu))?(t=r.charAt(cu),cu++):(t=s,0===vu&&wu(Kr)),t}function Fs(){var e,n,u;return e=cu,58===r.charCodeAt(cu)?(n=":",cu++):(n=s,0===vu&&wu(qr)),n!==s&&(u=Ms())!==s?e=n=[n,u]:(cu=e,e=s),e!==s&&(e={type:"param",value:e[1]}),e}function Ps(){var r,t,e;return r=cu,Co()!==s&&da()!==s&&no()!==s&&da()!==s&&(t=Qo())!==s&&da()!==s&&la()!==s&&da()!==s?((e=ds())===s&&(e=null),e!==s&&da()!==s&&fa()!==s?(r={type:"on update",keyword:t,parentheses:!0,expr:e}):(cu=r,r=s)):(cu=r,r=s),r===s&&(r=cu,Co()!==s&&da()!==s&&no()!==s&&da()!==s&&(t=Qo())!==s?(r=function(r){return {type:"on update",keyword:r}}(t)):(cu=r,r=s)),r}function Gs(){var t,e,n;return t=cu,function(){var t,e,n,u;t=cu,"over"===r.substr(cu,4).toLowerCase()?(e=r.substr(cu,4),cu+=4):(e=s,0===vu&&wu(ue));e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?t=e=[e,n]:(cu=t,t=s)):(cu=t,t=s);return t}()!==s&&da()!==s&&la()!==s&&da()!==s&&co()!==s&&da()!==s&&To()!==s&&da()!==s&&(e=Bu())!==s&&da()!==s?((n=ss())===s&&(n=null),n!==s&&da()!==s&&fa()!==s?(t=function(r,t){return {partitionby:r,orderby:t}}(e,n)):(cu=t,t=s)):(cu=t,t=s),t===s&&(t=Ps()),t}function Hs(){var t;return (t=Ys())===s&&(t=Vs())===s&&(t=function(){var t,e;t=cu,(e=function(){var t,e,n,u;t=cu,"true"===r.substr(cu,4).toLowerCase()?(e=r.substr(cu,4),cu+=4):(e=s,0===vu&&wu(Nt));e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?t=e=[e,n]:(cu=t,t=s)):(cu=t,t=s);return t}())!==s&&(e={type:"bool",value:!0});(t=e)===s&&(t=cu,(e=function(){var t,e,n,u;t=cu,"false"===r.substr(cu,5).toLowerCase()?(e=r.substr(cu,5),cu+=5):(e=s,0===vu&&wu(_t));e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?t=e=[e,n]:(cu=t,t=s)):(cu=t,t=s);return t}())!==s&&(e={type:"bool",value:!1}),t=e);return t}())===s&&(t=js())===s&&(t=function(){var t,e,n,u,o,a;t=cu,(e=zo())===s&&(e=qo())===s&&(e=Jo())===s&&(e=Zo());if(e!==s)if(da()!==s){if(n=cu,39===r.charCodeAt(cu)?(u="'",cu++):(u=s,0===vu&&wu(Q)),u!==s){for(o=[],a=Xs();a!==s;)o.push(a),a=Xs();o!==s?(39===r.charCodeAt(cu)?(a="'",cu++):(a=s,0===vu&&wu(Q)),a!==s?n=u=[u,o,a]:(cu=n,n=s)):(cu=n,n=s);}else cu=n,n=s;n!==s?(e=Jr(e,n),t=e):(cu=t,t=s);}else cu=t,t=s;else cu=t,t=s;if(t===s)if(t=cu,(e=zo())===s&&(e=qo())===s&&(e=Jo())===s&&(e=Zo()),e!==s)if(da()!==s){if(n=cu,34===r.charCodeAt(cu)?(u='"',cu++):(u=s,0===vu&&wu(Ur)),u!==s){for(o=[],a=Bs();a!==s;)o.push(a),a=Bs();o!==s?(34===r.charCodeAt(cu)?(a='"',cu++):(a=s,0===vu&&wu(Ur)),a!==s?n=u=[u,o,a]:(cu=n,n=s)):(cu=n,n=s);}else cu=n,n=s;n!==s?(e=Jr(e,n),t=e):(cu=t,t=s);}else cu=t,t=s;else cu=t,t=s;return t}()),t}function js(){var e;return (e=function(){var t,e,n,u;t=cu,"null"===r.substr(cu,4).toLowerCase()?(e=r.substr(cu,4),cu+=4):(e=s,0===vu&&wu(St));e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?t=e=[e,n]:(cu=t,t=s)):(cu=t,t=s);return t}())!==s&&(e={type:"null",value:null}),e}function Ys(){var t,e,n,u,o;if(t=cu,e=cu,39===r.charCodeAt(cu)?(n="'",cu++):(n=s,0===vu&&wu(Q)),n!==s){for(u=[],o=Xs();o!==s;)u.push(o),o=Xs();u!==s?(39===r.charCodeAt(cu)?(o="'",cu++):(o=s,0===vu&&wu(Q)),o!==s?e=n=[n,u,o]:(cu=e,e=s)):(cu=e,e=s);}else cu=e,e=s;if(e!==s&&(e=zr(e)),(t=e)===s){if(t=cu,e=cu,34===r.charCodeAt(cu)?(n='"',cu++):(n=s,0===vu&&wu(Ur)),n!==s){for(u=[],o=Bs();o!==s;)u.push(o),o=Bs();u!==s?(34===r.charCodeAt(cu)?(o='"',cu++):(o=s,0===vu&&wu(Ur)),o!==s?e=n=[n,u,o]:(cu=e,e=s)):(cu=e,e=s);}else cu=e,e=s;e!==s&&(e=zr(e)),t=e;}return t}function Bs(){var t;return Qr.test(r.charAt(cu))?(t=r.charAt(cu),cu++):(t=s,0===vu&&wu(rt)),t===s&&(t=Ws()),t}function Xs(){var t;return tt.test(r.charAt(cu))?(t=r.charAt(cu),cu++):(t=s,0===vu&&wu(et)),t===s&&(t=Ws()),t}function Ws(){var t,e,n,u,o,a,i,c,l,f;return t=cu,"\\'"===r.substr(cu,2)?(e="\\'",cu+=2):(e=s,0===vu&&wu(nt)),e!==s&&(e="'"),(t=e)===s&&(t=cu,'\\"'===r.substr(cu,2)?(e='\\"',cu+=2):(e=s,0===vu&&wu(ut)),e!==s&&(e='"'),(t=e)===s&&(t=cu,"\\\\"===r.substr(cu,2)?(e="\\\\",cu+=2):(e=s,0===vu&&wu(st)),e!==s&&(e="\\"),(t=e)===s&&(t=cu,"\\/"===r.substr(cu,2)?(e="\\/",cu+=2):(e=s,0===vu&&wu(ot)),e!==s&&(e="/"),(t=e)===s&&(t=cu,"\\b"===r.substr(cu,2)?(e="\\b",cu+=2):(e=s,0===vu&&wu(at)),e!==s&&(e="\b"),(t=e)===s&&(t=cu,"\\f"===r.substr(cu,2)?(e="\\f",cu+=2):(e=s,0===vu&&wu(it)),e!==s&&(e="\f"),(t=e)===s&&(t=cu,"\\n"===r.substr(cu,2)?(e="\\n",cu+=2):(e=s,0===vu&&wu(ct)),e!==s&&(e="\n"),(t=e)===s&&(t=cu,"\\r"===r.substr(cu,2)?(e="\\r",cu+=2):(e=s,0===vu&&wu(lt)),e!==s&&(e="\r"),(t=e)===s&&(t=cu,"\\t"===r.substr(cu,2)?(e="\\t",cu+=2):(e=s,0===vu&&wu(ft)),e!==s&&(e="\t"),(t=e)===s&&(t=cu,"\\u"===r.substr(cu,2)?(e="\\u",cu+=2):(e=s,0===vu&&wu(bt)),e!==s&&(n=Qs())!==s&&(u=Qs())!==s&&(o=Qs())!==s&&(a=Qs())!==s?(i=n,c=u,l=o,f=a,t=e=String.fromCharCode(parseInt("0x"+i+c+l+f))):(cu=t,t=s),t===s&&(t=cu,92===r.charCodeAt(cu)?(e="\\",cu++):(e=s,0===vu&&wu(vt)),e!==s&&(e="\\"),t=e)))))))))),t}function Vs(){var t,e;return (t=function(){var r,t,e,n;r=cu,(t=Ks())!==s&&(e=qs())!==s&&(n=Zs())!==s?(r=t={type:"bigint",value:t+e+n}):(cu=r,r=s);r===s&&(r=cu,(t=Ks())!==s&&(e=qs())!==s?(t=function(r,t){const e=r+t;return $a(r)?{type:"bigint",value:e}:parseFloat(e)}(t,e),r=t):(cu=r,r=s),r===s&&(r=cu,(t=Ks())!==s&&(e=Zs())!==s?(t=function(r,t){return {type:"bigint",value:r+t}}(t,e),r=t):(cu=r,r=s),r===s&&(r=cu,(t=Ks())!==s&&(t=function(r){return $a(r)?{type:"bigint",value:r}:parseFloat(r)}(t)),r=t)));return r}())!==s&&(t=(e=t)&&"bigint"===e.type?e:{type:"number",value:e}),t}function Ks(){var t,e,n;return (t=zs())===s&&(t=Js())===s&&(t=cu,45===r.charCodeAt(cu)?(e="-",cu++):(e=s,0===vu&&wu(Rr)),e===s&&(43===r.charCodeAt(cu)?(e="+",cu++):(e=s,0===vu&&wu(Nr))),e!==s&&(n=zs())!==s?(t=e="-"+n):(cu=t,t=s),t===s&&(t=cu,45===r.charCodeAt(cu)?(e="-",cu++):(e=s,0===vu&&wu(Rr)),e===s&&(43===r.charCodeAt(cu)?(e="+",cu++):(e=s,0===vu&&wu(Nr))),e!==s&&(n=Js())!==s?(t=e="-"+n):(cu=t,t=s))),t}function qs(){var t,e,n;return t=cu,46===r.charCodeAt(cu)?(e=".",cu++):(e=s,0===vu&&wu(Ct)),e!==s&&(n=zs())!==s?(t=e="."+n):(cu=t,t=s),t}function Zs(){var t,e,n;return t=cu,(e=function(){var t,e,n;t=cu,At.test(r.charAt(cu))?(e=r.charAt(cu),cu++):(e=s,0===vu&&wu(yt));e!==s?(Tt.test(r.charAt(cu))?(n=r.charAt(cu),cu++):(n=s,0===vu&&wu(mt)),n===s&&(n=null),n!==s?(t=e=e+(null!==(u=n)?u:"")):(cu=t,t=s)):(cu=t,t=s);var u;return t}())!==s&&(n=zs())!==s?(t=e=e+n):(cu=t,t=s),t}function zs(){var t,e;if(t=[],(e=Js())!==s)for(;e!==s;)t.push(e),e=Js();else t=s;return t!==s&&(t=t.join("")),t}function Js(){var t;return pt.test(r.charAt(cu))?(t=r.charAt(cu),cu++):(t=s,0===vu&&wu(wt)),t}function Qs(){var t;return Et.test(r.charAt(cu))?(t=r.charAt(cu),cu++):(t=s,0===vu&&wu(ht)),t}function ro(){var t,e,n,u;return t=cu,"default"===r.substr(cu,7).toLowerCase()?(e=r.substr(cu,7),cu+=7):(e=s,0===vu&&wu(p)),e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?t=e=[e,n]:(cu=t,t=s)):(cu=t,t=s),t}function to(){var t,e,n,u;return t=cu,"to"===r.substr(cu,2).toLowerCase()?(e=r.substr(cu,2),cu+=2):(e=s,0===vu&&wu(Rt)),e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?t=e=[e,n]:(cu=t,t=s)):(cu=t,t=s),t}function eo(){var t,e,n,u;return t=cu,"drop"===r.substr(cu,4).toLowerCase()?(e=r.substr(cu,4),cu+=4):(e=s,0===vu&&wu(Ot)),e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?(t=e="DROP"):(cu=t,t=s)):(cu=t,t=s),t}function no(){var t,e,n,u;return t=cu,"update"===r.substr(cu,6).toLowerCase()?(e=r.substr(cu,6),cu+=6):(e=s,0===vu&&wu(k)),e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?t=e=[e,n]:(cu=t,t=s)):(cu=t,t=s),t}function uo(){var t,e,n,u;return t=cu,"create"===r.substr(cu,6).toLowerCase()?(e=r.substr(cu,6),cu+=6):(e=s,0===vu&&wu(Mt)),e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?t=e=[e,n]:(cu=t,t=s)):(cu=t,t=s),t}function so(){var t,e,n,u;return t=cu,"temporary"===r.substr(cu,9).toLowerCase()?(e=r.substr(cu,9),cu+=9):(e=s,0===vu&&wu(Dt)),e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?t=e=[e,n]:(cu=t,t=s)):(cu=t,t=s),t}function oo(){var t,e,n,u;return t=cu,"if not exists"===r.substr(cu,13).toLowerCase()?(e=r.substr(cu,13),cu+=13):(e=s,0===vu&&wu(kt)),e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?t=e=[e,n]:(cu=t,t=s)):(cu=t,t=s),t}function ao(){var t,e,n,u;return t=cu,"replace"===r.substr(cu,7).toLowerCase()?(e=r.substr(cu,7),cu+=7):(e=s,0===vu&&wu(Pt)),e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?t=e=[e,n]:(cu=t,t=s)):(cu=t,t=s),t}function io(){var t,e,n,u;return t=cu,"rename"===r.substr(cu,6).toLowerCase()?(e=r.substr(cu,6),cu+=6):(e=s,0===vu&&wu(Gt)),e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?t=e=[e,n]:(cu=t,t=s)):(cu=t,t=s),t}function co(){var t,e,n,u;return t=cu,"partition"===r.substr(cu,9).toLowerCase()?(e=r.substr(cu,9),cu+=9):(e=s,0===vu&&wu(jt)),e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?(t=e="PARTITION"):(cu=t,t=s)):(cu=t,t=s),t}function lo(){var t,e,n,u;return t=cu,"into"===r.substr(cu,4).toLowerCase()?(e=r.substr(cu,4),cu+=4):(e=s,0===vu&&wu(Yt)),e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?(t=e="INTO"):(cu=t,t=s)):(cu=t,t=s),t}function fo(){var t,e,n,u;return t=cu,"set"===r.substr(cu,3).toLowerCase()?(e=r.substr(cu,3),cu+=3):(e=s,0===vu&&wu(Y)),e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?t=e=[e,n]:(cu=t,t=s)):(cu=t,t=s),t}function bo(){var t,e,n,u;return t=cu,"as"===r.substr(cu,2).toLowerCase()?(e=r.substr(cu,2),cu+=2):(e=s,0===vu&&wu(Vt)),e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?t=e=[e,n]:(cu=t,t=s)):(cu=t,t=s),t}function vo(){var t,e,n,u;return t=cu,"table"===r.substr(cu,5).toLowerCase()?(e=r.substr(cu,5),cu+=5):(e=s,0===vu&&wu(Kt)),e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?(t=e="TABLE"):(cu=t,t=s)):(cu=t,t=s),t}function Lo(){var t,e,n,u;return t=cu,"tables"===r.substr(cu,6).toLowerCase()?(e=r.substr(cu,6),cu+=6):(e=s,0===vu&&wu(qt)),e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?(t=e="TABLES"):(cu=t,t=s)):(cu=t,t=s),t}function Co(){var t,e,n,u;return t=cu,"on"===r.substr(cu,2).toLowerCase()?(e=r.substr(cu,2),cu+=2):(e=s,0===vu&&wu(M)),e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?t=e=[e,n]:(cu=t,t=s)):(cu=t,t=s),t}function po(){var t,e,n,u;return t=cu,"join"===r.substr(cu,4).toLowerCase()?(e=r.substr(cu,4),cu+=4):(e=s,0===vu&&wu(ee)),e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?t=e=[e,n]:(cu=t,t=s)):(cu=t,t=s),t}function wo(){var t,e,n,u;return t=cu,"outer"===r.substr(cu,5).toLowerCase()?(e=r.substr(cu,5),cu+=5):(e=s,0===vu&&wu(ne)),e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?t=e=[e,n]:(cu=t,t=s)):(cu=t,t=s),t}function Eo(){var t,e,n,u;return t=cu,"union"===r.substr(cu,5).toLowerCase()?(e=r.substr(cu,5),cu+=5):(e=s,0===vu&&wu(se)),e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?t=e=[e,n]:(cu=t,t=s)):(cu=t,t=s),t}function ho(){var t,e,n,u;return t=cu,"values"===r.substr(cu,6).toLowerCase()?(e=r.substr(cu,6),cu+=6):(e=s,0===vu&&wu(oe)),e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?t=e=[e,n]:(cu=t,t=s)):(cu=t,t=s),t}function Ao(){var t,e,n,u;return t=cu,"using"===r.substr(cu,5).toLowerCase()?(e=r.substr(cu,5),cu+=5):(e=s,0===vu&&wu(ae)),e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?t=e=[e,n]:(cu=t,t=s)):(cu=t,t=s),t}function yo(){var t,e,n,u;return t=cu,"with"===r.substr(cu,4).toLowerCase()?(e=r.substr(cu,4),cu+=4):(e=s,0===vu&&wu(fr)),e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?t=e=[e,n]:(cu=t,t=s)):(cu=t,t=s),t}function To(){var t,e,n,u;return t=cu,"by"===r.substr(cu,2).toLowerCase()?(e=r.substr(cu,2),cu+=2):(e=s,0===vu&&wu(le)),e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?t=e=[e,n]:(cu=t,t=s)):(cu=t,t=s),t}function mo(){var t,e,n,u;return t=cu,"all"===r.substr(cu,3).toLowerCase()?(e=r.substr(cu,3),cu+=3):(e=s,0===vu&&wu(pe)),e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?(t=e="ALL"):(cu=t,t=s)):(cu=t,t=s),t}function So(){var t,e,n,u;return t=cu,"distinct"===r.substr(cu,8).toLowerCase()?(e=r.substr(cu,8),cu+=8):(e=s,0===vu&&wu(we)),e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?(t=e="DISTINCT"):(cu=t,t=s)):(cu=t,t=s),t}function Io(){var t,e,n,u;return t=cu,"between"===r.substr(cu,7).toLowerCase()?(e=r.substr(cu,7),cu+=7):(e=s,0===vu&&wu(Ee)),e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?(t=e="BETWEEN"):(cu=t,t=s)):(cu=t,t=s),t}function No(){var t,e,n,u;return t=cu,"in"===r.substr(cu,2).toLowerCase()?(e=r.substr(cu,2),cu+=2):(e=s,0===vu&&wu(he)),e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?(t=e="IN"):(cu=t,t=s)):(cu=t,t=s),t}function Ro(){var t,e,n,u;return t=cu,"is"===r.substr(cu,2).toLowerCase()?(e=r.substr(cu,2),cu+=2):(e=s,0===vu&&wu(Ae)),e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?(t=e="IS"):(cu=t,t=s)):(cu=t,t=s),t}function _o(){var t,e,n,u;return t=cu,"like"===r.substr(cu,4).toLowerCase()?(e=r.substr(cu,4),cu+=4):(e=s,0===vu&&wu(ye)),e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?(t=e="LIKE"):(cu=t,t=s)):(cu=t,t=s),t}function Oo(){var t,e,n,u;return t=cu,"exists"===r.substr(cu,6).toLowerCase()?(e=r.substr(cu,6),cu+=6):(e=s,0===vu&&wu(Te)),e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?(t=e="EXISTS"):(cu=t,t=s)):(cu=t,t=s),t}function go(){var t,e,n,u;return t=cu,"not"===r.substr(cu,3).toLowerCase()?(e=r.substr(cu,3),cu+=3):(e=s,0===vu&&wu(me)),e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?(t=e="NOT"):(cu=t,t=s)):(cu=t,t=s),t}function xo(){var t,e,n,u;return t=cu,"and"===r.substr(cu,3).toLowerCase()?(e=r.substr(cu,3),cu+=3):(e=s,0===vu&&wu(Se)),e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?(t=e="AND"):(cu=t,t=s)):(cu=t,t=s),t}function Uo(){var t,e,n,u;return t=cu,"or"===r.substr(cu,2).toLowerCase()?(e=r.substr(cu,2),cu+=2):(e=s,0===vu&&wu(Ie)),e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?(t=e="OR"):(cu=t,t=s)):(cu=t,t=s),t}function Mo(){var t,e,n,u;return t=cu,"case"===r.substr(cu,4).toLowerCase()?(e=r.substr(cu,4),cu+=4):(e=s,0===vu&&wu(Ue)),e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?t=e=[e,n]:(cu=t,t=s)):(cu=t,t=s),t}function Do(){var t,e,n,u;return t=cu,"end"===r.substr(cu,3).toLowerCase()?(e=r.substr(cu,3),cu+=3):(e=s,0===vu&&wu($e)),e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?t=e=[e,n]:(cu=t,t=s)):(cu=t,t=s),t}function ko(){var t,e,n,u;return t=cu,"cast"===r.substr(cu,4).toLowerCase()?(e=r.substr(cu,4),cu+=4):(e=s,0===vu&&wu(Fe)),e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?t=e=[e,n]:(cu=t,t=s)):(cu=t,t=s),t}function $o(){var t,e,n,u;return t=cu,"char"===r.substr(cu,4).toLowerCase()?(e=r.substr(cu,4),cu+=4):(e=s,0===vu&&wu(Pe)),e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?(t=e="CHAR"):(cu=t,t=s)):(cu=t,t=s),t}function Fo(){var t,e,n,u;return t=cu,"varchar"===r.substr(cu,7).toLowerCase()?(e=r.substr(cu,7),cu+=7):(e=s,0===vu&&wu(Ge)),e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?(t=e="VARCHAR"):(cu=t,t=s)):(cu=t,t=s),t}function Po(){var t,e,n,u;return t=cu,"numeric"===r.substr(cu,7).toLowerCase()?(e=r.substr(cu,7),cu+=7):(e=s,0===vu&&wu(He)),e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?(t=e="NUMERIC"):(cu=t,t=s)):(cu=t,t=s),t}function Go(){var t,e,n,u;return t=cu,"decimal"===r.substr(cu,7).toLowerCase()?(e=r.substr(cu,7),cu+=7):(e=s,0===vu&&wu(je)),e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?(t=e="DECIMAL"):(cu=t,t=s)):(cu=t,t=s),t}function Ho(){var t,e,n,u;return t=cu,"unsigned"===r.substr(cu,8).toLowerCase()?(e=r.substr(cu,8),cu+=8):(e=s,0===vu&&wu(Xe)),e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?(t=e="UNSIGNED"):(cu=t,t=s)):(cu=t,t=s),t}function jo(){var t,e,n,u;return t=cu,"int"===r.substr(cu,3).toLowerCase()?(e=r.substr(cu,3),cu+=3):(e=s,0===vu&&wu(We)),e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?(t=e="INT"):(cu=t,t=s)):(cu=t,t=s),t}function Yo(){var t,e,n,u;return t=cu,"integer"===r.substr(cu,7).toLowerCase()?(e=r.substr(cu,7),cu+=7):(e=s,0===vu&&wu(Ke)),e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?(t=e="INTEGER"):(cu=t,t=s)):(cu=t,t=s),t}function Bo(){var t,e,n,u;return t=cu,"smallint"===r.substr(cu,8).toLowerCase()?(e=r.substr(cu,8),cu+=8):(e=s,0===vu&&wu(Ze)),e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?(t=e="SMALLINT"):(cu=t,t=s)):(cu=t,t=s),t}function Xo(){var t,e,n,u;return t=cu,"tinyint"===r.substr(cu,7).toLowerCase()?(e=r.substr(cu,7),cu+=7):(e=s,0===vu&&wu(ze)),e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?(t=e="TINYINT"):(cu=t,t=s)):(cu=t,t=s),t}function Wo(){var t,e,n,u;return t=cu,"bigint"===r.substr(cu,6).toLowerCase()?(e=r.substr(cu,6),cu+=6):(e=s,0===vu&&wu(en)),e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?(t=e="BIGINT"):(cu=t,t=s)):(cu=t,t=s),t}function Vo(){var t,e,n,u;return t=cu,"float"===r.substr(cu,5).toLowerCase()?(e=r.substr(cu,5),cu+=5):(e=s,0===vu&&wu(nn)),e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?(t=e="FLOAT"):(cu=t,t=s)):(cu=t,t=s),t}function Ko(){var t,e,n,u;return t=cu,"double"===r.substr(cu,6).toLowerCase()?(e=r.substr(cu,6),cu+=6):(e=s,0===vu&&wu(un)),e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?(t=e="DOUBLE"):(cu=t,t=s)):(cu=t,t=s),t}function qo(){var t,e,n,u;return t=cu,"date"===r.substr(cu,4).toLowerCase()?(e=r.substr(cu,4),cu+=4):(e=s,0===vu&&wu(sn)),e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?(t=e="DATE"):(cu=t,t=s)):(cu=t,t=s),t}function Zo(){var t,e,n,u;return t=cu,"datetime"===r.substr(cu,8).toLowerCase()?(e=r.substr(cu,8),cu+=8):(e=s,0===vu&&wu(on)),e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?(t=e="DATETIME"):(cu=t,t=s)):(cu=t,t=s),t}function zo(){var t,e,n,u;return t=cu,"time"===r.substr(cu,4).toLowerCase()?(e=r.substr(cu,4),cu+=4):(e=s,0===vu&&wu(an)),e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?(t=e="TIME"):(cu=t,t=s)):(cu=t,t=s),t}function Jo(){var t,e,n,u;return t=cu,"timestamp"===r.substr(cu,9).toLowerCase()?(e=r.substr(cu,9),cu+=9):(e=s,0===vu&&wu(cn)),e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?(t=e="TIMESTAMP"):(cu=t,t=s)):(cu=t,t=s),t}function Qo(){var t,e,n,u;return t=cu,"current_timestamp"===r.substr(cu,17).toLowerCase()?(e=r.substr(cu,17),cu+=17):(e=s,0===vu&&wu(An)),e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?(t=e="CURRENT_TIMESTAMP"):(cu=t,t=s)):(cu=t,t=s),t}function ra(){var t;return (t=function(){var t;return "@@"===r.substr(cu,2)?(t="@@",cu+=2):(t=s,0===vu&&wu(On)),t}())===s&&(t=function(){var t;return 64===r.charCodeAt(cu)?(t="@",cu++):(t=s,0===vu&&wu(_n)),t}())===s&&(t=function(){var t;return 36===r.charCodeAt(cu)?(t="$",cu++):(t=s,0===vu&&wu(gn)),t}()),t}function ta(){var t;return 61===r.charCodeAt(cu)?(t="=",cu++):(t=s,0===vu&&wu(Cr)),t}function ea(){var t,e,n,u;return t=cu,"add"===r.substr(cu,3).toLowerCase()?(e=r.substr(cu,3),cu+=3):(e=s,0===vu&&wu(Dn)),e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?(t=e="ADD"):(cu=t,t=s)):(cu=t,t=s),t}function na(){var t,e,n,u;return t=cu,"column"===r.substr(cu,6).toLowerCase()?(e=r.substr(cu,6),cu+=6):(e=s,0===vu&&wu(kn)),e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?(t=e="COLUMN"):(cu=t,t=s)):(cu=t,t=s),t}function ua(){var t,e,n,u;return t=cu,"index"===r.substr(cu,5).toLowerCase()?(e=r.substr(cu,5),cu+=5):(e=s,0===vu&&wu($n)),e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?(t=e="INDEX"):(cu=t,t=s)):(cu=t,t=s),t}function sa(){var t,e,n,u;return t=cu,"key"===r.substr(cu,3).toLowerCase()?(e=r.substr(cu,3),cu+=3):(e=s,0===vu&&wu(b)),e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?(t=e="KEY"):(cu=t,t=s)):(cu=t,t=s),t}function oa(){var t,e,n,u;return t=cu,"comment"===r.substr(cu,7).toLowerCase()?(e=r.substr(cu,7),cu+=7):(e=s,0===vu&&wu(Gn)),e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?(t=e="COMMENT"):(cu=t,t=s)):(cu=t,t=s),t}function aa(){var t;return 46===r.charCodeAt(cu)?(t=".",cu++):(t=s,0===vu&&wu(Ct)),t}function ia(){var t;return 44===r.charCodeAt(cu)?(t=",",cu++):(t=s,0===vu&&wu(qn)),t}function ca(){var t;return 42===r.charCodeAt(cu)?(t="*",cu++):(t=s,0===vu&&wu(_r)),t}function la(){var t;return 40===r.charCodeAt(cu)?(t="(",cu++):(t=s,0===vu&&wu(ar)),t}function fa(){var t;return 41===r.charCodeAt(cu)?(t=")",cu++):(t=s,0===vu&&wu(ir)),t}function ba(){var t;return 59===r.charCodeAt(cu)?(t=";",cu++):(t=s,0===vu&&wu(Jn)),t}function va(){var t;return (t=function(){var t;return "||"===r.substr(cu,2)?(t="||",cu+=2):(t=s,0===vu&&wu(Qn)),t}())===s&&(t=function(){var t;return "&&"===r.substr(cu,2)?(t="&&",cu+=2):(t=s,0===vu&&wu(ru)),t}()),t}function da(){var r,t;for(r=[],(t=Ea())===s&&(t=Ca());t!==s;)r.push(t),(t=Ea())===s&&(t=Ca());return r}function La(){var r,t;if(r=[],(t=Ea())===s&&(t=Ca()),t!==s)for(;t!==s;)r.push(t),(t=Ea())===s&&(t=Ca());else r=s;return r}function Ca(){var t;return (t=function(){var t,e,n,u,o,a;t=cu,"/*"===r.substr(cu,2)?(e="/*",cu+=2):(e=s,0===vu&&wu(tu));if(e!==s){for(n=[],u=cu,o=cu,vu++,"*/"===r.substr(cu,2)?(a="*/",cu+=2):(a=s,0===vu&&wu(eu)),vu--,a===s?o=void 0:(cu=o,o=s),o!==s&&(a=wa())!==s?u=o=[o,a]:(cu=u,u=s);u!==s;)n.push(u),u=cu,o=cu,vu++,"*/"===r.substr(cu,2)?(a="*/",cu+=2):(a=s,0===vu&&wu(eu)),vu--,a===s?o=void 0:(cu=o,o=s),o!==s&&(a=wa())!==s?u=o=[o,a]:(cu=u,u=s);n!==s?("*/"===r.substr(cu,2)?(u="*/",cu+=2):(u=s,0===vu&&wu(eu)),u!==s?t=e=[e,n,u]:(cu=t,t=s)):(cu=t,t=s);}else cu=t,t=s;return t}())===s&&(t=function(){var t,e,n,u,o,a;t=cu,"--"===r.substr(cu,2)?(e="--",cu+=2):(e=s,0===vu&&wu(nu));if(e!==s){for(n=[],u=cu,o=cu,vu++,a=ha(),vu--,a===s?o=void 0:(cu=o,o=s),o!==s&&(a=wa())!==s?u=o=[o,a]:(cu=u,u=s);u!==s;)n.push(u),u=cu,o=cu,vu++,a=ha(),vu--,a===s?o=void 0:(cu=o,o=s),o!==s&&(a=wa())!==s?u=o=[o,a]:(cu=u,u=s);n!==s?t=e=[e,n]:(cu=t,t=s);}else cu=t,t=s;return t}())===s&&(t=function(){var t,e,n,u,o,a;t=cu,35===r.charCodeAt(cu)?(e="#",cu++):(e=s,0===vu&&wu(uu));if(e!==s){for(n=[],u=cu,o=cu,vu++,a=ha(),vu--,a===s?o=void 0:(cu=o,o=s),o!==s&&(a=wa())!==s?u=o=[o,a]:(cu=u,u=s);u!==s;)n.push(u),u=cu,o=cu,vu++,a=ha(),vu--,a===s?o=void 0:(cu=o,o=s),o!==s&&(a=wa())!==s?u=o=[o,a]:(cu=u,u=s);n!==s?t=e=[e,n]:(cu=t,t=s);}else cu=t,t=s;return t}()),t}function pa(){var r,t,e,n,u,o,a;return r=cu,(t=oa())!==s&&da()!==s?((e=ta())===s&&(e=null),e!==s&&da()!==s&&(n=Ys())!==s?(o=e,a=n,r=t={type:(u=t).toLowerCase(),keyword:u.toLowerCase(),symbol:o,value:a}):(cu=r,r=s)):(cu=r,r=s),r}function wa(){var t;return r.length>cu?(t=r.charAt(cu),cu++):(t=s,0===vu&&wu(su)),t}function Ea(){var t;return ou.test(r.charAt(cu))?(t=r.charAt(cu),cu++):(t=s,0===vu&&wu(au)),t}function ha(){var t,e;if((t=function(){var t,e;t=cu,vu++,r.length>cu?(e=r.charAt(cu),cu++):(e=s,0===vu&&wu(su));vu--,e===s?t=void 0:(cu=t,t=s);return t}())===s)if(t=[],dt.test(r.charAt(cu))?(e=r.charAt(cu),cu++):(e=s,0===vu&&wu(Lt)),e!==s)for(;e!==s;)t.push(e),dt.test(r.charAt(cu))?(e=r.charAt(cu),cu++):(e=s,0===vu&&wu(Lt));else t=s;return t}function Aa(){var t,e;return t=cu,ja=[],(void 0)!==s&&da()!==s?((e=ya())===s&&(e=function(){var t,e;t=cu,function(){var t;return "return"===r.substr(cu,6).toLowerCase()?(t=r.substr(cu,6),cu+=6):(t=s,0===vu&&wu(xn)),t}()!==s&&da()!==s&&(e=Ta())!==s?(t={type:"return",expr:e}):(cu=t,t=s);return t}()),e!==s?(t={stmt:e,vars:ja}):(cu=t,t=s)):(cu=t,t=s),t}function ya(){var t,e,n,u;return t=cu,(e=Oa())===s&&(e=ga()),e!==s&&da()!==s?((n=function(){var t;return ":="===r.substr(cu,2)?(t=":=",cu+=2):(t=s,0===vu&&wu(Un)),t}())===s&&(n=ta()),n!==s&&da()!==s&&(u=Ta())!==s?(t=e={type:"assign",left:e,symbol:n,right:u}):(cu=t,t=s)):(cu=t,t=s),t}function Ta(){var t;return (t=Fu())===s&&(t=function(){var r,t,e,n,u;r=cu,(t=Oa())!==s&&da()!==s&&(e=ts())!==s&&da()!==s&&(n=Oa())!==s&&da()!==s&&(u=ns())!==s?(r=t={type:"join",ltable:t,rtable:n,op:e,on:u}):(cu=r,r=s);return r}())===s&&(t=ma())===s&&(t=function(){var t,e;t=cu,function(){var t;return 91===r.charCodeAt(cu)?(t="[",cu++):(t=s,0===vu&&wu(Zn)),t}()!==s&&da()!==s&&(e=_a())!==s&&da()!==s&&function(){var t;return 93===r.charCodeAt(cu)?(t="]",cu++):(t=s,0===vu&&wu(zn)),t}()!==s?(t={type:"array",value:e}):(cu=t,t=s);return t}()),t}function ma(){var r,t,e,n,u,o,a,i;if(r=cu,(t=Sa())!==s){for(e=[],n=cu,(u=da())!==s&&(o=Is())!==s&&(a=da())!==s&&(i=Sa())!==s?n=u=[u,o,a,i]:(cu=n,n=s);n!==s;)e.push(n),n=cu,(u=da())!==s&&(o=Is())!==s&&(a=da())!==s&&(i=Sa())!==s?n=u=[u,o,a,i]:(cu=n,n=s);e!==s?(r=t=wr(t,e)):(cu=r,r=s);}else cu=r,r=s;return r}function Sa(){var r,t,e,n,u,o,a,i;if(r=cu,(t=Ia())!==s){for(e=[],n=cu,(u=da())!==s&&(o=Rs())!==s&&(a=da())!==s&&(i=Ia())!==s?n=u=[u,o,a,i]:(cu=n,n=s);n!==s;)e.push(n),n=cu,(u=da())!==s&&(o=Rs())!==s&&(a=da())!==s&&(i=Ia())!==s?n=u=[u,o,a,i]:(cu=n,n=s);e!==s?(r=t=wr(t,e)):(cu=r,r=s);}else cu=r,r=s;return r}function Ia(){var r,t,e;return (r=Hs())===s&&(r=Oa())===s&&(r=Ra())===s&&(r=Fs())===s&&(r=cu,la()!==s&&da()!==s&&(t=ma())!==s&&da()!==s&&fa()!==s?((e=t).parentheses=!0,r=e):(cu=r,r=s)),r}function Na(){var r,t,e,n,u,o,a;return r=cu,(t=gs())!==s?(e=cu,(n=da())!==s&&(u=aa())!==s&&(o=da())!==s&&(a=gs())!==s?e=n=[n,u,o,a]:(cu=e,e=s),e===s&&(e=null),e!==s?(r=t=function(r,t){let e=r;return null!==t&&(e=`${r}.${t[3]}`),e}(t,e)):(cu=r,r=s)):(cu=r,r=s),r}function Ra(){var r,t,e;return r=cu,(t=Na())!==s&&da()!==s&&la()!==s&&da()!==s?((e=_a())===s&&(e=null),e!==s&&da()!==s&&fa()!==s?(r=t={type:"function",name:t,args:{type:"expr_list",value:e}}):(cu=r,r=s)):(cu=r,r=s),r===s&&(r=cu,(t=Na())!==s&&(t=function(r){return {type:"function",name:r,args:null}}(t)),r=t),r}function _a(){var r,t,e,n,u,o,a,i;if(r=cu,(t=Ia())!==s){for(e=[],n=cu,(u=da())!==s&&(o=ia())!==s&&(a=da())!==s&&(i=Ia())!==s?n=u=[u,o,a,i]:(cu=n,n=s);n!==s;)e.push(n),n=cu,(u=da())!==s&&(o=ia())!==s&&(a=da())!==s&&(i=Ia())!==s?n=u=[u,o,a,i]:(cu=n,n=s);e!==s?(r=t=c(t,e)):(cu=r,r=s);}else cu=r,r=s;return r}function Oa(){var r,t,e,n,u;return r=cu,(t=ra())!==s&&(e=ga())!==s?(n=t,u=e,r=t={type:"var",...u,prefix:n}):(cu=r,r=s),r}function ga(){var t,e,n,u,o;return t=cu,(e=Ms())!==s&&(n=function(){var e,n,u,o;e=[],n=cu,46===r.charCodeAt(cu)?(u=".",cu++):(u=s,0===vu&&wu(Ct));u!==s&&(o=Ms())!==s?n=u=[u,o]:(cu=n,n=s);for(;n!==s;)e.push(n),n=cu,46===r.charCodeAt(cu)?(u=".",cu++):(u=s,0===vu&&wu(Ct)),u!==s&&(o=Ms())!==s?n=u=[u,o]:(cu=n,n=s);e!==s&&(e=function(r){const t=[];for(let e=0;e<r.length;e++)t.push(r[e][1]);return t}(e));return e}())!==s?(u=e,o=n,ja.push(u),t=e={type:"var",name:u,members:o,prefix:null}):(cu=t,t=s),t}function xa(){var t;return (t=function(){var t,e,n,u;t=cu,(e=$o())===s&&(e=Fo());if(e!==s)if(da()!==s)if(la()!==s)if(da()!==s){if(n=[],pt.test(r.charAt(cu))?(u=r.charAt(cu),cu++):(u=s,0===vu&&wu(wt)),u!==s)for(;u!==s;)n.push(u),pt.test(r.charAt(cu))?(u=r.charAt(cu),cu++):(u=s,0===vu&&wu(wt));else n=s;n!==s&&(u=da())!==s&&fa()!==s?(e={dataType:e,length:parseInt(n.join(""),10)},t=e):(cu=t,t=s);}else cu=t,t=s;else cu=t,t=s;else cu=t,t=s;else cu=t,t=s;t===s&&(t=cu,(e=$o())===s&&(e=Fo())===s&&(e=function(){var t,e,n,u;return t=cu,"string"===r.substr(cu,6).toLowerCase()?(e=r.substr(cu,6),cu+=6):(e=s,0===vu&&wu(Be)),e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?(t=e="STRING"):(cu=t,t=s)):(cu=t,t=s),t}()),e!==s&&(e=iu(e)),t=e);return t}())===s&&(t=function(){var t,e,n,u,o,a,i,c,l,f,b,v;t=cu,(e=Po())===s&&(e=Go())===s&&(e=jo())===s&&(e=Yo())===s&&(e=Bo())===s&&(e=Xo())===s&&(e=Wo())===s&&(e=Vo())===s&&(e=Ko());if(e!==s)if((n=da())!==s)if((u=la())!==s)if((o=da())!==s){if(a=[],pt.test(r.charAt(cu))?(i=r.charAt(cu),cu++):(i=s,0===vu&&wu(wt)),i!==s)for(;i!==s;)a.push(i),pt.test(r.charAt(cu))?(i=r.charAt(cu),cu++):(i=s,0===vu&&wu(wt));else a=s;if(a!==s)if((i=da())!==s){if(c=cu,(l=ia())!==s)if((f=da())!==s){if(b=[],pt.test(r.charAt(cu))?(v=r.charAt(cu),cu++):(v=s,0===vu&&wu(wt)),v!==s)for(;v!==s;)b.push(v),pt.test(r.charAt(cu))?(v=r.charAt(cu),cu++):(v=s,0===vu&&wu(wt));else b=s;b!==s?c=l=[l,f,b]:(cu=c,c=s);}else cu=c,c=s;else cu=c,c=s;c===s&&(c=null),c!==s&&(l=da())!==s&&(f=fa())!==s&&(b=da())!==s?((v=Ua())===s&&(v=null),v!==s?(d=c,L=v,e={dataType:e,length:parseInt(a.join(""),10),scale:d&&parseInt(d[2].join(""),10),parentheses:!0,suffix:L},t=e):(cu=t,t=s)):(cu=t,t=s);}else cu=t,t=s;else cu=t,t=s;}else cu=t,t=s;else cu=t,t=s;else cu=t,t=s;else cu=t,t=s;var d,L;if(t===s){if(t=cu,(e=Po())===s&&(e=Go())===s&&(e=jo())===s&&(e=Yo())===s&&(e=Bo())===s&&(e=Xo())===s&&(e=Wo())===s&&(e=Vo())===s&&(e=Ko()),e!==s){if(n=[],pt.test(r.charAt(cu))?(u=r.charAt(cu),cu++):(u=s,0===vu&&wu(wt)),u!==s)for(;u!==s;)n.push(u),pt.test(r.charAt(cu))?(u=r.charAt(cu),cu++):(u=s,0===vu&&wu(wt));else n=s;n!==s&&(u=da())!==s?((o=Ua())===s&&(o=null),o!==s?(e=function(r,t,e){return {dataType:r,length:parseInt(t.join(""),10),suffix:e}}(e,n,o),t=e):(cu=t,t=s)):(cu=t,t=s);}else cu=t,t=s;t===s&&(t=cu,(e=Po())===s&&(e=Go())===s&&(e=jo())===s&&(e=Yo())===s&&(e=Bo())===s&&(e=Xo())===s&&(e=Wo())===s&&(e=Vo())===s&&(e=Ko()),e!==s&&(n=da())!==s?((u=Ua())===s&&(u=null),u!==s&&(o=da())!==s?(e=function(r,t){return {dataType:r,suffix:t}}(e,u),t=e):(cu=t,t=s)):(cu=t,t=s));}return t}())===s&&(t=function(){var t,e,n,u;t=cu,(e=qo())===s&&(e=Zo())===s&&(e=zo())===s&&(e=Jo());if(e!==s)if(da()!==s)if(la()!==s)if(da()!==s){if(n=[],pt.test(r.charAt(cu))?(u=r.charAt(cu),cu++):(u=s,0===vu&&wu(wt)),u!==s)for(;u!==s;)n.push(u),pt.test(r.charAt(cu))?(u=r.charAt(cu),cu++):(u=s,0===vu&&wu(wt));else n=s;n!==s&&(u=da())!==s&&fa()!==s?(e={dataType:e,length:parseInt(n.join(""),10)},t=e):(cu=t,t=s);}else cu=t,t=s;else cu=t,t=s;else cu=t,t=s;else cu=t,t=s;t===s&&(t=cu,(e=qo())===s&&(e=Zo())===s&&(e=zo())===s&&(e=Jo()),e!==s&&(e=function(r){return {dataType:r}}(e)),t=e);return t}())===s&&(t=function(){var e;(e=function(){var t,e,n,u;return t=cu,"json"===r.substr(cu,4).toLowerCase()?(e=r.substr(cu,4),cu+=4):(e=s,0===vu&&wu(qe)),e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?(t=e="JSON"):(cu=t,t=s)):(cu=t,t=s),t}())!==s&&(e=iu(e));return e}())===s&&(t=function(){var e;(e=function(){var t,e,n,u;return t=cu,"tinytext"===r.substr(cu,8).toLowerCase()?(e=r.substr(cu,8),cu+=8):(e=s,0===vu&&wu(Je)),e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?(t=e="TINYTEXT"):(cu=t,t=s)):(cu=t,t=s),t}())===s&&(e=function(){var t,e,n,u;return t=cu,"text"===r.substr(cu,4).toLowerCase()?(e=r.substr(cu,4),cu+=4):(e=s,0===vu&&wu(Qe)),e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?(t=e="TEXT"):(cu=t,t=s)):(cu=t,t=s),t}())===s&&(e=function(){var t,e,n,u;return t=cu,"mediumtext"===r.substr(cu,10).toLowerCase()?(e=r.substr(cu,10),cu+=10):(e=s,0===vu&&wu(rn)),e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?(t=e="MEDIUMTEXT"):(cu=t,t=s)):(cu=t,t=s),t}())===s&&(e=function(){var t,e,n,u;return t=cu,"longtext"===r.substr(cu,8).toLowerCase()?(e=r.substr(cu,8),cu+=8):(e=s,0===vu&&wu(tn)),e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?(t=e="LONGTEXT"):(cu=t,t=s)):(cu=t,t=s),t}());e!==s&&(e={dataType:e});return e}()),t}function Ua(){var t,e,n;return t=cu,(e=Ho())===s&&(e=null),e!==s&&da()!==s?((n=function(){var t,e,n,u;return t=cu,"zerofill"===r.substr(cu,8).toLowerCase()?(e=r.substr(cu,8),cu+=8):(e=s,0===vu&&wu(Ve)),e!==s?(n=cu,vu++,u=Ds(),vu--,u===s?n=void 0:(cu=n,n=s),n!==s?(t=e="ZEROFILL"):(cu=t,t=s)):(cu=t,t=s),t}())===s&&(n=null),n!==s?(t=e=function(r,t){const e=[];return r&&e.push(r),t&&e.push(t),e}(e,n)):(cu=t,t=s)):(cu=t,t=s),t}const Ma={ALTER:!0,ALL:!0,ADD:!0,AND:!0,AS:!0,ASC:!0,BETWEEN:!0,BY:!0,CALL:!0,CASE:!0,CREATE:!0,CONTAINS:!0,CURRENT_DATE:!0,CURRENT_TIME:!0,CURRENT_TIMESTAMP:!0,CURRENT_USER:!0,DELETE:!0,DESC:!0,DISTINCT:!0,DROP:!0,ELSE:!0,END:!0,EXISTS:!0,EXPLAIN:!0,FALSE:!0,FROM:!0,FULL:!0,GROUP:!0,HAVING:!0,IN:!0,INNER:!0,INSERT:!0,INTO:!0,IS:!0,JOIN:!0,JSON:!0,KEY:!0,LEFT:!0,LIKE:!0,LIMIT:!0,LOW_PRIORITY:!0,NOT:!0,NULL:!0,ON:!0,OR:!0,ORDER:!0,OUTER:!0,RECURSIVE:!0,RENAME:!0,READ:!0,RIGHT:!0,SELECT:!0,SESSION_USER:!0,SET:!0,SHOW:!0,SYSTEM_USER:!0,TABLE:!0,THEN:!0,TRUE:!0,TRUNCATE:!0,UNION:!0,UPDATE:!0,USING:!0,VALUES:!0,WITH:!0,WHEN:!0,WHERE:!0,WRITE:!0,GLOBAL:!0,SESSION:!0,LOCAL:!0,PERSIST:!0,PERSIST_ONLY:!0};function Da(r,t){return {type:"unary_expr",operator:r,expr:t}}function ka(r,t,e){return {type:"binary_expr",operator:r,left:t,right:e}}function $a(r){const t=n(Number.MAX_SAFE_INTEGER);return !(n(r)<t)}function Fa(r,t,e=3){const n=[r];for(let r=0;r<t.length;r++)n.push(t[r][e]);return n}function Pa(r,t){let e=r;for(let r=0;r<t.length;r++)e=ka(t[r][1],e,t[r][3]);return e}function Ga(r){const t=Xa[r];return t||(r||null)}function Ha(r){const t=new Set;for(let e of r.keys()){const r=e.split("::");if(!r){t.add(e);break}r&&r[1]&&(r[1]=Ga(r[1])),t.add(r.join("::"));}return Array.from(t)}let ja=[];const Ya=new Set,Ba=new Set,Xa={};if((e=a())!==s&&cu===r.length)return e;throw e!==s&&cu<r.length&&wu({type:"end"}),Eu(bu,fu<r.length?r.charAt(fu):null,fu<r.length?pu(fu,fu+1):pu(fu,fu))}};},function(r,t,e){var n=e(0);function u(r,t,e,n){this.message=r,this.expected=t,this.found=e,this.location=n,this.name="SyntaxError","function"==typeof Error.captureStackTrace&&Error.captureStackTrace(this,u);}!function(r,t){function e(){this.constructor=r;}e.prototype=t.prototype,r.prototype=new e;}(u,Error),u.buildMessage=function(r,t){var e={literal:function(r){return '"'+u(r.text)+'"'},class:function(r){var t,e="";for(t=0;t<r.parts.length;t++)e+=r.parts[t]instanceof Array?s(r.parts[t][0])+"-"+s(r.parts[t][1]):s(r.parts[t]);return "["+(r.inverted?"^":"")+e+"]"},any:function(r){return "any character"},end:function(r){return "end of input"},other:function(r){return r.description}};function n(r){return r.charCodeAt(0).toString(16).toUpperCase()}function u(r){return r.replace(/\\/g,"\\\\").replace(/"/g,'\\"').replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(r){return "\\x0"+n(r)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(r){return "\\x"+n(r)}))}function s(r){return r.replace(/\\/g,"\\\\").replace(/\]/g,"\\]").replace(/\^/g,"\\^").replace(/-/g,"\\-").replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(r){return "\\x0"+n(r)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(r){return "\\x"+n(r)}))}return "Expected "+function(r){var t,n,u,s=new Array(r.length);for(t=0;t<r.length;t++)s[t]=(u=r[t],e[u.type](u));if(s.sort(),s.length>0){for(t=1,n=1;t<s.length;t++)s[t-1]!==s[t]&&(s[n]=s[t],n++);s.length=n;}switch(s.length){case 1:return s[0];case 2:return s[0]+" or "+s[1];default:return s.slice(0,-1).join(", ")+", or "+s[s.length-1]}}(r)+" but "+function(r){return r?'"'+u(r)+'"':"end of input"}(t)+" found."},r.exports={SyntaxError:u,parse:function(r,t){t=void 0!==t?t:{};var e,s={},o={start:ns},a=ns,i=function(r,t){return Fi(r,t)},c=function(r,t){return Fi(r,t,1)},l=function(r,t){return Fi(r,t)},f=zu("AUTO_INCREMENT",!0),b=zu("UNIQUE",!0),v=zu("KEY",!0),d=zu("PRIMARY",!0),L=zu("COLUMN_FORMAT",!0),C=zu("FIXED",!0),p=zu("DYNAMIC",!0),w=zu("DEFAULT",!0),E=zu("STORAGE",!0),h=zu("DISK",!0),A=zu("MEMORY",!0),y=zu("ALGORITHM",!0),T=zu("INSTANT",!0),m=zu("INPLACE",!0),S=zu("COPY",!0),I=zu("LOCK",!0),N=zu("NONE",!0),R=zu("SHARED",!0),_=zu("EXCLUSIVE",!0),O=zu("CHANGE",!0),g=zu("FIRST",!0),x=zu("AFTER",!0),U=zu("FOREIGN",!0),M=zu("CHECK",!0),D=zu("NOCHECK",!0),k=zu("NOT",!0),$=zu("FOR",!0),F=zu("REPLICATION",!0),P=zu("FOREIGN KEY",!0),G=zu("ENFORCED",!0),H=zu("MATCH FULL",!0),j=zu("MATCH PARTIAL",!0),Y=zu("MATCH SIMPLE",!0),B=zu("ON",!0),X=zu("DELETE",!0),W=zu("UPDATE",!0),V=zu("RESTRICT",!0),K=zu("CASCADE",!0),q=zu("SET NULL",!0),Z=zu("NO ACTION",!0),z=zu("SET DEFAULT",!0),J=zu("CHARACTER",!0),Q=zu("SET",!0),rr=zu("CHARSET",!0),tr=zu("COLLATE",!0),er=zu("AVG_ROW_LENGTH",!0),nr=zu("KEY_BLOCK_SIZE",!0),ur=zu("MAX_ROWS",!0),sr=zu("MIN_ROWS",!0),or=zu("STATS_SAMPLE_PAGES",!0),ar=zu("CONNECTION",!0),ir=zu("COMPRESSION",!0),cr=zu("'",!1),lr=zu("ZLIB",!0),fr=zu("LZ4",!0),br=zu("ENGINE",!0),vr=function(r,t,e){return {keyword:r.toLowerCase(),symbol:t,value:e.toUpperCase()}},dr=zu("ROW_FORMAT",!0),Lr=zu("COMPRESSED",!0),Cr=zu("REDUNDANT",!0),pr=zu("COMPACT",!0),wr=zu("READ",!0),Er=zu("LOCAL",!0),hr=zu("LOW_PRIORITY",!0),Ar=zu("WRITE",!0),yr=function(r,t){return Fi(r,t)},Tr=zu("BINARY",!0),mr=zu("MASTER",!0),Sr=zu("LOGS",!0),Ir=zu("BINLOG",!0),Nr=zu("EVENTS",!0),Rr=zu("COLLATION",!0),_r=zu("GRANTS",!0),Or=zu("(",!1),gr=zu(")",!1),xr=zu("BTREE",!0),Ur=zu("HASH",!0),Mr=zu("WITH",!0),Dr=zu("PARSER",!0),kr=zu("VISIBLE",!0),$r=zu("INVISIBLE",!0),Fr=function(r,t){return t.unshift(r),t.forEach(r=>{const{table:t,as:e}=r;Xi[t]=t,e&&(Xi[e]=t),function(r){const t=Hi(r);r.clear(),t.forEach(t=>r.add(t));}(Bi);}),t},Pr=zu("=",!1),Gr=zu("DUPLICATE",!0),Hr=function(r,t){return Pi(r,t)},jr=zu("!",!1),Yr=function(r){return r[0]+" "+r[2]},Br=zu(">=",!1),Xr=zu(">",!1),Wr=zu("<=",!1),Vr=zu("<>",!1),Kr=zu("<",!1),qr=zu("!=",!1),Zr=zu("+",!1),zr=zu("-",!1),Jr=zu("*",!1),Qr=zu("/",!1),rt=zu("%",!1),tt=zu("div",!0),et=zu("?",!1),nt=function(r){return !0===Mi[r.toUpperCase()]},ut=zu('"',!1),st=/^[^"]/,ot=Ju(['"'],!0,!1),at=function(r){return r.join("")},it=/^[^']/,ct=Ju(["'"],!0,!1),lt=zu("`",!1),ft=/^[^`]/,bt=Ju(["`"],!0,!1),vt=function(r,t){return r+t.join("")},dt=/^[A-Za-z_]/,Lt=Ju([["A","Z"],["a","z"],"_"],!1,!1),Ct=/^[A-Za-z0-9_]/,pt=Ju([["A","Z"],["a","z"],["0","9"],"_"],!1,!1),wt=/^[A-Za-z0-9_:]/,Et=Ju([["A","Z"],["a","z"],["0","9"],"_",":"],!1,!1),ht=zu(":",!1),At=zu("convert",!0),yt=function(r,t,e){return {type:"function",name:r,args:t||{type:"expr_list",value:[]},over:e}},Tt=zu("X",!0),mt=function(r,t){return {type:r.toLowerCase(),value:t[1].join("")}},St=/^[^"\\\0-\x1F\x7F]/,It=Ju(['"',"\\",["\0",""],""],!0,!1),Nt=/^[^'\\]/,Rt=Ju(["'","\\"],!0,!1),_t=zu("\\'",!1),Ot=zu('\\"',!1),gt=zu("\\\\",!1),xt=zu("\\/",!1),Ut=zu("\\b",!1),Mt=zu("\\f",!1),Dt=zu("\\n",!1),kt=zu("\\r",!1),$t=zu("\\t",!1),Ft=zu("\\u",!1),Pt=zu("\\",!1),Gt=/^[\n\r]/,Ht=Ju(["\n","\r"],!1,!1),jt=zu(".",!1),Yt=/^[0-9]/,Bt=Ju([["0","9"]],!1,!1),Xt=/^[0-9a-fA-F]/,Wt=Ju([["0","9"],["a","f"],["A","F"]],!1,!1),Vt=/^[eE]/,Kt=Ju(["e","E"],!1,!1),qt=/^[+\-]/,Zt=Ju(["+","-"],!1,!1),zt=zu("NULL",!0),Jt=zu("NOT NULL",!0),Qt=zu("TRUE",!0),re=zu("TO",!0),te=zu("FALSE",!0),ee=zu("SHOW",!0),ne=zu("DROP",!0),ue=zu("USE",!0),se=zu("ALTER",!0),oe=zu("SELECT",!0),ae=zu("CREATE",!0),ie=zu("TEMPORARY",!0),ce=zu("IF NOT EXISTS",!0),le=zu("INSERT",!0),fe=zu("RECURSIVE",!1),be=zu("REPLACE",!0),ve=zu("RENAME",!0),de=zu("IGNORE",!0),Le=(zu("PARTITION",!0)),Ce=zu("INTO",!0),pe=zu("FROM",!0),we=zu("UNLOCK",!0),Ee=zu("AS",!0),he=zu("TABLE",!0),Ae=zu("TABLES",!0),ye=zu("DATABASE",!0),Te=zu("SCHEME",!0),me=zu("LEFT",!0),Se=zu("RIGHT",!0),Ie=zu("FULL",!0),Ne=zu("INNER",!0),Re=zu("JOIN",!0),_e=zu("OUTER",!0),Oe=zu("OVER",!0),ge=zu("UNION",!0),xe=zu("VALUES",!0),Ue=zu("USING",!0),Me=zu("WHERE",!0),De=zu("GROUP",!0),ke=zu("BY",!0),$e=zu("ORDER",!0),Fe=zu("HAVING",!0),Pe=zu("LIMIT",!0),Ge=zu("OFFSET",!0),He=zu("ASC",!0),je=zu("DESC",!0),Ye=zu("DESCRIBE",!0),Be=zu("ALL",!0),Xe=zu("DISTINCT",!0),We=zu("BETWEEN",!0),Ve=zu("IN",!0),Ke=zu("IS",!0),qe=zu("LIKE",!0),Ze=zu("RLIKE",!0),ze=zu("REGEXP",!0),Je=zu("EXISTS",!0),Qe=zu("AND",!0),rn=zu("OR",!0),tn=zu("COUNT",!0),en=zu("GROUP_CONCAT",!0),nn=zu("MAX",!0),un=zu("MIN",!0),sn=zu("SUM",!0),on=zu("AVG",!0),an=zu("CALL",!0),cn=zu("CASE",!0),ln=zu("WHEN",!0),fn=zu("THEN",!0),bn=zu("ELSE",!0),vn=zu("END",!0),dn=zu("CAST",!0),Ln=zu("BIT",!0),Cn=zu("CHAR",!0),pn=zu("VARCHAR",!0),wn=zu("NUMERIC",!0),En=zu("DECIMAL",!0),hn=zu("SIGNED",!0),An=zu("UNSIGNED",!0),yn=zu("INT",!0),Tn=zu("ZEROFILL",!0),mn=zu("INTEGER",!0),Sn=zu("JSON",!0),In=zu("SMALLINT",!0),Nn=zu("TINYINT",!0),Rn=zu("TINYTEXT",!0),_n=zu("TEXT",!0),On=zu("MEDIUMTEXT",!0),gn=zu("LONGTEXT",!0),xn=zu("BIGINT",!0),Un=zu("ENUM",!0),Mn=zu("FLOAT",!0),Dn=zu("DOUBLE",!0),kn=zu("DATE",!0),$n=zu("DATETIME",!0),Fn=zu("TIME",!0),Pn=zu("TIMESTAMP",!0),Gn=zu("TRUNCATE",!0),Hn=zu("USER",!0),jn=zu("CURRENT_DATE",!0),Yn=(zu("INTERVAL",!0)),Bn=zu("YEAR",!0),Xn=zu("MONTH",!0),Wn=zu("DAY",!0),Vn=zu("HOUR",!0),Kn=zu("MINUTE",!0),qn=zu("SECOND",!0),Zn=zu("CURRENT_TIME",!0),zn=zu("CURRENT_TIMESTAMP",!0),Jn=zu("CURRENT_USER",!0),Qn=zu("SESSION_USER",!0),ru=zu("SYSTEM_USER",!0),tu=zu("GLOBAL",!0),eu=zu("SESSION",!0),nu=zu("PERSIST",!0),uu=zu("PERSIST_ONLY",!0),su=zu("@",!1),ou=zu("@@",!1),au=zu("$",!1),iu=zu("return",!0),cu=zu(":=",!1),lu=zu("DUAL",!0),fu=zu("ADD",!0),bu=zu("COLUMN",!0),vu=zu("INDEX",!0),du=zu("FULLTEXT",!0),Lu=zu("SPATIAL",!0),Cu=zu("COMMENT",!0),pu=zu("CONSTRAINT",!0),wu=zu("REFERENCES",!0),Eu=zu("SQL_CALC_FOUND_ROWS",!0),hu=zu("SQL_CACHE",!0),Au=zu("SQL_NO_CACHE",!0),yu=zu("SQL_SMALL_RESULT",!0),Tu=zu("SQL_BIG_RESULT",!0),mu=zu("SQL_BUFFER_RESULT",!0),Su=zu(",",!1),Iu=zu("[",!1),Nu=zu("]",!1),Ru=zu(";",!1),_u=zu("->",!1),Ou=zu("->>",!1),gu=zu("||",!1),xu=zu("&&",!1),Uu=zu("/*",!1),Mu=zu("*/",!1),Du=zu("--",!1),ku=zu("#",!1),$u={type:"any"},Fu=/^[ \t\n\r]/,Pu=Ju([" ","\t","\n","\r"],!1,!1),Gu=zu("boolean",!0),Hu=zu("binary",!0),ju=zu("varbinary",!0),Yu=function(r){return {dataType:r}},Bu=/^[0-6]/,Xu=Ju([["0","6"]],!1,!1),Wu=0,Vu=[{line:1,column:1}],Ku=0,qu=[],Zu=0;if("startRule"in t){if(!(t.startRule in o))throw new Error("Can't start parsing from rule \""+t.startRule+'".');a=o[t.startRule];}function zu(r,t){return {type:"literal",text:r,ignoreCase:t}}function Ju(r,t,e){return {type:"class",parts:r,inverted:t,ignoreCase:e}}function Qu(t){var e,n=Vu[t];if(n)return n;for(e=t-1;!Vu[e];)e--;for(n={line:(n=Vu[e]).line,column:n.column};e<t;)10===r.charCodeAt(e)?(n.line++,n.column=1):n.column++,e++;return Vu[t]=n,n}function rs(r,t){var e=Qu(r),n=Qu(t);return {start:{offset:r,line:e.line,column:e.column},end:{offset:t,line:n.line,column:n.column}}}function ts(r){Wu<Ku||(Wu>Ku&&(Ku=Wu,qu=[]),qu.push(r));}function es(r,t,e){return new u(u.buildMessage(r,t),r,t,e)}function ns(){var r,t;return r=Wu,vi()!==s?((t=function(){var r,t,e,n,u,o,a,i;if(r=Wu,(t=ss())!==s){if(e=[],n=Wu,(u=vi())!==s&&(o=fi())!==s&&(a=vi())!==s&&(i=ss())!==s?n=u=[u,o,a,i]:(Wu=n,n=s),n!==s)for(;n!==s;)e.push(n),n=Wu,(u=vi())!==s&&(o=fi())!==s&&(a=vi())!==s&&(i=ss())!==s?n=u=[u,o,a,i]:(Wu=n,n=s);else e=s;e!==s?(t=function(r,t){const e=[r&&r.ast||r];for(let r=0;r<t.length;r++)t[r][3]&&0!==t[r][3].length&&e.push(t[r][3]&&t[r][3].ast||t[r][3]);return {tableList:Array.from(Yi),columnList:Hi(Bi),ast:e}}(t,e),r=t):(Wu=r,r=s);}else Wu=r,r=s;return r}())===s&&(t=us())===s&&(t=ss()),t!==s?(r=t):(Wu=r,r=s)):(Wu=r,r=s),r}function us(){var t;return (t=function(){var r,t,e,n,u,o;r=Wu,(t=Zo())!==s&&vi()!==s&&(e=aa())!==s&&vi()!==s&&(n=Ps())!==s?(a=t,i=e,(l=n)&&l.forEach(r=>Yi.add(`${a}::${r.db}::${r.table}`)),t={tableList:Array.from(Yi),columnList:Hi(Bi),ast:{type:a.toLowerCase(),keyword:i.toLowerCase(),name:l}},r=t):(Wu=r,r=s);var a,i,l;r===s&&(r=Wu,(t=Zo())!==s&&vi()!==s&&(e=Qa())!==s&&vi()!==s&&(n=yo())!==s&&vi()!==s&&ca()!==s&&vi()!==s&&(u=Ys())!==s&&vi()!==s?((o=function(){var r,t,e,n,u,o;r=Wu,(t=vs())===s&&(t=ds());if(t!==s){for(e=[],n=Wu,(u=vi())!==s?((o=vs())===s&&(o=ds()),o!==s?n=u=[u,o]:(Wu=n,n=s)):(Wu=n,n=s);n!==s;)e.push(n),n=Wu,(u=vi())!==s?((o=vs())===s&&(o=ds()),o!==s?n=u=[u,o]:(Wu=n,n=s)):(Wu=n,n=s);e!==s?(t=c(t,e),r=t):(Wu=r,r=s);}else Wu=r,r=s;return r}())===s&&(o=null),o!==s&&vi()!==s?(t=function(r,t,e,n,u){return {tableList:Array.from(Yi),columnList:Hi(Bi),ast:{type:r.toLowerCase(),keyword:t.toLowerCase(),name:e,table:n,options:u}}}(t,e,n,u,o),r=t):(Wu=r,r=s)):(Wu=r,r=s));return r}())===s&&(t=function(){var t;(t=function(){var t,e,n,u,o,a,c,f,b,v;t=Wu,(e=Jo())!==s&&vi()!==s?((n=Qo())===s&&(n=null),n!==s&&vi()!==s&&aa()!==s&&vi()!==s?((u=ra())===s&&(u=null),u!==s&&vi()!==s&&(o=Ys())!==s&&vi()!==s&&(a=function r(){var t,e;(t=function(){var r,t;r=Wu,Ta()!==s&&vi()!==s&&(t=Ps())!==s?(r={type:"like",table:t}):(Wu=r,r=s);return r}())===s&&(t=Wu,ci()!==s&&vi()!==s&&(e=r())!==s&&vi()!==s&&li()!==s?((n=e).parentheses=!0,t=n):(Wu=t,t=s));var n;return t}())!==s?(d=e,L=n,C=u,w=a,(p=o)&&Yi.add(`create::${p.db}::${p.table}`),e={tableList:Array.from(Yi),columnList:Hi(Bi),ast:{type:d[0].toLowerCase(),keyword:"table",temporary:L&&L[0].toLowerCase(),if_not_exists:C&&C[0].toLowerCase(),table:[p],like:w}},t=e):(Wu=t,t=s)):(Wu=t,t=s)):(Wu=t,t=s);var d,L,C,p,w;t===s&&(t=Wu,(e=Jo())!==s&&vi()!==s?((n=Qo())===s&&(n=null),n!==s&&vi()!==s&&aa()!==s&&vi()!==s?((u=ra())===s&&(u=null),u!==s&&vi()!==s&&(o=Ys())!==s&&vi()!==s?((a=function(){var r,t,e,n,u,o,a,i,c;if(r=Wu,(t=ci())!==s)if(vi()!==s)if((e=is())!==s){for(n=[],u=Wu,(o=vi())!==s&&(a=ai())!==s&&(i=vi())!==s&&(c=is())!==s?u=o=[o,a,i,c]:(Wu=u,u=s);u!==s;)n.push(u),u=Wu,(o=vi())!==s&&(a=ai())!==s&&(i=vi())!==s&&(c=is())!==s?u=o=[o,a,i,c]:(Wu=u,u=s);n!==s&&(u=vi())!==s&&(o=li())!==s?(t=l(e,n),r=t):(Wu=r,r=s);}else Wu=r,r=s;else Wu=r,r=s;else Wu=r,r=s;return r}())===s&&(a=null),a!==s&&vi()!==s?((c=function(){var r,t,e,n,u,o,a,c;if(r=Wu,(t=Ts())!==s){for(e=[],n=Wu,(u=vi())!==s?((o=ai())===s&&(o=null),o!==s&&(a=vi())!==s&&(c=Ts())!==s?n=u=[u,o,a,c]:(Wu=n,n=s)):(Wu=n,n=s);n!==s;)e.push(n),n=Wu,(u=vi())!==s?((o=ai())===s&&(o=null),o!==s&&(a=vi())!==s&&(c=Ts())!==s?n=u=[u,o,a,c]:(Wu=n,n=s)):(Wu=n,n=s);e!==s?(t=i(t,e),r=t):(Wu=r,r=s);}else Wu=r,r=s;return r}())===s&&(c=null),c!==s&&vi()!==s?((f=function(){var t,e,n,u;t=Wu,"ignore"===r.substr(Wu,6).toLowerCase()?(e=r.substr(Wu,6),Wu+=6):(e=s,0===Zu&&ts(de));e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?t=e=[e,n]:(Wu=t,t=s)):(Wu=t,t=s);return t}())===s&&(f=ta()),f===s&&(f=null),f!==s&&vi()!==s?((b=oa())===s&&(b=null),b!==s&&vi()!==s?((v=os())===s&&(v=null),v!==s?(e=function(r,t,e,n,u,s,o,a,i){return n&&Yi.add(`create::${n.db}::${n.table}`),{tableList:Array.from(Yi),columnList:Hi(Bi),ast:{type:r[0].toLowerCase(),keyword:"table",temporary:t&&t[0].toLowerCase(),if_not_exists:e&&e[0].toLowerCase(),table:[n],ignore_replace:o&&o[0].toLowerCase(),as:a&&a[0].toLowerCase(),query_expr:i&&i.ast,create_definitions:u,table_options:s}}}(e,n,u,o,a,c,f,b,v),t=e):(Wu=t,t=s)):(Wu=t,t=s)):(Wu=t,t=s)):(Wu=t,t=s)):(Wu=t,t=s)):(Wu=t,t=s)):(Wu=t,t=s)):(Wu=t,t=s));return t}())===s&&(t=function(){var r,t,e,n,u,o,a,c,l,f,b,v;r=Wu,(t=Jo())!==s&&vi()!==s?((e=ni())===s&&(e=ti())===s&&(e=ei()),e===s&&(e=null),e!==s&&vi()!==s&&(n=Qa())!==s&&vi()!==s&&(u=To())!==s&&vi()!==s?((o=ks())===s&&(o=null),o!==s&&vi()!==s&&(a=ca())!==s&&vi()!==s&&(c=Ys())!==s&&vi()!==s&&ci()!==s&&vi()!==s&&(l=function(){var r,t,e,n,u,o,a,c;if(r=Wu,(t=as())!==s){for(e=[],n=Wu,(u=vi())!==s&&(o=ai())!==s&&(a=vi())!==s&&(c=as())!==s?n=u=[u,o,a,c]:(Wu=n,n=s);n!==s;)e.push(n),n=Wu,(u=vi())!==s&&(o=ai())!==s&&(a=vi())!==s&&(c=as())!==s?n=u=[u,o,a,c]:(Wu=n,n=s);e!==s?(t=i(t,e),r=t):(Wu=r,r=s);}else Wu=r,r=s;return r}())!==s&&vi()!==s&&li()!==s&&vi()!==s?((f=$s())===s&&(f=null),f!==s&&vi()!==s?((b=vs())===s&&(b=null),b!==s&&vi()!==s?((v=ds())===s&&(v=null),v!==s&&vi()!==s?(d=t,L=e,C=n,p=u,w=o,E=a,h=c,A=l,y=f,T=b,m=v,t={tableList:Array.from(Yi),columnList:Hi(Bi),ast:{type:d[0].toLowerCase(),index_type:L&&L.toLowerCase(),keyword:C.toLowerCase(),index:p,on_kw:E[0].toLowerCase(),table:h,index_columns:A,index_using:w,index_options:y,algorithm_option:T,lock_option:m}},r=t):(Wu=r,r=s)):(Wu=r,r=s)):(Wu=r,r=s)):(Wu=r,r=s)):(Wu=r,r=s)):(Wu=r,r=s);var d,L,C,p,w,E,h,A,y,T,m;return r}())===s&&(t=function(){var t,e,n,u,o,a;t=Wu,(e=Jo())!==s&&vi()!==s?((n=function(){var t,e,n,u;t=Wu,"database"===r.substr(Wu,8).toLowerCase()?(e=r.substr(Wu,8),Wu+=8):(e=s,0===Zu&&ts(ye));e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="DATABASE"):(Wu=t,t=s)):(Wu=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=Wu,"scheme"===r.substr(Wu,6).toLowerCase()?(e=r.substr(Wu,6),Wu+=6):(e=s,0===Zu&&ts(Te));e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="SCHEME"):(Wu=t,t=s)):(Wu=t,t=s);return t}()),n!==s&&vi()!==s?((u=ra())===s&&(u=null),u!==s&&vi()!==s&&(o=No())!==s&&vi()!==s?((a=function(){var r,t,e,n,u,o;if(r=Wu,(t=ys())!==s){for(e=[],n=Wu,(u=vi())!==s&&(o=ys())!==s?n=u=[u,o]:(Wu=n,n=s);n!==s;)e.push(n),n=Wu,(u=vi())!==s&&(o=ys())!==s?n=u=[u,o]:(Wu=n,n=s);e!==s?(t=c(t,e),r=t):(Wu=r,r=s);}else Wu=r,r=s;return r}())===s&&(a=null),a!==s?(i=e,l=u,f=o,b=a,e={tableList:Array.from(Yi),columnList:Hi(Bi),ast:{type:i[0].toLowerCase(),keyword:"database",if_not_exists:l&&l[0].toLowerCase(),database:f,create_definitions:b}},t=e):(Wu=t,t=s)):(Wu=t,t=s)):(Wu=t,t=s)):(Wu=t,t=s);var i,l,f,b;return t}());return t}())===s&&(t=function(){var t,e,n,u;t=Wu,(e=function(){var t,e,n,u;t=Wu,"truncate"===r.substr(Wu,8).toLowerCase()?(e=r.substr(Wu,8),Wu+=8):(e=s,0===Zu&&ts(Gn));e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="TRUNCATE"):(Wu=t,t=s)):(Wu=t,t=s);return t}())!==s&&vi()!==s?((n=aa())===s&&(n=null),n!==s&&vi()!==s&&(u=Ps())!==s?(o=e,a=n,(i=u)&&i.forEach(r=>Yi.add(`${o}::${r.db}::${r.table}`)),e={tableList:Array.from(Yi),columnList:Hi(Bi),ast:{type:o.toLowerCase(),keyword:a&&a.toLowerCase()||"table",name:i}},t=e):(Wu=t,t=s)):(Wu=t,t=s);var o,a,i;return t}())===s&&(t=function(){var r,t,e;r=Wu,(t=ea())!==s&&vi()!==s&&aa()!==s&&vi()!==s&&(e=function(){var r,t,e,n,u,o,a,i;if(r=Wu,(t=Ds())!==s){for(e=[],n=Wu,(u=vi())!==s&&(o=ai())!==s&&(a=vi())!==s&&(i=Ds())!==s?n=u=[u,o,a,i]:(Wu=n,n=s);n!==s;)e.push(n),n=Wu,(u=vi())!==s&&(o=ai())!==s&&(a=vi())!==s&&(i=Ds())!==s?n=u=[u,o,a,i]:(Wu=n,n=s);e!==s?(t=l(t,e),r=t):(Wu=r,r=s);}else Wu=r,r=s;return r}())!==s?((n=e).forEach(r=>r.forEach(r=>r.table&&Yi.add(`rename::${r.db}::${r.table}`))),t={tableList:Array.from(Yi),columnList:Hi(Bi),ast:{type:"rename",table:n}},r=t):(Wu=r,r=s);var n;return r}())===s&&(t=function(){var t,e,n;t=Wu,(e=function(){var t,e,n,u;t=Wu,"call"===r.substr(Wu,4).toLowerCase()?(e=r.substr(Wu,4),Wu+=4):(e=s,0===Zu&&ts(an));e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="CALL"):(Wu=t,t=s)):(Wu=t,t=s);return t}())!==s&&vi()!==s&&(n=Ni())!==s?(u=n,e={tableList:Array.from(Yi),columnList:Hi(Bi),ast:{type:"call",expr:u}},t=e):(Wu=t,t=s);var u;return t}())===s&&(t=function(){var t,e,n;t=Wu,(e=function(){var t,e,n,u;t=Wu,"use"===r.substr(Wu,3).toLowerCase()?(e=r.substr(Wu,3),Wu+=3):(e=s,0===Zu&&ts(ue));e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?t=e=[e,n]:(Wu=t,t=s)):(Wu=t,t=s);return t}())!==s&&vi()!==s&&(n=To())!==s?(u=n,Yi.add(`use::${u}::null`),e={tableList:Array.from(Yi),columnList:Hi(Bi),ast:{type:"use",db:u}},t=e):(Wu=t,t=s);var u;return t}())===s&&(t=function(){var t,e,n,u;t=Wu,(e=function(){var t,e,n,u;t=Wu,"alter"===r.substr(Wu,5).toLowerCase()?(e=r.substr(Wu,5),Wu+=5):(e=s,0===Zu&&ts(se));e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?t=e=[e,n]:(Wu=t,t=s)):(Wu=t,t=s);return t}())!==s&&vi()!==s&&aa()!==s&&vi()!==s&&(n=Ys())!==s&&vi()!==s&&(u=function(){var r,t,e,n,u,o,a,i;if(r=Wu,(t=bs())!==s){for(e=[],n=Wu,(u=vi())!==s&&(o=ai())!==s&&(a=vi())!==s&&(i=bs())!==s?n=u=[u,o,a,i]:(Wu=n,n=s);n!==s;)e.push(n),n=Wu,(u=vi())!==s&&(o=ai())!==s&&(a=vi())!==s&&(i=bs())!==s?n=u=[u,o,a,i]:(Wu=n,n=s);e!==s?(t=l(t,e),r=t):(Wu=r,r=s);}else Wu=r,r=s;return r}())!==s?(o=n,a=u,Yi.add(`alter::${o.db}::${o.table}`),e={tableList:Array.from(Yi),columnList:Hi(Bi),ast:{type:"alter",table:[o],expr:a}},t=e):(Wu=t,t=s);var o,a;return t}())===s&&(t=function(){var t,e,n,u;t=Wu,(e=sa())!==s&&vi()!==s?((n=function(){var t,e,n,u;t=Wu,"global"===r.substr(Wu,6).toLowerCase()?(e=r.substr(Wu,6),Wu+=6):(e=s,0===Zu&&ts(tu));e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="GLOBAL"):(Wu=t,t=s)):(Wu=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=Wu,"session"===r.substr(Wu,7).toLowerCase()?(e=r.substr(Wu,7),Wu+=7):(e=s,0===Zu&&ts(eu));e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="SESSION"):(Wu=t,t=s)):(Wu=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=Wu,"local"===r.substr(Wu,5).toLowerCase()?(e=r.substr(Wu,5),Wu+=5):(e=s,0===Zu&&ts(Er));e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="LOCAL"):(Wu=t,t=s)):(Wu=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=Wu,"persist"===r.substr(Wu,7).toLowerCase()?(e=r.substr(Wu,7),Wu+=7):(e=s,0===Zu&&ts(nu));e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="PERSIST"):(Wu=t,t=s)):(Wu=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=Wu,"persist_only"===r.substr(Wu,12).toLowerCase()?(e=r.substr(Wu,12),Wu+=12):(e=s,0===Zu&&ts(uu));e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="PERSIST_ONLY"):(Wu=t,t=s)):(Wu=t,t=s);return t}()),n===s&&(n=null),n!==s&&vi()!==s&&(u=Ai())!==s?(o=n,(a=u).keyword=o,e={tableList:Array.from(Yi),columnList:Hi(Bi),ast:{type:"set",expr:a}},t=e):(Wu=t,t=s)):(Wu=t,t=s);var o,a;return t}())===s&&(t=function(){var t,e,n;t=Wu,(e=function(){var t,e,n,u;t=Wu,"lock"===r.substr(Wu,4).toLowerCase()?(e=r.substr(Wu,4),Wu+=4):(e=s,0===Zu&&ts(I));e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?t=e=[e,n]:(Wu=t,t=s)):(Wu=t,t=s);return t}())!==s&&vi()!==s&&ia()!==s&&vi()!==s&&(n=function(){var r,t,e,n,u,o,a,i;if(r=Wu,(t=ms())!==s){for(e=[],n=Wu,(u=vi())!==s&&(o=ai())!==s&&(a=vi())!==s&&(i=ms())!==s?n=u=[u,o,a,i]:(Wu=n,n=s);n!==s;)e.push(n),n=Wu,(u=vi())!==s&&(o=ai())!==s&&(a=vi())!==s&&(i=ms())!==s?n=u=[u,o,a,i]:(Wu=n,n=s);e!==s?(t=yr(t,e),r=t):(Wu=r,r=s);}else Wu=r,r=s;return r}())!==s?(u=n,e={tableList:Array.from(Yi),columnList:Hi(Bi),ast:{type:"lock",keyword:"tables",tables:u}},t=e):(Wu=t,t=s);var u;return t}())===s&&(t=function(){var t,e;t=Wu,(e=function(){var t,e,n,u;t=Wu,"unlock"===r.substr(Wu,6).toLowerCase()?(e=r.substr(Wu,6),Wu+=6):(e=s,0===Zu&&ts(we));e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?t=e=[e,n]:(Wu=t,t=s)):(Wu=t,t=s);return t}())!==s&&vi()!==s&&ia()!==s?(e={tableList:Array.from(Yi),columnList:Hi(Bi),ast:{type:"unlock",keyword:"tables"}},t=e):(Wu=t,t=s);return t}())===s&&(t=function(){var t,e,n,u,o,a,i,c,l;t=Wu,(e=qo())!==s&&vi()!==s?("binary"===r.substr(Wu,6).toLowerCase()?(n=r.substr(Wu,6),Wu+=6):(n=s,0===Zu&&ts(Tr)),n===s&&("master"===r.substr(Wu,6).toLowerCase()?(n=r.substr(Wu,6),Wu+=6):(n=s,0===Zu&&ts(mr))),n!==s&&(u=vi())!==s?("logs"===r.substr(Wu,4).toLowerCase()?(o=r.substr(Wu,4),Wu+=4):(o=s,0===Zu&&ts(Sr)),o!==s?(f=n,e={tableList:Array.from(Yi),columnList:Hi(Bi),ast:{type:"show",suffix:"logs",keyword:f.toLowerCase()}},t=e):(Wu=t,t=s)):(Wu=t,t=s)):(Wu=t,t=s);var f;t===s&&(t=Wu,(e=qo())!==s&&vi()!==s?("binlog"===r.substr(Wu,6).toLowerCase()?(n=r.substr(Wu,6),Wu+=6):(n=s,0===Zu&&ts(Ir)),n!==s&&(u=vi())!==s?("events"===r.substr(Wu,6).toLowerCase()?(o=r.substr(Wu,6),Wu+=6):(o=s,0===Zu&&ts(Nr)),o!==s&&(a=vi())!==s?((i=Co())===s&&(i=null),i!==s&&vi()!==s?((c=Ms())===s&&(c=null),c!==s&&vi()!==s?((l=qs())===s&&(l=null),l!==s?(b=i,v=c,d=l,e={tableList:Array.from(Yi),columnList:Hi(Bi),ast:{type:"show",suffix:"events",keyword:"binlog",in:b,from:v,limit:d}},t=e):(Wu=t,t=s)):(Wu=t,t=s)):(Wu=t,t=s)):(Wu=t,t=s)):(Wu=t,t=s)):(Wu=t,t=s),t===s&&(t=Wu,(e=qo())!==s&&vi()!==s?(n=Wu,"character"===r.substr(Wu,9).toLowerCase()?(u=r.substr(Wu,9),Wu+=9):(u=s,0===Zu&&ts(J)),u!==s&&(o=vi())!==s?("set"===r.substr(Wu,3).toLowerCase()?(a=r.substr(Wu,3),Wu+=3):(a=s,0===Zu&&ts(Q)),a!==s?n=u=[u,o,a]:(Wu=n,n=s)):(Wu=n,n=s),n===s&&("collation"===r.substr(Wu,9).toLowerCase()?(n=r.substr(Wu,9),Wu+=9):(n=s,0===Zu&&ts(Rr))),n!==s&&(u=vi())!==s?((o=Lo())===s&&(o=Xs()),o===s&&(o=null),o!==s?(e=function(r,t){let e=Array.isArray(r)&&r||[r];return {tableList:Array.from(Yi),columnList:Hi(Bi),ast:{type:"show",suffix:e[2]&&e[2].toLowerCase(),keyword:e[0].toLowerCase(),expr:t}}}(n,o),t=e):(Wu=t,t=s)):(Wu=t,t=s)):(Wu=t,t=s),t===s&&(t=function(){var t,e,n,u;t=Wu,(e=qo())!==s&&vi()!==s?("grants"===r.substr(Wu,6).toLowerCase()?(n=r.substr(Wu,6),Wu+=6):(n=s,0===Zu&&ts(_r)),n!==s&&vi()!==s?((u=function(){var t,e,n,u,o,a,i;t=Wu,"for"===r.substr(Wu,3).toLowerCase()?(e=r.substr(Wu,3),Wu+=3):(e=s,0===Zu&&ts($));e!==s&&vi()!==s&&(n=To())!==s&&vi()!==s?(u=Wu,(o=Ka())!==s&&(a=vi())!==s&&(i=To())!==s?u=o=[o,a,i]:(Wu=u,u=s),u===s&&(u=null),u!==s&&(o=vi())!==s?((a=function(){var r,t;r=Wu,va()!==s&&vi()!==s&&(t=function(){var r,t,e,n,u,o,a,i;if(r=Wu,(t=To())!==s){for(e=[],n=Wu,(u=vi())!==s&&(o=ai())!==s&&(a=vi())!==s&&(i=To())!==s?n=u=[u,o,a,i]:(Wu=n,n=s);n!==s;)e.push(n),n=Wu,(u=vi())!==s&&(o=ai())!==s&&(a=vi())!==s&&(i=To())!==s?n=u=[u,o,a,i]:(Wu=n,n=s);e!==s?(t=yr(t,e),r=t):(Wu=r,r=s);}else Wu=r,r=s;return r}())!==s?(r=t):(Wu=r,r=s);return r}())===s&&(a=null),a!==s?(l=a,e={user:n,host:(c=u)&&c[2],role_list:l},t=e):(Wu=t,t=s)):(Wu=t,t=s)):(Wu=t,t=s);var c,l;return t}())===s&&(u=null),u!==s?(e=function(r){return {tableList:Array.from(Yi),columnList:Hi(Bi),ast:{type:"show",keyword:"grants",for:r}}}(u),t=e):(Wu=t,t=s)):(Wu=t,t=s)):(Wu=t,t=s);return t}())));var b,v,d;return t}())===s&&(t=function(){var t,e,n;t=Wu,(e=pa())===s&&(e=function(){var t,e,n,u;t=Wu,"describe"===r.substr(Wu,8).toLowerCase()?(e=r.substr(Wu,8),Wu+=8):(e=s,0===Zu&&ts(Ye));e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="DESCRIBE"):(Wu=t,t=s)):(Wu=t,t=s);return t}());e!==s&&vi()!==s&&(n=To())!==s?(u=n,e={tableList:Array.from(Yi),columnList:Hi(Bi),ast:{type:"desc",table:u}},t=e):(Wu=t,t=s);var u;return t}()),t}function ss(){var t;return (t=os())===s&&(t=function(){var r,t,e,n,u,o,a;r=Wu,(t=zo())!==s&&vi()!==s&&(e=Ps())!==s&&vi()!==s&&sa()!==s&&vi()!==s&&(n=Zs())!==s&&vi()!==s?((u=Xs())===s&&(u=null),u!==s&&vi()!==s?((o=Ws())===s&&(o=null),o!==s&&vi()!==s?((a=qs())===s&&(a=null),a!==s?(c=n,l=u,f=o,b=a,(i=e)&&i.forEach(r=>{const{db:t,as:e,table:n}=r;Yi.add(`update::${t}::${n}`);}),c&&c.forEach(r=>Bi.add(`update::${r.table}::${r.column}`)),t={tableList:Array.from(Yi),columnList:Hi(Bi),ast:{type:"update",table:i,set:c,where:l,orderby:f,limit:b}},r=t):(Wu=r,r=s)):(Wu=r,r=s)):(Wu=r,r=s)):(Wu=r,r=s);var i,c,l,f,b;return r}())===s&&(t=function(){var r,t,e,n,u,o,a,i;r=Wu,(t=to())!==s&&vi()!==s?((e=ua())===s&&(e=null),e!==s&&vi()!==s&&(n=Ys())!==s&&vi()!==s?((u=Qs())===s&&(u=null),u!==s&&vi()!==s&&ci()!==s&&vi()!==s&&(o=function(){var r,t,e,n,u,o,a,i;if(r=Wu,(t=So())!==s){for(e=[],n=Wu,(u=vi())!==s&&(o=ai())!==s&&(a=vi())!==s&&(i=So())!==s?n=u=[u,o,a,i]:(Wu=n,n=s);n!==s;)e.push(n),n=Wu,(u=vi())!==s&&(o=ai())!==s&&(a=vi())!==s&&(i=So())!==s?n=u=[u,o,a,i]:(Wu=n,n=s);e!==s?(t=l(t,e),r=t):(Wu=r,r=s);}else Wu=r,r=s;return r}())!==s&&vi()!==s&&li()!==s&&vi()!==s&&(a=Js())!==s&&vi()!==s?((i=ro())===s&&(i=null),i!==s?(t=function(r,t,e,n,u,s){if(t&&(Yi.add(`insert::${t.db}::${t.table}`),t.as=null),n){let r=t&&t.table||null;Array.isArray(u)&&u.forEach((r,t)=>{if(r.value.length!=n.length)throw new Error("Error: column count doesn't match value count at row "+(t+1))}),n.forEach(t=>Bi.add(`insert::${r}::${t}`));}return {tableList:Array.from(Yi),columnList:Hi(Bi),ast:{type:r,table:[t],columns:n,values:u,partition:e,on_duplicate_update:s}}}(t,n,u,o,a,i),r=t):(Wu=r,r=s)):(Wu=r,r=s)):(Wu=r,r=s)):(Wu=r,r=s);return r}())===s&&(t=function(){var r,t,e,n,u,o;r=Wu,(t=to())!==s&&vi()!==s&&ua()!==s&&vi()!==s&&(e=Ys())!==s&&vi()!==s?((n=Qs())===s&&(n=null),n!==s&&vi()!==s&&(u=Js())!==s&&vi()!==s?((o=ro())===s&&(o=null),o!==s?(a=t,c=n,l=u,f=o,(i=e)&&(Yi.add(`insert::${i.db}::${i.table}`),Bi.add(`insert::${i.table}::(.*)`),i.as=null),t={tableList:Array.from(Yi),columnList:Hi(Bi),ast:{type:a,table:[i],columns:null,values:l,partition:c,on_duplicate_update:f}},r=t):(Wu=r,r=s)):(Wu=r,r=s)):(Wu=r,r=s);var a,i,c,l,f;return r}())===s&&(t=function(){var r,t,e,n,u,o;r=Wu,(t=to())!==s&&vi()!==s&&ua()!==s&&vi()!==s&&(e=Ys())!==s&&vi()!==s?((n=Qs())===s&&(n=null),n!==s&&vi()!==s&&sa()!==s&&vi()!==s&&(u=Zs())!==s&&vi()!==s?((o=ro())===s&&(o=null),o!==s?(a=t,c=n,l=u,f=o,(i=e)&&(Yi.add(`insert::${i.db}::${i.table}`),Bi.add(`insert::${i.table}::(.*)`),i.as=null),t={tableList:Array.from(Yi),columnList:Hi(Bi),ast:{type:a,table:[i],columns:null,partition:c,set:l,on_duplicate_update:f}},r=t):(Wu=r,r=s)):(Wu=r,r=s)):(Wu=r,r=s);var a,i,c,l,f;return r}())===s&&(t=function(){var t,e,n,u,o,a,i;t=Wu,(e=function(){var t,e,n,u;t=Wu,"delete"===r.substr(Wu,6).toLowerCase()?(e=r.substr(Wu,6),Wu+=6):(e=s,0===Zu&&ts(X));e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?t=e=[e,n]:(Wu=t,t=s)):(Wu=t,t=s);return t}())!==s&&vi()!==s?((n=Ps())===s&&(n=null),n!==s&&vi()!==s&&(u=Ms())!==s&&vi()!==s?((o=Xs())===s&&(o=null),o!==s&&vi()!==s?((a=Ws())===s&&(a=null),a!==s&&vi()!==s?((i=qs())===s&&(i=null),i!==s?(e=function(r,t,e,n,u){if(t&&t.forEach(r=>{r.table&&Yi.add(`delete::${r.db}::${r.table}`),Bi.add(`delete::${r.table}::(.*)`);}),null===r&&1===t.length){const e=t[0];r=[{db:e.db,table:e.table,as:e.as,addition:!0}];}return {tableList:Array.from(Yi),columnList:Hi(Bi),ast:{type:"delete",table:r,from:t,where:e,orderby:n,limit:u}}}(n,u,o,a,i),t=e):(Wu=t,t=s)):(Wu=t,t=s)):(Wu=t,t=s)):(Wu=t,t=s)):(Wu=t,t=s);return t}())===s&&(t=us())===s&&(t=function(){var r,t;r=[],t=hi();for(;t!==s;)r.push(t),t=hi();return r}()),t}function os(){var r,t,e,n,u,o,a,i,c,l;if(r=Wu,(t=Ss())!==s){for(e=[],n=Wu,(u=vi())!==s&&(o=ba())!==s&&(a=vi())!==s?((i=wa())===s&&(i=null),i!==s&&(c=vi())!==s&&(l=Ss())!==s?n=u=[u,o,a,i,c,l]:(Wu=n,n=s)):(Wu=n,n=s);n!==s;)e.push(n),n=Wu,(u=vi())!==s&&(o=ba())!==s&&(a=vi())!==s?((i=wa())===s&&(i=null),i!==s&&(c=vi())!==s&&(l=Ss())!==s?n=u=[u,o,a,i,c,l]:(Wu=n,n=s)):(Wu=n,n=s);e!==s&&(n=vi())!==s?((u=Ws())===s&&(u=null),u!==s&&(o=vi())!==s?((a=qs())===s&&(a=null),a!==s?(r=t=function(r,t,e,n){let u=r;for(let r=0;r<t.length;r++)u._next=t[r][5],u.union=t[r][3]?"union all":"union",u=u._next;return e&&(r._orderby=e),n&&(r._limit=n),{tableList:Array.from(Yi),columnList:Hi(Bi),ast:r}}(t,e,u,a)):(Wu=r,r=s)):(Wu=r,r=s)):(Wu=r,r=s);}else Wu=r,r=s;return r}function as(){var r,t,e,n;return r=Wu,(t=ao())!==s?((e=Ca())===s&&(e=pa()),e===s&&(e=null),e!==s?(r=t={column:t,order:(n=e)&&n.toLowerCase()||"asc"}):(Wu=r,r=s)):(Wu=r,r=s),r===s&&(r=function(){var r,t,e;r=Wu,(t=yo())!==s&&vi()!==s?((e=Ca())===s&&(e=pa()),e===s&&(e=null),e!==s?(t=function(r,t){return {column:r,order:t&&t.toLowerCase()||"asc"}}(t,e),r=t):(Wu=r,r=s)):(Wu=r,r=s);return r}()),r}function is(){var r;return (r=ps())===s&&(r=ls())===s&&(r=Ls())===s&&(r=Cs()),r}function cs(){var t,e,n,u,o,a,i;return t=Wu,(e=function(){var e;(e=function(){var t,e,n,u;t=Wu,"not null"===r.substr(Wu,8).toLowerCase()?(e=r.substr(Wu,8),Wu+=8):(e=s,0===Zu&&ts(Jt));e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?t=e=[e,n]:(Wu=t,t=s)):(Wu=t,t=s);return t}())!==s&&(e={type:"not null",value:"not null"});return e}())===s&&(e=Do()),e!==s&&((i=e)&&!i.value&&(i.value="null"),e={nullable:i}),(t=e)===s&&(t=Wu,(e=function(){var r,t;r=Wu,Vo()!==s&&vi()!==s?((t=Mo())===s&&(t=ao()),t!==s?(r={type:"default",value:t}):(Wu=r,r=s)):(Wu=r,r=s);return r}())!==s&&(e={default_val:e}),(t=e)===s&&(t=Wu,"auto_increment"===r.substr(Wu,14).toLowerCase()?(e=r.substr(Wu,14),Wu+=14):(e=s,0===Zu&&ts(f)),e!==s&&(e={auto_increment:e.toLowerCase()}),(t=e)===s&&(t=Wu,e=Wu,"unique"===r.substr(Wu,6).toLowerCase()?(n=r.substr(Wu,6),Wu+=6):(n=s,0===Zu&&ts(b)),n!==s&&(u=vi())!==s?("key"===r.substr(Wu,3).toLowerCase()?(o=r.substr(Wu,3),Wu+=3):(o=s,0===Zu&&ts(v)),o===s&&(o=null),o!==s?e=n=[n,u,o]:(Wu=e,e=s)):(Wu=e,e=s),e===s&&(e=Wu,"primary"===r.substr(Wu,7).toLowerCase()?(n=r.substr(Wu,7),Wu+=7):(n=s,0===Zu&&ts(d)),n===s&&(n=null),n!==s&&(u=vi())!==s?("key"===r.substr(Wu,3).toLowerCase()?(o=r.substr(Wu,3),Wu+=3):(o=s,0===Zu&&ts(v)),o!==s?e=n=[n,u,o]:(Wu=e,e=s)):(Wu=e,e=s)),e!==s&&(e=function(r){const t=[];return r&&t.push(r[0],r[2]),{unique_or_primary:t.filter(r=>r).join(" ").toLowerCase("")}}(e)),(t=e)===s&&(t=Wu,(e=Ci())!==s&&(e={comment:e}),(t=e)===s&&(t=Wu,(e=fs())!==s&&(e={collate:e}),(t=e)===s&&(t=Wu,(e=function(){var t,e,n;t=Wu,"column_format"===r.substr(Wu,13).toLowerCase()?(e=r.substr(Wu,13),Wu+=13):(e=s,0===Zu&&ts(L));e!==s&&vi()!==s?("fixed"===r.substr(Wu,5).toLowerCase()?(n=r.substr(Wu,5),Wu+=5):(n=s,0===Zu&&ts(C)),n===s&&("dynamic"===r.substr(Wu,7).toLowerCase()?(n=r.substr(Wu,7),Wu+=7):(n=s,0===Zu&&ts(p)),n===s&&("default"===r.substr(Wu,7).toLowerCase()?(n=r.substr(Wu,7),Wu+=7):(n=s,0===Zu&&ts(w)))),n!==s?(e=function(r,t){return {type:"column_format",value:t.toLowerCase()}}(0,n),t=e):(Wu=t,t=s)):(Wu=t,t=s);return t}())!==s&&(e={column_format:e}),(t=e)===s&&(t=Wu,(e=function(){var t,e,n;t=Wu,"storage"===r.substr(Wu,7).toLowerCase()?(e=r.substr(Wu,7),Wu+=7):(e=s,0===Zu&&ts(E));e!==s&&vi()!==s?("disk"===r.substr(Wu,4).toLowerCase()?(n=r.substr(Wu,4),Wu+=4):(n=s,0===Zu&&ts(h)),n===s&&("memory"===r.substr(Wu,6).toLowerCase()?(n=r.substr(Wu,6),Wu+=6):(n=s,0===Zu&&ts(A))),n!==s?(e={type:"storage",value:n.toLowerCase()},t=e):(Wu=t,t=s)):(Wu=t,t=s);return t}())!==s&&(e={storage:e}),(t=e)===s&&(t=Wu,(e=Es())!==s&&(e={reference_definition:e}),(t=e)===s&&(t=Wu,(e=function(){var t,e,n,u,o,a,i,c;t=Wu,(e=ws())===s&&(e=null);e!==s&&vi()!==s?("check"===r.substr(Wu,5).toLowerCase()?(n=r.substr(Wu,5),Wu+=5):(n=s,0===Zu&&ts(M)),n!==s&&vi()!==s&&ci()!==s&&vi()!==s&&(u=ao())!==s&&vi()!==s&&li()!==s&&vi()!==s?(o=Wu,(a=Sa())===s&&(a=null),a!==s&&(i=vi())!==s?("enforced"===r.substr(Wu,8).toLowerCase()?(c=r.substr(Wu,8),Wu+=8):(c=s,0===Zu&&ts(G)),c!==s?o=a=[a,i,c]:(Wu=o,o=s)):(Wu=o,o=s),o===s&&(o=null),o!==s?(e=function(r,t,e,n){const u=[];return n&&u.push(n[0],n[2]),{constraint_type:t.toLowerCase(),keyword:r&&r.keyword,constraint:r&&r.constraint,definition:[e],enforced:u.filter(r=>r).join(" ").toLowerCase(),resource:"constraint"}}(e,n,u,o),t=e):(Wu=t,t=s)):(Wu=t,t=s)):(Wu=t,t=s);return t}())!==s&&(e={check:e}),(t=e)===s&&(t=Wu,(e=As())!==s&&(n=vi())!==s?((u=Za())===s&&(u=null),u!==s&&(o=vi())!==s&&(a=No())!==s?(t=e=function(r,t,e){return {character_set:{type:r,value:e,symbol:t}}}(e,u,a)):(Wu=t,t=s)):(Wu=t,t=s))))))))))),t}function ls(){var r,t,e,n,u,o,a;return r=Wu,(t=yo())!==s&&vi()!==s&&(e=gi())!==s&&vi()!==s?((n=function(){var r,t,e,n,u,o;if(r=Wu,(t=cs())!==s)if(vi()!==s){for(e=[],n=Wu,(u=vi())!==s&&(o=cs())!==s?n=u=[u,o]:(Wu=n,n=s);n!==s;)e.push(n),n=Wu,(u=vi())!==s&&(o=cs())!==s?n=u=[u,o]:(Wu=n,n=s);e!==s?(r=t=function(r,t){let e=r;for(let r=0;r<t.length;r++)e={...e,...t[r][1]};return e}(t,e)):(Wu=r,r=s);}else Wu=r,r=s;else Wu=r,r=s;return r}())===s&&(n=null),n!==s?(u=t,o=e,a=n,Bi.add(`create::${u.table}::${u.column}`),r=t={column:u,definition:o,resource:"column",...a||{}}):(Wu=r,r=s)):(Wu=r,r=s),r}function fs(){var t,e,n;return t=Wu,function(){var t,e,n,u;t=Wu,"collate"===r.substr(Wu,7).toLowerCase()?(e=r.substr(Wu,7),Wu+=7):(e=s,0===Zu&&ts(tr));e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="COLLATE"):(Wu=t,t=s)):(Wu=t,t=s);return t}()!==s&&vi()!==s?((e=Za())===s&&(e=null),e!==s&&vi()!==s&&(n=No())!==s?(t={type:"collate",symbol:e,value:n}):(Wu=t,t=s)):(Wu=t,t=s),t}function bs(){var t;return (t=function(){var r,t;r=Wu,za()!==s&&vi()!==s&&(t=ps())!==s?(r={action:"add",create_definitions:t,resource:"constraint",type:"alter"}):(Wu=r,r=s);return r}())===s&&(t=function(){var t,e,n,u;t=Wu,(e=Zo())!==s&&vi()!==s?("check"===r.substr(Wu,5).toLowerCase()?(n=r.substr(Wu,5),Wu+=5):(n=s,0===Zu&&ts(M)),n!==s&&vi()!==s&&(u=No())!==s?(e={action:"drop",constraint:u,keyword:n.toLowerCase(),resource:"constraint",type:"alter"},t=e):(Wu=t,t=s)):(Wu=t,t=s);return t}())===s&&(t=function(){var t,e,n;t=Wu,Zo()!==s&&vi()!==s?("primary"===r.substr(Wu,7).toLowerCase()?(e=r.substr(Wu,7),Wu+=7):(e=s,0===Zu&&ts(d)),e!==s&&vi()!==s&&ri()!==s?(t={action:"drop",key:"",keyword:"primary key",resource:"key",type:"alter"}):(Wu=t,t=s)):(Wu=t,t=s);t===s&&(t=Wu,Zo()!==s&&vi()!==s?("foreign"===r.substr(Wu,7).toLowerCase()?(e=r.substr(Wu,7),Wu+=7):(e=s,0===Zu&&ts(U)),e!==s&&vi()!==s&&ri()!==s&&vi()!==s&&(n=No())!==s?(t={action:"drop",key:n,keyword:"foreign key",resource:"key",type:"alter"}):(Wu=t,t=s)):(Wu=t,t=s));return t}())===s&&(t=function(){var t,e,n,u;t=Wu,da()!==s&&vi()!==s?("check"===r.substr(Wu,5).toLowerCase()?(e=r.substr(Wu,5),Wu+=5):(e=s,0===Zu&&ts(M)),e!==s&&vi()!==s?("check"===r.substr(Wu,5).toLowerCase()?(n=r.substr(Wu,5),Wu+=5):(n=s,0===Zu&&ts(M)),n!==s&&vi()!==s&&si()!==s&&vi()!==s&&(u=No())!==s?(t={action:"with",constraint:u,keyword:"check check",resource:"constraint",type:"alter"}):(Wu=t,t=s)):(Wu=t,t=s)):(Wu=t,t=s);return t}())===s&&(t=function(){var t,e,n;t=Wu,"nocheck"===r.substr(Wu,7).toLowerCase()?(e=r.substr(Wu,7),Wu+=7):(e=s,0===Zu&&ts(D));e!==s&&vi()!==s&&si()!==s&&vi()!==s&&(n=No())!==s?(t=e={action:"nocheck",constraint:n,resource:"constraint",type:"alter"}):(Wu=t,t=s);return t}())===s&&(t=function(){var r,t,e,n;r=Wu,(t=za())!==s&&vi()!==s?((e=Ja())===s&&(e=null),e!==s&&vi()!==s&&(n=ls())!==s?(u=e,o=n,t={action:"add",...o,keyword:u,resource:"column",type:"alter"},r=t):(Wu=r,r=s)):(Wu=r,r=s);var u,o;return r}())===s&&(t=function(){var r,t,e;r=Wu,Zo()!==s&&vi()!==s?((t=Ja())===s&&(t=null),t!==s&&vi()!==s&&(e=yo())!==s?(r={action:"drop",column:e,keyword:t,resource:"column",type:"alter"}):(Wu=r,r=s)):(Wu=r,r=s);return r}())===s&&(t=function(){var r,t,e;r=Wu,(t=za())!==s&&vi()!==s&&(e=Ls())!==s?(n=e,t={action:"add",type:"alter",...n},r=t):(Wu=r,r=s);var n;return r}())===s&&(t=function(){var r,t,e;r=Wu,(t=za())!==s&&vi()!==s&&(e=Cs())!==s?(n=e,t={action:"add",type:"alter",...n},r=t):(Wu=r,r=s);var n;return r}())===s&&(t=function(){var r,t,e,n,u;r=Wu,(t=ea())!==s&&vi()!==s&&Ja()!==s&&vi()!==s&&(e=yo())!==s&&vi()!==s?((n=Ko())===s&&(n=oa()),n===s&&(n=null),n!==s&&vi()!==s&&(u=yo())!==s?(a=u,t={action:"rename",type:"alter",resource:"column",keyword:"column",old_column:e,prefix:(o=n)&&o[0].toLowerCase(),column:a},r=t):(Wu=r,r=s)):(Wu=r,r=s);var o,a;return r}())===s&&(t=function(){var r,t,e,n;r=Wu,(t=ea())!==s&&vi()!==s?((e=Ko())===s&&(e=oa()),e===s&&(e=null),e!==s&&vi()!==s&&(n=To())!==s?(o=n,t={action:"rename",type:"alter",resource:"table",keyword:(u=e)&&u[0].toLowerCase(),table:o},r=t):(Wu=r,r=s)):(Wu=r,r=s);var u,o;return r}())===s&&(t=vs())===s&&(t=ds())===s&&(t=function(){var t,e,n,u,o,a,i,c,l;t=Wu,"change"===r.substr(Wu,6).toLowerCase()?(e=r.substr(Wu,6),Wu+=6):(e=s,0===Zu&&ts(O));e!==s&&vi()!==s?((n=Ja())===s&&(n=null),n!==s&&vi()!==s&&(u=yo())!==s&&vi()!==s&&(o=ls())!==s&&vi()!==s?(a=Wu,"first"===r.substr(Wu,5).toLowerCase()?(i=r.substr(Wu,5),Wu+=5):(i=s,0===Zu&&ts(g)),i===s&&("after"===r.substr(Wu,5).toLowerCase()?(i=r.substr(Wu,5),Wu+=5):(i=s,0===Zu&&ts(x))),i!==s&&(c=vi())!==s&&(l=yo())!==s?a=i=[i,c,l]:(Wu=a,a=s),a===s&&(a=null),a!==s?(f=n,b=o,v=a,e={action:"change",old_column:u,...b,keyword:f,resource:"column",type:"alter",first_after:v&&{keyword:v[0],column:v[2]}},t=e):(Wu=t,t=s)):(Wu=t,t=s)):(Wu=t,t=s);var f,b,v;return t}()),t}function vs(){var t,e,n,u;return t=Wu,"algorithm"===r.substr(Wu,9).toLowerCase()?(e=r.substr(Wu,9),Wu+=9):(e=s,0===Zu&&ts(y)),e!==s&&vi()!==s?((n=Za())===s&&(n=null),n!==s&&vi()!==s?("default"===r.substr(Wu,7).toLowerCase()?(u=r.substr(Wu,7),Wu+=7):(u=s,0===Zu&&ts(w)),u===s&&("instant"===r.substr(Wu,7).toLowerCase()?(u=r.substr(Wu,7),Wu+=7):(u=s,0===Zu&&ts(T)),u===s&&("inplace"===r.substr(Wu,7).toLowerCase()?(u=r.substr(Wu,7),Wu+=7):(u=s,0===Zu&&ts(m)),u===s&&("copy"===r.substr(Wu,4).toLowerCase()?(u=r.substr(Wu,4),Wu+=4):(u=s,0===Zu&&ts(S))))),u!==s?(t=e={type:"alter",keyword:"algorithm",resource:"algorithm",symbol:n,algorithm:u}):(Wu=t,t=s)):(Wu=t,t=s)):(Wu=t,t=s),t}function ds(){var t,e,n,u;return t=Wu,"lock"===r.substr(Wu,4).toLowerCase()?(e=r.substr(Wu,4),Wu+=4):(e=s,0===Zu&&ts(I)),e!==s&&vi()!==s?((n=Za())===s&&(n=null),n!==s&&vi()!==s?("default"===r.substr(Wu,7).toLowerCase()?(u=r.substr(Wu,7),Wu+=7):(u=s,0===Zu&&ts(w)),u===s&&("none"===r.substr(Wu,4).toLowerCase()?(u=r.substr(Wu,4),Wu+=4):(u=s,0===Zu&&ts(N)),u===s&&("shared"===r.substr(Wu,6).toLowerCase()?(u=r.substr(Wu,6),Wu+=6):(u=s,0===Zu&&ts(R)),u===s&&("exclusive"===r.substr(Wu,9).toLowerCase()?(u=r.substr(Wu,9),Wu+=9):(u=s,0===Zu&&ts(_))))),u!==s?(t=e={type:"alter",keyword:"lock",resource:"lock",symbol:n,lock:u}):(Wu=t,t=s)):(Wu=t,t=s)):(Wu=t,t=s),t}function Ls(){var r,t,e,n,u,o,a,i;return r=Wu,(t=Qa())===s&&(t=ri()),t!==s&&vi()!==s?((e=So())===s&&(e=null),e!==s&&vi()!==s?((n=ks())===s&&(n=null),n!==s&&vi()!==s&&(u=Rs())!==s&&vi()!==s?((o=$s())===s&&(o=null),o!==s&&vi()!==s?(a=n,i=o,r=t={index:e,definition:u,keyword:t.toLowerCase(),index_type:a,resource:"index",index_options:i}):(Wu=r,r=s)):(Wu=r,r=s)):(Wu=r,r=s)):(Wu=r,r=s),r}function Cs(){var r,t,e,n,u,o,a,i,c;return r=Wu,(t=ti())===s&&(t=ei()),t!==s&&vi()!==s?((e=Qa())===s&&(e=ri()),e===s&&(e=null),e!==s&&vi()!==s?((n=So())===s&&(n=null),n!==s&&vi()!==s&&(u=Rs())!==s&&vi()!==s?((o=$s())===s&&(o=null),o!==s?(a=t,c=o,r=t={index:n,definition:u,keyword:(i=e)&&`${a.toLowerCase()} ${i.toLowerCase()}`||a.toLowerCase(),index_options:c,resource:"index"}):(Wu=r,r=s)):(Wu=r,r=s)):(Wu=r,r=s)):(Wu=r,r=s),r}function ps(){var t;return (t=function(){var t,e,n,u,o,a,i,c;t=Wu,(e=ws())===s&&(e=null);e!==s&&vi()!==s?(n=Wu,"primary"===r.substr(Wu,7).toLowerCase()?(u=r.substr(Wu,7),Wu+=7):(u=s,0===Zu&&ts(d)),u!==s&&(o=vi())!==s?("key"===r.substr(Wu,3).toLowerCase()?(a=r.substr(Wu,3),Wu+=3):(a=s,0===Zu&&ts(v)),a!==s?n=u=[u,o,a]:(Wu=n,n=s)):(Wu=n,n=s),n!==s&&(u=vi())!==s?((o=ks())===s&&(o=null),o!==s&&(a=vi())!==s&&(i=Rs())!==s&&vi()!==s?((c=$s())===s&&(c=null),c!==s?(f=n,b=o,L=i,C=c,e={constraint:(l=e)&&l.constraint,definition:L,constraint_type:`${f[0].toLowerCase()} ${f[2].toLowerCase()}`,keyword:l&&l.keyword,index_type:b,resource:"constraint",index_options:C},t=e):(Wu=t,t=s)):(Wu=t,t=s)):(Wu=t,t=s)):(Wu=t,t=s);var l,f,b,L,C;return t}())===s&&(t=function(){var r,t,e,n,u,o,a,i;r=Wu,(t=ws())===s&&(t=null);t!==s&&vi()!==s&&(e=ni())!==s&&vi()!==s?((n=Qa())===s&&(n=ri()),n===s&&(n=null),n!==s&&vi()!==s?((u=So())===s&&(u=null),u!==s&&vi()!==s?((o=ks())===s&&(o=null),o!==s&&vi()!==s&&(a=Rs())!==s&&vi()!==s?((i=$s())===s&&(i=null),i!==s?(l=e,f=n,b=u,v=o,d=a,L=i,t={constraint:(c=t)&&c.constraint,definition:d,constraint_type:f&&`${l.toLowerCase()} ${f.toLowerCase()}`||l.toLowerCase(),keyword:c&&c.keyword,index_type:v,index:b,resource:"constraint",index_options:L},r=t):(Wu=r,r=s)):(Wu=r,r=s)):(Wu=r,r=s)):(Wu=r,r=s)):(Wu=r,r=s);var c,l,f,b,v,d,L;return r}())===s&&(t=function(){var t,e,n,u,o,a;t=Wu,(e=ws())===s&&(e=null);e!==s&&vi()!==s?("foreign key"===r.substr(Wu,11).toLowerCase()?(n=r.substr(Wu,11),Wu+=11):(n=s,0===Zu&&ts(P)),n!==s&&vi()!==s?((u=So())===s&&(u=null),u!==s&&vi()!==s&&(o=Rs())!==s&&vi()!==s?((a=Es())===s&&(a=null),a!==s?(c=n,l=u,f=o,b=a,e={constraint:(i=e)&&i.constraint,definition:f,constraint_type:c,keyword:i&&i.keyword,index:l,resource:"constraint",reference_definition:b},t=e):(Wu=t,t=s)):(Wu=t,t=s)):(Wu=t,t=s)):(Wu=t,t=s);var i,c,l,f,b;return t}())===s&&(t=function(){var t,e,n,u,o,a,i,c,l,f;t=Wu,(e=ws())===s&&(e=null);e!==s&&vi()!==s?("check"===r.substr(Wu,5).toLowerCase()?(n=r.substr(Wu,5),Wu+=5):(n=s,0===Zu&&ts(M)),n!==s&&vi()!==s?(u=Wu,"not"===r.substr(Wu,3).toLowerCase()?(o=r.substr(Wu,3),Wu+=3):(o=s,0===Zu&&ts(k)),o!==s&&(a=vi())!==s?("for"===r.substr(Wu,3).toLowerCase()?(i=r.substr(Wu,3),Wu+=3):(i=s,0===Zu&&ts($)),i!==s&&(c=vi())!==s?("replication"===r.substr(Wu,11).toLowerCase()?(l=r.substr(Wu,11),Wu+=11):(l=s,0===Zu&&ts(F)),l!==s&&(f=vi())!==s?u=o=[o,a,i,c,l,f]:(Wu=u,u=s)):(Wu=u,u=s)):(Wu=u,u=s),u===s&&(u=null),u!==s&&(o=ci())!==s&&(a=vi())!==s&&(i=ao())!==s&&(c=vi())!==s&&(l=li())!==s?(b=e,v=u,d=i,e={constraint_type:n.toLowerCase(),keyword:b&&b.keyword,constraint:b&&b.constraint,index_type:v&&{keyword:"not for replication"},definition:[d],resource:"constraint"},t=e):(Wu=t,t=s)):(Wu=t,t=s)):(Wu=t,t=s);var b,v,d;return t}()),t}function ws(){var r,t,e,n;return r=Wu,(t=si())!==s&&vi()!==s?((e=To())===s&&(e=null),e!==s?(n=e,r=t={keyword:t.toLowerCase(),constraint:n}):(Wu=r,r=s)):(Wu=r,r=s),r}function Es(){var t,e,n,u,o,a,i,c,l,f;return t=Wu,(e=function(){var t,e,n,u;t=Wu,"references"===r.substr(Wu,10).toLowerCase()?(e=r.substr(Wu,10),Wu+=10):(e=s,0===Zu&&ts(wu));e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="REFERENCES"):(Wu=t,t=s)):(Wu=t,t=s);return t}())!==s&&vi()!==s&&(n=Ps())!==s&&vi()!==s&&(u=Rs())!==s&&vi()!==s?("match full"===r.substr(Wu,10).toLowerCase()?(o=r.substr(Wu,10),Wu+=10):(o=s,0===Zu&&ts(H)),o===s&&("match partial"===r.substr(Wu,13).toLowerCase()?(o=r.substr(Wu,13),Wu+=13):(o=s,0===Zu&&ts(j)),o===s&&("match simple"===r.substr(Wu,12).toLowerCase()?(o=r.substr(Wu,12),Wu+=12):(o=s,0===Zu&&ts(Y)))),o===s&&(o=null),o!==s&&vi()!==s?((a=hs())===s&&(a=null),a!==s&&vi()!==s?((i=hs())===s&&(i=null),i!==s?(c=o,l=a,f=i,t=e={definition:u,table:n,keyword:e.toLowerCase(),match:c&&c.toLowerCase(),on_delete:l,on_update:f}):(Wu=t,t=s)):(Wu=t,t=s)):(Wu=t,t=s)):(Wu=t,t=s),t}function hs(){var t,e,n,u,o,a;return t=Wu,"on"===r.substr(Wu,2).toLowerCase()?(e=r.substr(Wu,2),Wu+=2):(e=s,0===Zu&&ts(B)),e!==s&&vi()!==s?("delete"===r.substr(Wu,6).toLowerCase()?(n=r.substr(Wu,6),Wu+=6):(n=s,0===Zu&&ts(X)),n===s&&("update"===r.substr(Wu,6).toLowerCase()?(n=r.substr(Wu,6),Wu+=6):(n=s,0===Zu&&ts(W))),n!==s&&vi()!==s&&(u=function(){var e;"restrict"===r.substr(Wu,8).toLowerCase()?(e=r.substr(Wu,8),Wu+=8):(e=s,0===Zu&&ts(V));e===s&&("cascade"===r.substr(Wu,7).toLowerCase()?(e=r.substr(Wu,7),Wu+=7):(e=s,0===Zu&&ts(K)),e===s&&("set null"===r.substr(Wu,8).toLowerCase()?(e=r.substr(Wu,8),Wu+=8):(e=s,0===Zu&&ts(q)),e===s&&("no action"===r.substr(Wu,9).toLowerCase()?(e=r.substr(Wu,9),Wu+=9):(e=s,0===Zu&&ts(Z)),e===s&&("set default"===r.substr(Wu,11).toLowerCase()?(e=r.substr(Wu,11),Wu+=11):(e=s,0===Zu&&ts(z))))));e!==s&&(e=e.toLowerCase());return e}())!==s?(o=n,a=u,t=e={type:`${e.toLowerCase()} ${o.toLowerCase()}`,value:a}):(Wu=t,t=s)):(Wu=t,t=s),t}function As(){var t,e,n;return t=Wu,"character"===r.substr(Wu,9).toLowerCase()?(e=r.substr(Wu,9),Wu+=9):(e=s,0===Zu&&ts(J)),e!==s&&vi()!==s?("set"===r.substr(Wu,3).toLowerCase()?(n=r.substr(Wu,3),Wu+=3):(n=s,0===Zu&&ts(Q)),n!==s?(t=e="CHARACTER SET"):(Wu=t,t=s)):(Wu=t,t=s),t}function ys(){var t,e,n,u,o,a,i,c,l;return t=Wu,(e=Vo())===s&&(e=null),e!==s&&vi()!==s?((n=As())===s&&("charset"===r.substr(Wu,7).toLowerCase()?(n=r.substr(Wu,7),Wu+=7):(n=s,0===Zu&&ts(rr)),n===s&&("collate"===r.substr(Wu,7).toLowerCase()?(n=r.substr(Wu,7),Wu+=7):(n=s,0===Zu&&ts(tr)))),n!==s&&vi()!==s?((u=Za())===s&&(u=null),u!==s&&vi()!==s&&(o=No())!==s?(i=n,c=u,l=o,t=e={keyword:(a=e)&&`${a[0].toLowerCase()} ${i.toLowerCase()}`||i.toLowerCase(),symbol:c,value:l}):(Wu=t,t=s)):(Wu=t,t=s)):(Wu=t,t=s),t}function Ts(){var t,e,n,u,o,a,i,c,l;return t=Wu,"auto_increment"===r.substr(Wu,14).toLowerCase()?(e=r.substr(Wu,14),Wu+=14):(e=s,0===Zu&&ts(f)),e===s&&("avg_row_length"===r.substr(Wu,14).toLowerCase()?(e=r.substr(Wu,14),Wu+=14):(e=s,0===Zu&&ts(er)),e===s&&("key_block_size"===r.substr(Wu,14).toLowerCase()?(e=r.substr(Wu,14),Wu+=14):(e=s,0===Zu&&ts(nr)),e===s&&("max_rows"===r.substr(Wu,8).toLowerCase()?(e=r.substr(Wu,8),Wu+=8):(e=s,0===Zu&&ts(ur)),e===s&&("min_rows"===r.substr(Wu,8).toLowerCase()?(e=r.substr(Wu,8),Wu+=8):(e=s,0===Zu&&ts(sr)),e===s&&("stats_sample_pages"===r.substr(Wu,18).toLowerCase()?(e=r.substr(Wu,18),Wu+=18):(e=s,0===Zu&&ts(or))))))),e!==s&&vi()!==s?((n=Za())===s&&(n=null),n!==s&&vi()!==s&&(u=Go())!==s?(c=n,l=u,t=e={keyword:e.toLowerCase(),symbol:c,value:l.value}):(Wu=t,t=s)):(Wu=t,t=s),t===s&&(t=ys())===s&&(t=Wu,(e=ui())===s&&("connection"===r.substr(Wu,10).toLowerCase()?(e=r.substr(Wu,10),Wu+=10):(e=s,0===Zu&&ts(ar))),e!==s&&vi()!==s?((n=Za())===s&&(n=null),n!==s&&vi()!==s&&(u=ko())!==s?(t=e=function(r,t,e){return {keyword:r.toLowerCase(),symbol:t,value:`'${e.value}'`}}(e,n,u)):(Wu=t,t=s)):(Wu=t,t=s),t===s&&(t=Wu,"compression"===r.substr(Wu,11).toLowerCase()?(e=r.substr(Wu,11),Wu+=11):(e=s,0===Zu&&ts(ir)),e!==s&&vi()!==s?((n=Za())===s&&(n=null),n!==s&&vi()!==s?(u=Wu,39===r.charCodeAt(Wu)?(o="'",Wu++):(o=s,0===Zu&&ts(cr)),o!==s?("zlib"===r.substr(Wu,4).toLowerCase()?(a=r.substr(Wu,4),Wu+=4):(a=s,0===Zu&&ts(lr)),a===s&&("lz4"===r.substr(Wu,3).toLowerCase()?(a=r.substr(Wu,3),Wu+=3):(a=s,0===Zu&&ts(fr)),a===s&&("none"===r.substr(Wu,4).toLowerCase()?(a=r.substr(Wu,4),Wu+=4):(a=s,0===Zu&&ts(N)))),a!==s?(39===r.charCodeAt(Wu)?(i="'",Wu++):(i=s,0===Zu&&ts(cr)),i!==s?u=o=[o,a,i]:(Wu=u,u=s)):(Wu=u,u=s)):(Wu=u,u=s),u!==s?(t=e=function(r,t,e){return {keyword:r.toLowerCase(),symbol:t,value:e.join("").toUpperCase()}}(e,n,u)):(Wu=t,t=s)):(Wu=t,t=s)):(Wu=t,t=s),t===s&&(t=Wu,"engine"===r.substr(Wu,6).toLowerCase()?(e=r.substr(Wu,6),Wu+=6):(e=s,0===Zu&&ts(br)),e!==s&&vi()!==s?((n=Za())===s&&(n=null),n!==s&&vi()!==s&&(u=No())!==s?(t=e=vr(e,n,u)):(Wu=t,t=s)):(Wu=t,t=s),t===s&&(t=Wu,"row_format"===r.substr(Wu,10).toLowerCase()?(e=r.substr(Wu,10),Wu+=10):(e=s,0===Zu&&ts(dr)),e!==s&&vi()!==s?((n=Za())===s&&(n=null),n!==s&&vi()!==s?((u=Vo())===s&&("dynamic"===r.substr(Wu,7).toLowerCase()?(u=r.substr(Wu,7),Wu+=7):(u=s,0===Zu&&ts(p)),u===s&&("fixed"===r.substr(Wu,5).toLowerCase()?(u=r.substr(Wu,5),Wu+=5):(u=s,0===Zu&&ts(C)),u===s&&("compressed"===r.substr(Wu,10).toLowerCase()?(u=r.substr(Wu,10),Wu+=10):(u=s,0===Zu&&ts(Lr)),u===s&&("redundant"===r.substr(Wu,9).toLowerCase()?(u=r.substr(Wu,9),Wu+=9):(u=s,0===Zu&&ts(Cr)),u===s&&("compact"===r.substr(Wu,7).toLowerCase()?(u=r.substr(Wu,7),Wu+=7):(u=s,0===Zu&&ts(pr))))))),u!==s?(t=e=vr(e,n,u)):(Wu=t,t=s)):(Wu=t,t=s)):(Wu=t,t=s))))),t}function ms(){var t,e,n,u,o;return t=Wu,(e=Hs())!==s&&vi()!==s&&(n=function(){var t,e,n;return t=Wu,"read"===r.substr(Wu,4).toLowerCase()?(e=r.substr(Wu,4),Wu+=4):(e=s,0===Zu&&ts(wr)),e!==s&&vi()!==s?("local"===r.substr(Wu,5).toLowerCase()?(n=r.substr(Wu,5),Wu+=5):(n=s,0===Zu&&ts(Er)),n===s&&(n=null),n!==s?(t=e={type:"read",suffix:n&&"local"}):(Wu=t,t=s)):(Wu=t,t=s),t===s&&(t=Wu,"low_priority"===r.substr(Wu,12).toLowerCase()?(e=r.substr(Wu,12),Wu+=12):(e=s,0===Zu&&ts(hr)),e===s&&(e=null),e!==s&&vi()!==s?("write"===r.substr(Wu,5).toLowerCase()?(n=r.substr(Wu,5),Wu+=5):(n=s,0===Zu&&ts(Ar)),n!==s?(t=e={type:"write",prefix:e&&"low_priority"}):(Wu=t,t=s)):(Wu=t,t=s)),t}())!==s?(u=e,o=n,Yi.add(`lock::${u.db}::${u.table}`),t=e={table:u,lock_type:o}):(Wu=t,t=s),t}function Ss(){var t,e,n,u,o,a,i;return (t=_s())===s&&(t=Wu,e=Wu,40===r.charCodeAt(Wu)?(n="(",Wu++):(n=s,0===Zu&&ts(Or)),n!==s&&(u=vi())!==s&&(o=Ss())!==s&&(a=vi())!==s?(41===r.charCodeAt(Wu)?(i=")",Wu++):(i=s,0===Zu&&ts(gr)),i!==s?e=n=[n,u,o,a,i]:(Wu=e,e=s)):(Wu=e,e=s),e!==s&&(e={...e[2],parentheses_symbol:!0}),t=e),t}function Is(){var t,e,n,u,o,a,i,c,f;if(t=Wu,da()!==s)if(vi()!==s)if((e=Ns())!==s){for(n=[],u=Wu,(o=vi())!==s&&(a=ai())!==s&&(i=vi())!==s&&(c=Ns())!==s?u=o=[o,a,i,c]:(Wu=u,u=s);u!==s;)n.push(u),u=Wu,(o=vi())!==s&&(a=ai())!==s&&(i=vi())!==s&&(c=Ns())!==s?u=o=[o,a,i,c]:(Wu=u,u=s);n!==s?(t=l(e,n)):(Wu=t,t=s);}else Wu=t,t=s;else Wu=t,t=s;else Wu=t,t=s;return t===s&&(t=Wu,vi()!==s&&da()!==s&&(e=vi())!==s&&(n=function(){var t,e,n,u;t=Wu,"RECURSIVE"===r.substr(Wu,9)?(e="RECURSIVE",Wu+=9):(e=s,0===Zu&&ts(fe));e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?t=e=[e,n]:(Wu=t,t=s)):(Wu=t,t=s);return t}())!==s&&(u=vi())!==s&&(o=Ns())!==s?((f=o).recursive=!0,t=[f]):(Wu=t,t=s)),t}function Ns(){var r,t,e,n,u;return r=Wu,(t=ko())===s&&(t=No()),t!==s&&vi()!==s?((e=Rs())===s&&(e=null),e!==s&&vi()!==s&&oa()!==s&&vi()!==s&&ci()!==s&&vi()!==s&&(n=os())!==s&&vi()!==s&&li()!==s?("string"==typeof(u=t)&&(u={type:"default",value:u}),r=t={name:u,stmt:n,columns:e}):(Wu=r,r=s)):(Wu=r,r=s),r}function Rs(){var r,t,e,n,u,o,a,i;if(r=Wu,ci()!==s)if(vi()!==s)if((t=So())!==s){for(e=[],n=Wu,(u=vi())!==s&&(o=ai())!==s&&(a=vi())!==s&&(i=So())!==s?n=u=[u,o,a,i]:(Wu=n,n=s);n!==s;)e.push(n),n=Wu,(u=vi())!==s&&(o=ai())!==s&&(a=vi())!==s&&(i=So())!==s?n=u=[u,o,a,i]:(Wu=n,n=s);e!==s&&(n=vi())!==s&&(u=li())!==s?(r=l(t,e)):(Wu=r,r=s);}else Wu=r,r=s;else Wu=r,r=s;else Wu=r,r=s;return r}function _s(){var t,e,n,u,o,a,i,c,l,f,b,v,d,L,C;return t=Wu,vi()!==s?((e=Is())===s&&(e=null),e!==s&&vi()!==s&&function(){var t,e,n,u;t=Wu,"select"===r.substr(Wu,6).toLowerCase()?(e=r.substr(Wu,6),Wu+=6):(e=s,0===Zu&&ts(oe));e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?t=e=[e,n]:(Wu=t,t=s)):(Wu=t,t=s);return t}()!==s&&di()!==s?((n=function(){var r,t,e,n,u,o;if(r=Wu,(t=Os())!==s){for(e=[],n=Wu,(u=vi())!==s&&(o=Os())!==s?n=u=[u,o]:(Wu=n,n=s);n!==s;)e.push(n),n=Wu,(u=vi())!==s&&(o=Os())!==s?n=u=[u,o]:(Wu=n,n=s);e!==s?(t=function(r,t){const e=[r];for(let r=0,n=t.length;r<n;++r)e.push(t[r][1]);return e}(t,e),r=t):(Wu=r,r=s);}else Wu=r,r=s;return r}())===s&&(n=null),n!==s&&vi()!==s?((u=Ea())===s&&(u=null),u!==s&&vi()!==s&&(o=gs())!==s&&vi()!==s?((a=Ms())===s&&(a=null),a!==s&&vi()!==s?((i=Xs())===s&&(i=null),i!==s&&vi()!==s?((c=function(){var t,e,n;t=Wu,(e=function(){var t,e,n,u;t=Wu,"group"===r.substr(Wu,5).toLowerCase()?(e=r.substr(Wu,5),Wu+=5):(e=s,0===Zu&&ts(De));e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?t=e=[e,n]:(Wu=t,t=s)):(Wu=t,t=s);return t}())!==s&&vi()!==s&&La()!==s&&vi()!==s&&(n=no())!==s?(e=n.value,t=e):(Wu=t,t=s);return t}())===s&&(c=null),c!==s&&vi()!==s?((l=function(){var t,e;t=Wu,function(){var t,e,n,u;t=Wu,"having"===r.substr(Wu,6).toLowerCase()?(e=r.substr(Wu,6),Wu+=6):(e=s,0===Zu&&ts(Fe));e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?t=e=[e,n]:(Wu=t,t=s)):(Wu=t,t=s);return t}()!==s&&vi()!==s&&(e=ao())!==s?(t=e):(Wu=t,t=s);return t}())===s&&(l=null),l!==s&&vi()!==s?((f=Ws())===s&&(f=null),f!==s&&vi()!==s?((b=qs())===s&&(b=null),b!==s?(v=Wu,"for"===r.substr(Wu,3).toLowerCase()?(d=r.substr(Wu,3),Wu+=3):(d=s,0===Zu&&ts($)),d!==s&&(L=vi())!==s&&(C=zo())!==s?v=d=[d,L,C]:(Wu=v,v=s),v===s&&(v=null),v!==s?(t=function(r,t,e,n,u,s,o,a,i,c,l){return u&&u.forEach(r=>r.table&&Yi.add(`select::${r.db}::${r.table}`)),{with:r,type:"select",options:t,distinct:e,columns:n,from:u,where:s,groupby:o,having:a,orderby:i,limit:c,for_update:l&&`${l[0]} ${l[2][0]}`}}(e,n,u,o,a,i,c,l,f,b,v)):(Wu=t,t=s)):(Wu=t,t=s)):(Wu=t,t=s)):(Wu=t,t=s)):(Wu=t,t=s)):(Wu=t,t=s)):(Wu=t,t=s)):(Wu=t,t=s)):(Wu=t,t=s)):(Wu=t,t=s)):(Wu=t,t=s),t}function Os(){var e;return (e=function(){var t;"sql_calc_found_rows"===r.substr(Wu,19).toLowerCase()?(t=r.substr(Wu,19),Wu+=19):(t=s,0===Zu&&ts(Eu));return t}())===s&&((e=function(){var t;"sql_cache"===r.substr(Wu,9).toLowerCase()?(t=r.substr(Wu,9),Wu+=9):(t=s,0===Zu&&ts(hu));return t}())===s&&(e=function(){var t;"sql_no_cache"===r.substr(Wu,12).toLowerCase()?(t=r.substr(Wu,12),Wu+=12):(t=s,0===Zu&&ts(Au));return t}()),e===s&&(e=function(){var t;"sql_big_result"===r.substr(Wu,14).toLowerCase()?(t=r.substr(Wu,14),Wu+=14):(t=s,0===Zu&&ts(Tu));return t}())===s&&(e=function(){var t;"sql_small_result"===r.substr(Wu,16).toLowerCase()?(t=r.substr(Wu,16),Wu+=16):(t=s,0===Zu&&ts(yu));return t}())===s&&(e=function(){var t;"sql_buffer_result"===r.substr(Wu,17).toLowerCase()?(t=r.substr(Wu,17),Wu+=17):(t=s,0===Zu&&ts(mu));return t}())),e!==s&&(e=e),e}function gs(){var r,t,e,n,u,o,a,i,c,f;if(r=Wu,(t=wa())===s&&(t=Wu,(e=ii())!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?t=e=[e,n]:(Wu=t,t=s)):(Wu=t,t=s),t===s&&(t=ii())),t!==s){for(e=[],n=Wu,(u=vi())!==s&&(o=ai())!==s&&(a=vi())!==s&&(i=xs())!==s?n=u=[u,o,a,i]:(Wu=n,n=s);n!==s;)e.push(n),n=Wu,(u=vi())!==s&&(o=ai())!==s&&(a=vi())!==s&&(i=xs())!==s?n=u=[u,o,a,i]:(Wu=n,n=s);e!==s?(c=t,f=e,Bi.add("select::null::(.*)"),r=t=f&&f.length>0?(c[0]={expr:{type:"column_ref",table:null,column:"*"},as:null},Fi(c[0],f)):c[0]):(Wu=r,r=s);}else Wu=r,r=s;if(r===s)if(r=Wu,(t=xs())!==s){for(e=[],n=Wu,(u=vi())!==s&&(o=ai())!==s&&(a=vi())!==s&&(i=xs())!==s?n=u=[u,o,a,i]:(Wu=n,n=s);n!==s;)e.push(n),n=Wu,(u=vi())!==s&&(o=ai())!==s&&(a=vi())!==s&&(i=xs())!==s?n=u=[u,o,a,i]:(Wu=n,n=s);e!==s?(r=t=l(t,e)):(Wu=r,r=s);}else Wu=r,r=s;return r}function xs(){var r,t,e,n;return r=Wu,(t=To())!==s&&vi()!==s&&(e=oi())!==s&&vi()!==s&&ii()!==s?(n=t,Bi.add(`select::${n}::(.*)`),r=t={expr:{type:"column_ref",table:n,column:"*"},as:null}):(Wu=r,r=s),r===s&&(r=Wu,(t=ao())!==s&&vi()!==s?((e=Us())===s&&(e=null),e!==s?(r=t={expr:t,as:e}):(Wu=r,r=s)):(Wu=r,r=s)),r}function Us(){var r,t,e;return r=Wu,(t=oa())!==s&&vi()!==s&&(e=function(){var r,t;r=Wu,(t=No())!==s?((function(r){if(!0===Mi[r.toUpperCase()])throw new Error("Error: "+JSON.stringify(r)+" is a reserved word, can not as alias clause");return !1}(t)?s:void 0)!==s?(r=t=t):(Wu=r,r=s)):(Wu=r,r=s);r===s&&(r=Wu,(t=mo())!==s&&(t=t),r=t);return r}())!==s?(r=t=e):(Wu=r,r=s),r===s&&(r=Wu,(t=oa())===s&&(t=null),t!==s&&vi()!==s&&(e=To())!==s?(r=t=e):(Wu=r,r=s)),r}function Ms(){var t,e;return t=Wu,function(){var t,e,n,u;t=Wu,"from"===r.substr(Wu,4).toLowerCase()?(e=r.substr(Wu,4),Wu+=4):(e=s,0===Zu&&ts(pe));e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?t=e=[e,n]:(Wu=t,t=s)):(Wu=t,t=s);return t}()!==s&&vi()!==s&&(e=Ps())!==s?(t=e):(Wu=t,t=s),t}function Ds(){var r,t,e;return r=Wu,(t=Ys())!==s&&vi()!==s&&Ko()!==s&&vi()!==s&&(e=Ys())!==s?(r=t=[t,e]):(Wu=r,r=s),r}function ks(){var t,e;return t=Wu,va()!==s&&vi()!==s?("btree"===r.substr(Wu,5).toLowerCase()?(e=r.substr(Wu,5),Wu+=5):(e=s,0===Zu&&ts(xr)),e===s&&("hash"===r.substr(Wu,4).toLowerCase()?(e=r.substr(Wu,4),Wu+=4):(e=s,0===Zu&&ts(Ur))),e!==s?(t={keyword:"using",type:e.toLowerCase()}):(Wu=t,t=s)):(Wu=t,t=s),t}function $s(){var r,t,e,n,u,o;if(r=Wu,(t=Fs())!==s){for(e=[],n=Wu,(u=vi())!==s&&(o=Fs())!==s?n=u=[u,o]:(Wu=n,n=s);n!==s;)e.push(n),n=Wu,(u=vi())!==s&&(o=Fs())!==s?n=u=[u,o]:(Wu=n,n=s);e!==s?(r=t=function(r,t){const e=[r];for(let r=0;r<t.length;r++)e.push(t[r][1]);return e}(t,e)):(Wu=r,r=s);}else Wu=r,r=s;return r}function Fs(){var t,e,n,u,o,a;return t=Wu,(e=function(){var t,e,n,u;t=Wu,"key_block_size"===r.substr(Wu,14).toLowerCase()?(e=r.substr(Wu,14),Wu+=14):(e=s,0===Zu&&ts(nr));e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="KEY_BLOCK_SIZE"):(Wu=t,t=s)):(Wu=t,t=s);return t}())!==s&&vi()!==s?((n=Za())===s&&(n=null),n!==s&&vi()!==s&&(u=Go())!==s?(o=n,a=u,t=e={type:e.toLowerCase(),symbol:o,expr:a}):(Wu=t,t=s)):(Wu=t,t=s),t===s&&(t=ks())===s&&(t=Wu,"with"===r.substr(Wu,4).toLowerCase()?(e=r.substr(Wu,4),Wu+=4):(e=s,0===Zu&&ts(Mr)),e!==s&&vi()!==s?("parser"===r.substr(Wu,6).toLowerCase()?(n=r.substr(Wu,6),Wu+=6):(n=s,0===Zu&&ts(Dr)),n!==s&&vi()!==s&&(u=No())!==s?(t=e={type:"with parser",expr:u}):(Wu=t,t=s)):(Wu=t,t=s),t===s&&(t=Wu,"visible"===r.substr(Wu,7).toLowerCase()?(e=r.substr(Wu,7),Wu+=7):(e=s,0===Zu&&ts(kr)),e===s&&("invisible"===r.substr(Wu,9).toLowerCase()?(e=r.substr(Wu,9),Wu+=9):(e=s,0===Zu&&ts($r))),e!==s&&(e=function(r){return {type:r.toLowerCase(),expr:r.toLowerCase()}}(e)),(t=e)===s&&(t=Ci()))),t}function Ps(){var r,t,e,n;if(r=Wu,(t=Hs())!==s){for(e=[],n=Gs();n!==s;)e.push(n),n=Gs();e!==s?(r=t=Fr(t,e)):(Wu=r,r=s);}else Wu=r,r=s;return r}function Gs(){var r,t,e;return r=Wu,vi()!==s&&(t=ai())!==s&&vi()!==s&&(e=Hs())!==s?(r=e):(Wu=r,r=s),r===s&&(r=Wu,vi()!==s&&(t=function(){var r,t,e,n,u,o,a,i,c,l,f;if(r=Wu,(t=js())!==s)if(vi()!==s)if((e=Hs())!==s)if(vi()!==s)if((n=va())!==s)if(vi()!==s)if(ci()!==s)if(vi()!==s)if((u=No())!==s){for(o=[],a=Wu,(i=vi())!==s&&(c=ai())!==s&&(l=vi())!==s&&(f=No())!==s?a=i=[i,c,l,f]:(Wu=a,a=s);a!==s;)o.push(a),a=Wu,(i=vi())!==s&&(c=ai())!==s&&(l=vi())!==s&&(f=No())!==s?a=i=[i,c,l,f]:(Wu=a,a=s);o!==s&&(a=vi())!==s&&(i=li())!==s?(b=t,d=u,L=o,(v=e).join=b,v.using=Fi(d,L),r=t=v):(Wu=r,r=s);}else Wu=r,r=s;else Wu=r,r=s;else Wu=r,r=s;else Wu=r,r=s;else Wu=r,r=s;else Wu=r,r=s;else Wu=r,r=s;else Wu=r,r=s;else Wu=r,r=s;var b,v,d,L;r===s&&(r=Wu,(t=js())!==s&&vi()!==s&&(e=Hs())!==s&&vi()!==s?((n=Bs())===s&&(n=null),n!==s?(t=function(r,t,e){return t.join=r,t.on=e,t}(t,e,n),r=t):(Wu=r,r=s)):(Wu=r,r=s),r===s&&(r=Wu,(t=js())!==s&&vi()!==s&&(e=ci())!==s&&vi()!==s&&(n=os())!==s&&vi()!==s&&li()!==s&&vi()!==s?((u=Us())===s&&(u=null),u!==s&&(o=vi())!==s?((a=Bs())===s&&(a=null),a!==s?(t=function(r,t,e,n){return t.parentheses=!0,{expr:t,as:e,join:r,on:n}}(t,n,u,a),r=t):(Wu=r,r=s)):(Wu=r,r=s)):(Wu=r,r=s)));return r}())!==s?(r=t):(Wu=r,r=s)),r}function Hs(){var t,e,n,u,o,a;return t=Wu,(e=function(){var t;"dual"===r.substr(Wu,4).toLowerCase()?(t=r.substr(Wu,4),Wu+=4):(t=s,0===Zu&&ts(lu));return t}())!==s&&(e={type:"dual"}),(t=e)===s&&(t=Wu,(e=Ys())!==s&&vi()!==s?((n=Us())===s&&(n=null),n!==s?(a=n,t=e="var"===(o=e).type?(o.as=a,o):{db:o.db,table:o.table,as:a}):(Wu=t,t=s)):(Wu=t,t=s),t===s&&(t=Wu,(e=ci())!==s&&vi()!==s&&(n=os())!==s&&vi()!==s&&li()!==s&&vi()!==s?((u=Us())===s&&(u=null),u!==s?(t=e=function(r,t){return r.parentheses=!0,{expr:r,as:t}}(n,u)):(Wu=t,t=s)):(Wu=t,t=s))),t}function js(){var t,e,n,u;return t=Wu,(e=function(){var t,e,n,u;t=Wu,"left"===r.substr(Wu,4).toLowerCase()?(e=r.substr(Wu,4),Wu+=4):(e=s,0===Zu&&ts(me));e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?t=e=[e,n]:(Wu=t,t=s)):(Wu=t,t=s);return t}())!==s&&(n=vi())!==s?((u=fa())===s&&(u=null),u!==s&&vi()!==s&&la()!==s?(t=e="LEFT JOIN"):(Wu=t,t=s)):(Wu=t,t=s),t===s&&(t=Wu,(e=function(){var t,e,n,u;t=Wu,"right"===r.substr(Wu,5).toLowerCase()?(e=r.substr(Wu,5),Wu+=5):(e=s,0===Zu&&ts(Se));e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?t=e=[e,n]:(Wu=t,t=s)):(Wu=t,t=s);return t}())!==s&&(n=vi())!==s?((u=fa())===s&&(u=null),u!==s&&vi()!==s&&la()!==s?(t=e="RIGHT JOIN"):(Wu=t,t=s)):(Wu=t,t=s),t===s&&(t=Wu,(e=function(){var t,e,n,u;t=Wu,"full"===r.substr(Wu,4).toLowerCase()?(e=r.substr(Wu,4),Wu+=4):(e=s,0===Zu&&ts(Ie));e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?t=e=[e,n]:(Wu=t,t=s)):(Wu=t,t=s);return t}())!==s&&(n=vi())!==s?((u=fa())===s&&(u=null),u!==s&&vi()!==s&&la()!==s?(t=e="FULL JOIN"):(Wu=t,t=s)):(Wu=t,t=s),t===s&&(t=Wu,e=Wu,(n=function(){var t,e,n,u;t=Wu,"inner"===r.substr(Wu,5).toLowerCase()?(e=r.substr(Wu,5),Wu+=5):(e=s,0===Zu&&ts(Ne));e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?t=e=[e,n]:(Wu=t,t=s)):(Wu=t,t=s);return t}())!==s&&(u=vi())!==s?e=n=[n,u]:(Wu=e,e=s),e===s&&(e=null),e!==s&&(n=la())!==s?(t=e="INNER JOIN"):(Wu=t,t=s)))),t}function Ys(){var r,t,e,n,u,o,a,i;return r=Wu,(t=To())!==s?(e=Wu,(n=vi())!==s&&(u=oi())!==s&&(o=vi())!==s&&(a=To())!==s?e=n=[n,u,o,a]:(Wu=e,e=s),e===s&&(e=null),e!==s?(r=t=function(r,t){const e={db:null,table:r};return null!==t&&(e.db=r,e.table=t[3]),e}(t,e)):(Wu=r,r=s)):(Wu=r,r=s),r===s&&(r=Wu,(t=_i())!==s&&((i=t).db=null,i.table=i.name,t=i),r=t),r}function Bs(){var r,t;return r=Wu,ca()!==s&&vi()!==s&&(t=ao())!==s?(r=t):(Wu=r,r=s),r}function Xs(){var t,e;return t=Wu,function(){var t,e,n,u;t=Wu,"where"===r.substr(Wu,5).toLowerCase()?(e=r.substr(Wu,5),Wu+=5):(e=s,0===Zu&&ts(Me));e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?t=e=[e,n]:(Wu=t,t=s)):(Wu=t,t=s);return t}()!==s&&vi()!==s&&(e=io())!==s?(t=e):(Wu=t,t=s),t}function Ws(){var t,e;return t=Wu,function(){var t,e,n,u;t=Wu,"order"===r.substr(Wu,5).toLowerCase()?(e=r.substr(Wu,5),Wu+=5):(e=s,0===Zu&&ts($e));e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?t=e=[e,n]:(Wu=t,t=s)):(Wu=t,t=s);return t}()!==s&&vi()!==s&&La()!==s&&vi()!==s&&(e=function(){var r,t,e,n,u,o,a,i;if(r=Wu,(t=Vs())!==s){for(e=[],n=Wu,(u=vi())!==s&&(o=ai())!==s&&(a=vi())!==s&&(i=Vs())!==s?n=u=[u,o,a,i]:(Wu=n,n=s);n!==s;)e.push(n),n=Wu,(u=vi())!==s&&(o=ai())!==s&&(a=vi())!==s&&(i=Vs())!==s?n=u=[u,o,a,i]:(Wu=n,n=s);e!==s?(t=l(t,e),r=t):(Wu=r,r=s);}else Wu=r,r=s;return r}())!==s?(t=e):(Wu=t,t=s),t}function Vs(){var r,t,e;return r=Wu,(t=ao())!==s&&vi()!==s?((e=pa())===s&&(e=Ca()),e===s&&(e=null),e!==s?(r=t=function(r,t){const e={expr:r,type:"ASC"};return "DESC"===t&&(e.type="DESC"),e}(t,e)):(Wu=r,r=s)):(Wu=r,r=s),r}function Ks(){var r;return (r=Go())===s&&(r=go()),r}function qs(){var t,e,n,u,o,a;return t=Wu,function(){var t,e,n,u;t=Wu,"limit"===r.substr(Wu,5).toLowerCase()?(e=r.substr(Wu,5),Wu+=5):(e=s,0===Zu&&ts(Pe));e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?t=e=[e,n]:(Wu=t,t=s)):(Wu=t,t=s);return t}()!==s&&vi()!==s&&(e=Ks())!==s&&vi()!==s?(n=Wu,(u=ai())===s&&(u=function(){var t,e,n,u;t=Wu,"offset"===r.substr(Wu,6).toLowerCase()?(e=r.substr(Wu,6),Wu+=6):(e=s,0===Zu&&ts(Ge));e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="OFFSET"):(Wu=t,t=s)):(Wu=t,t=s);return t}()),u!==s&&(o=vi())!==s&&(a=Ks())!==s?n=u=[u,o,a]:(Wu=n,n=s),n===s&&(n=null),n!==s?(t=function(r,t){const e=[r];return t&&e.push(t[2]),{seperator:t&&t[0]&&t[0].toLowerCase()||"",value:e}}(e,n)):(Wu=t,t=s)):(Wu=t,t=s),t}function Zs(){var r,t,e,n,u,o,a,i;if(r=Wu,(t=zs())!==s){for(e=[],n=Wu,(u=vi())!==s&&(o=ai())!==s&&(a=vi())!==s&&(i=zs())!==s?n=u=[u,o,a,i]:(Wu=n,n=s);n!==s;)e.push(n),n=Wu,(u=vi())!==s&&(o=ai())!==s&&(a=vi())!==s&&(i=zs())!==s?n=u=[u,o,a,i]:(Wu=n,n=s);e!==s?(r=t=l(t,e)):(Wu=r,r=s);}else Wu=r,r=s;return r}function zs(){var t,e,n,u,o,a,i,c;return t=Wu,e=Wu,(n=To())!==s&&(u=vi())!==s&&(o=oi())!==s?e=n=[n,u,o]:(Wu=e,e=s),e===s&&(e=null),e!==s&&(n=vi())!==s&&(u=So())!==s&&(o=vi())!==s?(61===r.charCodeAt(Wu)?(a="=",Wu++):(a=s,0===Zu&&ts(Pr)),a!==s&&vi()!==s&&(i=po())!==s?(t=e={column:u,value:i,table:(c=e)&&c[0]}):(Wu=t,t=s)):(Wu=t,t=s),t}function Js(){var t;return (t=function(){var t,e;t=Wu,function(){var t,e,n,u;t=Wu,"values"===r.substr(Wu,6).toLowerCase()?(e=r.substr(Wu,6),Wu+=6):(e=s,0===Zu&&ts(xe));e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?t=e=[e,n]:(Wu=t,t=s)):(Wu=t,t=s);return t}()!==s&&vi()!==s&&(e=function(){var r,t,e,n,u,o,a,i;if(r=Wu,(t=eo())!==s){for(e=[],n=Wu,(u=vi())!==s&&(o=ai())!==s&&(a=vi())!==s&&(i=eo())!==s?n=u=[u,o,a,i]:(Wu=n,n=s);n!==s;)e.push(n),n=Wu,(u=vi())!==s&&(o=ai())!==s&&(a=vi())!==s&&(i=eo())!==s?n=u=[u,o,a,i]:(Wu=n,n=s);e!==s?(t=l(t,e),r=t):(Wu=r,r=s);}else Wu=r,r=s;return r}())!==s?(t=e):(Wu=t,t=s);return t}())===s&&(t=_s()),t}function Qs(){var r,t,e,n,u,o,a,i,c;if(r=Wu,na()!==s)if(vi()!==s)if((t=ci())!==s)if(vi()!==s)if((e=No())!==s){for(n=[],u=Wu,(o=vi())!==s&&(a=ai())!==s&&(i=vi())!==s&&(c=No())!==s?u=o=[o,a,i,c]:(Wu=u,u=s);u!==s;)n.push(u),u=Wu,(o=vi())!==s&&(a=ai())!==s&&(i=vi())!==s&&(c=No())!==s?u=o=[o,a,i,c]:(Wu=u,u=s);n!==s&&(u=vi())!==s&&(o=li())!==s?(r=Fi(e,n)):(Wu=r,r=s);}else Wu=r,r=s;else Wu=r,r=s;else Wu=r,r=s;else Wu=r,r=s;else Wu=r,r=s;return r===s&&(r=Wu,na()!==s&&vi()!==s&&(t=eo())!==s?(r=t):(Wu=r,r=s)),r}function ro(){var t,e,n;return t=Wu,ca()!==s&&vi()!==s?("duplicate"===r.substr(Wu,9).toLowerCase()?(e=r.substr(Wu,9),Wu+=9):(e=s,0===Zu&&ts(Gr)),e!==s&&vi()!==s&&ri()!==s&&vi()!==s&&zo()!==s&&vi()!==s&&(n=Zs())!==s?(t={keyword:"on duplicate key update",set:n}):(Wu=t,t=s)):(Wu=t,t=s),t}function to(){var t,e;return t=Wu,(e=function(){var t,e,n,u;t=Wu,"insert"===r.substr(Wu,6).toLowerCase()?(e=r.substr(Wu,6),Wu+=6):(e=s,0===Zu&&ts(le));e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?t=e=[e,n]:(Wu=t,t=s)):(Wu=t,t=s);return t}())!==s&&(e="insert"),(t=e)===s&&(t=Wu,(e=ta())!==s&&(e="replace"),t=e),t}function eo(){var r,t;return r=Wu,ci()!==s&&vi()!==s&&(t=no())!==s&&vi()!==s&&li()!==s?(r=t):(Wu=r,r=s),r}function no(){var r,t,e,n,u,o,a,i;if(r=Wu,(t=ao())!==s){for(e=[],n=Wu,(u=vi())!==s&&(o=ai())!==s&&(a=vi())!==s&&(i=ao())!==s?n=u=[u,o,a,i]:(Wu=n,n=s);n!==s;)e.push(n),n=Wu,(u=vi())!==s&&(o=ai())!==s&&(a=vi())!==s&&(i=ao())!==s?n=u=[u,o,a,i]:(Wu=n,n=s);e!==s?(r=t=function(r,t){const e={type:"expr_list"};return e.value=Fi(r,t),e}(t,e)):(Wu=r,r=s);}else Wu=r,r=s;return r}function uo(){var t,e,n;return t=Wu,function(){var t,e,n,u;t=Wu,"interval"===r.substr(Wu,8).toLowerCase()?(e=r.substr(Wu,8),Wu+=8):(e=s,0===Zu&&ts(Yn));e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="INTERVAL"):(Wu=t,t=s)):(Wu=t,t=s);return t}()!==s&&vi()!==s&&(e=ao())!==s&&vi()!==s&&(n=function(){var t;(t=function(){var t,e,n,u;t=Wu,"year"===r.substr(Wu,4).toLowerCase()?(e=r.substr(Wu,4),Wu+=4):(e=s,0===Zu&&ts(Bn));e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="YEAR"):(Wu=t,t=s)):(Wu=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Wu,"month"===r.substr(Wu,5).toLowerCase()?(e=r.substr(Wu,5),Wu+=5):(e=s,0===Zu&&ts(Xn));e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="MONTH"):(Wu=t,t=s)):(Wu=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Wu,"day"===r.substr(Wu,3).toLowerCase()?(e=r.substr(Wu,3),Wu+=3):(e=s,0===Zu&&ts(Wn));e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="DAY"):(Wu=t,t=s)):(Wu=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Wu,"hour"===r.substr(Wu,4).toLowerCase()?(e=r.substr(Wu,4),Wu+=4):(e=s,0===Zu&&ts(Vn));e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="HOUR"):(Wu=t,t=s)):(Wu=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Wu,"minute"===r.substr(Wu,6).toLowerCase()?(e=r.substr(Wu,6),Wu+=6):(e=s,0===Zu&&ts(Kn));e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="MINUTE"):(Wu=t,t=s)):(Wu=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Wu,"second"===r.substr(Wu,6).toLowerCase()?(e=r.substr(Wu,6),Wu+=6):(e=s,0===Zu&&ts(qn));e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="SECOND"):(Wu=t,t=s)):(Wu=t,t=s);return t}());return t}())!==s?(t={type:"interval",expr:e,unit:n.toLowerCase()}):(Wu=t,t=s),t}function so(){var t,e,n;return t=Wu,function(){var t,e,n,u;t=Wu,"when"===r.substr(Wu,4).toLowerCase()?(e=r.substr(Wu,4),Wu+=4):(e=s,0===Zu&&ts(ln));e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?t=e=[e,n]:(Wu=t,t=s)):(Wu=t,t=s);return t}()!==s&&vi()!==s&&(e=io())!==s&&vi()!==s&&function(){var t,e,n,u;t=Wu,"then"===r.substr(Wu,4).toLowerCase()?(e=r.substr(Wu,4),Wu+=4):(e=s,0===Zu&&ts(fn));e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?t=e=[e,n]:(Wu=t,t=s)):(Wu=t,t=s);return t}()!==s&&vi()!==s&&(n=ao())!==s?(t={type:"when",cond:e,result:n}):(Wu=t,t=s),t}function oo(){var t,e;return t=Wu,function(){var t,e,n,u;t=Wu,"else"===r.substr(Wu,4).toLowerCase()?(e=r.substr(Wu,4),Wu+=4):(e=s,0===Zu&&ts(bn));e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?t=e=[e,n]:(Wu=t,t=s)):(Wu=t,t=s);return t}()!==s&&vi()!==s&&(e=ao())!==s?(t={type:"else",result:e}):(Wu=t,t=s),t}function ao(){var r;return (r=function(){var r,t,e,n,u,o,a,i;if(r=Wu,(t=Ao())!==s){if(e=[],n=Wu,(u=vi())!==s&&(o=bi())!==s&&(a=vi())!==s&&(i=Ao())!==s?n=u=[u,o,a,i]:(Wu=n,n=s),n!==s)for(;n!==s;)e.push(n),n=Wu,(u=vi())!==s&&(o=bi())!==s&&(a=vi())!==s&&(i=Ao())!==s?n=u=[u,o,a,i]:(Wu=n,n=s);else e=s;e!==s?(t=Pi(t,e),r=t):(Wu=r,r=s);}else Wu=r,r=s;return r}())===s&&(r=function(){var r,t,e,n,u,o,a,i;if(r=Wu,(t=co())!==s){for(e=[],n=Wu,(u=di())!==s&&(o=Na())!==s&&(a=vi())!==s&&(i=co())!==s?n=u=[u,o,a,i]:(Wu=n,n=s);n!==s;)e.push(n),n=Wu,(u=di())!==s&&(o=Na())!==s&&(a=vi())!==s&&(i=co())!==s?n=u=[u,o,a,i]:(Wu=n,n=s);e!==s?(t=Hr(t,e),r=t):(Wu=r,r=s);}else Wu=r,r=s;return r}())===s&&(r=function(){var r,t,e,n,u,o;if(r=Wu,(t=wo())!==s){if(e=[],n=Wu,(u=vi())!==s&&(o=Ao())!==s?n=u=[u,o]:(Wu=n,n=s),n!==s)for(;n!==s;)e.push(n),n=Wu,(u=vi())!==s&&(o=Ao())!==s?n=u=[u,o]:(Wu=n,n=s);else e=s;e!==s?(t=Di(t,e[0][1]),r=t):(Wu=r,r=s);}else Wu=r,r=s;return r}())===s&&(r=Ss()),r}function io(){var r,t,e,n,u,o,a,i;if(r=Wu,(t=ao())!==s){for(e=[],n=Wu,(u=vi())!==s?((o=Ia())===s&&(o=Na())===s&&(o=ai()),o!==s&&(a=vi())!==s&&(i=ao())!==s?n=u=[u,o,a,i]:(Wu=n,n=s)):(Wu=n,n=s);n!==s;)e.push(n),n=Wu,(u=vi())!==s?((o=Ia())===s&&(o=Na())===s&&(o=ai()),o!==s&&(a=vi())!==s&&(i=ao())!==s?n=u=[u,o,a,i]:(Wu=n,n=s)):(Wu=n,n=s);e!==s?(r=t=function(r,t){let e=r,n="";for(let u=0;u<t.length;u++)","===t[u][1]?(n=",",0===u&&(e=[r]),e.push(t[u][3])):e=ki(t[u][1],e,t[u][3]);if(","===n){const r={type:"expr_list"};return r.value=e,r}return e}(t,e)):(Wu=r,r=s);}else Wu=r,r=s;return r}function co(){var r,t,e,n,u,o,a,i;if(r=Wu,(t=lo())!==s){for(e=[],n=Wu,(u=di())!==s&&(o=Ia())!==s&&(a=vi())!==s&&(i=lo())!==s?n=u=[u,o,a,i]:(Wu=n,n=s);n!==s;)e.push(n),n=Wu,(u=di())!==s&&(o=Ia())!==s&&(a=vi())!==s&&(i=lo())!==s?n=u=[u,o,a,i]:(Wu=n,n=s);e!==s?(r=t=Pi(t,e)):(Wu=r,r=s);}else Wu=r,r=s;return r}function lo(){var t,e,n,u,o;return (t=fo())===s&&(t=function(){var r,t,e;r=Wu,(t=function(){var r,t,e,n,u;r=Wu,t=Wu,(e=Sa())!==s&&(n=vi())!==s&&(u=ma())!==s?t=e=[e,n,u]:(Wu=t,t=s);t!==s&&(t=Yr(t));(r=t)===s&&(r=ma());return r}())!==s&&vi()!==s&&ci()!==s&&vi()!==s&&(e=os())!==s&&vi()!==s&&li()!==s?(n=t,(u=e).parentheses=!0,t=Di(n,u),r=t):(Wu=r,r=s);var n,u;return r}())===s&&(t=Wu,(e=Sa())===s&&(e=Wu,33===r.charCodeAt(Wu)?(n="!",Wu++):(n=s,0===Zu&&ts(jr)),n!==s?(u=Wu,Zu++,61===r.charCodeAt(Wu)?(o="=",Wu++):(o=s,0===Zu&&ts(Pr)),Zu--,o===s?u=void 0:(Wu=u,u=s),u!==s?e=n=[n,u]:(Wu=e,e=s)):(Wu=e,e=s)),e!==s&&(n=vi())!==s&&(u=lo())!==s?(t=e=Di("NOT",u)):(Wu=t,t=s)),t}function fo(){var t,e,n,u,o;return t=Wu,(e=po())!==s&&vi()!==s?((n=function(){var t;(t=function(){var t,e,n,u,o,a;t=[],e=Wu,(n=vi())!==s&&(u=bo())!==s&&(o=vi())!==s&&(a=po())!==s?e=n=[n,u,o,a]:(Wu=e,e=s);if(e!==s)for(;e!==s;)t.push(e),e=Wu,(n=vi())!==s&&(u=bo())!==s&&(o=vi())!==s&&(a=po())!==s?e=n=[n,u,o,a]:(Wu=e,e=s);else t=s;t!==s&&(t={type:"arithmetic",tail:t});return t}())===s&&(t=Co())===s&&(t=function(){var r,t,e,n;r=Wu,(t=function(){var r,t,e,n,u;r=Wu,t=Wu,(e=Sa())!==s&&(n=vi())!==s&&(u=ha())!==s?t=e=[e,n,u]:(Wu=t,t=s);t!==s&&(t=Yr(t));(r=t)===s&&(r=ha());return r}())!==s&&vi()!==s&&(e=po())!==s&&vi()!==s&&Ia()!==s&&vi()!==s&&(n=po())!==s?(r=t={op:t,right:{type:"expr_list",value:[e,n]}}):(Wu=r,r=s);return r}())===s&&(t=function(){var r,t,e,n,u;r=Wu,(t=ya())!==s&&(e=vi())!==s&&(n=po())!==s?(r=t={op:"IS",right:n}):(Wu=r,r=s);r===s&&(r=Wu,t=Wu,(e=ya())!==s&&(n=vi())!==s&&(u=Sa())!==s?t=e=[e,n,u]:(Wu=t,t=s),t!==s&&(e=vi())!==s&&(n=po())!==s?(t=function(r){return {op:"IS NOT",right:r}}(n),r=t):(Wu=r,r=s));return r}())===s&&(t=Lo())===s&&(t=function(){var t,e,n,u;t=Wu,(e=function(){var t,e,n;t=Wu,(e=Sa())===s&&(e=null);e!==s&&vi()!==s?((n=function(){var t,e,n,u;t=Wu,"regexp"===r.substr(Wu,6).toLowerCase()?(e=r.substr(Wu,6),Wu+=6):(e=s,0===Zu&&ts(ze));e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="REGEXP"):(Wu=t,t=s)):(Wu=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=Wu,"rlike"===r.substr(Wu,5).toLowerCase()?(e=r.substr(Wu,5),Wu+=5):(e=s,0===Zu&&ts(Ze));e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="RLIKE"):(Wu=t,t=s)):(Wu=t,t=s);return t}()),n!==s?(o=n,t=e=(u=e)?`${u} ${o}`:o):(Wu=t,t=s)):(Wu=t,t=s);var u,o;return t}())!==s&&vi()!==s?("binary"===r.substr(Wu,6).toLowerCase()?(n=r.substr(Wu,6),Wu+=6):(n=s,0===Zu&&ts(Tr)),n===s&&(n=null),n!==s&&vi()!==s&&(u=ko())!==s?(o=e,t=e={op:(a=n)?`${o} ${a}`:o,right:u}):(Wu=t,t=s)):(Wu=t,t=s);var o,a;return t}());return t}())===s&&(n=null),n!==s?(u=e,t=e=null===(o=n)?u:"arithmetic"===o.type?Pi(u,o.tail):ki(o.op,u,o.right)):(Wu=t,t=s)):(Wu=t,t=s),t===s&&(t=ko())===s&&(t=yo()),t}function bo(){var t;return ">="===r.substr(Wu,2)?(t=">=",Wu+=2):(t=s,0===Zu&&ts(Br)),t===s&&(62===r.charCodeAt(Wu)?(t=">",Wu++):(t=s,0===Zu&&ts(Xr)),t===s&&("<="===r.substr(Wu,2)?(t="<=",Wu+=2):(t=s,0===Zu&&ts(Wr)),t===s&&("<>"===r.substr(Wu,2)?(t="<>",Wu+=2):(t=s,0===Zu&&ts(Vr)),t===s&&(60===r.charCodeAt(Wu)?(t="<",Wu++):(t=s,0===Zu&&ts(Kr)),t===s&&(61===r.charCodeAt(Wu)?(t="=",Wu++):(t=s,0===Zu&&ts(Pr)),t===s&&("!="===r.substr(Wu,2)?(t="!=",Wu+=2):(t=s,0===Zu&&ts(qr)))))))),t}function vo(){var r,t,e,n,u;return r=Wu,t=Wu,(e=Sa())!==s&&(n=vi())!==s&&(u=Aa())!==s?t=e=[e,n,u]:(Wu=t,t=s),t!==s&&(t=Yr(t)),(r=t)===s&&(r=Aa()),r}function Lo(){var r,t,e;return r=Wu,(t=function(){var r,t,e,n,u;return r=Wu,t=Wu,(e=Sa())!==s&&(n=vi())!==s&&(u=Ta())!==s?t=e=[e,n,u]:(Wu=t,t=s),t!==s&&(t=Yr(t)),(r=t)===s&&(r=Ta()),r}())!==s&&vi()!==s?((e=Mo())===s&&(e=fo()),e!==s?(r=t={op:t,right:e}):(Wu=r,r=s)):(Wu=r,r=s),r}function Co(){var r,t,e,n;return r=Wu,(t=vo())!==s&&vi()!==s&&(e=ci())!==s&&vi()!==s&&(n=no())!==s&&vi()!==s&&li()!==s?(r=t={op:t,right:n}):(Wu=r,r=s),r===s&&(r=Wu,(t=vo())!==s&&vi()!==s?((e=_i())===s&&(e=ko()),e!==s?(r=t=function(r,t){return {op:r,right:t}}(t,e)):(Wu=r,r=s)):(Wu=r,r=s)),r}function po(){var r,t,e,n,u,o,a,i;if(r=Wu,(t=Eo())!==s){for(e=[],n=Wu,(u=vi())!==s&&(o=wo())!==s&&(a=vi())!==s&&(i=Eo())!==s?n=u=[u,o,a,i]:(Wu=n,n=s);n!==s;)e.push(n),n=Wu,(u=vi())!==s&&(o=wo())!==s&&(a=vi())!==s&&(i=Eo())!==s?n=u=[u,o,a,i]:(Wu=n,n=s);e!==s?(r=t=Hr(t,e)):(Wu=r,r=s);}else Wu=r,r=s;return r}function wo(){var t;return 43===r.charCodeAt(Wu)?(t="+",Wu++):(t=s,0===Zu&&ts(Zr)),t===s&&(45===r.charCodeAt(Wu)?(t="-",Wu++):(t=s,0===Zu&&ts(zr))),t}function Eo(){var r,t,e,n,u,o,a,i;if(r=Wu,(t=Ao())!==s){for(e=[],n=Wu,(u=vi())!==s&&(o=ho())!==s&&(a=vi())!==s&&(i=Ao())!==s?n=u=[u,o,a,i]:(Wu=n,n=s);n!==s;)e.push(n),n=Wu,(u=vi())!==s&&(o=ho())!==s&&(a=vi())!==s&&(i=Ao())!==s?n=u=[u,o,a,i]:(Wu=n,n=s);e!==s?(r=t=Pi(t,e)):(Wu=r,r=s);}else Wu=r,r=s;return r}function ho(){var t,e;return 42===r.charCodeAt(Wu)?(t="*",Wu++):(t=s,0===Zu&&ts(Jr)),t===s&&(47===r.charCodeAt(Wu)?(t="/",Wu++):(t=s,0===Zu&&ts(Qr)),t===s&&(37===r.charCodeAt(Wu)?(t="%",Wu++):(t=s,0===Zu&&ts(rt)),t===s&&(t=Wu,"div"===r.substr(Wu,3).toLowerCase()?(e=r.substr(Wu,3),Wu+=3):(e=s,0===Zu&&ts(tt)),e!==s&&(e="DIV"),t=e))),t}function Ao(){var t,e,n,u;return (t=function(){var t,e,n,u,o,a,i;t=Wu,(e=Oa())!==s&&vi()!==s&&ci()!==s&&vi()!==s&&(n=ao())!==s&&vi()!==s&&oa()!==s&&vi()!==s&&(u=xi())!==s&&vi()!==s&&(o=As())!==s&&vi()!==s&&(a=No())!==s&&vi()!==s&&li()!==s&&vi()!==s?((i=fs())===s&&(i=null),i!==s?(e=function(r,t,e,n,u){const{dataType:s,length:o}=t;let a=s;return void 0!==o&&(a=`${a}(${o})`),{type:"cast",expr:r,symbol:"as",target:{dataType:`${a} ${e} ${n.toUpperCase()}`},collate:u}}(n,u,o,a,i),t=e):(Wu=t,t=s)):(Wu=t,t=s);t===s&&(t=Wu,(e=Oa())!==s&&vi()!==s&&ci()!==s&&vi()!==s&&(n=ao())!==s&&vi()!==s&&oa()!==s&&vi()!==s&&(u=gi())!==s&&vi()!==s&&(o=li())!==s?(t=e={type:"cast",expr:n,symbol:"as",target:u}):(Wu=t,t=s),t===s&&(t=Wu,(e=Oa())!==s&&vi()!==s&&ci()!==s&&vi()!==s&&(n=ao())!==s&&vi()!==s&&oa()!==s&&vi()!==s&&(u=Ma())!==s&&vi()!==s&&(o=ci())!==s&&vi()!==s&&(a=Ho())!==s&&vi()!==s&&li()!==s&&vi()!==s&&(i=li())!==s?(e=function(r,t){return {type:"cast",expr:r,symbol:"as",target:{dataType:"DECIMAL("+t+")"}}}(n,a),t=e):(Wu=t,t=s),t===s&&(t=Wu,(e=Oa())!==s&&vi()!==s&&ci()!==s&&vi()!==s&&(n=ao())!==s&&vi()!==s&&oa()!==s&&vi()!==s&&(u=Ma())!==s&&vi()!==s&&(o=ci())!==s&&vi()!==s&&(a=Ho())!==s&&vi()!==s&&ai()!==s&&vi()!==s&&(i=Ho())!==s&&vi()!==s&&li()!==s&&vi()!==s&&li()!==s?(e=function(r,t,e){return {type:"cast",expr:r,symbol:"as",target:{dataType:"DECIMAL("+t+", "+e+")"}}}(n,a,i),t=e):(Wu=t,t=s),t===s&&(t=Wu,(e=Oa())!==s&&vi()!==s&&ci()!==s&&vi()!==s&&(n=ao())!==s&&vi()!==s&&oa()!==s&&vi()!==s&&(u=function(){var t;(t=function(){var t,e,n,u;t=Wu,"signed"===r.substr(Wu,6).toLowerCase()?(e=r.substr(Wu,6),Wu+=6):(e=s,0===Zu&&ts(hn));e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="SIGNED"):(Wu=t,t=s)):(Wu=t,t=s);return t}())===s&&(t=Da());return t}())!==s&&vi()!==s?((o=$a())===s&&(o=null),o!==s&&vi()!==s&&(a=li())!==s?(e=function(r,t,e){return {type:"cast",expr:r,symbol:"as",target:{dataType:t+(e?" "+e:"")}}}(n,u,o),t=e):(Wu=t,t=s)):(Wu=t,t=s)))));return t}())===s&&(t=Mo())===s&&(t=function(){var t;(t=function(){var t,e,n,u;t=Wu,(e=function(){var t,e,n,u;t=Wu,"count"===r.substr(Wu,5).toLowerCase()?(e=r.substr(Wu,5),Wu+=5):(e=s,0===Zu&&ts(tn));e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="COUNT"):(Wu=t,t=s)):(Wu=t,t=s);return t}())===s&&(e=function(){var t,e,n,u;t=Wu,"group_concat"===r.substr(Wu,12).toLowerCase()?(e=r.substr(Wu,12),Wu+=12):(e=s,0===Zu&&ts(en));e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="GROUP_CONCAT"):(Wu=t,t=s)):(Wu=t,t=s);return t}());e!==s&&vi()!==s&&ci()!==s&&vi()!==s&&(n=function(){var t,e,n,u,o;t=Wu,(e=function(){var e;42===r.charCodeAt(Wu)?(e="*",Wu++):(e=s,0===Zu&&ts(Jr));e!==s&&(e={type:"star",value:"*"});return e}())!==s&&(e={expr:e});(t=e)===s&&(t=Wu,(e=Ea())===s&&(e=null),e!==s&&vi()!==s&&(n=yo())!==s?(t=e={distinct:e,expr:n}):(Wu=t,t=s),t===s&&(t=Wu,(e=Ea())===s&&(e=null),e!==s&&vi()!==s&&(n=ci())!==s&&vi()!==s&&(u=ao())!==s&&vi()!==s&&li()!==s&&vi()!==s?((o=Ws())===s&&(o=null),o!==s?(e=function(r,t,e){return t.parentheses=!0,{distinct:r,expr:t,orderby:e}}(e,u,o),t=e):(Wu=t,t=s)):(Wu=t,t=s)));return t}())!==s&&vi()!==s&&li()!==s&&vi()!==s?((u=Uo())===s&&(u=null),u!==s?(e=function(r,t,e){return {type:"aggr_func",name:r,args:t,over:e}}(e,n,u),t=e):(Wu=t,t=s)):(Wu=t,t=s);return t}())===s&&(t=function(){var t,e,n;t=Wu,(e=function(){var t;(t=function(){var t,e,n,u;t=Wu,"sum"===r.substr(Wu,3).toLowerCase()?(e=r.substr(Wu,3),Wu+=3):(e=s,0===Zu&&ts(sn));e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="SUM"):(Wu=t,t=s)):(Wu=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Wu,"max"===r.substr(Wu,3).toLowerCase()?(e=r.substr(Wu,3),Wu+=3):(e=s,0===Zu&&ts(nn));e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="MAX"):(Wu=t,t=s)):(Wu=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Wu,"min"===r.substr(Wu,3).toLowerCase()?(e=r.substr(Wu,3),Wu+=3):(e=s,0===Zu&&ts(un));e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="MIN"):(Wu=t,t=s)):(Wu=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Wu,"avg"===r.substr(Wu,3).toLowerCase()?(e=r.substr(Wu,3),Wu+=3):(e=s,0===Zu&&ts(on));e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="AVG"):(Wu=t,t=s)):(Wu=t,t=s);return t}());return t}())!==s&&vi()!==s&&ci()!==s&&vi()!==s&&(n=po())!==s&&vi()!==s&&li()!==s?(t=e={type:"aggr_func",name:e,args:{expr:n}}):(Wu=t,t=s);return t}());return t}())===s&&(t=function(){var t,e,n,u,o;t=Wu,"convert"===r.substr(Wu,7).toLowerCase()?(e=r.substr(Wu,7),Wu+=7):(e=s,0===Zu&&ts(At));e!==s&&vi()!==s&&(n=ci())!==s&&vi()!==s&&(u=function(){var r,t,e,n,u;r=Wu,(t=yo())!==s&&vi()!==s&&ai()!==s&&vi()!==s&&(e=xi())!==s&&vi()!==s&&(n=As())!==s&&vi()!==s&&(u=No())!==s?(t=function(r,t,e,n){const{dataType:u,length:s}=t;let o=u;return void 0!==s&&(o=`${o}(${s})`),{type:"expr_list",value:[r,{type:"origin",value:`${o} ${e} ${n}`}]}}(t,e,n,u),r=t):(Wu=r,r=s);r===s&&(r=Wu,(t=yo())!==s&&vi()!==s&&ai()!==s&&vi()!==s&&(e=gi())!==s?(t={type:"expr_list",value:[t,{value:e.dataType.toUpperCase()}]},r=t):(Wu=r,r=s),r===s&&(r=Wu,(t=yo())!==s&&vi()!==s&&va()!==s&&vi()!==s&&(e=No())!==s?(t=function(r,t){return r.suffix="USING "+t,{type:"expr_list",value:[r]}}(t,e),r=t):(Wu=r,r=s)));return r}())!==s&&vi()!==s&&li()!==s&&vi()!==s?((o=fs())===s&&(o=null),o!==s?(t=e={type:"function",name:"CONVERT",args:u,collate:o}):(Wu=t,t=s)):(Wu=t,t=s);t===s&&(t=Wu,(e=Ii())!==s&&vi()!==s&&(n=ci())!==s&&vi()!==s?((u=no())===s&&(u=null),u!==s&&vi()!==s&&li()!==s&&vi()!==s?((o=Uo())===s&&(o=null),o!==s?(e=yt(e,u,o),t=e):(Wu=t,t=s)):(Wu=t,t=s)):(Wu=t,t=s),t===s&&(t=Wu,(e=function(){var t;(t=function(){var t,e,n,u;t=Wu,"current_date"===r.substr(Wu,12).toLowerCase()?(e=r.substr(Wu,12),Wu+=12):(e=s,0===Zu&&ts(jn));e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="CURRENT_DATE"):(Wu=t,t=s)):(Wu=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Wu,"current_time"===r.substr(Wu,12).toLowerCase()?(e=r.substr(Wu,12),Wu+=12):(e=s,0===Zu&&ts(Zn));e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="CURRENT_TIME"):(Wu=t,t=s)):(Wu=t,t=s);return t}())===s&&(t=Va())===s&&(t=function(){var t,e,n,u;t=Wu,"current_user"===r.substr(Wu,12).toLowerCase()?(e=r.substr(Wu,12),Wu+=12):(e=s,0===Zu&&ts(Jn));e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="CURRENT_USER"):(Wu=t,t=s)):(Wu=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Wu,"user"===r.substr(Wu,4).toLowerCase()?(e=r.substr(Wu,4),Wu+=4):(e=s,0===Zu&&ts(Hn));e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="USER"):(Wu=t,t=s)):(Wu=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Wu,"session_user"===r.substr(Wu,12).toLowerCase()?(e=r.substr(Wu,12),Wu+=12):(e=s,0===Zu&&ts(Qn));e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="SESSION_USER"):(Wu=t,t=s)):(Wu=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Wu,"system_user"===r.substr(Wu,11).toLowerCase()?(e=r.substr(Wu,11),Wu+=11):(e=s,0===Zu&&ts(ru));e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="SYSTEM_USER"):(Wu=t,t=s)):(Wu=t,t=s);return t}());return t}())!==s&&vi()!==s&&(n=ci())!==s&&vi()!==s?((u=no())===s&&(u=null),u!==s&&vi()!==s&&li()!==s&&vi()!==s?((o=Uo())===s&&(o=null),o!==s?(e=yt(e,u,o),t=e):(Wu=t,t=s)):(Wu=t,t=s)):(Wu=t,t=s),t===s&&(t=Wu,(e=Va())!==s&&vi()!==s?((n=xo())===s&&(n=null),n!==s?(e=function(r,t){return {type:"function",name:r,over:t}}(e,n),t=e):(Wu=t,t=s)):(Wu=t,t=s))));return t}())===s&&(t=function(){var r,t,e,n,u,o,a,i,c,l;if(r=Wu,Ra()!==s)if(vi()!==s){if(t=[],(e=so())!==s)for(;e!==s;)t.push(e),e=so();else t=s;t!==s&&(e=vi())!==s?((n=oo())===s&&(n=null),n!==s&&(u=vi())!==s&&(o=_a())!==s&&vi()!==s?((a=Ra())===s&&(a=null),a!==s?(c=t,(l=n)&&c.push(l),r={type:"case",expr:null,args:c}):(Wu=r,r=s)):(Wu=r,r=s)):(Wu=r,r=s);}else Wu=r,r=s;else Wu=r,r=s;if(r===s)if(r=Wu,Ra()!==s)if(vi()!==s)if((t=ao())!==s)if((e=vi())!==s){if(n=[],(u=so())!==s)for(;u!==s;)n.push(u),u=so();else n=s;n!==s&&(u=vi())!==s?((o=oo())===s&&(o=null),o!==s&&vi()!==s&&(a=_a())!==s&&vi()!==s?((i=Ra())===s&&(i=null),i!==s?(r=function(r,t,e){return e&&t.push(e),{type:"case",expr:r,args:t}}(t,n,o)):(Wu=r,r=s)):(Wu=r,r=s)):(Wu=r,r=s);}else Wu=r,r=s;else Wu=r,r=s;else Wu=r,r=s;else Wu=r,r=s;return r}())===s&&(t=uo())===s&&(t=yo())===s&&(t=go())===s&&(t=Wu,ci()!==s&&(e=vi())!==s&&(n=io())!==s&&vi()!==s&&li()!==s?((u=n).parentheses=!0,t=u):(Wu=t,t=s),t===s&&(t=_i())===s&&(t=Wu,vi()!==s?(63===r.charCodeAt(Wu)?(e="?",Wu++):(e=s,0===Zu&&ts(et)),e!==s?(t={type:"origin",value:e}):(Wu=t,t=s)):(Wu=t,t=s))),t}function yo(){var t,e,n,u,o,a,i,c,l,f;return t=Wu,e=Wu,(n=To())!==s&&(u=vi())!==s&&(o=oi())!==s&&(a=vi())!==s?e=n=[n,u,o,a]:(Wu=e,e=s),e===s&&(e=null),e!==s&&(n=So())!==s&&(u=vi())!==s?((o=function(){var t;"->>"===r.substr(Wu,3)?(t="->>",Wu+=3):(t=s,0===Zu&&ts(Ou));return t}())===s&&(o=function(){var t;"->"===r.substr(Wu,2)?(t="->",Wu+=2):(t=s,0===Zu&&ts(_u));return t}()),o!==s&&(a=vi())!==s?((i=ko())===s&&(i=Go()),i!==s&&vi()!==s?((c=fs())===s&&(c=null),c!==s?(t=e=function(r,t,e,n,u){const s=r&&r[0]||null;return Bi.add(`select::${s}::${t}`),{type:"column_ref",table:s,column:t,collate:u,arrow:e,property:n}}(e,n,o,i,c)):(Wu=t,t=s)):(Wu=t,t=s)):(Wu=t,t=s)):(Wu=t,t=s),t===s&&(t=Wu,(e=To())!==s&&(n=vi())!==s&&(u=oi())!==s&&(o=vi())!==s&&(a=function(){var r,t;r=Wu,(t=Io())!==s&&(t=t);(r=t)===s&&(r=mo());return r}())!==s?(l=e,f=a,Bi.add(`select::${l}::${f}`),t=e={type:"column_ref",table:l,column:f}):(Wu=t,t=s),t===s&&(t=Wu,(e=So())!==s&&(e=function(r){return Bi.add("select::null::"+r),{type:"column_ref",table:null,column:r}}(e)),t=e)),t}function To(){var r,t;return r=Wu,(t=No())!==s?((nt(t)?s:void 0)!==s?(r=t=t):(Wu=r,r=s)):(Wu=r,r=s),r===s&&(r=Wu,(t=mo())!==s&&(t=t),r=t),r}function mo(){var t;return (t=function(){var t,e,n,u;t=Wu,34===r.charCodeAt(Wu)?(e='"',Wu++):(e=s,0===Zu&&ts(ut));if(e!==s){if(n=[],st.test(r.charAt(Wu))?(u=r.charAt(Wu),Wu++):(u=s,0===Zu&&ts(ot)),u!==s)for(;u!==s;)n.push(u),st.test(r.charAt(Wu))?(u=r.charAt(Wu),Wu++):(u=s,0===Zu&&ts(ot));else n=s;n!==s?(34===r.charCodeAt(Wu)?(u='"',Wu++):(u=s,0===Zu&&ts(ut)),u!==s?(e=at(n),t=e):(Wu=t,t=s)):(Wu=t,t=s);}else Wu=t,t=s;return t}())===s&&(t=function(){var t,e,n,u;t=Wu,39===r.charCodeAt(Wu)?(e="'",Wu++):(e=s,0===Zu&&ts(cr));if(e!==s){if(n=[],it.test(r.charAt(Wu))?(u=r.charAt(Wu),Wu++):(u=s,0===Zu&&ts(ct)),u!==s)for(;u!==s;)n.push(u),it.test(r.charAt(Wu))?(u=r.charAt(Wu),Wu++):(u=s,0===Zu&&ts(ct));else n=s;n!==s?(39===r.charCodeAt(Wu)?(u="'",Wu++):(u=s,0===Zu&&ts(cr)),u!==s?(e=at(n),t=e):(Wu=t,t=s)):(Wu=t,t=s);}else Wu=t,t=s;return t}())===s&&(t=function(){var t,e,n,u;t=Wu,96===r.charCodeAt(Wu)?(e="`",Wu++):(e=s,0===Zu&&ts(lt));if(e!==s){if(n=[],ft.test(r.charAt(Wu))?(u=r.charAt(Wu),Wu++):(u=s,0===Zu&&ts(bt)),u!==s)for(;u!==s;)n.push(u),ft.test(r.charAt(Wu))?(u=r.charAt(Wu),Wu++):(u=s,0===Zu&&ts(bt));else n=s;n!==s?(96===r.charCodeAt(Wu)?(u="`",Wu++):(u=s,0===Zu&&ts(lt)),u!==s?(e=at(n),t=e):(Wu=t,t=s)):(Wu=t,t=s);}else Wu=t,t=s;return t}()),t}function So(){var r,t;return r=Wu,(t=Io())!==s?((nt(t)?s:void 0)!==s?(r=t=t):(Wu=r,r=s)):(Wu=r,r=s),r===s&&(r=mo()),r}function Io(){var r,t,e,n;if(r=Wu,(t=Ro())!==s){for(e=[],n=Oo();n!==s;)e.push(n),n=Oo();e!==s?(r=t=vt(t,e)):(Wu=r,r=s);}else Wu=r,r=s;return r}function No(){var r,t,e,n;if(r=Wu,(t=Ro())!==s){for(e=[],n=_o();n!==s;)e.push(n),n=_o();e!==s?(r=t=vt(t,e)):(Wu=r,r=s);}else Wu=r,r=s;return r}function Ro(){var t;return dt.test(r.charAt(Wu))?(t=r.charAt(Wu),Wu++):(t=s,0===Zu&&ts(Lt)),t}function _o(){var t;return Ct.test(r.charAt(Wu))?(t=r.charAt(Wu),Wu++):(t=s,0===Zu&&ts(pt)),t}function Oo(){var t;return wt.test(r.charAt(Wu))?(t=r.charAt(Wu),Wu++):(t=s,0===Zu&&ts(Et)),t}function go(){var e,n,u;return e=Wu,58===r.charCodeAt(Wu)?(n=":",Wu++):(n=s,0===Zu&&ts(ht)),n!==s&&(u=No())!==s?e=n=[n,u]:(Wu=e,e=s),e!==s&&(e={type:"param",value:e[1]}),e}function xo(){var r,t,e;return r=Wu,ca()!==s&&vi()!==s&&zo()!==s&&vi()!==s&&(t=Va())!==s&&vi()!==s&&ci()!==s&&vi()!==s?((e=no())===s&&(e=null),e!==s&&vi()!==s&&li()!==s?(r={type:"on update",keyword:t,parentheses:!0,expr:e}):(Wu=r,r=s)):(Wu=r,r=s),r===s&&(r=Wu,ca()!==s&&vi()!==s&&zo()!==s&&vi()!==s&&(t=Va())!==s?(r=function(r){return {type:"on update",keyword:r}}(t)):(Wu=r,r=s)),r}function Uo(){var t,e,n;return t=Wu,function(){var t,e,n,u;t=Wu,"over"===r.substr(Wu,4).toLowerCase()?(e=r.substr(Wu,4),Wu+=4):(e=s,0===Zu&&ts(Oe));e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?t=e=[e,n]:(Wu=t,t=s)):(Wu=t,t=s);return t}()!==s&&vi()!==s&&ci()!==s&&vi()!==s&&na()!==s&&vi()!==s&&La()!==s&&vi()!==s&&(e=gs())!==s&&vi()!==s?((n=Ws())===s&&(n=null),n!==s&&vi()!==s&&li()!==s?(t=function(r,t){return {partitionby:r,orderby:t}}(e,n)):(Wu=t,t=s)):(Wu=t,t=s),t===s&&(t=xo()),t}function Mo(){var t,e,n,u,o,a,i,c,l;return t=Wu,"binary"===r.substr(Wu,6).toLowerCase()?(e=r.substr(Wu,6),Wu+=6):(e=s,0===Zu&&ts(Tr)),e===s&&(e=null),e!==s&&vi()!==s&&(n=ko())!==s?(u=Wu,(o=vi())!==s&&(a=fs())!==s?u=o=[o,a]:(Wu=u,u=s),u===s&&(u=null),u!==s?(c=n,l=u,(i=e)&&(c.prefix=i.toLowerCase()),l&&(c.suffix={collate:l[1]}),t=e=c):(Wu=t,t=s)):(Wu=t,t=s),t===s&&(t=Go())===s&&(t=function(){var t,e;t=Wu,(e=function(){var t,e,n,u;t=Wu,"true"===r.substr(Wu,4).toLowerCase()?(e=r.substr(Wu,4),Wu+=4):(e=s,0===Zu&&ts(Qt));e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?t=e=[e,n]:(Wu=t,t=s)):(Wu=t,t=s);return t}())!==s&&(e={type:"bool",value:!0});(t=e)===s&&(t=Wu,(e=function(){var t,e,n,u;t=Wu,"false"===r.substr(Wu,5).toLowerCase()?(e=r.substr(Wu,5),Wu+=5):(e=s,0===Zu&&ts(te));e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?t=e=[e,n]:(Wu=t,t=s)):(Wu=t,t=s);return t}())!==s&&(e={type:"bool",value:!1}),t=e);return t}())===s&&(t=Do())===s&&(t=function(){var t,e,n,u,o,a;t=Wu,(e=Xa())===s&&(e=Ya())===s&&(e=Wa())===s&&(e=Ba());if(e!==s)if(vi()!==s){if(n=Wu,39===r.charCodeAt(Wu)?(u="'",Wu++):(u=s,0===Zu&&ts(cr)),u!==s){for(o=[],a=Fo();a!==s;)o.push(a),a=Fo();o!==s?(39===r.charCodeAt(Wu)?(a="'",Wu++):(a=s,0===Zu&&ts(cr)),a!==s?n=u=[u,o,a]:(Wu=n,n=s)):(Wu=n,n=s);}else Wu=n,n=s;n!==s?(e=mt(e,n),t=e):(Wu=t,t=s);}else Wu=t,t=s;else Wu=t,t=s;if(t===s)if(t=Wu,(e=Xa())===s&&(e=Ya())===s&&(e=Wa())===s&&(e=Ba()),e!==s)if(vi()!==s){if(n=Wu,34===r.charCodeAt(Wu)?(u='"',Wu++):(u=s,0===Zu&&ts(ut)),u!==s){for(o=[],a=$o();a!==s;)o.push(a),a=$o();o!==s?(34===r.charCodeAt(Wu)?(a='"',Wu++):(a=s,0===Zu&&ts(ut)),a!==s?n=u=[u,o,a]:(Wu=n,n=s)):(Wu=n,n=s);}else Wu=n,n=s;n!==s?(e=mt(e,n),t=e):(Wu=t,t=s);}else Wu=t,t=s;else Wu=t,t=s;return t}()),t}function Do(){var e;return (e=function(){var t,e,n,u;t=Wu,"null"===r.substr(Wu,4).toLowerCase()?(e=r.substr(Wu,4),Wu+=4):(e=s,0===Zu&&ts(zt));e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?t=e=[e,n]:(Wu=t,t=s)):(Wu=t,t=s);return t}())!==s&&(e={type:"null",value:null}),e}function ko(){var t,e,n,u,o,a;if(t=Wu,"x"===r.substr(Wu,1).toLowerCase()?(e=r.charAt(Wu),Wu++):(e=s,0===Zu&&ts(Tt)),e===s&&(e=null),e!==s){if(n=Wu,39===r.charCodeAt(Wu)?(u="'",Wu++):(u=s,0===Zu&&ts(cr)),u!==s){for(o=[],a=Fo();a!==s;)o.push(a),a=Fo();o!==s?(39===r.charCodeAt(Wu)?(a="'",Wu++):(a=s,0===Zu&&ts(cr)),a!==s?n=u=[u,o,a]:(Wu=n,n=s)):(Wu=n,n=s);}else Wu=n,n=s;n!==s?(t=e={type:e?"hex_string":"single_quote_string",value:n[1].join("")}):(Wu=t,t=s);}else Wu=t,t=s;if(t===s)if(t=Wu,"x"===r.substr(Wu,1).toLowerCase()?(e=r.charAt(Wu),Wu++):(e=s,0===Zu&&ts(Tt)),e===s&&(e=null),e!==s){if(n=Wu,34===r.charCodeAt(Wu)?(u='"',Wu++):(u=s,0===Zu&&ts(ut)),u!==s){for(o=[],a=$o();a!==s;)o.push(a),a=$o();o!==s?(34===r.charCodeAt(Wu)?(a='"',Wu++):(a=s,0===Zu&&ts(ut)),a!==s?n=u=[u,o,a]:(Wu=n,n=s)):(Wu=n,n=s);}else Wu=n,n=s;n!==s?(t=e=function(r,t){return {type:r?"hex_string":"string",value:t[1].join("")}}(e,n)):(Wu=t,t=s);}else Wu=t,t=s;return t}function $o(){var t;return St.test(r.charAt(Wu))?(t=r.charAt(Wu),Wu++):(t=s,0===Zu&&ts(It)),t===s&&(t=Po()),t}function Fo(){var t;return Nt.test(r.charAt(Wu))?(t=r.charAt(Wu),Wu++):(t=s,0===Zu&&ts(Rt)),t===s&&(t=Po()),t}function Po(){var t,e,n,u,o,a,i,c,l,f;return t=Wu,"\\'"===r.substr(Wu,2)?(e="\\'",Wu+=2):(e=s,0===Zu&&ts(_t)),e!==s&&(e="'"),(t=e)===s&&(t=Wu,'\\"'===r.substr(Wu,2)?(e='\\"',Wu+=2):(e=s,0===Zu&&ts(Ot)),e!==s&&(e='"'),(t=e)===s&&(t=Wu,"\\\\"===r.substr(Wu,2)?(e="\\\\",Wu+=2):(e=s,0===Zu&&ts(gt)),e!==s&&(e="\\"),(t=e)===s&&(t=Wu,"\\/"===r.substr(Wu,2)?(e="\\/",Wu+=2):(e=s,0===Zu&&ts(xt)),e!==s&&(e="/"),(t=e)===s&&(t=Wu,"\\b"===r.substr(Wu,2)?(e="\\b",Wu+=2):(e=s,0===Zu&&ts(Ut)),e!==s&&(e="\b"),(t=e)===s&&(t=Wu,"\\f"===r.substr(Wu,2)?(e="\\f",Wu+=2):(e=s,0===Zu&&ts(Mt)),e!==s&&(e="\f"),(t=e)===s&&(t=Wu,"\\n"===r.substr(Wu,2)?(e="\\n",Wu+=2):(e=s,0===Zu&&ts(Dt)),e!==s&&(e="\n"),(t=e)===s&&(t=Wu,"\\r"===r.substr(Wu,2)?(e="\\r",Wu+=2):(e=s,0===Zu&&ts(kt)),e!==s&&(e="\r"),(t=e)===s&&(t=Wu,"\\t"===r.substr(Wu,2)?(e="\\t",Wu+=2):(e=s,0===Zu&&ts($t)),e!==s&&(e="\t"),(t=e)===s&&(t=Wu,"\\u"===r.substr(Wu,2)?(e="\\u",Wu+=2):(e=s,0===Zu&&ts(Ft)),e!==s&&(n=Wo())!==s&&(u=Wo())!==s&&(o=Wo())!==s&&(a=Wo())!==s?(i=n,c=u,l=o,f=a,t=e=String.fromCharCode(parseInt("0x"+i+c+l+f))):(Wu=t,t=s),t===s&&(t=Wu,92===r.charCodeAt(Wu)?(e="\\",Wu++):(e=s,0===Zu&&ts(Pt)),e!==s&&(e="\\"),t=e)))))))))),t}function Go(){var t,e;return (t=function(){var r,t,e,n;r=Wu,(t=Ho())!==s&&(e=jo())!==s&&(n=Yo())!==s?(r=t={type:"bigint",value:t+e+n}):(Wu=r,r=s);r===s&&(r=Wu,(t=Ho())!==s&&(e=jo())!==s?(t=function(r,t){const e=r+t;return $i(r)?{type:"bigint",value:e}:parseFloat(e)}(t,e),r=t):(Wu=r,r=s),r===s&&(r=Wu,(t=Ho())!==s&&(e=Yo())!==s?(t=function(r,t){return {type:"bigint",value:r+t}}(t,e),r=t):(Wu=r,r=s),r===s&&(r=Wu,(t=Ho())!==s&&(t=function(r){return $i(r)?{type:"bigint",value:r}:parseFloat(r)}(t)),r=t)));return r}())!==s&&(t=(e=t)&&"bigint"===e.type?e:{type:"number",value:e}),t}function Ho(){var t,e,n;return (t=Bo())===s&&(t=Xo())===s&&(t=Wu,45===r.charCodeAt(Wu)?(e="-",Wu++):(e=s,0===Zu&&ts(zr)),e===s&&(43===r.charCodeAt(Wu)?(e="+",Wu++):(e=s,0===Zu&&ts(Zr))),e!==s&&(n=Bo())!==s?(t=e="-"+n):(Wu=t,t=s),t===s&&(t=Wu,45===r.charCodeAt(Wu)?(e="-",Wu++):(e=s,0===Zu&&ts(zr)),e===s&&(43===r.charCodeAt(Wu)?(e="+",Wu++):(e=s,0===Zu&&ts(Zr))),e!==s&&(n=Xo())!==s?(t=e="-"+n):(Wu=t,t=s))),t}function jo(){var t,e,n;return t=Wu,46===r.charCodeAt(Wu)?(e=".",Wu++):(e=s,0===Zu&&ts(jt)),e!==s&&(n=Bo())!==s?(t=e="."+n):(Wu=t,t=s),t}function Yo(){var t,e,n;return t=Wu,(e=function(){var t,e,n;t=Wu,Vt.test(r.charAt(Wu))?(e=r.charAt(Wu),Wu++):(e=s,0===Zu&&ts(Kt));e!==s?(qt.test(r.charAt(Wu))?(n=r.charAt(Wu),Wu++):(n=s,0===Zu&&ts(Zt)),n===s&&(n=null),n!==s?(t=e=e+(null!==(u=n)?u:"")):(Wu=t,t=s)):(Wu=t,t=s);var u;return t}())!==s&&(n=Bo())!==s?(t=e=e+n):(Wu=t,t=s),t}function Bo(){var t,e;if(t=[],(e=Xo())!==s)for(;e!==s;)t.push(e),e=Xo();else t=s;return t!==s&&(t=t.join("")),t}function Xo(){var t;return Yt.test(r.charAt(Wu))?(t=r.charAt(Wu),Wu++):(t=s,0===Zu&&ts(Bt)),t}function Wo(){var t;return Xt.test(r.charAt(Wu))?(t=r.charAt(Wu),Wu++):(t=s,0===Zu&&ts(Wt)),t}function Vo(){var t,e,n,u;return t=Wu,"default"===r.substr(Wu,7).toLowerCase()?(e=r.substr(Wu,7),Wu+=7):(e=s,0===Zu&&ts(w)),e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?t=e=[e,n]:(Wu=t,t=s)):(Wu=t,t=s),t}function Ko(){var t,e,n,u;return t=Wu,"to"===r.substr(Wu,2).toLowerCase()?(e=r.substr(Wu,2),Wu+=2):(e=s,0===Zu&&ts(re)),e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?t=e=[e,n]:(Wu=t,t=s)):(Wu=t,t=s),t}function qo(){var t,e,n,u;return t=Wu,"show"===r.substr(Wu,4).toLowerCase()?(e=r.substr(Wu,4),Wu+=4):(e=s,0===Zu&&ts(ee)),e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?t=e=[e,n]:(Wu=t,t=s)):(Wu=t,t=s),t}function Zo(){var t,e,n,u;return t=Wu,"drop"===r.substr(Wu,4).toLowerCase()?(e=r.substr(Wu,4),Wu+=4):(e=s,0===Zu&&ts(ne)),e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="DROP"):(Wu=t,t=s)):(Wu=t,t=s),t}function zo(){var t,e,n,u;return t=Wu,"update"===r.substr(Wu,6).toLowerCase()?(e=r.substr(Wu,6),Wu+=6):(e=s,0===Zu&&ts(W)),e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?t=e=[e,n]:(Wu=t,t=s)):(Wu=t,t=s),t}function Jo(){var t,e,n,u;return t=Wu,"create"===r.substr(Wu,6).toLowerCase()?(e=r.substr(Wu,6),Wu+=6):(e=s,0===Zu&&ts(ae)),e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?t=e=[e,n]:(Wu=t,t=s)):(Wu=t,t=s),t}function Qo(){var t,e,n,u;return t=Wu,"temporary"===r.substr(Wu,9).toLowerCase()?(e=r.substr(Wu,9),Wu+=9):(e=s,0===Zu&&ts(ie)),e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?t=e=[e,n]:(Wu=t,t=s)):(Wu=t,t=s),t}function ra(){var t,e,n,u;return t=Wu,"if not exists"===r.substr(Wu,13).toLowerCase()?(e=r.substr(Wu,13),Wu+=13):(e=s,0===Zu&&ts(ce)),e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?t=e=[e,n]:(Wu=t,t=s)):(Wu=t,t=s),t}function ta(){var t,e,n,u;return t=Wu,"replace"===r.substr(Wu,7).toLowerCase()?(e=r.substr(Wu,7),Wu+=7):(e=s,0===Zu&&ts(be)),e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?t=e=[e,n]:(Wu=t,t=s)):(Wu=t,t=s),t}function ea(){var t,e,n,u;return t=Wu,"rename"===r.substr(Wu,6).toLowerCase()?(e=r.substr(Wu,6),Wu+=6):(e=s,0===Zu&&ts(ve)),e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?t=e=[e,n]:(Wu=t,t=s)):(Wu=t,t=s),t}function na(){var t,e,n,u;return t=Wu,"partition"===r.substr(Wu,9).toLowerCase()?(e=r.substr(Wu,9),Wu+=9):(e=s,0===Zu&&ts(Le)),e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="PARTITION"):(Wu=t,t=s)):(Wu=t,t=s),t}function ua(){var t,e,n,u;return t=Wu,"into"===r.substr(Wu,4).toLowerCase()?(e=r.substr(Wu,4),Wu+=4):(e=s,0===Zu&&ts(Ce)),e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?t=e=[e,n]:(Wu=t,t=s)):(Wu=t,t=s),t}function sa(){var t,e,n,u;return t=Wu,"set"===r.substr(Wu,3).toLowerCase()?(e=r.substr(Wu,3),Wu+=3):(e=s,0===Zu&&ts(Q)),e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?t=e=[e,n]:(Wu=t,t=s)):(Wu=t,t=s),t}function oa(){var t,e,n,u;return t=Wu,"as"===r.substr(Wu,2).toLowerCase()?(e=r.substr(Wu,2),Wu+=2):(e=s,0===Zu&&ts(Ee)),e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?t=e=[e,n]:(Wu=t,t=s)):(Wu=t,t=s),t}function aa(){var t,e,n,u;return t=Wu,"table"===r.substr(Wu,5).toLowerCase()?(e=r.substr(Wu,5),Wu+=5):(e=s,0===Zu&&ts(he)),e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="TABLE"):(Wu=t,t=s)):(Wu=t,t=s),t}function ia(){var t,e,n,u;return t=Wu,"tables"===r.substr(Wu,6).toLowerCase()?(e=r.substr(Wu,6),Wu+=6):(e=s,0===Zu&&ts(Ae)),e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="TABLES"):(Wu=t,t=s)):(Wu=t,t=s),t}function ca(){var t,e,n,u;return t=Wu,"on"===r.substr(Wu,2).toLowerCase()?(e=r.substr(Wu,2),Wu+=2):(e=s,0===Zu&&ts(B)),e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?t=e=[e,n]:(Wu=t,t=s)):(Wu=t,t=s),t}function la(){var t,e,n,u;return t=Wu,"join"===r.substr(Wu,4).toLowerCase()?(e=r.substr(Wu,4),Wu+=4):(e=s,0===Zu&&ts(Re)),e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?t=e=[e,n]:(Wu=t,t=s)):(Wu=t,t=s),t}function fa(){var t,e,n,u;return t=Wu,"outer"===r.substr(Wu,5).toLowerCase()?(e=r.substr(Wu,5),Wu+=5):(e=s,0===Zu&&ts(_e)),e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?t=e=[e,n]:(Wu=t,t=s)):(Wu=t,t=s),t}function ba(){var t,e,n,u;return t=Wu,"union"===r.substr(Wu,5).toLowerCase()?(e=r.substr(Wu,5),Wu+=5):(e=s,0===Zu&&ts(ge)),e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?t=e=[e,n]:(Wu=t,t=s)):(Wu=t,t=s),t}function va(){var t,e,n,u;return t=Wu,"using"===r.substr(Wu,5).toLowerCase()?(e=r.substr(Wu,5),Wu+=5):(e=s,0===Zu&&ts(Ue)),e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?t=e=[e,n]:(Wu=t,t=s)):(Wu=t,t=s),t}function da(){var t,e,n,u;return t=Wu,"with"===r.substr(Wu,4).toLowerCase()?(e=r.substr(Wu,4),Wu+=4):(e=s,0===Zu&&ts(Mr)),e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?t=e=[e,n]:(Wu=t,t=s)):(Wu=t,t=s),t}function La(){var t,e,n,u;return t=Wu,"by"===r.substr(Wu,2).toLowerCase()?(e=r.substr(Wu,2),Wu+=2):(e=s,0===Zu&&ts(ke)),e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?t=e=[e,n]:(Wu=t,t=s)):(Wu=t,t=s),t}function Ca(){var t,e,n,u;return t=Wu,"asc"===r.substr(Wu,3).toLowerCase()?(e=r.substr(Wu,3),Wu+=3):(e=s,0===Zu&&ts(He)),e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="ASC"):(Wu=t,t=s)):(Wu=t,t=s),t}function pa(){var t,e,n,u;return t=Wu,"desc"===r.substr(Wu,4).toLowerCase()?(e=r.substr(Wu,4),Wu+=4):(e=s,0===Zu&&ts(je)),e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="DESC"):(Wu=t,t=s)):(Wu=t,t=s),t}function wa(){var t,e,n,u;return t=Wu,"all"===r.substr(Wu,3).toLowerCase()?(e=r.substr(Wu,3),Wu+=3):(e=s,0===Zu&&ts(Be)),e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="ALL"):(Wu=t,t=s)):(Wu=t,t=s),t}function Ea(){var t,e,n,u;return t=Wu,"distinct"===r.substr(Wu,8).toLowerCase()?(e=r.substr(Wu,8),Wu+=8):(e=s,0===Zu&&ts(Xe)),e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="DISTINCT"):(Wu=t,t=s)):(Wu=t,t=s),t}function ha(){var t,e,n,u;return t=Wu,"between"===r.substr(Wu,7).toLowerCase()?(e=r.substr(Wu,7),Wu+=7):(e=s,0===Zu&&ts(We)),e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="BETWEEN"):(Wu=t,t=s)):(Wu=t,t=s),t}function Aa(){var t,e,n,u;return t=Wu,"in"===r.substr(Wu,2).toLowerCase()?(e=r.substr(Wu,2),Wu+=2):(e=s,0===Zu&&ts(Ve)),e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="IN"):(Wu=t,t=s)):(Wu=t,t=s),t}function ya(){var t,e,n,u;return t=Wu,"is"===r.substr(Wu,2).toLowerCase()?(e=r.substr(Wu,2),Wu+=2):(e=s,0===Zu&&ts(Ke)),e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="IS"):(Wu=t,t=s)):(Wu=t,t=s),t}function Ta(){var t,e,n,u;return t=Wu,"like"===r.substr(Wu,4).toLowerCase()?(e=r.substr(Wu,4),Wu+=4):(e=s,0===Zu&&ts(qe)),e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="LIKE"):(Wu=t,t=s)):(Wu=t,t=s),t}function ma(){var t,e,n,u;return t=Wu,"exists"===r.substr(Wu,6).toLowerCase()?(e=r.substr(Wu,6),Wu+=6):(e=s,0===Zu&&ts(Je)),e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="EXISTS"):(Wu=t,t=s)):(Wu=t,t=s),t}function Sa(){var t,e,n,u;return t=Wu,"not"===r.substr(Wu,3).toLowerCase()?(e=r.substr(Wu,3),Wu+=3):(e=s,0===Zu&&ts(k)),e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="NOT"):(Wu=t,t=s)):(Wu=t,t=s),t}function Ia(){var t,e,n,u;return t=Wu,"and"===r.substr(Wu,3).toLowerCase()?(e=r.substr(Wu,3),Wu+=3):(e=s,0===Zu&&ts(Qe)),e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="AND"):(Wu=t,t=s)):(Wu=t,t=s),t}function Na(){var t,e,n,u;return t=Wu,"or"===r.substr(Wu,2).toLowerCase()?(e=r.substr(Wu,2),Wu+=2):(e=s,0===Zu&&ts(rn)),e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="OR"):(Wu=t,t=s)):(Wu=t,t=s),t}function Ra(){var t,e,n,u;return t=Wu,"case"===r.substr(Wu,4).toLowerCase()?(e=r.substr(Wu,4),Wu+=4):(e=s,0===Zu&&ts(cn)),e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?t=e=[e,n]:(Wu=t,t=s)):(Wu=t,t=s),t}function _a(){var t,e,n,u;return t=Wu,"end"===r.substr(Wu,3).toLowerCase()?(e=r.substr(Wu,3),Wu+=3):(e=s,0===Zu&&ts(vn)),e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?t=e=[e,n]:(Wu=t,t=s)):(Wu=t,t=s),t}function Oa(){var t,e,n,u;return t=Wu,"cast"===r.substr(Wu,4).toLowerCase()?(e=r.substr(Wu,4),Wu+=4):(e=s,0===Zu&&ts(dn)),e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?t=e=[e,n]:(Wu=t,t=s)):(Wu=t,t=s),t}function ga(){var t,e,n,u;return t=Wu,"char"===r.substr(Wu,4).toLowerCase()?(e=r.substr(Wu,4),Wu+=4):(e=s,0===Zu&&ts(Cn)),e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="CHAR"):(Wu=t,t=s)):(Wu=t,t=s),t}function xa(){var t,e,n,u;return t=Wu,"varchar"===r.substr(Wu,7).toLowerCase()?(e=r.substr(Wu,7),Wu+=7):(e=s,0===Zu&&ts(pn)),e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="VARCHAR"):(Wu=t,t=s)):(Wu=t,t=s),t}function Ua(){var t,e,n,u;return t=Wu,"numeric"===r.substr(Wu,7).toLowerCase()?(e=r.substr(Wu,7),Wu+=7):(e=s,0===Zu&&ts(wn)),e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="NUMERIC"):(Wu=t,t=s)):(Wu=t,t=s),t}function Ma(){var t,e,n,u;return t=Wu,"decimal"===r.substr(Wu,7).toLowerCase()?(e=r.substr(Wu,7),Wu+=7):(e=s,0===Zu&&ts(En)),e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="DECIMAL"):(Wu=t,t=s)):(Wu=t,t=s),t}function Da(){var t,e,n,u;return t=Wu,"unsigned"===r.substr(Wu,8).toLowerCase()?(e=r.substr(Wu,8),Wu+=8):(e=s,0===Zu&&ts(An)),e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="UNSIGNED"):(Wu=t,t=s)):(Wu=t,t=s),t}function ka(){var t,e,n,u;return t=Wu,"int"===r.substr(Wu,3).toLowerCase()?(e=r.substr(Wu,3),Wu+=3):(e=s,0===Zu&&ts(yn)),e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="INT"):(Wu=t,t=s)):(Wu=t,t=s),t}function $a(){var t,e,n,u;return t=Wu,"integer"===r.substr(Wu,7).toLowerCase()?(e=r.substr(Wu,7),Wu+=7):(e=s,0===Zu&&ts(mn)),e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="INTEGER"):(Wu=t,t=s)):(Wu=t,t=s),t}function Fa(){var t,e,n,u;return t=Wu,"smallint"===r.substr(Wu,8).toLowerCase()?(e=r.substr(Wu,8),Wu+=8):(e=s,0===Zu&&ts(In)),e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="SMALLINT"):(Wu=t,t=s)):(Wu=t,t=s),t}function Pa(){var t,e,n,u;return t=Wu,"tinyint"===r.substr(Wu,7).toLowerCase()?(e=r.substr(Wu,7),Wu+=7):(e=s,0===Zu&&ts(Nn)),e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="TINYINT"):(Wu=t,t=s)):(Wu=t,t=s),t}function Ga(){var t,e,n,u;return t=Wu,"bigint"===r.substr(Wu,6).toLowerCase()?(e=r.substr(Wu,6),Wu+=6):(e=s,0===Zu&&ts(xn)),e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="BIGINT"):(Wu=t,t=s)):(Wu=t,t=s),t}function Ha(){var t,e,n,u;return t=Wu,"float"===r.substr(Wu,5).toLowerCase()?(e=r.substr(Wu,5),Wu+=5):(e=s,0===Zu&&ts(Mn)),e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="FLOAT"):(Wu=t,t=s)):(Wu=t,t=s),t}function ja(){var t,e,n,u;return t=Wu,"double"===r.substr(Wu,6).toLowerCase()?(e=r.substr(Wu,6),Wu+=6):(e=s,0===Zu&&ts(Dn)),e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="DOUBLE"):(Wu=t,t=s)):(Wu=t,t=s),t}function Ya(){var t,e,n,u;return t=Wu,"date"===r.substr(Wu,4).toLowerCase()?(e=r.substr(Wu,4),Wu+=4):(e=s,0===Zu&&ts(kn)),e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="DATE"):(Wu=t,t=s)):(Wu=t,t=s),t}function Ba(){var t,e,n,u;return t=Wu,"datetime"===r.substr(Wu,8).toLowerCase()?(e=r.substr(Wu,8),Wu+=8):(e=s,0===Zu&&ts($n)),e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="DATETIME"):(Wu=t,t=s)):(Wu=t,t=s),t}function Xa(){var t,e,n,u;return t=Wu,"time"===r.substr(Wu,4).toLowerCase()?(e=r.substr(Wu,4),Wu+=4):(e=s,0===Zu&&ts(Fn)),e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="TIME"):(Wu=t,t=s)):(Wu=t,t=s),t}function Wa(){var t,e,n,u;return t=Wu,"timestamp"===r.substr(Wu,9).toLowerCase()?(e=r.substr(Wu,9),Wu+=9):(e=s,0===Zu&&ts(Pn)),e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="TIMESTAMP"):(Wu=t,t=s)):(Wu=t,t=s),t}function Va(){var t,e,n,u;return t=Wu,"current_timestamp"===r.substr(Wu,17).toLowerCase()?(e=r.substr(Wu,17),Wu+=17):(e=s,0===Zu&&ts(zn)),e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="CURRENT_TIMESTAMP"):(Wu=t,t=s)):(Wu=t,t=s),t}function Ka(){var t;return 64===r.charCodeAt(Wu)?(t="@",Wu++):(t=s,0===Zu&&ts(su)),t}function qa(){var t;return (t=function(){var t;return "@@"===r.substr(Wu,2)?(t="@@",Wu+=2):(t=s,0===Zu&&ts(ou)),t}())===s&&(t=Ka())===s&&(t=function(){var t;return 36===r.charCodeAt(Wu)?(t="$",Wu++):(t=s,0===Zu&&ts(au)),t}()),t}function Za(){var t;return 61===r.charCodeAt(Wu)?(t="=",Wu++):(t=s,0===Zu&&ts(Pr)),t}function za(){var t,e,n,u;return t=Wu,"add"===r.substr(Wu,3).toLowerCase()?(e=r.substr(Wu,3),Wu+=3):(e=s,0===Zu&&ts(fu)),e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="ADD"):(Wu=t,t=s)):(Wu=t,t=s),t}function Ja(){var t,e,n,u;return t=Wu,"column"===r.substr(Wu,6).toLowerCase()?(e=r.substr(Wu,6),Wu+=6):(e=s,0===Zu&&ts(bu)),e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="COLUMN"):(Wu=t,t=s)):(Wu=t,t=s),t}function Qa(){var t,e,n,u;return t=Wu,"index"===r.substr(Wu,5).toLowerCase()?(e=r.substr(Wu,5),Wu+=5):(e=s,0===Zu&&ts(vu)),e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="INDEX"):(Wu=t,t=s)):(Wu=t,t=s),t}function ri(){var t,e,n,u;return t=Wu,"key"===r.substr(Wu,3).toLowerCase()?(e=r.substr(Wu,3),Wu+=3):(e=s,0===Zu&&ts(v)),e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="KEY"):(Wu=t,t=s)):(Wu=t,t=s),t}function ti(){var t,e,n,u;return t=Wu,"fulltext"===r.substr(Wu,8).toLowerCase()?(e=r.substr(Wu,8),Wu+=8):(e=s,0===Zu&&ts(du)),e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="FULLTEXT"):(Wu=t,t=s)):(Wu=t,t=s),t}function ei(){var t,e,n,u;return t=Wu,"spatial"===r.substr(Wu,7).toLowerCase()?(e=r.substr(Wu,7),Wu+=7):(e=s,0===Zu&&ts(Lu)),e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="SPATIAL"):(Wu=t,t=s)):(Wu=t,t=s),t}function ni(){var t,e,n,u;return t=Wu,"unique"===r.substr(Wu,6).toLowerCase()?(e=r.substr(Wu,6),Wu+=6):(e=s,0===Zu&&ts(b)),e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="UNIQUE"):(Wu=t,t=s)):(Wu=t,t=s),t}function ui(){var t,e,n,u;return t=Wu,"comment"===r.substr(Wu,7).toLowerCase()?(e=r.substr(Wu,7),Wu+=7):(e=s,0===Zu&&ts(Cu)),e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="COMMENT"):(Wu=t,t=s)):(Wu=t,t=s),t}function si(){var t,e,n,u;return t=Wu,"constraint"===r.substr(Wu,10).toLowerCase()?(e=r.substr(Wu,10),Wu+=10):(e=s,0===Zu&&ts(pu)),e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="CONSTRAINT"):(Wu=t,t=s)):(Wu=t,t=s),t}function oi(){var t;return 46===r.charCodeAt(Wu)?(t=".",Wu++):(t=s,0===Zu&&ts(jt)),t}function ai(){var t;return 44===r.charCodeAt(Wu)?(t=",",Wu++):(t=s,0===Zu&&ts(Su)),t}function ii(){var t;return 42===r.charCodeAt(Wu)?(t="*",Wu++):(t=s,0===Zu&&ts(Jr)),t}function ci(){var t;return 40===r.charCodeAt(Wu)?(t="(",Wu++):(t=s,0===Zu&&ts(Or)),t}function li(){var t;return 41===r.charCodeAt(Wu)?(t=")",Wu++):(t=s,0===Zu&&ts(gr)),t}function fi(){var t;return 59===r.charCodeAt(Wu)?(t=";",Wu++):(t=s,0===Zu&&ts(Ru)),t}function bi(){var t;return (t=function(){var t;return "||"===r.substr(Wu,2)?(t="||",Wu+=2):(t=s,0===Zu&&ts(gu)),t}())===s&&(t=function(){var t;return "&&"===r.substr(Wu,2)?(t="&&",Wu+=2):(t=s,0===Zu&&ts(xu)),t}()),t}function vi(){var r,t;for(r=[],(t=wi())===s&&(t=Li());t!==s;)r.push(t),(t=wi())===s&&(t=Li());return r}function di(){var r,t;if(r=[],(t=wi())===s&&(t=Li()),t!==s)for(;t!==s;)r.push(t),(t=wi())===s&&(t=Li());else r=s;return r}function Li(){var t;return (t=function(){var t,e,n,u,o,a;t=Wu,"/*"===r.substr(Wu,2)?(e="/*",Wu+=2):(e=s,0===Zu&&ts(Uu));if(e!==s){for(n=[],u=Wu,o=Wu,Zu++,"*/"===r.substr(Wu,2)?(a="*/",Wu+=2):(a=s,0===Zu&&ts(Mu)),Zu--,a===s?o=void 0:(Wu=o,o=s),o!==s&&(a=pi())!==s?u=o=[o,a]:(Wu=u,u=s);u!==s;)n.push(u),u=Wu,o=Wu,Zu++,"*/"===r.substr(Wu,2)?(a="*/",Wu+=2):(a=s,0===Zu&&ts(Mu)),Zu--,a===s?o=void 0:(Wu=o,o=s),o!==s&&(a=pi())!==s?u=o=[o,a]:(Wu=u,u=s);n!==s?("*/"===r.substr(Wu,2)?(u="*/",Wu+=2):(u=s,0===Zu&&ts(Mu)),u!==s?t=e=[e,n,u]:(Wu=t,t=s)):(Wu=t,t=s);}else Wu=t,t=s;return t}())===s&&(t=function(){var t,e,n,u,o,a;t=Wu,"--"===r.substr(Wu,2)?(e="--",Wu+=2):(e=s,0===Zu&&ts(Du));if(e!==s){for(n=[],u=Wu,o=Wu,Zu++,a=Ei(),Zu--,a===s?o=void 0:(Wu=o,o=s),o!==s&&(a=pi())!==s?u=o=[o,a]:(Wu=u,u=s);u!==s;)n.push(u),u=Wu,o=Wu,Zu++,a=Ei(),Zu--,a===s?o=void 0:(Wu=o,o=s),o!==s&&(a=pi())!==s?u=o=[o,a]:(Wu=u,u=s);n!==s?t=e=[e,n]:(Wu=t,t=s);}else Wu=t,t=s;return t}())===s&&(t=function(){var t,e,n,u,o,a;t=Wu,35===r.charCodeAt(Wu)?(e="#",Wu++):(e=s,0===Zu&&ts(ku));if(e!==s){for(n=[],u=Wu,o=Wu,Zu++,a=Ei(),Zu--,a===s?o=void 0:(Wu=o,o=s),o!==s&&(a=pi())!==s?u=o=[o,a]:(Wu=u,u=s);u!==s;)n.push(u),u=Wu,o=Wu,Zu++,a=Ei(),Zu--,a===s?o=void 0:(Wu=o,o=s),o!==s&&(a=pi())!==s?u=o=[o,a]:(Wu=u,u=s);n!==s?t=e=[e,n]:(Wu=t,t=s);}else Wu=t,t=s;return t}()),t}function Ci(){var r,t,e,n,u,o,a;return r=Wu,(t=ui())!==s&&vi()!==s?((e=Za())===s&&(e=null),e!==s&&vi()!==s&&(n=ko())!==s?(o=e,a=n,r=t={type:(u=t).toLowerCase(),keyword:u.toLowerCase(),symbol:o,value:a}):(Wu=r,r=s)):(Wu=r,r=s),r}function pi(){var t;return r.length>Wu?(t=r.charAt(Wu),Wu++):(t=s,0===Zu&&ts($u)),t}function wi(){var t;return Fu.test(r.charAt(Wu))?(t=r.charAt(Wu),Wu++):(t=s,0===Zu&&ts(Pu)),t}function Ei(){var t,e;if((t=function(){var t,e;t=Wu,Zu++,r.length>Wu?(e=r.charAt(Wu),Wu++):(e=s,0===Zu&&ts($u));Zu--,e===s?t=void 0:(Wu=t,t=s);return t}())===s)if(t=[],Gt.test(r.charAt(Wu))?(e=r.charAt(Wu),Wu++):(e=s,0===Zu&&ts(Ht)),e!==s)for(;e!==s;)t.push(e),Gt.test(r.charAt(Wu))?(e=r.charAt(Wu),Wu++):(e=s,0===Zu&&ts(Ht));else t=s;return t}function hi(){var t,e;return t=Wu,ji=[],(void 0)!==s&&vi()!==s?((e=Ai())===s&&(e=function(){var t,e;t=Wu,function(){var t;return "return"===r.substr(Wu,6).toLowerCase()?(t=r.substr(Wu,6),Wu+=6):(t=s,0===Zu&&ts(iu)),t}()!==s&&vi()!==s&&(e=yi())!==s?(t={type:"return",expr:e}):(Wu=t,t=s);return t}()),e!==s?(t={stmt:e,vars:ji}):(Wu=t,t=s)):(Wu=t,t=s),t}function Ai(){var t,e,n,u;return t=Wu,(e=_i())===s&&(e=Oi()),e!==s&&vi()!==s?((n=function(){var t;return ":="===r.substr(Wu,2)?(t=":=",Wu+=2):(t=s,0===Zu&&ts(cu)),t}())===s&&(n=Za()),n!==s&&vi()!==s&&(u=yi())!==s?(t=e={type:"assign",left:e,symbol:n,right:u}):(Wu=t,t=s)):(Wu=t,t=s),t}function yi(){var t;return (t=Ss())===s&&(t=function(){var r,t,e,n,u;r=Wu,(t=_i())!==s&&vi()!==s&&(e=js())!==s&&vi()!==s&&(n=_i())!==s&&vi()!==s&&(u=Bs())!==s?(r=t={type:"join",ltable:t,rtable:n,op:e,on:u}):(Wu=r,r=s);return r}())===s&&(t=Ti())===s&&(t=function(){var t,e;t=Wu,function(){var t;return 91===r.charCodeAt(Wu)?(t="[",Wu++):(t=s,0===Zu&&ts(Iu)),t}()!==s&&vi()!==s&&(e=Ri())!==s&&vi()!==s&&function(){var t;return 93===r.charCodeAt(Wu)?(t="]",Wu++):(t=s,0===Zu&&ts(Nu)),t}()!==s?(t={type:"array",value:e}):(Wu=t,t=s);return t}()),t}function Ti(){var r,t,e,n,u,o,a,i;if(r=Wu,(t=mi())!==s){for(e=[],n=Wu,(u=vi())!==s&&(o=wo())!==s&&(a=vi())!==s&&(i=mi())!==s?n=u=[u,o,a,i]:(Wu=n,n=s);n!==s;)e.push(n),n=Wu,(u=vi())!==s&&(o=wo())!==s&&(a=vi())!==s&&(i=mi())!==s?n=u=[u,o,a,i]:(Wu=n,n=s);e!==s?(r=t=Hr(t,e)):(Wu=r,r=s);}else Wu=r,r=s;return r}function mi(){var r,t,e,n,u,o,a,i;if(r=Wu,(t=Si())!==s){for(e=[],n=Wu,(u=vi())!==s&&(o=ho())!==s&&(a=vi())!==s&&(i=Si())!==s?n=u=[u,o,a,i]:(Wu=n,n=s);n!==s;)e.push(n),n=Wu,(u=vi())!==s&&(o=ho())!==s&&(a=vi())!==s&&(i=Si())!==s?n=u=[u,o,a,i]:(Wu=n,n=s);e!==s?(r=t=Hr(t,e)):(Wu=r,r=s);}else Wu=r,r=s;return r}function Si(){var r,t,e;return (r=Mo())===s&&(r=_i())===s&&(r=Ni())===s&&(r=go())===s&&(r=Wu,ci()!==s&&vi()!==s&&(t=Ti())!==s&&vi()!==s&&li()!==s?((e=t).parentheses=!0,r=e):(Wu=r,r=s)),r}function Ii(){var r,t,e,n,u,o,a;return r=Wu,(t=To())!==s?(e=Wu,(n=vi())!==s&&(u=oi())!==s&&(o=vi())!==s&&(a=To())!==s?e=n=[n,u,o,a]:(Wu=e,e=s),e===s&&(e=null),e!==s?(r=t=function(r,t){let e=r;return null!==t&&(e=`${r}.${t[3]}`),e}(t,e)):(Wu=r,r=s)):(Wu=r,r=s),r===s&&(r=Wu,(t=No())!==s&&(t=function(r){const t=r.toUpperCase();return !0===Mi[t]?t:r}(t)),(r=t)===s&&(r=mo())),r}function Ni(){var r,t,e;return r=Wu,(t=Ii())!==s&&vi()!==s&&ci()!==s&&vi()!==s?((e=Ri())===s&&(e=null),e!==s&&vi()!==s&&li()!==s?(r=t={type:"function",name:t,args:{type:"expr_list",value:e}}):(Wu=r,r=s)):(Wu=r,r=s),r===s&&(r=Wu,(t=Ii())!==s&&(t=function(r){return {type:"function",name:r,args:null}}(t)),r=t),r}function Ri(){var r,t,e,n,u,o,a,i;if(r=Wu,(t=Si())!==s){for(e=[],n=Wu,(u=vi())!==s&&(o=ai())!==s&&(a=vi())!==s&&(i=Si())!==s?n=u=[u,o,a,i]:(Wu=n,n=s);n!==s;)e.push(n),n=Wu,(u=vi())!==s&&(o=ai())!==s&&(a=vi())!==s&&(i=Si())!==s?n=u=[u,o,a,i]:(Wu=n,n=s);e!==s?(r=t=l(t,e)):(Wu=r,r=s);}else Wu=r,r=s;return r}function _i(){var r,t,e,n,u;return r=Wu,(t=qa())!==s&&(e=Oi())!==s?(n=t,u=e,r=t={type:"var",...u,prefix:n}):(Wu=r,r=s),r}function Oi(){var t,e,n,u,o;return t=Wu,(e=No())!==s&&(n=function(){var e,n,u,o;e=[],n=Wu,46===r.charCodeAt(Wu)?(u=".",Wu++):(u=s,0===Zu&&ts(jt));u!==s&&(o=No())!==s?n=u=[u,o]:(Wu=n,n=s);for(;n!==s;)e.push(n),n=Wu,46===r.charCodeAt(Wu)?(u=".",Wu++):(u=s,0===Zu&&ts(jt)),u!==s&&(o=No())!==s?n=u=[u,o]:(Wu=n,n=s);e!==s&&(e=function(r){const t=[];for(let e=0;e<r.length;e++)t.push(r[e][1]);return t}(e));return e}())!==s?(u=e,o=n,ji.push(u),t=e={type:"var",name:u,members:o,prefix:null}):(Wu=t,t=s),t}function gi(){var t;return (t=xi())===s&&(t=function(){var t,e,n,u,o,a,i,c,l,f,b,v;t=Wu,(e=Ua())===s&&(e=Ma())===s&&(e=ka())===s&&(e=$a())===s&&(e=Fa())===s&&(e=Pa())===s&&(e=Ga())===s&&(e=Ha())===s&&(e=ja())===s&&(e=function(){var t,e,n,u;return t=Wu,"bit"===r.substr(Wu,3).toLowerCase()?(e=r.substr(Wu,3),Wu+=3):(e=s,0===Zu&&ts(Ln)),e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="BIT"):(Wu=t,t=s)):(Wu=t,t=s),t}());if(e!==s)if((n=vi())!==s)if((u=ci())!==s)if((o=vi())!==s){if(a=[],Yt.test(r.charAt(Wu))?(i=r.charAt(Wu),Wu++):(i=s,0===Zu&&ts(Bt)),i!==s)for(;i!==s;)a.push(i),Yt.test(r.charAt(Wu))?(i=r.charAt(Wu),Wu++):(i=s,0===Zu&&ts(Bt));else a=s;if(a!==s)if((i=vi())!==s){if(c=Wu,(l=ai())!==s)if((f=vi())!==s){if(b=[],Yt.test(r.charAt(Wu))?(v=r.charAt(Wu),Wu++):(v=s,0===Zu&&ts(Bt)),v!==s)for(;v!==s;)b.push(v),Yt.test(r.charAt(Wu))?(v=r.charAt(Wu),Wu++):(v=s,0===Zu&&ts(Bt));else b=s;b!==s?c=l=[l,f,b]:(Wu=c,c=s);}else Wu=c,c=s;else Wu=c,c=s;c===s&&(c=null),c!==s&&(l=vi())!==s&&(f=li())!==s&&(b=vi())!==s?((v=Ui())===s&&(v=null),v!==s?(d=c,L=v,e={dataType:e,length:parseInt(a.join(""),10),scale:d&&parseInt(d[2].join(""),10),parentheses:!0,suffix:L},t=e):(Wu=t,t=s)):(Wu=t,t=s);}else Wu=t,t=s;else Wu=t,t=s;}else Wu=t,t=s;else Wu=t,t=s;else Wu=t,t=s;else Wu=t,t=s;var d,L;if(t===s){if(t=Wu,(e=Ua())===s&&(e=Ma())===s&&(e=ka())===s&&(e=$a())===s&&(e=Fa())===s&&(e=Pa())===s&&(e=Ga())===s&&(e=Ha())===s&&(e=ja()),e!==s){if(n=[],Yt.test(r.charAt(Wu))?(u=r.charAt(Wu),Wu++):(u=s,0===Zu&&ts(Bt)),u!==s)for(;u!==s;)n.push(u),Yt.test(r.charAt(Wu))?(u=r.charAt(Wu),Wu++):(u=s,0===Zu&&ts(Bt));else n=s;n!==s&&(u=vi())!==s?((o=Ui())===s&&(o=null),o!==s?(e=function(r,t,e){return {dataType:r,length:parseInt(t.join(""),10),suffix:e}}(e,n,o),t=e):(Wu=t,t=s)):(Wu=t,t=s);}else Wu=t,t=s;t===s&&(t=Wu,(e=Ua())===s&&(e=Ma())===s&&(e=ka())===s&&(e=$a())===s&&(e=Fa())===s&&(e=Pa())===s&&(e=Ga())===s&&(e=Ha())===s&&(e=ja()),e!==s&&(n=vi())!==s?((u=Ui())===s&&(u=null),u!==s&&(o=vi())!==s?(e=function(r,t){return {dataType:r,suffix:t}}(e,u),t=e):(Wu=t,t=s)):(Wu=t,t=s));}return t}())===s&&(t=function(){var t,e,n,u;t=Wu,(e=Ya())===s&&(e=Ba())===s&&(e=Xa())===s&&(e=Wa());e!==s&&vi()!==s&&ci()!==s&&vi()!==s?(Bu.test(r.charAt(Wu))?(n=r.charAt(Wu),Wu++):(n=s,0===Zu&&ts(Xu)),n!==s&&vi()!==s&&li()!==s&&vi()!==s?((u=Ui())===s&&(u=null),u!==s?(e={dataType:e,length:parseInt(n,10)},t=e):(Wu=t,t=s)):(Wu=t,t=s)):(Wu=t,t=s);t===s&&(t=Wu,(e=Ya())===s&&(e=Ba())===s&&(e=Xa())===s&&(e=Wa()),e!==s&&(e=Yu(e)),t=e);return t}())===s&&(t=function(){var e;(e=function(){var t,e,n,u;return t=Wu,"json"===r.substr(Wu,4).toLowerCase()?(e=r.substr(Wu,4),Wu+=4):(e=s,0===Zu&&ts(Sn)),e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="JSON"):(Wu=t,t=s)):(Wu=t,t=s),t}())!==s&&(e=Yu(e));return e}())===s&&(t=function(){var e;(e=function(){var t,e,n,u;return t=Wu,"tinytext"===r.substr(Wu,8).toLowerCase()?(e=r.substr(Wu,8),Wu+=8):(e=s,0===Zu&&ts(Rn)),e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="TINYTEXT"):(Wu=t,t=s)):(Wu=t,t=s),t}())===s&&(e=function(){var t,e,n,u;return t=Wu,"text"===r.substr(Wu,4).toLowerCase()?(e=r.substr(Wu,4),Wu+=4):(e=s,0===Zu&&ts(_n)),e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="TEXT"):(Wu=t,t=s)):(Wu=t,t=s),t}())===s&&(e=function(){var t,e,n,u;return t=Wu,"mediumtext"===r.substr(Wu,10).toLowerCase()?(e=r.substr(Wu,10),Wu+=10):(e=s,0===Zu&&ts(On)),e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="MEDIUMTEXT"):(Wu=t,t=s)):(Wu=t,t=s),t}())===s&&(e=function(){var t,e,n,u;return t=Wu,"longtext"===r.substr(Wu,8).toLowerCase()?(e=r.substr(Wu,8),Wu+=8):(e=s,0===Zu&&ts(gn)),e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="LONGTEXT"):(Wu=t,t=s)):(Wu=t,t=s),t}());e!==s&&(e={dataType:e});return e}())===s&&(t=function(){var t,e,n;t=Wu,(e=function(){var t,e,n,u;return t=Wu,"enum"===r.substr(Wu,4).toLowerCase()?(e=r.substr(Wu,4),Wu+=4):(e=s,0===Zu&&ts(Un)),e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="ENUM"):(Wu=t,t=s)):(Wu=t,t=s),t}())!==s&&vi()!==s&&(n=eo())!==s?(u=e,(o=n).parentheses=!0,t=e={dataType:u,expr:o}):(Wu=t,t=s);var u,o;return t}())===s&&(t=function(){var e;"boolean"===r.substr(Wu,7).toLowerCase()?(e=r.substr(Wu,7),Wu+=7):(e=s,0===Zu&&ts(Gu));e!==s&&(e={dataType:"BOOLEAN"});return e}())===s&&(t=function(){var t,e;t=Wu,"binary"===r.substr(Wu,6).toLowerCase()?(e=r.substr(Wu,6),Wu+=6):(e=s,0===Zu&&ts(Hu));e!==s&&(e={dataType:"BINARY"});(t=e)===s&&(t=Wu,"varbinary"===r.substr(Wu,9).toLowerCase()?(e=r.substr(Wu,9),Wu+=9):(e=s,0===Zu&&ts(ju)),e!==s&&(e={dataType:"VARBINARY"}),t=e);return t}()),t}function xi(){var t,e,n,u;if(t=Wu,(e=ga())===s&&(e=xa()),e!==s)if(vi()!==s)if(ci()!==s)if(vi()!==s){if(n=[],Yt.test(r.charAt(Wu))?(u=r.charAt(Wu),Wu++):(u=s,0===Zu&&ts(Bt)),u!==s)for(;u!==s;)n.push(u),Yt.test(r.charAt(Wu))?(u=r.charAt(Wu),Wu++):(u=s,0===Zu&&ts(Bt));else n=s;n!==s&&(u=vi())!==s&&li()!==s?(t=e={dataType:e,length:parseInt(n.join(""),10)}):(Wu=t,t=s);}else Wu=t,t=s;else Wu=t,t=s;else Wu=t,t=s;else Wu=t,t=s;return t===s&&(t=Wu,(e=ga())!==s&&(e=Yu(e)),(t=e)===s&&(t=Wu,(e=xa())!==s&&(e=Yu(e)),t=e)),t}function Ui(){var t,e,n;return t=Wu,(e=Da())===s&&(e=null),e!==s&&vi()!==s?((n=function(){var t,e,n,u;return t=Wu,"zerofill"===r.substr(Wu,8).toLowerCase()?(e=r.substr(Wu,8),Wu+=8):(e=s,0===Zu&&ts(Tn)),e!==s?(n=Wu,Zu++,u=Ro(),Zu--,u===s?n=void 0:(Wu=n,n=s),n!==s?(t=e="ZEROFILL"):(Wu=t,t=s)):(Wu=t,t=s),t}())===s&&(n=null),n!==s?(t=e=function(r,t){const e=[];return r&&e.push(r),t&&e.push(t),e}(e,n)):(Wu=t,t=s)):(Wu=t,t=s),t}const Mi={ALTER:!0,ALL:!0,ADD:!0,AND:!0,AS:!0,ASC:!0,ANALYZE:!0,ACCESSIBLE:!0,BEFORE:!0,BETWEEN:!0,BIGINT:!0,BLOB:!0,BOTH:!0,BY:!0,CALL:!0,CASCADE:!0,CASE:!0,CREATE:!0,CHAR:!0,CHECK:!0,COLLATE:!0,CONDITION:!0,CONSTRAINT:!0,CONTINUE:!0,CONVERT:!0,CREATE:!0,CROSS:!0,CURRENT_DATE:!0,CURRENT_TIME:!0,CURRENT_TIMESTAMP:!0,CURRENT_USER:!0,CURSOR:!0,DATABASE:!0,DATABASES:!0,DAY_HOUR:!0,DAY_MICROSECOND:!0,DAY_MINUTE:!0,DAY_SECOND:!0,DEC:!0,DECIMAL:!0,DECLARE:!0,DEFAULT:!0,DELAYED:!0,DELETE:!0,DESC:!0,DESCRIBE:!0,DETERMINISTIC:!0,DISTINCT:!0,DISTINCTROW:!0,DIV:!0,DROP:!0,DOUBLE:!0,DUAL:!0,ELSE:!0,EACH:!0,ELSEIF:!0,ENCLOSED:!0,ESCAPED:!0,EXCEPT:!0,EXISTS:!0,EXIT:!0,EXPLAIN:!0,FALSE:!0,FULL:!0,FROM:!0,FETCH:!0,FLOAT:!0,FLOAT4:!0,FLOAT8:!0,FOR:!0,FORCE:!0,FOREIGN:!0,FULLTEXT:!0,FUNCTION:!0,GENERATED:!0,GET:!0,GRANT:!0,GROUP:!0,GROUPING:!0,GROUPS:!0,HAVING:!0,HIGH_PRIORITY:!0,HOUR_MICROSECOND:!0,HOUR_MINUTE:!0,HOUR_SECOND:!0,IGNORE:!0,IN:!0,INNER:!0,INFILE:!0,INOUT:!0,INSENSITIVE:!0,INSERT:!0,INT:!0,INT1:!0,INT2:!0,INT3:!0,INT4:!0,INT8:!0,INTEGER:!0,INTERVAL:!0,INTO:!0,IO_AFTER_GTIDS:!0,IO_BEFORE_GTIDS:!0,IS:!0,ITERATE:!0,JOIN:!0,JSON_TABLE:!0,KEY:!0,KEYS:!0,KILL:!0,LAG:!0,LAST_VALUE:!0,LATERAL:!0,LEAD:!0,LEADING:!0,LEAVE:!0,LEFT:!0,LIKE:!0,LIMIT:!0,LINEAR:!0,LINES:!0,LOAD:!0,LOCALTIME:!0,LOCALTIMESTAMP:!0,LOCK:!0,LONG:!0,LONGBLOB:!0,LONGTEXT:!0,LOOP:!0,LOW_PRIORITY:!0,MASTER_BIND:!0,MATCH:!0,MAXVALUE:!0,MEDIUMBLOB:!0,MEDIUMINT:!0,MEDIUMTEXT:!0,MIDDLEINT:!0,MINUTE_MICROSECOND:!0,MINUTE_SECOND:!0,MOD:!0,MODIFIES:!0,NATURAL:!0,NOT:!0,NO_WRITE_TO_BINLOG:!0,NTH_VALUE:!0,NTILE:!0,NULL:!0,NUMERIC:!0,OF:!0,ON:!0,OPTIMIZE:!0,OPTIMIZER_COSTS:!0,OPTION:!0,OPTIONALLY:!0,OR:!0,ORDER:!0,OUT:!0,OUTER:!0,OUTFILE:!0,OVER:!0,PARTITION:!0,PERCENT_RANK:!0,PRECISION:!0,PRIMARY:!0,PROCEDURE:!0,PURGE:!0,RANGE:!0,RANK:!0,READ:!0,READS:!0,READ_WRITE:!0,REAL:!0,RECURSIVE:!0,REFERENCES:!0,REGEXP:!0,RELEASE:!0,RENAME:!0,REPEAT:!0,REPLACE:!0,REQUIRE:!0,RESIGNAL:!0,RESTRICT:!0,RETURN:!0,REVOKE:!0,RIGHT:!0,RLIKE:!0,ROW:!0,ROWS:!0,ROW_NUMBER:!0,SCHEMA:!0,SCHEMAS:!0,SELECT:!0,SENSITIVE:!0,SEPARATOR:!0,SET:!0,SHOW:!0,SIGNAL:!0,SMALLINT:!0,SPATIAL:!0,SPECIFIC:!0,SQL:!0,SQLEXCEPTION:!0,SQLSTATE:!0,SQLWARNING:!0,SQL_BIG_RESULT:!0,SSL:!0,STARTING:!0,STORED:!0,STRAIGHT_JOIN:!0,SYSTEM:!0,TABLE:!0,TERMINATED:!0,THEN:!0,TINYBLOB:!0,TINYINT:!0,TINYTEXT:!0,TO:!0,TRAILING:!0,TRIGGER:!0,TRUE:!0,UNION:!0,UNIQUE:!0,UNLOCK:!0,UNSIGNED:!0,UPDATE:!0,USAGE:!0,USE:!0,USING:!0,UTC_DATE:!0,UTC_TIME:!0,UTC_TIMESTAMP:!0,VALUES:!0,VARBINARY:!0,VARCHAR:!0,VARCHARACTER:!0,VARYING:!0,VIRTUAL:!0,WHEN:!0,WHERE:!0,WHILE:!0,WINDOW:!0,WITH:!0,WRITE:!0,XOR:!0,YEAR_MONTH:!0,ZEROFILL:!0};function Di(r,t){return {type:"unary_expr",operator:r,expr:t}}function ki(r,t,e){return {type:"binary_expr",operator:r,left:t,right:e}}function $i(r){const t=n(Number.MAX_SAFE_INTEGER);return !(n(r)<t)}function Fi(r,t,e=3){const n=[r];for(let r=0;r<t.length;r++)n.push(t[r][e]);return n}function Pi(r,t){let e=r;for(let r=0;r<t.length;r++)e=ki(t[r][1],e,t[r][3]);return e}function Gi(r){const t=Xi[r];return t||(r||null)}function Hi(r){const t=new Set;for(let e of r.keys()){const r=e.split("::");if(!r){t.add(e);break}r&&r[1]&&(r[1]=Gi(r[1])),t.add(r.join("::"));}return Array.from(t)}let ji=[];const Yi=new Set,Bi=new Set,Xi={};if((e=a())!==s&&Wu===r.length)return e;throw e!==s&&Wu<r.length&&ts({type:"end"}),es(qu,Ku<r.length?r.charAt(Ku):null,Ku<r.length?rs(Ku,Ku+1):rs(Ku,Ku))}};},function(r,t,e){var n=e(0);function u(r,t,e,n){this.message=r,this.expected=t,this.found=e,this.location=n,this.name="SyntaxError","function"==typeof Error.captureStackTrace&&Error.captureStackTrace(this,u);}!function(r,t){function e(){this.constructor=r;}e.prototype=t.prototype,r.prototype=new e;}(u,Error),u.buildMessage=function(r,t){var e={literal:function(r){return '"'+u(r.text)+'"'},class:function(r){var t,e="";for(t=0;t<r.parts.length;t++)e+=r.parts[t]instanceof Array?s(r.parts[t][0])+"-"+s(r.parts[t][1]):s(r.parts[t]);return "["+(r.inverted?"^":"")+e+"]"},any:function(r){return "any character"},end:function(r){return "end of input"},other:function(r){return r.description}};function n(r){return r.charCodeAt(0).toString(16).toUpperCase()}function u(r){return r.replace(/\\/g,"\\\\").replace(/"/g,'\\"').replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(r){return "\\x0"+n(r)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(r){return "\\x"+n(r)}))}function s(r){return r.replace(/\\/g,"\\\\").replace(/\]/g,"\\]").replace(/\^/g,"\\^").replace(/-/g,"\\-").replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(r){return "\\x0"+n(r)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(r){return "\\x"+n(r)}))}return "Expected "+function(r){var t,n,u,s=new Array(r.length);for(t=0;t<r.length;t++)s[t]=(u=r[t],e[u.type](u));if(s.sort(),s.length>0){for(t=1,n=1;t<s.length;t++)s[t-1]!==s[t]&&(s[n]=s[t],n++);s.length=n;}switch(s.length){case 1:return s[0];case 2:return s[0]+" or "+s[1];default:return s.slice(0,-1).join(", ")+", or "+s[s.length-1]}}(r)+" but "+function(r){return r?'"'+u(r)+'"':"end of input"}(t)+" found."},r.exports={SyntaxError:u,parse:function(r,t){t=void 0!==t?t:{};var e,s={},o={start:Wu},a=Wu,i=function(r,t){return Si(r,t)},c=function(r,t){return Si(r,t,1)},l=function(r,t){return Si(r,t)},f=Gu("AUTO_INCREMENT",!0),b=Gu("UNIQUE",!0),v=Gu("KEY",!0),d=Gu("PRIMARY",!0),L=Gu("COLUMN_FORMAT",!0),C=Gu("FIXED",!0),p=Gu("DYNAMIC",!0),w=Gu("DEFAULT",!0),E=Gu("STORAGE",!0),h=Gu("DISK",!0),A=Gu("MEMORY",!0),y=Gu("ALGORITHM",!0),T=Gu("INSTANT",!0),m=Gu("INPLACE",!0),S=Gu("COPY",!0),I=Gu("LOCK",!0),N=Gu("NONE",!0),R=Gu("SHARED",!0),_=Gu("EXCLUSIVE",!0),O=Gu("CHANGE",!0),g=Gu("FIRST",!0),x=Gu("AFTER",!0),U=Gu("PRIMARY KEY",!0),M=Gu("FOREIGN KEY",!0),D=Gu("CHECK",!0),k=Gu("ENFORCED",!0),$=Gu("MATCH FULL",!0),F=Gu("MATCH PARTIAL",!0),P=Gu("MATCH SIMPLE",!0),G=Gu("ON DELETE",!0),H=Gu("ON UPDATE",!0),j=Gu("RESTRICT",!0),Y=Gu("CASCADE",!0),B=Gu("SET NULL",!0),X=Gu("NO ACTION",!0),W=Gu("SET DEFAULT",!0),V=Gu("CHARACTER",!0),K=Gu("SET",!0),q=Gu("CHARSET",!0),Z=Gu("COLLATE",!0),z=Gu("AVG_ROW_LENGTH",!0),J=Gu("KEY_BLOCK_SIZE",!0),Q=Gu("MAX_ROWS",!0),rr=Gu("MIN_ROWS",!0),tr=Gu("STATS_SAMPLE_PAGES",!0),er=Gu("CONNECTION",!0),nr=Gu("COMPRESSION",!0),ur=Gu("'",!1),sr=Gu("ZLIB",!0),or=Gu("LZ4",!0),ar=Gu("ENGINE",!0),ir=Gu("BINARY",!0),cr=Gu("MASTER",!0),lr=Gu("LOGS",!0),fr=Gu("BINLOG",!0),br=Gu("EVENTS",!0),vr=Gu("COLLATION",!0),dr=Gu("GRANTS",!0),Lr=Gu("FOR",!0),Cr=function(r,t){return Si(r,t)},pr=Gu("READ",!0),wr=Gu("LOCAL",!0),Er=Gu("LOW_PRIORITY",!0),hr=Gu("WRITE",!0),Ar=Gu("(",!1),yr=Gu(")",!1),Tr=Gu("BTREE",!0),mr=Gu("HASH",!0),Sr=Gu("WITH",!0),Ir=Gu("PARSER",!0),Nr=Gu("VISIBLE",!0),Rr=Gu("INVISIBLE",!0),_r=function(r,t){return t.unshift(r),t.forEach(r=>{const{table:t,as:e}=r;xi[t]=t,e&&(xi[e]=t),function(r){const t=Ri(r);r.clear(),t.forEach(t=>r.add(t));}(gi);}),t},Or=Gu("=",!1),gr=Gu("DUPLICATE",!0),xr=function(r,t){return Ii(r,t)},Ur=Gu("!",!1),Mr=function(r){return r[0]+" "+r[2]},Dr=Gu(">=",!1),kr=Gu(">",!1),$r=Gu("<=",!1),Fr=Gu("<>",!1),Pr=Gu("<",!1),Gr=Gu("!=",!1),Hr=Gu("+",!1),jr=Gu("-",!1),Yr=Gu("*",!1),Br=Gu("/",!1),Xr=Gu("%",!1),Wr=Gu("div",!0),Vr=function(r){return !0===Ai[r.toUpperCase()]},Kr=Gu('"',!1),qr=/^[^"]/,Zr=Hu(['"'],!0,!1),zr=function(r){return r.join("")},Jr=/^[^']/,Qr=Hu(["'"],!0,!1),rt=Gu("`",!1),tt=/^[^`]/,et=Hu(["`"],!0,!1),nt=function(r,t){return r+t.join("")},ut=/^[A-Za-z_]/,st=Hu([["A","Z"],["a","z"],"_"],!1,!1),ot=/^[A-Za-z0-9_]/,at=Hu([["A","Z"],["a","z"],["0","9"],"_"],!1,!1),it=/^[A-Za-z0-9_:]/,ct=Hu([["A","Z"],["a","z"],["0","9"],"_",":"],!1,!1),lt=Gu(":",!1),ft=Gu("convert",!0),bt=function(r,t){return {type:r.toLowerCase(),value:t[1].join("")}},vt=/^[^"\\\0-\x1F\x7F]/,dt=Hu(['"',"\\",["\0",""],""],!0,!1),Lt=/^[^'\\]/,Ct=Hu(["'","\\"],!0,!1),pt=Gu("\\'",!1),wt=Gu('\\"',!1),Et=Gu("\\\\",!1),ht=Gu("\\/",!1),At=Gu("\\b",!1),yt=Gu("\\f",!1),Tt=Gu("\\n",!1),mt=Gu("\\r",!1),St=Gu("\\t",!1),It=Gu("\\u",!1),Nt=Gu("\\",!1),Rt=/^[\n\r]/,_t=Hu(["\n","\r"],!1,!1),Ot=Gu(".",!1),gt=/^[0-9]/,xt=Hu([["0","9"]],!1,!1),Ut=/^[0-9a-fA-F]/,Mt=Hu([["0","9"],["a","f"],["A","F"]],!1,!1),Dt=/^[eE]/,kt=Hu(["e","E"],!1,!1),$t=/^[+\-]/,Ft=Hu(["+","-"],!1,!1),Pt=Gu("NULL",!0),Gt=Gu("NOT NULL",!0),Ht=Gu("TRUE",!0),jt=Gu("TO",!0),Yt=Gu("FALSE",!0),Bt=Gu("SHOW",!0),Xt=Gu("DROP",!0),Wt=Gu("USE",!0),Vt=Gu("ALTER",!0),Kt=Gu("SELECT",!0),qt=Gu("UPDATE",!0),Zt=Gu("CREATE",!0),zt=Gu("TEMPORARY",!0),Jt=Gu("IF NOT EXISTS",!0),Qt=Gu("DELETE",!0),re=Gu("INSERT",!0),te=Gu("RECURSIVE",!1),ee=Gu("REPLACE",!0),ne=Gu("RENAME",!0),ue=Gu("IGNORE",!0),se=(Gu("PARTITION",!0)),oe=Gu("INTO",!0),ae=Gu("FROM",!0),ie=Gu("UNLOCK",!0),ce=Gu("AS",!0),le=Gu("TABLE",!0),fe=Gu("TABLES",!0),be=Gu("DATABASE",!0),ve=Gu("SCHEME",!0),de=Gu("ON",!0),Le=Gu("LEFT",!0),Ce=Gu("RIGHT",!0),pe=Gu("FULL",!0),we=Gu("INNER",!0),Ee=Gu("JOIN",!0),he=Gu("OUTER",!0),Ae=Gu("OVER",!0),ye=Gu("UNION",!0),Te=Gu("VALUES",!0),me=Gu("USING",!0),Se=Gu("WHERE",!0),Ie=Gu("GROUP",!0),Ne=Gu("BY",!0),Re=Gu("ORDER",!0),_e=Gu("HAVING",!0),Oe=Gu("LIMIT",!0),ge=Gu("OFFSET",!0),xe=Gu("ASC",!0),Ue=Gu("DESC",!0),Me=Gu("DESCRIBE",!0),De=Gu("ALL",!0),ke=Gu("DISTINCT",!0),$e=Gu("BETWEEN",!0),Fe=Gu("IN",!0),Pe=Gu("IS",!0),Ge=Gu("LIKE",!0),He=Gu("RLIKE",!0),je=Gu("REGEXP",!0),Ye=Gu("EXISTS",!0),Be=Gu("NOT",!0),Xe=Gu("AND",!0),We=Gu("OR",!0),Ve=Gu("COUNT",!0),Ke=Gu("GROUP_CONCAT",!0),qe=Gu("MAX",!0),Ze=Gu("MIN",!0),ze=Gu("SUM",!0),Je=Gu("AVG",!0),Qe=Gu("CALL",!0),rn=Gu("CASE",!0),tn=Gu("WHEN",!0),en=Gu("THEN",!0),nn=Gu("ELSE",!0),un=Gu("END",!0),sn=Gu("CAST",!0),on=Gu("CHAR",!0),an=Gu("VARCHAR",!0),cn=Gu("NUMERIC",!0),ln=Gu("DECIMAL",!0),fn=Gu("SIGNED",!0),bn=Gu("UNSIGNED",!0),vn=Gu("INT",!0),dn=Gu("ZEROFILL",!0),Ln=Gu("INTEGER",!0),Cn=Gu("JSON",!0),pn=Gu("SMALLINT",!0),wn=Gu("TINYINT",!0),En=Gu("TINYTEXT",!0),hn=Gu("TEXT",!0),An=Gu("MEDIUMTEXT",!0),yn=Gu("LONGTEXT",!0),Tn=Gu("BIGINT",!0),mn=Gu("ENUM",!0),Sn=Gu("FLOAT",!0),In=Gu("DOUBLE",!0),Nn=Gu("DATE",!0),Rn=Gu("DATETIME",!0),_n=Gu("TIME",!0),On=Gu("TIMESTAMP",!0),gn=Gu("TRUNCATE",!0),xn=Gu("USER",!0),Un=Gu("CURRENT_DATE",!0),Mn=(Gu("INTERVAL",!0)),Dn=Gu("YEAR",!0),kn=Gu("MONTH",!0),$n=Gu("DAY",!0),Fn=Gu("HOUR",!0),Pn=Gu("MINUTE",!0),Gn=Gu("SECOND",!0),Hn=Gu("CURRENT_TIME",!0),jn=Gu("CURRENT_TIMESTAMP",!0),Yn=Gu("CURRENT_USER",!0),Bn=Gu("SESSION_USER",!0),Xn=Gu("SYSTEM_USER",!0),Wn=Gu("GLOBAL",!0),Vn=Gu("SESSION",!0),Kn=Gu("PERSIST",!0),qn=Gu("PERSIST_ONLY",!0),Zn=Gu("@",!1),zn=Gu("@@",!1),Jn=Gu("$",!1),Qn=Gu("return",!0),ru=Gu(":=",!1),tu=Gu("DUAL",!0),eu=Gu("ADD",!0),nu=Gu("COLUMN",!0),uu=Gu("INDEX",!0),su=Gu("FULLTEXT",!0),ou=Gu("SPATIAL",!0),au=Gu("COMMENT",!0),iu=Gu("CONSTRAINT",!0),cu=Gu("REFERENCES",!0),lu=Gu("SQL_CALC_FOUND_ROWS",!0),fu=Gu("SQL_CACHE",!0),bu=Gu("SQL_NO_CACHE",!0),vu=Gu("SQL_SMALL_RESULT",!0),du=Gu("SQL_BIG_RESULT",!0),Lu=Gu("SQL_BUFFER_RESULT",!0),Cu=Gu(",",!1),pu=Gu("[",!1),wu=Gu("]",!1),Eu=Gu(";",!1),hu=Gu("||",!1),Au=Gu("&&",!1),yu=Gu("/*",!1),Tu=Gu("*/",!1),mu=Gu("--",!1),Su=Gu("#",!1),Iu={type:"any"},Nu=/^[ \t\n\r]/,Ru=Hu([" ","\t","\n","\r"],!1,!1),_u=Gu("boolean",!0),Ou=Gu("binary",!0),gu=Gu("varbinary",!0),xu=function(r){return {dataType:r}},Uu=/^[0-6]/,Mu=Hu([["0","6"]],!1,!1),Du=0,ku=[{line:1,column:1}],$u=0,Fu=[],Pu=0;if("startRule"in t){if(!(t.startRule in o))throw new Error("Can't start parsing from rule \""+t.startRule+'".');a=o[t.startRule];}function Gu(r,t){return {type:"literal",text:r,ignoreCase:t}}function Hu(r,t,e){return {type:"class",parts:r,inverted:t,ignoreCase:e}}function ju(t){var e,n=ku[t];if(n)return n;for(e=t-1;!ku[e];)e--;for(n={line:(n=ku[e]).line,column:n.column};e<t;)10===r.charCodeAt(e)?(n.line++,n.column=1):n.column++,e++;return ku[t]=n,n}function Yu(r,t){var e=ju(r),n=ju(t);return {start:{offset:r,line:e.line,column:e.column},end:{offset:t,line:n.line,column:n.column}}}function Bu(r){Du<$u||(Du>$u&&($u=Du,Fu=[]),Fu.push(r));}function Xu(r,t,e){return new u(u.buildMessage(r,t),r,t,e)}function Wu(){var r,t;return r=Du,ri()!==s?((t=function(){var r,t,e,n,u,o,a,i;if(r=Du,(t=Ku())!==s){if(e=[],n=Du,(u=ri())!==s&&(o=Ja())!==s&&(a=ri())!==s&&(i=Ku())!==s?n=u=[u,o,a,i]:(Du=n,n=s),n!==s)for(;n!==s;)e.push(n),n=Du,(u=ri())!==s&&(o=Ja())!==s&&(a=ri())!==s&&(i=Ku())!==s?n=u=[u,o,a,i]:(Du=n,n=s);else e=s;e!==s?(t=function(r,t){const e=[r&&r.ast||r];for(let r=0;r<t.length;r++)t[r][3]&&0!==t[r][3].length&&e.push(t[r][3]&&t[r][3].ast||t[r][3]);return {tableList:Array.from(Oi),columnList:Ri(gi),ast:e}}(t,e),r=t):(Du=r,r=s);}else Du=r,r=s;return r}())===s&&(t=Vu())===s&&(t=Ku()),t!==s?(r=t):(Du=r,r=s)):(Du=r,r=s),r}function Vu(){var t;return (t=function(){var r,t,e,n,u,o;r=Du,(t=$o())!==s&&ri()!==s&&(e=Ko())!==s&&ri()!==s&&(n=Ns())!==s?(a=t,i=e,(l=n)&&l.forEach(r=>Oi.add(`${a}::${r.db}::${r.table}`)),t={tableList:Array.from(Oi),columnList:Ri(gi),ast:{type:a.toLowerCase(),keyword:i.toLowerCase(),name:l}},r=t):(Du=r,r=s);var a,i,l;r===s&&(r=Du,(t=$o())!==s&&ri()!==s&&(e=Ha())!==s&&ri()!==s&&(n=co())!==s&&ri()!==s&&Zo()!==s&&ri()!==s&&(u=gs())!==s&&ri()!==s?((o=function(){var r,t,e,n,u,o;r=Du,(t=es())===s&&(t=ns());if(t!==s){for(e=[],n=Du,(u=ri())!==s?((o=es())===s&&(o=ns()),o!==s?n=u=[u,o]:(Du=n,n=s)):(Du=n,n=s);n!==s;)e.push(n),n=Du,(u=ri())!==s?((o=es())===s&&(o=ns()),o!==s?n=u=[u,o]:(Du=n,n=s)):(Du=n,n=s);e!==s?(t=c(t,e),r=t):(Du=r,r=s);}else Du=r,r=s;return r}())===s&&(o=null),o!==s&&ri()!==s?(t=function(r,t,e,n,u){return {tableList:Array.from(Oi),columnList:Ri(gi),ast:{type:r.toLowerCase(),keyword:t.toLowerCase(),name:e,table:n,options:u}}}(t,e,n,u,o),r=t):(Du=r,r=s)):(Du=r,r=s));return r}())===s&&(t=function(){var t;(t=function(){var t,e,n,u,o,a,c,f,b,v;t=Du,(e=Po())!==s&&ri()!==s?((n=Go())===s&&(n=null),n!==s&&ri()!==s&&Ko()!==s&&ri()!==s?((u=Ho())===s&&(u=null),u!==s&&ri()!==s&&(o=Ns())!==s&&ri()!==s&&(a=function(){var r,t,e,n,u,o,a,i,c;if(r=Du,(t=Za())!==s)if(ri()!==s)if((e=zu())!==s){for(n=[],u=Du,(o=ri())!==s&&(a=Ka())!==s&&(i=ri())!==s&&(c=zu())!==s?u=o=[o,a,i,c]:(Du=u,u=s);u!==s;)n.push(u),u=Du,(o=ri())!==s&&(a=Ka())!==s&&(i=ri())!==s&&(c=zu())!==s?u=o=[o,a,i,c]:(Du=u,u=s);n!==s&&(u=ri())!==s&&(o=za())!==s?(t=l(e,n),r=t):(Du=r,r=s);}else Du=r,r=s;else Du=r,r=s;else Du=r,r=s;return r}())!==s&&ri()!==s?((c=function(){var r,t,e,n,u,o,a,c;if(r=Du,(t=fs())!==s){for(e=[],n=Du,(u=ri())!==s?((o=Ka())===s&&(o=null),o!==s&&(a=ri())!==s&&(c=fs())!==s?n=u=[u,o,a,c]:(Du=n,n=s)):(Du=n,n=s);n!==s;)e.push(n),n=Du,(u=ri())!==s?((o=Ka())===s&&(o=null),o!==s&&(a=ri())!==s&&(c=fs())!==s?n=u=[u,o,a,c]:(Du=n,n=s)):(Du=n,n=s);e!==s?(t=i(t,e),r=t):(Du=r,r=s);}else Du=r,r=s;return r}())===s&&(c=null),c!==s&&ri()!==s?((f=function(){var t,e,n,u;t=Du,"ignore"===r.substr(Du,6).toLowerCase()?(e=r.substr(Du,6),Du+=6):(e=s,0===Pu&&Bu(ue));e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?t=e=[e,n]:(Du=t,t=s)):(Du=t,t=s);return t}())===s&&(f=jo()),f===s&&(f=null),f!==s&&ri()!==s?((b=Vo())===s&&(b=null),b!==s&&ri()!==s?((v=qu())===s&&(v=null),v!==s?(d=e,L=n,C=u,w=a,E=c,h=f,A=b,y=v,(p=o)&&p.forEach(r=>Oi.add(`create::${r.db}::${r.table}`)),e={tableList:Array.from(Oi),columnList:Ri(gi),ast:{type:d[0].toLowerCase(),keyword:"table",temporary:L&&L[0].toLowerCase(),if_not_exists:C&&C[0].toLowerCase(),table:p,ignore_replace:h&&h[0].toLowerCase(),as:A&&A[0].toLowerCase(),query_expr:y&&y.ast,create_definitions:w,table_options:E}},t=e):(Du=t,t=s)):(Du=t,t=s)):(Du=t,t=s)):(Du=t,t=s)):(Du=t,t=s)):(Du=t,t=s)):(Du=t,t=s);var d,L,C,p,w,E,h,A,y;t===s&&(t=Du,(e=Po())!==s&&ri()!==s?((n=Go())===s&&(n=null),n!==s&&ri()!==s&&Ko()!==s&&ri()!==s?((u=Ho())===s&&(u=null),u!==s&&ri()!==s&&(o=Ns())!==s&&ri()!==s&&(a=function r(){var t,e;(t=function(){var r,t,e;r=Du,(t=fa())!==s&&ri()!==s&&(e=Ns())!==s?(t=function(r){return {type:"like",table:r}}(e),r=t):(Du=r,r=s);return r}())===s&&(t=Du,Za()!==s&&ri()!==s&&(e=r())!==s&&ri()!==s&&za()!==s?((n=e).parentheses=!0,t=n):(Du=t,t=s));var n;return t}())!==s?(e=function(r,t,e,n,u){return n&&n.forEach(r=>Oi.add(`create::${r.db}::${r.table}`)),{tableList:Array.from(Oi),columnList:Ri(gi),ast:{type:r[0].toLowerCase(),keyword:"table",temporary:t&&t[0].toLowerCase(),if_not_exists:e&&e[0].toLowerCase(),table:n,like:u}}}(e,n,u,o,a),t=e):(Du=t,t=s)):(Du=t,t=s)):(Du=t,t=s));return t}())===s&&(t=function(){var r,t,e,n,u,o,a,c,l,f,b,v;r=Du,(t=Po())!==s&&ri()!==s?((e=Xa())===s&&(e=Ya())===s&&(e=Ba()),e===s&&(e=null),e!==s&&ri()!==s&&(n=Ha())!==s&&ri()!==s&&(u=lo())!==s&&ri()!==s?((o=ms())===s&&(o=null),o!==s&&ri()!==s&&(a=Zo())!==s&&ri()!==s&&(c=gs())!==s&&ri()!==s&&Za()!==s&&ri()!==s&&(l=function(){var r,t,e,n,u,o,a,c;if(r=Du,(t=Zu())!==s){for(e=[],n=Du,(u=ri())!==s&&(o=Ka())!==s&&(a=ri())!==s&&(c=Zu())!==s?n=u=[u,o,a,c]:(Du=n,n=s);n!==s;)e.push(n),n=Du,(u=ri())!==s&&(o=Ka())!==s&&(a=ri())!==s&&(c=Zu())!==s?n=u=[u,o,a,c]:(Du=n,n=s);e!==s?(t=i(t,e),r=t):(Du=r,r=s);}else Du=r,r=s;return r}())!==s&&ri()!==s&&za()!==s&&ri()!==s?((f=Ss())===s&&(f=null),f!==s&&ri()!==s?((b=es())===s&&(b=null),b!==s&&ri()!==s?((v=ns())===s&&(v=null),v!==s&&ri()!==s?(d=t,L=e,C=n,p=u,w=o,E=a,h=c,A=l,y=f,T=b,m=v,t={tableList:Array.from(Oi),columnList:Ri(gi),ast:{type:d[0].toLowerCase(),index_type:L&&L.toLowerCase(),keyword:C.toLowerCase(),index:p,on_kw:E[0].toLowerCase(),table:h,index_columns:A,index_using:w,index_options:y,algorithm_option:T,lock_option:m}},r=t):(Du=r,r=s)):(Du=r,r=s)):(Du=r,r=s)):(Du=r,r=s)):(Du=r,r=s)):(Du=r,r=s);var d,L,C,p,w,E,h,A,y,T,m;return r}())===s&&(t=function(){var t,e,n,u,o,a;t=Du,(e=Po())!==s&&ri()!==s?((n=function(){var t,e,n,u;t=Du,"database"===r.substr(Du,8).toLowerCase()?(e=r.substr(Du,8),Du+=8):(e=s,0===Pu&&Bu(be));e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="DATABASE"):(Du=t,t=s)):(Du=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=Du,"scheme"===r.substr(Du,6).toLowerCase()?(e=r.substr(Du,6),Du+=6):(e=s,0===Pu&&Bu(ve));e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="SCHEME"):(Du=t,t=s)):(Du=t,t=s);return t}()),n!==s&&ri()!==s?((u=Ho())===s&&(u=null),u!==s&&ri()!==s&&(o=vo())!==s&&ri()!==s?((a=function(){var r,t,e,n,u,o;if(r=Du,(t=ls())!==s){for(e=[],n=Du,(u=ri())!==s&&(o=ls())!==s?n=u=[u,o]:(Du=n,n=s);n!==s;)e.push(n),n=Du,(u=ri())!==s&&(o=ls())!==s?n=u=[u,o]:(Du=n,n=s);e!==s?(t=c(t,e),r=t):(Du=r,r=s);}else Du=r,r=s;return r}())===s&&(a=null),a!==s?(i=e,l=u,f=o,b=a,e={tableList:Array.from(Oi),columnList:Ri(gi),ast:{type:i[0].toLowerCase(),keyword:"database",if_not_exists:l&&l[0].toLowerCase(),database:f,create_definitions:b}},t=e):(Du=t,t=s)):(Du=t,t=s)):(Du=t,t=s)):(Du=t,t=s);var i,l,f,b;return t}());return t}())===s&&(t=function(){var t,e,n,u;t=Du,(e=function(){var t,e,n,u;t=Du,"truncate"===r.substr(Du,8).toLowerCase()?(e=r.substr(Du,8),Du+=8):(e=s,0===Pu&&Bu(gn));e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="TRUNCATE"):(Du=t,t=s)):(Du=t,t=s);return t}())!==s&&ri()!==s?((n=Ko())===s&&(n=null),n!==s&&ri()!==s&&(u=Ns())!==s?(o=e,a=n,(i=u)&&i.forEach(r=>Oi.add(`${o}::${r.db}::${r.table}`)),e={tableList:Array.from(Oi),columnList:Ri(gi),ast:{type:o.toLowerCase(),keyword:a&&a.toLowerCase()||"table",name:i}},t=e):(Du=t,t=s)):(Du=t,t=s);var o,a,i;return t}())===s&&(t=function(){var r,t,e;r=Du,(t=Yo())!==s&&ri()!==s&&Ko()!==s&&ri()!==s&&(e=function(){var r,t,e,n,u,o,a,i;if(r=Du,(t=Ts())!==s){for(e=[],n=Du,(u=ri())!==s&&(o=Ka())!==s&&(a=ri())!==s&&(i=Ts())!==s?n=u=[u,o,a,i]:(Du=n,n=s);n!==s;)e.push(n),n=Du,(u=ri())!==s&&(o=Ka())!==s&&(a=ri())!==s&&(i=Ts())!==s?n=u=[u,o,a,i]:(Du=n,n=s);e!==s?(t=l(t,e),r=t):(Du=r,r=s);}else Du=r,r=s;return r}())!==s?((n=e).forEach(r=>r.forEach(r=>r.table&&Oi.add(`rename::${r.db}::${r.table}`))),t={tableList:Array.from(Oi),columnList:Ri(gi),ast:{type:"rename",table:n}},r=t):(Du=r,r=s);var n;return r}())===s&&(t=function(){var t,e,n;t=Du,(e=function(){var t,e,n,u;t=Du,"call"===r.substr(Du,4).toLowerCase()?(e=r.substr(Du,4),Du+=4):(e=s,0===Pu&&Bu(Qe));e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="CALL"):(Du=t,t=s)):(Du=t,t=s);return t}())!==s&&ri()!==s&&(n=di())!==s?(u=n,e={tableList:Array.from(Oi),columnList:Ri(gi),ast:{type:"call",expr:u}},t=e):(Du=t,t=s);var u;return t}())===s&&(t=function(){var t,e,n;t=Du,(e=function(){var t,e,n,u;t=Du,"use"===r.substr(Du,3).toLowerCase()?(e=r.substr(Du,3),Du+=3):(e=s,0===Pu&&Bu(Wt));e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?t=e=[e,n]:(Du=t,t=s)):(Du=t,t=s);return t}())!==s&&ri()!==s&&(n=lo())!==s?(u=n,Oi.add(`use::${u}::null`),e={tableList:Array.from(Oi),columnList:Ri(gi),ast:{type:"use",db:u}},t=e):(Du=t,t=s);var u;return t}())===s&&(t=function(){var t,e,n,u;t=Du,(e=function(){var t,e,n,u;t=Du,"alter"===r.substr(Du,5).toLowerCase()?(e=r.substr(Du,5),Du+=5):(e=s,0===Pu&&Bu(Vt));e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?t=e=[e,n]:(Du=t,t=s)):(Du=t,t=s);return t}())!==s&&ri()!==s&&Ko()!==s&&ri()!==s&&(n=Ns())!==s&&ri()!==s&&(u=function(){var r,t,e,n,u,o,a,i;if(r=Du,(t=ts())!==s){for(e=[],n=Du,(u=ri())!==s&&(o=Ka())!==s&&(a=ri())!==s&&(i=ts())!==s?n=u=[u,o,a,i]:(Du=n,n=s);n!==s;)e.push(n),n=Du,(u=ri())!==s&&(o=Ka())!==s&&(a=ri())!==s&&(i=ts())!==s?n=u=[u,o,a,i]:(Du=n,n=s);e!==s?(t=l(t,e),r=t):(Du=r,r=s);}else Du=r,r=s;return r}())!==s?(a=u,(o=n)&&o.length>0&&o.forEach(r=>Oi.add(`alter::${r.db}::${r.table}`)),e={tableList:Array.from(Oi),columnList:Ri(gi),ast:{type:"alter",table:o,expr:a}},t=e):(Du=t,t=s);var o,a;return t}())===s&&(t=function(){var t,e,n,u;t=Du,(e=Wo())!==s&&ri()!==s?((n=function(){var t,e,n,u;t=Du,"global"===r.substr(Du,6).toLowerCase()?(e=r.substr(Du,6),Du+=6):(e=s,0===Pu&&Bu(Wn));e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="GLOBAL"):(Du=t,t=s)):(Du=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=Du,"session"===r.substr(Du,7).toLowerCase()?(e=r.substr(Du,7),Du+=7):(e=s,0===Pu&&Bu(Vn));e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="SESSION"):(Du=t,t=s)):(Du=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=Du,"local"===r.substr(Du,5).toLowerCase()?(e=r.substr(Du,5),Du+=5):(e=s,0===Pu&&Bu(wr));e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="LOCAL"):(Du=t,t=s)):(Du=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=Du,"persist"===r.substr(Du,7).toLowerCase()?(e=r.substr(Du,7),Du+=7):(e=s,0===Pu&&Bu(Kn));e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="PERSIST"):(Du=t,t=s)):(Du=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=Du,"persist_only"===r.substr(Du,12).toLowerCase()?(e=r.substr(Du,12),Du+=12):(e=s,0===Pu&&Bu(qn));e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="PERSIST_ONLY"):(Du=t,t=s)):(Du=t,t=s);return t}()),n===s&&(n=null),n!==s&&ri()!==s&&(u=ii())!==s?(o=n,(a=u).keyword=o,e={tableList:Array.from(Oi),columnList:Ri(gi),ast:{type:"set",expr:a}},t=e):(Du=t,t=s)):(Du=t,t=s);var o,a;return t}())===s&&(t=function(){var t,e,n;t=Du,(e=function(){var t,e,n,u;t=Du,"lock"===r.substr(Du,4).toLowerCase()?(e=r.substr(Du,4),Du+=4):(e=s,0===Pu&&Bu(I));e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?t=e=[e,n]:(Du=t,t=s)):(Du=t,t=s);return t}())!==s&&ri()!==s&&qo()!==s&&ri()!==s&&(n=function(){var r,t,e,n,u,o,a,i;if(r=Du,(t=bs())!==s){for(e=[],n=Du,(u=ri())!==s&&(o=Ka())!==s&&(a=ri())!==s&&(i=bs())!==s?n=u=[u,o,a,i]:(Du=n,n=s);n!==s;)e.push(n),n=Du,(u=ri())!==s&&(o=Ka())!==s&&(a=ri())!==s&&(i=bs())!==s?n=u=[u,o,a,i]:(Du=n,n=s);e!==s?(t=Cr(t,e),r=t):(Du=r,r=s);}else Du=r,r=s;return r}())!==s?(u=n,e={tableList:Array.from(Oi),columnList:Ri(gi),ast:{type:"lock",keyword:"tables",tables:u}},t=e):(Du=t,t=s);var u;return t}())===s&&(t=function(){var t,e;t=Du,(e=function(){var t,e,n,u;t=Du,"unlock"===r.substr(Du,6).toLowerCase()?(e=r.substr(Du,6),Du+=6):(e=s,0===Pu&&Bu(ie));e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?t=e=[e,n]:(Du=t,t=s)):(Du=t,t=s);return t}())!==s&&ri()!==s&&qo()!==s?(e={tableList:Array.from(Oi),columnList:Ri(gi),ast:{type:"unlock",keyword:"tables"}},t=e):(Du=t,t=s);return t}())===s&&(t=function(){var t,e,n,u,o,a,i,c,l;t=Du,(e=ko())!==s&&ri()!==s?("binary"===r.substr(Du,6).toLowerCase()?(n=r.substr(Du,6),Du+=6):(n=s,0===Pu&&Bu(ir)),n===s&&("master"===r.substr(Du,6).toLowerCase()?(n=r.substr(Du,6),Du+=6):(n=s,0===Pu&&Bu(cr))),n!==s&&(u=ri())!==s?("logs"===r.substr(Du,4).toLowerCase()?(o=r.substr(Du,4),Du+=4):(o=s,0===Pu&&Bu(lr)),o!==s?(f=n,e={tableList:Array.from(Oi),columnList:Ri(gi),ast:{type:"show",suffix:"logs",keyword:f.toLowerCase()}},t=e):(Du=t,t=s)):(Du=t,t=s)):(Du=t,t=s);var f;t===s&&(t=Du,(e=ko())!==s&&ri()!==s?("binlog"===r.substr(Du,6).toLowerCase()?(n=r.substr(Du,6),Du+=6):(n=s,0===Pu&&Bu(fr)),n!==s&&(u=ri())!==s?("events"===r.substr(Du,6).toLowerCase()?(o=r.substr(Du,6),Du+=6):(o=s,0===Pu&&Bu(br)),o!==s&&(a=ri())!==s?((i=no())===s&&(i=null),i!==s&&ri()!==s?((c=ys())===s&&(c=null),c!==s&&ri()!==s?((l=$s())===s&&(l=null),l!==s?(b=i,v=c,d=l,e={tableList:Array.from(Oi),columnList:Ri(gi),ast:{type:"show",suffix:"events",keyword:"binlog",in:b,from:v,limit:d}},t=e):(Du=t,t=s)):(Du=t,t=s)):(Du=t,t=s)):(Du=t,t=s)):(Du=t,t=s)):(Du=t,t=s),t===s&&(t=Du,(e=ko())!==s&&ri()!==s?(n=Du,"character"===r.substr(Du,9).toLowerCase()?(u=r.substr(Du,9),Du+=9):(u=s,0===Pu&&Bu(V)),u!==s&&(o=ri())!==s?("set"===r.substr(Du,3).toLowerCase()?(a=r.substr(Du,3),Du+=3):(a=s,0===Pu&&Bu(K)),a!==s?n=u=[u,o,a]:(Du=n,n=s)):(Du=n,n=s),n===s&&("collation"===r.substr(Du,9).toLowerCase()?(n=r.substr(Du,9),Du+=9):(n=s,0===Pu&&Bu(vr))),n!==s&&(u=ri())!==s?((o=eo())===s&&(o=Us()),o===s&&(o=null),o!==s?(e=function(r,t){let e=Array.isArray(r)&&r||[r];return {tableList:Array.from(Oi),columnList:Ri(gi),ast:{type:"show",suffix:e[2]&&e[2].toLowerCase(),keyword:e[0].toLowerCase(),expr:t}}}(n,o),t=e):(Du=t,t=s)):(Du=t,t=s)):(Du=t,t=s),t===s&&(t=function(){var t,e,n,u;t=Du,(e=ko())!==s&&ri()!==s?("grants"===r.substr(Du,6).toLowerCase()?(n=r.substr(Du,6),Du+=6):(n=s,0===Pu&&Bu(dr)),n!==s&&ri()!==s?((u=function(){var t,e,n,u,o,a,i;t=Du,"for"===r.substr(Du,3).toLowerCase()?(e=r.substr(Du,3),Du+=3):(e=s,0===Pu&&Bu(Lr));e!==s&&ri()!==s&&(n=lo())!==s&&ri()!==s?(u=Du,(o=ka())!==s&&(a=ri())!==s&&(i=lo())!==s?u=o=[o,a,i]:(Du=u,u=s),u===s&&(u=null),u!==s&&(o=ri())!==s?((a=function(){var r,t;r=Du,ta()!==s&&ri()!==s&&(t=function(){var r,t,e,n,u,o,a,i;if(r=Du,(t=lo())!==s){for(e=[],n=Du,(u=ri())!==s&&(o=Ka())!==s&&(a=ri())!==s&&(i=lo())!==s?n=u=[u,o,a,i]:(Du=n,n=s);n!==s;)e.push(n),n=Du,(u=ri())!==s&&(o=Ka())!==s&&(a=ri())!==s&&(i=lo())!==s?n=u=[u,o,a,i]:(Du=n,n=s);e!==s?(t=Cr(t,e),r=t):(Du=r,r=s);}else Du=r,r=s;return r}())!==s?(r=t):(Du=r,r=s);return r}())===s&&(a=null),a!==s?(l=a,e={user:n,host:(c=u)&&c[2],role_list:l},t=e):(Du=t,t=s)):(Du=t,t=s)):(Du=t,t=s);var c,l;return t}())===s&&(u=null),u!==s?(e=function(r){return {tableList:Array.from(Oi),columnList:Ri(gi),ast:{type:"show",keyword:"grants",for:r}}}(u),t=e):(Du=t,t=s)):(Du=t,t=s)):(Du=t,t=s);return t}())));var b,v,d;return t}())===s&&(t=function(){var t,e,n;t=Du,(e=sa())===s&&(e=function(){var t,e,n,u;t=Du,"describe"===r.substr(Du,8).toLowerCase()?(e=r.substr(Du,8),Du+=8):(e=s,0===Pu&&Bu(Me));e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="DESCRIBE"):(Du=t,t=s)):(Du=t,t=s);return t}());e!==s&&ri()!==s&&(n=lo())!==s?(u=n,e={tableList:Array.from(Oi),columnList:Ri(gi),ast:{type:"desc",table:u}},t=e):(Du=t,t=s);var u;return t}()),t}function Ku(){var t;return (t=qu())===s&&(t=function(){var r,t,e,n,u;r=Du,(t=Fo())!==s&&ri()!==s&&(e=Ns())!==s&&ri()!==s&&Wo()!==s&&ri()!==s&&(n=Fs())!==s&&ri()!==s?((u=Us())===s&&(u=null),u!==s?(a=n,i=u,(o=e)&&o.forEach(r=>{const{db:t,as:e,table:n}=r;Oi.add(`update::${t}::${n}`);}),a&&a.forEach(r=>gi.add(`update::${r.table}::${r.column}`)),t={tableList:Array.from(Oi),columnList:Ri(gi),ast:{type:"update",table:o,set:a,where:i}},r=t):(Du=r,r=s)):(Du=r,r=s);var o,a,i;return r}())===s&&(t=function(){var r,t,e,n,u,o,a,i;r=Du,(t=Ys())!==s&&ri()!==s?((e=Xo())===s&&(e=null),e!==s&&ri()!==s&&(n=gs())!==s&&ri()!==s?((u=Hs())===s&&(u=null),u!==s&&ri()!==s&&Za()!==s&&ri()!==s&&(o=function(){var r,t,e,n,u,o,a,i;if(r=Du,(t=bo())!==s){for(e=[],n=Du,(u=ri())!==s&&(o=Ka())!==s&&(a=ri())!==s&&(i=bo())!==s?n=u=[u,o,a,i]:(Du=n,n=s);n!==s;)e.push(n),n=Du,(u=ri())!==s&&(o=Ka())!==s&&(a=ri())!==s&&(i=bo())!==s?n=u=[u,o,a,i]:(Du=n,n=s);e!==s?(t=l(t,e),r=t):(Du=r,r=s);}else Du=r,r=s;return r}())!==s&&ri()!==s&&za()!==s&&ri()!==s&&(a=Gs())!==s&&ri()!==s?((i=js())===s&&(i=null),i!==s?(t=function(r,t,e,n,u,s){if(t&&(Oi.add(`insert::${t.db}::${t.table}`),t.as=null),n){let r=t&&t.table||null;Array.isArray(u)&&u.forEach((r,t)=>{if(r.value.length!=n.length)throw new Error("Error: column count doesn't match value count at row "+(t+1))}),n.forEach(t=>gi.add(`insert::${r}::${t}`));}return {tableList:Array.from(Oi),columnList:Ri(gi),ast:{type:r,table:[t],columns:n,values:u,partition:e,on_duplicate_update:s}}}(t,n,u,o,a,i),r=t):(Du=r,r=s)):(Du=r,r=s)):(Du=r,r=s)):(Du=r,r=s);return r}())===s&&(t=function(){var r,t,e,n,u,o;r=Du,(t=Ys())!==s&&ri()!==s&&Xo()!==s&&ri()!==s&&(e=gs())!==s&&ri()!==s?((n=Hs())===s&&(n=null),n!==s&&ri()!==s&&(u=Gs())!==s&&ri()!==s?((o=js())===s&&(o=null),o!==s?(a=t,c=n,l=u,f=o,(i=e)&&(Oi.add(`insert::${i.db}::${i.table}`),gi.add(`insert::${i.table}::(.*)`),i.as=null),t={tableList:Array.from(Oi),columnList:Ri(gi),ast:{type:a,table:[i],columns:null,values:l,partition:c,on_duplicate_update:f}},r=t):(Du=r,r=s)):(Du=r,r=s)):(Du=r,r=s);var a,i,c,l,f;return r}())===s&&(t=function(){var t,e,n,u,o;t=Du,(e=function(){var t,e,n,u;t=Du,"delete"===r.substr(Du,6).toLowerCase()?(e=r.substr(Du,6),Du+=6):(e=s,0===Pu&&Bu(Qt));e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?t=e=[e,n]:(Du=t,t=s)):(Du=t,t=s);return t}())!==s&&ri()!==s?((n=Ns())===s&&(n=null),n!==s&&ri()!==s&&(u=ys())!==s&&ri()!==s?((o=Us())===s&&(o=null),o!==s?(e=function(r,t,e){if(t&&t.forEach(r=>{r.table&&Oi.add(`delete::${r.db}::${r.table}`),gi.add(`delete::${r.table}::(.*)`);}),null===r&&1===t.length){const e=t[0];r=[{db:e.db,table:e.table,as:e.as,addition:!0}];}return {tableList:Array.from(Oi),columnList:Ri(gi),ast:{type:"delete",table:r,from:t,where:e}}}(n,u,o),t=e):(Du=t,t=s)):(Du=t,t=s)):(Du=t,t=s);return t}())===s&&(t=Vu())===s&&(t=function(){var r,t;r=[],t=ai();for(;t!==s;)r.push(t),t=ai();return r}()),t}function qu(){var r,t,e,n,u,o,a,i,c,l;if(r=Du,(t=vs())!==s){for(e=[],n=Du,(u=ri())!==s&&(o=Qo())!==s&&(a=ri())!==s?((i=oa())===s&&(i=null),i!==s&&(c=ri())!==s&&(l=vs())!==s?n=u=[u,o,a,i,c,l]:(Du=n,n=s)):(Du=n,n=s);n!==s;)e.push(n),n=Du,(u=ri())!==s&&(o=Qo())!==s&&(a=ri())!==s?((i=oa())===s&&(i=null),i!==s&&(c=ri())!==s&&(l=vs())!==s?n=u=[u,o,a,i,c,l]:(Du=n,n=s)):(Du=n,n=s);e!==s&&(n=ri())!==s?((u=Ms())===s&&(u=null),u!==s&&(o=ri())!==s?((a=$s())===s&&(a=null),a!==s?(r=t=function(r,t,e,n){let u=r;for(let r=0;r<t.length;r++)u._next=t[r][5],u.union=t[r][3]?"union all":"union",u=u._next;return e&&(r._orderby=e),n&&(r._limit=n),{tableList:Array.from(Oi),columnList:Ri(gi),ast:r}}(t,e,u,a)):(Du=r,r=s)):(Du=r,r=s)):(Du=r,r=s);}else Du=r,r=s;return r}function Zu(){var r,t,e,n;return r=Du,(t=qs())!==s?((e=ua())===s&&(e=sa()),e===s&&(e=null),e!==s?(r=t={column:t,order:(n=e)&&n.toLowerCase()||"asc"}):(Du=r,r=s)):(Du=r,r=s),r===s&&(r=function(){var r,t,e;r=Du,(t=co())!==s&&ri()!==s?((e=ua())===s&&(e=sa()),e===s&&(e=null),e!==s?(t=function(r,t){return {column:r,order:t&&t.toLowerCase()||"asc"}}(t,e),r=t):(Du=r,r=s)):(Du=r,r=s);return r}()),r}function zu(){var t;return (t=Qu())===s&&(t=us())===s&&(t=ss())===s&&(t=function(){var t;(t=function(){var t,e,n,u,o,a;t=Du,(e=os())===s&&(e=null);e!==s&&ri()!==s?("primary key"===r.substr(Du,11).toLowerCase()?(n=r.substr(Du,11),Du+=11):(n=s,0===Pu&&Bu(U)),n!==s&&ri()!==s?((u=ms())===s&&(u=null),u!==s&&ri()!==s&&(o=Cs())!==s&&ri()!==s?((a=Ss())===s&&(a=null),a!==s?(c=n,l=u,f=o,b=a,e={constraint:(i=e)&&i.constraint,definition:f,constraint_type:c.toLowerCase(),keyword:i&&i.keyword,index_type:l,resource:"constraint",index_options:b},t=e):(Du=t,t=s)):(Du=t,t=s)):(Du=t,t=s)):(Du=t,t=s);var i,c,l,f,b;return t}())===s&&(t=function(){var r,t,e,n,u,o,a,i;r=Du,(t=os())===s&&(t=null);t!==s&&ri()!==s&&(e=Xa())!==s&&ri()!==s?((n=Ha())===s&&(n=ja()),n===s&&(n=null),n!==s&&ri()!==s?((u=bo())===s&&(u=null),u!==s&&ri()!==s?((o=ms())===s&&(o=null),o!==s&&ri()!==s&&(a=Cs())!==s&&ri()!==s?((i=Ss())===s&&(i=null),i!==s?(l=e,f=n,b=u,v=o,d=a,L=i,t={constraint:(c=t)&&c.constraint,definition:d,constraint_type:f&&`${l.toLowerCase()} ${f.toLowerCase()}`||l.toLowerCase(),keyword:c&&c.keyword,index_type:v,index:b,resource:"constraint",index_options:L},r=t):(Du=r,r=s)):(Du=r,r=s)):(Du=r,r=s)):(Du=r,r=s)):(Du=r,r=s);var c,l,f,b,v,d,L;return r}())===s&&(t=function(){var t,e,n,u,o,a;t=Du,(e=os())===s&&(e=null);e!==s&&ri()!==s?("foreign key"===r.substr(Du,11).toLowerCase()?(n=r.substr(Du,11),Du+=11):(n=s,0===Pu&&Bu(M)),n!==s&&ri()!==s?((u=bo())===s&&(u=null),u!==s&&ri()!==s&&(o=Cs())!==s&&ri()!==s?((a=as())===s&&(a=null),a!==s?(c=n,l=u,f=o,b=a,e={constraint:(i=e)&&i.constraint,definition:f,constraint_type:c,keyword:i&&i.keyword,index:l,resource:"constraint",reference_definition:b},t=e):(Du=t,t=s)):(Du=t,t=s)):(Du=t,t=s)):(Du=t,t=s);var i,c,l,f,b;return t}());return t}()),t}function Ju(){var t,e,n,u,o,a,i;return t=Du,(e=function(){var e;(e=function(){var t,e,n,u;t=Du,"not null"===r.substr(Du,8).toLowerCase()?(e=r.substr(Du,8),Du+=8):(e=s,0===Pu&&Bu(Gt));e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?t=e=[e,n]:(Du=t,t=s)):(Du=t,t=s);return t}())!==s&&(e={type:"not null",value:"not null"});return e}())===s&&(e=yo()),e!==s&&((i=e)&&!i.value&&(i.value="null"),e={nullable:i}),(t=e)===s&&(t=Du,(e=function(){var r,t;r=Du,Mo()!==s&&ri()!==s?((t=Ao())===s&&(t=qs()),t!==s?(r={type:"default",value:t}):(Du=r,r=s)):(Du=r,r=s);return r}())!==s&&(e={default_val:e}),(t=e)===s&&(t=Du,"auto_increment"===r.substr(Du,14).toLowerCase()?(e=r.substr(Du,14),Du+=14):(e=s,0===Pu&&Bu(f)),e!==s&&(e={auto_increment:e.toLowerCase()}),(t=e)===s&&(t=Du,e=Du,"unique"===r.substr(Du,6).toLowerCase()?(n=r.substr(Du,6),Du+=6):(n=s,0===Pu&&Bu(b)),n!==s&&(u=ri())!==s?("key"===r.substr(Du,3).toLowerCase()?(o=r.substr(Du,3),Du+=3):(o=s,0===Pu&&Bu(v)),o===s&&(o=null),o!==s?e=n=[n,u,o]:(Du=e,e=s)):(Du=e,e=s),e===s&&(e=Du,"primary"===r.substr(Du,7).toLowerCase()?(n=r.substr(Du,7),Du+=7):(n=s,0===Pu&&Bu(d)),n===s&&(n=null),n!==s&&(u=ri())!==s?("key"===r.substr(Du,3).toLowerCase()?(o=r.substr(Du,3),Du+=3):(o=s,0===Pu&&Bu(v)),o!==s?e=n=[n,u,o]:(Du=e,e=s)):(Du=e,e=s)),e!==s&&(e=function(r){const t=[];return r&&t.push(r[0],r[2]),{unique_or_primary:t.filter(r=>r).join(" ").toLowerCase("")}}(e)),(t=e)===s&&(t=Du,(e=ni())!==s&&(e={comment:e}),(t=e)===s&&(t=Du,(e=rs())!==s&&(e={collate:e}),(t=e)===s&&(t=Du,(e=function(){var t,e,n;t=Du,"column_format"===r.substr(Du,13).toLowerCase()?(e=r.substr(Du,13),Du+=13):(e=s,0===Pu&&Bu(L));e!==s&&ri()!==s?("fixed"===r.substr(Du,5).toLowerCase()?(n=r.substr(Du,5),Du+=5):(n=s,0===Pu&&Bu(C)),n===s&&("dynamic"===r.substr(Du,7).toLowerCase()?(n=r.substr(Du,7),Du+=7):(n=s,0===Pu&&Bu(p)),n===s&&("default"===r.substr(Du,7).toLowerCase()?(n=r.substr(Du,7),Du+=7):(n=s,0===Pu&&Bu(w)))),n!==s?(e=function(r,t){return {type:"column_format",value:t.toLowerCase()}}(0,n),t=e):(Du=t,t=s)):(Du=t,t=s);return t}())!==s&&(e={column_format:e}),(t=e)===s&&(t=Du,(e=function(){var t,e,n;t=Du,"storage"===r.substr(Du,7).toLowerCase()?(e=r.substr(Du,7),Du+=7):(e=s,0===Pu&&Bu(E));e!==s&&ri()!==s?("disk"===r.substr(Du,4).toLowerCase()?(n=r.substr(Du,4),Du+=4):(n=s,0===Pu&&Bu(h)),n===s&&("memory"===r.substr(Du,6).toLowerCase()?(n=r.substr(Du,6),Du+=6):(n=s,0===Pu&&Bu(A))),n!==s?(e={type:"storage",value:n.toLowerCase()},t=e):(Du=t,t=s)):(Du=t,t=s);return t}())!==s&&(e={storage:e}),(t=e)===s&&(t=Du,(e=as())!==s&&(e={reference_definition:e}),(t=e)===s&&(t=Du,(e=function(){var t,e,n,u,o,a,i,c;t=Du,(e=os())===s&&(e=null);e!==s&&ri()!==s?("check"===r.substr(Du,5).toLowerCase()?(n=r.substr(Du,5),Du+=5):(n=s,0===Pu&&Bu(D)),n!==s&&ri()!==s&&Za()!==s&&ri()!==s&&(u=qs())!==s&&ri()!==s&&za()!==s&&ri()!==s?(o=Du,(a=va())===s&&(a=null),a!==s&&(i=ri())!==s?("enforced"===r.substr(Du,8).toLowerCase()?(c=r.substr(Du,8),Du+=8):(c=s,0===Pu&&Bu(k)),c!==s?o=a=[a,i,c]:(Du=o,o=s)):(Du=o,o=s),o===s&&(o=null),o!==s?(e=function(r,t,e,n){const u=[];return n&&u.push(n[0],n[2]),{constraint_type:t.toLowerCase(),keyword:r&&r.keyword,constraint:r&&r.constraint,definition:[e],enforced:u.filter(r=>r).join(" ").toLowerCase(),resource:"constraint"}}(e,n,u,o),t=e):(Du=t,t=s)):(Du=t,t=s)):(Du=t,t=s);return t}())!==s&&(e={check:e}),(t=e)===s&&(t=Du,(e=cs())!==s&&(n=ri())!==s?((u=Fa())===s&&(u=null),u!==s&&(o=ri())!==s&&(a=vo())!==s?(t=e=function(r,t,e){return {character_set:{type:r,value:e,symbol:t}}}(e,u,a)):(Du=t,t=s)):(Du=t,t=s))))))))))),t}function Qu(){var r,t,e,n,u,o,a;return r=Du,(t=co())!==s&&ri()!==s&&(e=wi())!==s&&ri()!==s?((n=function(){var r,t,e,n,u,o;if(r=Du,(t=Ju())!==s)if(ri()!==s){for(e=[],n=Du,(u=ri())!==s&&(o=Ju())!==s?n=u=[u,o]:(Du=n,n=s);n!==s;)e.push(n),n=Du,(u=ri())!==s&&(o=Ju())!==s?n=u=[u,o]:(Du=n,n=s);e!==s?(r=t=function(r,t){let e=r;for(let r=0;r<t.length;r++)e={...e,...t[r][1]};return e}(t,e)):(Du=r,r=s);}else Du=r,r=s;else Du=r,r=s;return r}())===s&&(n=null),n!==s?(u=t,o=e,a=n,gi.add(`create::${u.table}::${u.column}`),r=t={column:u,definition:o,resource:"column",...a||{}}):(Du=r,r=s)):(Du=r,r=s),r}function rs(){var t,e,n;return t=Du,function(){var t,e,n,u;t=Du,"collate"===r.substr(Du,7).toLowerCase()?(e=r.substr(Du,7),Du+=7):(e=s,0===Pu&&Bu(Z));e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="COLLATE"):(Du=t,t=s)):(Du=t,t=s);return t}()!==s&&ri()!==s?((e=Fa())===s&&(e=null),e!==s&&ri()!==s&&(n=vo())!==s?(t={type:"collate",symbol:e,value:n}):(Du=t,t=s)):(Du=t,t=s),t}function ts(){var t;return (t=function(){var r,t,e,n,u;r=Du,(t=Pa())!==s&&ri()!==s?((e=Ga())===s&&(e=null),e!==s&&ri()!==s?((n=Ho())===s&&(n=null),n!==s&&ri()!==s&&(u=Qu())!==s?(o=e,a=n,i=u,t={action:"add",...i,keyword:o,if_not_exists:a&&a[0].toLowerCase(),resource:"column",type:"alter"},r=t):(Du=r,r=s)):(Du=r,r=s)):(Du=r,r=s);var o,a,i;return r}())===s&&(t=function(){var r,t,e;r=Du,$o()!==s&&ri()!==s?((t=Ga())===s&&(t=null),t!==s&&ri()!==s&&(e=co())!==s?(r={action:"drop",column:e,keyword:t,resource:"column",type:"alter"}):(Du=r,r=s)):(Du=r,r=s);return r}())===s&&(t=function(){var r,t,e;r=Du,(t=Pa())!==s&&ri()!==s&&(e=us())!==s?(n=e,t={action:"add",type:"alter",...n},r=t):(Du=r,r=s);var n;return r}())===s&&(t=function(){var r,t,e;r=Du,(t=Pa())!==s&&ri()!==s&&(e=ss())!==s?(n=e,t={action:"add",type:"alter",...n},r=t):(Du=r,r=s);var n;return r}())===s&&(t=function(){var r,t,e,n,u;r=Du,(t=Yo())!==s&&ri()!==s&&Ga()!==s&&ri()!==s&&(e=co())!==s&&ri()!==s?((n=Do())===s&&(n=Vo()),n===s&&(n=null),n!==s&&ri()!==s&&(u=co())!==s?(a=u,t={action:"rename",type:"alter",resource:"column",keyword:"column",old_column:e,prefix:(o=n)&&o[0].toLowerCase(),column:a},r=t):(Du=r,r=s)):(Du=r,r=s);var o,a;return r}())===s&&(t=function(){var r,t,e,n;r=Du,(t=Yo())!==s&&ri()!==s?((e=Do())===s&&(e=Vo()),e===s&&(e=null),e!==s&&ri()!==s&&(n=lo())!==s?(o=n,t={action:"rename",type:"alter",resource:"table",keyword:(u=e)&&u[0].toLowerCase(),table:o},r=t):(Du=r,r=s)):(Du=r,r=s);var u,o;return r}())===s&&(t=es())===s&&(t=ns())===s&&(t=function(){var t,e,n,u,o,a,i,c,l;t=Du,"change"===r.substr(Du,6).toLowerCase()?(e=r.substr(Du,6),Du+=6):(e=s,0===Pu&&Bu(O));e!==s&&ri()!==s?((n=Ga())===s&&(n=null),n!==s&&ri()!==s&&(u=co())!==s&&ri()!==s&&(o=Qu())!==s&&ri()!==s?(a=Du,"first"===r.substr(Du,5).toLowerCase()?(i=r.substr(Du,5),Du+=5):(i=s,0===Pu&&Bu(g)),i===s&&("after"===r.substr(Du,5).toLowerCase()?(i=r.substr(Du,5),Du+=5):(i=s,0===Pu&&Bu(x))),i!==s&&(c=ri())!==s&&(l=co())!==s?a=i=[i,c,l]:(Du=a,a=s),a===s&&(a=null),a!==s?(f=n,b=o,v=a,e={action:"change",old_column:u,...b,keyword:f,resource:"column",type:"alter",first_after:v&&{keyword:v[0],column:v[2]}},t=e):(Du=t,t=s)):(Du=t,t=s)):(Du=t,t=s);var f,b,v;return t}()),t}function es(){var t,e,n,u;return t=Du,"algorithm"===r.substr(Du,9).toLowerCase()?(e=r.substr(Du,9),Du+=9):(e=s,0===Pu&&Bu(y)),e!==s&&ri()!==s?((n=Fa())===s&&(n=null),n!==s&&ri()!==s?("default"===r.substr(Du,7).toLowerCase()?(u=r.substr(Du,7),Du+=7):(u=s,0===Pu&&Bu(w)),u===s&&("instant"===r.substr(Du,7).toLowerCase()?(u=r.substr(Du,7),Du+=7):(u=s,0===Pu&&Bu(T)),u===s&&("inplace"===r.substr(Du,7).toLowerCase()?(u=r.substr(Du,7),Du+=7):(u=s,0===Pu&&Bu(m)),u===s&&("copy"===r.substr(Du,4).toLowerCase()?(u=r.substr(Du,4),Du+=4):(u=s,0===Pu&&Bu(S))))),u!==s?(t=e={type:"alter",keyword:"algorithm",resource:"algorithm",symbol:n,algorithm:u}):(Du=t,t=s)):(Du=t,t=s)):(Du=t,t=s),t}function ns(){var t,e,n,u;return t=Du,"lock"===r.substr(Du,4).toLowerCase()?(e=r.substr(Du,4),Du+=4):(e=s,0===Pu&&Bu(I)),e!==s&&ri()!==s?((n=Fa())===s&&(n=null),n!==s&&ri()!==s?("default"===r.substr(Du,7).toLowerCase()?(u=r.substr(Du,7),Du+=7):(u=s,0===Pu&&Bu(w)),u===s&&("none"===r.substr(Du,4).toLowerCase()?(u=r.substr(Du,4),Du+=4):(u=s,0===Pu&&Bu(N)),u===s&&("shared"===r.substr(Du,6).toLowerCase()?(u=r.substr(Du,6),Du+=6):(u=s,0===Pu&&Bu(R)),u===s&&("exclusive"===r.substr(Du,9).toLowerCase()?(u=r.substr(Du,9),Du+=9):(u=s,0===Pu&&Bu(_))))),u!==s?(t=e={type:"alter",keyword:"lock",resource:"lock",symbol:n,lock:u}):(Du=t,t=s)):(Du=t,t=s)):(Du=t,t=s),t}function us(){var r,t,e,n,u,o,a,i;return r=Du,(t=Ha())===s&&(t=ja()),t!==s&&ri()!==s?((e=bo())===s&&(e=null),e!==s&&ri()!==s?((n=ms())===s&&(n=null),n!==s&&ri()!==s&&(u=Cs())!==s&&ri()!==s?((o=Ss())===s&&(o=null),o!==s&&ri()!==s?(a=n,i=o,r=t={index:e,definition:u,keyword:t.toLowerCase(),index_type:a,resource:"index",index_options:i}):(Du=r,r=s)):(Du=r,r=s)):(Du=r,r=s)):(Du=r,r=s),r}function ss(){var r,t,e,n,u,o,a,i,c;return r=Du,(t=Ya())===s&&(t=Ba()),t!==s&&ri()!==s?((e=Ha())===s&&(e=ja()),e===s&&(e=null),e!==s&&ri()!==s?((n=bo())===s&&(n=null),n!==s&&ri()!==s&&(u=Cs())!==s&&ri()!==s?((o=Ss())===s&&(o=null),o!==s&&ri()!==s?(a=t,c=o,r=t={index:n,definition:u,keyword:(i=e)&&`${a.toLowerCase()} ${i.toLowerCase()}`||a.toLowerCase(),index_options:c,resource:"index"}):(Du=r,r=s)):(Du=r,r=s)):(Du=r,r=s)):(Du=r,r=s),r}function os(){var t,e,n,u;return t=Du,(e=function(){var t,e,n,u;t=Du,"constraint"===r.substr(Du,10).toLowerCase()?(e=r.substr(Du,10),Du+=10):(e=s,0===Pu&&Bu(iu));e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="CONSTRAINT"):(Du=t,t=s)):(Du=t,t=s);return t}())!==s&&ri()!==s?((n=lo())===s&&(n=null),n!==s?(u=n,t=e={keyword:e.toLowerCase(),constraint:u}):(Du=t,t=s)):(Du=t,t=s),t}function as(){var t,e,n,u,o,a,i,c,l,f;return t=Du,(e=function(){var t,e,n,u;t=Du,"references"===r.substr(Du,10).toLowerCase()?(e=r.substr(Du,10),Du+=10):(e=s,0===Pu&&Bu(cu));e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="REFERENCES"):(Du=t,t=s)):(Du=t,t=s);return t}())!==s&&ri()!==s&&(n=Ns())!==s&&ri()!==s&&(u=Cs())!==s&&ri()!==s?("match full"===r.substr(Du,10).toLowerCase()?(o=r.substr(Du,10),Du+=10):(o=s,0===Pu&&Bu($)),o===s&&("match partial"===r.substr(Du,13).toLowerCase()?(o=r.substr(Du,13),Du+=13):(o=s,0===Pu&&Bu(F)),o===s&&("match simple"===r.substr(Du,12).toLowerCase()?(o=r.substr(Du,12),Du+=12):(o=s,0===Pu&&Bu(P)))),o===s&&(o=null),o!==s&&ri()!==s?((a=is())===s&&(a=null),a!==s&&ri()!==s?((i=is())===s&&(i=null),i!==s?(c=o,l=a,f=i,t=e={definition:u,table:n,keyword:e.toLowerCase(),match:c&&c.toLowerCase(),on_delete:l,on_update:f}):(Du=t,t=s)):(Du=t,t=s)):(Du=t,t=s)):(Du=t,t=s),t}function is(){var t,e,n,u;return t=Du,"on delete"===r.substr(Du,9).toLowerCase()?(e=r.substr(Du,9),Du+=9):(e=s,0===Pu&&Bu(G)),e===s&&("on update"===r.substr(Du,9).toLowerCase()?(e=r.substr(Du,9),Du+=9):(e=s,0===Pu&&Bu(H))),e!==s&&ri()!==s&&(n=function(){var e;"restrict"===r.substr(Du,8).toLowerCase()?(e=r.substr(Du,8),Du+=8):(e=s,0===Pu&&Bu(j));e===s&&("cascade"===r.substr(Du,7).toLowerCase()?(e=r.substr(Du,7),Du+=7):(e=s,0===Pu&&Bu(Y)),e===s&&("set null"===r.substr(Du,8).toLowerCase()?(e=r.substr(Du,8),Du+=8):(e=s,0===Pu&&Bu(B)),e===s&&("no action"===r.substr(Du,9).toLowerCase()?(e=r.substr(Du,9),Du+=9):(e=s,0===Pu&&Bu(X)),e===s&&("set default"===r.substr(Du,11).toLowerCase()?(e=r.substr(Du,11),Du+=11):(e=s,0===Pu&&Bu(W))))));e!==s&&(e=e.toLowerCase());return e}())!==s?(u=n,t=e={type:e.toLowerCase(),value:u}):(Du=t,t=s),t}function cs(){var t,e,n;return t=Du,"character"===r.substr(Du,9).toLowerCase()?(e=r.substr(Du,9),Du+=9):(e=s,0===Pu&&Bu(V)),e!==s&&ri()!==s?("set"===r.substr(Du,3).toLowerCase()?(n=r.substr(Du,3),Du+=3):(n=s,0===Pu&&Bu(K)),n!==s?(t=e="CHARACTER SET"):(Du=t,t=s)):(Du=t,t=s),t}function ls(){var t,e,n,u,o,a,i,c,l;return t=Du,(e=Mo())===s&&(e=null),e!==s&&ri()!==s?((n=cs())===s&&("charset"===r.substr(Du,7).toLowerCase()?(n=r.substr(Du,7),Du+=7):(n=s,0===Pu&&Bu(q)),n===s&&("collate"===r.substr(Du,7).toLowerCase()?(n=r.substr(Du,7),Du+=7):(n=s,0===Pu&&Bu(Z)))),n!==s&&ri()!==s?((u=Fa())===s&&(u=null),u!==s&&ri()!==s&&(o=vo())!==s?(i=n,c=u,l=o,t=e={keyword:(a=e)&&`${a[0].toLowerCase()} ${i.toLowerCase()}`||i.toLowerCase(),symbol:c,value:l}):(Du=t,t=s)):(Du=t,t=s)):(Du=t,t=s),t}function fs(){var t,e,n,u,o,a,i,c,l;return t=Du,"auto_increment"===r.substr(Du,14).toLowerCase()?(e=r.substr(Du,14),Du+=14):(e=s,0===Pu&&Bu(f)),e===s&&("avg_row_length"===r.substr(Du,14).toLowerCase()?(e=r.substr(Du,14),Du+=14):(e=s,0===Pu&&Bu(z)),e===s&&("key_block_size"===r.substr(Du,14).toLowerCase()?(e=r.substr(Du,14),Du+=14):(e=s,0===Pu&&Bu(J)),e===s&&("max_rows"===r.substr(Du,8).toLowerCase()?(e=r.substr(Du,8),Du+=8):(e=s,0===Pu&&Bu(Q)),e===s&&("min_rows"===r.substr(Du,8).toLowerCase()?(e=r.substr(Du,8),Du+=8):(e=s,0===Pu&&Bu(rr)),e===s&&("stats_sample_pages"===r.substr(Du,18).toLowerCase()?(e=r.substr(Du,18),Du+=18):(e=s,0===Pu&&Bu(tr))))))),e!==s&&ri()!==s?((n=Fa())===s&&(n=null),n!==s&&ri()!==s&&(u=No())!==s?(c=n,l=u,t=e={keyword:e.toLowerCase(),symbol:c,value:l.value}):(Du=t,t=s)):(Du=t,t=s),t===s&&(t=ls())===s&&(t=Du,(e=Wa())===s&&("connection"===r.substr(Du,10).toLowerCase()?(e=r.substr(Du,10),Du+=10):(e=s,0===Pu&&Bu(er))),e!==s&&ri()!==s?((n=Fa())===s&&(n=null),n!==s&&ri()!==s&&(u=To())!==s?(t=e=function(r,t,e){return {keyword:r.toLowerCase(),symbol:t,value:`'${e.value}'`}}(e,n,u)):(Du=t,t=s)):(Du=t,t=s),t===s&&(t=Du,"compression"===r.substr(Du,11).toLowerCase()?(e=r.substr(Du,11),Du+=11):(e=s,0===Pu&&Bu(nr)),e!==s&&ri()!==s?((n=Fa())===s&&(n=null),n!==s&&ri()!==s?(u=Du,39===r.charCodeAt(Du)?(o="'",Du++):(o=s,0===Pu&&Bu(ur)),o!==s?("zlib"===r.substr(Du,4).toLowerCase()?(a=r.substr(Du,4),Du+=4):(a=s,0===Pu&&Bu(sr)),a===s&&("lz4"===r.substr(Du,3).toLowerCase()?(a=r.substr(Du,3),Du+=3):(a=s,0===Pu&&Bu(or)),a===s&&("none"===r.substr(Du,4).toLowerCase()?(a=r.substr(Du,4),Du+=4):(a=s,0===Pu&&Bu(N)))),a!==s?(39===r.charCodeAt(Du)?(i="'",Du++):(i=s,0===Pu&&Bu(ur)),i!==s?u=o=[o,a,i]:(Du=u,u=s)):(Du=u,u=s)):(Du=u,u=s),u!==s?(t=e=function(r,t,e){return {keyword:r.toLowerCase(),symbol:t,value:e.join("").toUpperCase()}}(e,n,u)):(Du=t,t=s)):(Du=t,t=s)):(Du=t,t=s),t===s&&(t=Du,"engine"===r.substr(Du,6).toLowerCase()?(e=r.substr(Du,6),Du+=6):(e=s,0===Pu&&Bu(ar)),e!==s&&ri()!==s?((n=Fa())===s&&(n=null),n!==s&&ri()!==s&&(u=vo())!==s?(t=e=function(r,t,e){return {keyword:r.toLowerCase(),symbol:t,value:e.toUpperCase()}}(e,n,u)):(Du=t,t=s)):(Du=t,t=s)))),t}function bs(){var t,e,n,u,o;return t=Du,(e=_s())!==s&&ri()!==s&&(n=function(){var t,e,n;return t=Du,"read"===r.substr(Du,4).toLowerCase()?(e=r.substr(Du,4),Du+=4):(e=s,0===Pu&&Bu(pr)),e!==s&&ri()!==s?("local"===r.substr(Du,5).toLowerCase()?(n=r.substr(Du,5),Du+=5):(n=s,0===Pu&&Bu(wr)),n===s&&(n=null),n!==s?(t=e={type:"read",suffix:n&&"local"}):(Du=t,t=s)):(Du=t,t=s),t===s&&(t=Du,"low_priority"===r.substr(Du,12).toLowerCase()?(e=r.substr(Du,12),Du+=12):(e=s,0===Pu&&Bu(Er)),e===s&&(e=null),e!==s&&ri()!==s?("write"===r.substr(Du,5).toLowerCase()?(n=r.substr(Du,5),Du+=5):(n=s,0===Pu&&Bu(hr)),n!==s?(t=e={type:"write",prefix:e&&"low_priority"}):(Du=t,t=s)):(Du=t,t=s)),t}())!==s?(u=e,o=n,Oi.add(`lock::${u.db}::${u.table}`),t=e={table:u,lock_type:o}):(Du=t,t=s),t}function vs(){var t,e,n,u,o,a,i;return (t=ps())===s&&(t=Du,e=Du,40===r.charCodeAt(Du)?(n="(",Du++):(n=s,0===Pu&&Bu(Ar)),n!==s&&(u=ri())!==s&&(o=vs())!==s&&(a=ri())!==s?(41===r.charCodeAt(Du)?(i=")",Du++):(i=s,0===Pu&&Bu(yr)),i!==s?e=n=[n,u,o,a,i]:(Du=e,e=s)):(Du=e,e=s),e!==s&&(e={...e[2],parentheses_symbol:!0}),t=e),t}function ds(){var t,e,n,u,o,a,i,c,f;if(t=Du,ea()!==s)if(ri()!==s)if((e=Ls())!==s){for(n=[],u=Du,(o=ri())!==s&&(a=Ka())!==s&&(i=ri())!==s&&(c=Ls())!==s?u=o=[o,a,i,c]:(Du=u,u=s);u!==s;)n.push(u),u=Du,(o=ri())!==s&&(a=Ka())!==s&&(i=ri())!==s&&(c=Ls())!==s?u=o=[o,a,i,c]:(Du=u,u=s);n!==s?(t=l(e,n)):(Du=t,t=s);}else Du=t,t=s;else Du=t,t=s;else Du=t,t=s;return t===s&&(t=Du,ri()!==s&&ea()!==s&&(e=ri())!==s&&(n=function(){var t,e,n,u;t=Du,"RECURSIVE"===r.substr(Du,9)?(e="RECURSIVE",Du+=9):(e=s,0===Pu&&Bu(te));e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?t=e=[e,n]:(Du=t,t=s)):(Du=t,t=s);return t}())!==s&&(u=ri())!==s&&(o=Ls())!==s?((f=o).recursive=!0,t=[f]):(Du=t,t=s)),t}function Ls(){var r,t,e,n,u;return r=Du,(t=To())===s&&(t=vo()),t!==s&&ri()!==s?((e=Cs())===s&&(e=null),e!==s&&ri()!==s&&Vo()!==s&&ri()!==s&&Za()!==s&&ri()!==s&&(n=qu())!==s&&ri()!==s&&za()!==s?("string"==typeof(u=t)&&(u={type:"default",value:u}),r=t={name:u,stmt:n,columns:e}):(Du=r,r=s)):(Du=r,r=s),r}function Cs(){var r,t,e,n,u,o,a,i;if(r=Du,Za()!==s)if(ri()!==s)if((t=bo())!==s){for(e=[],n=Du,(u=ri())!==s&&(o=Ka())!==s&&(a=ri())!==s&&(i=bo())!==s?n=u=[u,o,a,i]:(Du=n,n=s);n!==s;)e.push(n),n=Du,(u=ri())!==s&&(o=Ka())!==s&&(a=ri())!==s&&(i=bo())!==s?n=u=[u,o,a,i]:(Du=n,n=s);e!==s&&(n=ri())!==s&&(u=za())!==s?(r=l(t,e)):(Du=r,r=s);}else Du=r,r=s;else Du=r,r=s;else Du=r,r=s;return r}function ps(){var t,e,n,u,o,a,i,c,l,f,b;return t=Du,ri()!==s?((e=ds())===s&&(e=null),e!==s&&ri()!==s&&function(){var t,e,n,u;t=Du,"select"===r.substr(Du,6).toLowerCase()?(e=r.substr(Du,6),Du+=6):(e=s,0===Pu&&Bu(Kt));e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?t=e=[e,n]:(Du=t,t=s)):(Du=t,t=s);return t}()!==s&&ti()!==s?((n=function(){var r,t,e,n,u,o;if(r=Du,(t=ws())!==s){for(e=[],n=Du,(u=ri())!==s&&(o=ws())!==s?n=u=[u,o]:(Du=n,n=s);n!==s;)e.push(n),n=Du,(u=ri())!==s&&(o=ws())!==s?n=u=[u,o]:(Du=n,n=s);e!==s?(t=function(r,t){const e=[r];for(let r=0,n=t.length;r<n;++r)e.push(t[r][1]);return e}(t,e),r=t):(Du=r,r=s);}else Du=r,r=s;return r}())===s&&(n=null),n!==s&&ri()!==s?((u=aa())===s&&(u=null),u!==s&&ri()!==s&&(o=Es())!==s&&ri()!==s?((a=ys())===s&&(a=null),a!==s&&ri()!==s?((i=Us())===s&&(i=null),i!==s&&ri()!==s?((c=function(){var t,e,n;t=Du,(e=function(){var t,e,n,u;t=Du,"group"===r.substr(Du,5).toLowerCase()?(e=r.substr(Du,5),Du+=5):(e=s,0===Pu&&Bu(Ie));e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?t=e=[e,n]:(Du=t,t=s)):(Du=t,t=s);return t}())!==s&&ri()!==s&&na()!==s&&ri()!==s&&(n=Xs())!==s?(e=n.value,t=e):(Du=t,t=s);return t}())===s&&(c=null),c!==s&&ri()!==s?((l=function(){var t,e;t=Du,function(){var t,e,n,u;t=Du,"having"===r.substr(Du,6).toLowerCase()?(e=r.substr(Du,6),Du+=6):(e=s,0===Pu&&Bu(_e));e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?t=e=[e,n]:(Du=t,t=s)):(Du=t,t=s);return t}()!==s&&ri()!==s&&(e=qs())!==s?(t=e):(Du=t,t=s);return t}())===s&&(l=null),l!==s&&ri()!==s?((f=Ms())===s&&(f=null),f!==s&&ri()!==s?((b=$s())===s&&(b=null),b!==s?(t=function(r,t,e,n,u,s,o,a,i,c){return u&&u.forEach(r=>r.table&&Oi.add(`select::${r.db}::${r.table}`)),{with:r,type:"select",options:t,distinct:e,columns:n,from:u,where:s,groupby:o,having:a,orderby:i,limit:c}}(e,n,u,o,a,i,c,l,f,b)):(Du=t,t=s)):(Du=t,t=s)):(Du=t,t=s)):(Du=t,t=s)):(Du=t,t=s)):(Du=t,t=s)):(Du=t,t=s)):(Du=t,t=s)):(Du=t,t=s)):(Du=t,t=s),t}function ws(){var e;return (e=function(){var t;"sql_calc_found_rows"===r.substr(Du,19).toLowerCase()?(t=r.substr(Du,19),Du+=19):(t=s,0===Pu&&Bu(lu));return t}())===s&&((e=function(){var t;"sql_cache"===r.substr(Du,9).toLowerCase()?(t=r.substr(Du,9),Du+=9):(t=s,0===Pu&&Bu(fu));return t}())===s&&(e=function(){var t;"sql_no_cache"===r.substr(Du,12).toLowerCase()?(t=r.substr(Du,12),Du+=12):(t=s,0===Pu&&Bu(bu));return t}()),e===s&&(e=function(){var t;"sql_big_result"===r.substr(Du,14).toLowerCase()?(t=r.substr(Du,14),Du+=14):(t=s,0===Pu&&Bu(du));return t}())===s&&(e=function(){var t;"sql_small_result"===r.substr(Du,16).toLowerCase()?(t=r.substr(Du,16),Du+=16):(t=s,0===Pu&&Bu(vu));return t}())===s&&(e=function(){var t;"sql_buffer_result"===r.substr(Du,17).toLowerCase()?(t=r.substr(Du,17),Du+=17):(t=s,0===Pu&&Bu(Lu));return t}())),e!==s&&(e=e),e}function Es(){var r,t,e,n,u,o,a,i,c,f;if(r=Du,(t=oa())===s&&(t=Du,(e=qa())!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?t=e=[e,n]:(Du=t,t=s)):(Du=t,t=s),t===s&&(t=qa())),t!==s){for(e=[],n=Du,(u=ri())!==s&&(o=Ka())!==s&&(a=ri())!==s&&(i=hs())!==s?n=u=[u,o,a,i]:(Du=n,n=s);n!==s;)e.push(n),n=Du,(u=ri())!==s&&(o=Ka())!==s&&(a=ri())!==s&&(i=hs())!==s?n=u=[u,o,a,i]:(Du=n,n=s);e!==s?(c=t,f=e,gi.add("select::null::(.*)"),r=t=f&&f.length>0?(c[0]={expr:{type:"column_ref",table:null,column:"*"},as:null},Si(c[0],f)):c[0]):(Du=r,r=s);}else Du=r,r=s;if(r===s)if(r=Du,(t=hs())!==s){for(e=[],n=Du,(u=ri())!==s&&(o=Ka())!==s&&(a=ri())!==s&&(i=hs())!==s?n=u=[u,o,a,i]:(Du=n,n=s);n!==s;)e.push(n),n=Du,(u=ri())!==s&&(o=Ka())!==s&&(a=ri())!==s&&(i=hs())!==s?n=u=[u,o,a,i]:(Du=n,n=s);e!==s?(r=t=l(t,e)):(Du=r,r=s);}else Du=r,r=s;return r}function hs(){var r,t,e,n;return r=Du,(t=lo())!==s&&ri()!==s&&(e=Va())!==s&&ri()!==s&&qa()!==s?(n=t,gi.add(`select::${n}::(.*)`),r=t={expr:{type:"column_ref",table:n,column:"*"},as:null}):(Du=r,r=s),r===s&&(r=Du,(t=qs())!==s&&ri()!==s?((e=As())===s&&(e=null),e!==s?(r=t={expr:t,as:e}):(Du=r,r=s)):(Du=r,r=s)),r}function As(){var r,t,e;return r=Du,(t=Vo())!==s&&ri()!==s&&(e=function(){var r,t;r=Du,(t=vo())!==s?((function(r){if(!0===Ai[r.toUpperCase()])throw new Error("Error: "+JSON.stringify(r)+" is a reserved word, can not as alias clause");return !1}(t)?s:void 0)!==s?(r=t=t):(Du=r,r=s)):(Du=r,r=s);r===s&&(r=Du,(t=fo())!==s&&(t=t),r=t);return r}())!==s?(r=t=e):(Du=r,r=s),r===s&&(r=Du,(t=Vo())===s&&(t=null),t!==s&&ri()!==s&&(e=lo())!==s?(r=t=e):(Du=r,r=s)),r}function ys(){var t,e;return t=Du,function(){var t,e,n,u;t=Du,"from"===r.substr(Du,4).toLowerCase()?(e=r.substr(Du,4),Du+=4):(e=s,0===Pu&&Bu(ae));e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?t=e=[e,n]:(Du=t,t=s)):(Du=t,t=s);return t}()!==s&&ri()!==s&&(e=Ns())!==s?(t=e):(Du=t,t=s),t}function Ts(){var r,t,e;return r=Du,(t=gs())!==s&&ri()!==s&&Do()!==s&&ri()!==s&&(e=gs())!==s?(r=t=[t,e]):(Du=r,r=s),r}function ms(){var t,e;return t=Du,ta()!==s&&ri()!==s?("btree"===r.substr(Du,5).toLowerCase()?(e=r.substr(Du,5),Du+=5):(e=s,0===Pu&&Bu(Tr)),e===s&&("hash"===r.substr(Du,4).toLowerCase()?(e=r.substr(Du,4),Du+=4):(e=s,0===Pu&&Bu(mr))),e!==s?(t={keyword:"using",type:e.toLowerCase()}):(Du=t,t=s)):(Du=t,t=s),t}function Ss(){var r,t,e,n,u,o;if(r=Du,(t=Is())!==s){for(e=[],n=Du,(u=ri())!==s&&(o=Is())!==s?n=u=[u,o]:(Du=n,n=s);n!==s;)e.push(n),n=Du,(u=ri())!==s&&(o=Is())!==s?n=u=[u,o]:(Du=n,n=s);e!==s?(r=t=function(r,t){const e=[r];for(let r=0;r<t.length;r++)e.push(t[r][1]);return e}(t,e)):(Du=r,r=s);}else Du=r,r=s;return r}function Is(){var t,e,n,u,o,a;return t=Du,(e=function(){var t,e,n,u;t=Du,"key_block_size"===r.substr(Du,14).toLowerCase()?(e=r.substr(Du,14),Du+=14):(e=s,0===Pu&&Bu(J));e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="KEY_BLOCK_SIZE"):(Du=t,t=s)):(Du=t,t=s);return t}())!==s&&ri()!==s?((n=Fa())===s&&(n=null),n!==s&&ri()!==s&&(u=No())!==s?(o=n,a=u,t=e={type:e.toLowerCase(),symbol:o,expr:a}):(Du=t,t=s)):(Du=t,t=s),t===s&&(t=ms())===s&&(t=Du,"with"===r.substr(Du,4).toLowerCase()?(e=r.substr(Du,4),Du+=4):(e=s,0===Pu&&Bu(Sr)),e!==s&&ri()!==s?("parser"===r.substr(Du,6).toLowerCase()?(n=r.substr(Du,6),Du+=6):(n=s,0===Pu&&Bu(Ir)),n!==s&&ri()!==s&&(u=vo())!==s?(t=e={type:"with parser",expr:u}):(Du=t,t=s)):(Du=t,t=s),t===s&&(t=Du,"visible"===r.substr(Du,7).toLowerCase()?(e=r.substr(Du,7),Du+=7):(e=s,0===Pu&&Bu(Nr)),e===s&&("invisible"===r.substr(Du,9).toLowerCase()?(e=r.substr(Du,9),Du+=9):(e=s,0===Pu&&Bu(Rr))),e!==s&&(e=function(r){return {type:r.toLowerCase(),expr:r.toLowerCase()}}(e)),(t=e)===s&&(t=ni()))),t}function Ns(){var r,t,e,n;if(r=Du,(t=_s())!==s){for(e=[],n=Rs();n!==s;)e.push(n),n=Rs();e!==s?(r=t=_r(t,e)):(Du=r,r=s);}else Du=r,r=s;return r}function Rs(){var r,t,e;return r=Du,ri()!==s&&(t=Ka())!==s&&ri()!==s&&(e=_s())!==s?(r=e):(Du=r,r=s),r===s&&(r=Du,ri()!==s&&(t=function(){var r,t,e,n,u,o,a,i,c,l,f;if(r=Du,(t=Os())!==s)if(ri()!==s)if((e=_s())!==s)if(ri()!==s)if((n=ta())!==s)if(ri()!==s)if(Za()!==s)if(ri()!==s)if((u=vo())!==s){for(o=[],a=Du,(i=ri())!==s&&(c=Ka())!==s&&(l=ri())!==s&&(f=vo())!==s?a=i=[i,c,l,f]:(Du=a,a=s);a!==s;)o.push(a),a=Du,(i=ri())!==s&&(c=Ka())!==s&&(l=ri())!==s&&(f=vo())!==s?a=i=[i,c,l,f]:(Du=a,a=s);o!==s&&(a=ri())!==s&&(i=za())!==s?(b=t,d=u,L=o,(v=e).join=b,v.using=Si(d,L),r=t=v):(Du=r,r=s);}else Du=r,r=s;else Du=r,r=s;else Du=r,r=s;else Du=r,r=s;else Du=r,r=s;else Du=r,r=s;else Du=r,r=s;else Du=r,r=s;else Du=r,r=s;var b,v,d,L;r===s&&(r=Du,(t=Os())!==s&&ri()!==s&&(e=_s())!==s&&ri()!==s?((n=xs())===s&&(n=null),n!==s?(t=function(r,t,e){return t.join=r,t.on=e,t}(t,e,n),r=t):(Du=r,r=s)):(Du=r,r=s),r===s&&(r=Du,(t=Os())!==s&&ri()!==s&&(e=Za())!==s&&ri()!==s&&(n=qu())!==s&&ri()!==s&&za()!==s&&ri()!==s?((u=As())===s&&(u=null),u!==s&&(o=ri())!==s?((a=xs())===s&&(a=null),a!==s?(t=function(r,t,e,n){return t.parentheses=!0,{expr:t,as:e,join:r,on:n}}(t,n,u,a),r=t):(Du=r,r=s)):(Du=r,r=s)):(Du=r,r=s)));return r}())!==s?(r=t):(Du=r,r=s)),r}function _s(){var t,e,n,u,o,a;return t=Du,(e=function(){var t;"dual"===r.substr(Du,4).toLowerCase()?(t=r.substr(Du,4),Du+=4):(t=s,0===Pu&&Bu(tu));return t}())!==s&&(e={type:"dual"}),(t=e)===s&&(t=Du,(e=gs())!==s&&ri()!==s?((n=As())===s&&(n=null),n!==s?(a=n,t=e="var"===(o=e).type?(o.as=a,o):{db:o.db,table:o.table,as:a}):(Du=t,t=s)):(Du=t,t=s),t===s&&(t=Du,(e=Za())!==s&&ri()!==s&&(n=qu())!==s&&ri()!==s&&za()!==s&&ri()!==s?((u=As())===s&&(u=null),u!==s?(t=e=function(r,t){return r.parentheses=!0,{expr:r,as:t}}(n,u)):(Du=t,t=s)):(Du=t,t=s))),t}function Os(){var t,e,n,u;return t=Du,(e=function(){var t,e,n,u;t=Du,"left"===r.substr(Du,4).toLowerCase()?(e=r.substr(Du,4),Du+=4):(e=s,0===Pu&&Bu(Le));e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?t=e=[e,n]:(Du=t,t=s)):(Du=t,t=s);return t}())!==s&&(n=ri())!==s?((u=Jo())===s&&(u=null),u!==s&&ri()!==s&&zo()!==s?(t=e="LEFT JOIN"):(Du=t,t=s)):(Du=t,t=s),t===s&&(t=Du,(e=function(){var t,e,n,u;t=Du,"right"===r.substr(Du,5).toLowerCase()?(e=r.substr(Du,5),Du+=5):(e=s,0===Pu&&Bu(Ce));e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?t=e=[e,n]:(Du=t,t=s)):(Du=t,t=s);return t}())!==s&&(n=ri())!==s?((u=Jo())===s&&(u=null),u!==s&&ri()!==s&&zo()!==s?(t=e="RIGHT JOIN"):(Du=t,t=s)):(Du=t,t=s),t===s&&(t=Du,(e=function(){var t,e,n,u;t=Du,"full"===r.substr(Du,4).toLowerCase()?(e=r.substr(Du,4),Du+=4):(e=s,0===Pu&&Bu(pe));e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?t=e=[e,n]:(Du=t,t=s)):(Du=t,t=s);return t}())!==s&&(n=ri())!==s?((u=Jo())===s&&(u=null),u!==s&&ri()!==s&&zo()!==s?(t=e="FULL JOIN"):(Du=t,t=s)):(Du=t,t=s),t===s&&(t=Du,e=Du,(n=function(){var t,e,n,u;t=Du,"inner"===r.substr(Du,5).toLowerCase()?(e=r.substr(Du,5),Du+=5):(e=s,0===Pu&&Bu(we));e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?t=e=[e,n]:(Du=t,t=s)):(Du=t,t=s);return t}())!==s&&(u=ri())!==s?e=n=[n,u]:(Du=e,e=s),e===s&&(e=null),e!==s&&(n=zo())!==s?(t=e="INNER JOIN"):(Du=t,t=s)))),t}function gs(){var r,t,e,n,u,o,a,i;return r=Du,(t=lo())!==s?(e=Du,(n=ri())!==s&&(u=Va())!==s&&(o=ri())!==s&&(a=lo())!==s?e=n=[n,u,o,a]:(Du=e,e=s),e===s&&(e=null),e!==s?(r=t=function(r,t){const e={db:null,table:r};return null!==t&&(e.db=r,e.table=t[3]),e}(t,e)):(Du=r,r=s)):(Du=r,r=s),r===s&&(r=Du,(t=Ci())!==s&&((i=t).db=null,i.table=i.name,t=i),r=t),r}function xs(){var r,t;return r=Du,Zo()!==s&&ri()!==s&&(t=qs())!==s?(r=t):(Du=r,r=s),r}function Us(){var t,e;return t=Du,function(){var t,e,n,u;t=Du,"where"===r.substr(Du,5).toLowerCase()?(e=r.substr(Du,5),Du+=5):(e=s,0===Pu&&Bu(Se));e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?t=e=[e,n]:(Du=t,t=s)):(Du=t,t=s);return t}()!==s&&ri()!==s&&(e=Zs())!==s?(t=e):(Du=t,t=s),t}function Ms(){var t,e;return t=Du,function(){var t,e,n,u;t=Du,"order"===r.substr(Du,5).toLowerCase()?(e=r.substr(Du,5),Du+=5):(e=s,0===Pu&&Bu(Re));e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?t=e=[e,n]:(Du=t,t=s)):(Du=t,t=s);return t}()!==s&&ri()!==s&&na()!==s&&ri()!==s&&(e=function(){var r,t,e,n,u,o,a,i;if(r=Du,(t=Ds())!==s){for(e=[],n=Du,(u=ri())!==s&&(o=Ka())!==s&&(a=ri())!==s&&(i=Ds())!==s?n=u=[u,o,a,i]:(Du=n,n=s);n!==s;)e.push(n),n=Du,(u=ri())!==s&&(o=Ka())!==s&&(a=ri())!==s&&(i=Ds())!==s?n=u=[u,o,a,i]:(Du=n,n=s);e!==s?(t=l(t,e),r=t):(Du=r,r=s);}else Du=r,r=s;return r}())!==s?(t=e):(Du=t,t=s),t}function Ds(){var r,t,e;return r=Du,(t=qs())!==s&&ri()!==s?((e=sa())===s&&(e=ua()),e===s&&(e=null),e!==s?(r=t=function(r,t){const e={expr:r,type:"ASC"};return "DESC"===t&&(e.type="DESC"),e}(t,e)):(Du=r,r=s)):(Du=r,r=s),r}function ks(){var r;return (r=No())===s&&(r=wo()),r}function $s(){var t,e,n,u,o,a;return t=Du,function(){var t,e,n,u;t=Du,"limit"===r.substr(Du,5).toLowerCase()?(e=r.substr(Du,5),Du+=5):(e=s,0===Pu&&Bu(Oe));e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?t=e=[e,n]:(Du=t,t=s)):(Du=t,t=s);return t}()!==s&&ri()!==s&&(e=ks())!==s&&ri()!==s?(n=Du,(u=Ka())===s&&(u=function(){var t,e,n,u;t=Du,"offset"===r.substr(Du,6).toLowerCase()?(e=r.substr(Du,6),Du+=6):(e=s,0===Pu&&Bu(ge));e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="OFFSET"):(Du=t,t=s)):(Du=t,t=s);return t}()),u!==s&&(o=ri())!==s&&(a=ks())!==s?n=u=[u,o,a]:(Du=n,n=s),n===s&&(n=null),n!==s?(t=function(r,t){const e=[r];return t&&e.push(t[2]),{seperator:t&&t[0]&&t[0].toLowerCase()||"",value:e}}(e,n)):(Du=t,t=s)):(Du=t,t=s),t}function Fs(){var r,t,e,n,u,o,a,i;if(r=Du,(t=Ps())!==s){for(e=[],n=Du,(u=ri())!==s&&(o=Ka())!==s&&(a=ri())!==s&&(i=Ps())!==s?n=u=[u,o,a,i]:(Du=n,n=s);n!==s;)e.push(n),n=Du,(u=ri())!==s&&(o=Ka())!==s&&(a=ri())!==s&&(i=Ps())!==s?n=u=[u,o,a,i]:(Du=n,n=s);e!==s?(r=t=l(t,e)):(Du=r,r=s);}else Du=r,r=s;return r}function Ps(){var t,e,n,u,o,a,i,c,l;return t=Du,e=Du,(n=lo())!==s&&(u=ri())!==s&&(o=Va())!==s?e=n=[n,u,o]:(Du=e,e=s),e===s&&(e=null),e!==s&&(n=ri())!==s&&(u=bo())!==s&&(o=ri())!==s?(61===r.charCodeAt(Du)?(a="=",Du++):(a=s,0===Pu&&Bu(Or)),a!==s&&ri()!==s&&(i=uo())!==s?(t=e={column:u,value:i,table:(l=e)&&l[0]}):(Du=t,t=s)):(Du=t,t=s),t===s&&(t=Du,e=Du,(n=lo())!==s&&(u=ri())!==s&&(o=Va())!==s?e=n=[n,u,o]:(Du=e,e=s),e===s&&(e=null),e!==s&&(n=ri())!==s&&(u=bo())!==s&&(o=ri())!==s?(61===r.charCodeAt(Du)?(a="=",Du++):(a=s,0===Pu&&Bu(Or)),a!==s&&ri()!==s&&(i=ra())!==s&&ri()!==s&&Za()!==s&&ri()!==s&&(c=co())!==s&&ri()!==s&&za()!==s?(t=e=function(r,t,e){return {column:t,value:e,table:r&&r[0],keyword:"values"}}(e,u,c)):(Du=t,t=s)):(Du=t,t=s)),t}function Gs(){var r;return (r=function(){var r,t;r=Du,ra()!==s&&ri()!==s&&(t=function(){var r,t,e,n,u,o,a,i;if(r=Du,(t=Bs())!==s){for(e=[],n=Du,(u=ri())!==s&&(o=Ka())!==s&&(a=ri())!==s&&(i=Bs())!==s?n=u=[u,o,a,i]:(Du=n,n=s);n!==s;)e.push(n),n=Du,(u=ri())!==s&&(o=Ka())!==s&&(a=ri())!==s&&(i=Bs())!==s?n=u=[u,o,a,i]:(Du=n,n=s);e!==s?(t=l(t,e),r=t):(Du=r,r=s);}else Du=r,r=s;return r}())!==s?(r=t):(Du=r,r=s);return r}())===s&&(r=ps()),r}function Hs(){var r,t,e,n,u,o,a,i,c;if(r=Du,Bo()!==s)if(ri()!==s)if((t=Za())!==s)if(ri()!==s)if((e=vo())!==s){for(n=[],u=Du,(o=ri())!==s&&(a=Ka())!==s&&(i=ri())!==s&&(c=vo())!==s?u=o=[o,a,i,c]:(Du=u,u=s);u!==s;)n.push(u),u=Du,(o=ri())!==s&&(a=Ka())!==s&&(i=ri())!==s&&(c=vo())!==s?u=o=[o,a,i,c]:(Du=u,u=s);n!==s&&(u=ri())!==s&&(o=za())!==s?(r=Si(e,n)):(Du=r,r=s);}else Du=r,r=s;else Du=r,r=s;else Du=r,r=s;else Du=r,r=s;else Du=r,r=s;return r===s&&(r=Du,Bo()!==s&&ri()!==s&&(t=Bs())!==s?(r=t):(Du=r,r=s)),r}function js(){var t,e,n;return t=Du,Zo()!==s&&ri()!==s?("duplicate"===r.substr(Du,9).toLowerCase()?(e=r.substr(Du,9),Du+=9):(e=s,0===Pu&&Bu(gr)),e!==s&&ri()!==s&&ja()!==s&&ri()!==s&&Fo()!==s&&ri()!==s&&(n=Fs())!==s?(t={keyword:"on duplicate key update",set:n}):(Du=t,t=s)):(Du=t,t=s),t}function Ys(){var t,e;return t=Du,(e=function(){var t,e,n,u;t=Du,"insert"===r.substr(Du,6).toLowerCase()?(e=r.substr(Du,6),Du+=6):(e=s,0===Pu&&Bu(re));e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?t=e=[e,n]:(Du=t,t=s)):(Du=t,t=s);return t}())!==s&&(e="insert"),(t=e)===s&&(t=Du,(e=jo())!==s&&(e="replace"),t=e),t}function Bs(){var r,t;return r=Du,Za()!==s&&ri()!==s&&(t=Xs())!==s&&ri()!==s&&za()!==s?(r=t):(Du=r,r=s),r}function Xs(){var r,t,e,n,u,o,a,i;if(r=Du,(t=qs())!==s){for(e=[],n=Du,(u=ri())!==s&&(o=Ka())!==s&&(a=ri())!==s&&(i=qs())!==s?n=u=[u,o,a,i]:(Du=n,n=s);n!==s;)e.push(n),n=Du,(u=ri())!==s&&(o=Ka())!==s&&(a=ri())!==s&&(i=qs())!==s?n=u=[u,o,a,i]:(Du=n,n=s);e!==s?(r=t=function(r,t){const e={type:"expr_list"};return e.value=Si(r,t),e}(t,e)):(Du=r,r=s);}else Du=r,r=s;return r}function Ws(){var t,e,n;return t=Du,function(){var t,e,n,u;t=Du,"interval"===r.substr(Du,8).toLowerCase()?(e=r.substr(Du,8),Du+=8):(e=s,0===Pu&&Bu(Mn));e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="INTERVAL"):(Du=t,t=s)):(Du=t,t=s);return t}()!==s&&ri()!==s&&(e=qs())!==s&&ri()!==s&&(n=function(){var t;(t=function(){var t,e,n,u;t=Du,"year"===r.substr(Du,4).toLowerCase()?(e=r.substr(Du,4),Du+=4):(e=s,0===Pu&&Bu(Dn));e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="YEAR"):(Du=t,t=s)):(Du=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Du,"month"===r.substr(Du,5).toLowerCase()?(e=r.substr(Du,5),Du+=5):(e=s,0===Pu&&Bu(kn));e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="MONTH"):(Du=t,t=s)):(Du=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Du,"day"===r.substr(Du,3).toLowerCase()?(e=r.substr(Du,3),Du+=3):(e=s,0===Pu&&Bu($n));e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="DAY"):(Du=t,t=s)):(Du=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Du,"hour"===r.substr(Du,4).toLowerCase()?(e=r.substr(Du,4),Du+=4):(e=s,0===Pu&&Bu(Fn));e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="HOUR"):(Du=t,t=s)):(Du=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Du,"minute"===r.substr(Du,6).toLowerCase()?(e=r.substr(Du,6),Du+=6):(e=s,0===Pu&&Bu(Pn));e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="MINUTE"):(Du=t,t=s)):(Du=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Du,"second"===r.substr(Du,6).toLowerCase()?(e=r.substr(Du,6),Du+=6):(e=s,0===Pu&&Bu(Gn));e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="SECOND"):(Du=t,t=s)):(Du=t,t=s);return t}());return t}())!==s?(t={type:"interval",expr:e,unit:n.toLowerCase()}):(Du=t,t=s),t}function Vs(){var t,e,n;return t=Du,function(){var t,e,n,u;t=Du,"when"===r.substr(Du,4).toLowerCase()?(e=r.substr(Du,4),Du+=4):(e=s,0===Pu&&Bu(tn));e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?t=e=[e,n]:(Du=t,t=s)):(Du=t,t=s);return t}()!==s&&ri()!==s&&(e=Zs())!==s&&ri()!==s&&function(){var t,e,n,u;t=Du,"then"===r.substr(Du,4).toLowerCase()?(e=r.substr(Du,4),Du+=4):(e=s,0===Pu&&Bu(en));e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?t=e=[e,n]:(Du=t,t=s)):(Du=t,t=s);return t}()!==s&&ri()!==s&&(n=qs())!==s?(t={type:"when",cond:e,result:n}):(Du=t,t=s),t}function Ks(){var t,e;return t=Du,function(){var t,e,n,u;t=Du,"else"===r.substr(Du,4).toLowerCase()?(e=r.substr(Du,4),Du+=4):(e=s,0===Pu&&Bu(nn));e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?t=e=[e,n]:(Du=t,t=s)):(Du=t,t=s);return t}()!==s&&ri()!==s&&(e=qs())!==s?(t={type:"else",result:e}):(Du=t,t=s),t}function qs(){var r;return (r=function(){var r,t,e,n,u,o,a,i;if(r=Du,(t=io())!==s){if(e=[],n=Du,(u=ri())!==s&&(o=Qa())!==s&&(a=ri())!==s&&(i=io())!==s?n=u=[u,o,a,i]:(Du=n,n=s),n!==s)for(;n!==s;)e.push(n),n=Du,(u=ri())!==s&&(o=Qa())!==s&&(a=ri())!==s&&(i=io())!==s?n=u=[u,o,a,i]:(Du=n,n=s);else e=s;e!==s?(t=Ii(t,e),r=t):(Du=r,r=s);}else Du=r,r=s;return r}())===s&&(r=function(){var r,t,e,n,u,o,a,i;if(r=Du,(t=zs())!==s){for(e=[],n=Du,(u=ti())!==s&&(o=La())!==s&&(a=ri())!==s&&(i=zs())!==s?n=u=[u,o,a,i]:(Du=n,n=s);n!==s;)e.push(n),n=Du,(u=ti())!==s&&(o=La())!==s&&(a=ri())!==s&&(i=zs())!==s?n=u=[u,o,a,i]:(Du=n,n=s);e!==s?(t=xr(t,e),r=t):(Du=r,r=s);}else Du=r,r=s;return r}())===s&&(r=function(){var r,t,e,n,u,o;if(r=Du,(t=so())!==s){if(e=[],n=Du,(u=ri())!==s&&(o=io())!==s?n=u=[u,o]:(Du=n,n=s),n!==s)for(;n!==s;)e.push(n),n=Du,(u=ri())!==s&&(o=io())!==s?n=u=[u,o]:(Du=n,n=s);else e=s;e!==s?(t=yi(t,e[0][1]),r=t):(Du=r,r=s);}else Du=r,r=s;return r}())===s&&(r=vs()),r}function Zs(){var r,t,e,n,u,o,a,i;if(r=Du,(t=qs())!==s){for(e=[],n=Du,(u=ri())!==s?((o=da())===s&&(o=La())===s&&(o=Ka()),o!==s&&(a=ri())!==s&&(i=qs())!==s?n=u=[u,o,a,i]:(Du=n,n=s)):(Du=n,n=s);n!==s;)e.push(n),n=Du,(u=ri())!==s?((o=da())===s&&(o=La())===s&&(o=Ka()),o!==s&&(a=ri())!==s&&(i=qs())!==s?n=u=[u,o,a,i]:(Du=n,n=s)):(Du=n,n=s);e!==s?(r=t=function(r,t){let e=r,n="";for(let u=0;u<t.length;u++)","===t[u][1]?(n=",",0===u&&(e=[r]),e.push(t[u][3])):e=Ti(t[u][1],e,t[u][3]);if(","===n){const r={type:"expr_list"};return r.value=e,r}return e}(t,e)):(Du=r,r=s);}else Du=r,r=s;return r}function zs(){var r,t,e,n,u,o,a,i;if(r=Du,(t=Js())!==s){for(e=[],n=Du,(u=ti())!==s&&(o=da())!==s&&(a=ri())!==s&&(i=Js())!==s?n=u=[u,o,a,i]:(Du=n,n=s);n!==s;)e.push(n),n=Du,(u=ti())!==s&&(o=da())!==s&&(a=ri())!==s&&(i=Js())!==s?n=u=[u,o,a,i]:(Du=n,n=s);e!==s?(r=t=xr(t,e)):(Du=r,r=s);}else Du=r,r=s;return r}function Js(){var t,e,n,u,o;return (t=Qs())===s&&(t=function(){var r,t,e;r=Du,(t=function(){var r,t,e,n,u;r=Du,t=Du,(e=va())!==s&&(n=ri())!==s&&(u=ba())!==s?t=e=[e,n,u]:(Du=t,t=s);t!==s&&(t=Mr(t));(r=t)===s&&(r=ba());return r}())!==s&&ri()!==s&&Za()!==s&&ri()!==s&&(e=qu())!==s&&ri()!==s&&za()!==s?(n=t,(u=e).parentheses=!0,t=yi(n,u),r=t):(Du=r,r=s);var n,u;return r}())===s&&(t=Du,(e=va())===s&&(e=Du,33===r.charCodeAt(Du)?(n="!",Du++):(n=s,0===Pu&&Bu(Ur)),n!==s?(u=Du,Pu++,61===r.charCodeAt(Du)?(o="=",Du++):(o=s,0===Pu&&Bu(Or)),Pu--,o===s?u=void 0:(Du=u,u=s),u!==s?e=n=[n,u]:(Du=e,e=s)):(Du=e,e=s)),e!==s&&(n=ri())!==s&&(u=Js())!==s?(t=e=yi("NOT",u)):(Du=t,t=s)),t}function Qs(){var t,e,n,u,o;return t=Du,(e=uo())!==s&&ri()!==s?((n=function(){var t;(t=function(){var t,e,n,u,o,a;t=[],e=Du,(n=ri())!==s&&(u=ro())!==s&&(o=ri())!==s&&(a=uo())!==s?e=n=[n,u,o,a]:(Du=e,e=s);if(e!==s)for(;e!==s;)t.push(e),e=Du,(n=ri())!==s&&(u=ro())!==s&&(o=ri())!==s&&(a=uo())!==s?e=n=[n,u,o,a]:(Du=e,e=s);else t=s;t!==s&&(t={type:"arithmetic",tail:t});return t}())===s&&(t=no())===s&&(t=function(){var r,t,e,n;r=Du,(t=function(){var r,t,e,n,u;r=Du,t=Du,(e=va())!==s&&(n=ri())!==s&&(u=ia())!==s?t=e=[e,n,u]:(Du=t,t=s);t!==s&&(t=Mr(t));(r=t)===s&&(r=ia());return r}())!==s&&ri()!==s&&(e=uo())!==s&&ri()!==s&&da()!==s&&ri()!==s&&(n=uo())!==s?(r=t={op:t,right:{type:"expr_list",value:[e,n]}}):(Du=r,r=s);return r}())===s&&(t=function(){var r,t,e,n,u;r=Du,(t=la())!==s&&(e=ri())!==s&&(n=uo())!==s?(r=t={op:"IS",right:n}):(Du=r,r=s);r===s&&(r=Du,t=Du,(e=la())!==s&&(n=ri())!==s&&(u=va())!==s?t=e=[e,n,u]:(Du=t,t=s),t!==s&&(e=ri())!==s&&(n=uo())!==s?(t=function(r){return {op:"IS NOT",right:r}}(n),r=t):(Du=r,r=s));return r}())===s&&(t=eo())===s&&(t=function(){var t,e,n,u;t=Du,(e=function(){var t,e,n;t=Du,(e=va())===s&&(e=null);e!==s&&ri()!==s?((n=function(){var t,e,n,u;t=Du,"regexp"===r.substr(Du,6).toLowerCase()?(e=r.substr(Du,6),Du+=6):(e=s,0===Pu&&Bu(je));e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="REGEXP"):(Du=t,t=s)):(Du=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=Du,"rlike"===r.substr(Du,5).toLowerCase()?(e=r.substr(Du,5),Du+=5):(e=s,0===Pu&&Bu(He));e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="RLIKE"):(Du=t,t=s)):(Du=t,t=s);return t}()),n!==s?(o=n,t=e=(u=e)?`${u} ${o}`:o):(Du=t,t=s)):(Du=t,t=s);var u,o;return t}())!==s&&ri()!==s?("binary"===r.substr(Du,6).toLowerCase()?(n=r.substr(Du,6),Du+=6):(n=s,0===Pu&&Bu(ir)),n===s&&(n=null),n!==s&&ri()!==s&&(u=To())!==s?(o=e,t=e={op:(a=n)?`${o} ${a}`:o,right:u}):(Du=t,t=s)):(Du=t,t=s);var o,a;return t}());return t}())===s&&(n=null),n!==s?(u=e,t=e=null===(o=n)?u:"arithmetic"===o.type?Ii(u,o.tail):Ti(o.op,u,o.right)):(Du=t,t=s)):(Du=t,t=s),t===s&&(t=To())===s&&(t=co()),t}function ro(){var t;return ">="===r.substr(Du,2)?(t=">=",Du+=2):(t=s,0===Pu&&Bu(Dr)),t===s&&(62===r.charCodeAt(Du)?(t=">",Du++):(t=s,0===Pu&&Bu(kr)),t===s&&("<="===r.substr(Du,2)?(t="<=",Du+=2):(t=s,0===Pu&&Bu($r)),t===s&&("<>"===r.substr(Du,2)?(t="<>",Du+=2):(t=s,0===Pu&&Bu(Fr)),t===s&&(60===r.charCodeAt(Du)?(t="<",Du++):(t=s,0===Pu&&Bu(Pr)),t===s&&(61===r.charCodeAt(Du)?(t="=",Du++):(t=s,0===Pu&&Bu(Or)),t===s&&("!="===r.substr(Du,2)?(t="!=",Du+=2):(t=s,0===Pu&&Bu(Gr)))))))),t}function to(){var r,t,e,n,u;return r=Du,t=Du,(e=va())!==s&&(n=ri())!==s&&(u=ca())!==s?t=e=[e,n,u]:(Du=t,t=s),t!==s&&(t=Mr(t)),(r=t)===s&&(r=ca()),r}function eo(){var r,t,e;return r=Du,(t=function(){var r,t,e,n,u;return r=Du,t=Du,(e=va())!==s&&(n=ri())!==s&&(u=fa())!==s?t=e=[e,n,u]:(Du=t,t=s),t!==s&&(t=Mr(t)),(r=t)===s&&(r=fa()),r}())!==s&&ri()!==s?((e=Ao())===s&&(e=Qs()),e!==s?(r=t={op:t,right:e}):(Du=r,r=s)):(Du=r,r=s),r}function no(){var r,t,e,n;return r=Du,(t=to())!==s&&ri()!==s&&(e=Za())!==s&&ri()!==s&&(n=Xs())!==s&&ri()!==s&&za()!==s?(r=t={op:t,right:n}):(Du=r,r=s),r===s&&(r=Du,(t=to())!==s&&ri()!==s?((e=Ci())===s&&(e=To()),e!==s?(r=t=function(r,t){return {op:r,right:t}}(t,e)):(Du=r,r=s)):(Du=r,r=s)),r}function uo(){var r,t,e,n,u,o,a,i;if(r=Du,(t=oo())!==s){for(e=[],n=Du,(u=ri())!==s&&(o=so())!==s&&(a=ri())!==s&&(i=oo())!==s?n=u=[u,o,a,i]:(Du=n,n=s);n!==s;)e.push(n),n=Du,(u=ri())!==s&&(o=so())!==s&&(a=ri())!==s&&(i=oo())!==s?n=u=[u,o,a,i]:(Du=n,n=s);e!==s?(r=t=xr(t,e)):(Du=r,r=s);}else Du=r,r=s;return r}function so(){var t;return 43===r.charCodeAt(Du)?(t="+",Du++):(t=s,0===Pu&&Bu(Hr)),t===s&&(45===r.charCodeAt(Du)?(t="-",Du++):(t=s,0===Pu&&Bu(jr))),t}function oo(){var r,t,e,n,u,o,a,i;if(r=Du,(t=io())!==s){for(e=[],n=Du,(u=ri())!==s&&(o=ao())!==s&&(a=ri())!==s&&(i=io())!==s?n=u=[u,o,a,i]:(Du=n,n=s);n!==s;)e.push(n),n=Du,(u=ri())!==s&&(o=ao())!==s&&(a=ri())!==s&&(i=io())!==s?n=u=[u,o,a,i]:(Du=n,n=s);e!==s?(r=t=Ii(t,e)):(Du=r,r=s);}else Du=r,r=s;return r}function ao(){var t,e;return 42===r.charCodeAt(Du)?(t="*",Du++):(t=s,0===Pu&&Bu(Yr)),t===s&&(47===r.charCodeAt(Du)?(t="/",Du++):(t=s,0===Pu&&Bu(Br)),t===s&&(37===r.charCodeAt(Du)?(t="%",Du++):(t=s,0===Pu&&Bu(Xr)),t===s&&(t=Du,"div"===r.substr(Du,3).toLowerCase()?(e=r.substr(Du,3),Du+=3):(e=s,0===Pu&&Bu(Wr)),e!==s&&(e="DIV"),t=e))),t}function io(){var t,e,n;return (t=function(){var t,e,n,u,o,a,i;t=Du,(e=wa())!==s&&ri()!==s&&Za()!==s&&ri()!==s&&(n=qs())!==s&&ri()!==s&&Vo()!==s&&ri()!==s&&(u=Ei())!==s&&ri()!==s&&(o=cs())!==s&&ri()!==s&&(a=vo())!==s&&ri()!==s&&za()!==s&&ri()!==s?((i=rs())===s&&(i=null),i!==s?(e=function(r,t,e,n,u){const{dataType:s,length:o}=t;let a=s;return void 0!==o&&(a=`${a}(${o})`),{type:"cast",expr:r,symbol:"as",target:{dataType:`${a} ${e} ${n.toUpperCase()}`},collate:u}}(n,u,o,a,i),t=e):(Du=t,t=s)):(Du=t,t=s);t===s&&(t=Du,(e=wa())!==s&&ri()!==s&&Za()!==s&&ri()!==s&&(n=qs())!==s&&ri()!==s&&Vo()!==s&&ri()!==s&&(u=wi())!==s&&ri()!==s&&(o=za())!==s?(t=e={type:"cast",expr:n,target:u}):(Du=t,t=s),t===s&&(t=Du,(e=wa())!==s&&ri()!==s&&Za()!==s&&ri()!==s&&(n=qs())!==s&&ri()!==s&&Vo()!==s&&ri()!==s&&(u=ya())!==s&&ri()!==s&&(o=Za())!==s&&ri()!==s&&(a=Ro())!==s&&ri()!==s&&za()!==s&&ri()!==s&&(i=za())!==s?(e=function(r,t){return {type:"cast",expr:r,target:{dataType:"DECIMAL("+t+")"}}}(n,a),t=e):(Du=t,t=s),t===s&&(t=Du,(e=wa())!==s&&ri()!==s&&Za()!==s&&ri()!==s&&(n=qs())!==s&&ri()!==s&&Vo()!==s&&ri()!==s&&(u=ya())!==s&&ri()!==s&&(o=Za())!==s&&ri()!==s&&(a=Ro())!==s&&ri()!==s&&Ka()!==s&&ri()!==s&&(i=Ro())!==s&&ri()!==s&&za()!==s&&ri()!==s&&za()!==s?(e=function(r,t,e){return {type:"cast",expr:r,target:{dataType:"DECIMAL("+t+", "+e+")"}}}(n,a,i),t=e):(Du=t,t=s),t===s&&(t=Du,(e=wa())!==s&&ri()!==s&&Za()!==s&&ri()!==s&&(n=qs())!==s&&ri()!==s&&Vo()!==s&&ri()!==s&&(u=function(){var t;(t=function(){var t,e,n,u;t=Du,"signed"===r.substr(Du,6).toLowerCase()?(e=r.substr(Du,6),Du+=6):(e=s,0===Pu&&Bu(fn));e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="SIGNED"):(Du=t,t=s)):(Du=t,t=s);return t}())===s&&(t=Ta());return t}())!==s&&ri()!==s?((o=Sa())===s&&(o=null),o!==s&&ri()!==s&&(a=za())!==s?(e=function(r,t,e){return {type:"cast",expr:r,target:{dataType:t+(e?" "+e:"")}}}(n,u,o),t=e):(Du=t,t=s)):(Du=t,t=s)))));return t}())===s&&(t=Ao())===s&&(t=function(){var t;(t=function(){var t,e,n,u;t=Du,(e=function(){var t,e,n,u;t=Du,"count"===r.substr(Du,5).toLowerCase()?(e=r.substr(Du,5),Du+=5):(e=s,0===Pu&&Bu(Ve));e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="COUNT"):(Du=t,t=s)):(Du=t,t=s);return t}())===s&&(e=function(){var t,e,n,u;t=Du,"group_concat"===r.substr(Du,12).toLowerCase()?(e=r.substr(Du,12),Du+=12):(e=s,0===Pu&&Bu(Ke));e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="GROUP_CONCAT"):(Du=t,t=s)):(Du=t,t=s);return t}());e!==s&&ri()!==s&&Za()!==s&&ri()!==s&&(n=function(){var t,e,n,u,o;t=Du,(e=function(){var e;42===r.charCodeAt(Du)?(e="*",Du++):(e=s,0===Pu&&Bu(Yr));e!==s&&(e={type:"star",value:"*"});return e}())!==s&&(e={expr:e});(t=e)===s&&(t=Du,(e=aa())===s&&(e=null),e!==s&&ri()!==s&&(n=co())!==s?(t=e={distinct:e,expr:n}):(Du=t,t=s),t===s&&(t=Du,(e=aa())===s&&(e=null),e!==s&&ri()!==s&&(n=Za())!==s&&ri()!==s&&(u=qs())!==s&&ri()!==s&&za()!==s&&ri()!==s?((o=Ms())===s&&(o=null),o!==s?(e=function(r,t,e){return t.parentheses=!0,{distinct:r,expr:t,orderby:e}}(e,u,o),t=e):(Du=t,t=s)):(Du=t,t=s)));return t}())!==s&&ri()!==s&&za()!==s&&ri()!==s?((u=ho())===s&&(u=null),u!==s?(e=function(r,t,e){return {type:"aggr_func",name:r,args:t,over:e}}(e,n,u),t=e):(Du=t,t=s)):(Du=t,t=s);return t}())===s&&(t=function(){var t,e,n;t=Du,(e=function(){var t;(t=function(){var t,e,n,u;t=Du,"sum"===r.substr(Du,3).toLowerCase()?(e=r.substr(Du,3),Du+=3):(e=s,0===Pu&&Bu(ze));e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="SUM"):(Du=t,t=s)):(Du=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Du,"max"===r.substr(Du,3).toLowerCase()?(e=r.substr(Du,3),Du+=3):(e=s,0===Pu&&Bu(qe));e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="MAX"):(Du=t,t=s)):(Du=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Du,"min"===r.substr(Du,3).toLowerCase()?(e=r.substr(Du,3),Du+=3):(e=s,0===Pu&&Bu(Ze));e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="MIN"):(Du=t,t=s)):(Du=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Du,"avg"===r.substr(Du,3).toLowerCase()?(e=r.substr(Du,3),Du+=3):(e=s,0===Pu&&Bu(Je));e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="AVG"):(Du=t,t=s)):(Du=t,t=s);return t}());return t}())!==s&&ri()!==s&&Za()!==s&&ri()!==s&&(n=uo())!==s&&ri()!==s&&za()!==s?(t=e={type:"aggr_func",name:e,args:{expr:n}}):(Du=t,t=s);return t}());return t}())===s&&(t=function(){var t,e,n,u,o;t=Du,"convert"===r.substr(Du,7).toLowerCase()?(e=r.substr(Du,7),Du+=7):(e=s,0===Pu&&Bu(ft));e!==s&&ri()!==s&&(n=Za())!==s&&ri()!==s&&(u=function(){var r,t,e,n,u;r=Du,(t=co())!==s&&ri()!==s&&Ka()!==s&&ri()!==s&&(e=Ei())!==s&&ri()!==s&&(n=cs())!==s&&ri()!==s&&(u=vo())!==s?(t=function(r,t,e,n){const{dataType:u,length:s}=t;let o=u;return void 0!==s&&(o=`${o}(${s})`),{type:"expr_list",value:[r,{type:"origin",value:`${o} ${e} ${n}`}]}}(t,e,n,u),r=t):(Du=r,r=s);r===s&&(r=Du,(t=co())!==s&&ri()!==s&&Ka()!==s&&ri()!==s&&(e=wi())!==s?(t={type:"expr_list",value:[t,{value:e.dataType.toUpperCase()}]},r=t):(Du=r,r=s),r===s&&(r=Du,(t=co())!==s&&ri()!==s&&ta()!==s&&ri()!==s&&(e=vo())!==s?(t=function(r,t){return r.suffix="USING "+t,{type:"expr_list",value:[r]}}(t,e),r=t):(Du=r,r=s)));return r}())!==s&&ri()!==s&&za()!==s&&ri()!==s?((o=rs())===s&&(o=null),o!==s?(t=e={type:"function",name:"CONVERT",args:u,collate:o}):(Du=t,t=s)):(Du=t,t=s);t===s&&(t=Du,(e=vi())!==s&&ri()!==s&&(n=Za())!==s&&ri()!==s?((u=Xs())===s&&(u=null),u!==s&&ri()!==s&&za()!==s&&ri()!==s?((o=ho())===s&&(o=null),o!==s?(e=function(r,t,e){return {type:"function",name:r,args:t||{type:"expr_list",value:[]},over:e}}(e,u,o),t=e):(Du=t,t=s)):(Du=t,t=s)):(Du=t,t=s),t===s&&(t=Du,(e=function(){var t;(t=function(){var t,e,n,u;t=Du,"current_date"===r.substr(Du,12).toLowerCase()?(e=r.substr(Du,12),Du+=12):(e=s,0===Pu&&Bu(Un));e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="CURRENT_DATE"):(Du=t,t=s)):(Du=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Du,"current_time"===r.substr(Du,12).toLowerCase()?(e=r.substr(Du,12),Du+=12):(e=s,0===Pu&&Bu(Hn));e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="CURRENT_TIME"):(Du=t,t=s)):(Du=t,t=s);return t}())===s&&(t=Da())===s&&(t=function(){var t,e,n,u;t=Du,"current_user"===r.substr(Du,12).toLowerCase()?(e=r.substr(Du,12),Du+=12):(e=s,0===Pu&&Bu(Yn));e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="CURRENT_USER"):(Du=t,t=s)):(Du=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Du,"user"===r.substr(Du,4).toLowerCase()?(e=r.substr(Du,4),Du+=4):(e=s,0===Pu&&Bu(xn));e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="USER"):(Du=t,t=s)):(Du=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Du,"session_user"===r.substr(Du,12).toLowerCase()?(e=r.substr(Du,12),Du+=12):(e=s,0===Pu&&Bu(Bn));e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="SESSION_USER"):(Du=t,t=s)):(Du=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Du,"system_user"===r.substr(Du,11).toLowerCase()?(e=r.substr(Du,11),Du+=11):(e=s,0===Pu&&Bu(Xn));e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="SYSTEM_USER"):(Du=t,t=s)):(Du=t,t=s);return t}());return t}())!==s&&ri()!==s&&(n=Za())!==s&&ri()!==s?((u=Xs())===s&&(u=null),u!==s&&ri()!==s&&za()!==s&&ri()!==s?((o=ho())===s&&(o=null),o!==s?(e=function(r,t,e){return {type:"function",name:r,args:t||{type:"expr_list",value:[]},over:e}}(e,u,o),t=e):(Du=t,t=s)):(Du=t,t=s)):(Du=t,t=s),t===s&&(t=Du,(e=Da())!==s&&ri()!==s?((n=Eo())===s&&(n=null),n!==s?(e=function(r,t){return {type:"function",name:r,over:t}}(e,n),t=e):(Du=t,t=s)):(Du=t,t=s))));return t}())===s&&(t=function(){var r,t,e,n,u,o,a,i,c,l;if(r=Du,Ca()!==s)if(ri()!==s){if(t=[],(e=Vs())!==s)for(;e!==s;)t.push(e),e=Vs();else t=s;t!==s&&(e=ri())!==s?((n=Ks())===s&&(n=null),n!==s&&(u=ri())!==s&&(o=pa())!==s&&ri()!==s?((a=Ca())===s&&(a=null),a!==s?(c=t,(l=n)&&c.push(l),r={type:"case",expr:null,args:c}):(Du=r,r=s)):(Du=r,r=s)):(Du=r,r=s);}else Du=r,r=s;else Du=r,r=s;if(r===s)if(r=Du,Ca()!==s)if(ri()!==s)if((t=qs())!==s)if((e=ri())!==s){if(n=[],(u=Vs())!==s)for(;u!==s;)n.push(u),u=Vs();else n=s;n!==s&&(u=ri())!==s?((o=Ks())===s&&(o=null),o!==s&&ri()!==s&&(a=pa())!==s&&ri()!==s?((i=Ca())===s&&(i=null),i!==s?(r=function(r,t,e){return e&&t.push(e),{type:"case",expr:r,args:t}}(t,n,o)):(Du=r,r=s)):(Du=r,r=s)):(Du=r,r=s);}else Du=r,r=s;else Du=r,r=s;else Du=r,r=s;else Du=r,r=s;return r}())===s&&(t=Ws())===s&&(t=co())===s&&(t=wo())===s&&(t=Du,Za()!==s&&ri()!==s&&(e=Zs())!==s&&ri()!==s&&za()!==s?((n=e).parentheses=!0,t=n):(Du=t,t=s),t===s&&(t=Ci())),t}function co(){var r,t,e,n,u;return r=Du,(t=lo())!==s&&ri()!==s&&Va()!==s&&ri()!==s&&(e=bo())!==s?(n=t,u=e,gi.add(`select::${n}::${u}`),r=t={type:"column_ref",table:n,column:u}):(Du=r,r=s),r===s&&(r=Du,(t=bo())!==s&&(t=function(r){return gi.add("select::null::"+r),{type:"column_ref",table:null,column:r}}(t)),r=t),r}function lo(){var r,t;return r=Du,(t=vo())!==s?((Vr(t)?s:void 0)!==s?(r=t=t):(Du=r,r=s)):(Du=r,r=s),r===s&&(r=Du,(t=fo())!==s&&(t=t),r=t),r}function fo(){var t;return (t=function(){var t,e,n,u;t=Du,34===r.charCodeAt(Du)?(e='"',Du++):(e=s,0===Pu&&Bu(Kr));if(e!==s){if(n=[],qr.test(r.charAt(Du))?(u=r.charAt(Du),Du++):(u=s,0===Pu&&Bu(Zr)),u!==s)for(;u!==s;)n.push(u),qr.test(r.charAt(Du))?(u=r.charAt(Du),Du++):(u=s,0===Pu&&Bu(Zr));else n=s;n!==s?(34===r.charCodeAt(Du)?(u='"',Du++):(u=s,0===Pu&&Bu(Kr)),u!==s?(e=zr(n),t=e):(Du=t,t=s)):(Du=t,t=s);}else Du=t,t=s;return t}())===s&&(t=function(){var t,e,n,u;t=Du,39===r.charCodeAt(Du)?(e="'",Du++):(e=s,0===Pu&&Bu(ur));if(e!==s){if(n=[],Jr.test(r.charAt(Du))?(u=r.charAt(Du),Du++):(u=s,0===Pu&&Bu(Qr)),u!==s)for(;u!==s;)n.push(u),Jr.test(r.charAt(Du))?(u=r.charAt(Du),Du++):(u=s,0===Pu&&Bu(Qr));else n=s;n!==s?(39===r.charCodeAt(Du)?(u="'",Du++):(u=s,0===Pu&&Bu(ur)),u!==s?(e=zr(n),t=e):(Du=t,t=s)):(Du=t,t=s);}else Du=t,t=s;return t}())===s&&(t=function(){var t,e,n,u;t=Du,96===r.charCodeAt(Du)?(e="`",Du++):(e=s,0===Pu&&Bu(rt));if(e!==s){if(n=[],tt.test(r.charAt(Du))?(u=r.charAt(Du),Du++):(u=s,0===Pu&&Bu(et)),u!==s)for(;u!==s;)n.push(u),tt.test(r.charAt(Du))?(u=r.charAt(Du),Du++):(u=s,0===Pu&&Bu(et));else n=s;n!==s?(96===r.charCodeAt(Du)?(u="`",Du++):(u=s,0===Pu&&Bu(rt)),u!==s?(e=zr(n),t=e):(Du=t,t=s)):(Du=t,t=s);}else Du=t,t=s;return t}()),t}function bo(){var r,t;return r=Du,(t=function(){var r,t,e,n;if(r=Du,(t=Lo())!==s){for(e=[],n=po();n!==s;)e.push(n),n=po();e!==s?(t=nt(t,e),r=t):(Du=r,r=s);}else Du=r,r=s;return r}())!==s?((Vr(t)?s:void 0)!==s?(r=t=t):(Du=r,r=s)):(Du=r,r=s),r===s&&(r=fo()),r}function vo(){var r,t,e,n;if(r=Du,(t=Lo())!==s){for(e=[],n=Co();n!==s;)e.push(n),n=Co();e!==s?(r=t=nt(t,e)):(Du=r,r=s);}else Du=r,r=s;return r}function Lo(){var t;return ut.test(r.charAt(Du))?(t=r.charAt(Du),Du++):(t=s,0===Pu&&Bu(st)),t}function Co(){var t;return ot.test(r.charAt(Du))?(t=r.charAt(Du),Du++):(t=s,0===Pu&&Bu(at)),t}function po(){var t;return it.test(r.charAt(Du))?(t=r.charAt(Du),Du++):(t=s,0===Pu&&Bu(ct)),t}function wo(){var e,n,u;return e=Du,58===r.charCodeAt(Du)?(n=":",Du++):(n=s,0===Pu&&Bu(lt)),n!==s&&(u=vo())!==s?e=n=[n,u]:(Du=e,e=s),e!==s&&(e={type:"param",value:e[1]}),e}function Eo(){var r,t,e;return r=Du,Zo()!==s&&ri()!==s&&Fo()!==s&&ri()!==s&&(t=Da())!==s&&ri()!==s&&Za()!==s&&ri()!==s?((e=Xs())===s&&(e=null),e!==s&&ri()!==s&&za()!==s?(r={type:"on update",keyword:t,parentheses:!0,expr:e}):(Du=r,r=s)):(Du=r,r=s),r===s&&(r=Du,Zo()!==s&&ri()!==s&&Fo()!==s&&ri()!==s&&(t=Da())!==s?(r=function(r){return {type:"on update",keyword:r}}(t)):(Du=r,r=s)),r}function ho(){var t,e,n;return t=Du,function(){var t,e,n,u;t=Du,"over"===r.substr(Du,4).toLowerCase()?(e=r.substr(Du,4),Du+=4):(e=s,0===Pu&&Bu(Ae));e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?t=e=[e,n]:(Du=t,t=s)):(Du=t,t=s);return t}()!==s&&ri()!==s&&Za()!==s&&ri()!==s&&Bo()!==s&&ri()!==s&&na()!==s&&ri()!==s&&(e=Es())!==s&&ri()!==s?((n=Ms())===s&&(n=null),n!==s&&ri()!==s&&za()!==s?(t=function(r,t){return {partitionby:r,orderby:t}}(e,n)):(Du=t,t=s)):(Du=t,t=s),t===s&&(t=Eo()),t}function Ao(){var t,e,n,u,o,a,i,c,l;return t=Du,"binary"===r.substr(Du,6).toLowerCase()?(e=r.substr(Du,6),Du+=6):(e=s,0===Pu&&Bu(ir)),e===s&&(e=null),e!==s&&ri()!==s&&(n=To())!==s?(u=Du,(o=ri())!==s&&(a=rs())!==s?u=o=[o,a]:(Du=u,u=s),u===s&&(u=null),u!==s?(c=n,l=u,(i=e)&&(c.prefix=i.toLowerCase()),l&&(c.suffix={collate:l[1]}),t=e=c):(Du=t,t=s)):(Du=t,t=s),t===s&&(t=No())===s&&(t=function(){var t,e;t=Du,(e=function(){var t,e,n,u;t=Du,"true"===r.substr(Du,4).toLowerCase()?(e=r.substr(Du,4),Du+=4):(e=s,0===Pu&&Bu(Ht));e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?t=e=[e,n]:(Du=t,t=s)):(Du=t,t=s);return t}())!==s&&(e={type:"bool",value:!0});(t=e)===s&&(t=Du,(e=function(){var t,e,n,u;t=Du,"false"===r.substr(Du,5).toLowerCase()?(e=r.substr(Du,5),Du+=5):(e=s,0===Pu&&Bu(Yt));e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?t=e=[e,n]:(Du=t,t=s)):(Du=t,t=s);return t}())!==s&&(e={type:"bool",value:!1}),t=e);return t}())===s&&(t=yo())===s&&(t=function(){var t,e,n,u,o,a;t=Du,(e=Ua())===s&&(e=ga())===s&&(e=Ma())===s&&(e=xa());if(e!==s)if(ri()!==s){if(n=Du,39===r.charCodeAt(Du)?(u="'",Du++):(u=s,0===Pu&&Bu(ur)),u!==s){for(o=[],a=So();a!==s;)o.push(a),a=So();o!==s?(39===r.charCodeAt(Du)?(a="'",Du++):(a=s,0===Pu&&Bu(ur)),a!==s?n=u=[u,o,a]:(Du=n,n=s)):(Du=n,n=s);}else Du=n,n=s;n!==s?(e=bt(e,n),t=e):(Du=t,t=s);}else Du=t,t=s;else Du=t,t=s;if(t===s)if(t=Du,(e=Ua())===s&&(e=ga())===s&&(e=Ma())===s&&(e=xa()),e!==s)if(ri()!==s){if(n=Du,34===r.charCodeAt(Du)?(u='"',Du++):(u=s,0===Pu&&Bu(Kr)),u!==s){for(o=[],a=mo();a!==s;)o.push(a),a=mo();o!==s?(34===r.charCodeAt(Du)?(a='"',Du++):(a=s,0===Pu&&Bu(Kr)),a!==s?n=u=[u,o,a]:(Du=n,n=s)):(Du=n,n=s);}else Du=n,n=s;n!==s?(e=bt(e,n),t=e):(Du=t,t=s);}else Du=t,t=s;else Du=t,t=s;return t}()),t}function yo(){var e;return (e=function(){var t,e,n,u;t=Du,"null"===r.substr(Du,4).toLowerCase()?(e=r.substr(Du,4),Du+=4):(e=s,0===Pu&&Bu(Pt));e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?t=e=[e,n]:(Du=t,t=s)):(Du=t,t=s);return t}())!==s&&(e={type:"null",value:null}),e}function To(){var t,e,n,u,o;if(t=Du,e=Du,39===r.charCodeAt(Du)?(n="'",Du++):(n=s,0===Pu&&Bu(ur)),n!==s){for(u=[],o=So();o!==s;)u.push(o),o=So();u!==s?(39===r.charCodeAt(Du)?(o="'",Du++):(o=s,0===Pu&&Bu(ur)),o!==s?e=n=[n,u,o]:(Du=e,e=s)):(Du=e,e=s);}else Du=e,e=s;if(e!==s&&(e={type:"single_quote_string",value:e[1].join("")}),(t=e)===s){if(t=Du,e=Du,34===r.charCodeAt(Du)?(n='"',Du++):(n=s,0===Pu&&Bu(Kr)),n!==s){for(u=[],o=mo();o!==s;)u.push(o),o=mo();u!==s?(34===r.charCodeAt(Du)?(o='"',Du++):(o=s,0===Pu&&Bu(Kr)),o!==s?e=n=[n,u,o]:(Du=e,e=s)):(Du=e,e=s);}else Du=e,e=s;e!==s&&(e=function(r){return {type:"string",value:r[1].join("")}}(e)),t=e;}return t}function mo(){var t;return vt.test(r.charAt(Du))?(t=r.charAt(Du),Du++):(t=s,0===Pu&&Bu(dt)),t===s&&(t=Io()),t}function So(){var t;return Lt.test(r.charAt(Du))?(t=r.charAt(Du),Du++):(t=s,0===Pu&&Bu(Ct)),t===s&&(t=Io()),t}function Io(){var t,e,n,u,o,a,i,c,l,f;return t=Du,"\\'"===r.substr(Du,2)?(e="\\'",Du+=2):(e=s,0===Pu&&Bu(pt)),e!==s&&(e="'"),(t=e)===s&&(t=Du,'\\"'===r.substr(Du,2)?(e='\\"',Du+=2):(e=s,0===Pu&&Bu(wt)),e!==s&&(e='"'),(t=e)===s&&(t=Du,"\\\\"===r.substr(Du,2)?(e="\\\\",Du+=2):(e=s,0===Pu&&Bu(Et)),e!==s&&(e="\\"),(t=e)===s&&(t=Du,"\\/"===r.substr(Du,2)?(e="\\/",Du+=2):(e=s,0===Pu&&Bu(ht)),e!==s&&(e="/"),(t=e)===s&&(t=Du,"\\b"===r.substr(Du,2)?(e="\\b",Du+=2):(e=s,0===Pu&&Bu(At)),e!==s&&(e="\b"),(t=e)===s&&(t=Du,"\\f"===r.substr(Du,2)?(e="\\f",Du+=2):(e=s,0===Pu&&Bu(yt)),e!==s&&(e="\f"),(t=e)===s&&(t=Du,"\\n"===r.substr(Du,2)?(e="\\n",Du+=2):(e=s,0===Pu&&Bu(Tt)),e!==s&&(e="\n"),(t=e)===s&&(t=Du,"\\r"===r.substr(Du,2)?(e="\\r",Du+=2):(e=s,0===Pu&&Bu(mt)),e!==s&&(e="\r"),(t=e)===s&&(t=Du,"\\t"===r.substr(Du,2)?(e="\\t",Du+=2):(e=s,0===Pu&&Bu(St)),e!==s&&(e="\t"),(t=e)===s&&(t=Du,"\\u"===r.substr(Du,2)?(e="\\u",Du+=2):(e=s,0===Pu&&Bu(It)),e!==s&&(n=Uo())!==s&&(u=Uo())!==s&&(o=Uo())!==s&&(a=Uo())!==s?(i=n,c=u,l=o,f=a,t=e=String.fromCharCode(parseInt("0x"+i+c+l+f))):(Du=t,t=s),t===s&&(t=Du,92===r.charCodeAt(Du)?(e="\\",Du++):(e=s,0===Pu&&Bu(Nt)),e!==s&&(e="\\"),t=e)))))))))),t}function No(){var t,e;return (t=function(){var r,t,e,n;r=Du,(t=Ro())!==s&&(e=_o())!==s&&(n=Oo())!==s?(r=t={type:"bigint",value:t+e+n}):(Du=r,r=s);r===s&&(r=Du,(t=Ro())!==s&&(e=_o())!==s?(t=function(r,t){const e=r+t;return mi(r)?{type:"bigint",value:e}:parseFloat(e)}(t,e),r=t):(Du=r,r=s),r===s&&(r=Du,(t=Ro())!==s&&(e=Oo())!==s?(t=function(r,t){return {type:"bigint",value:r+t}}(t,e),r=t):(Du=r,r=s),r===s&&(r=Du,(t=Ro())!==s&&(t=function(r){return mi(r)?{type:"bigint",value:r}:parseFloat(r)}(t)),r=t)));return r}())!==s&&(t=(e=t)&&"bigint"===e.type?e:{type:"number",value:e}),t}function Ro(){var t,e,n;return (t=go())===s&&(t=xo())===s&&(t=Du,45===r.charCodeAt(Du)?(e="-",Du++):(e=s,0===Pu&&Bu(jr)),e===s&&(43===r.charCodeAt(Du)?(e="+",Du++):(e=s,0===Pu&&Bu(Hr))),e!==s&&(n=go())!==s?(t=e="-"+n):(Du=t,t=s),t===s&&(t=Du,45===r.charCodeAt(Du)?(e="-",Du++):(e=s,0===Pu&&Bu(jr)),e===s&&(43===r.charCodeAt(Du)?(e="+",Du++):(e=s,0===Pu&&Bu(Hr))),e!==s&&(n=xo())!==s?(t=e="-"+n):(Du=t,t=s))),t}function _o(){var t,e,n;return t=Du,46===r.charCodeAt(Du)?(e=".",Du++):(e=s,0===Pu&&Bu(Ot)),e!==s&&(n=go())!==s?(t=e="."+n):(Du=t,t=s),t}function Oo(){var t,e,n;return t=Du,(e=function(){var t,e,n;t=Du,Dt.test(r.charAt(Du))?(e=r.charAt(Du),Du++):(e=s,0===Pu&&Bu(kt));e!==s?($t.test(r.charAt(Du))?(n=r.charAt(Du),Du++):(n=s,0===Pu&&Bu(Ft)),n===s&&(n=null),n!==s?(t=e=e+(null!==(u=n)?u:"")):(Du=t,t=s)):(Du=t,t=s);var u;return t}())!==s&&(n=go())!==s?(t=e=e+n):(Du=t,t=s),t}function go(){var t,e;if(t=[],(e=xo())!==s)for(;e!==s;)t.push(e),e=xo();else t=s;return t!==s&&(t=t.join("")),t}function xo(){var t;return gt.test(r.charAt(Du))?(t=r.charAt(Du),Du++):(t=s,0===Pu&&Bu(xt)),t}function Uo(){var t;return Ut.test(r.charAt(Du))?(t=r.charAt(Du),Du++):(t=s,0===Pu&&Bu(Mt)),t}function Mo(){var t,e,n,u;return t=Du,"default"===r.substr(Du,7).toLowerCase()?(e=r.substr(Du,7),Du+=7):(e=s,0===Pu&&Bu(w)),e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?t=e=[e,n]:(Du=t,t=s)):(Du=t,t=s),t}function Do(){var t,e,n,u;return t=Du,"to"===r.substr(Du,2).toLowerCase()?(e=r.substr(Du,2),Du+=2):(e=s,0===Pu&&Bu(jt)),e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?t=e=[e,n]:(Du=t,t=s)):(Du=t,t=s),t}function ko(){var t,e,n,u;return t=Du,"show"===r.substr(Du,4).toLowerCase()?(e=r.substr(Du,4),Du+=4):(e=s,0===Pu&&Bu(Bt)),e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?t=e=[e,n]:(Du=t,t=s)):(Du=t,t=s),t}function $o(){var t,e,n,u;return t=Du,"drop"===r.substr(Du,4).toLowerCase()?(e=r.substr(Du,4),Du+=4):(e=s,0===Pu&&Bu(Xt)),e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="DROP"):(Du=t,t=s)):(Du=t,t=s),t}function Fo(){var t,e,n,u;return t=Du,"update"===r.substr(Du,6).toLowerCase()?(e=r.substr(Du,6),Du+=6):(e=s,0===Pu&&Bu(qt)),e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?t=e=[e,n]:(Du=t,t=s)):(Du=t,t=s),t}function Po(){var t,e,n,u;return t=Du,"create"===r.substr(Du,6).toLowerCase()?(e=r.substr(Du,6),Du+=6):(e=s,0===Pu&&Bu(Zt)),e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?t=e=[e,n]:(Du=t,t=s)):(Du=t,t=s),t}function Go(){var t,e,n,u;return t=Du,"temporary"===r.substr(Du,9).toLowerCase()?(e=r.substr(Du,9),Du+=9):(e=s,0===Pu&&Bu(zt)),e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?t=e=[e,n]:(Du=t,t=s)):(Du=t,t=s),t}function Ho(){var t,e,n,u;return t=Du,"if not exists"===r.substr(Du,13).toLowerCase()?(e=r.substr(Du,13),Du+=13):(e=s,0===Pu&&Bu(Jt)),e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?t=e=[e,n]:(Du=t,t=s)):(Du=t,t=s),t}function jo(){var t,e,n,u;return t=Du,"replace"===r.substr(Du,7).toLowerCase()?(e=r.substr(Du,7),Du+=7):(e=s,0===Pu&&Bu(ee)),e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?t=e=[e,n]:(Du=t,t=s)):(Du=t,t=s),t}function Yo(){var t,e,n,u;return t=Du,"rename"===r.substr(Du,6).toLowerCase()?(e=r.substr(Du,6),Du+=6):(e=s,0===Pu&&Bu(ne)),e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?t=e=[e,n]:(Du=t,t=s)):(Du=t,t=s),t}function Bo(){var t,e,n,u;return t=Du,"partition"===r.substr(Du,9).toLowerCase()?(e=r.substr(Du,9),Du+=9):(e=s,0===Pu&&Bu(se)),e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="PARTITION"):(Du=t,t=s)):(Du=t,t=s),t}function Xo(){var t,e,n,u;return t=Du,"into"===r.substr(Du,4).toLowerCase()?(e=r.substr(Du,4),Du+=4):(e=s,0===Pu&&Bu(oe)),e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?t=e=[e,n]:(Du=t,t=s)):(Du=t,t=s),t}function Wo(){var t,e,n,u;return t=Du,"set"===r.substr(Du,3).toLowerCase()?(e=r.substr(Du,3),Du+=3):(e=s,0===Pu&&Bu(K)),e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?t=e=[e,n]:(Du=t,t=s)):(Du=t,t=s),t}function Vo(){var t,e,n,u;return t=Du,"as"===r.substr(Du,2).toLowerCase()?(e=r.substr(Du,2),Du+=2):(e=s,0===Pu&&Bu(ce)),e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?t=e=[e,n]:(Du=t,t=s)):(Du=t,t=s),t}function Ko(){var t,e,n,u;return t=Du,"table"===r.substr(Du,5).toLowerCase()?(e=r.substr(Du,5),Du+=5):(e=s,0===Pu&&Bu(le)),e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="TABLE"):(Du=t,t=s)):(Du=t,t=s),t}function qo(){var t,e,n,u;return t=Du,"tables"===r.substr(Du,6).toLowerCase()?(e=r.substr(Du,6),Du+=6):(e=s,0===Pu&&Bu(fe)),e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="TABLES"):(Du=t,t=s)):(Du=t,t=s),t}function Zo(){var t,e,n,u;return t=Du,"on"===r.substr(Du,2).toLowerCase()?(e=r.substr(Du,2),Du+=2):(e=s,0===Pu&&Bu(de)),e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?t=e=[e,n]:(Du=t,t=s)):(Du=t,t=s),t}function zo(){var t,e,n,u;return t=Du,"join"===r.substr(Du,4).toLowerCase()?(e=r.substr(Du,4),Du+=4):(e=s,0===Pu&&Bu(Ee)),e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?t=e=[e,n]:(Du=t,t=s)):(Du=t,t=s),t}function Jo(){var t,e,n,u;return t=Du,"outer"===r.substr(Du,5).toLowerCase()?(e=r.substr(Du,5),Du+=5):(e=s,0===Pu&&Bu(he)),e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?t=e=[e,n]:(Du=t,t=s)):(Du=t,t=s),t}function Qo(){var t,e,n,u;return t=Du,"union"===r.substr(Du,5).toLowerCase()?(e=r.substr(Du,5),Du+=5):(e=s,0===Pu&&Bu(ye)),e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?t=e=[e,n]:(Du=t,t=s)):(Du=t,t=s),t}function ra(){var t,e,n,u;return t=Du,"values"===r.substr(Du,6).toLowerCase()?(e=r.substr(Du,6),Du+=6):(e=s,0===Pu&&Bu(Te)),e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?t=e=[e,n]:(Du=t,t=s)):(Du=t,t=s),t}function ta(){var t,e,n,u;return t=Du,"using"===r.substr(Du,5).toLowerCase()?(e=r.substr(Du,5),Du+=5):(e=s,0===Pu&&Bu(me)),e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?t=e=[e,n]:(Du=t,t=s)):(Du=t,t=s),t}function ea(){var t,e,n,u;return t=Du,"with"===r.substr(Du,4).toLowerCase()?(e=r.substr(Du,4),Du+=4):(e=s,0===Pu&&Bu(Sr)),e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?t=e=[e,n]:(Du=t,t=s)):(Du=t,t=s),t}function na(){var t,e,n,u;return t=Du,"by"===r.substr(Du,2).toLowerCase()?(e=r.substr(Du,2),Du+=2):(e=s,0===Pu&&Bu(Ne)),e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?t=e=[e,n]:(Du=t,t=s)):(Du=t,t=s),t}function ua(){var t,e,n,u;return t=Du,"asc"===r.substr(Du,3).toLowerCase()?(e=r.substr(Du,3),Du+=3):(e=s,0===Pu&&Bu(xe)),e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="ASC"):(Du=t,t=s)):(Du=t,t=s),t}function sa(){var t,e,n,u;return t=Du,"desc"===r.substr(Du,4).toLowerCase()?(e=r.substr(Du,4),Du+=4):(e=s,0===Pu&&Bu(Ue)),e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="DESC"):(Du=t,t=s)):(Du=t,t=s),t}function oa(){var t,e,n,u;return t=Du,"all"===r.substr(Du,3).toLowerCase()?(e=r.substr(Du,3),Du+=3):(e=s,0===Pu&&Bu(De)),e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="ALL"):(Du=t,t=s)):(Du=t,t=s),t}function aa(){var t,e,n,u;return t=Du,"distinct"===r.substr(Du,8).toLowerCase()?(e=r.substr(Du,8),Du+=8):(e=s,0===Pu&&Bu(ke)),e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="DISTINCT"):(Du=t,t=s)):(Du=t,t=s),t}function ia(){var t,e,n,u;return t=Du,"between"===r.substr(Du,7).toLowerCase()?(e=r.substr(Du,7),Du+=7):(e=s,0===Pu&&Bu($e)),e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="BETWEEN"):(Du=t,t=s)):(Du=t,t=s),t}function ca(){var t,e,n,u;return t=Du,"in"===r.substr(Du,2).toLowerCase()?(e=r.substr(Du,2),Du+=2):(e=s,0===Pu&&Bu(Fe)),e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="IN"):(Du=t,t=s)):(Du=t,t=s),t}function la(){var t,e,n,u;return t=Du,"is"===r.substr(Du,2).toLowerCase()?(e=r.substr(Du,2),Du+=2):(e=s,0===Pu&&Bu(Pe)),e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="IS"):(Du=t,t=s)):(Du=t,t=s),t}function fa(){var t,e,n,u;return t=Du,"like"===r.substr(Du,4).toLowerCase()?(e=r.substr(Du,4),Du+=4):(e=s,0===Pu&&Bu(Ge)),e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="LIKE"):(Du=t,t=s)):(Du=t,t=s),t}function ba(){var t,e,n,u;return t=Du,"exists"===r.substr(Du,6).toLowerCase()?(e=r.substr(Du,6),Du+=6):(e=s,0===Pu&&Bu(Ye)),e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="EXISTS"):(Du=t,t=s)):(Du=t,t=s),t}function va(){var t,e,n,u;return t=Du,"not"===r.substr(Du,3).toLowerCase()?(e=r.substr(Du,3),Du+=3):(e=s,0===Pu&&Bu(Be)),e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="NOT"):(Du=t,t=s)):(Du=t,t=s),t}function da(){var t,e,n,u;return t=Du,"and"===r.substr(Du,3).toLowerCase()?(e=r.substr(Du,3),Du+=3):(e=s,0===Pu&&Bu(Xe)),e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="AND"):(Du=t,t=s)):(Du=t,t=s),t}function La(){var t,e,n,u;return t=Du,"or"===r.substr(Du,2).toLowerCase()?(e=r.substr(Du,2),Du+=2):(e=s,0===Pu&&Bu(We)),e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="OR"):(Du=t,t=s)):(Du=t,t=s),t}function Ca(){var t,e,n,u;return t=Du,"case"===r.substr(Du,4).toLowerCase()?(e=r.substr(Du,4),Du+=4):(e=s,0===Pu&&Bu(rn)),e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?t=e=[e,n]:(Du=t,t=s)):(Du=t,t=s),t}function pa(){var t,e,n,u;return t=Du,"end"===r.substr(Du,3).toLowerCase()?(e=r.substr(Du,3),Du+=3):(e=s,0===Pu&&Bu(un)),e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?t=e=[e,n]:(Du=t,t=s)):(Du=t,t=s),t}function wa(){var t,e,n,u;return t=Du,"cast"===r.substr(Du,4).toLowerCase()?(e=r.substr(Du,4),Du+=4):(e=s,0===Pu&&Bu(sn)),e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?t=e=[e,n]:(Du=t,t=s)):(Du=t,t=s),t}function Ea(){var t,e,n,u;return t=Du,"char"===r.substr(Du,4).toLowerCase()?(e=r.substr(Du,4),Du+=4):(e=s,0===Pu&&Bu(on)),e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="CHAR"):(Du=t,t=s)):(Du=t,t=s),t}function ha(){var t,e,n,u;return t=Du,"varchar"===r.substr(Du,7).toLowerCase()?(e=r.substr(Du,7),Du+=7):(e=s,0===Pu&&Bu(an)),e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="VARCHAR"):(Du=t,t=s)):(Du=t,t=s),t}function Aa(){var t,e,n,u;return t=Du,"numeric"===r.substr(Du,7).toLowerCase()?(e=r.substr(Du,7),Du+=7):(e=s,0===Pu&&Bu(cn)),e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="NUMERIC"):(Du=t,t=s)):(Du=t,t=s),t}function ya(){var t,e,n,u;return t=Du,"decimal"===r.substr(Du,7).toLowerCase()?(e=r.substr(Du,7),Du+=7):(e=s,0===Pu&&Bu(ln)),e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="DECIMAL"):(Du=t,t=s)):(Du=t,t=s),t}function Ta(){var t,e,n,u;return t=Du,"unsigned"===r.substr(Du,8).toLowerCase()?(e=r.substr(Du,8),Du+=8):(e=s,0===Pu&&Bu(bn)),e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="UNSIGNED"):(Du=t,t=s)):(Du=t,t=s),t}function ma(){var t,e,n,u;return t=Du,"int"===r.substr(Du,3).toLowerCase()?(e=r.substr(Du,3),Du+=3):(e=s,0===Pu&&Bu(vn)),e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="INT"):(Du=t,t=s)):(Du=t,t=s),t}function Sa(){var t,e,n,u;return t=Du,"integer"===r.substr(Du,7).toLowerCase()?(e=r.substr(Du,7),Du+=7):(e=s,0===Pu&&Bu(Ln)),e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="INTEGER"):(Du=t,t=s)):(Du=t,t=s),t}function Ia(){var t,e,n,u;return t=Du,"smallint"===r.substr(Du,8).toLowerCase()?(e=r.substr(Du,8),Du+=8):(e=s,0===Pu&&Bu(pn)),e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="SMALLINT"):(Du=t,t=s)):(Du=t,t=s),t}function Na(){var t,e,n,u;return t=Du,"tinyint"===r.substr(Du,7).toLowerCase()?(e=r.substr(Du,7),Du+=7):(e=s,0===Pu&&Bu(wn)),e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="TINYINT"):(Du=t,t=s)):(Du=t,t=s),t}function Ra(){var t,e,n,u;return t=Du,"bigint"===r.substr(Du,6).toLowerCase()?(e=r.substr(Du,6),Du+=6):(e=s,0===Pu&&Bu(Tn)),e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="BIGINT"):(Du=t,t=s)):(Du=t,t=s),t}function _a(){var t,e,n,u;return t=Du,"float"===r.substr(Du,5).toLowerCase()?(e=r.substr(Du,5),Du+=5):(e=s,0===Pu&&Bu(Sn)),e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="FLOAT"):(Du=t,t=s)):(Du=t,t=s),t}function Oa(){var t,e,n,u;return t=Du,"double"===r.substr(Du,6).toLowerCase()?(e=r.substr(Du,6),Du+=6):(e=s,0===Pu&&Bu(In)),e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="DOUBLE"):(Du=t,t=s)):(Du=t,t=s),t}function ga(){var t,e,n,u;return t=Du,"date"===r.substr(Du,4).toLowerCase()?(e=r.substr(Du,4),Du+=4):(e=s,0===Pu&&Bu(Nn)),e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="DATE"):(Du=t,t=s)):(Du=t,t=s),t}function xa(){var t,e,n,u;return t=Du,"datetime"===r.substr(Du,8).toLowerCase()?(e=r.substr(Du,8),Du+=8):(e=s,0===Pu&&Bu(Rn)),e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="DATETIME"):(Du=t,t=s)):(Du=t,t=s),t}function Ua(){var t,e,n,u;return t=Du,"time"===r.substr(Du,4).toLowerCase()?(e=r.substr(Du,4),Du+=4):(e=s,0===Pu&&Bu(_n)),e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="TIME"):(Du=t,t=s)):(Du=t,t=s),t}function Ma(){var t,e,n,u;return t=Du,"timestamp"===r.substr(Du,9).toLowerCase()?(e=r.substr(Du,9),Du+=9):(e=s,0===Pu&&Bu(On)),e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="TIMESTAMP"):(Du=t,t=s)):(Du=t,t=s),t}function Da(){var t,e,n,u;return t=Du,"current_timestamp"===r.substr(Du,17).toLowerCase()?(e=r.substr(Du,17),Du+=17):(e=s,0===Pu&&Bu(jn)),e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="CURRENT_TIMESTAMP"):(Du=t,t=s)):(Du=t,t=s),t}function ka(){var t;return 64===r.charCodeAt(Du)?(t="@",Du++):(t=s,0===Pu&&Bu(Zn)),t}function $a(){var t;return (t=function(){var t;return "@@"===r.substr(Du,2)?(t="@@",Du+=2):(t=s,0===Pu&&Bu(zn)),t}())===s&&(t=ka())===s&&(t=function(){var t;return 36===r.charCodeAt(Du)?(t="$",Du++):(t=s,0===Pu&&Bu(Jn)),t}()),t}function Fa(){var t;return 61===r.charCodeAt(Du)?(t="=",Du++):(t=s,0===Pu&&Bu(Or)),t}function Pa(){var t,e,n,u;return t=Du,"add"===r.substr(Du,3).toLowerCase()?(e=r.substr(Du,3),Du+=3):(e=s,0===Pu&&Bu(eu)),e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="ADD"):(Du=t,t=s)):(Du=t,t=s),t}function Ga(){var t,e,n,u;return t=Du,"column"===r.substr(Du,6).toLowerCase()?(e=r.substr(Du,6),Du+=6):(e=s,0===Pu&&Bu(nu)),e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="COLUMN"):(Du=t,t=s)):(Du=t,t=s),t}function Ha(){var t,e,n,u;return t=Du,"index"===r.substr(Du,5).toLowerCase()?(e=r.substr(Du,5),Du+=5):(e=s,0===Pu&&Bu(uu)),e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="INDEX"):(Du=t,t=s)):(Du=t,t=s),t}function ja(){var t,e,n,u;return t=Du,"key"===r.substr(Du,3).toLowerCase()?(e=r.substr(Du,3),Du+=3):(e=s,0===Pu&&Bu(v)),e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="KEY"):(Du=t,t=s)):(Du=t,t=s),t}function Ya(){var t,e,n,u;return t=Du,"fulltext"===r.substr(Du,8).toLowerCase()?(e=r.substr(Du,8),Du+=8):(e=s,0===Pu&&Bu(su)),e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="FULLTEXT"):(Du=t,t=s)):(Du=t,t=s),t}function Ba(){var t,e,n,u;return t=Du,"spatial"===r.substr(Du,7).toLowerCase()?(e=r.substr(Du,7),Du+=7):(e=s,0===Pu&&Bu(ou)),e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="SPATIAL"):(Du=t,t=s)):(Du=t,t=s),t}function Xa(){var t,e,n,u;return t=Du,"unique"===r.substr(Du,6).toLowerCase()?(e=r.substr(Du,6),Du+=6):(e=s,0===Pu&&Bu(b)),e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="UNIQUE"):(Du=t,t=s)):(Du=t,t=s),t}function Wa(){var t,e,n,u;return t=Du,"comment"===r.substr(Du,7).toLowerCase()?(e=r.substr(Du,7),Du+=7):(e=s,0===Pu&&Bu(au)),e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="COMMENT"):(Du=t,t=s)):(Du=t,t=s),t}function Va(){var t;return 46===r.charCodeAt(Du)?(t=".",Du++):(t=s,0===Pu&&Bu(Ot)),t}function Ka(){var t;return 44===r.charCodeAt(Du)?(t=",",Du++):(t=s,0===Pu&&Bu(Cu)),t}function qa(){var t;return 42===r.charCodeAt(Du)?(t="*",Du++):(t=s,0===Pu&&Bu(Yr)),t}function Za(){var t;return 40===r.charCodeAt(Du)?(t="(",Du++):(t=s,0===Pu&&Bu(Ar)),t}function za(){var t;return 41===r.charCodeAt(Du)?(t=")",Du++):(t=s,0===Pu&&Bu(yr)),t}function Ja(){var t;return 59===r.charCodeAt(Du)?(t=";",Du++):(t=s,0===Pu&&Bu(Eu)),t}function Qa(){var t;return (t=function(){var t;return "||"===r.substr(Du,2)?(t="||",Du+=2):(t=s,0===Pu&&Bu(hu)),t}())===s&&(t=function(){var t;return "&&"===r.substr(Du,2)?(t="&&",Du+=2):(t=s,0===Pu&&Bu(Au)),t}()),t}function ri(){var r,t;for(r=[],(t=si())===s&&(t=ei());t!==s;)r.push(t),(t=si())===s&&(t=ei());return r}function ti(){var r,t;if(r=[],(t=si())===s&&(t=ei()),t!==s)for(;t!==s;)r.push(t),(t=si())===s&&(t=ei());else r=s;return r}function ei(){var t;return (t=function(){var t,e,n,u,o,a;t=Du,"/*"===r.substr(Du,2)?(e="/*",Du+=2):(e=s,0===Pu&&Bu(yu));if(e!==s){for(n=[],u=Du,o=Du,Pu++,"*/"===r.substr(Du,2)?(a="*/",Du+=2):(a=s,0===Pu&&Bu(Tu)),Pu--,a===s?o=void 0:(Du=o,o=s),o!==s&&(a=ui())!==s?u=o=[o,a]:(Du=u,u=s);u!==s;)n.push(u),u=Du,o=Du,Pu++,"*/"===r.substr(Du,2)?(a="*/",Du+=2):(a=s,0===Pu&&Bu(Tu)),Pu--,a===s?o=void 0:(Du=o,o=s),o!==s&&(a=ui())!==s?u=o=[o,a]:(Du=u,u=s);n!==s?("*/"===r.substr(Du,2)?(u="*/",Du+=2):(u=s,0===Pu&&Bu(Tu)),u!==s?t=e=[e,n,u]:(Du=t,t=s)):(Du=t,t=s);}else Du=t,t=s;return t}())===s&&(t=function(){var t,e,n,u,o,a;t=Du,"--"===r.substr(Du,2)?(e="--",Du+=2):(e=s,0===Pu&&Bu(mu));if(e!==s){for(n=[],u=Du,o=Du,Pu++,a=oi(),Pu--,a===s?o=void 0:(Du=o,o=s),o!==s&&(a=ui())!==s?u=o=[o,a]:(Du=u,u=s);u!==s;)n.push(u),u=Du,o=Du,Pu++,a=oi(),Pu--,a===s?o=void 0:(Du=o,o=s),o!==s&&(a=ui())!==s?u=o=[o,a]:(Du=u,u=s);n!==s?t=e=[e,n]:(Du=t,t=s);}else Du=t,t=s;return t}())===s&&(t=function(){var t,e,n,u,o,a;t=Du,35===r.charCodeAt(Du)?(e="#",Du++):(e=s,0===Pu&&Bu(Su));if(e!==s){for(n=[],u=Du,o=Du,Pu++,a=oi(),Pu--,a===s?o=void 0:(Du=o,o=s),o!==s&&(a=ui())!==s?u=o=[o,a]:(Du=u,u=s);u!==s;)n.push(u),u=Du,o=Du,Pu++,a=oi(),Pu--,a===s?o=void 0:(Du=o,o=s),o!==s&&(a=ui())!==s?u=o=[o,a]:(Du=u,u=s);n!==s?t=e=[e,n]:(Du=t,t=s);}else Du=t,t=s;return t}()),t}function ni(){var r,t,e,n,u,o,a;return r=Du,(t=Wa())!==s&&ri()!==s?((e=Fa())===s&&(e=null),e!==s&&ri()!==s&&(n=To())!==s?(o=e,a=n,r=t={type:(u=t).toLowerCase(),keyword:u.toLowerCase(),symbol:o,value:a}):(Du=r,r=s)):(Du=r,r=s),r}function ui(){var t;return r.length>Du?(t=r.charAt(Du),Du++):(t=s,0===Pu&&Bu(Iu)),t}function si(){var t;return Nu.test(r.charAt(Du))?(t=r.charAt(Du),Du++):(t=s,0===Pu&&Bu(Ru)),t}function oi(){var t,e;if((t=function(){var t,e;t=Du,Pu++,r.length>Du?(e=r.charAt(Du),Du++):(e=s,0===Pu&&Bu(Iu));Pu--,e===s?t=void 0:(Du=t,t=s);return t}())===s)if(t=[],Rt.test(r.charAt(Du))?(e=r.charAt(Du),Du++):(e=s,0===Pu&&Bu(_t)),e!==s)for(;e!==s;)t.push(e),Rt.test(r.charAt(Du))?(e=r.charAt(Du),Du++):(e=s,0===Pu&&Bu(_t));else t=s;return t}function ai(){var t,e;return t=Du,_i=[],(void 0)!==s&&ri()!==s?((e=ii())===s&&(e=function(){var t,e;t=Du,function(){var t;return "return"===r.substr(Du,6).toLowerCase()?(t=r.substr(Du,6),Du+=6):(t=s,0===Pu&&Bu(Qn)),t}()!==s&&ri()!==s&&(e=ci())!==s?(t={type:"return",expr:e}):(Du=t,t=s);return t}()),e!==s?(t={stmt:e,vars:_i}):(Du=t,t=s)):(Du=t,t=s),t}function ii(){var t,e,n,u;return t=Du,(e=Ci())===s&&(e=pi()),e!==s&&ri()!==s?((n=function(){var t;return ":="===r.substr(Du,2)?(t=":=",Du+=2):(t=s,0===Pu&&Bu(ru)),t}())===s&&(n=Fa()),n!==s&&ri()!==s&&(u=ci())!==s?(t=e={type:"assign",left:e,symbol:n,right:u}):(Du=t,t=s)):(Du=t,t=s),t}function ci(){var t;return (t=vs())===s&&(t=function(){var r,t,e,n,u;r=Du,(t=Ci())!==s&&ri()!==s&&(e=Os())!==s&&ri()!==s&&(n=Ci())!==s&&ri()!==s&&(u=xs())!==s?(r=t={type:"join",ltable:t,rtable:n,op:e,on:u}):(Du=r,r=s);return r}())===s&&(t=li())===s&&(t=function(){var t,e;t=Du,function(){var t;return 91===r.charCodeAt(Du)?(t="[",Du++):(t=s,0===Pu&&Bu(pu)),t}()!==s&&ri()!==s&&(e=Li())!==s&&ri()!==s&&function(){var t;return 93===r.charCodeAt(Du)?(t="]",Du++):(t=s,0===Pu&&Bu(wu)),t}()!==s?(t={type:"array",value:e}):(Du=t,t=s);return t}()),t}function li(){var r,t,e,n,u,o,a,i;if(r=Du,(t=fi())!==s){for(e=[],n=Du,(u=ri())!==s&&(o=so())!==s&&(a=ri())!==s&&(i=fi())!==s?n=u=[u,o,a,i]:(Du=n,n=s);n!==s;)e.push(n),n=Du,(u=ri())!==s&&(o=so())!==s&&(a=ri())!==s&&(i=fi())!==s?n=u=[u,o,a,i]:(Du=n,n=s);e!==s?(r=t=xr(t,e)):(Du=r,r=s);}else Du=r,r=s;return r}function fi(){var r,t,e,n,u,o,a,i;if(r=Du,(t=bi())!==s){for(e=[],n=Du,(u=ri())!==s&&(o=ao())!==s&&(a=ri())!==s&&(i=bi())!==s?n=u=[u,o,a,i]:(Du=n,n=s);n!==s;)e.push(n),n=Du,(u=ri())!==s&&(o=ao())!==s&&(a=ri())!==s&&(i=bi())!==s?n=u=[u,o,a,i]:(Du=n,n=s);e!==s?(r=t=xr(t,e)):(Du=r,r=s);}else Du=r,r=s;return r}function bi(){var r,t,e;return (r=Ao())===s&&(r=Ci())===s&&(r=di())===s&&(r=wo())===s&&(r=Du,Za()!==s&&ri()!==s&&(t=li())!==s&&ri()!==s&&za()!==s?((e=t).parentheses=!0,r=e):(Du=r,r=s)),r}function vi(){var r,t,e,n,u,o,a;return r=Du,(t=lo())!==s?(e=Du,(n=ri())!==s&&(u=Va())!==s&&(o=ri())!==s&&(a=lo())!==s?e=n=[n,u,o,a]:(Du=e,e=s),e===s&&(e=null),e!==s?(r=t=function(r,t){let e=r;return null!==t&&(e=`${r}.${t[3]}`),e}(t,e)):(Du=r,r=s)):(Du=r,r=s),r}function di(){var r,t,e;return r=Du,(t=vi())!==s&&ri()!==s&&Za()!==s&&ri()!==s?((e=Li())===s&&(e=null),e!==s&&ri()!==s&&za()!==s?(r=t={type:"function",name:t,args:{type:"expr_list",value:e}}):(Du=r,r=s)):(Du=r,r=s),r===s&&(r=Du,(t=vi())!==s&&(t=function(r){return {type:"function",name:r,args:null}}(t)),r=t),r}function Li(){var r,t,e,n,u,o,a,i;if(r=Du,(t=bi())!==s){for(e=[],n=Du,(u=ri())!==s&&(o=Ka())!==s&&(a=ri())!==s&&(i=bi())!==s?n=u=[u,o,a,i]:(Du=n,n=s);n!==s;)e.push(n),n=Du,(u=ri())!==s&&(o=Ka())!==s&&(a=ri())!==s&&(i=bi())!==s?n=u=[u,o,a,i]:(Du=n,n=s);e!==s?(r=t=l(t,e)):(Du=r,r=s);}else Du=r,r=s;return r}function Ci(){var r,t,e,n,u;return r=Du,(t=$a())!==s&&(e=pi())!==s?(n=t,u=e,r=t={type:"var",...u,prefix:n}):(Du=r,r=s),r}function pi(){var t,e,n,u,o;return t=Du,(e=vo())!==s&&(n=function(){var e,n,u,o;e=[],n=Du,46===r.charCodeAt(Du)?(u=".",Du++):(u=s,0===Pu&&Bu(Ot));u!==s&&(o=vo())!==s?n=u=[u,o]:(Du=n,n=s);for(;n!==s;)e.push(n),n=Du,46===r.charCodeAt(Du)?(u=".",Du++):(u=s,0===Pu&&Bu(Ot)),u!==s&&(o=vo())!==s?n=u=[u,o]:(Du=n,n=s);e!==s&&(e=function(r){const t=[];for(let e=0;e<r.length;e++)t.push(r[e][1]);return t}(e));return e}())!==s?(u=e,o=n,_i.push(u),t=e={type:"var",name:u,members:o,prefix:null}):(Du=t,t=s),t}function wi(){var t;return (t=Ei())===s&&(t=function(){var t,e,n,u,o,a,i,c,l,f,b,v;t=Du,(e=Aa())===s&&(e=ya())===s&&(e=ma())===s&&(e=Sa())===s&&(e=Ia())===s&&(e=Na())===s&&(e=Ra())===s&&(e=_a())===s&&(e=Oa());if(e!==s)if((n=ri())!==s)if((u=Za())!==s)if((o=ri())!==s){if(a=[],gt.test(r.charAt(Du))?(i=r.charAt(Du),Du++):(i=s,0===Pu&&Bu(xt)),i!==s)for(;i!==s;)a.push(i),gt.test(r.charAt(Du))?(i=r.charAt(Du),Du++):(i=s,0===Pu&&Bu(xt));else a=s;if(a!==s)if((i=ri())!==s){if(c=Du,(l=Ka())!==s)if((f=ri())!==s){if(b=[],gt.test(r.charAt(Du))?(v=r.charAt(Du),Du++):(v=s,0===Pu&&Bu(xt)),v!==s)for(;v!==s;)b.push(v),gt.test(r.charAt(Du))?(v=r.charAt(Du),Du++):(v=s,0===Pu&&Bu(xt));else b=s;b!==s?c=l=[l,f,b]:(Du=c,c=s);}else Du=c,c=s;else Du=c,c=s;c===s&&(c=null),c!==s&&(l=ri())!==s&&(f=za())!==s&&(b=ri())!==s?((v=hi())===s&&(v=null),v!==s?(d=c,L=v,e={dataType:e,length:parseInt(a.join(""),10),scale:d&&parseInt(d[2].join(""),10),parentheses:!0,suffix:L},t=e):(Du=t,t=s)):(Du=t,t=s);}else Du=t,t=s;else Du=t,t=s;}else Du=t,t=s;else Du=t,t=s;else Du=t,t=s;else Du=t,t=s;var d,L;if(t===s){if(t=Du,(e=Aa())===s&&(e=ya())===s&&(e=ma())===s&&(e=Sa())===s&&(e=Ia())===s&&(e=Na())===s&&(e=Ra())===s&&(e=_a())===s&&(e=Oa()),e!==s){if(n=[],gt.test(r.charAt(Du))?(u=r.charAt(Du),Du++):(u=s,0===Pu&&Bu(xt)),u!==s)for(;u!==s;)n.push(u),gt.test(r.charAt(Du))?(u=r.charAt(Du),Du++):(u=s,0===Pu&&Bu(xt));else n=s;n!==s&&(u=ri())!==s?((o=hi())===s&&(o=null),o!==s?(e=function(r,t,e){return {dataType:r,length:parseInt(t.join(""),10),suffix:e}}(e,n,o),t=e):(Du=t,t=s)):(Du=t,t=s);}else Du=t,t=s;t===s&&(t=Du,(e=Aa())===s&&(e=ya())===s&&(e=ma())===s&&(e=Sa())===s&&(e=Ia())===s&&(e=Na())===s&&(e=Ra())===s&&(e=_a())===s&&(e=Oa()),e!==s&&(n=ri())!==s?((u=hi())===s&&(u=null),u!==s&&(o=ri())!==s?(e=function(r,t){return {dataType:r,suffix:t}}(e,u),t=e):(Du=t,t=s)):(Du=t,t=s));}return t}())===s&&(t=function(){var t,e,n,u;t=Du,(e=ga())===s&&(e=xa())===s&&(e=Ua())===s&&(e=Ma());e!==s&&ri()!==s&&Za()!==s&&ri()!==s?(Uu.test(r.charAt(Du))?(n=r.charAt(Du),Du++):(n=s,0===Pu&&Bu(Mu)),n!==s&&ri()!==s&&za()!==s&&ri()!==s?((u=hi())===s&&(u=null),u!==s?(e={dataType:e,length:parseInt(n,10)},t=e):(Du=t,t=s)):(Du=t,t=s)):(Du=t,t=s);t===s&&(t=Du,(e=ga())===s&&(e=xa())===s&&(e=Ua())===s&&(e=Ma()),e!==s&&(e=xu(e)),t=e);return t}())===s&&(t=function(){var e;(e=function(){var t,e,n,u;return t=Du,"json"===r.substr(Du,4).toLowerCase()?(e=r.substr(Du,4),Du+=4):(e=s,0===Pu&&Bu(Cn)),e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="JSON"):(Du=t,t=s)):(Du=t,t=s),t}())!==s&&(e=xu(e));return e}())===s&&(t=function(){var e;(e=function(){var t,e,n,u;return t=Du,"tinytext"===r.substr(Du,8).toLowerCase()?(e=r.substr(Du,8),Du+=8):(e=s,0===Pu&&Bu(En)),e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="TINYTEXT"):(Du=t,t=s)):(Du=t,t=s),t}())===s&&(e=function(){var t,e,n,u;return t=Du,"text"===r.substr(Du,4).toLowerCase()?(e=r.substr(Du,4),Du+=4):(e=s,0===Pu&&Bu(hn)),e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="TEXT"):(Du=t,t=s)):(Du=t,t=s),t}())===s&&(e=function(){var t,e,n,u;return t=Du,"mediumtext"===r.substr(Du,10).toLowerCase()?(e=r.substr(Du,10),Du+=10):(e=s,0===Pu&&Bu(An)),e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="MEDIUMTEXT"):(Du=t,t=s)):(Du=t,t=s),t}())===s&&(e=function(){var t,e,n,u;return t=Du,"longtext"===r.substr(Du,8).toLowerCase()?(e=r.substr(Du,8),Du+=8):(e=s,0===Pu&&Bu(yn)),e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="LONGTEXT"):(Du=t,t=s)):(Du=t,t=s),t}());e!==s&&(e={dataType:e});return e}())===s&&(t=function(){var t,e,n;t=Du,(e=function(){var t,e,n,u;return t=Du,"enum"===r.substr(Du,4).toLowerCase()?(e=r.substr(Du,4),Du+=4):(e=s,0===Pu&&Bu(mn)),e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="ENUM"):(Du=t,t=s)):(Du=t,t=s),t}())!==s&&ri()!==s&&(n=Bs())!==s?(u=e,(o=n).parentheses=!0,t=e={dataType:u,expr:o}):(Du=t,t=s);var u,o;return t}())===s&&(t=function(){var e;"boolean"===r.substr(Du,7).toLowerCase()?(e=r.substr(Du,7),Du+=7):(e=s,0===Pu&&Bu(_u));e!==s&&(e={dataType:"BOOLEAN"});return e}())===s&&(t=function(){var t,e;t=Du,"binary"===r.substr(Du,6).toLowerCase()?(e=r.substr(Du,6),Du+=6):(e=s,0===Pu&&Bu(Ou));e!==s&&(e={dataType:"BINARY"});(t=e)===s&&(t=Du,"varbinary"===r.substr(Du,9).toLowerCase()?(e=r.substr(Du,9),Du+=9):(e=s,0===Pu&&Bu(gu)),e!==s&&(e={dataType:"VARBINARY"}),t=e);return t}()),t}function Ei(){var t,e,n,u;if(t=Du,(e=Ea())===s&&(e=ha()),e!==s)if(ri()!==s)if(Za()!==s)if(ri()!==s){if(n=[],gt.test(r.charAt(Du))?(u=r.charAt(Du),Du++):(u=s,0===Pu&&Bu(xt)),u!==s)for(;u!==s;)n.push(u),gt.test(r.charAt(Du))?(u=r.charAt(Du),Du++):(u=s,0===Pu&&Bu(xt));else n=s;n!==s&&(u=ri())!==s&&za()!==s?(t=e={dataType:e,length:parseInt(n.join(""),10)}):(Du=t,t=s);}else Du=t,t=s;else Du=t,t=s;else Du=t,t=s;else Du=t,t=s;return t===s&&(t=Du,(e=Ea())!==s&&(e=xu(e)),(t=e)===s&&(t=Du,(e=ha())!==s&&(e=xu(e)),t=e)),t}function hi(){var t,e,n;return t=Du,(e=Ta())===s&&(e=null),e!==s&&ri()!==s?((n=function(){var t,e,n,u;return t=Du,"zerofill"===r.substr(Du,8).toLowerCase()?(e=r.substr(Du,8),Du+=8):(e=s,0===Pu&&Bu(dn)),e!==s?(n=Du,Pu++,u=Lo(),Pu--,u===s?n=void 0:(Du=n,n=s),n!==s?(t=e="ZEROFILL"):(Du=t,t=s)):(Du=t,t=s),t}())===s&&(n=null),n!==s?(t=e=function(r,t){const e=[];return r&&e.push(r),t&&e.push(t),e}(e,n)):(Du=t,t=s)):(Du=t,t=s),t}const Ai={ALTER:!0,ALL:!0,ADD:!0,AND:!0,AS:!0,ASC:!0,BETWEEN:!0,BY:!0,CALL:!0,CASE:!0,CREATE:!0,CONTAINS:!0,CURRENT_DATE:!0,CURRENT_TIME:!0,CURRENT_TIMESTAMP:!0,CURRENT_USER:!0,DELETE:!0,DESC:!0,DISTINCT:!0,DROP:!0,ELSE:!0,END:!0,EXISTS:!0,EXPLAIN:!0,FALSE:!0,FROM:!0,FULL:!0,GROUP:!0,HAVING:!0,IN:!0,INNER:!0,INSERT:!0,INTO:!0,IS:!0,JOIN:!0,JSON:!0,KEY:!0,LEFT:!0,LIKE:!0,LIMIT:!0,LOW_PRIORITY:!0,NOT:!0,NULL:!0,ON:!0,OR:!0,ORDER:!0,OUTER:!0,RECURSIVE:!0,RENAME:!0,RIGHT:!0,READ:!0,SELECT:!0,SESSION_USER:!0,SET:!0,SHOW:!0,STATUS:!0,SYSTEM_USER:!0,TABLE:!0,THEN:!0,TRUE:!0,TRUNCATE:!0,TYPE:!0,UNION:!0,UPDATE:!0,USING:!0,VALUES:!0,WITH:!0,WHEN:!0,WHERE:!0,WRITE:!0,GLOBAL:!0,SESSION:!0,LOCAL:!0,PERSIST:!0,PERSIST_ONLY:!0};function yi(r,t){return {type:"unary_expr",operator:r,expr:t}}function Ti(r,t,e){return {type:"binary_expr",operator:r,left:t,right:e}}function mi(r){const t=n(Number.MAX_SAFE_INTEGER);return !(n(r)<t)}function Si(r,t,e=3){const n=[r];for(let r=0;r<t.length;r++)n.push(t[r][e]);return n}function Ii(r,t){let e=r;for(let r=0;r<t.length;r++)e=Ti(t[r][1],e,t[r][3]);return e}function Ni(r){const t=xi[r];return t||(r||null)}function Ri(r){const t=new Set;for(let e of r.keys()){const r=e.split("::");if(!r){t.add(e);break}r&&r[1]&&(r[1]=Ni(r[1])),t.add(r.join("::"));}return Array.from(t)}let _i=[];const Oi=new Set,gi=new Set,xi={};if((e=a())!==s&&Du===r.length)return e;throw e!==s&&Du<r.length&&Bu({type:"end"}),Xu(Fu,$u<r.length?r.charAt($u):null,$u<r.length?Yu($u,$u+1):Yu($u,$u))}};},function(r,t,e){var n=e(0);function u(r,t,e,n){this.message=r,this.expected=t,this.found=e,this.location=n,this.name="SyntaxError","function"==typeof Error.captureStackTrace&&Error.captureStackTrace(this,u);}!function(r,t){function e(){this.constructor=r;}e.prototype=t.prototype,r.prototype=new e;}(u,Error),u.buildMessage=function(r,t){var e={literal:function(r){return '"'+u(r.text)+'"'},class:function(r){var t,e="";for(t=0;t<r.parts.length;t++)e+=r.parts[t]instanceof Array?s(r.parts[t][0])+"-"+s(r.parts[t][1]):s(r.parts[t]);return "["+(r.inverted?"^":"")+e+"]"},any:function(r){return "any character"},end:function(r){return "end of input"},other:function(r){return r.description}};function n(r){return r.charCodeAt(0).toString(16).toUpperCase()}function u(r){return r.replace(/\\/g,"\\\\").replace(/"/g,'\\"').replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(r){return "\\x0"+n(r)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(r){return "\\x"+n(r)}))}function s(r){return r.replace(/\\/g,"\\\\").replace(/\]/g,"\\]").replace(/\^/g,"\\^").replace(/-/g,"\\-").replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(r){return "\\x0"+n(r)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(r){return "\\x"+n(r)}))}return "Expected "+function(r){var t,n,u,s=new Array(r.length);for(t=0;t<r.length;t++)s[t]=(u=r[t],e[u.type](u));if(s.sort(),s.length>0){for(t=1,n=1;t<s.length;t++)s[t-1]!==s[t]&&(s[n]=s[t],n++);s.length=n;}switch(s.length){case 1:return s[0];case 2:return s[0]+" or "+s[1];default:return s.slice(0,-1).join(", ")+", or "+s[s.length-1]}}(r)+" but "+function(r){return r?'"'+u(r)+'"':"end of input"}(t)+" found."},r.exports={SyntaxError:u,parse:function(r,t){t=void 0!==t?t:{};var e,s={},o={start:co},a=co,i=no("EXTENSION",!0),c=no("SCHEMA",!0),l=no("VERSION",!0),b=no("INCREMENT",!0),v=no("MINVALUE",!0),d=function(r,t){return {resource:"sequence",prefix:r.toLowerCase(),value:t}},L=no("NO",!0),C=no("MAXVALUE",!0),p=no("START",!0),w=no("CACHE",!0),E=no("CYCLE",!0),h=no("OWNED",!0),A=no("NONE",!0),y=no("NULLS",!0),T=no("FIRST",!0),m=no("LAST",!0),S=no("AUTO_INCREMENT",!0),I=no("UNIQUE",!0),N=no("KEY",!0),R=no("PRIMARY",!0),_=no("COLUMN_FORMAT",!0),O=no("FIXED",!0),g=no("DYNAMIC",!0),x=no("DEFAULT",!0),U=no("STORAGE",!0),M=no("DISK",!0),D=no("MEMORY",!0),k=no("ALGORITHM",!0),$=no("INSTANT",!0),F=no("INPLACE",!0),P=no("COPY",!0),G=no("LOCK",!0),H=no("SHARED",!0),j=no("EXCLUSIVE",!0),Y=no("PRIMARY KEY",!0),B=no("FOREIGN KEY",!0),X=no("MATCH FULL",!0),W=no("MATCH PARTIAL",!0),V=no("MATCH SIMPLE",!0),K=no("ON DELETE",!0),q=no("ON UPDATE",!0),Z=no("RESTRICT",!0),z=no("CASCADE",!0),J=no("SET NULL",!0),Q=no("NO ACTION",!0),rr=no("SET DEFAULT",!0),tr=no("TRIGGER",!0),er=no("BEFORE",!0),nr=no("AFTER",!0),ur=no("INSTEAD OF",!0),sr=no("ON",!0),or=no("EXECUTE",!0),ar=no("PROCEDURE",!0),ir=no("OF",!0),cr=no("NOT",!0),lr=no("DEFERRABLE",!0),fr=no("INITIALLY IMMEDIATE",!0),br=no("INITIALLY DEFERRED",!0),vr=no("FOR",!0),dr=no("EACH",!0),Lr=no("ROW",!0),Cr=no("STATEMENT",!0),pr=no("CHARACTER",!0),wr=no("SET",!0),Er=no("CHARSET",!0),hr=no("COLLATE",!0),Ar=no("AVG_ROW_LENGTH",!0),yr=no("KEY_BLOCK_SIZE",!0),Tr=no("MAX_ROWS",!0),mr=no("MIN_ROWS",!0),Sr=no("STATS_SAMPLE_PAGES",!0),Ir=no("CONNECTION",!0),Nr=no("COMPRESSION",!0),Rr=no("'",!1),_r=no("ZLIB",!0),Or=no("LZ4",!0),gr=no("ENGINE",!0),xr=no("IN",!0),Ur=no("ACCESS SHARE",!0),Mr=no("ROW SHARE",!0),Dr=no("ROW EXCLUSIVE",!0),kr=no("SHARE UPDATE EXCLUSIVE",!0),$r=no("SHARE ROW EXCLUSIVE",!0),Fr=no("ACCESS EXCLUSIVE",!0),Pr=no("SHARE",!0),Gr=no("MODE",!0),Hr=no("NOWAIT",!0),jr=no("TABLES",!0),Yr=no("(",!1),Br=no(")",!1),Xr=function(r,t){return hl(r,t)},Wr=function(r,t){return {type:"expr",expr:r,as:t}},Vr=no("BTREE",!0),Kr=no("HASH",!0),qr=no("GIST",!0),Zr=no("GIN",!0),zr=no("WITH",!0),Jr=no("PARSER",!0),Qr=no("VISIBLE",!0),rt=no("INVISIBLE",!0),tt=function(r,t){return t.unshift(r),t.forEach(r=>{const{table:t,as:e}=r;Rl[t]=t,e&&(Rl[e]=t),function(r){const t=Tl(r);r.clear(),t.forEach(t=>r.add(t));}(Nl);}),t},et=no("FOLLOWING",!0),nt=no("PRECEDING",!0),ut=no("CURRENT",!0),st=no("UNBOUNDED",!0),ot=no("=",!1),at=function(r,t){return Al(r,t)},it=no("!",!1),ct=no(">=",!1),lt=no(">",!1),ft=no("<=",!1),bt=no("<>",!1),vt=no("<",!1),dt=no("!=",!1),Lt=no("SIMILAR",!0),Ct=no("@>",!1),pt=no("<@",!1),wt=no("?",!1),Et=no("?|",!1),ht=no("?&",!1),At=no("#-",!1),yt=no("+",!1),Tt=no("-",!1),mt=no("*",!1),St=no("/",!1),It=no("%",!1),Nt=no("$",!1),Rt=no("E",!0),_t=function(r){return !0===Cl[r.toUpperCase()]},Ot=no('"',!1),gt=/^[^"]/,xt=uo(['"'],!0,!1),Ut=function(r){return r.join("")},Mt=/^[^']/,Dt=uo(["'"],!0,!1),kt=no("`",!1),$t=/^[^`]/,Ft=uo(["`"],!0,!1),Pt=/^[A-Za-z_]/,Gt=uo([["A","Z"],["a","z"],"_"],!1,!1),Ht=/^[A-Za-z0-9_\-]/,jt=uo([["A","Z"],["a","z"],["0","9"],"_","-"],!1,!1),Yt=/^[A-Za-z0-9_]/,Bt=uo([["A","Z"],["a","z"],["0","9"],"_"],!1,!1),Xt=no(":",!1),Wt=no("OVER",!0),Vt=no("FIRST_VALUE",!0),Kt=no("LAST_VALUE",!0),qt=no("ROW_NUMBER",!0),Zt=no("DENSE_RANK",!0),zt=no("RANK",!0),Jt=no("LAG",!0),Qt=no("LEAD",!0),re=no("NTH_VALUE",!0),te=no("IGNORE",!0),ee=no("RESPECT",!0),ne=no("percentile_cont",!0),ue=no("percentile_disc",!0),se=no("within",!0),oe=no("mode",!0),ae=no("CENTURY",!0),ie=no("DAY",!0),ce=no("DECADE",!0),le=no("DOW",!0),fe=no("DOY",!0),be=no("EPOCH",!0),ve=no("HOUR",!0),de=no("ISODOW",!0),Le=no("ISOYEAR",!0),Ce=no("MICROSECONDS",!0),pe=no("MILLENNIUM",!0),we=no("MILLISECONDS",!0),Ee=no("MINUTE",!0),he=no("MONTH",!0),Ae=no("QUARTER",!0),ye=no("SECOND",!0),Te=no("TIMEZONE",!0),me=no("TIMEZONE_HOUR",!0),Se=no("TIMEZONE_MINUTE",!0),Ie=no("WEEK",!0),Ne=no("YEAR",!0),Re=/^[\n]/,_e=uo(["\n"],!1,!1),Oe=/^[^"\\\0-\x1F\x7F]/,ge=uo(['"',"\\",["\0",""],""],!0,!1),xe=/^[^'\\]/,Ue=uo(["'","\\"],!0,!1),Me=no("\\'",!1),De=no('\\"',!1),ke=no("\\\\",!1),$e=no("\\/",!1),Fe=no("\\b",!1),Pe=no("\\f",!1),Ge=no("\\n",!1),He=no("\\r",!1),je=no("\\t",!1),Ye=no("\\u",!1),Be=no("\\",!1),Xe=no("''",!1),We=/^[\n\r]/,Ve=uo(["\n","\r"],!1,!1),Ke=no(".",!1),qe=/^[0-9]/,Ze=uo([["0","9"]],!1,!1),ze=/^[0-9a-fA-F]/,Je=uo([["0","9"],["a","f"],["A","F"]],!1,!1),Qe=/^[eE]/,rn=uo(["e","E"],!1,!1),tn=/^[+\-]/,en=uo(["+","-"],!1,!1),nn=no("NULL",!0),un=no("NOT NULL",!0),sn=no("TRUE",!0),on=no("TO",!0),an=no("FALSE",!0),cn=no("SHOW",!0),ln=no("DROP",!0),fn=no("USE",!0),bn=no("ALTER",!0),vn=no("SELECT",!0),dn=no("UPDATE",!0),Ln=no("CREATE",!0),Cn=no("TEMPORARY",!0),pn=no("TEMP",!0),wn=no("IF NOT EXISTS",!0),En=no("DELETE",!0),hn=no("INSERT",!0),An=no("RECURSIVE",!1),yn=no("REPLACE",!0),Tn=no("RETURNING",!0),mn=no("RENAME",!0),Sn=(no("PARTITION",!0)),In=no("INTO",!0),Nn=no("FROM",!0),Rn=no("AS",!0),_n=no("TABLE",!0),On=no("DATABASE",!0),gn=no("SCHEME",!0),xn=no("SEQUENCE",!0),Un=no("TABLESPACE",!0),Mn=no("LEFT",!0),Dn=no("RIGHT",!0),kn=no("FULL",!0),$n=no("INNER",!0),Fn=no("JOIN",!0),Pn=no("OUTER",!0),Gn=no("UNION",!0),Hn=no("VALUES",!0),jn=no("USING",!0),Yn=no("WHERE",!0),Bn=no("GROUP",!0),Xn=no("BY",!0),Wn=no("ORDER",!0),Vn=no("HAVING",!0),Kn=no("LIMIT",!0),qn=no("OFFSET",!0),Zn=no("ASC",!0),zn=no("DESC",!0),Jn=no("ALL",!0),Qn=no("DISTINCT",!0),ru=no("BETWEEN",!0),tu=no("IS",!0),eu=no("LIKE",!0),nu=no("ILIKE",!0),uu=no("EXISTS",!0),su=no("AND",!0),ou=no("OR",!0),au=no("ARRAY",!0),iu=no("ARRAY_AGG",!0),cu=no("COUNT",!0),lu=no("GROUP_CONCAT",!0),fu=no("MAX",!0),bu=no("MIN",!0),vu=no("SUM",!0),du=no("AVG",!0),Lu=no("EXTRACT",!0),Cu=no("CALL",!0),pu=no("CASE",!0),wu=no("WHEN",!0),Eu=no("THEN",!0),hu=no("ELSE",!0),Au=no("END",!0),yu=no("CAST",!0),Tu=no("BOOL",!0),mu=no("BOOLEAN",!0),Su=no("CHAR",!0),Iu=no("VARCHAR",!0),Nu=no("NUMERIC",!0),Ru=no("DECIMAL",!0),_u=no("SIGNED",!0),Ou=no("UNSIGNED",!0),gu=no("INT",!0),xu=no("ZEROFILL",!0),Uu=no("INTEGER",!0),Mu=no("JSON",!0),Du=no("JSONB",!0),ku=no("GEOMETRY",!0),$u=no("SMALLINT",!0),Fu=no("SERIAL",!0),Pu=no("TINYINT",!0),Gu=no("TINYTEXT",!0),Hu=no("TEXT",!0),ju=no("MEDIUMTEXT",!0),Yu=no("LONGTEXT",!0),Bu=no("BIGINT",!0),Xu=no("ENUM",!0),Wu=no("FLOAT",!0),Vu=no("DOUBLE",!0),Ku=no("DATE",!0),qu=no("DATETIME",!0),Zu=no("ROWS",!0),zu=no("TIME",!0),Ju=no("TIMESTAMP",!0),Qu=no("TRUNCATE",!0),rs=no("USER",!0),ts=no("UUID",!0),es=no("CURRENT_DATE",!0),ns=(no("INTERVAL",!0)),us=no("CURRENT_TIME",!0),ss=no("CURRENT_TIMESTAMP",!0),os=no("CURRENT_USER",!0),as=no("SESSION_USER",!0),is=no("SYSTEM_USER",!0),cs=no("GLOBAL",!0),ls=no("SESSION",!0),fs=no("LOCAL",!0),bs=no("PERSIST",!0),vs=no("PERSIST_ONLY",!0),ds=no("@",!1),Ls=no("@@",!1),Cs=no("return",!0),ps=no(":=",!1),ws=no("::",!1),Es=no("DUAL",!0),hs=no("ADD",!0),As=no("COLUMN",!0),ys=no("INDEX",!0),Ts=no("FULLTEXT",!0),ms=no("SPATIAL",!0),Ss=no("COMMENT",!0),Is=no("CONSTRAINT",!0),Ns=no("CONCURRENTLY",!0),Rs=no("REFERENCES",!0),_s=no("SQL_CALC_FOUND_ROWS",!0),Os=no("SQL_CACHE",!0),gs=no("SQL_NO_CACHE",!0),xs=no("SQL_SMALL_RESULT",!0),Us=no("SQL_BIG_RESULT",!0),Ms=no("SQL_BUFFER_RESULT",!0),Ds=no(",",!1),ks=no("[",!1),$s=no("]",!1),Fs=no(";",!1),Ps=no("->",!1),Gs=no("->>",!1),Hs=no("#>",!1),js=no("#>>",!1),Ys=no("||",!1),Bs=no("&&",!1),Xs=no("/*",!1),Ws=no("*/",!1),Vs=no("--",!1),Ks=({type:"any"}),qs=/^[ \t\n\r]/,Zs=uo([" ","\t","\n","\r"],!1,!1),zs=function(r){return {dataType:r}},Js=0,Qs=[{line:1,column:1}],ro=0,to=[],eo=0;if("startRule"in t){if(!(t.startRule in o))throw new Error("Can't start parsing from rule \""+t.startRule+'".');a=o[t.startRule];}function no(r,t){return {type:"literal",text:r,ignoreCase:t}}function uo(r,t,e){return {type:"class",parts:r,inverted:t,ignoreCase:e}}function so(t){var e,n=Qs[t];if(n)return n;for(e=t-1;!Qs[e];)e--;for(n={line:(n=Qs[e]).line,column:n.column};e<t;)10===r.charCodeAt(e)?(n.line++,n.column=1):n.column++,e++;return Qs[t]=n,n}function oo(r,t){var e=so(r),n=so(t);return {start:{offset:r,line:e.line,column:e.column},end:{offset:t,line:n.line,column:n.column}}}function ao(r){Js<ro||(Js>ro&&(ro=Js,to=[]),to.push(r));}function io(r,t,e){return new u(u.buildMessage(r,t),r,t,e)}function co(){var r,t;return r=Js,Zc()!==s?((t=function(){var r,t,e,n,u,o,a,i;if(r=Js,(t=fo())!==s){if(e=[],n=Js,(u=Zc())!==s&&(o=Vc())!==s&&(a=Zc())!==s&&(i=fo())!==s?n=u=[u,o,a,i]:(Js=n,n=s),n!==s)for(;n!==s;)e.push(n),n=Js,(u=Zc())!==s&&(o=Vc())!==s&&(a=Zc())!==s&&(i=fo())!==s?n=u=[u,o,a,i]:(Js=n,n=s);else e=s;e!==s?(t=function(r,t){const e=[r&&r.ast||r];for(let r=0;r<t.length;r++)t[r][3]&&0!==t[r][3].length&&e.push(t[r][3]&&t[r][3].ast||t[r][3]);return {tableList:Array.from(Il),columnList:Tl(Nl),ast:e}}(t,e),r=t):(Js=r,r=s);}else Js=r,r=s;return r}())===s&&(t=lo())===s&&(t=fo()),t!==s?(r=t):(Js=r,r=s)):(Js=r,r=s),r}function lo(){var t;return (t=function(){var r,t,e,n,u,o;r=Js,(t=Ei())!==s&&Zc()!==s&&(e=Ui())!==s&&Zc()!==s&&(n=Ko())!==s?(a=t,i=e,(c=n)&&c.forEach(r=>Il.add(`${a}::${r.db}::${r.table}`)),t={tableList:Array.from(Il),columnList:Tl(Nl),ast:{type:a.toLowerCase(),keyword:i.toLowerCase(),name:c}},r=t):(Js=r,r=s);var a,i,c;r===s&&(r=Js,(t=Ei())!==s&&Zc()!==s&&(e=Dc())!==s&&Zc()!==s&&(n=$a())!==s&&Zc()!==s&&Mi()!==s&&Zc()!==s&&(u=Jo())!==s&&Zc()!==s?((o=function(){var r,t,e,n,u,o;r=Js,(t=yo())===s&&(t=To());if(t!==s){for(e=[],n=Js,(u=Zc())!==s?((o=yo())===s&&(o=To()),o!==s?n=u=[u,o]:(Js=n,n=s)):(Js=n,n=s);n!==s;)e.push(n),n=Js,(u=Zc())!==s?((o=yo())===s&&(o=To()),o!==s?n=u=[u,o]:(Js=n,n=s)):(Js=n,n=s);e!==s?(t=hl(t,e,1),r=t):(Js=r,r=s);}else Js=r,r=s;return r}())===s&&(o=null),o!==s&&Zc()!==s?(t=function(r,t,e,n,u){return {tableList:Array.from(Il),columnList:Tl(Nl),ast:{type:r.toLowerCase(),keyword:t.toLowerCase(),name:e,table:n,options:u}}}(t,e,n,u,o),r=t):(Js=r,r=s)):(Js=r,r=s));return r}())===s&&(t=function(){var t;(t=function(){var t,e,n,u,o,a,i,c,l,f;t=Js,(e=Ai())!==s&&Zc()!==s?((n=yi())===s&&(n=null),n!==s&&Zc()!==s&&Ui()!==s&&Zc()!==s?((u=Ti())===s&&(u=null),u!==s&&Zc()!==s&&(o=Ko())!==s&&Zc()!==s&&(a=function(){var r,t,e,n,u,o,a,i,c;if(r=Js,(t=Yc())!==s)if(Zc()!==s)if((e=Co())!==s){for(n=[],u=Js,(o=Zc())!==s&&(a=Hc())!==s&&(i=Zc())!==s&&(c=Co())!==s?u=o=[o,a,i,c]:(Js=u,u=s);u!==s;)n.push(u),u=Js,(o=Zc())!==s&&(a=Hc())!==s&&(i=Zc())!==s&&(c=Co())!==s?u=o=[o,a,i,c]:(Js=u,u=s);n!==s&&(u=Zc())!==s&&(o=Bc())!==s?(t=hl(e,n),r=t):(Js=r,r=s);}else Js=r,r=s;else Js=r,r=s;else Js=r,r=s;return r}())!==s&&Zc()!==s?((i=function(){var r,t,e,n,u,o,a,i;if(r=Js,(t=xo())!==s){for(e=[],n=Js,(u=Zc())!==s?((o=Hc())===s&&(o=null),o!==s&&(a=Zc())!==s&&(i=xo())!==s?n=u=[u,o,a,i]:(Js=n,n=s)):(Js=n,n=s);n!==s;)e.push(n),n=Js,(u=Zc())!==s?((o=Hc())===s&&(o=null),o!==s&&(a=Zc())!==s&&(i=xo())!==s?n=u=[u,o,a,i]:(Js=n,n=s)):(Js=n,n=s);e!==s?(t=hl(t,e),r=t):(Js=r,r=s);}else Js=r,r=s;return r}())===s&&(i=null),i!==s&&Zc()!==s?((c=function(){var t,e,n,u;t=Js,"ignore"===r.substr(Js,6).toLowerCase()?(e=r.substr(Js,6),Js+=6):(e=s,0===eo&&ao(te));e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?t=e=[e,n]:(Js=t,t=s)):(Js=t,t=s);return t}())===s&&(c=Ii()),c===s&&(c=null),c!==s&&Zc()!==s?((l=xi())===s&&(l=null),l!==s&&Zc()!==s?((f=bo())===s&&(f=null),f!==s?(b=e,v=n,d=u,C=a,p=i,w=c,E=l,h=f,(L=o)&&L.forEach(r=>Il.add(`create::${r.db}::${r.table}`)),e={tableList:Array.from(Il),columnList:Tl(Nl),ast:{type:b[0].toLowerCase(),keyword:"table",temporary:v&&v.toLowerCase(),if_not_exists:d&&d[0].toLowerCase(),table:L,ignore_replace:w&&w[0].toLowerCase(),as:E&&E[0].toLowerCase(),query_expr:h&&h.ast,create_definitions:C,table_options:p}},t=e):(Js=t,t=s)):(Js=t,t=s)):(Js=t,t=s)):(Js=t,t=s)):(Js=t,t=s)):(Js=t,t=s)):(Js=t,t=s);var b,v,d,L,C,p,w,E,h;t===s&&(t=Js,(e=Ai())!==s&&Zc()!==s?((n=yi())===s&&(n=null),n!==s&&Zc()!==s&&Ui()!==s&&Zc()!==s?((u=Ti())===s&&(u=null),u!==s&&Zc()!==s&&(o=Ko())!==s&&Zc()!==s&&(a=function r(){var t,e;(t=function(){var r,t;r=Js,Zi()!==s&&Zc()!==s&&(t=Ko())!==s?(r={type:"like",table:t}):(Js=r,r=s);return r}())===s&&(t=Js,Yc()!==s&&Zc()!==s&&(e=r())!==s&&Zc()!==s&&Bc()!==s?((n=e).parentheses=!0,t=n):(Js=t,t=s));var n;return t}())!==s?(e=function(r,t,e,n,u){return n&&n.forEach(r=>Il.add(`create::${r.db}::${r.table}`)),{tableList:Array.from(Il),columnList:Tl(Nl),ast:{type:r[0].toLowerCase(),keyword:"table",temporary:t&&t.toLowerCase(),if_not_exists:e&&e[0].toLowerCase(),table:n,like:u}}}(e,n,u,o,a),t=e):(Js=t,t=s)):(Js=t,t=s)):(Js=t,t=s));return t}())===s&&(t=function(){var t,e,n,u,o,a,i,c,l,f,b,v,d,L,C,p,w,E;t=Js,(e=Ai())!==s&&Zc()!==s?((n=Pc())===s&&(n=null),n!==s&&Zc()!==s?("trigger"===r.substr(Js,7).toLowerCase()?(u=r.substr(Js,7),Js+=7):(u=s,0===eo&&ao(tr)),u!==s&&Zc()!==s&&(o=Ya())!==s&&Zc()!==s?("before"===r.substr(Js,6).toLowerCase()?(a=r.substr(Js,6),Js+=6):(a=s,0===eo&&ao(er)),a===s&&("after"===r.substr(Js,5).toLowerCase()?(a=r.substr(Js,5),Js+=5):(a=s,0===eo&&ao(nr)),a===s&&("instead of"===r.substr(Js,10).toLowerCase()?(a=r.substr(Js,10),Js+=10):(a=s,0===eo&&ao(ur)))),a!==s&&Zc()!==s&&(i=function(){var r,t,e,n,u,o,a,i;if(r=Js,(t=_o())!==s){for(e=[],n=Js,(u=Zc())!==s&&(o=tc())!==s&&(a=Zc())!==s&&(i=_o())!==s?n=u=[u,o,a,i]:(Js=n,n=s);n!==s;)e.push(n),n=Js,(u=Zc())!==s&&(o=tc())!==s&&(a=Zc())!==s&&(i=_o())!==s?n=u=[u,o,a,i]:(Js=n,n=s);e!==s?(t=hl(t,e),r=t):(Js=r,r=s);}else Js=r,r=s;return r}())!==s&&Zc()!==s?("on"===r.substr(Js,2).toLowerCase()?(c=r.substr(Js,2),Js+=2):(c=s,0===eo&&ao(sr)),c!==s&&Zc()!==s&&(l=Jo())!==s&&Zc()!==s?(f=Js,(b=Oi())!==s&&(v=Zc())!==s&&(d=Jo())!==s?f=b=[b,v,d]:(Js=f,f=s),f===s&&(f=null),f!==s&&(b=Zc())!==s?((v=function(){var t,e,n,u,o;t=Js,e=Js,"not"===r.substr(Js,3).toLowerCase()?(n=r.substr(Js,3),Js+=3):(n=s,0===eo&&ao(cr));n===s&&(n=null);n!==s&&(u=Zc())!==s?("deferrable"===r.substr(Js,10).toLowerCase()?(o=r.substr(Js,10),Js+=10):(o=s,0===eo&&ao(lr)),o!==s?e=n=[n,u,o]:(Js=e,e=s)):(Js=e,e=s);e!==s&&(n=Zc())!==s?("initially immediate"===r.substr(Js,19).toLowerCase()?(u=r.substr(Js,19),Js+=19):(u=s,0===eo&&ao(fr)),u===s&&("initially deferred"===r.substr(Js,18).toLowerCase()?(u=r.substr(Js,18),Js+=18):(u=s,0===eo&&ao(br))),u!==s?(i=u,e={keyword:(a=e)&&a[0]?a[0].toLowerCase()+" deferrable":"deferrable",args:i&&i.toLowerCase()},t=e):(Js=t,t=s)):(Js=t,t=s);var a,i;return t}())===s&&(v=null),v!==s&&(d=Zc())!==s?((L=function(){var t,e,n,u;t=Js,"for"===r.substr(Js,3).toLowerCase()?(e=r.substr(Js,3),Js+=3):(e=s,0===eo&&ao(vr));e!==s&&Zc()!==s?("each"===r.substr(Js,4).toLowerCase()?(n=r.substr(Js,4),Js+=4):(n=s,0===eo&&ao(dr)),n===s&&(n=null),n!==s&&Zc()!==s?("row"===r.substr(Js,3).toLowerCase()?(u=r.substr(Js,3),Js+=3):(u=s,0===eo&&ao(Lr)),u===s&&("statement"===r.substr(Js,9).toLowerCase()?(u=r.substr(Js,9),Js+=9):(u=s,0===eo&&ao(Cr))),u!==s?(o=e,i=u,e={keyword:(a=n)?`${o.toLowerCase()} ${a.toLowerCase()}`:o.toLowerCase(),args:i.toLowerCase()},t=e):(Js=t,t=s)):(Js=t,t=s)):(Js=t,t=s);var o,a,i;return t}())===s&&(L=null),L!==s&&Zc()!==s?((C=function(){var r,t;r=Js,nc()!==s&&Zc()!==s&&Yc()!==s&&Zc()!==s&&(t=ma())!==s&&Zc()!==s&&Bc()!==s?(r={type:"when",cond:t,parentheses:!0}):(Js=r,r=s);return r}())===s&&(C=null),C!==s&&Zc()!==s?("execute"===r.substr(Js,7).toLowerCase()?(p=r.substr(Js,7),Js+=7):(p=s,0===eo&&ao(or)),p!==s&&Zc()!==s?("procedure"===r.substr(Js,9).toLowerCase()?(w=r.substr(Js,9),Js+=9):(w=s,0===eo&&ao(ar)),w!==s&&Zc()!==s&&(E=ll())!==s?(h=n,A=u,T=i,m=l,S=f,I=v,N=L,R=C,_=E,e={type:"create",constraint:o,location:(y=a)&&y.toLowerCase(),events:T,table:m,from:S&&S[2],deferrable:I,for_each:N,when:R,execute:{keyword:"execute procedure",expr:_},constraint_type:A&&A.toLowerCase(),keyword:A&&A.toLowerCase(),constraint_kw:h&&h.toLowerCase(),resource:"constraint"},t=e):(Js=t,t=s)):(Js=t,t=s)):(Js=t,t=s)):(Js=t,t=s)):(Js=t,t=s)):(Js=t,t=s)):(Js=t,t=s)):(Js=t,t=s)):(Js=t,t=s)):(Js=t,t=s)):(Js=t,t=s);var h,A,y,T,m,S,I,N,R,_;return t}())===s&&(t=function(){var t,e,n,u,o,a,f,b,v,d,L,C,p,w;t=Js,(e=Ai())!==s&&Zc()!==s?("extension"===r.substr(Js,9).toLowerCase()?(n=r.substr(Js,9),Js+=9):(n=s,0===eo&&ao(i)),n!==s&&Zc()!==s?((u=Ti())===s&&(u=null),u!==s&&Zc()!==s?((o=Ya())===s&&(o=si()),o!==s&&Zc()!==s?((a=Gi())===s&&(a=null),a!==s&&Zc()!==s?(f=Js,"schema"===r.substr(Js,6).toLowerCase()?(b=r.substr(Js,6),Js+=6):(b=s,0===eo&&ao(c)),b!==s&&(v=Zc())!==s&&(d=Ya())!==s?f=b=[b,v,d]:(Js=f,f=s),f===s&&(f=si()),f===s&&(f=null),f!==s&&(b=Zc())!==s?(v=Js,"version"===r.substr(Js,7).toLowerCase()?(d=r.substr(Js,7),Js+=7):(d=s,0===eo&&ao(l)),d!==s&&(L=Zc())!==s?((C=Ya())===s&&(C=si()),C!==s?v=d=[d,L,C]:(Js=v,v=s)):(Js=v,v=s),v===s&&(v=null),v!==s&&(d=Zc())!==s?(L=Js,(C=Oi())!==s&&(p=Zc())!==s?((w=Ya())===s&&(w=si()),w!==s?L=C=[C,p,w]:(Js=L,L=s)):(Js=L,L=s),L===s&&(L=null),L!==s?(e=function(r,t,e,n,u,s,o,a){return {type:"create",keyword:t.toLowerCase(),if_not_exists:e&&e[0].toLowerCase(),extension:ml(n),with:u&&u[0].toLowerCase(),schema:ml(s&&s[2].toLowerCase()),version:ml(o&&o[2]),from:ml(a&&a[2])}}(0,n,u,o,a,f,v,L),t=e):(Js=t,t=s)):(Js=t,t=s)):(Js=t,t=s)):(Js=t,t=s)):(Js=t,t=s)):(Js=t,t=s)):(Js=t,t=s)):(Js=t,t=s);return t}())===s&&(t=function(){var t,e,n,u,o,a,i,c,l,f,b,v,d,L,C,p,w,E;t=Js,(e=Ai())!==s&&Zc()!==s?((n=$c())===s&&(n=null),n!==s&&Zc()!==s&&(u=Dc())!==s&&Zc()!==s?((o=function(){var t,e,n,u;t=Js,"concurrently"===r.substr(Js,12).toLowerCase()?(e=r.substr(Js,12),Js+=12):(e=s,0===eo&&ao(Ns));e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="CONCURRENTLY"):(Js=t,t=s)):(Js=t,t=s);return t}())===s&&(o=null),o!==s&&Zc()!==s?((a=Pa())===s&&(a=null),a!==s&&Zc()!==s&&(i=Mi())!==s&&Zc()!==s&&(c=Jo())!==s&&Zc()!==s?((l=Xo())===s&&(l=null),l!==s&&Zc()!==s&&Yc()!==s&&Zc()!==s&&(f=function(){var r,t,e,n,u,o,a,i;if(r=Js,(t=Lo())!==s){for(e=[],n=Js,(u=Zc())!==s&&(o=Hc())!==s&&(a=Zc())!==s&&(i=Lo())!==s?n=u=[u,o,a,i]:(Js=n,n=s);n!==s;)e.push(n),n=Js,(u=Zc())!==s&&(o=Hc())!==s&&(a=Zc())!==s&&(i=Lo())!==s?n=u=[u,o,a,i]:(Js=n,n=s);e!==s?(t=hl(t,e),r=t):(Js=r,r=s);}else Js=r,r=s;return r}())!==s&&Zc()!==s&&Bc()!==s&&Zc()!==s?(b=Js,(v=Gi())!==s&&(d=Zc())!==s&&(L=Yc())!==s&&(C=Zc())!==s&&(p=function(){var r,t,e,n,u,o,a,i;if(r=Js,(t=Vo())!==s){for(e=[],n=Js,(u=Zc())!==s&&(o=Hc())!==s&&(a=Zc())!==s&&(i=Vo())!==s?n=u=[u,o,a,i]:(Js=n,n=s);n!==s;)e.push(n),n=Js,(u=Zc())!==s&&(o=Hc())!==s&&(a=Zc())!==s&&(i=Vo())!==s?n=u=[u,o,a,i]:(Js=n,n=s);e!==s?(t=hl(t,e),r=t):(Js=r,r=s);}else Js=r,r=s;return r}())!==s&&(w=Zc())!==s&&(E=Bc())!==s?b=v=[v,d,L,C,p,w,E]:(Js=b,b=s),b===s&&(b=null),b!==s&&(v=Zc())!==s?(d=Js,(L=function(){var t,e,n,u;t=Js,"tablespace"===r.substr(Js,10).toLowerCase()?(e=r.substr(Js,10),Js+=10):(e=s,0===eo&&ao(Un));e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="TABLESPACE"):(Js=t,t=s)):(Js=t,t=s);return t}())!==s&&(C=Zc())!==s&&(p=Ya())!==s?d=L=[L,C,p]:(Js=d,d=s),d===s&&(d=null),d!==s&&(L=Zc())!==s?((C=ra())===s&&(C=null),C!==s&&(p=Zc())!==s?(h=e,A=n,y=u,T=o,m=a,S=i,I=c,N=l,R=f,_=b,O=d,g=C,e={tableList:Array.from(Il),columnList:Tl(Nl),ast:{type:h[0].toLowerCase(),index_type:A&&A.toLowerCase(),keyword:y.toLowerCase(),concurrently:T&&T.toLowerCase(),index:m,on_kw:S[0].toLowerCase(),table:I,index_using:N,index_columns:R,with:_&&_[4],with_before_where:!0,tablespace:O&&{type:"origin",value:O[2]},where:g}},t=e):(Js=t,t=s)):(Js=t,t=s)):(Js=t,t=s)):(Js=t,t=s)):(Js=t,t=s)):(Js=t,t=s)):(Js=t,t=s)):(Js=t,t=s);var h,A,y,T,m,S,I,N,R,_,O,g;return t}())===s&&(t=function(){var t,e,n,u,o,a,i,c,l;t=Js,(e=Ai())!==s&&Zc()!==s?((n=yi())===s&&(n=function(){var t,e,n,u;t=Js,"temp"===r.substr(Js,4).toLowerCase()?(e=r.substr(Js,4),Js+=4):(e=s,0===eo&&ao(pn));e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="TEMP"):(Js=t,t=s)):(Js=t,t=s);return t}()),n===s&&(n=null),n!==s&&Zc()!==s&&function(){var t,e,n,u;t=Js,"sequence"===r.substr(Js,8).toLowerCase()?(e=r.substr(Js,8),Js+=8):(e=s,0===eo&&ao(xn));e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="SEQUENCE"):(Js=t,t=s)):(Js=t,t=s);return t}()!==s&&Zc()!==s?((u=Ti())===s&&(u=null),u!==s&&Zc()!==s&&(o=Jo())!==s&&Zc()!==s?(a=Js,(i=xi())!==s&&(c=Zc())!==s&&(l=Ga())!==s?a=i=[i,c,l]:(Js=a,a=s),a===s&&(a=null),a!==s&&(i=Zc())!==s?((c=function(){var r,t,e,n,u,o;if(r=Js,(t=vo())!==s){for(e=[],n=Js,(u=Zc())!==s&&(o=vo())!==s?n=u=[u,o]:(Js=n,n=s);n!==s;)e.push(n),n=Js,(u=Zc())!==s&&(o=vo())!==s?n=u=[u,o]:(Js=n,n=s);e!==s?(t=hl(t,e,1),r=t):(Js=r,r=s);}else Js=r,r=s;return r}())===s&&(c=null),c!==s?(f=e,b=n,v=u,L=a,C=c,(d=o).as=L&&L[2],e={tableList:Array.from(Il),columnList:Tl(Nl),ast:{type:f[0].toLowerCase(),keyword:"sequence",temporary:b&&b.toLowerCase(),if_not_exists:v&&v[0].toLowerCase(),sequence:[d],create_definitions:C}},t=e):(Js=t,t=s)):(Js=t,t=s)):(Js=t,t=s)):(Js=t,t=s)):(Js=t,t=s);var f,b,v,d,L,C;return t}())===s&&(t=function(){var t,e,n,u,o,a;t=Js,(e=Ai())!==s&&Zc()!==s?((n=function(){var t,e,n,u;t=Js,"database"===r.substr(Js,8).toLowerCase()?(e=r.substr(Js,8),Js+=8):(e=s,0===eo&&ao(On));e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="DATABASE"):(Js=t,t=s)):(Js=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=Js,"scheme"===r.substr(Js,6).toLowerCase()?(e=r.substr(Js,6),Js+=6):(e=s,0===eo&&ao(gn));e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="SCHEME"):(Js=t,t=s)):(Js=t,t=s);return t}()),n!==s&&Zc()!==s?((u=Ti())===s&&(u=null),u!==s&&Zc()!==s&&(o=Ya())!==s&&Zc()!==s?((a=function(){var r,t,e,n,u,o;if(r=Js,(t=go())!==s){for(e=[],n=Js,(u=Zc())!==s&&(o=go())!==s?n=u=[u,o]:(Js=n,n=s);n!==s;)e.push(n),n=Js,(u=Zc())!==s&&(o=go())!==s?n=u=[u,o]:(Js=n,n=s);e!==s?(t=hl(t,e,1),r=t):(Js=r,r=s);}else Js=r,r=s;return r}())===s&&(a=null),a!==s?(i=e,c=u,l=o,f=a,e={tableList:Array.from(Il),columnList:Tl(Nl),ast:{type:i[0].toLowerCase(),keyword:"database",if_not_exists:c&&c[0].toLowerCase(),database:l,create_definitions:f}},t=e):(Js=t,t=s)):(Js=t,t=s)):(Js=t,t=s)):(Js=t,t=s);var i,c,l,f;return t}());return t}())===s&&(t=function(){var r,t,e,n;r=Js,(t=Nc())!==s&&Zc()!==s?((e=Ui())===s&&(e=null),e!==s&&Zc()!==s&&(n=Ko())!==s?(u=t,o=e,(a=n)&&a.forEach(r=>Il.add(`${u}::${r.db}::${r.table}`)),t={tableList:Array.from(Il),columnList:Tl(Nl),ast:{type:u.toLowerCase(),keyword:o&&o.toLowerCase()||"table",name:a}},r=t):(Js=r,r=s)):(Js=r,r=s);var u,o,a;return r}())===s&&(t=function(){var r,t,e;r=Js,(t=Ni())!==s&&Zc()!==s&&Ui()!==s&&Zc()!==s&&(e=function(){var r,t,e,n,u,o,a,i;if(r=Js,(t=Bo())!==s){for(e=[],n=Js,(u=Zc())!==s&&(o=Hc())!==s&&(a=Zc())!==s&&(i=Bo())!==s?n=u=[u,o,a,i]:(Js=n,n=s);n!==s;)e.push(n),n=Js,(u=Zc())!==s&&(o=Hc())!==s&&(a=Zc())!==s&&(i=Bo())!==s?n=u=[u,o,a,i]:(Js=n,n=s);e!==s?(t=hl(t,e),r=t):(Js=r,r=s);}else Js=r,r=s;return r}())!==s?((n=e).forEach(r=>r.forEach(r=>r.table&&Il.add(`rename::${r.db}::${r.table}`))),t={tableList:Array.from(Il),columnList:Tl(Nl),ast:{type:"rename",table:n}},r=t):(Js=r,r=s);var n;return r}())===s&&(t=function(){var t,e,n;t=Js,(e=function(){var t,e,n,u;t=Js,"call"===r.substr(Js,4).toLowerCase()?(e=r.substr(Js,4),Js+=4):(e=s,0===eo&&ao(Cu));e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="CALL"):(Js=t,t=s)):(Js=t,t=s);return t}())!==s&&Zc()!==s&&(n=ll())!==s?(u=n,e={tableList:Array.from(Il),columnList:Tl(Nl),ast:{type:"call",expr:u}},t=e):(Js=t,t=s);var u;return t}())===s&&(t=function(){var t,e,n;t=Js,(e=function(){var t,e,n,u;t=Js,"use"===r.substr(Js,3).toLowerCase()?(e=r.substr(Js,3),Js+=3):(e=s,0===eo&&ao(fn));e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?t=e=[e,n]:(Js=t,t=s)):(Js=t,t=s);return t}())!==s&&Zc()!==s&&(n=Pa())!==s?(u=n,Il.add(`use::${u}::null`),e={tableList:Array.from(Il),columnList:Tl(Nl),ast:{type:"use",db:u}},t=e):(Js=t,t=s);var u;return t}())===s&&(t=function(){var t,e,n,u;t=Js,(e=function(){var t,e,n,u;t=Js,"alter"===r.substr(Js,5).toLowerCase()?(e=r.substr(Js,5),Js+=5):(e=s,0===eo&&ao(bn));e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?t=e=[e,n]:(Js=t,t=s)):(Js=t,t=s);return t}())!==s&&Zc()!==s&&Ui()!==s&&Zc()!==s&&(n=Ko())!==s&&Zc()!==s&&(u=function(){var r,t,e,n,u,o,a,i;if(r=Js,(t=Ao())!==s){for(e=[],n=Js,(u=Zc())!==s&&(o=Hc())!==s&&(a=Zc())!==s&&(i=Ao())!==s?n=u=[u,o,a,i]:(Js=n,n=s);n!==s;)e.push(n),n=Js,(u=Zc())!==s&&(o=Hc())!==s&&(a=Zc())!==s&&(i=Ao())!==s?n=u=[u,o,a,i]:(Js=n,n=s);e!==s?(t=hl(t,e),r=t):(Js=r,r=s);}else Js=r,r=s;return r}())!==s?(a=u,(o=n)&&o.length>0&&o.forEach(r=>Il.add(`alter::${r.db}::${r.table}`)),e={tableList:Array.from(Il),columnList:Tl(Nl),ast:{type:"alter",table:o,expr:a}},t=e):(Js=t,t=s);var o,a;return t}())===s&&(t=function(){var t,e,n,u;t=Js,(e=gi())!==s&&Zc()!==s?((n=function(){var t,e,n,u;t=Js,"global"===r.substr(Js,6).toLowerCase()?(e=r.substr(Js,6),Js+=6):(e=s,0===eo&&ao(cs));e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="GLOBAL"):(Js=t,t=s)):(Js=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=Js,"session"===r.substr(Js,7).toLowerCase()?(e=r.substr(Js,7),Js+=7):(e=s,0===eo&&ao(ls));e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="SESSION"):(Js=t,t=s)):(Js=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=Js,"local"===r.substr(Js,5).toLowerCase()?(e=r.substr(Js,5),Js+=5):(e=s,0===eo&&ao(fs));e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="LOCAL"):(Js=t,t=s)):(Js=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=Js,"persist"===r.substr(Js,7).toLowerCase()?(e=r.substr(Js,7),Js+=7):(e=s,0===eo&&ao(bs));e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="PERSIST"):(Js=t,t=s)):(Js=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=Js,"persist_only"===r.substr(Js,12).toLowerCase()?(e=r.substr(Js,12),Js+=12):(e=s,0===eo&&ao(vs));e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="PERSIST_ONLY"):(Js=t,t=s)):(Js=t,t=s);return t}()),n===s&&(n=null),n!==s&&Zc()!==s&&(u=ul())!==s?(o=n,(a=u).keyword=o,e={tableList:Array.from(Il),columnList:Tl(Nl),ast:{type:"set",expr:a}},t=e):(Js=t,t=s)):(Js=t,t=s);var o,a;return t}())===s&&(t=function(){var t,e,n,u,o,a;t=Js,(e=function(){var t,e,n,u;t=Js,"lock"===r.substr(Js,4).toLowerCase()?(e=r.substr(Js,4),Js+=4):(e=s,0===eo&&ao(G));e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?t=e=[e,n]:(Js=t,t=s)):(Js=t,t=s);return t}())!==s&&Zc()!==s?((n=Ui())===s&&(n=null),n!==s&&Zc()!==s&&(u=Ko())!==s&&Zc()!==s?((o=function(){var t,e,n,u;t=Js,"in"===r.substr(Js,2).toLowerCase()?(e=r.substr(Js,2),Js+=2):(e=s,0===eo&&ao(xr));e!==s&&Zc()!==s?("access share"===r.substr(Js,12).toLowerCase()?(n=r.substr(Js,12),Js+=12):(n=s,0===eo&&ao(Ur)),n===s&&("row share"===r.substr(Js,9).toLowerCase()?(n=r.substr(Js,9),Js+=9):(n=s,0===eo&&ao(Mr)),n===s&&("row exclusive"===r.substr(Js,13).toLowerCase()?(n=r.substr(Js,13),Js+=13):(n=s,0===eo&&ao(Dr)),n===s&&("share update exclusive"===r.substr(Js,22).toLowerCase()?(n=r.substr(Js,22),Js+=22):(n=s,0===eo&&ao(kr)),n===s&&("share row exclusive"===r.substr(Js,19).toLowerCase()?(n=r.substr(Js,19),Js+=19):(n=s,0===eo&&ao($r)),n===s&&("exclusive"===r.substr(Js,9).toLowerCase()?(n=r.substr(Js,9),Js+=9):(n=s,0===eo&&ao(j)),n===s&&("access exclusive"===r.substr(Js,16).toLowerCase()?(n=r.substr(Js,16),Js+=16):(n=s,0===eo&&ao(Fr)),n===s&&("share"===r.substr(Js,5).toLowerCase()?(n=r.substr(Js,5),Js+=5):(n=s,0===eo&&ao(Pr))))))))),n!==s&&Zc()!==s?("mode"===r.substr(Js,4).toLowerCase()?(u=r.substr(Js,4),Js+=4):(u=s,0===eo&&ao(Gr)),u!==s?(e={mode:`in ${n.toLowerCase()} mode`},t=e):(Js=t,t=s)):(Js=t,t=s)):(Js=t,t=s);return t}())===s&&(o=null),o!==s&&Zc()!==s?("nowait"===r.substr(Js,6).toLowerCase()?(a=r.substr(Js,6),Js+=6):(a=s,0===eo&&ao(Hr)),a===s&&(a=null),a!==s?(i=n,l=o,f=a,(c=u)&&c.forEach(r=>Il.add(`lock::${r.db}::${r.table}`)),e={tableList:Array.from(Il),columnList:Tl(Nl),ast:{type:"lock",keyword:i&&i.toLowerCase(),tables:c.map(r=>({table:r})),lock_mode:l,nowait:f}},t=e):(Js=t,t=s)):(Js=t,t=s)):(Js=t,t=s)):(Js=t,t=s);var i,c,l,f;return t}())===s&&(t=function(){var t,e,n;t=Js,(e=function(){var t,e,n,u;t=Js,"show"===r.substr(Js,4).toLowerCase()?(e=r.substr(Js,4),Js+=4):(e=s,0===eo&&ao(cn));e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?t=e=[e,n]:(Js=t,t=s)):(Js=t,t=s);return t}())!==s&&Zc()!==s?("tables"===r.substr(Js,6).toLowerCase()?(n=r.substr(Js,6),Js+=6):(n=s,0===eo&&ao(jr)),n!==s?(e={tableList:Array.from(Il),columnList:Tl(Nl),ast:{type:"show",keyword:"tables"}},t=e):(Js=t,t=s)):(Js=t,t=s);return t}()),t}function fo(){var r;return (r=bo())===s&&(r=function(){var r,t,e,n,u,o;r=Js,(t=hi())!==s&&Zc()!==s&&(e=Ko())!==s&&Zc()!==s&&gi()!==s&&Zc()!==s&&(n=function(){var r,t,e,n,u,o,a,i;if(r=Js,(t=ba())!==s){for(e=[],n=Js,(u=Zc())!==s&&(o=Hc())!==s&&(a=Zc())!==s&&(i=ba())!==s?n=u=[u,o,a,i]:(Js=n,n=s);n!==s;)e.push(n),n=Js,(u=Zc())!==s&&(o=Hc())!==s&&(a=Zc())!==s&&(i=ba())!==s?n=u=[u,o,a,i]:(Js=n,n=s);e!==s?(t=hl(t,e),r=t):(Js=r,r=s);}else Js=r,r=s;return r}())!==s&&Zc()!==s?((u=ra())===s&&(u=null),u!==s&&Zc()!==s?((o=va())===s&&(o=null),o!==s?(i=n,c=u,l=o,(a=e)&&a.forEach(r=>{const{db:t,as:e,table:n}=r;Il.add(`update::${t}::${n}`);}),i&&i.forEach(r=>Nl.add(`update::${r.table}::${r.column}`)),t={tableList:Array.from(Il),columnList:Tl(Nl),ast:{type:"update",table:a,set:i,where:c,returning:l}},r=t):(Js=r,r=s)):(Js=r,r=s)):(Js=r,r=s);var a,i,c,l;return r}())===s&&(r=function(){var r,t,e,n,u,o,a,i;r=Js,(t=Ca())!==s&&Zc()!==s?((e=_i())===s&&(e=null),e!==s&&Zc()!==s&&(n=Jo())!==s&&Zc()!==s?((u=La())===s&&(u=null),u!==s&&Zc()!==s&&Yc()!==s&&Zc()!==s&&(o=Fa())!==s&&Zc()!==s&&Bc()!==s&&Zc()!==s&&(a=da())!==s&&Zc()!==s?((i=va())===s&&(i=null),i!==s?(t=function(r,t,e,n,u,s){if(t&&(Il.add(`insert::${t.db}::${t.table}`),t.as=null),n){let r=t&&t.table||null;Array.isArray(u)&&u.forEach((r,t)=>{if(r.value.length!=n.length)throw new Error("Error: column count doesn't match value count at row "+(t+1))}),n.forEach(t=>Nl.add(`insert::${r}::${t}`));}return {tableList:Array.from(Il),columnList:Tl(Nl),ast:{type:r,table:[t],columns:n,values:u,partition:e,returning:s}}}(t,n,u,o,a,i),r=t):(Js=r,r=s)):(Js=r,r=s)):(Js=r,r=s)):(Js=r,r=s);return r}())===s&&(r=function(){var r,t,e,n,u,o;r=Js,(t=Ca())!==s&&Zc()!==s&&_i()!==s&&Zc()!==s&&(e=Jo())!==s&&Zc()!==s?((n=La())===s&&(n=null),n!==s&&Zc()!==s&&(u=da())!==s&&Zc()!==s?((o=va())===s&&(o=null),o!==s?(a=t,c=n,l=u,f=o,(i=e)&&(Il.add(`insert::${i.db}::${i.table}`),Nl.add(`insert::${i.table}::(.*)`),i.as=null),t={tableList:Array.from(Il),columnList:Tl(Nl),ast:{type:a,table:[i],columns:null,values:l,partition:c,returning:f}},r=t):(Js=r,r=s)):(Js=r,r=s)):(Js=r,r=s);var a,i,c,l,f;return r}())===s&&(r=function(){var r,t,e,n,u;r=Js,(t=mi())!==s&&Zc()!==s?((e=Ko())===s&&(e=null),e!==s&&Zc()!==s&&(n=Yo())!==s&&Zc()!==s?((u=ra())===s&&(u=null),u!==s?(t=function(r,t,e){if(t&&t.forEach(r=>{r.table&&Il.add(`delete::${r.db}::${r.table}`),Nl.add(`delete::${r.table}::(.*)`);}),null===r&&1===t.length){const e=t[0];r=[{db:e.db,table:e.table,as:e.as,addition:!0}];}return {tableList:Array.from(Il),columnList:Tl(Nl),ast:{type:"delete",table:r,from:t,where:e}}}(e,n,u),r=t):(Js=r,r=s)):(Js=r,r=s)):(Js=r,r=s);return r}())===s&&(r=lo())===s&&(r=function(){var r,t;r=[],t=nl();for(;t!==s;)r.push(t),t=nl();return r}()),r}function bo(){var r,t,e,n,u,o,a,i,c,l;if(r=Js,(t=Uo())!==s){for(e=[],n=Js,(u=Zc())!==s&&(o=$i())!==s&&(a=Zc())!==s?((i=Xi())===s&&(i=null),i!==s&&(c=Zc())!==s&&(l=Uo())!==s?n=u=[u,o,a,i,c,l]:(Js=n,n=s)):(Js=n,n=s);n!==s;)e.push(n),n=Js,(u=Zc())!==s&&(o=$i())!==s&&(a=Zc())!==s?((i=Xi())===s&&(i=null),i!==s&&(c=Zc())!==s&&(l=Uo())!==s?n=u=[u,o,a,i,c,l]:(Js=n,n=s)):(Js=n,n=s);e!==s&&(n=Zc())!==s?((u=ia())===s&&(u=null),u!==s&&(o=Zc())!==s?((a=fa())===s&&(a=null),a!==s?(r=t=function(r,t,e,n){let u=r;for(let r=0;r<t.length;r++)u._next=t[r][5],u.union=t[r][3]?"union all":"union",u=u._next;return e&&(r._orderby=e),n&&(r._limit=n),{tableList:Array.from(Il),columnList:Tl(Nl),ast:r}}(t,e,u,a)):(Js=r,r=s)):(Js=r,r=s)):(Js=r,r=s);}else Js=r,r=s;return r}function vo(){var t;return (t=function(){var t,e,n,u,o,a;return t=Js,"increment"===r.substr(Js,9).toLowerCase()?(e=r.substr(Js,9),Js+=9):(e=s,0===eo&&ao(b)),e!==s&&Zc()!==s?((n=ji())===s&&(n=null),n!==s&&Zc()!==s&&(u=ci())!==s?(o=e,a=u,t=e={resource:"sequence",prefix:n?o.toLowerCase()+" by":o.toLowerCase(),value:a}):(Js=t,t=s)):(Js=t,t=s),t}())===s&&(t=function(){var t,e,n;return t=Js,"minvalue"===r.substr(Js,8).toLowerCase()?(e=r.substr(Js,8),Js+=8):(e=s,0===eo&&ao(v)),e!==s&&Zc()!==s&&(n=ci())!==s?(t=e=d(e,n)):(Js=t,t=s),t===s&&(t=Js,"no"===r.substr(Js,2).toLowerCase()?(e=r.substr(Js,2),Js+=2):(e=s,0===eo&&ao(L)),e!==s&&Zc()!==s?("minvalue"===r.substr(Js,8).toLowerCase()?(n=r.substr(Js,8),Js+=8):(n=s,0===eo&&ao(v)),n!==s?(t=e={resource:"sequence",value:{type:"origin",value:"no minvalue"}}):(Js=t,t=s)):(Js=t,t=s)),t}())===s&&(t=function(){var t,e,n;return t=Js,"maxvalue"===r.substr(Js,8).toLowerCase()?(e=r.substr(Js,8),Js+=8):(e=s,0===eo&&ao(C)),e!==s&&Zc()!==s&&(n=ci())!==s?(t=e=d(e,n)):(Js=t,t=s),t===s&&(t=Js,"no"===r.substr(Js,2).toLowerCase()?(e=r.substr(Js,2),Js+=2):(e=s,0===eo&&ao(L)),e!==s&&Zc()!==s?("maxvalue"===r.substr(Js,8).toLowerCase()?(n=r.substr(Js,8),Js+=8):(n=s,0===eo&&ao(C)),n!==s?(t=e={resource:"sequence",value:{type:"origin",value:"no maxvalue"}}):(Js=t,t=s)):(Js=t,t=s)),t}())===s&&(t=function(){var t,e,n,u,o,a;return t=Js,"start"===r.substr(Js,5).toLowerCase()?(e=r.substr(Js,5),Js+=5):(e=s,0===eo&&ao(p)),e!==s&&Zc()!==s?((n=Gi())===s&&(n=null),n!==s&&Zc()!==s&&(u=ci())!==s?(o=e,a=u,t=e={resource:"sequence",prefix:n?o.toLowerCase()+" with":o.toLowerCase(),value:a}):(Js=t,t=s)):(Js=t,t=s),t}())===s&&(t=function(){var t,e,n;return t=Js,"cache"===r.substr(Js,5).toLowerCase()?(e=r.substr(Js,5),Js+=5):(e=s,0===eo&&ao(w)),e!==s&&Zc()!==s&&(n=ci())!==s?(t=e=d(e,n)):(Js=t,t=s),t}())===s&&(t=function(){var t,e,n;return t=Js,"no"===r.substr(Js,2).toLowerCase()?(e=r.substr(Js,2),Js+=2):(e=s,0===eo&&ao(L)),e===s&&(e=null),e!==s&&Zc()!==s?("cycle"===r.substr(Js,5).toLowerCase()?(n=r.substr(Js,5),Js+=5):(n=s,0===eo&&ao(E)),n!==s?(t=e={resource:"sequence",value:{type:"origin",value:e?"no cycle":"cycle"}}):(Js=t,t=s)):(Js=t,t=s),t}())===s&&(t=function(){var t,e,n;return t=Js,"owned"===r.substr(Js,5).toLowerCase()?(e=r.substr(Js,5),Js+=5):(e=s,0===eo&&ao(h)),e!==s&&Zc()!==s&&ji()!==s&&Zc()!==s?("none"===r.substr(Js,4).toLowerCase()?(n=r.substr(Js,4),Js+=4):(n=s,0===eo&&ao(A)),n!==s?(t=e={resource:"sequence",prefix:"owned by",value:{type:"origin",value:"none"}}):(Js=t,t=s)):(Js=t,t=s),t===s&&(t=Js,"owned"===r.substr(Js,5).toLowerCase()?(e=r.substr(Js,5),Js+=5):(e=s,0===eo&&ao(h)),e!==s&&Zc()!==s&&ji()!==s&&Zc()!==s&&(n=$a())!==s?(t=e={resource:"sequence",prefix:"owned by",value:n}):(Js=t,t=s)),t}()),t}function Lo(){var t,e,n,u,o,a,i,c,l,f,b;return t=Js,(e=ma())!==s&&Zc()!==s?((n=Eo())===s&&(n=null),n!==s&&Zc()!==s?((u=Pa())===s&&(u=null),u!==s&&Zc()!==s?((o=Yi())===s&&(o=Bi()),o===s&&(o=null),o!==s&&Zc()!==s?(a=Js,"nulls"===r.substr(Js,5).toLowerCase()?(i=r.substr(Js,5),Js+=5):(i=s,0===eo&&ao(y)),i!==s&&(c=Zc())!==s?("first"===r.substr(Js,5).toLowerCase()?(l=r.substr(Js,5),Js+=5):(l=s,0===eo&&ao(T)),l===s&&("last"===r.substr(Js,4).toLowerCase()?(l=r.substr(Js,4),Js+=4):(l=s,0===eo&&ao(m))),l!==s?a=i=[i,c,l]:(Js=a,a=s)):(Js=a,a=s),a===s&&(a=null),a!==s?(b=a,t=e={column:e,collate:n,opclass:u,order:(f=o)&&f.toLowerCase()||"asc",nulls:b&&`${b[0].toLowerCase()} ${b[2].toLowerCase()}`}):(Js=t,t=s)):(Js=t,t=s)):(Js=t,t=s)):(Js=t,t=s)):(Js=t,t=s),t}function Co(){var t;return (t=wo())===s&&(t=mo())===s&&(t=So())===s&&(t=function(){var t;(t=function(){var t,e,n,u,o,a;t=Js,(e=Io())===s&&(e=null);e!==s&&Zc()!==s?("primary key"===r.substr(Js,11).toLowerCase()?(n=r.substr(Js,11),Js+=11):(n=s,0===eo&&ao(Y)),n!==s&&Zc()!==s?((u=Xo())===s&&(u=null),u!==s&&Zc()!==s&&(o=ko())!==s&&Zc()!==s?((a=Wo())===s&&(a=null),a!==s?(c=n,l=u,f=o,b=a,e={constraint:(i=e)&&i.constraint,definition:f,constraint_type:c.toLowerCase(),keyword:i&&i.keyword,index_type:l,resource:"constraint",index_options:b},t=e):(Js=t,t=s)):(Js=t,t=s)):(Js=t,t=s)):(Js=t,t=s);var i,c,l,f,b;return t}())===s&&(t=function(){var r,t,e,n,u,o,a,i;r=Js,(t=Io())===s&&(t=null);t!==s&&Zc()!==s&&(e=$c())!==s&&Zc()!==s?((n=Dc())===s&&(n=kc()),n===s&&(n=null),n!==s&&Zc()!==s?((u=ja())===s&&(u=null),u!==s&&Zc()!==s?((o=Xo())===s&&(o=null),o!==s&&Zc()!==s&&(a=ko())!==s&&Zc()!==s?((i=Wo())===s&&(i=null),i!==s?(l=e,f=n,b=u,v=o,d=a,L=i,t={constraint:(c=t)&&c.constraint,definition:d,constraint_type:f&&`${l.toLowerCase()} ${f.toLowerCase()}`||l.toLowerCase(),keyword:c&&c.keyword,index_type:v,index:b,resource:"constraint",index_options:L},r=t):(Js=r,r=s)):(Js=r,r=s)):(Js=r,r=s)):(Js=r,r=s)):(Js=r,r=s);var c,l,f,b,v,d,L;return r}())===s&&(t=function(){var t,e,n,u,o,a;t=Js,(e=Io())===s&&(e=null);e!==s&&Zc()!==s?("foreign key"===r.substr(Js,11).toLowerCase()?(n=r.substr(Js,11),Js+=11):(n=s,0===eo&&ao(B)),n!==s&&Zc()!==s?((u=ja())===s&&(u=null),u!==s&&Zc()!==s&&(o=ko())!==s&&Zc()!==s?((a=No())===s&&(a=null),a!==s?(c=n,l=u,f=o,b=a,e={constraint:(i=e)&&i.constraint,definition:f,constraint_type:c,keyword:i&&i.keyword,index:l,resource:"constraint",reference_definition:b},t=e):(Js=t,t=s)):(Js=t,t=s)):(Js=t,t=s)):(Js=t,t=s);var i,c,l,f,b;return t}());return t}()),t}function po(){var t,e,n,u,o,a;return (t=function(){var r,t,e;r=Js,(t=ui())===s&&(t=ni());t!==s&&Zc()!==s?((e=ho())===s&&(e=null),e!==s?(u=e,(n=t)&&!n.value&&(n.value="null"),r=t={default_val:u,nullable:n}):(Js=r,r=s)):(Js=r,r=s);var n,u;r===s&&(r=Js,(t=ho())!==s&&Zc()!==s?((e=ui())===s&&(e=ni()),e===s&&(e=null),e!==s?(t=function(r,t){return t&&!t.value&&(t.value="null"),{default_val:r,nullable:t}}(t,e),r=t):(Js=r,r=s)):(Js=r,r=s));return r}())===s&&(t=Js,"auto_increment"===r.substr(Js,14).toLowerCase()?(e=r.substr(Js,14),Js+=14):(e=s,0===eo&&ao(S)),e!==s&&(e={auto_increment:e.toLowerCase()}),(t=e)===s&&(t=Js,e=Js,"unique"===r.substr(Js,6).toLowerCase()?(n=r.substr(Js,6),Js+=6):(n=s,0===eo&&ao(I)),n!==s&&(u=Zc())!==s?("key"===r.substr(Js,3).toLowerCase()?(o=r.substr(Js,3),Js+=3):(o=s,0===eo&&ao(N)),o===s&&(o=null),o!==s?e=n=[n,u,o]:(Js=e,e=s)):(Js=e,e=s),e===s&&(e=Js,"primary"===r.substr(Js,7).toLowerCase()?(n=r.substr(Js,7),Js+=7):(n=s,0===eo&&ao(R)),n===s&&(n=null),n!==s&&(u=Zc())!==s?("key"===r.substr(Js,3).toLowerCase()?(o=r.substr(Js,3),Js+=3):(o=s,0===eo&&ao(N)),o!==s?e=n=[n,u,o]:(Js=e,e=s)):(Js=e,e=s)),e!==s&&(e=function(r){const t=[];return r&&t.push(r[0],r[2]),{unique_or_primary:t.filter(r=>r).join(" ").toLowerCase("")}}(e)),(t=e)===s&&(t=Js,(e=Qc())!==s&&(e={comment:e}),(t=e)===s&&(t=Js,(e=Eo())!==s&&(e={collate:e}),(t=e)===s&&(t=Js,(e=function(){var t,e,n;t=Js,"column_format"===r.substr(Js,13).toLowerCase()?(e=r.substr(Js,13),Js+=13):(e=s,0===eo&&ao(_));e!==s&&Zc()!==s?("fixed"===r.substr(Js,5).toLowerCase()?(n=r.substr(Js,5),Js+=5):(n=s,0===eo&&ao(O)),n===s&&("dynamic"===r.substr(Js,7).toLowerCase()?(n=r.substr(Js,7),Js+=7):(n=s,0===eo&&ao(g)),n===s&&("default"===r.substr(Js,7).toLowerCase()?(n=r.substr(Js,7),Js+=7):(n=s,0===eo&&ao(x)))),n!==s?(e=function(r,t){return {type:"column_format",value:t.toLowerCase()}}(0,n),t=e):(Js=t,t=s)):(Js=t,t=s);return t}())!==s&&(e={column_format:e}),(t=e)===s&&(t=Js,(e=function(){var t,e,n;t=Js,"storage"===r.substr(Js,7).toLowerCase()?(e=r.substr(Js,7),Js+=7):(e=s,0===eo&&ao(U));e!==s&&Zc()!==s?("disk"===r.substr(Js,4).toLowerCase()?(n=r.substr(Js,4),Js+=4):(n=s,0===eo&&ao(M)),n===s&&("memory"===r.substr(Js,6).toLowerCase()?(n=r.substr(Js,6),Js+=6):(n=s,0===eo&&ao(D))),n!==s?(e={type:"storage",value:n.toLowerCase()},t=e):(Js=t,t=s)):(Js=t,t=s);return t}())!==s&&(e={storage:e}),(t=e)===s&&(t=Js,(e=No())!==s&&(e={reference_definition:e}),(t=e)===s&&(t=Js,(e=Oo())!==s&&(n=Zc())!==s?((u=xc())===s&&(u=null),u!==s&&(o=Zc())!==s&&(a=Ya())!==s?(t=e=function(r,t,e){return {character_set:{type:r,value:e,symbol:t}}}(e,u,a)):(Js=t,t=s)):(Js=t,t=s))))))))),t}function wo(){var r,t,e,n,u,o,a;return r=Js,(t=$a())!==s&&Zc()!==s&&(e=dl())!==s&&Zc()!==s?((n=function(){var r,t,e,n,u,o;if(r=Js,(t=po())!==s)if(Zc()!==s){for(e=[],n=Js,(u=Zc())!==s&&(o=po())!==s?n=u=[u,o]:(Js=n,n=s);n!==s;)e.push(n),n=Js,(u=Zc())!==s&&(o=po())!==s?n=u=[u,o]:(Js=n,n=s);e!==s?(r=t=function(r,t){let e=r;for(let r=0;r<t.length;r++)e={...e,...t[r][1]};return e}(t,e)):(Js=r,r=s);}else Js=r,r=s;else Js=r,r=s;return r}())===s&&(n=null),n!==s?(u=t,o=e,a=n,Nl.add(`create::${u.table}::${u.column}`),r=t={column:u,definition:o,resource:"column",...a||{}}):(Js=r,r=s)):(Js=r,r=s),r}function Eo(){var t,e,n;return t=Js,function(){var t,e,n,u;t=Js,"collate"===r.substr(Js,7).toLowerCase()?(e=r.substr(Js,7),Js+=7):(e=s,0===eo&&ao(hr));e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="COLLATE"):(Js=t,t=s)):(Js=t,t=s);return t}()!==s&&Zc()!==s?((e=xc())===s&&(e=null),e!==s&&Zc()!==s&&(n=Pa())!==s?(t={type:"collate",symbol:e,value:n}):(Js=t,t=s)):(Js=t,t=s),t}function ho(){var r,t;return r=Js,pi()!==s&&Zc()!==s?((t=ti())===s&&(t=ma()),t!==s?(r={type:"default",value:t}):(Js=r,r=s)):(Js=r,r=s),r}function Ao(){var r;return (r=function(){var r,t,e,n;r=Js,(t=Uc())!==s&&Zc()!==s?((e=Mc())===s&&(e=null),e!==s&&Zc()!==s&&(n=wo())!==s?(u=e,o=n,t={action:"add",...o,keyword:u,resource:"column",type:"alter"},r=t):(Js=r,r=s)):(Js=r,r=s);var u,o;return r}())===s&&(r=function(){var r,t,e;r=Js,Ei()!==s&&Zc()!==s?((t=Mc())===s&&(t=null),t!==s&&Zc()!==s&&(e=$a())!==s?(r={action:"drop",column:e,keyword:t,resource:"column",type:"alter"}):(Js=r,r=s)):(Js=r,r=s);return r}())===s&&(r=function(){var r,t,e;r=Js,(t=Uc())!==s&&Zc()!==s&&(e=mo())!==s?(n=e,t={action:"add",type:"alter",...n},r=t):(Js=r,r=s);var n;return r}())===s&&(r=function(){var r,t,e;r=Js,(t=Uc())!==s&&Zc()!==s&&(e=So())!==s?(n=e,t={action:"add",type:"alter",...n},r=t):(Js=r,r=s);var n;return r}())===s&&(r=function(){var r,t,e,n;r=Js,(t=Ni())!==s&&Zc()!==s?((e=wi())===s&&(e=xi()),e===s&&(e=null),e!==s&&Zc()!==s&&(n=Pa())!==s?(o=n,t={action:"rename",type:"alter",resource:"table",keyword:(u=e)&&u[0].toLowerCase(),table:o},r=t):(Js=r,r=s)):(Js=r,r=s);var u,o;return r}())===s&&(r=yo())===s&&(r=To()),r}function yo(){var t,e,n,u;return t=Js,"algorithm"===r.substr(Js,9).toLowerCase()?(e=r.substr(Js,9),Js+=9):(e=s,0===eo&&ao(k)),e!==s&&Zc()!==s?((n=xc())===s&&(n=null),n!==s&&Zc()!==s?("default"===r.substr(Js,7).toLowerCase()?(u=r.substr(Js,7),Js+=7):(u=s,0===eo&&ao(x)),u===s&&("instant"===r.substr(Js,7).toLowerCase()?(u=r.substr(Js,7),Js+=7):(u=s,0===eo&&ao($)),u===s&&("inplace"===r.substr(Js,7).toLowerCase()?(u=r.substr(Js,7),Js+=7):(u=s,0===eo&&ao(F)),u===s&&("copy"===r.substr(Js,4).toLowerCase()?(u=r.substr(Js,4),Js+=4):(u=s,0===eo&&ao(P))))),u!==s?(t=e={type:"alter",keyword:"algorithm",resource:"algorithm",symbol:n,algorithm:u}):(Js=t,t=s)):(Js=t,t=s)):(Js=t,t=s),t}function To(){var t,e,n,u;return t=Js,"lock"===r.substr(Js,4).toLowerCase()?(e=r.substr(Js,4),Js+=4):(e=s,0===eo&&ao(G)),e!==s&&Zc()!==s?((n=xc())===s&&(n=null),n!==s&&Zc()!==s?("default"===r.substr(Js,7).toLowerCase()?(u=r.substr(Js,7),Js+=7):(u=s,0===eo&&ao(x)),u===s&&("none"===r.substr(Js,4).toLowerCase()?(u=r.substr(Js,4),Js+=4):(u=s,0===eo&&ao(A)),u===s&&("shared"===r.substr(Js,6).toLowerCase()?(u=r.substr(Js,6),Js+=6):(u=s,0===eo&&ao(H)),u===s&&("exclusive"===r.substr(Js,9).toLowerCase()?(u=r.substr(Js,9),Js+=9):(u=s,0===eo&&ao(j))))),u!==s?(t=e={type:"alter",keyword:"lock",resource:"lock",symbol:n,lock:u}):(Js=t,t=s)):(Js=t,t=s)):(Js=t,t=s),t}function mo(){var r,t,e,n,u,o,a,i;return r=Js,(t=Dc())===s&&(t=kc()),t!==s&&Zc()!==s?((e=ja())===s&&(e=null),e!==s&&Zc()!==s?((n=Xo())===s&&(n=null),n!==s&&Zc()!==s&&(u=ko())!==s&&Zc()!==s?((o=Wo())===s&&(o=null),o!==s&&Zc()!==s?(a=n,i=o,r=t={index:e,definition:u,keyword:t.toLowerCase(),index_type:a,resource:"index",index_options:i}):(Js=r,r=s)):(Js=r,r=s)):(Js=r,r=s)):(Js=r,r=s),r}function So(){var t,e,n,u,o,a,i,c,l;return t=Js,(e=function(){var t,e,n,u;t=Js,"fulltext"===r.substr(Js,8).toLowerCase()?(e=r.substr(Js,8),Js+=8):(e=s,0===eo&&ao(Ts));e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="FULLTEXT"):(Js=t,t=s)):(Js=t,t=s);return t}())===s&&(e=function(){var t,e,n,u;t=Js,"spatial"===r.substr(Js,7).toLowerCase()?(e=r.substr(Js,7),Js+=7):(e=s,0===eo&&ao(ms));e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="SPATIAL"):(Js=t,t=s)):(Js=t,t=s);return t}()),e!==s&&Zc()!==s?((n=Dc())===s&&(n=kc()),n===s&&(n=null),n!==s&&Zc()!==s?((u=ja())===s&&(u=null),u!==s&&Zc()!==s&&(o=ko())!==s&&Zc()!==s?((a=Wo())===s&&(a=null),a!==s&&Zc()!==s?(i=e,l=a,t=e={index:u,definition:o,keyword:(c=n)&&`${i.toLowerCase()} ${c.toLowerCase()}`||i.toLowerCase(),index_options:l,resource:"index"}):(Js=t,t=s)):(Js=t,t=s)):(Js=t,t=s)):(Js=t,t=s),t}function Io(){var r,t,e,n;return r=Js,(t=Pc())!==s&&Zc()!==s?((e=Pa())===s&&(e=null),e!==s?(n=e,r=t={keyword:t.toLowerCase(),constraint:n}):(Js=r,r=s)):(Js=r,r=s),r}function No(){var t,e,n,u,o,a,i,c,l,f;return t=Js,(e=function(){var t,e,n,u;t=Js,"references"===r.substr(Js,10).toLowerCase()?(e=r.substr(Js,10),Js+=10):(e=s,0===eo&&ao(Rs));e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="REFERENCES"):(Js=t,t=s)):(Js=t,t=s);return t}())!==s&&Zc()!==s&&(n=Ko())!==s&&Zc()!==s&&(u=ko())!==s&&Zc()!==s?("match full"===r.substr(Js,10).toLowerCase()?(o=r.substr(Js,10),Js+=10):(o=s,0===eo&&ao(X)),o===s&&("match partial"===r.substr(Js,13).toLowerCase()?(o=r.substr(Js,13),Js+=13):(o=s,0===eo&&ao(W)),o===s&&("match simple"===r.substr(Js,12).toLowerCase()?(o=r.substr(Js,12),Js+=12):(o=s,0===eo&&ao(V)))),o===s&&(o=null),o!==s&&Zc()!==s?((a=Ro())===s&&(a=null),a!==s&&Zc()!==s?((i=Ro())===s&&(i=null),i!==s?(c=o,l=a,f=i,t=e={definition:u,table:n,keyword:e.toLowerCase(),match:c&&c.toLowerCase(),on_delete:l,on_update:f}):(Js=t,t=s)):(Js=t,t=s)):(Js=t,t=s)):(Js=t,t=s),t}function Ro(){var t,e,n,u;return t=Js,"on delete"===r.substr(Js,9).toLowerCase()?(e=r.substr(Js,9),Js+=9):(e=s,0===eo&&ao(K)),e===s&&("on update"===r.substr(Js,9).toLowerCase()?(e=r.substr(Js,9),Js+=9):(e=s,0===eo&&ao(q))),e!==s&&Zc()!==s&&(n=function(){var e;"restrict"===r.substr(Js,8).toLowerCase()?(e=r.substr(Js,8),Js+=8):(e=s,0===eo&&ao(Z));e===s&&("cascade"===r.substr(Js,7).toLowerCase()?(e=r.substr(Js,7),Js+=7):(e=s,0===eo&&ao(z)),e===s&&("set null"===r.substr(Js,8).toLowerCase()?(e=r.substr(Js,8),Js+=8):(e=s,0===eo&&ao(J)),e===s&&("no action"===r.substr(Js,9).toLowerCase()?(e=r.substr(Js,9),Js+=9):(e=s,0===eo&&ao(Q)),e===s&&("set default"===r.substr(Js,11).toLowerCase()?(e=r.substr(Js,11),Js+=11):(e=s,0===eo&&ao(rr))))));e!==s&&(e=e.toLowerCase());return e}())!==s?(u=n,t=e={type:e.toLowerCase(),value:u}):(Js=t,t=s),t}function _o(){var t,e,n,u,o,a,i;return t=Js,(e=Si())===s&&(e=mi())===s&&(e=Nc()),e!==s&&(i=e,e={keyword:Array.isArray(i)?i[0].toLowerCase():i.toLowerCase()}),(t=e)===s&&(t=Js,(e=hi())!==s&&Zc()!==s?(n=Js,"of"===r.substr(Js,2).toLowerCase()?(u=r.substr(Js,2),Js+=2):(u=s,0===eo&&ao(ir)),u!==s&&(o=Zc())!==s&&(a=ta())!==s?n=u=[u,o,a]:(Js=n,n=s),n===s&&(n=null),n!==s?(t=e=function(r,t){return {keyword:r&&r[0]&&r[0].toLowerCase(),args:t&&{keyword:t[0],columns:t[2]}||null}}(e,n)):(Js=t,t=s)):(Js=t,t=s)),t}function Oo(){var t,e,n;return t=Js,"character"===r.substr(Js,9).toLowerCase()?(e=r.substr(Js,9),Js+=9):(e=s,0===eo&&ao(pr)),e!==s&&Zc()!==s?("set"===r.substr(Js,3).toLowerCase()?(n=r.substr(Js,3),Js+=3):(n=s,0===eo&&ao(wr)),n!==s?(t=e="CHARACTER SET"):(Js=t,t=s)):(Js=t,t=s),t}function go(){var t,e,n,u,o,a,i,c,l;return t=Js,(e=pi())===s&&(e=null),e!==s&&Zc()!==s?((n=Oo())===s&&("charset"===r.substr(Js,7).toLowerCase()?(n=r.substr(Js,7),Js+=7):(n=s,0===eo&&ao(Er)),n===s&&("collate"===r.substr(Js,7).toLowerCase()?(n=r.substr(Js,7),Js+=7):(n=s,0===eo&&ao(hr)))),n!==s&&Zc()!==s?((u=xc())===s&&(u=null),u!==s&&Zc()!==s&&(o=Ya())!==s?(i=n,c=u,l=o,t=e={keyword:(a=e)&&`${a[0].toLowerCase()} ${i.toLowerCase()}`||i.toLowerCase(),symbol:c,value:l}):(Js=t,t=s)):(Js=t,t=s)):(Js=t,t=s),t}function xo(){var t,e,n,u,o,a,i,c,l;return t=Js,"auto_increment"===r.substr(Js,14).toLowerCase()?(e=r.substr(Js,14),Js+=14):(e=s,0===eo&&ao(S)),e===s&&("avg_row_length"===r.substr(Js,14).toLowerCase()?(e=r.substr(Js,14),Js+=14):(e=s,0===eo&&ao(Ar)),e===s&&("key_block_size"===r.substr(Js,14).toLowerCase()?(e=r.substr(Js,14),Js+=14):(e=s,0===eo&&ao(yr)),e===s&&("max_rows"===r.substr(Js,8).toLowerCase()?(e=r.substr(Js,8),Js+=8):(e=s,0===eo&&ao(Tr)),e===s&&("min_rows"===r.substr(Js,8).toLowerCase()?(e=r.substr(Js,8),Js+=8):(e=s,0===eo&&ao(mr)),e===s&&("stats_sample_pages"===r.substr(Js,18).toLowerCase()?(e=r.substr(Js,18),Js+=18):(e=s,0===eo&&ao(Sr))))))),e!==s&&Zc()!==s?((n=xc())===s&&(n=null),n!==s&&Zc()!==s&&(u=ci())!==s?(c=n,l=u,t=e={keyword:e.toLowerCase(),symbol:c,value:l.value}):(Js=t,t=s)):(Js=t,t=s),t===s&&(t=go())===s&&(t=Js,(e=Fc())===s&&("connection"===r.substr(Js,10).toLowerCase()?(e=r.substr(Js,10),Js+=10):(e=s,0===eo&&ao(Ir))),e!==s&&Zc()!==s?((n=xc())===s&&(n=null),n!==s&&Zc()!==s&&(u=si())!==s?(t=e=function(r,t,e){return {keyword:r.toLowerCase(),symbol:t,value:`'${e.value}'`}}(e,n,u)):(Js=t,t=s)):(Js=t,t=s),t===s&&(t=Js,"compression"===r.substr(Js,11).toLowerCase()?(e=r.substr(Js,11),Js+=11):(e=s,0===eo&&ao(Nr)),e!==s&&Zc()!==s?((n=xc())===s&&(n=null),n!==s&&Zc()!==s?(u=Js,39===r.charCodeAt(Js)?(o="'",Js++):(o=s,0===eo&&ao(Rr)),o!==s?("zlib"===r.substr(Js,4).toLowerCase()?(a=r.substr(Js,4),Js+=4):(a=s,0===eo&&ao(_r)),a===s&&("lz4"===r.substr(Js,3).toLowerCase()?(a=r.substr(Js,3),Js+=3):(a=s,0===eo&&ao(Or)),a===s&&("none"===r.substr(Js,4).toLowerCase()?(a=r.substr(Js,4),Js+=4):(a=s,0===eo&&ao(A)))),a!==s?(39===r.charCodeAt(Js)?(i="'",Js++):(i=s,0===eo&&ao(Rr)),i!==s?u=o=[o,a,i]:(Js=u,u=s)):(Js=u,u=s)):(Js=u,u=s),u!==s?(t=e=function(r,t,e){return {keyword:r.toLowerCase(),symbol:t,value:e.join("").toUpperCase()}}(e,n,u)):(Js=t,t=s)):(Js=t,t=s)):(Js=t,t=s),t===s&&(t=Js,"engine"===r.substr(Js,6).toLowerCase()?(e=r.substr(Js,6),Js+=6):(e=s,0===eo&&ao(gr)),e!==s&&Zc()!==s?((n=xc())===s&&(n=null),n!==s&&Zc()!==s&&(u=Ya())!==s?(t=e=function(r,t,e){return {keyword:r.toLowerCase(),symbol:t,value:e.toUpperCase()}}(e,n,u)):(Js=t,t=s)):(Js=t,t=s)))),t}function Uo(){var t,e,n,u,o,a,i;return (t=$o())===s&&(t=Js,e=Js,40===r.charCodeAt(Js)?(n="(",Js++):(n=s,0===eo&&ao(Yr)),n!==s&&(u=Zc())!==s&&(o=Uo())!==s&&(a=Zc())!==s?(41===r.charCodeAt(Js)?(i=")",Js++):(i=s,0===eo&&ao(Br)),i!==s?e=n=[n,u,o,a,i]:(Js=e,e=s)):(Js=e,e=s),e!==s&&(e={...e[2],parentheses_symbol:!0}),t=e),t}function Mo(){var t,e,n,u,o,a,i,c,l;if(t=Js,Gi()!==s)if(Zc()!==s)if((e=Do())!==s){for(n=[],u=Js,(o=Zc())!==s&&(a=Hc())!==s&&(i=Zc())!==s&&(c=Do())!==s?u=o=[o,a,i,c]:(Js=u,u=s);u!==s;)n.push(u),u=Js,(o=Zc())!==s&&(a=Hc())!==s&&(i=Zc())!==s&&(c=Do())!==s?u=o=[o,a,i,c]:(Js=u,u=s);n!==s?(t=hl(e,n)):(Js=t,t=s);}else Js=t,t=s;else Js=t,t=s;else Js=t,t=s;return t===s&&(t=Js,Zc()!==s&&Gi()!==s&&(e=Zc())!==s&&(n=function(){var t,e,n,u;t=Js,"RECURSIVE"===r.substr(Js,9)?(e="RECURSIVE",Js+=9):(e=s,0===eo&&ao(An));e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?t=e=[e,n]:(Js=t,t=s)):(Js=t,t=s);return t}())!==s&&(u=Zc())!==s&&(o=Do())!==s?((l=o).recursive=!0,t=[l]):(Js=t,t=s)),t}function Do(){var r,t,e,n,u;return r=Js,(t=si())===s&&(t=Ya()),t!==s&&Zc()!==s?((e=ko())===s&&(e=null),e!==s&&Zc()!==s&&xi()!==s&&Zc()!==s&&Yc()!==s&&Zc()!==s&&(n=bo())!==s&&Zc()!==s&&Bc()!==s?("string"==typeof(u=t)&&(u={type:"default",value:u}),r=t={name:u,stmt:n,columns:e}):(Js=r,r=s)):(Js=r,r=s),r}function ko(){var r,t,e,n,u,o,a,i;if(r=Js,Yc()!==s)if(Zc()!==s)if((t=ja())!==s){for(e=[],n=Js,(u=Zc())!==s&&(o=Hc())!==s&&(a=Zc())!==s&&(i=ja())!==s?n=u=[u,o,a,i]:(Js=n,n=s);n!==s;)e.push(n),n=Js,(u=Zc())!==s&&(o=Hc())!==s&&(a=Zc())!==s&&(i=ja())!==s?n=u=[u,o,a,i]:(Js=n,n=s);e!==s&&(n=Zc())!==s&&(u=Bc())!==s?(r=Xr(t,e)):(Js=r,r=s);}else Js=r,r=s;else Js=r,r=s;else Js=r,r=s;return r}function $o(){var t,e,n,u,o,a,i,c,l,f,b;return t=Js,Zc()!==s?((e=Mo())===s&&(e=null),e!==s&&Zc()!==s&&function(){var t,e,n,u;t=Js,"select"===r.substr(Js,6).toLowerCase()?(e=r.substr(Js,6),Js+=6):(e=s,0===eo&&ao(vn));e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?t=e=[e,n]:(Js=t,t=s)):(Js=t,t=s);return t}()!==s&&zc()!==s?((n=function(){var r,t,e,n,u,o;if(r=Js,(t=Fo())!==s){for(e=[],n=Js,(u=Zc())!==s&&(o=Fo())!==s?n=u=[u,o]:(Js=n,n=s);n!==s;)e.push(n),n=Js,(u=Zc())!==s&&(o=Fo())!==s?n=u=[u,o]:(Js=n,n=s);e!==s?(t=function(r,t){const e=[r];for(let r=0,n=t.length;r<n;++r)e.push(t[r][1]);return e}(t,e),r=t):(Js=r,r=s);}else Js=r,r=s;return r}())===s&&(n=null),n!==s&&Zc()!==s?((u=Wi())===s&&(u=null),u!==s&&Zc()!==s&&(o=Po())!==s&&Zc()!==s?((a=Yo())===s&&(a=null),a!==s&&Zc()!==s?((i=ra())===s&&(i=null),i!==s&&Zc()!==s?((c=function(){var r,t,e;r=Js,(t=Hi())!==s&&Zc()!==s&&ji()!==s&&Zc()!==s&&(e=Ea())!==s?(t=e.value,r=t):(Js=r,r=s);return r}())===s&&(c=null),c!==s&&Zc()!==s?((l=function(){var t,e;t=Js,function(){var t,e,n,u;t=Js,"having"===r.substr(Js,6).toLowerCase()?(e=r.substr(Js,6),Js+=6):(e=s,0===eo&&ao(Vn));e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?t=e=[e,n]:(Js=t,t=s)):(Js=t,t=s);return t}()!==s&&Zc()!==s&&(e=ma())!==s?(t=e):(Js=t,t=s);return t}())===s&&(l=null),l!==s&&Zc()!==s?((f=ia())===s&&(f=null),f!==s&&Zc()!==s?((b=fa())===s&&(b=null),b!==s?(t=function(r,t,e,n,u,s,o,a,i,c){return u&&u.forEach(r=>r.table&&Il.add(`select::${r.db}::${r.table}`)),{with:r,type:"select",options:t,distinct:e,columns:n,from:u,where:s,groupby:o,having:a,orderby:i,limit:c}}(e,n,u,o,a,i,c,l,f,b)):(Js=t,t=s)):(Js=t,t=s)):(Js=t,t=s)):(Js=t,t=s)):(Js=t,t=s)):(Js=t,t=s)):(Js=t,t=s)):(Js=t,t=s)):(Js=t,t=s)):(Js=t,t=s),t}function Fo(){var e;return (e=function(){var t;"sql_calc_found_rows"===r.substr(Js,19).toLowerCase()?(t=r.substr(Js,19),Js+=19):(t=s,0===eo&&ao(_s));return t}())===s&&((e=function(){var t;"sql_cache"===r.substr(Js,9).toLowerCase()?(t=r.substr(Js,9),Js+=9):(t=s,0===eo&&ao(Os));return t}())===s&&(e=function(){var t;"sql_no_cache"===r.substr(Js,12).toLowerCase()?(t=r.substr(Js,12),Js+=12):(t=s,0===eo&&ao(gs));return t}()),e===s&&(e=function(){var t;"sql_big_result"===r.substr(Js,14).toLowerCase()?(t=r.substr(Js,14),Js+=14):(t=s,0===eo&&ao(Us));return t}())===s&&(e=function(){var t;"sql_small_result"===r.substr(Js,16).toLowerCase()?(t=r.substr(Js,16),Js+=16):(t=s,0===eo&&ao(xs));return t}())===s&&(e=function(){var t;"sql_buffer_result"===r.substr(Js,17).toLowerCase()?(t=r.substr(Js,17),Js+=17):(t=s,0===eo&&ao(Ms));return t}())),e!==s&&(e=e),e}function Po(){var r,t,e,n,u,o,a,i,c,l;if(r=Js,(t=Xi())===s&&(t=Js,(e=jc())!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?t=e=[e,n]:(Js=t,t=s)):(Js=t,t=s),t===s&&(t=jc())),t!==s){for(e=[],n=Js,(u=Zc())!==s&&(o=Hc())!==s&&(a=Zc())!==s&&(i=Ho())!==s?n=u=[u,o,a,i]:(Js=n,n=s);n!==s;)e.push(n),n=Js,(u=Zc())!==s&&(o=Hc())!==s&&(a=Zc())!==s&&(i=Ho())!==s?n=u=[u,o,a,i]:(Js=n,n=s);e!==s?(c=t,l=e,Nl.add("select::null::(.*)"),r=t=l&&l.length>0?(c[0]={expr:{type:"column_ref",table:null,column:"*"},as:null},hl(c[0],l)):c[0]):(Js=r,r=s);}else Js=r,r=s;if(r===s)if(r=Js,(t=Ho())!==s){for(e=[],n=Js,(u=Zc())!==s&&(o=Hc())!==s&&(a=Zc())!==s&&(i=Ho())!==s?n=u=[u,o,a,i]:(Js=n,n=s);n!==s;)e.push(n),n=Js,(u=Zc())!==s&&(o=Hc())!==s&&(a=Zc())!==s&&(i=Ho())!==s?n=u=[u,o,a,i]:(Js=n,n=s);e!==s?(r=t=function(r,t){return hl(r,t)}(t,e)):(Js=r,r=s);}else Js=r,r=s;return r}function Go(){var r,t,e,n,u;return r=Js,(t=ma())!==s&&Zc()!==s?((e=function(){var r,t;return r=Js,Xc()!==s&&Zc()!==s&&(t=li())!==s&&Zc()!==s&&Wc()!==s?(r={brackets:!0,number:t}):(Js=r,r=s),r}())===s&&(e=null),e!==s?(u=e,(n=t).array_index=u,r=t=n):(Js=r,r=s)):(Js=r,r=s),r}function Ho(){var r,t,e,n,u;return r=Js,(t=ka())!==s&&(t={expr:t,as:null}),(r=t)===s&&(r=Js,(t=Go())!==s&&gc()!==s&&(e=dl())!==s&&Zc()!==s?((n=jo())===s&&(n=null),n!==s?(r=t={as:n,type:"cast",expr:t,symbol:"::",target:e}):(Js=r,r=s)):(Js=r,r=s),r===s&&(r=Js,(t=Pa())!==s&&Zc()!==s&&(e=Gc())!==s&&Zc()!==s&&(n=jc())!==s?(u=t,Nl.add(`select::${u}::(.*)`),r=t={type:"star_ref",expr:{type:"column_ref",table:u,column:"*"},as:null}):(Js=r,r=s),r===s&&(r=Js,(t=Go())!==s&&Zc()!==s?((e=jo())===s&&(e=null),e!==s?(r=t=Wr(t,e)):(Js=r,r=s)):(Js=r,r=s)))),r}function jo(){var r,t,e;return r=Js,(t=xi())!==s&&Zc()!==s&&(e=Ga())!==s?(r=t=e):(Js=r,r=s),r===s&&(r=Js,(t=xi())===s&&(t=null),t!==s&&Zc()!==s&&(e=Pa())!==s?(r=t=e):(Js=r,r=s)),r}function Yo(){var r,t;return r=Js,Oi()!==s&&Zc()!==s&&(t=Ko())!==s?(r=t):(Js=r,r=s),r}function Bo(){var r,t,e;return r=Js,(t=Jo())!==s&&Zc()!==s&&wi()!==s&&Zc()!==s&&(e=Jo())!==s?(r=t=[t,e]):(Js=r,r=s),r}function Xo(){var t,e;return t=Js,Pi()!==s&&Zc()!==s?("btree"===r.substr(Js,5).toLowerCase()?(e=r.substr(Js,5),Js+=5):(e=s,0===eo&&ao(Vr)),e===s&&("hash"===r.substr(Js,4).toLowerCase()?(e=r.substr(Js,4),Js+=4):(e=s,0===eo&&ao(Kr)),e===s&&("gist"===r.substr(Js,4).toLowerCase()?(e=r.substr(Js,4),Js+=4):(e=s,0===eo&&ao(qr)),e===s&&("gin"===r.substr(Js,3).toLowerCase()?(e=r.substr(Js,3),Js+=3):(e=s,0===eo&&ao(Zr))))),e!==s?(t={keyword:"using",type:e.toLowerCase()}):(Js=t,t=s)):(Js=t,t=s),t}function Wo(){var r,t,e,n,u,o;if(r=Js,(t=Vo())!==s){for(e=[],n=Js,(u=Zc())!==s&&(o=Vo())!==s?n=u=[u,o]:(Js=n,n=s);n!==s;)e.push(n),n=Js,(u=Zc())!==s&&(o=Vo())!==s?n=u=[u,o]:(Js=n,n=s);e!==s?(r=t=function(r,t){const e=[r];for(let r=0;r<t.length;r++)e.push(t[r][1]);return e}(t,e)):(Js=r,r=s);}else Js=r,r=s;return r}function Vo(){var t,e,n,u,o,a;return t=Js,(e=function(){var t,e,n,u;t=Js,"key_block_size"===r.substr(Js,14).toLowerCase()?(e=r.substr(Js,14),Js+=14):(e=s,0===eo&&ao(yr));e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="KEY_BLOCK_SIZE"):(Js=t,t=s)):(Js=t,t=s);return t}())!==s&&Zc()!==s?((n=xc())===s&&(n=null),n!==s&&Zc()!==s&&(u=ci())!==s?(o=n,a=u,t=e={type:e.toLowerCase(),symbol:o,expr:a}):(Js=t,t=s)):(Js=t,t=s),t===s&&(t=Js,(e=Ya())!==s&&Zc()!==s&&(n=xc())!==s&&Zc()!==s?((u=ci())===s&&(u=Pa()),u!==s?(t=e=function(r,t,e){return {type:r.toLowerCase(),symbol:t,expr:"string"==typeof e&&{type:"origin",value:e}||e}}(e,n,u)):(Js=t,t=s)):(Js=t,t=s),t===s&&(t=Xo())===s&&(t=Js,"with"===r.substr(Js,4).toLowerCase()?(e=r.substr(Js,4),Js+=4):(e=s,0===eo&&ao(zr)),e!==s&&Zc()!==s?("parser"===r.substr(Js,6).toLowerCase()?(n=r.substr(Js,6),Js+=6):(n=s,0===eo&&ao(Jr)),n!==s&&Zc()!==s&&(u=Ya())!==s?(t=e={type:"with parser",expr:u}):(Js=t,t=s)):(Js=t,t=s),t===s&&(t=Js,"visible"===r.substr(Js,7).toLowerCase()?(e=r.substr(Js,7),Js+=7):(e=s,0===eo&&ao(Qr)),e===s&&("invisible"===r.substr(Js,9).toLowerCase()?(e=r.substr(Js,9),Js+=9):(e=s,0===eo&&ao(rt))),e!==s&&(e=function(r){return {type:r.toLowerCase(),expr:r.toLowerCase()}}(e)),(t=e)===s&&(t=Qc())))),t}function Ko(){var r,t,e,n;if(r=Js,(t=Zo())!==s){for(e=[],n=qo();n!==s;)e.push(n),n=qo();e!==s?(r=t=tt(t,e)):(Js=r,r=s);}else Js=r,r=s;return r}function qo(){var r,t,e;return r=Js,Zc()!==s&&(t=Hc())!==s&&Zc()!==s&&(e=Zo())!==s?(r=e):(Js=r,r=s),r===s&&(r=Js,Zc()!==s&&(t=function(){var r,t,e,n,u,o,a,i,c,l,f;if(r=Js,(t=zo())!==s)if(Zc()!==s)if((e=Zo())!==s)if(Zc()!==s)if((n=Pi())!==s)if(Zc()!==s)if(Yc()!==s)if(Zc()!==s)if((u=Ya())!==s){for(o=[],a=Js,(i=Zc())!==s&&(c=Hc())!==s&&(l=Zc())!==s&&(f=Ya())!==s?a=i=[i,c,l,f]:(Js=a,a=s);a!==s;)o.push(a),a=Js,(i=Zc())!==s&&(c=Hc())!==s&&(l=Zc())!==s&&(f=Ya())!==s?a=i=[i,c,l,f]:(Js=a,a=s);o!==s&&(a=Zc())!==s&&(i=Bc())!==s?(b=t,d=u,L=o,(v=e).join=b,v.using=hl(d,L),r=t=v):(Js=r,r=s);}else Js=r,r=s;else Js=r,r=s;else Js=r,r=s;else Js=r,r=s;else Js=r,r=s;else Js=r,r=s;else Js=r,r=s;else Js=r,r=s;else Js=r,r=s;var b,v,d,L;r===s&&(r=Js,(t=zo())!==s&&Zc()!==s&&(e=Zo())!==s&&Zc()!==s?((n=Qo())===s&&(n=null),n!==s?(t=function(r,t,e){return t.join=r,t.on=e,t}(t,e,n),r=t):(Js=r,r=s)):(Js=r,r=s),r===s&&(r=Js,(t=zo())!==s&&Zc()!==s&&(e=Yc())!==s&&Zc()!==s&&(n=bo())!==s&&Zc()!==s&&Bc()!==s&&Zc()!==s?((u=jo())===s&&(u=null),u!==s&&(o=Zc())!==s?((a=Qo())===s&&(a=null),a!==s?(t=function(r,t,e,n){return t.parentheses=!0,{expr:t,as:e,join:r,on:n}}(t,n,u,a),r=t):(Js=r,r=s)):(Js=r,r=s)):(Js=r,r=s)));return r}())!==s?(r=t):(Js=r,r=s)),r}function Zo(){var t,e,n,u,o,a;return t=Js,(e=function(){var t;"dual"===r.substr(Js,4).toLowerCase()?(t=r.substr(Js,4),Js+=4):(t=s,0===eo&&ao(Es));return t}())!==s&&(e={type:"dual"}),(t=e)===s&&(t=Js,(e=Yc())!==s&&Zc()!==s?((n=bo())===s&&(n=pa()),n!==s&&Zc()!==s&&Bc()!==s&&Zc()!==s?((u=jo())===s&&(u=null),u!==s?(o=n,a=u,Array.isArray(o)&&(o={type:"values",values:o}),o.parentheses=!0,t=e={expr:o,as:a}):(Js=t,t=s)):(Js=t,t=s)):(Js=t,t=s),t===s&&(t=Js,(e=ri())!==s&&Zc()!==s?((n=jo())===s&&(n=null),n!==s?(t=e=Wr(e,n)):(Js=t,t=s)):(Js=t,t=s),t===s&&(t=Js,(e=Jo())!==s&&Zc()!==s?((n=jo())===s&&(n=null),n!==s?(t=e=function(r,t){return "var"===r.type?(r.as=t,r):{...r,as:t}}(e,n)):(Js=t,t=s)):(Js=t,t=s)))),t}function zo(){var t,e,n,u;return t=Js,(e=function(){var t,e,n,u;t=Js,"left"===r.substr(Js,4).toLowerCase()?(e=r.substr(Js,4),Js+=4):(e=s,0===eo&&ao(Mn));e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?t=e=[e,n]:(Js=t,t=s)):(Js=t,t=s);return t}())!==s&&(n=Zc())!==s?((u=ki())===s&&(u=null),u!==s&&Zc()!==s&&Di()!==s?(t=e="LEFT JOIN"):(Js=t,t=s)):(Js=t,t=s),t===s&&(t=Js,(e=function(){var t,e,n,u;t=Js,"right"===r.substr(Js,5).toLowerCase()?(e=r.substr(Js,5),Js+=5):(e=s,0===eo&&ao(Dn));e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?t=e=[e,n]:(Js=t,t=s)):(Js=t,t=s);return t}())!==s&&(n=Zc())!==s?((u=ki())===s&&(u=null),u!==s&&Zc()!==s&&Di()!==s?(t=e="RIGHT JOIN"):(Js=t,t=s)):(Js=t,t=s),t===s&&(t=Js,(e=function(){var t,e,n,u;t=Js,"full"===r.substr(Js,4).toLowerCase()?(e=r.substr(Js,4),Js+=4):(e=s,0===eo&&ao(kn));e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?t=e=[e,n]:(Js=t,t=s)):(Js=t,t=s);return t}())!==s&&(n=Zc())!==s?((u=ki())===s&&(u=null),u!==s&&Zc()!==s&&Di()!==s?(t=e="FULL JOIN"):(Js=t,t=s)):(Js=t,t=s),t===s&&(t=Js,e=Js,(n=function(){var t,e,n,u;t=Js,"inner"===r.substr(Js,5).toLowerCase()?(e=r.substr(Js,5),Js+=5):(e=s,0===eo&&ao($n));e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?t=e=[e,n]:(Js=t,t=s)):(Js=t,t=s);return t}())!==s&&(u=Zc())!==s?e=n=[n,u]:(Js=e,e=s),e===s&&(e=null),e!==s&&(n=Di())!==s?(t=e="INNER JOIN"):(Js=t,t=s)))),t}function Jo(){var r,t,e,n,u,o,a,i,c,l;return r=Js,(t=Pa())!==s?(e=Js,(n=Zc())!==s&&(u=Gc())!==s&&(o=Zc())!==s&&(a=Pa())!==s?e=n=[n,u,o,a]:(Js=e,e=s),e!==s?(n=Js,(u=Zc())!==s&&(o=Gc())!==s&&(a=Zc())!==s&&(i=Pa())!==s?n=u=[u,o,a,i]:(Js=n,n=s),n!==s?(r=t=function(r,t,e){const n={db:null,table:r};return null!==e&&(n.db=r,n.schema=t[3],n.table=e[3]),n}(t,e,n)):(Js=r,r=s)):(Js=r,r=s)):(Js=r,r=s),r===s&&(r=Js,(t=Pa())!==s&&(e=Zc())!==s&&(n=Gc())!==s&&(u=Zc())!==s&&(o=jc())!==s?(l=t,Il.add(`select::${l}::(.*)`),r=t={db:l,table:"*"}):(Js=r,r=s),r===s&&(r=Js,(t=Pa())!==s?(e=Js,(n=Zc())!==s&&(u=Gc())!==s&&(o=Zc())!==s&&(a=Pa())!==s?e=n=[n,u,o,a]:(Js=e,e=s),e===s&&(e=null),e!==s?(r=t=function(r,t){const e={db:null,table:r};return null!==t&&(e.db=r,e.table=t[3]),e}(t,e)):(Js=r,r=s)):(Js=r,r=s),r===s&&(r=Js,(t=bl())!==s&&((c=t).db=null,c.table=c.name,t=c),r=t))),r}function Qo(){var r,t;return r=Js,Mi()!==s&&Zc()!==s&&(t=ma())!==s?(r=t):(Js=r,r=s),r}function ra(){var t,e;return t=Js,function(){var t,e,n,u;t=Js,"where"===r.substr(Js,5).toLowerCase()?(e=r.substr(Js,5),Js+=5):(e=s,0===eo&&ao(Yn));e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?t=e=[e,n]:(Js=t,t=s)):(Js=t,t=s);return t}()!==s&&Zc()!==s&&(e=Sa())!==s?(t=e):(Js=t,t=s),t}function ta(){var r,t,e,n,u,o,a,i;if(r=Js,(t=$a())!==s){for(e=[],n=Js,(u=Zc())!==s&&(o=Hc())!==s&&(a=Zc())!==s&&(i=$a())!==s?n=u=[u,o,a,i]:(Js=n,n=s);n!==s;)e.push(n),n=Js,(u=Zc())!==s&&(o=Hc())!==s&&(a=Zc())!==s&&(i=$a())!==s?n=u=[u,o,a,i]:(Js=n,n=s);e!==s?(r=t=hl(t,e)):(Js=r,r=s);}else Js=r,r=s;return r}function ea(){var r,t;return r=Js,Yc()!==s&&Zc()!==s?((t=function(){var r,t,e,n;r=Js,(t=aa())===s&&(t=null);t!==s&&Zc()!==s?((e=ia())===s&&(e=null),e!==s&&Zc()!==s&&(n=function(){var r,t,e,n,u;r=Js,(t=mc())!==s&&Zc()!==s?((e=na())===s&&(e=ua()),e!==s?(t="rows "+e.value,r=t):(Js=r,r=s)):(Js=r,r=s);r===s&&(r=Js,(t=mc())!==s&&Zc()!==s&&(e=Vi())!==s&&Zc()!==s&&(n=ua())!==s&&Zc()!==s&&rc()!==s&&Zc()!==s&&(u=na())!==s?(t=function(r,t){return `rows between ${r.value} and ${t.value}`}(n,u),r=t):(Js=r,r=s));return r}())!==s?(t=function(r,t,e){return {name:null,partitionby:r,orderby:t,window_frame_clause:e}}(t,e,n),r=t):(Js=r,r=s)):(Js=r,r=s);return r}())===s&&(t=null),t!==s&&Zc()!==s&&Bc()!==s?(r={window_specification:t||{},parentheses:!0}):(Js=r,r=s)):(Js=r,r=s),r}function na(){var t,e,n,u;return t=Js,(e=oa())!==s&&Zc()!==s?("following"===r.substr(Js,9).toLowerCase()?(n=r.substr(Js,9),Js+=9):(n=s,0===eo&&ao(et)),n!==s?((u=e).value+=" FOLLOWING",t=e=u):(Js=t,t=s)):(Js=t,t=s),t===s&&(t=sa()),t}function ua(){var t,e,n,u;return t=Js,(e=oa())!==s&&Zc()!==s?("preceding"===r.substr(Js,9).toLowerCase()?(n=r.substr(Js,9),Js+=9):(n=s,0===eo&&ao(nt)),n!==s?((u=e).value+=" PRECEDING",t=e=u):(Js=t,t=s)):(Js=t,t=s),t===s&&(t=sa()),t}function sa(){var t,e,n;return t=Js,"current"===r.substr(Js,7).toLowerCase()?(e=r.substr(Js,7),Js+=7):(e=s,0===eo&&ao(ut)),e!==s&&Zc()!==s?("row"===r.substr(Js,3).toLowerCase()?(n=r.substr(Js,3),Js+=3):(n=s,0===eo&&ao(Lr)),n!==s?(t=e={type:"single_quote_string",value:"current row"}):(Js=t,t=s)):(Js=t,t=s),t}function oa(){var t,e;return t=Js,"unbounded"===r.substr(Js,9).toLowerCase()?(e=r.substr(Js,9),Js+=9):(e=s,0===eo&&ao(st)),e!==s&&(e={type:"single_quote_string",value:e.toUpperCase()}),(t=e)===s&&(t=ci()),t}function aa(){var r,t;return r=Js,Ri()!==s&&Zc()!==s&&ji()!==s&&Zc()!==s&&(t=Po())!==s?(r=t):(Js=r,r=s),r}function ia(){var t,e;return t=Js,function(){var t,e,n,u;t=Js,"order"===r.substr(Js,5).toLowerCase()?(e=r.substr(Js,5),Js+=5):(e=s,0===eo&&ao(Wn));e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?t=e=[e,n]:(Js=t,t=s)):(Js=t,t=s);return t}()!==s&&Zc()!==s&&ji()!==s&&Zc()!==s&&(e=function(){var r,t,e,n,u,o,a,i;if(r=Js,(t=ca())!==s){for(e=[],n=Js,(u=Zc())!==s&&(o=Hc())!==s&&(a=Zc())!==s&&(i=ca())!==s?n=u=[u,o,a,i]:(Js=n,n=s);n!==s;)e.push(n),n=Js,(u=Zc())!==s&&(o=Hc())!==s&&(a=Zc())!==s&&(i=ca())!==s?n=u=[u,o,a,i]:(Js=n,n=s);e!==s?(t=hl(t,e),r=t):(Js=r,r=s);}else Js=r,r=s;return r}())!==s?(t=e):(Js=t,t=s),t}function ca(){var r,t,e;return r=Js,(t=ma())!==s&&Zc()!==s?((e=Bi())===s&&(e=Yi()),e===s&&(e=null),e!==s?(r=t=function(r,t){const e={expr:r,type:"ASC"};return "DESC"===t&&(e.type="DESC"),e}(t,e)):(Js=r,r=s)):(Js=r,r=s),r}function la(){var r;return (r=ci())===s&&(r=Va()),r}function fa(){var t,e,n,u,o,a;return t=Js,function(){var t,e,n,u;t=Js,"limit"===r.substr(Js,5).toLowerCase()?(e=r.substr(Js,5),Js+=5):(e=s,0===eo&&ao(Kn));e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?t=e=[e,n]:(Js=t,t=s)):(Js=t,t=s);return t}()!==s&&Zc()!==s?((e=la())===s&&(e=Xi()),e!==s&&Zc()!==s?(n=Js,(u=function(){var t,e,n,u;t=Js,"offset"===r.substr(Js,6).toLowerCase()?(e=r.substr(Js,6),Js+=6):(e=s,0===eo&&ao(qn));e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="OFFSET"):(Js=t,t=s)):(Js=t,t=s);return t}())!==s&&(o=Zc())!==s&&(a=la())!==s?n=u=[u,o,a]:(Js=n,n=s),n===s&&(n=null),n!==s?(t=function(r,t){const e=[];return "string"==typeof r?e.push({type:"origin",value:"all"}):e.push(r),t&&e.push(t[2]),{seperator:t&&t[0]&&t[0].toLowerCase()||"",value:e}}(e,n)):(Js=t,t=s)):(Js=t,t=s)):(Js=t,t=s),t}function ba(){var t,e,n,u,o,a,i,c,l;return t=Js,e=Js,(n=Pa())!==s&&(u=Zc())!==s&&(o=Gc())!==s?e=n=[n,u,o]:(Js=e,e=s),e===s&&(e=null),e!==s&&(n=Zc())!==s&&(u=ja())!==s&&(o=Zc())!==s?(61===r.charCodeAt(Js)?(a="=",Js++):(a=s,0===eo&&ao(ot)),a!==s&&Zc()!==s&&(i=ga())!==s?(t=e={column:u,value:i,table:(l=e)&&l[0]}):(Js=t,t=s)):(Js=t,t=s),t===s&&(t=Js,e=Js,(n=Pa())!==s&&(u=Zc())!==s&&(o=Gc())!==s?e=n=[n,u,o]:(Js=e,e=s),e===s&&(e=null),e!==s&&(n=Zc())!==s&&(u=ja())!==s&&(o=Zc())!==s?(61===r.charCodeAt(Js)?(a="=",Js++):(a=s,0===eo&&ao(ot)),a!==s&&Zc()!==s&&(i=Fi())!==s&&Zc()!==s&&Yc()!==s&&Zc()!==s&&(c=$a())!==s&&Zc()!==s&&Bc()!==s?(t=e=function(r,t,e){return {column:t,value:e,table:r&&r[0],keyword:"values"}}(e,u,c)):(Js=t,t=s)):(Js=t,t=s)),t}function va(){var t,e,n,u,o;return t=Js,(e=function(){var t,e,n,u;t=Js,"returning"===r.substr(Js,9).toLowerCase()?(e=r.substr(Js,9),Js+=9):(e=s,0===eo&&ao(Tn));e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="RETURNING"):(Js=t,t=s)):(Js=t,t=s);return t}())!==s&&Zc()!==s?((n=jc())===s&&(n=ta()),n!==s?(o=n,t=e={type:(u=e)&&u.toLowerCase()||"returning",columns:"*"===o&&[{type:"columne_ref",table:null,column:"*"}]||o}):(Js=t,t=s)):(Js=t,t=s),t}function da(){var r;return (r=pa())===s&&(r=$o()),r}function La(){var r,t,e,n,u,o,a,i,c;if(r=Js,Ri()!==s)if(Zc()!==s)if((t=Yc())!==s)if(Zc()!==s)if((e=Ya())!==s){for(n=[],u=Js,(o=Zc())!==s&&(a=Hc())!==s&&(i=Zc())!==s&&(c=Ya())!==s?u=o=[o,a,i,c]:(Js=u,u=s);u!==s;)n.push(u),u=Js,(o=Zc())!==s&&(a=Hc())!==s&&(i=Zc())!==s&&(c=Ya())!==s?u=o=[o,a,i,c]:(Js=u,u=s);n!==s&&(u=Zc())!==s&&(o=Bc())!==s?(r=hl(e,n)):(Js=r,r=s);}else Js=r,r=s;else Js=r,r=s;else Js=r,r=s;else Js=r,r=s;else Js=r,r=s;return r===s&&(r=Js,Ri()!==s&&Zc()!==s&&(t=wa())!==s?(r=t):(Js=r,r=s)),r}function Ca(){var r,t;return r=Js,(t=Si())!==s&&(t="insert"),(r=t)===s&&(r=Js,(t=Ii())!==s&&(t="replace"),r=t),r}function pa(){var r,t;return r=Js,Fi()!==s&&Zc()!==s&&(t=function(){var r,t,e,n,u,o,a,i;if(r=Js,(t=wa())!==s){for(e=[],n=Js,(u=Zc())!==s&&(o=Hc())!==s&&(a=Zc())!==s&&(i=wa())!==s?n=u=[u,o,a,i]:(Js=n,n=s);n!==s;)e.push(n),n=Js,(u=Zc())!==s&&(o=Hc())!==s&&(a=Zc())!==s&&(i=wa())!==s?n=u=[u,o,a,i]:(Js=n,n=s);e!==s?(t=hl(t,e),r=t):(Js=r,r=s);}else Js=r,r=s;return r}())!==s?(r=t):(Js=r,r=s),r}function wa(){var r,t;return r=Js,Yc()!==s&&Zc()!==s&&(t=Ea())!==s&&Zc()!==s&&Bc()!==s?(r=t):(Js=r,r=s),r}function Ea(){var r,t,e,n,u,o,a,i;if(r=Js,(t=ma())!==s){for(e=[],n=Js,(u=Zc())!==s&&(o=Hc())!==s&&(a=Zc())!==s&&(i=ma())!==s?n=u=[u,o,a,i]:(Js=n,n=s);n!==s;)e.push(n),n=Js,(u=Zc())!==s&&(o=Hc())!==s&&(a=Zc())!==s&&(i=ma())!==s?n=u=[u,o,a,i]:(Js=n,n=s);e!==s?(r=t=function(r,t){const e={type:"expr_list"};return e.value=hl(r,t),e}(t,e)):(Js=r,r=s);}else Js=r,r=s;return r}function ha(){var t,e,n;return t=Js,Rc()!==s&&Zc()!==s&&(e=ma())!==s&&Zc()!==s&&(n=function(){var t;(t=function(){var t,e,n,u;t=Js,"year"===r.substr(Js,4).toLowerCase()?(e=r.substr(Js,4),Js+=4):(e=s,0===eo&&ao(Ne));e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="YEAR"):(Js=t,t=s)):(Js=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Js,"month"===r.substr(Js,5).toLowerCase()?(e=r.substr(Js,5),Js+=5):(e=s,0===eo&&ao(he));e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="MONTH"):(Js=t,t=s)):(Js=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Js,"day"===r.substr(Js,3).toLowerCase()?(e=r.substr(Js,3),Js+=3):(e=s,0===eo&&ao(ie));e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="DAY"):(Js=t,t=s)):(Js=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Js,"hour"===r.substr(Js,4).toLowerCase()?(e=r.substr(Js,4),Js+=4):(e=s,0===eo&&ao(ve));e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="HOUR"):(Js=t,t=s)):(Js=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Js,"minute"===r.substr(Js,6).toLowerCase()?(e=r.substr(Js,6),Js+=6):(e=s,0===eo&&ao(Ee));e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="MINUTE"):(Js=t,t=s)):(Js=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Js,"second"===r.substr(Js,6).toLowerCase()?(e=r.substr(Js,6),Js+=6):(e=s,0===eo&&ao(ye));e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="SECOND"):(Js=t,t=s)):(Js=t,t=s);return t}());return t}())!==s?(t={type:"interval",expr:e,unit:n.toLowerCase()}):(Js=t,t=s),t===s&&(t=Js,Rc()!==s&&Zc()!==s&&(e=si())!==s?(t=function(r){return {type:"interval",expr:r,unit:""}}(e)):(Js=t,t=s)),t}function Aa(){var r,t,e,n,u,o,a,i,c,l;if(r=Js,ec()!==s)if(Zc()!==s){if(t=[],(e=ya())!==s)for(;e!==s;)t.push(e),e=ya();else t=s;t!==s&&(e=Zc())!==s?((n=Ta())===s&&(n=null),n!==s&&(u=Zc())!==s&&(o=uc())!==s&&Zc()!==s?((a=ec())===s&&(a=null),a!==s?(c=t,(l=n)&&c.push(l),r={type:"case",expr:null,args:c}):(Js=r,r=s)):(Js=r,r=s)):(Js=r,r=s);}else Js=r,r=s;else Js=r,r=s;if(r===s)if(r=Js,ec()!==s)if(Zc()!==s)if((t=ma())!==s)if((e=Zc())!==s){if(n=[],(u=ya())!==s)for(;u!==s;)n.push(u),u=ya();else n=s;n!==s&&(u=Zc())!==s?((o=Ta())===s&&(o=null),o!==s&&Zc()!==s&&(a=uc())!==s&&Zc()!==s?((i=ec())===s&&(i=null),i!==s?(r=function(r,t,e){return e&&t.push(e),{type:"case",expr:r,args:t}}(t,n,o)):(Js=r,r=s)):(Js=r,r=s)):(Js=r,r=s);}else Js=r,r=s;else Js=r,r=s;else Js=r,r=s;else Js=r,r=s;return r}function ya(){var t,e,n;return t=Js,nc()!==s&&Zc()!==s&&(e=Sa())!==s&&Zc()!==s&&function(){var t,e,n,u;t=Js,"then"===r.substr(Js,4).toLowerCase()?(e=r.substr(Js,4),Js+=4):(e=s,0===eo&&ao(Eu));e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?t=e=[e,n]:(Js=t,t=s)):(Js=t,t=s);return t}()!==s&&Zc()!==s&&(n=ma())!==s?(t={type:"when",cond:e,result:n}):(Js=t,t=s),t}function Ta(){var t,e;return t=Js,function(){var t,e,n,u;t=Js,"else"===r.substr(Js,4).toLowerCase()?(e=r.substr(Js,4),Js+=4):(e=s,0===eo&&ao(hu));e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?t=e=[e,n]:(Js=t,t=s)):(Js=t,t=s);return t}()!==s&&Zc()!==s&&(e=ma())!==s?(t={type:"else",result:e}):(Js=t,t=s),t}function ma(){var r;return (r=function(){var r,t,e,n,u,o,a,i;if(r=Js,(t=Da())!==s){if(e=[],n=Js,(u=Zc())!==s&&(o=qc())!==s&&(a=Zc())!==s&&(i=Da())!==s?n=u=[u,o,a,i]:(Js=n,n=s),n!==s)for(;n!==s;)e.push(n),n=Js,(u=Zc())!==s&&(o=qc())!==s&&(a=Zc())!==s&&(i=Da())!==s?n=u=[u,o,a,i]:(Js=n,n=s);else e=s;e!==s?(t=Al(t,e),r=t):(Js=r,r=s);}else Js=r,r=s;return r}())===s&&(r=function(){var r,t,e,n,u,o,a,i;if(r=Js,(t=Ia())!==s){for(e=[],n=Js,(u=zc())!==s&&(o=tc())!==s&&(a=Zc())!==s&&(i=Ia())!==s?n=u=[u,o,a,i]:(Js=n,n=s);n!==s;)e.push(n),n=Js,(u=zc())!==s&&(o=tc())!==s&&(a=Zc())!==s&&(i=Ia())!==s?n=u=[u,o,a,i]:(Js=n,n=s);e!==s?(t=at(t,e),r=t):(Js=r,r=s);}else Js=r,r=s;return r}())===s&&(r=function(){var r,t,e,n,u,o;if(r=Js,(t=xa())!==s){if(e=[],n=Js,(u=Zc())!==s&&(o=Da())!==s?n=u=[u,o]:(Js=n,n=s),n!==s)for(;n!==s;)e.push(n),n=Js,(u=Zc())!==s&&(o=Da())!==s?n=u=[u,o]:(Js=n,n=s);else e=s;e!==s?(t=pl(t,e[0][1]),r=t):(Js=r,r=s);}else Js=r,r=s;return r}())===s&&(r=Uo()),r}function Sa(){var r,t,e,n,u,o,a,i;if(r=Js,(t=ma())!==s){for(e=[],n=Js,(u=Zc())!==s?((o=rc())===s&&(o=tc())===s&&(o=Hc()),o!==s&&(a=Zc())!==s&&(i=ma())!==s?n=u=[u,o,a,i]:(Js=n,n=s)):(Js=n,n=s);n!==s;)e.push(n),n=Js,(u=Zc())!==s?((o=rc())===s&&(o=tc())===s&&(o=Hc()),o!==s&&(a=Zc())!==s&&(i=ma())!==s?n=u=[u,o,a,i]:(Js=n,n=s)):(Js=n,n=s);e!==s?(r=t=function(r,t){let e=r,n="";for(let u=0;u<t.length;u++)","===t[u][1]?(n=",",0===u&&(e=[r]),e.push(t[u][3])):e=wl(t[u][1],e,t[u][3]);if(","===n){const r={type:"expr_list"};return r.value=e,r}return e}(t,e)):(Js=r,r=s);}else Js=r,r=s;return r}function Ia(){var r,t,e,n,u,o,a,i;if(r=Js,(t=Na())!==s){for(e=[],n=Js,(u=zc())!==s&&(o=rc())!==s&&(a=Zc())!==s&&(i=Na())!==s?n=u=[u,o,a,i]:(Js=n,n=s);n!==s;)e.push(n),n=Js,(u=zc())!==s&&(o=rc())!==s&&(a=Zc())!==s&&(i=Na())!==s?n=u=[u,o,a,i]:(Js=n,n=s);e!==s?(r=t=at(t,e)):(Js=r,r=s);}else Js=r,r=s;return r}function Na(){var t,e,n,u,o;return (t=Ra())===s&&(t=function(){var r,t,e;r=Js,(t=function(){var r,t,e,n,u;r=Js,t=Js,(e=Qi())!==s&&(n=Zc())!==s&&(u=Ji())!==s?t=e=[e,n,u]:(Js=t,t=s);t!==s&&(t=(o=t)[0]+" "+o[2]);var o;(r=t)===s&&(r=Ji());return r}())!==s&&Zc()!==s&&Yc()!==s&&Zc()!==s&&(e=bo())!==s&&Zc()!==s&&Bc()!==s?(n=t,(u=e).parentheses=!0,t=pl(n,u),r=t):(Js=r,r=s);var n,u;return r}())===s&&(t=Js,(e=Qi())===s&&(e=Js,33===r.charCodeAt(Js)?(n="!",Js++):(n=s,0===eo&&ao(it)),n!==s?(u=Js,eo++,61===r.charCodeAt(Js)?(o="=",Js++):(o=s,0===eo&&ao(ot)),eo--,o===s?u=void 0:(Js=u,u=s),u!==s?e=n=[n,u]:(Js=e,e=s)):(Js=e,e=s)),e!==s&&(n=Zc())!==s&&(u=Na())!==s?(t=e=pl("NOT",u)):(Js=t,t=s)),t}function Ra(){var t,e,n,u,o;return t=Js,(e=ga())!==s&&Zc()!==s?((n=function(){var t;(t=function(){var t,e,n,u,o,a;t=[],e=Js,(n=Zc())!==s&&(u=_a())!==s&&(o=Zc())!==s&&(a=ga())!==s?e=n=[n,u,o,a]:(Js=e,e=s);if(e!==s)for(;e!==s;)t.push(e),e=Js,(n=Zc())!==s&&(u=_a())!==s&&(o=Zc())!==s&&(a=ga())!==s?e=n=[n,u,o,a]:(Js=e,e=s);else t=s;t!==s&&(t={type:"arithmetic",tail:t});return t}())===s&&(t=function(){var r,t,e,n;r=Js,(t=Oa())!==s&&Zc()!==s&&(e=Yc())!==s&&Zc()!==s&&(n=Ea())!==s&&Zc()!==s&&Bc()!==s?(r=t={op:t,right:n}):(Js=r,r=s);r===s&&(r=Js,(t=Oa())!==s&&Zc()!==s?((e=bl())===s&&(e=si()),e!==s?(t=function(r,t){return {op:r,right:t}}(t,e),r=t):(Js=r,r=s)):(Js=r,r=s));return r}())===s&&(t=function(){var r,t,e,n;r=Js,(t=function(){var r,t,e,n,u;r=Js,t=Js,(e=Qi())!==s&&(n=Zc())!==s&&(u=Vi())!==s?t=e=[e,n,u]:(Js=t,t=s);t!==s&&(t=(o=t)[0]+" "+o[2]);var o;(r=t)===s&&(r=Vi());return r}())!==s&&Zc()!==s&&(e=ga())!==s&&Zc()!==s&&rc()!==s&&Zc()!==s&&(n=ga())!==s?(r=t={op:t,right:{type:"expr_list",value:[e,n]}}):(Js=r,r=s);return r}())===s&&(t=function(){var r,t,e,n,u,o,a,i,c;r=Js,(t=qi())!==s&&(e=Zc())!==s&&(n=ga())!==s?(r=t={op:"IS",right:n}):(Js=r,r=s);r===s&&(r=Js,(t=qi())!==s&&(e=Zc())!==s?(n=Js,(u=Wi())!==s&&(o=Zc())!==s&&(a=Oi())!==s&&(i=Zc())!==s&&(c=Jo())!==s?n=u=[u,o,a,i,c]:(Js=n,n=s),n!==s?(t=function(r){const{db:t,table:e}=r.pop(),n="*"===e?"*":`"${e}"`;return {op:"IS",right:{type:"default",value:"DISTINCT FROM "+(t?`"${t}".${n}`:n)}}}(n),r=t):(Js=r,r=s)):(Js=r,r=s),r===s&&(r=Js,t=Js,(e=qi())!==s&&(n=Zc())!==s&&(u=Qi())!==s?t=e=[e,n,u]:(Js=t,t=s),t!==s&&(e=Zc())!==s&&(n=ga())!==s?(t=function(r){return {op:"IS NOT",right:r}}(n),r=t):(Js=r,r=s)));return r}())===s&&(t=function(){var t,e,n;t=Js,(e=function(){var t,e,n,u,o;t=Js,e=Js,(n=Qi())!==s&&(u=Zc())!==s?((o=Zi())===s&&(o=zi()),o!==s?e=n=[n,u,o]:(Js=e,e=s)):(Js=e,e=s);e!==s&&(e=(a=e)[0]+" "+a[2]);var a;(t=e)===s&&(t=Zi())===s&&(t=zi())===s&&(t=Js,"similar"===r.substr(Js,7).toLowerCase()?(e=r.substr(Js,7),Js+=7):(e=s,0===eo&&ao(Lt)),e!==s&&(n=Zc())!==s&&(u=wi())!==s?(t=e="SIMILAR TO"):(Js=t,t=s));return t}())!==s&&Zc()!==s?((n=ti())===s&&(n=Ra()),n!==s?(t=e={op:e,right:n}):(Js=t,t=s)):(Js=t,t=s);return t}())===s&&(t=function(){var t,e,n;t=Js,"@>"===r.substr(Js,2)?(e="@>",Js+=2):(e=s,0===eo&&ao(Ct));e===s&&("<@"===r.substr(Js,2)?(e="<@",Js+=2):(e=s,0===eo&&ao(pt)),e===s&&(e=Kc())===s&&(e=function(){var t;"#>>"===r.substr(Js,3)?(t="#>>",Js+=3):(t=s,0===eo&&ao(js));return t}())===s&&(e=function(){var t;"#>"===r.substr(Js,2)?(t="#>",Js+=2):(t=s,0===eo&&ao(Hs));return t}())===s&&(63===r.charCodeAt(Js)?(e="?",Js++):(e=s,0===eo&&ao(wt)),e===s&&("?|"===r.substr(Js,2)?(e="?|",Js+=2):(e=s,0===eo&&ao(Et)),e===s&&("?&"===r.substr(Js,2)?(e="?&",Js+=2):(e=s,0===eo&&ao(ht)),e===s&&("#-"===r.substr(Js,2)?(e="#-",Js+=2):(e=s,0===eo&&ao(At)))))));e!==s&&Zc()!==s&&(n=Ho())!==s?(e={op:e,right:(u=n)&&u.expr||u},t=e):(Js=t,t=s);var u;return t}());return t}())===s&&(n=null),n!==s?(u=e,t=e=null===(o=n)?u:"arithmetic"===o.type?Al(u,o.tail):wl(o.op,u,o.right)):(Js=t,t=s)):(Js=t,t=s),t===s&&(t=si())===s&&(t=$a()),t}function _a(){var t;return ">="===r.substr(Js,2)?(t=">=",Js+=2):(t=s,0===eo&&ao(ct)),t===s&&(62===r.charCodeAt(Js)?(t=">",Js++):(t=s,0===eo&&ao(lt)),t===s&&("<="===r.substr(Js,2)?(t="<=",Js+=2):(t=s,0===eo&&ao(ft)),t===s&&("<>"===r.substr(Js,2)?(t="<>",Js+=2):(t=s,0===eo&&ao(bt)),t===s&&(60===r.charCodeAt(Js)?(t="<",Js++):(t=s,0===eo&&ao(vt)),t===s&&(61===r.charCodeAt(Js)?(t="=",Js++):(t=s,0===eo&&ao(ot)),t===s&&("!="===r.substr(Js,2)?(t="!=",Js+=2):(t=s,0===eo&&ao(dt)))))))),t}function Oa(){var r,t,e,n,u,o;return r=Js,t=Js,(e=Qi())!==s&&(n=Zc())!==s&&(u=Ki())!==s?t=e=[e,n,u]:(Js=t,t=s),t!==s&&(t=(o=t)[0]+" "+o[2]),(r=t)===s&&(r=Ki()),r}function ga(){var r,t,e,n,u,o,a,i;if(r=Js,(t=Ua())!==s){for(e=[],n=Js,(u=Zc())!==s&&(o=xa())!==s&&(a=Zc())!==s&&(i=Ua())!==s?n=u=[u,o,a,i]:(Js=n,n=s);n!==s;)e.push(n),n=Js,(u=Zc())!==s&&(o=xa())!==s&&(a=Zc())!==s&&(i=Ua())!==s?n=u=[u,o,a,i]:(Js=n,n=s);e!==s?(r=t=at(t,e)):(Js=r,r=s);}else Js=r,r=s;return r}function xa(){var t;return 43===r.charCodeAt(Js)?(t="+",Js++):(t=s,0===eo&&ao(yt)),t===s&&(45===r.charCodeAt(Js)?(t="-",Js++):(t=s,0===eo&&ao(Tt))),t}function Ua(){var r,t,e,n,u,o,a,i;if(r=Js,(t=Da())!==s){for(e=[],n=Js,(u=Zc())!==s&&(o=Ma())!==s&&(a=Zc())!==s&&(i=Da())!==s?n=u=[u,o,a,i]:(Js=n,n=s);n!==s;)e.push(n),n=Js,(u=Zc())!==s&&(o=Ma())!==s&&(a=Zc())!==s&&(i=Da())!==s?n=u=[u,o,a,i]:(Js=n,n=s);e!==s?(r=t=Al(t,e)):(Js=r,r=s);}else Js=r,r=s;return r}function Ma(){var t;return 42===r.charCodeAt(Js)?(t="*",Js++):(t=s,0===eo&&ao(mt)),t===s&&(47===r.charCodeAt(Js)?(t="/",Js++):(t=s,0===eo&&ao(St)),t===s&&(37===r.charCodeAt(Js)?(t="%",Js++):(t=s,0===eo&&ao(It)))),t}function Da(){var t,e,n,u;return (t=function(){var t,e,n,u,o,a,i,c;t=Js,(e=ti())===s&&(e=Za())===s&&(e=za())===s&&(e=ri())===s&&(e=Aa())===s&&(e=ha())===s&&(e=$a())===s&&(e=Va());e!==s&&gc()!==s&&(n=dl())!==s&&Zc()!==s?((u=jo())===s&&(u=null),u!==s?(t=e={as:u,type:"cast",expr:e,symbol:"::",target:n}):(Js=t,t=s)):(Js=t,t=s);t===s&&(t=Js,(e=sc())!==s&&Zc()!==s&&(n=Yc())!==s&&Zc()!==s&&(u=ma())!==s&&Zc()!==s&&xi()!==s&&Zc()!==s&&(o=dl())!==s&&Zc()!==s&&(a=Bc())!==s?(e=function(r,t){return {type:"cast",expr:r,symbol:"as",target:t}}(u,o),t=e):(Js=t,t=s),t===s&&(t=Js,(e=sc())!==s&&Zc()!==s&&(n=Yc())!==s&&Zc()!==s&&(u=ma())!==s&&Zc()!==s&&xi()!==s&&Zc()!==s&&(o=cc())!==s&&Zc()!==s&&(a=Yc())!==s&&Zc()!==s&&(i=fi())!==s&&Zc()!==s&&Bc()!==s&&Zc()!==s&&(c=Bc())!==s?(e=function(r,t){return {type:"cast",expr:r,symbol:"as",target:{dataType:"DECIMAL("+t+")"}}}(u,i),t=e):(Js=t,t=s),t===s&&(t=Js,(e=sc())!==s&&Zc()!==s&&(n=Yc())!==s&&Zc()!==s&&(u=ma())!==s&&Zc()!==s&&xi()!==s&&Zc()!==s&&(o=cc())!==s&&Zc()!==s&&(a=Yc())!==s&&Zc()!==s&&(i=fi())!==s&&Zc()!==s&&Hc()!==s&&Zc()!==s&&(c=fi())!==s&&Zc()!==s&&Bc()!==s&&Zc()!==s&&Bc()!==s?(e=function(r,t,e){return {type:"cast",expr:r,symbol:"as",target:{dataType:"DECIMAL("+t+", "+e+")"}}}(u,i,c),t=e):(Js=t,t=s),t===s&&(t=Js,(e=sc())!==s&&Zc()!==s&&(n=Yc())!==s&&Zc()!==s&&(u=ma())!==s&&Zc()!==s&&xi()!==s&&Zc()!==s&&(o=function(){var t;(t=function(){var t,e,n,u;t=Js,"signed"===r.substr(Js,6).toLowerCase()?(e=r.substr(Js,6),Js+=6):(e=s,0===eo&&ao(_u));e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="SIGNED"):(Js=t,t=s)):(Js=t,t=s);return t}())===s&&(t=lc());return t}())!==s&&Zc()!==s?((a=bc())===s&&(a=null),a!==s&&Zc()!==s&&(i=Bc())!==s?(e=function(r,t,e){return {type:"cast",expr:r,symbol:"as",target:{dataType:t+(e?" "+e:"")}}}(u,o,a),t=e):(Js=t,t=s)):(Js=t,t=s)))));return t}())===s&&(t=ti())===s&&(t=Za())===s&&(t=za())===s&&(t=ri())===s&&(t=Aa())===s&&(t=ha())===s&&(t=$a())===s&&(t=Va())===s&&(t=Js,Yc()!==s&&(e=Zc())!==s&&(n=Sa())!==s&&Zc()!==s&&Bc()!==s?((u=n).parentheses=!0,t=u):(Js=t,t=s),t===s&&(t=bl())===s&&(t=Js,Zc()!==s?(36===r.charCodeAt(Js)?(e="$",Js++):(e=s,0===eo&&ao(Nt)),e!==s&&(n=ci())!==s?(t={type:"origin",value:"$"+n.value}):(Js=t,t=s)):(Js=t,t=s))),t}function ka(){var t,e,n,u,o,a;if(t=Js,"e"===r.substr(Js,1).toLowerCase()?(e=r.charAt(Js),Js++):(e=s,0===eo&&ao(Rt)),e!==s)if(39===r.charCodeAt(Js)?(n="'",Js++):(n=s,0===eo&&ao(Rr)),n!==s)if(Zc()!==s){for(u=[],o=ai();o!==s;)u.push(o),o=ai();u!==s&&(o=Zc())!==s?(39===r.charCodeAt(Js)?(a="'",Js++):(a=s,0===eo&&ao(Rr)),a!==s?(t=e={type:"origin",value:`E'${u.join("")}'`}):(Js=t,t=s)):(Js=t,t=s);}else Js=t,t=s;else Js=t,t=s;else Js=t,t=s;return t}function $a(){var t,e,n,u,o,a,i,c,l,f;return (t=ka())===s&&(t=Js,(e=Pa())!==s&&(n=Zc())!==s&&(u=Gc())!==s&&(o=Zc())!==s&&(a=jc())!==s?(f=e,Nl.add(`select::${f}::(.*)`),t=e={type:"column_ref",table:f,column:"*"}):(Js=t,t=s),t===s&&(t=Js,e=Js,(n=Pa())!==s&&(u=Zc())!==s&&(o=Gc())!==s?e=n=[n,u,o]:(Js=e,e=s),e===s&&(e=null),e!==s&&(n=Zc())!==s&&(u=ja())!==s&&(o=Zc())!==s?((a=function(){var t;"->>"===r.substr(Js,3)?(t="->>",Js+=3):(t=s,0===eo&&ao(Gs));return t}())===s&&(a=function(){var t;"->"===r.substr(Js,2)?(t="->",Js+=2):(t=s,0===eo&&ao(Ps));return t}()),a!==s&&(i=Zc())!==s?((c=si())===s&&(c=ci()),c!==s?(t=e=function(r,t,e,n){const u=r&&r[0]||null;return Nl.add(`select::${u}::${t}`),{type:"column_ref",table:u,column:t,arrow:e,property:n}}(e,u,a,c)):(Js=t,t=s)):(Js=t,t=s)):(Js=t,t=s),t===s&&(t=Js,(e=Pa())!==s?(n=Js,(u=Zc())!==s&&(o=Gc())!==s&&(a=Zc())!==s&&(i=Pa())!==s?n=u=[u,o,a,i]:(Js=n,n=s),n!==s?(u=Js,(o=Zc())!==s&&(a=Gc())!==s&&(i=Zc())!==s&&(c=ja())!==s?u=o=[o,a,i,c]:(Js=u,u=s),u!==s?(t=e=function(r,t,e){return Nl.add(`select::${r}.${t[3]}::${e[3]}`),{type:"column_ref",schema:r,table:t[3],column:e[3]}}(e,n,u)):(Js=t,t=s)):(Js=t,t=s)):(Js=t,t=s),t===s&&(t=Js,(e=Pa())!==s&&(n=Zc())!==s&&(u=Gc())!==s&&(o=Zc())!==s&&(a=ja())!==s?(t=e=function(r,t){return Nl.add(`select::${r}::${t}`),{type:"column_ref",table:r,column:t}}(e,a)):(Js=t,t=s),t===s&&(t=Js,(e=ja())!==s&&(l=e,Nl.add("select::null::"+l),e={type:"column_ref",table:null,column:l}),t=e))))),t}function Fa(){var r,t,e,n,u,o,a,i;if(r=Js,(t=ja())!==s){for(e=[],n=Js,(u=Zc())!==s&&(o=Hc())!==s&&(a=Zc())!==s&&(i=ja())!==s?n=u=[u,o,a,i]:(Js=n,n=s);n!==s;)e.push(n),n=Js,(u=Zc())!==s&&(o=Hc())!==s&&(a=Zc())!==s&&(i=ja())!==s?n=u=[u,o,a,i]:(Js=n,n=s);e!==s?(r=t=Xr(t,e)):(Js=r,r=s);}else Js=r,r=s;return r}function Pa(){var r,t;return r=Js,(t=Ya())!==s?((_t(t)?s:void 0)!==s?(r=t=t):(Js=r,r=s)):(Js=r,r=s),r===s&&(r=Js,(t=Ha())!==s&&(t=t),r=t),r}function Ga(){var r,t,e;return r=Js,(t=Ya())!==s?((function(r){if(!0===Cl[r.toUpperCase()])throw new Error("Error: "+JSON.stringify(r)+" is a reserved word, can not as alias clause");return !1}(t)?s:void 0)!==s&&Zc()!==s&&Yc()!==s&&Zc()!==s&&(e=Fa())!==s&&Zc()!==s&&Bc()!==s?(r=t=`${t}(${e.join(", ")})`):(Js=r,r=s)):(Js=r,r=s),r===s&&(r=Js,(t=Ya())!==s?((function(r){if(!0===Cl[r.toUpperCase()])throw new Error("Error: "+JSON.stringify(r)+" is a reserved word, can not as alias clause");return !1}(t)?s:void 0)!==s?(r=t=t):(Js=r,r=s)):(Js=r,r=s),r===s&&(r=Js,(t=Ha())!==s&&(t=t),r=t)),r}function Ha(){var t;return (t=function(){var t,e,n,u;t=Js,34===r.charCodeAt(Js)?(e='"',Js++):(e=s,0===eo&&ao(Ot));if(e!==s){if(n=[],gt.test(r.charAt(Js))?(u=r.charAt(Js),Js++):(u=s,0===eo&&ao(xt)),u!==s)for(;u!==s;)n.push(u),gt.test(r.charAt(Js))?(u=r.charAt(Js),Js++):(u=s,0===eo&&ao(xt));else n=s;n!==s?(34===r.charCodeAt(Js)?(u='"',Js++):(u=s,0===eo&&ao(Ot)),u!==s?(e=Ut(n),t=e):(Js=t,t=s)):(Js=t,t=s);}else Js=t,t=s;return t}())===s&&(t=function(){var t,e,n,u;t=Js,39===r.charCodeAt(Js)?(e="'",Js++):(e=s,0===eo&&ao(Rr));if(e!==s){if(n=[],Mt.test(r.charAt(Js))?(u=r.charAt(Js),Js++):(u=s,0===eo&&ao(Dt)),u!==s)for(;u!==s;)n.push(u),Mt.test(r.charAt(Js))?(u=r.charAt(Js),Js++):(u=s,0===eo&&ao(Dt));else n=s;n!==s?(39===r.charCodeAt(Js)?(u="'",Js++):(u=s,0===eo&&ao(Rr)),u!==s?(e=Ut(n),t=e):(Js=t,t=s)):(Js=t,t=s);}else Js=t,t=s;return t}())===s&&(t=function(){var t,e,n,u;t=Js,96===r.charCodeAt(Js)?(e="`",Js++):(e=s,0===eo&&ao(kt));if(e!==s){if(n=[],$t.test(r.charAt(Js))?(u=r.charAt(Js),Js++):(u=s,0===eo&&ao(Ft)),u!==s)for(;u!==s;)n.push(u),$t.test(r.charAt(Js))?(u=r.charAt(Js),Js++):(u=s,0===eo&&ao(Ft));else n=s;n!==s?(96===r.charCodeAt(Js)?(u="`",Js++):(u=s,0===eo&&ao(kt)),u!==s?(e=Ut(n),t=e):(Js=t,t=s)):(Js=t,t=s);}else Js=t,t=s;return t}()),t}function ja(){var r,t;return r=Js,(t=function(){var r,t,e,n;if(r=Js,(t=Ba())!==s){for(e=[],n=Wa();n!==s;)e.push(n),n=Wa();e!==s?(t=t+e.join(""),r=t):(Js=r,r=s);}else Js=r,r=s;return r}())!==s?((_t(t)?s:void 0)!==s?(r=t=t):(Js=r,r=s)):(Js=r,r=s),r===s&&(r=Ha()),r}function Ya(){var r,t,e,n;if(r=Js,(t=Ba())!==s){for(e=[],n=Xa();n!==s;)e.push(n),n=Xa();e!==s?(r=t=t+e.join("")):(Js=r,r=s);}else Js=r,r=s;return r}function Ba(){var t;return Pt.test(r.charAt(Js))?(t=r.charAt(Js),Js++):(t=s,0===eo&&ao(Gt)),t}function Xa(){var t;return Ht.test(r.charAt(Js))?(t=r.charAt(Js),Js++):(t=s,0===eo&&ao(jt)),t}function Wa(){var t;return Yt.test(r.charAt(Js))?(t=r.charAt(Js),Js++):(t=s,0===eo&&ao(Bt)),t}function Va(){var e,n,u;return e=Js,58===r.charCodeAt(Js)?(n=":",Js++):(n=s,0===eo&&ao(Xt)),n!==s&&(u=Ya())!==s?e=n=[n,u]:(Js=e,e=s),e!==s&&(e={type:"param",value:e[1]}),e}function Ka(){var r,t,e;return r=Js,Mi()!==s&&Zc()!==s&&hi()!==s&&Zc()!==s&&(t=_c())!==s&&Zc()!==s&&Yc()!==s&&Zc()!==s?((e=Ea())===s&&(e=null),e!==s&&Zc()!==s&&Bc()!==s?(r={type:"on update",keyword:t,parentheses:!0,expr:e}):(Js=r,r=s)):(Js=r,r=s),r===s&&(r=Js,Mi()!==s&&Zc()!==s&&hi()!==s&&Zc()!==s&&(t=_c())!==s?(r=function(r){return {type:"on update",keyword:r}}(t)):(Js=r,r=s)),r}function qa(){var t,e,n,u,o;return t=Js,"over"===r.substr(Js,4).toLowerCase()?(e=r.substr(Js,4),Js+=4):(e=s,0===eo&&ao(Wt)),e!==s&&Zc()!==s&&(n=ea())!==s?(t=e={type:"window",as_window_specification:n}):(Js=t,t=s),t===s&&(t=Js,"over"===r.substr(Js,4).toLowerCase()?(e=r.substr(Js,4),Js+=4):(e=s,0===eo&&ao(Wt)),e!==s&&Zc()!==s&&(n=Yc())!==s&&Zc()!==s?((u=aa())===s&&(u=null),u!==s&&Zc()!==s?((o=ia())===s&&(o=null),o!==s&&Zc()!==s&&Bc()!==s?(t=e=function(r,t){return {partitionby:r,orderby:t}}(u,o)):(Js=t,t=s)):(Js=t,t=s)):(Js=t,t=s),t===s&&(t=Ka())),t}function Za(){var t;return (t=function(){var t,e,n,u,o,a,i,c,l;t=Js,(e=function(){var t,e,n,u;t=Js,"count"===r.substr(Js,5).toLowerCase()?(e=r.substr(Js,5),Js+=5):(e=s,0===eo&&ao(cu));e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="COUNT"):(Js=t,t=s)):(Js=t,t=s);return t}())===s&&(e=function(){var t,e,n,u;t=Js,"group_concat"===r.substr(Js,12).toLowerCase()?(e=r.substr(Js,12),Js+=12):(e=s,0===eo&&ao(lu));e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="GROUP_CONCAT"):(Js=t,t=s)):(Js=t,t=s);return t}());e!==s&&Zc()!==s&&Yc()!==s&&Zc()!==s&&(n=function(){var t,e;t=Js,(e=function(){var e;42===r.charCodeAt(Js)?(e="*",Js++):(e=s,0===eo&&ao(mt));e!==s&&(e={type:"star",value:"*"});return e}())!==s&&(e={expr:e});(t=e)===s&&(t=Qa());return t}())!==s&&Zc()!==s&&(u=Bc())!==s&&Zc()!==s?((o=qa())===s&&(o=null),o!==s?(e=function(r,t,e){return {type:"aggr_func",name:r,args:t,over:e}}(e,n,o),t=e):(Js=t,t=s)):(Js=t,t=s);t===s&&(t=Js,"percentile_cont"===r.substr(Js,15).toLowerCase()?(e=r.substr(Js,15),Js+=15):(e=s,0===eo&&ao(ne)),e===s&&("percentile_disc"===r.substr(Js,15).toLowerCase()?(e=r.substr(Js,15),Js+=15):(e=s,0===eo&&ao(ue))),e!==s&&Zc()!==s&&Yc()!==s&&Zc()!==s?((n=ci())===s&&(n=ei()),n!==s&&Zc()!==s&&(u=Bc())!==s&&Zc()!==s?("within"===r.substr(Js,6).toLowerCase()?(o=r.substr(Js,6),Js+=6):(o=s,0===eo&&ao(se)),o!==s&&Zc()!==s&&Hi()!==s&&Zc()!==s&&(a=Yc())!==s&&Zc()!==s&&(i=ia())!==s&&Zc()!==s&&(c=Bc())!==s&&Zc()!==s?((l=qa())===s&&(l=null),l!==s?(e=function(r,t,e,n){return {type:"aggr_func",name:r.toUpperCase(),args:{expr:t},within_group_orderby:e,over:n}}(e,n,i,l),t=e):(Js=t,t=s)):(Js=t,t=s)):(Js=t,t=s)):(Js=t,t=s),t===s&&(t=Js,"mode"===r.substr(Js,4).toLowerCase()?(e=r.substr(Js,4),Js+=4):(e=s,0===eo&&ao(oe)),e!==s&&Zc()!==s&&Yc()!==s&&Zc()!==s&&(n=Bc())!==s&&Zc()!==s?("within"===r.substr(Js,6).toLowerCase()?(u=r.substr(Js,6),Js+=6):(u=s,0===eo&&ao(se)),u!==s&&Zc()!==s&&(o=Hi())!==s&&Zc()!==s&&Yc()!==s&&Zc()!==s&&(a=ia())!==s&&Zc()!==s&&(i=Bc())!==s&&Zc()!==s?((c=qa())===s&&(c=null),c!==s?(e=function(r,t,e){return {type:"aggr_func",name:r.toUpperCase(),args:{expr:{}},within_group_orderby:t,over:e}}(e,a,c),t=e):(Js=t,t=s)):(Js=t,t=s)):(Js=t,t=s)));return t}())===s&&(t=function(){var t,e,n,u;t=Js,(e=function(){var t;(t=function(){var t,e,n,u;t=Js,"sum"===r.substr(Js,3).toLowerCase()?(e=r.substr(Js,3),Js+=3):(e=s,0===eo&&ao(vu));e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="SUM"):(Js=t,t=s)):(Js=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Js,"max"===r.substr(Js,3).toLowerCase()?(e=r.substr(Js,3),Js+=3):(e=s,0===eo&&ao(fu));e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="MAX"):(Js=t,t=s)):(Js=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Js,"min"===r.substr(Js,3).toLowerCase()?(e=r.substr(Js,3),Js+=3):(e=s,0===eo&&ao(bu));e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="MIN"):(Js=t,t=s)):(Js=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Js,"avg"===r.substr(Js,3).toLowerCase()?(e=r.substr(Js,3),Js+=3):(e=s,0===eo&&ao(du));e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="AVG"):(Js=t,t=s)):(Js=t,t=s);return t}());return t}())!==s&&Zc()!==s&&Yc()!==s&&Zc()!==s&&(n=ga())!==s&&Zc()!==s&&Bc()!==s&&Zc()!==s?((u=qa())===s&&(u=null),u!==s?(e=function(r,t,e){return {type:"aggr_func",name:r,args:{expr:t},over:e}}(e,n,u),t=e):(Js=t,t=s)):(Js=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Js,(e=function(){var t,e,n,u;t=Js,"array_agg"===r.substr(Js,9).toLowerCase()?(e=r.substr(Js,9),Js+=9):(e=s,0===eo&&ao(iu));e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="ARRAY_AGG"):(Js=t,t=s)):(Js=t,t=s);return t}())!==s&&Zc()!==s&&Yc()!==s&&Zc()!==s&&(n=Qa())!==s&&Zc()!==s?((u=ia())===s&&(u=null),u!==s&&Zc()!==s&&Bc()!==s?(t=e={type:"aggr_func",name:e,args:n,orderby:u}):(Js=t,t=s)):(Js=t,t=s);return t}()),t}function za(){var t;return (t=function(){var t,e,n;t=Js,(e=function(){var t;"row_number"===r.substr(Js,10).toLowerCase()?(t=r.substr(Js,10),Js+=10):(t=s,0===eo&&ao(qt));t===s&&("dense_rank"===r.substr(Js,10).toLowerCase()?(t=r.substr(Js,10),Js+=10):(t=s,0===eo&&ao(Zt)),t===s&&("rank"===r.substr(Js,4).toLowerCase()?(t=r.substr(Js,4),Js+=4):(t=s,0===eo&&ao(zt))));return t}())!==s&&Zc()!==s&&Yc()!==s&&Zc()!==s&&Bc()!==s&&Zc()!==s&&(n=qa())!==s?(t=e={type:"window_func",name:e,over:n}):(Js=t,t=s);return t}())===s&&(t=function(){var t,e,n,u,o;t=Js,(e=function(){var t;"lag"===r.substr(Js,3).toLowerCase()?(t=r.substr(Js,3),Js+=3):(t=s,0===eo&&ao(Jt));t===s&&("lead"===r.substr(Js,4).toLowerCase()?(t=r.substr(Js,4),Js+=4):(t=s,0===eo&&ao(Qt)),t===s&&("nth_value"===r.substr(Js,9).toLowerCase()?(t=r.substr(Js,9),Js+=9):(t=s,0===eo&&ao(re))));return t}())!==s&&Zc()!==s&&Yc()!==s&&Zc()!==s&&(n=Ea())!==s&&Zc()!==s&&Bc()!==s&&Zc()!==s?((u=Ja())===s&&(u=null),u!==s&&Zc()!==s&&(o=qa())!==s?(t=e={type:"window_func",name:e,args:n,over:o,consider_nulls:u||"RESPECT NULLS"}):(Js=t,t=s)):(Js=t,t=s);return t}())===s&&(t=function(){var t,e,n,u,o;t=Js,(e=function(){var t;"first_value"===r.substr(Js,11).toLowerCase()?(t=r.substr(Js,11),Js+=11):(t=s,0===eo&&ao(Vt));t===s&&("last_value"===r.substr(Js,10).toLowerCase()?(t=r.substr(Js,10),Js+=10):(t=s,0===eo&&ao(Kt)));return t}())!==s&&Zc()!==s&&Yc()!==s&&Zc()!==s&&(n=ma())!==s&&Zc()!==s?((u=Ja())===s&&(u=null),u!==s&&Zc()!==s&&Bc()!==s&&Zc()!==s&&(o=qa())!==s?(t=e={type:"window_func",name:e,args:{type:"expr_list",value:[n]},over:o,consider_nulls:u||"RESPECT NULLS"}):(Js=t,t=s)):(Js=t,t=s);return t}()),t}function Ja(){var t,e,n;return t=Js,"ignore"===r.substr(Js,6).toLowerCase()?(e=r.substr(Js,6),Js+=6):(e=s,0===eo&&ao(te)),e===s&&("respect"===r.substr(Js,7).toLowerCase()?(e=r.substr(Js,7),Js+=7):(e=s,0===eo&&ao(ee))),e!==s&&Zc()!==s?("nulls"===r.substr(Js,5).toLowerCase()?(n=r.substr(Js,5),Js+=5):(n=s,0===eo&&ao(y)),n!==s?(t=e=e.toUpperCase()+" NULLS"):(Js=t,t=s)):(Js=t,t=s),t}function Qa(){var r,t,e,n,u;return r=Js,(t=Wi())===s&&(t=null),t!==s&&Zc()!==s&&(e=$a())!==s?(r=t={distinct:t,expr:e}):(Js=r,r=s),r===s&&(r=Js,(t=Wi())===s&&(t=null),t!==s&&Zc()!==s&&(e=Yc())!==s&&Zc()!==s&&(n=ma())!==s&&Zc()!==s&&Bc()!==s&&Zc()!==s?((u=ia())===s&&(u=null),u!==s?(r=t=function(r,t,e){return t.parentheses=!0,{distinct:r,expr:t,orderby:e}}(t,n,u)):(Js=r,r=s)):(Js=r,r=s)),r}function ri(){var t,e,n,u,o;return t=Js,(e=cl())!==s&&Zc()!==s&&(n=Yc())!==s&&Zc()!==s?((u=Ea())===s&&(u=null),u!==s&&Zc()!==s&&Bc()!==s?(t=e={type:"function",name:e,args:u||{type:"expr_list",value:[]}}):(Js=t,t=s)):(Js=t,t=s),t===s&&(t=Js,(e=function(){var t;(t=function(){var t,e,n,u;t=Js,"current_date"===r.substr(Js,12).toLowerCase()?(e=r.substr(Js,12),Js+=12):(e=s,0===eo&&ao(es));e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="CURRENT_DATE"):(Js=t,t=s)):(Js=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Js,"current_time"===r.substr(Js,12).toLowerCase()?(e=r.substr(Js,12),Js+=12):(e=s,0===eo&&ao(us));e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="CURRENT_TIME"):(Js=t,t=s)):(Js=t,t=s);return t}())===s&&(t=_c())===s&&(t=function(){var t,e,n,u;t=Js,"current_user"===r.substr(Js,12).toLowerCase()?(e=r.substr(Js,12),Js+=12):(e=s,0===eo&&ao(os));e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="CURRENT_USER"):(Js=t,t=s)):(Js=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Js,"user"===r.substr(Js,4).toLowerCase()?(e=r.substr(Js,4),Js+=4):(e=s,0===eo&&ao(rs));e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="USER"):(Js=t,t=s)):(Js=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Js,"session_user"===r.substr(Js,12).toLowerCase()?(e=r.substr(Js,12),Js+=12):(e=s,0===eo&&ao(as));e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="SESSION_USER"):(Js=t,t=s)):(Js=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Js,"system_user"===r.substr(Js,11).toLowerCase()?(e=r.substr(Js,11),Js+=11):(e=s,0===eo&&ao(is));e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="SYSTEM_USER"):(Js=t,t=s)):(Js=t,t=s);return t}());return t}())!==s&&Zc()!==s&&(n=Yc())!==s&&Zc()!==s?((u=Ea())===s&&(u=null),u!==s&&Zc()!==s&&Bc()!==s&&Zc()!==s?((o=qa())===s&&(o=null),o!==s?(t=e=function(r,t,e){return {type:"function",name:r,args:t||{type:"expr_list",value:[]},over:e}}(e,u,o)):(Js=t,t=s)):(Js=t,t=s)):(Js=t,t=s),t===s&&(t=function(){var t,e,n,u,o;t=Js,(e=function(){var t,e,n,u;t=Js,"extract"===r.substr(Js,7).toLowerCase()?(e=r.substr(Js,7),Js+=7):(e=s,0===eo&&ao(Lu));e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="EXTRACT"):(Js=t,t=s)):(Js=t,t=s);return t}())!==s&&Zc()!==s&&Yc()!==s&&Zc()!==s&&(n=function(){var t,e;"century"===r.substr(Js,7).toLowerCase()?(t=r.substr(Js,7),Js+=7):(t=s,0===eo&&ao(ae));t===s&&("day"===r.substr(Js,3).toLowerCase()?(t=r.substr(Js,3),Js+=3):(t=s,0===eo&&ao(ie)),t===s&&("decade"===r.substr(Js,6).toLowerCase()?(t=r.substr(Js,6),Js+=6):(t=s,0===eo&&ao(ce)),t===s&&("dow"===r.substr(Js,3).toLowerCase()?(t=r.substr(Js,3),Js+=3):(t=s,0===eo&&ao(le)),t===s&&("doy"===r.substr(Js,3).toLowerCase()?(t=r.substr(Js,3),Js+=3):(t=s,0===eo&&ao(fe)),t===s&&("epoch"===r.substr(Js,5).toLowerCase()?(t=r.substr(Js,5),Js+=5):(t=s,0===eo&&ao(be)),t===s&&("hour"===r.substr(Js,4).toLowerCase()?(t=r.substr(Js,4),Js+=4):(t=s,0===eo&&ao(ve)),t===s&&("isodow"===r.substr(Js,6).toLowerCase()?(t=r.substr(Js,6),Js+=6):(t=s,0===eo&&ao(de)),t===s&&("isoyear"===r.substr(Js,7).toLowerCase()?(t=r.substr(Js,7),Js+=7):(t=s,0===eo&&ao(Le)),t===s&&("microseconds"===r.substr(Js,12).toLowerCase()?(t=r.substr(Js,12),Js+=12):(t=s,0===eo&&ao(Ce)),t===s&&("millennium"===r.substr(Js,10).toLowerCase()?(t=r.substr(Js,10),Js+=10):(t=s,0===eo&&ao(pe)),t===s&&("milliseconds"===r.substr(Js,12).toLowerCase()?(t=r.substr(Js,12),Js+=12):(t=s,0===eo&&ao(we)),t===s&&("minute"===r.substr(Js,6).toLowerCase()?(t=r.substr(Js,6),Js+=6):(t=s,0===eo&&ao(Ee)),t===s&&("month"===r.substr(Js,5).toLowerCase()?(t=r.substr(Js,5),Js+=5):(t=s,0===eo&&ao(he)),t===s&&("quarter"===r.substr(Js,7).toLowerCase()?(t=r.substr(Js,7),Js+=7):(t=s,0===eo&&ao(Ae)),t===s&&("second"===r.substr(Js,6).toLowerCase()?(t=r.substr(Js,6),Js+=6):(t=s,0===eo&&ao(ye)),t===s&&("timezone"===r.substr(Js,8).toLowerCase()?(t=r.substr(Js,8),Js+=8):(t=s,0===eo&&ao(Te)),t===s&&("timezone_hour"===r.substr(Js,13).toLowerCase()?(t=r.substr(Js,13),Js+=13):(t=s,0===eo&&ao(me)),t===s&&("timezone_minute"===r.substr(Js,15).toLowerCase()?(t=r.substr(Js,15),Js+=15):(t=s,0===eo&&ao(Se)),t===s&&("week"===r.substr(Js,4).toLowerCase()?(t=r.substr(Js,4),Js+=4):(t=s,0===eo&&ao(Ie)),t===s&&(t=Js,"year"===r.substr(Js,4).toLowerCase()?(e=r.substr(Js,4),Js+=4):(e=s,0===eo&&ao(Ne)),e!==s&&(e=f),t=e))))))))))))))))))));return t}())!==s&&Zc()!==s&&Oi()!==s&&Zc()!==s?((u=Ic())===s&&(u=Rc())===s&&(u=Sc())===s&&(u=yc()),u===s&&(u=null),u!==s&&Zc()!==s&&(o=ma())!==s&&Zc()!==s&&Bc()!==s?(e=function(r,t,e,n){return {type:r.toLowerCase(),args:{field:t,cast_type:e,source:n}}}(e,n,u,o),t=e):(Js=t,t=s)):(Js=t,t=s);return t}())===s&&(t=Js,(e=_c())!==s&&Zc()!==s?((n=Ka())===s&&(n=null),n!==s?(t=e=function(r,t){return {type:"function",name:r,over:t}}(e,n)):(Js=t,t=s)):(Js=t,t=s))),t}function ti(){var t;return (t=si())===s&&(t=ci())===s&&(t=function(){var t,e;t=Js,(e=function(){var t,e,n,u;t=Js,"true"===r.substr(Js,4).toLowerCase()?(e=r.substr(Js,4),Js+=4):(e=s,0===eo&&ao(sn));e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?t=e=[e,n]:(Js=t,t=s)):(Js=t,t=s);return t}())!==s&&(e={type:"bool",value:!0});(t=e)===s&&(t=Js,(e=function(){var t,e,n,u;t=Js,"false"===r.substr(Js,5).toLowerCase()?(e=r.substr(Js,5),Js+=5):(e=s,0===eo&&ao(an));e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?t=e=[e,n]:(Js=t,t=s)):(Js=t,t=s);return t}())!==s&&(e={type:"bool",value:!1}),t=e);return t}())===s&&(t=ni())===s&&(t=function(){var t,e,n,u,o,a;t=Js,(e=Sc())===s&&(e=yc())===s&&(e=Ic())===s&&(e=Tc());if(e!==s)if(Zc()!==s){if(n=Js,39===r.charCodeAt(Js)?(u="'",Js++):(u=s,0===eo&&ao(Rr)),u!==s){for(o=[],a=ai();a!==s;)o.push(a),a=ai();o!==s?(39===r.charCodeAt(Js)?(a="'",Js++):(a=s,0===eo&&ao(Rr)),a!==s?n=u=[u,o,a]:(Js=n,n=s)):(Js=n,n=s);}else Js=n,n=s;n!==s?(i=n,e={type:e.toLowerCase(),value:i[1].join("")},t=e):(Js=t,t=s);}else Js=t,t=s;else Js=t,t=s;var i;if(t===s)if(t=Js,(e=Sc())===s&&(e=yc())===s&&(e=Ic())===s&&(e=Tc()),e!==s)if(Zc()!==s){if(n=Js,34===r.charCodeAt(Js)?(u='"',Js++):(u=s,0===eo&&ao(Ot)),u!==s){for(o=[],a=oi();a!==s;)o.push(a),a=oi();o!==s?(34===r.charCodeAt(Js)?(a='"',Js++):(a=s,0===eo&&ao(Ot)),a!==s?n=u=[u,o,a]:(Js=n,n=s)):(Js=n,n=s);}else Js=n,n=s;n!==s?(e=function(r,t){return {type:r.toLowerCase(),value:t[1].join("")}}(e,n),t=e):(Js=t,t=s);}else Js=t,t=s;else Js=t,t=s;return t}())===s&&(t=ei()),t}function ei(){var t,e;return t=Js,function(){var t,e,n,u;t=Js,"array"===r.substr(Js,5).toLowerCase()?(e=r.substr(Js,5),Js+=5):(e=s,0===eo&&ao(au));e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="ARRAY"):(Js=t,t=s)):(Js=t,t=s);return t}()!==s&&Zc()!==s&&Xc()!==s&&Zc()!==s?((e=Ea())===s&&(e=null),e!==s&&Zc()!==s&&Wc()!==s?(t={expr_list:e||{type:"origin",value:""},type:"array",keyword:"array",brackets:!0}):(Js=t,t=s)):(Js=t,t=s),t}function ni(){var e;return (e=function(){var t,e,n,u;t=Js,"null"===r.substr(Js,4).toLowerCase()?(e=r.substr(Js,4),Js+=4):(e=s,0===eo&&ao(nn));e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?t=e=[e,n]:(Js=t,t=s)):(Js=t,t=s);return t}())!==s&&(e={type:"null",value:null}),e}function ui(){var e;return (e=function(){var t,e,n,u;t=Js,"not null"===r.substr(Js,8).toLowerCase()?(e=r.substr(Js,8),Js+=8):(e=s,0===eo&&ao(un));e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?t=e=[e,n]:(Js=t,t=s)):(Js=t,t=s);return t}())!==s&&(e={type:"not null",value:"not null"}),e}function si(){var t,e,n,u,o,a,i,c,l;if(t=Js,e=Js,39===r.charCodeAt(Js)?(n="'",Js++):(n=s,0===eo&&ao(Rr)),n!==s){for(u=[],o=ai();o!==s;)u.push(o),o=ai();u!==s?(39===r.charCodeAt(Js)?(o="'",Js++):(o=s,0===eo&&ao(Rr)),o!==s?e=n=[n,u,o]:(Js=e,e=s)):(Js=e,e=s);}else Js=e,e=s;if(e!==s){if(n=[],Re.test(r.charAt(Js))?(u=r.charAt(Js),Js++):(u=s,0===eo&&ao(_e)),u!==s)for(;u!==s;)n.push(u),Re.test(r.charAt(Js))?(u=r.charAt(Js),Js++):(u=s,0===eo&&ao(_e));else n=s;if(n!==s)if((u=Zc())!==s){if(o=Js,39===r.charCodeAt(Js)?(a="'",Js++):(a=s,0===eo&&ao(Rr)),a!==s){for(i=[],c=ai();c!==s;)i.push(c),c=ai();i!==s?(39===r.charCodeAt(Js)?(c="'",Js++):(c=s,0===eo&&ao(Rr)),c!==s?o=a=[a,i,c]:(Js=o,o=s)):(Js=o,o=s);}else Js=o,o=s;o!==s?(l=o,t=e={type:"single_quote_string",value:`${e[1].join("")}${l[1].join("")}`}):(Js=t,t=s);}else Js=t,t=s;else Js=t,t=s;}else Js=t,t=s;if(t===s){if(t=Js,e=Js,39===r.charCodeAt(Js)?(n="'",Js++):(n=s,0===eo&&ao(Rr)),n!==s){for(u=[],o=ai();o!==s;)u.push(o),o=ai();u!==s?(39===r.charCodeAt(Js)?(o="'",Js++):(o=s,0===eo&&ao(Rr)),o!==s?e=n=[n,u,o]:(Js=e,e=s)):(Js=e,e=s);}else Js=e,e=s;if(e!==s&&(e=function(r){return {type:"single_quote_string",value:r[1].join("")}}(e)),(t=e)===s){if(t=Js,e=Js,34===r.charCodeAt(Js)?(n='"',Js++):(n=s,0===eo&&ao(Ot)),n!==s){for(u=[],o=oi();o!==s;)u.push(o),o=oi();u!==s?(34===r.charCodeAt(Js)?(o='"',Js++):(o=s,0===eo&&ao(Ot)),o!==s?e=n=[n,u,o]:(Js=e,e=s)):(Js=e,e=s);}else Js=e,e=s;e!==s?(n=Js,eo++,u=Gc(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e=function(r){return {type:"double_quote_string",value:r[1].join("")}}(e)):(Js=t,t=s)):(Js=t,t=s);}}return t}function oi(){var t;return Oe.test(r.charAt(Js))?(t=r.charAt(Js),Js++):(t=s,0===eo&&ao(ge)),t===s&&(t=ii()),t}function ai(){var t;return xe.test(r.charAt(Js))?(t=r.charAt(Js),Js++):(t=s,0===eo&&ao(Ue)),t===s&&(t=ii()),t}function ii(){var t,e,n,u,o,a,i,c,l,f;return t=Js,"\\'"===r.substr(Js,2)?(e="\\'",Js+=2):(e=s,0===eo&&ao(Me)),e!==s&&(e="\\'"),(t=e)===s&&(t=Js,'\\"'===r.substr(Js,2)?(e='\\"',Js+=2):(e=s,0===eo&&ao(De)),e!==s&&(e='"'),(t=e)===s&&(t=Js,"\\\\"===r.substr(Js,2)?(e="\\\\",Js+=2):(e=s,0===eo&&ao(ke)),e!==s&&(e="\\"),(t=e)===s&&(t=Js,"\\/"===r.substr(Js,2)?(e="\\/",Js+=2):(e=s,0===eo&&ao($e)),e!==s&&(e="/"),(t=e)===s&&(t=Js,"\\b"===r.substr(Js,2)?(e="\\b",Js+=2):(e=s,0===eo&&ao(Fe)),e!==s&&(e="\b"),(t=e)===s&&(t=Js,"\\f"===r.substr(Js,2)?(e="\\f",Js+=2):(e=s,0===eo&&ao(Pe)),e!==s&&(e="\f"),(t=e)===s&&(t=Js,"\\n"===r.substr(Js,2)?(e="\\n",Js+=2):(e=s,0===eo&&ao(Ge)),e!==s&&(e="\n"),(t=e)===s&&(t=Js,"\\r"===r.substr(Js,2)?(e="\\r",Js+=2):(e=s,0===eo&&ao(He)),e!==s&&(e="\r"),(t=e)===s&&(t=Js,"\\t"===r.substr(Js,2)?(e="\\t",Js+=2):(e=s,0===eo&&ao(je)),e!==s&&(e="\t"),(t=e)===s&&(t=Js,"\\u"===r.substr(Js,2)?(e="\\u",Js+=2):(e=s,0===eo&&ao(Ye)),e!==s&&(n=Ci())!==s&&(u=Ci())!==s&&(o=Ci())!==s&&(a=Ci())!==s?(i=n,c=u,l=o,f=a,t=e=String.fromCharCode(parseInt("0x"+i+c+l+f))):(Js=t,t=s),t===s&&(t=Js,92===r.charCodeAt(Js)?(e="\\",Js++):(e=s,0===eo&&ao(Be)),e!==s&&(e="\\"),(t=e)===s&&(t=Js,"''"===r.substr(Js,2)?(e="''",Js+=2):(e=s,0===eo&&ao(Xe)),e!==s&&(e="''"),t=e))))))))))),t}function ci(){var t,e;return (t=li())!==s&&(t=(e=t)&&"bigint"===e.type?e:{type:"number",value:e}),t}function li(){var r,t,e,n;return r=Js,(t=fi())!==s&&(e=bi())!==s&&(n=vi())!==s?(r=t={type:"bigint",value:t+e+n}):(Js=r,r=s),r===s&&(r=Js,(t=fi())!==s&&(e=bi())!==s?(r=t=function(r,t){const e=r+t;return El(r)?{type:"bigint",value:e}:parseFloat(e)}(t,e)):(Js=r,r=s),r===s&&(r=Js,(t=fi())!==s&&(e=vi())!==s?(r=t=function(r,t){return {type:"bigint",value:r+t}}(t,e)):(Js=r,r=s),r===s&&(r=Js,(t=fi())!==s&&(t=function(r){return El(r)?{type:"bigint",value:r}:parseFloat(r)}(t)),r=t))),r}function fi(){var t,e,n;return (t=di())===s&&(t=Li())===s&&(t=Js,45===r.charCodeAt(Js)?(e="-",Js++):(e=s,0===eo&&ao(Tt)),e===s&&(43===r.charCodeAt(Js)?(e="+",Js++):(e=s,0===eo&&ao(yt))),e!==s&&(n=di())!==s?(t=e="-"+n):(Js=t,t=s),t===s&&(t=Js,45===r.charCodeAt(Js)?(e="-",Js++):(e=s,0===eo&&ao(Tt)),e===s&&(43===r.charCodeAt(Js)?(e="+",Js++):(e=s,0===eo&&ao(yt))),e!==s&&(n=Li())!==s?(t=e="-"+n):(Js=t,t=s))),t}function bi(){var t,e,n;return t=Js,46===r.charCodeAt(Js)?(e=".",Js++):(e=s,0===eo&&ao(Ke)),e!==s&&(n=di())!==s?(t=e="."+n):(Js=t,t=s),t}function vi(){var t,e,n;return t=Js,(e=function(){var t,e,n;t=Js,Qe.test(r.charAt(Js))?(e=r.charAt(Js),Js++):(e=s,0===eo&&ao(rn));e!==s?(tn.test(r.charAt(Js))?(n=r.charAt(Js),Js++):(n=s,0===eo&&ao(en)),n===s&&(n=null),n!==s?(t=e=e+(null!==(u=n)?u:"")):(Js=t,t=s)):(Js=t,t=s);var u;return t}())!==s&&(n=di())!==s?(t=e=e+n):(Js=t,t=s),t}function di(){var t,e;if(t=[],(e=Li())!==s)for(;e!==s;)t.push(e),e=Li();else t=s;return t!==s&&(t=t.join("")),t}function Li(){var t;return qe.test(r.charAt(Js))?(t=r.charAt(Js),Js++):(t=s,0===eo&&ao(Ze)),t}function Ci(){var t;return ze.test(r.charAt(Js))?(t=r.charAt(Js),Js++):(t=s,0===eo&&ao(Je)),t}function pi(){var t,e,n,u;return t=Js,"default"===r.substr(Js,7).toLowerCase()?(e=r.substr(Js,7),Js+=7):(e=s,0===eo&&ao(x)),e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?t=e=[e,n]:(Js=t,t=s)):(Js=t,t=s),t}function wi(){var t,e,n,u;return t=Js,"to"===r.substr(Js,2).toLowerCase()?(e=r.substr(Js,2),Js+=2):(e=s,0===eo&&ao(on)),e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?t=e=[e,n]:(Js=t,t=s)):(Js=t,t=s),t}function Ei(){var t,e,n,u;return t=Js,"drop"===r.substr(Js,4).toLowerCase()?(e=r.substr(Js,4),Js+=4):(e=s,0===eo&&ao(ln)),e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="DROP"):(Js=t,t=s)):(Js=t,t=s),t}function hi(){var t,e,n,u;return t=Js,"update"===r.substr(Js,6).toLowerCase()?(e=r.substr(Js,6),Js+=6):(e=s,0===eo&&ao(dn)),e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?t=e=[e,n]:(Js=t,t=s)):(Js=t,t=s),t}function Ai(){var t,e,n,u;return t=Js,"create"===r.substr(Js,6).toLowerCase()?(e=r.substr(Js,6),Js+=6):(e=s,0===eo&&ao(Ln)),e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?t=e=[e,n]:(Js=t,t=s)):(Js=t,t=s),t}function yi(){var t,e,n,u;return t=Js,"temporary"===r.substr(Js,9).toLowerCase()?(e=r.substr(Js,9),Js+=9):(e=s,0===eo&&ao(Cn)),e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="TEMPORARY"):(Js=t,t=s)):(Js=t,t=s),t}function Ti(){var t,e,n,u;return t=Js,"if not exists"===r.substr(Js,13).toLowerCase()?(e=r.substr(Js,13),Js+=13):(e=s,0===eo&&ao(wn)),e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?t=e=[e,n]:(Js=t,t=s)):(Js=t,t=s),t}function mi(){var t,e,n,u;return t=Js,"delete"===r.substr(Js,6).toLowerCase()?(e=r.substr(Js,6),Js+=6):(e=s,0===eo&&ao(En)),e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?t=e=[e,n]:(Js=t,t=s)):(Js=t,t=s),t}function Si(){var t,e,n,u;return t=Js,"insert"===r.substr(Js,6).toLowerCase()?(e=r.substr(Js,6),Js+=6):(e=s,0===eo&&ao(hn)),e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?t=e=[e,n]:(Js=t,t=s)):(Js=t,t=s),t}function Ii(){var t,e,n,u;return t=Js,"replace"===r.substr(Js,7).toLowerCase()?(e=r.substr(Js,7),Js+=7):(e=s,0===eo&&ao(yn)),e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?t=e=[e,n]:(Js=t,t=s)):(Js=t,t=s),t}function Ni(){var t,e,n,u;return t=Js,"rename"===r.substr(Js,6).toLowerCase()?(e=r.substr(Js,6),Js+=6):(e=s,0===eo&&ao(mn)),e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?t=e=[e,n]:(Js=t,t=s)):(Js=t,t=s),t}function Ri(){var t,e,n,u;return t=Js,"partition"===r.substr(Js,9).toLowerCase()?(e=r.substr(Js,9),Js+=9):(e=s,0===eo&&ao(Sn)),e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="PARTITION"):(Js=t,t=s)):(Js=t,t=s),t}function _i(){var t,e,n,u;return t=Js,"into"===r.substr(Js,4).toLowerCase()?(e=r.substr(Js,4),Js+=4):(e=s,0===eo&&ao(In)),e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?t=e=[e,n]:(Js=t,t=s)):(Js=t,t=s),t}function Oi(){var t,e,n,u;return t=Js,"from"===r.substr(Js,4).toLowerCase()?(e=r.substr(Js,4),Js+=4):(e=s,0===eo&&ao(Nn)),e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?t=e=[e,n]:(Js=t,t=s)):(Js=t,t=s),t}function gi(){var t,e,n,u;return t=Js,"set"===r.substr(Js,3).toLowerCase()?(e=r.substr(Js,3),Js+=3):(e=s,0===eo&&ao(wr)),e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?t=e=[e,n]:(Js=t,t=s)):(Js=t,t=s),t}function xi(){var t,e,n,u;return t=Js,"as"===r.substr(Js,2).toLowerCase()?(e=r.substr(Js,2),Js+=2):(e=s,0===eo&&ao(Rn)),e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?t=e=[e,n]:(Js=t,t=s)):(Js=t,t=s),t}function Ui(){var t,e,n,u;return t=Js,"table"===r.substr(Js,5).toLowerCase()?(e=r.substr(Js,5),Js+=5):(e=s,0===eo&&ao(_n)),e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="TABLE"):(Js=t,t=s)):(Js=t,t=s),t}function Mi(){var t,e,n,u;return t=Js,"on"===r.substr(Js,2).toLowerCase()?(e=r.substr(Js,2),Js+=2):(e=s,0===eo&&ao(sr)),e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?t=e=[e,n]:(Js=t,t=s)):(Js=t,t=s),t}function Di(){var t,e,n,u;return t=Js,"join"===r.substr(Js,4).toLowerCase()?(e=r.substr(Js,4),Js+=4):(e=s,0===eo&&ao(Fn)),e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?t=e=[e,n]:(Js=t,t=s)):(Js=t,t=s),t}function ki(){var t,e,n,u;return t=Js,"outer"===r.substr(Js,5).toLowerCase()?(e=r.substr(Js,5),Js+=5):(e=s,0===eo&&ao(Pn)),e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?t=e=[e,n]:(Js=t,t=s)):(Js=t,t=s),t}function $i(){var t,e,n,u;return t=Js,"union"===r.substr(Js,5).toLowerCase()?(e=r.substr(Js,5),Js+=5):(e=s,0===eo&&ao(Gn)),e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?t=e=[e,n]:(Js=t,t=s)):(Js=t,t=s),t}function Fi(){var t,e,n,u;return t=Js,"values"===r.substr(Js,6).toLowerCase()?(e=r.substr(Js,6),Js+=6):(e=s,0===eo&&ao(Hn)),e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?t=e=[e,n]:(Js=t,t=s)):(Js=t,t=s),t}function Pi(){var t,e,n,u;return t=Js,"using"===r.substr(Js,5).toLowerCase()?(e=r.substr(Js,5),Js+=5):(e=s,0===eo&&ao(jn)),e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?t=e=[e,n]:(Js=t,t=s)):(Js=t,t=s),t}function Gi(){var t,e,n,u;return t=Js,"with"===r.substr(Js,4).toLowerCase()?(e=r.substr(Js,4),Js+=4):(e=s,0===eo&&ao(zr)),e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?t=e=[e,n]:(Js=t,t=s)):(Js=t,t=s),t}function Hi(){var t,e,n,u;return t=Js,"group"===r.substr(Js,5).toLowerCase()?(e=r.substr(Js,5),Js+=5):(e=s,0===eo&&ao(Bn)),e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?t=e=[e,n]:(Js=t,t=s)):(Js=t,t=s),t}function ji(){var t,e,n,u;return t=Js,"by"===r.substr(Js,2).toLowerCase()?(e=r.substr(Js,2),Js+=2):(e=s,0===eo&&ao(Xn)),e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?t=e=[e,n]:(Js=t,t=s)):(Js=t,t=s),t}function Yi(){var t,e,n,u;return t=Js,"asc"===r.substr(Js,3).toLowerCase()?(e=r.substr(Js,3),Js+=3):(e=s,0===eo&&ao(Zn)),e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="ASC"):(Js=t,t=s)):(Js=t,t=s),t}function Bi(){var t,e,n,u;return t=Js,"desc"===r.substr(Js,4).toLowerCase()?(e=r.substr(Js,4),Js+=4):(e=s,0===eo&&ao(zn)),e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="DESC"):(Js=t,t=s)):(Js=t,t=s),t}function Xi(){var t,e,n,u;return t=Js,"all"===r.substr(Js,3).toLowerCase()?(e=r.substr(Js,3),Js+=3):(e=s,0===eo&&ao(Jn)),e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="ALL"):(Js=t,t=s)):(Js=t,t=s),t}function Wi(){var t,e,n,u;return t=Js,"distinct"===r.substr(Js,8).toLowerCase()?(e=r.substr(Js,8),Js+=8):(e=s,0===eo&&ao(Qn)),e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="DISTINCT"):(Js=t,t=s)):(Js=t,t=s),t}function Vi(){var t,e,n,u;return t=Js,"between"===r.substr(Js,7).toLowerCase()?(e=r.substr(Js,7),Js+=7):(e=s,0===eo&&ao(ru)),e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="BETWEEN"):(Js=t,t=s)):(Js=t,t=s),t}function Ki(){var t,e,n,u;return t=Js,"in"===r.substr(Js,2).toLowerCase()?(e=r.substr(Js,2),Js+=2):(e=s,0===eo&&ao(xr)),e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="IN"):(Js=t,t=s)):(Js=t,t=s),t}function qi(){var t,e,n,u;return t=Js,"is"===r.substr(Js,2).toLowerCase()?(e=r.substr(Js,2),Js+=2):(e=s,0===eo&&ao(tu)),e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="IS"):(Js=t,t=s)):(Js=t,t=s),t}function Zi(){var t,e,n,u;return t=Js,"like"===r.substr(Js,4).toLowerCase()?(e=r.substr(Js,4),Js+=4):(e=s,0===eo&&ao(eu)),e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="LIKE"):(Js=t,t=s)):(Js=t,t=s),t}function zi(){var t,e,n,u;return t=Js,"ilike"===r.substr(Js,5).toLowerCase()?(e=r.substr(Js,5),Js+=5):(e=s,0===eo&&ao(nu)),e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="ILIKE"):(Js=t,t=s)):(Js=t,t=s),t}function Ji(){var t,e,n,u;return t=Js,"exists"===r.substr(Js,6).toLowerCase()?(e=r.substr(Js,6),Js+=6):(e=s,0===eo&&ao(uu)),e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="EXISTS"):(Js=t,t=s)):(Js=t,t=s),t}function Qi(){var t,e,n,u;return t=Js,"not"===r.substr(Js,3).toLowerCase()?(e=r.substr(Js,3),Js+=3):(e=s,0===eo&&ao(cr)),e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="NOT"):(Js=t,t=s)):(Js=t,t=s),t}function rc(){var t,e,n,u;return t=Js,"and"===r.substr(Js,3).toLowerCase()?(e=r.substr(Js,3),Js+=3):(e=s,0===eo&&ao(su)),e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="AND"):(Js=t,t=s)):(Js=t,t=s),t}function tc(){var t,e,n,u;return t=Js,"or"===r.substr(Js,2).toLowerCase()?(e=r.substr(Js,2),Js+=2):(e=s,0===eo&&ao(ou)),e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="OR"):(Js=t,t=s)):(Js=t,t=s),t}function ec(){var t,e,n,u;return t=Js,"case"===r.substr(Js,4).toLowerCase()?(e=r.substr(Js,4),Js+=4):(e=s,0===eo&&ao(pu)),e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?t=e=[e,n]:(Js=t,t=s)):(Js=t,t=s),t}function nc(){var t,e,n,u;return t=Js,"when"===r.substr(Js,4).toLowerCase()?(e=r.substr(Js,4),Js+=4):(e=s,0===eo&&ao(wu)),e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?t=e=[e,n]:(Js=t,t=s)):(Js=t,t=s),t}function uc(){var t,e,n,u;return t=Js,"end"===r.substr(Js,3).toLowerCase()?(e=r.substr(Js,3),Js+=3):(e=s,0===eo&&ao(Au)),e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?t=e=[e,n]:(Js=t,t=s)):(Js=t,t=s),t}function sc(){var t,e,n,u;return t=Js,"cast"===r.substr(Js,4).toLowerCase()?(e=r.substr(Js,4),Js+=4):(e=s,0===eo&&ao(yu)),e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?t=e=[e,n]:(Js=t,t=s)):(Js=t,t=s),t}function oc(){var t,e,n,u;return t=Js,"char"===r.substr(Js,4).toLowerCase()?(e=r.substr(Js,4),Js+=4):(e=s,0===eo&&ao(Su)),e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="CHAR"):(Js=t,t=s)):(Js=t,t=s),t}function ac(){var t,e,n,u;return t=Js,"varchar"===r.substr(Js,7).toLowerCase()?(e=r.substr(Js,7),Js+=7):(e=s,0===eo&&ao(Iu)),e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="VARCHAR"):(Js=t,t=s)):(Js=t,t=s),t}function ic(){var t,e,n,u;return t=Js,"numeric"===r.substr(Js,7).toLowerCase()?(e=r.substr(Js,7),Js+=7):(e=s,0===eo&&ao(Nu)),e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="NUMERIC"):(Js=t,t=s)):(Js=t,t=s),t}function cc(){var t,e,n,u;return t=Js,"decimal"===r.substr(Js,7).toLowerCase()?(e=r.substr(Js,7),Js+=7):(e=s,0===eo&&ao(Ru)),e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="DECIMAL"):(Js=t,t=s)):(Js=t,t=s),t}function lc(){var t,e,n,u;return t=Js,"unsigned"===r.substr(Js,8).toLowerCase()?(e=r.substr(Js,8),Js+=8):(e=s,0===eo&&ao(Ou)),e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="UNSIGNED"):(Js=t,t=s)):(Js=t,t=s),t}function fc(){var t,e,n,u;return t=Js,"int"===r.substr(Js,3).toLowerCase()?(e=r.substr(Js,3),Js+=3):(e=s,0===eo&&ao(gu)),e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="INT"):(Js=t,t=s)):(Js=t,t=s),t}function bc(){var t,e,n,u;return t=Js,"integer"===r.substr(Js,7).toLowerCase()?(e=r.substr(Js,7),Js+=7):(e=s,0===eo&&ao(Uu)),e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="INTEGER"):(Js=t,t=s)):(Js=t,t=s),t}function vc(){var t,e,n,u;return t=Js,"smallint"===r.substr(Js,8).toLowerCase()?(e=r.substr(Js,8),Js+=8):(e=s,0===eo&&ao($u)),e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="SMALLINT"):(Js=t,t=s)):(Js=t,t=s),t}function dc(){var t,e,n,u;return t=Js,"tinyint"===r.substr(Js,7).toLowerCase()?(e=r.substr(Js,7),Js+=7):(e=s,0===eo&&ao(Pu)),e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="TINYINT"):(Js=t,t=s)):(Js=t,t=s),t}function Lc(){var t,e,n,u;return t=Js,"tinytext"===r.substr(Js,8).toLowerCase()?(e=r.substr(Js,8),Js+=8):(e=s,0===eo&&ao(Gu)),e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="TINYTEXT"):(Js=t,t=s)):(Js=t,t=s),t}function Cc(){var t,e,n,u;return t=Js,"text"===r.substr(Js,4).toLowerCase()?(e=r.substr(Js,4),Js+=4):(e=s,0===eo&&ao(Hu)),e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="TEXT"):(Js=t,t=s)):(Js=t,t=s),t}function pc(){var t,e,n,u;return t=Js,"mediumtext"===r.substr(Js,10).toLowerCase()?(e=r.substr(Js,10),Js+=10):(e=s,0===eo&&ao(ju)),e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="MEDIUMTEXT"):(Js=t,t=s)):(Js=t,t=s),t}function wc(){var t,e,n,u;return t=Js,"longtext"===r.substr(Js,8).toLowerCase()?(e=r.substr(Js,8),Js+=8):(e=s,0===eo&&ao(Yu)),e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="LONGTEXT"):(Js=t,t=s)):(Js=t,t=s),t}function Ec(){var t,e,n,u;return t=Js,"bigint"===r.substr(Js,6).toLowerCase()?(e=r.substr(Js,6),Js+=6):(e=s,0===eo&&ao(Bu)),e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="BIGINT"):(Js=t,t=s)):(Js=t,t=s),t}function hc(){var t,e,n,u;return t=Js,"float"===r.substr(Js,5).toLowerCase()?(e=r.substr(Js,5),Js+=5):(e=s,0===eo&&ao(Wu)),e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="FLOAT"):(Js=t,t=s)):(Js=t,t=s),t}function Ac(){var t,e,n,u;return t=Js,"double"===r.substr(Js,6).toLowerCase()?(e=r.substr(Js,6),Js+=6):(e=s,0===eo&&ao(Vu)),e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="DOUBLE"):(Js=t,t=s)):(Js=t,t=s),t}function yc(){var t,e,n,u;return t=Js,"date"===r.substr(Js,4).toLowerCase()?(e=r.substr(Js,4),Js+=4):(e=s,0===eo&&ao(Ku)),e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="DATE"):(Js=t,t=s)):(Js=t,t=s),t}function Tc(){var t,e,n,u;return t=Js,"datetime"===r.substr(Js,8).toLowerCase()?(e=r.substr(Js,8),Js+=8):(e=s,0===eo&&ao(qu)),e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="DATETIME"):(Js=t,t=s)):(Js=t,t=s),t}function mc(){var t,e,n,u;return t=Js,"rows"===r.substr(Js,4).toLowerCase()?(e=r.substr(Js,4),Js+=4):(e=s,0===eo&&ao(Zu)),e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="ROWS"):(Js=t,t=s)):(Js=t,t=s),t}function Sc(){var t,e,n,u;return t=Js,"time"===r.substr(Js,4).toLowerCase()?(e=r.substr(Js,4),Js+=4):(e=s,0===eo&&ao(zu)),e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="TIME"):(Js=t,t=s)):(Js=t,t=s),t}function Ic(){var t,e,n,u;return t=Js,"timestamp"===r.substr(Js,9).toLowerCase()?(e=r.substr(Js,9),Js+=9):(e=s,0===eo&&ao(Ju)),e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="TIMESTAMP"):(Js=t,t=s)):(Js=t,t=s),t}function Nc(){var t,e,n,u;return t=Js,"truncate"===r.substr(Js,8).toLowerCase()?(e=r.substr(Js,8),Js+=8):(e=s,0===eo&&ao(Qu)),e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="TRUNCATE"):(Js=t,t=s)):(Js=t,t=s),t}function Rc(){var t,e,n,u;return t=Js,"interval"===r.substr(Js,8).toLowerCase()?(e=r.substr(Js,8),Js+=8):(e=s,0===eo&&ao(ns)),e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="INTERVAL"):(Js=t,t=s)):(Js=t,t=s),t}function _c(){var t,e,n,u;return t=Js,"current_timestamp"===r.substr(Js,17).toLowerCase()?(e=r.substr(Js,17),Js+=17):(e=s,0===eo&&ao(ss)),e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="CURRENT_TIMESTAMP"):(Js=t,t=s)):(Js=t,t=s),t}function Oc(){var t;return (t=function(){var t;return "@@"===r.substr(Js,2)?(t="@@",Js+=2):(t=s,0===eo&&ao(Ls)),t}())===s&&(t=function(){var t;return 64===r.charCodeAt(Js)?(t="@",Js++):(t=s,0===eo&&ao(ds)),t}())===s&&(t=function(){var t;return 36===r.charCodeAt(Js)?(t="$",Js++):(t=s,0===eo&&ao(Nt)),t}()),t}function gc(){var t;return "::"===r.substr(Js,2)?(t="::",Js+=2):(t=s,0===eo&&ao(ws)),t}function xc(){var t;return 61===r.charCodeAt(Js)?(t="=",Js++):(t=s,0===eo&&ao(ot)),t}function Uc(){var t,e,n,u;return t=Js,"add"===r.substr(Js,3).toLowerCase()?(e=r.substr(Js,3),Js+=3):(e=s,0===eo&&ao(hs)),e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="ADD"):(Js=t,t=s)):(Js=t,t=s),t}function Mc(){var t,e,n,u;return t=Js,"column"===r.substr(Js,6).toLowerCase()?(e=r.substr(Js,6),Js+=6):(e=s,0===eo&&ao(As)),e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="COLUMN"):(Js=t,t=s)):(Js=t,t=s),t}function Dc(){var t,e,n,u;return t=Js,"index"===r.substr(Js,5).toLowerCase()?(e=r.substr(Js,5),Js+=5):(e=s,0===eo&&ao(ys)),e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="INDEX"):(Js=t,t=s)):(Js=t,t=s),t}function kc(){var t,e,n,u;return t=Js,"key"===r.substr(Js,3).toLowerCase()?(e=r.substr(Js,3),Js+=3):(e=s,0===eo&&ao(N)),e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="KEY"):(Js=t,t=s)):(Js=t,t=s),t}function $c(){var t,e,n,u;return t=Js,"unique"===r.substr(Js,6).toLowerCase()?(e=r.substr(Js,6),Js+=6):(e=s,0===eo&&ao(I)),e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="UNIQUE"):(Js=t,t=s)):(Js=t,t=s),t}function Fc(){var t,e,n,u;return t=Js,"comment"===r.substr(Js,7).toLowerCase()?(e=r.substr(Js,7),Js+=7):(e=s,0===eo&&ao(Ss)),e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="COMMENT"):(Js=t,t=s)):(Js=t,t=s),t}function Pc(){var t,e,n,u;return t=Js,"constraint"===r.substr(Js,10).toLowerCase()?(e=r.substr(Js,10),Js+=10):(e=s,0===eo&&ao(Is)),e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="CONSTRAINT"):(Js=t,t=s)):(Js=t,t=s),t}function Gc(){var t;return 46===r.charCodeAt(Js)?(t=".",Js++):(t=s,0===eo&&ao(Ke)),t}function Hc(){var t;return 44===r.charCodeAt(Js)?(t=",",Js++):(t=s,0===eo&&ao(Ds)),t}function jc(){var t;return 42===r.charCodeAt(Js)?(t="*",Js++):(t=s,0===eo&&ao(mt)),t}function Yc(){var t;return 40===r.charCodeAt(Js)?(t="(",Js++):(t=s,0===eo&&ao(Yr)),t}function Bc(){var t;return 41===r.charCodeAt(Js)?(t=")",Js++):(t=s,0===eo&&ao(Br)),t}function Xc(){var t;return 91===r.charCodeAt(Js)?(t="[",Js++):(t=s,0===eo&&ao(ks)),t}function Wc(){var t;return 93===r.charCodeAt(Js)?(t="]",Js++):(t=s,0===eo&&ao($s)),t}function Vc(){var t;return 59===r.charCodeAt(Js)?(t=";",Js++):(t=s,0===eo&&ao(Fs)),t}function Kc(){var t;return "||"===r.substr(Js,2)?(t="||",Js+=2):(t=s,0===eo&&ao(Ys)),t}function qc(){var t;return (t=Kc())===s&&(t=function(){var t;return "&&"===r.substr(Js,2)?(t="&&",Js+=2):(t=s,0===eo&&ao(Bs)),t}()),t}function Zc(){var r,t;for(r=[],(t=tl())===s&&(t=Jc());t!==s;)r.push(t),(t=tl())===s&&(t=Jc());return r}function zc(){var r,t;if(r=[],(t=tl())===s&&(t=Jc()),t!==s)for(;t!==s;)r.push(t),(t=tl())===s&&(t=Jc());else r=s;return r}function Jc(){var t;return (t=function(){var t,e,n,u,o,a;t=Js,"/*"===r.substr(Js,2)?(e="/*",Js+=2):(e=s,0===eo&&ao(Xs));if(e!==s){for(n=[],u=Js,o=Js,eo++,"*/"===r.substr(Js,2)?(a="*/",Js+=2):(a=s,0===eo&&ao(Ws)),eo--,a===s?o=void 0:(Js=o,o=s),o!==s&&(a=rl())!==s?u=o=[o,a]:(Js=u,u=s);u!==s;)n.push(u),u=Js,o=Js,eo++,"*/"===r.substr(Js,2)?(a="*/",Js+=2):(a=s,0===eo&&ao(Ws)),eo--,a===s?o=void 0:(Js=o,o=s),o!==s&&(a=rl())!==s?u=o=[o,a]:(Js=u,u=s);n!==s?("*/"===r.substr(Js,2)?(u="*/",Js+=2):(u=s,0===eo&&ao(Ws)),u!==s?t=e=[e,n,u]:(Js=t,t=s)):(Js=t,t=s);}else Js=t,t=s;return t}())===s&&(t=function(){var t,e,n,u,o,a;t=Js,"--"===r.substr(Js,2)?(e="--",Js+=2):(e=s,0===eo&&ao(Vs));if(e!==s){for(n=[],u=Js,o=Js,eo++,a=el(),eo--,a===s?o=void 0:(Js=o,o=s),o!==s&&(a=rl())!==s?u=o=[o,a]:(Js=u,u=s);u!==s;)n.push(u),u=Js,o=Js,eo++,a=el(),eo--,a===s?o=void 0:(Js=o,o=s),o!==s&&(a=rl())!==s?u=o=[o,a]:(Js=u,u=s);n!==s?t=e=[e,n]:(Js=t,t=s);}else Js=t,t=s;return t}()),t}function Qc(){var r,t,e,n,u,o,a;return r=Js,(t=Fc())!==s&&Zc()!==s?((e=xc())===s&&(e=null),e!==s&&Zc()!==s&&(n=si())!==s?(o=e,a=n,r=t={type:(u=t).toLowerCase(),keyword:u.toLowerCase(),symbol:o,value:a}):(Js=r,r=s)):(Js=r,r=s),r}function rl(){var t;return r.length>Js?(t=r.charAt(Js),Js++):(t=s,0===eo&&ao(Ks)),t}function tl(){var t;return qs.test(r.charAt(Js))?(t=r.charAt(Js),Js++):(t=s,0===eo&&ao(Zs)),t}function el(){var t,e;if((t=function(){var t,e;t=Js,eo++,r.length>Js?(e=r.charAt(Js),Js++):(e=s,0===eo&&ao(Ks));eo--,e===s?t=void 0:(Js=t,t=s);return t}())===s)if(t=[],We.test(r.charAt(Js))?(e=r.charAt(Js),Js++):(e=s,0===eo&&ao(Ve)),e!==s)for(;e!==s;)t.push(e),We.test(r.charAt(Js))?(e=r.charAt(Js),Js++):(e=s,0===eo&&ao(Ve));else t=s;return t}function nl(){var t,e;return t=Js,Sl=[],(void 0)!==s&&Zc()!==s?((e=ul())===s&&(e=function(){var t,e;t=Js,function(){var t;return "return"===r.substr(Js,6).toLowerCase()?(t=r.substr(Js,6),Js+=6):(t=s,0===eo&&ao(Cs)),t}()!==s&&Zc()!==s&&(e=sl())!==s?(t={type:"return",expr:e}):(Js=t,t=s);return t}()),e!==s?(t={type:"proc",stmt:e,vars:Sl}):(Js=t,t=s)):(Js=t,t=s),t}function ul(){var t,e,n,u;return t=Js,(e=bl())===s&&(e=vl()),e!==s&&Zc()!==s?((n=function(){var t;return ":="===r.substr(Js,2)?(t=":=",Js+=2):(t=s,0===eo&&ao(ps)),t}())===s&&(n=xc()),n!==s&&Zc()!==s&&(u=sl())!==s?(t=e={type:"assign",left:e,symbol:n,right:u}):(Js=t,t=s)):(Js=t,t=s),t}function sl(){var r;return (r=Uo())===s&&(r=function(){var r,t,e,n,u;r=Js,(t=bl())!==s&&Zc()!==s&&(e=zo())!==s&&Zc()!==s&&(n=bl())!==s&&Zc()!==s&&(u=Qo())!==s?(r=t={type:"join",ltable:t,rtable:n,op:e,on:u}):(Js=r,r=s);return r}())===s&&(r=ol())===s&&(r=function(){var r,t;r=Js,Xc()!==s&&Zc()!==s&&(t=fl())!==s&&Zc()!==s&&Wc()!==s?(r={type:"array",value:t}):(Js=r,r=s);return r}()),r}function ol(){var r,t,e,n,u,o,a,i;if(r=Js,(t=al())!==s){for(e=[],n=Js,(u=Zc())!==s&&(o=xa())!==s&&(a=Zc())!==s&&(i=al())!==s?n=u=[u,o,a,i]:(Js=n,n=s);n!==s;)e.push(n),n=Js,(u=Zc())!==s&&(o=xa())!==s&&(a=Zc())!==s&&(i=al())!==s?n=u=[u,o,a,i]:(Js=n,n=s);e!==s?(r=t=at(t,e)):(Js=r,r=s);}else Js=r,r=s;return r}function al(){var r,t,e,n,u,o,a,i;if(r=Js,(t=il())!==s){for(e=[],n=Js,(u=Zc())!==s&&(o=Ma())!==s&&(a=Zc())!==s&&(i=il())!==s?n=u=[u,o,a,i]:(Js=n,n=s);n!==s;)e.push(n),n=Js,(u=Zc())!==s&&(o=Ma())!==s&&(a=Zc())!==s&&(i=il())!==s?n=u=[u,o,a,i]:(Js=n,n=s);e!==s?(r=t=at(t,e)):(Js=r,r=s);}else Js=r,r=s;return r}function il(){var r,t,e;return (r=ti())===s&&(r=bl())===s&&(r=ll())===s&&(r=Va())===s&&(r=Js,Yc()!==s&&Zc()!==s&&(t=ol())!==s&&Zc()!==s&&Bc()!==s?((e=t).parentheses=!0,r=e):(Js=r,r=s)),r}function cl(){var r,t,e,n,u,o,a;return r=Js,(t=Ya())!==s?(e=Js,(n=Zc())!==s&&(u=Gc())!==s&&(o=Zc())!==s&&(a=Ya())!==s?e=n=[n,u,o,a]:(Js=e,e=s),e===s&&(e=null),e!==s?(r=t=function(r,t){let e=r;return null!==t&&(e=`${r}.${t[3]}`),e}(t,e)):(Js=r,r=s)):(Js=r,r=s),r}function ll(){var r,t,e;return r=Js,(t=cl())!==s&&Zc()!==s&&Yc()!==s&&Zc()!==s?((e=fl())===s&&(e=null),e!==s&&Zc()!==s&&Bc()!==s?(r=t={type:"function",name:t,args:{type:"expr_list",value:e}}):(Js=r,r=s)):(Js=r,r=s),r===s&&(r=Js,(t=cl())!==s&&(t=function(r){return {type:"function",name:r,args:null}}(t)),r=t),r}function fl(){var r,t,e,n,u,o,a,i;if(r=Js,(t=il())!==s){for(e=[],n=Js,(u=Zc())!==s&&(o=Hc())!==s&&(a=Zc())!==s&&(i=il())!==s?n=u=[u,o,a,i]:(Js=n,n=s);n!==s;)e.push(n),n=Js,(u=Zc())!==s&&(o=Hc())!==s&&(a=Zc())!==s&&(i=il())!==s?n=u=[u,o,a,i]:(Js=n,n=s);e!==s?(r=t=hl(t,e)):(Js=r,r=s);}else Js=r,r=s;return r}function bl(){var r,t,e,n,u;return r=Js,(t=Oc())!==s&&(e=vl())!==s?(n=t,u=e,r=t={type:"var",...u,prefix:n}):(Js=r,r=s),r}function vl(){var t,e,n,u,o;return t=Js,(e=Ya())!==s&&(n=function(){var e,n,u,o;e=[],n=Js,46===r.charCodeAt(Js)?(u=".",Js++):(u=s,0===eo&&ao(Ke));u!==s&&(o=Ya())!==s?n=u=[u,o]:(Js=n,n=s);for(;n!==s;)e.push(n),n=Js,46===r.charCodeAt(Js)?(u=".",Js++):(u=s,0===eo&&ao(Ke)),u!==s&&(o=Ya())!==s?n=u=[u,o]:(Js=n,n=s);e!==s&&(e=function(r){const t=[];for(let e=0;e<r.length;e++)t.push(r[e][1]);return t}(e));return e}())!==s?(u=e,o=n,Sl.push(u),t=e={type:"var",name:u,members:o,prefix:null}):(Js=t,t=s),t}function dl(){var t;return (t=function(){var t,e,n,u;t=Js,(e=oc())===s&&(e=ac());if(e!==s)if(Zc()!==s)if(Yc()!==s)if(Zc()!==s){if(n=[],qe.test(r.charAt(Js))?(u=r.charAt(Js),Js++):(u=s,0===eo&&ao(Ze)),u!==s)for(;u!==s;)n.push(u),qe.test(r.charAt(Js))?(u=r.charAt(Js),Js++):(u=s,0===eo&&ao(Ze));else n=s;n!==s&&(u=Zc())!==s&&Bc()!==s?(e={dataType:e,length:parseInt(n.join(""),10)},t=e):(Js=t,t=s);}else Js=t,t=s;else Js=t,t=s;else Js=t,t=s;else Js=t,t=s;t===s&&(t=Js,(e=oc())!==s&&(e=function(r){return {dataType:r}}(e)),(t=e)===s&&(t=Js,(e=ac())!==s&&(e=zs(e)),t=e));return t}())===s&&(t=function(){var t,e,n,u,o,a,i,c,l,f,b,v;t=Js,(e=ic())===s&&(e=cc())===s&&(e=fc())===s&&(e=bc())===s&&(e=vc())===s&&(e=dc())===s&&(e=Ec())===s&&(e=hc())===s&&(e=Ac());if(e!==s)if((n=Zc())!==s)if((u=Yc())!==s)if((o=Zc())!==s){if(a=[],qe.test(r.charAt(Js))?(i=r.charAt(Js),Js++):(i=s,0===eo&&ao(Ze)),i!==s)for(;i!==s;)a.push(i),qe.test(r.charAt(Js))?(i=r.charAt(Js),Js++):(i=s,0===eo&&ao(Ze));else a=s;if(a!==s)if((i=Zc())!==s){if(c=Js,(l=Hc())!==s)if((f=Zc())!==s){if(b=[],qe.test(r.charAt(Js))?(v=r.charAt(Js),Js++):(v=s,0===eo&&ao(Ze)),v!==s)for(;v!==s;)b.push(v),qe.test(r.charAt(Js))?(v=r.charAt(Js),Js++):(v=s,0===eo&&ao(Ze));else b=s;b!==s?c=l=[l,f,b]:(Js=c,c=s);}else Js=c,c=s;else Js=c,c=s;c===s&&(c=null),c!==s&&(l=Zc())!==s&&(f=Bc())!==s&&(b=Zc())!==s?((v=Ll())===s&&(v=null),v!==s?(d=c,L=v,e={dataType:e,length:parseInt(a.join(""),10),scale:d&&parseInt(d[2].join(""),10),parentheses:!0,suffix:L},t=e):(Js=t,t=s)):(Js=t,t=s);}else Js=t,t=s;else Js=t,t=s;}else Js=t,t=s;else Js=t,t=s;else Js=t,t=s;else Js=t,t=s;var d,L;if(t===s){if(t=Js,(e=ic())===s&&(e=cc())===s&&(e=fc())===s&&(e=bc())===s&&(e=vc())===s&&(e=dc())===s&&(e=Ec())===s&&(e=hc())===s&&(e=Ac()),e!==s){if(n=[],qe.test(r.charAt(Js))?(u=r.charAt(Js),Js++):(u=s,0===eo&&ao(Ze)),u!==s)for(;u!==s;)n.push(u),qe.test(r.charAt(Js))?(u=r.charAt(Js),Js++):(u=s,0===eo&&ao(Ze));else n=s;n!==s&&(u=Zc())!==s?((o=Ll())===s&&(o=null),o!==s?(e=function(r,t,e){return {dataType:r,length:parseInt(t.join(""),10),suffix:e}}(e,n,o),t=e):(Js=t,t=s)):(Js=t,t=s);}else Js=t,t=s;t===s&&(t=Js,(e=ic())===s&&(e=cc())===s&&(e=fc())===s&&(e=bc())===s&&(e=vc())===s&&(e=dc())===s&&(e=Ec())===s&&(e=hc())===s&&(e=Ac()),e!==s&&(n=Zc())!==s?((u=Ll())===s&&(u=null),u!==s&&(o=Zc())!==s?(e=function(r,t){return {dataType:r,suffix:t}}(e,u),t=e):(Js=t,t=s)):(Js=t,t=s));}return t}())===s&&(t=function(){var t,e,n,u;t=Js,(e=yc())===s&&(e=Tc())===s&&(e=Sc())===s&&(e=Ic());if(e!==s)if(Zc()!==s)if(Yc()!==s)if(Zc()!==s){if(n=[],qe.test(r.charAt(Js))?(u=r.charAt(Js),Js++):(u=s,0===eo&&ao(Ze)),u!==s)for(;u!==s;)n.push(u),qe.test(r.charAt(Js))?(u=r.charAt(Js),Js++):(u=s,0===eo&&ao(Ze));else n=s;n!==s&&(u=Zc())!==s&&Bc()!==s?(e={dataType:e,length:parseInt(n.join(""),10)},t=e):(Js=t,t=s);}else Js=t,t=s;else Js=t,t=s;else Js=t,t=s;else Js=t,t=s;t===s&&(t=Js,(e=yc())===s&&(e=Tc())===s&&(e=Sc())===s&&(e=Ic()),e!==s&&(e=zs(e)),t=e);return t}())===s&&(t=function(){var e;(e=function(){var t,e,n,u;return t=Js,"json"===r.substr(Js,4).toLowerCase()?(e=r.substr(Js,4),Js+=4):(e=s,0===eo&&ao(Mu)),e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="JSON"):(Js=t,t=s)):(Js=t,t=s),t}())===s&&(e=function(){var t,e,n,u;return t=Js,"jsonb"===r.substr(Js,5).toLowerCase()?(e=r.substr(Js,5),Js+=5):(e=s,0===eo&&ao(Du)),e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="JSONB"):(Js=t,t=s)):(Js=t,t=s),t}());e!==s&&(e=zs(e));return e}())===s&&(t=function(){var e;(e=function(){var t,e,n,u;return t=Js,"geometry"===r.substr(Js,8).toLowerCase()?(e=r.substr(Js,8),Js+=8):(e=s,0===eo&&ao(ku)),e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="GEOMETRY"):(Js=t,t=s)):(Js=t,t=s),t}())!==s&&(e={dataType:e});return e}())===s&&(t=function(){var r,t;r=Js,(t=Lc())===s&&(t=Cc())===s&&(t=pc())===s&&(t=wc());t!==s&&Xc()!==s&&Zc()!==s&&Wc()!==s?(r=t={dataType:t+"[]"}):(Js=r,r=s);r===s&&(r=Js,(t=Lc())===s&&(t=Cc())===s&&(t=pc())===s&&(t=wc()),t!==s&&(t=function(r){return {dataType:r}}(t)),r=t);return r}())===s&&(t=function(){var e;(e=function(){var t,e,n,u;return t=Js,"uuid"===r.substr(Js,4).toLowerCase()?(e=r.substr(Js,4),Js+=4):(e=s,0===eo&&ao(ts)),e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="UUID"):(Js=t,t=s)):(Js=t,t=s),t}())!==s&&(e={dataType:e});return e}())===s&&(t=function(){var e;(e=function(){var t,e,n,u;return t=Js,"bool"===r.substr(Js,4).toLowerCase()?(e=r.substr(Js,4),Js+=4):(e=s,0===eo&&ao(Tu)),e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="BOOL"):(Js=t,t=s)):(Js=t,t=s),t}())===s&&(e=function(){var t,e,n,u;return t=Js,"boolean"===r.substr(Js,7).toLowerCase()?(e=r.substr(Js,7),Js+=7):(e=s,0===eo&&ao(mu)),e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="BOOLEAN"):(Js=t,t=s)):(Js=t,t=s),t}());e!==s&&(e={dataType:e});return e}())===s&&(t=function(){var t,e,n;t=Js,(e=function(){var t,e,n,u;return t=Js,"enum"===r.substr(Js,4).toLowerCase()?(e=r.substr(Js,4),Js+=4):(e=s,0===eo&&ao(Xu)),e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="ENUM"):(Js=t,t=s)):(Js=t,t=s),t}())!==s&&Zc()!==s&&(n=wa())!==s?(u=e,(o=n).parentheses=!0,t=e={dataType:u,expr:o}):(Js=t,t=s);var u,o;return t}())===s&&(t=function(){var e;(e=function(){var t,e,n,u;return t=Js,"serial"===r.substr(Js,6).toLowerCase()?(e=r.substr(Js,6),Js+=6):(e=s,0===eo&&ao(Fu)),e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="SERIAL"):(Js=t,t=s)):(Js=t,t=s),t}())===s&&(e=Rc());e!==s&&(e=zs(e));return e}()),t}function Ll(){var t,e,n;return t=Js,(e=lc())===s&&(e=null),e!==s&&Zc()!==s?((n=function(){var t,e,n,u;return t=Js,"zerofill"===r.substr(Js,8).toLowerCase()?(e=r.substr(Js,8),Js+=8):(e=s,0===eo&&ao(xu)),e!==s?(n=Js,eo++,u=Ba(),eo--,u===s?n=void 0:(Js=n,n=s),n!==s?(t=e="ZEROFILL"):(Js=t,t=s)):(Js=t,t=s),t}())===s&&(n=null),n!==s?(t=e=function(r,t){const e=[];return r&&e.push(r),t&&e.push(t),e}(e,n)):(Js=t,t=s)):(Js=t,t=s),t}const Cl={ALTER:!0,ALL:!0,ADD:!0,AND:!0,AS:!0,ASC:!0,BETWEEN:!0,BY:!0,CALL:!0,CASE:!0,CREATE:!0,CONTAINS:!0,CURRENT_DATE:!0,CURRENT_TIME:!0,CURRENT_TIMESTAMP:!0,CURRENT_USER:!0,DELETE:!0,DESC:!0,DISTINCT:!0,DROP:!0,ELSE:!0,END:!0,EXISTS:!0,EXPLAIN:!0,FALSE:!0,FROM:!0,FULL:!0,GROUP:!0,HAVING:!0,IN:!0,INNER:!0,INSERT:!0,INTO:!0,IS:!0,JOIN:!0,JSON:!0,LEFT:!0,LIKE:!0,LIMIT:!0,NOT:!0,NULL:!0,NULLS:!0,ON:!0,OR:!0,ORDER:!0,OUTER:!0,RECURSIVE:!0,RENAME:!0,RIGHT:!0,SELECT:!0,SESSION_USER:!0,SET:!0,SHOW:!0,SYSTEM_USER:!0,TABLE:!0,THEN:!0,TRUE:!0,TRUNCATE:!0,UNION:!0,UPDATE:!0,USING:!0,VALUES:!0,WITH:!0,WHEN:!0,WHERE:!0,GLOBAL:!0,SESSION:!0,LOCAL:!0,PERSIST:!0,PERSIST_ONLY:!0};function pl(r,t){return {type:"unary_expr",operator:r,expr:t}}function wl(r,t,e){return {type:"binary_expr",operator:r,left:t,right:e}}function El(r){const t=n(Number.MAX_SAFE_INTEGER);return !(n(r)<t)}function hl(r,t,e=3){const n=[r];for(let r=0;r<t.length;r++)n.push(t[r][e]);return n}function Al(r,t){let e=r;for(let r=0;r<t.length;r++)e=wl(t[r][1],e,t[r][3]);return e}function yl(r){const t=Rl[r];return t||(r||null)}function Tl(r){const t=new Set;for(let e of r.keys()){const r=e.split("::");if(!r){t.add(e);break}r&&r[1]&&(r[1]=yl(r[1])),t.add(r.join("::"));}return Array.from(t)}function ml(r){return "string"==typeof r?{type:"same",value:r}:r}let Sl=[];const Il=new Set,Nl=new Set,Rl={};if((e=a())!==s&&Js===r.length)return e;throw e!==s&&Js<r.length&&ao({type:"end"}),io(to,ro<r.length?r.charAt(ro):null,ro<r.length?oo(ro,ro+1):oo(ro,ro))}};},function(r,t,e){var n=e(0);function u(r,t,e,n){this.message=r,this.expected=t,this.found=e,this.location=n,this.name="SyntaxError","function"==typeof Error.captureStackTrace&&Error.captureStackTrace(this,u);}!function(r,t){function e(){this.constructor=r;}e.prototype=t.prototype,r.prototype=new e;}(u,Error),u.buildMessage=function(r,t){var e={literal:function(r){return '"'+u(r.text)+'"'},class:function(r){var t,e="";for(t=0;t<r.parts.length;t++)e+=r.parts[t]instanceof Array?s(r.parts[t][0])+"-"+s(r.parts[t][1]):s(r.parts[t]);return "["+(r.inverted?"^":"")+e+"]"},any:function(r){return "any character"},end:function(r){return "end of input"},other:function(r){return r.description}};function n(r){return r.charCodeAt(0).toString(16).toUpperCase()}function u(r){return r.replace(/\\/g,"\\\\").replace(/"/g,'\\"').replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(r){return "\\x0"+n(r)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(r){return "\\x"+n(r)}))}function s(r){return r.replace(/\\/g,"\\\\").replace(/\]/g,"\\]").replace(/\^/g,"\\^").replace(/-/g,"\\-").replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(r){return "\\x0"+n(r)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(r){return "\\x"+n(r)}))}return "Expected "+function(r){var t,n,u,s=new Array(r.length);for(t=0;t<r.length;t++)s[t]=(u=r[t],e[u.type](u));if(s.sort(),s.length>0){for(t=1,n=1;t<s.length;t++)s[t-1]!==s[t]&&(s[n]=s[t],n++);s.length=n;}switch(s.length){case 1:return s[0];case 2:return s[0]+" or "+s[1];default:return s.slice(0,-1).join(", ")+", or "+s[s.length-1]}}(r)+" but "+function(r){return r?'"'+u(r)+'"':"end of input"}(t)+" found."},r.exports={SyntaxError:u,parse:function(r,t){t=void 0!==t?t:{};var e,s={},o={start:Pu},a=Pu,i=function(r,t){return ii(r,t,1)},c=function(r,t){return ii(r,t)},l=Uu("AUTO_INCREMENT",!0),f=Uu("UNIQUE",!0),b=Uu("PRIMARY",!0),v=Uu("KEY",!0),d=Uu("COLUMN_FORMAT",!0),L=Uu("FIXED",!0),C=Uu("DYNAMIC",!0),p=Uu("DEFAULT",!0),w=Uu("STORAGE",!0),E=Uu("DISK",!0),h=Uu("MEMORY",!0),A=Uu("ALGORITHM",!0),y=Uu("INSTANT",!0),T=Uu("INPLACE",!0),m=Uu("COPY",!0),S=Uu("LOCK",!0),I=Uu("NONE",!0),N=Uu("SHARED",!0),R=Uu("EXCLUSIVE",!0),_=Uu("CHECK",!0),O=Uu("NOT",!0),g=Uu("FOR",!0),x=Uu("REPLICATION",!0),U=Uu("FOREIGN KEY",!0),M=Uu("MATCH FULL",!0),D=Uu("MATCH PARTIAL",!0),k=Uu("MATCH SIMPLE",!0),$=Uu("ON",!0),F=Uu("DELETE",!0),P=Uu("UPDATE",!0),G=Uu("RESTRICT",!0),H=Uu("CASCADE",!0),j=Uu("SET NULL",!0),Y=Uu("NO ACTION",!0),B=Uu("SET DEFAULT",!0),X=Uu("CHARACTER",!0),W=Uu("SET",!0),V=Uu("CHARSET",!0),K=Uu("COLLATE",!0),q=Uu("AVG_ROW_LENGTH",!0),Z=Uu("KEY_BLOCK_SIZE",!0),z=Uu("MAX_ROWS",!0),J=Uu("MIN_ROWS",!0),Q=Uu("STATS_SAMPLE_PAGES",!0),rr=Uu("CONNECTION",!0),tr=Uu("COMPRESSION",!0),er=Uu("'",!1),nr=Uu("ZLIB",!0),ur=Uu("LZ4",!0),sr=Uu("ENGINE",!0),or=Uu("READ",!0),ar=Uu("LOCAL",!0),ir=Uu("LOW_PRIORITY",!0),cr=Uu("WRITE",!0),lr=function(r,t){return ii(r,t)},fr=Uu("BINARY",!0),br=Uu("MASTER",!0),vr=Uu("LOGS",!0),dr=Uu("BINLOG",!0),Lr=Uu("EVENTS",!0),Cr=Uu("COLLATION",!0),pr=Uu("GRANTS",!0),wr=Uu("(",!1),Er=Uu(")",!1),hr=Uu("BTREE",!0),Ar=Uu("HASH",!0),yr=Uu("WITH",!0),Tr=Uu("PARSER",!0),mr=Uu("VISIBLE",!0),Sr=Uu("INVISIBLE",!0),Ir=function(r,t){return t.unshift(r),t.forEach(r=>{const{table:t,as:e}=r;Li[t]=t,e&&(Li[e]=t),function(r){const t=fi(r);r.clear(),t.forEach(t=>r.add(t));}(di);}),t},Nr=Uu("=",!1),Rr=Uu("DUPLICATE",!0),_r=function(r,t){return ci(r,t)},Or=Uu("!",!1),gr=function(r){return r[0]+" "+r[2]},xr=Uu(">=",!1),Ur=Uu(">",!1),Mr=Uu("<=",!1),Dr=Uu("<>",!1),kr=Uu("<",!1),$r=Uu("!=",!1),Fr=Uu("+",!1),Pr=Uu("-",!1),Gr=Uu("*",!1),Hr=Uu("/",!1),jr=Uu("%",!1),Yr=Uu("||",!1),Br=Uu("?",!1),Xr=function(r){return !0===ui[r.toUpperCase()]},Wr=Uu('"',!1),Vr=/^[^"]/,Kr=Mu(['"'],!0,!1),qr=function(r){return r.join("")},Zr=/^[^']/,zr=Mu(["'"],!0,!1),Jr=Uu("`",!1),Qr=/^[^`]/,rt=Mu(["`"],!0,!1),tt=function(r,t){return r+t.join("")},et=/^[A-Za-z_]/,nt=Mu([["A","Z"],["a","z"],"_"],!1,!1),ut=/^[A-Za-z0-9_]/,st=Mu([["A","Z"],["a","z"],["0","9"],"_"],!1,!1),ot=/^[A-Za-z0-9_:]/,at=Mu([["A","Z"],["a","z"],["0","9"],"_",":"],!1,!1),it=Uu(":",!1),ct=function(r,t,e){return {type:"function",name:r,args:t||{type:"expr_list",value:[]},over:e}},lt=Uu("X",!0),ft=function(r,t){return {type:r.toLowerCase(),value:t[1].join("")}},bt=/^[^"\\\0-\x1F\x7F]/,vt=Mu(['"',"\\",["\0",""],""],!0,!1),dt=/^[^'\\]/,Lt=Mu(["'","\\"],!0,!1),Ct=Uu("\\'",!1),pt=Uu('\\"',!1),wt=Uu("\\\\",!1),Et=Uu("\\/",!1),ht=Uu("\\b",!1),At=Uu("\\f",!1),yt=Uu("\\n",!1),Tt=Uu("\\r",!1),mt=Uu("\\t",!1),St=Uu("\\u",!1),It=Uu("\\",!1),Nt=/^[\n\r]/,Rt=Mu(["\n","\r"],!1,!1),_t=Uu(".",!1),Ot=/^[0-9]/,gt=Mu([["0","9"]],!1,!1),xt=/^[0-9a-fA-F]/,Ut=Mu([["0","9"],["a","f"],["A","F"]],!1,!1),Mt=/^[eE]/,Dt=Mu(["e","E"],!1,!1),kt=/^[+\-]/,$t=Mu(["+","-"],!1,!1),Ft=Uu("ANALYZE",!0),Pt=Uu("ATTACH",!0),Gt=Uu("NULL",!0),Ht=Uu("NOT NULL",!0),jt=Uu("TRUE",!0),Yt=Uu("TO",!0),Bt=Uu("FALSE",!0),Xt=Uu("SHOW",!0),Wt=Uu("DROP",!0),Vt=Uu("USE",!0),Kt=Uu("ALTER",!0),qt=Uu("SELECT",!0),Zt=Uu("CREATE",!0),zt=Uu("TEMPORARY",!0),Jt=Uu("IF NOT EXISTS",!0),Qt=Uu("INSERT",!0),re=Uu("RECURSIVE",!1),te=Uu("REPLACE",!0),ee=Uu("RENAME",!0),ne=Uu("IGNORE",!0),ue=(Uu("PARTITION",!0)),se=Uu("INTO",!0),oe=Uu("FROM",!0),ae=Uu("UNLOCK",!0),ie=Uu("AS",!0),ce=Uu("TABLE",!0),le=Uu("TABLES",!0),fe=Uu("DATABASE",!0),be=Uu("SCHEME",!0),ve=Uu("LEFT",!0),de=Uu("INNER",!0),Le=Uu("JOIN",!0),Ce=Uu("OUTER",!0),pe=Uu("OVER",!0),we=Uu("UNION",!0),Ee=Uu("VALUES",!0),he=Uu("USING",!0),Ae=Uu("WHERE",!0),ye=Uu("GROUP",!0),Te=Uu("BY",!0),me=Uu("ORDER",!0),Se=Uu("HAVING",!0),Ie=Uu("LIMIT",!0),Ne=Uu("OFFSET",!0),Re=Uu("ASC",!0),_e=Uu("DESC",!0),Oe=Uu("DESCRIBE",!0),ge=Uu("ALL",!0),xe=Uu("DISTINCT",!0),Ue=Uu("BETWEEN",!0),Me=Uu("IN",!0),De=Uu("IS",!0),ke=Uu("LIKE",!0),$e=Uu("RLIKE",!0),Fe=Uu("REGEXP",!0),Pe=Uu("EXISTS",!0),Ge=Uu("AND",!0),He=Uu("OR",!0),je=Uu("COUNT",!0),Ye=Uu("MAX",!0),Be=Uu("MIN",!0),Xe=Uu("SUM",!0),We=Uu("AVG",!0),Ve=Uu("CALL",!0),Ke=Uu("CASE",!0),qe=Uu("WHEN",!0),Ze=Uu("THEN",!0),ze=Uu("ELSE",!0),Je=Uu("END",!0),Qe=Uu("CAST",!0),rn=Uu("BIT",!0),tn=Uu("CHAR",!0),en=Uu("VARCHAR",!0),nn=Uu("NUMERIC",!0),un=Uu("DECIMAL",!0),sn=Uu("SIGNED",!0),on=Uu("UNSIGNED",!0),an=Uu("INT",!0),cn=Uu("ZEROFILL",!0),ln=Uu("INTEGER",!0),fn=Uu("JSON",!0),bn=Uu("SMALLINT",!0),vn=Uu("TINYINT",!0),dn=Uu("TINYTEXT",!0),Ln=Uu("TEXT",!0),Cn=Uu("MEDIUMTEXT",!0),pn=Uu("LONGTEXT",!0),wn=Uu("BIGINT",!0),En=Uu("ENUM",!0),hn=Uu("FLOAT",!0),An=Uu("DOUBLE",!0),yn=Uu("DATE",!0),Tn=Uu("DATETIME",!0),mn=Uu("TIME",!0),Sn=Uu("TIMESTAMP",!0),In=Uu("TRUNCATE",!0),Nn=Uu("USER",!0),Rn=Uu("CURRENT_DATE",!0),_n=(Uu("INTERVAL",!0)),On=Uu("YEAR",!0),gn=Uu("MONTH",!0),xn=Uu("DAY",!0),Un=Uu("HOUR",!0),Mn=Uu("MINUTE",!0),Dn=Uu("SECOND",!0),kn=Uu("CURRENT_TIME",!0),$n=Uu("CURRENT_TIMESTAMP",!0),Fn=Uu("CURRENT_USER",!0),Pn=Uu("SESSION_USER",!0),Gn=Uu("SYSTEM_USER",!0),Hn=Uu("GLOBAL",!0),jn=Uu("SESSION",!0),Yn=Uu("PERSIST",!0),Bn=Uu("PERSIST_ONLY",!0),Xn=Uu("@",!1),Wn=Uu("@@",!1),Vn=Uu("$",!1),Kn=Uu("return",!0),qn=Uu(":=",!1),Zn=Uu("DUAL",!0),zn=Uu("ADD",!0),Jn=Uu("COLUMN",!0),Qn=Uu("INDEX",!0),ru=Uu("FULLTEXT",!0),tu=Uu("SPATIAL",!0),eu=Uu("COMMENT",!0),nu=Uu("CONSTRAINT",!0),uu=Uu("REFERENCES",!0),su=Uu("SQL_CALC_FOUND_ROWS",!0),ou=Uu("SQL_CACHE",!0),au=Uu("SQL_NO_CACHE",!0),iu=Uu("SQL_SMALL_RESULT",!0),cu=Uu("SQL_BIG_RESULT",!0),lu=Uu("SQL_BUFFER_RESULT",!0),fu=Uu(",",!1),bu=Uu("[",!1),vu=Uu("]",!1),du=Uu(";",!1),Lu=Uu("->",!1),Cu=Uu("->>",!1),pu=Uu("&&",!1),wu=Uu("/*",!1),Eu=Uu("*/",!1),hu=Uu("--",!1),Au=Uu("#",!1),yu={type:"any"},Tu=/^[ \t\n\r]/,mu=Mu([" ","\t","\n","\r"],!1,!1),Su=function(r){return {dataType:r}},Iu=/^[0-6]/,Nu=Mu([["0","6"]],!1,!1),Ru=0,_u=[{line:1,column:1}],Ou=0,gu=[],xu=0;if("startRule"in t){if(!(t.startRule in o))throw new Error("Can't start parsing from rule \""+t.startRule+'".');a=o[t.startRule];}function Uu(r,t){return {type:"literal",text:r,ignoreCase:t}}function Mu(r,t,e){return {type:"class",parts:r,inverted:t,ignoreCase:e}}function Du(t){var e,n=_u[t];if(n)return n;for(e=t-1;!_u[e];)e--;for(n={line:(n=_u[e]).line,column:n.column};e<t;)10===r.charCodeAt(e)?(n.line++,n.column=1):n.column++,e++;return _u[t]=n,n}function ku(r,t){var e=Du(r),n=Du(t);return {start:{offset:r,line:e.line,column:e.column},end:{offset:t,line:n.line,column:n.column}}}function $u(r){Ru<Ou||(Ru>Ou&&(Ou=Ru,gu=[]),gu.push(r));}function Fu(r,t,e){return new u(u.buildMessage(r,t),r,t,e)}function Pu(){var r,t;return r=Ru,Fa()!==s?((t=function(){var r,t,e,n,u,o,a,i;if(r=Ru,(t=Hu())!==s){if(e=[],n=Ru,(u=Fa())!==s&&(o=ka())!==s&&(a=Fa())!==s&&(i=Hu())!==s?n=u=[u,o,a,i]:(Ru=n,n=s),n!==s)for(;n!==s;)e.push(n),n=Ru,(u=Fa())!==s&&(o=ka())!==s&&(a=Fa())!==s&&(i=Hu())!==s?n=u=[u,o,a,i]:(Ru=n,n=s);else e=s;e!==s?(t=function(r,t){const e=[r&&r.ast||r];for(let r=0;r<t.length;r++)t[r][3]&&0!==t[r][3].length&&e.push(t[r][3]&&t[r][3].ast||t[r][3]);return {tableList:Array.from(vi),columnList:fi(di),ast:e}}(t,e),r=t):(Ru=r,r=s);}else Ru=r,r=s;return r}())===s&&(t=Gu())===s&&(t=Hu()),t!==s?(r=t):(Ru=r,r=s)):(Ru=r,r=s),r}function Gu(){var t;return (t=function(){var t,e,n;t=Ru,(e=function(){var t,e,n,u;t=Ru,"analyze"===r.substr(Ru,7).toLowerCase()?(e=r.substr(Ru,7),Ru+=7):(e=s,0===xu&&$u(Ft));e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="ANALYZE"):(Ru=t,t=s)):(Ru=t,t=s);return t}())!==s&&Fa()!==s&&(n=Es())!==s&&Fa()!==s?(u=e,o=n,vi.add(`${u}::${o.db}::${o.table}`),e={tableList:Array.from(vi),columnList:fi(di),ast:{type:u.toLowerCase(),table:o}},t=e):(Ru=t,t=s);var u,o;return t}())===s&&(t=function(){var t,e,n,u,o,a;t=Ru,(e=function(){var t,e,n,u;t=Ru,"attach"===r.substr(Ru,6).toLowerCase()?(e=r.substr(Ru,6),Ru+=6):(e=s,0===xu&&$u(Pt));e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="ATTACH"):(Ru=t,t=s)):(Ru=t,t=s);return t}())!==s&&Fa()!==s&&(n=Po())!==s&&Fa()!==s&&(u=$s())!==s&&Fa()!==s&&(o=ko())!==s&&Fa()!==s&&(a=Js())!==s&&Fa()!==s?(i=e,c=n,l=u,f=o,b=a,e={tableList:Array.from(vi),columnList:fi(di),ast:{type:i.toLowerCase(),database:c,expr:l,as:f&&f[0].toLowerCase(),schema:b}},t=e):(Ru=t,t=s);var i,c,l,f,b;return t}())===s&&(t=function(){var r,t,e,n,u,o;r=Ru,(t=Io())!==s&&Fa()!==s&&(e=$o())!==s&&Fa()!==s&&(n=Ls())!==s?(a=t,c=e,(l=n)&&l.forEach(r=>vi.add(`${a}::${r.db}::${r.table}`)),t={tableList:Array.from(vi),columnList:fi(di),ast:{type:a.toLowerCase(),keyword:c.toLowerCase(),name:l}},r=t):(Ru=r,r=s);var a,c,l;r===s&&(r=Ru,(t=Io())!==s&&Fa()!==s&&(e=Ra())!==s&&Fa()!==s&&(n=zs())!==s&&Fa()!==s&&Go()!==s&&Fa()!==s&&(u=Es())!==s&&Fa()!==s?((o=function(){var r,t,e,n,u,o;r=Ru,(t=Vu())===s&&(t=Ku());if(t!==s){for(e=[],n=Ru,(u=Fa())!==s?((o=Vu())===s&&(o=Ku()),o!==s?n=u=[u,o]:(Ru=n,n=s)):(Ru=n,n=s);n!==s;)e.push(n),n=Ru,(u=Fa())!==s?((o=Vu())===s&&(o=Ku()),o!==s?n=u=[u,o]:(Ru=n,n=s)):(Ru=n,n=s);e!==s?(t=i(t,e),r=t):(Ru=r,r=s);}else Ru=r,r=s;return r}())===s&&(o=null),o!==s&&Fa()!==s?(t=function(r,t,e,n,u){return {tableList:Array.from(vi),columnList:fi(di),ast:{type:r.toLowerCase(),keyword:t.toLowerCase(),name:e,table:n,options:u}}}(t,e,n,u,o),r=t):(Ru=r,r=s)):(Ru=r,r=s));return r}())===s&&(t=function(){var t;(t=function(){var t,e,n,u,o,a,i,l,f,b;t=Ru,(e=Ro())!==s&&Fa()!==s?((n=_o())===s&&(n=null),n!==s&&Fa()!==s&&$o()!==s&&Fa()!==s?((u=Oo())===s&&(u=null),u!==s&&Fa()!==s&&(o=Ls())!==s&&Fa()!==s&&(a=function(){var r,t,e,n,u,o,a,i,l;if(r=Ru,(t=Ma())!==s)if(Fa()!==s)if((e=Yu())!==s){for(n=[],u=Ru,(o=Fa())!==s&&(a=xa())!==s&&(i=Fa())!==s&&(l=Yu())!==s?u=o=[o,a,i,l]:(Ru=u,u=s);u!==s;)n.push(u),u=Ru,(o=Fa())!==s&&(a=xa())!==s&&(i=Fa())!==s&&(l=Yu())!==s?u=o=[o,a,i,l]:(Ru=u,u=s);n!==s&&(u=Fa())!==s&&(o=Da())!==s?(t=c(e,n),r=t):(Ru=r,r=s);}else Ru=r,r=s;else Ru=r,r=s;else Ru=r,r=s;return r}())!==s&&Fa()!==s?((i=function(){var r,t,e,n,u,o,a,i;if(r=Ru,(t=Qu())!==s){for(e=[],n=Ru,(u=Fa())!==s?((o=xa())===s&&(o=null),o!==s&&(a=Fa())!==s&&(i=Qu())!==s?n=u=[u,o,a,i]:(Ru=n,n=s)):(Ru=n,n=s);n!==s;)e.push(n),n=Ru,(u=Fa())!==s?((o=xa())===s&&(o=null),o!==s&&(a=Fa())!==s&&(i=Qu())!==s?n=u=[u,o,a,i]:(Ru=n,n=s)):(Ru=n,n=s);e!==s?(t=ii(t,e),r=t):(Ru=r,r=s);}else Ru=r,r=s;return r}())===s&&(i=null),i!==s&&Fa()!==s?((l=function(){var t,e,n,u;t=Ru,"ignore"===r.substr(Ru,6).toLowerCase()?(e=r.substr(Ru,6),Ru+=6):(e=s,0===xu&&$u(ne));e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s);return t}())===s&&(l=go()),l===s&&(l=null),l!==s&&Fa()!==s?((f=ko())===s&&(f=null),f!==s&&Fa()!==s?((b=ju())===s&&(b=null),b!==s?(v=e,d=n,L=u,p=a,w=i,E=l,h=f,A=b,(C=o)&&C.forEach(r=>vi.add(`create::${r.db}::${r.table}`)),e={tableList:Array.from(vi),columnList:fi(di),ast:{type:v[0].toLowerCase(),keyword:"table",temporary:d&&d[0].toLowerCase(),if_not_exists:L&&L[0].toLowerCase(),table:C,ignore_replace:E&&E[0].toLowerCase(),as:h&&h[0].toLowerCase(),query_expr:A&&A.ast,create_definitions:p,table_options:w}},t=e):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s);var v,d,L,C,p,w,E,h,A;t===s&&(t=Ru,(e=Ro())!==s&&Fa()!==s?((n=_o())===s&&(n=null),n!==s&&Fa()!==s&&$o()!==s&&Fa()!==s?((u=Oo())===s&&(u=null),u!==s&&Fa()!==s&&(o=Ls())!==s&&Fa()!==s&&(a=function r(){var t,e;(t=function(){var r,t;r=Ru,Qo()!==s&&Fa()!==s&&(t=Ls())!==s?(r={type:"like",table:t}):(Ru=r,r=s);return r}())===s&&(t=Ru,Ma()!==s&&Fa()!==s&&(e=r())!==s&&Fa()!==s&&Da()!==s?((n=e).parentheses=!0,t=n):(Ru=t,t=s));var n;return t}())!==s?(e=function(r,t,e,n,u){return n&&n.forEach(r=>vi.add(`create::${r.db}::${r.table}`)),{tableList:Array.from(vi),columnList:fi(di),ast:{type:r[0].toLowerCase(),keyword:"table",temporary:t&&t[0].toLowerCase(),if_not_exists:e&&e[0].toLowerCase(),table:n,like:u}}}(e,n,u,o,a),t=e):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s));return t}())===s&&(t=function(){var t,e,n,u,o,a;t=Ru,(e=Ro())!==s&&Fa()!==s?((n=Po())===s&&(n=function(){var t,e,n,u;t=Ru,"scheme"===r.substr(Ru,6).toLowerCase()?(e=r.substr(Ru,6),Ru+=6):(e=s,0===xu&&$u(be));e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="SCHEME"):(Ru=t,t=s)):(Ru=t,t=s);return t}()),n!==s&&Fa()!==s?((u=Oo())===s&&(u=null),u!==s&&Fa()!==s&&(o=eo())!==s&&Fa()!==s?((a=function(){var r,t,e,n,u,o;if(r=Ru,(t=Ju())!==s){for(e=[],n=Ru,(u=Fa())!==s&&(o=Ju())!==s?n=u=[u,o]:(Ru=n,n=s);n!==s;)e.push(n),n=Ru,(u=Fa())!==s&&(o=Ju())!==s?n=u=[u,o]:(Ru=n,n=s);e!==s?(t=i(t,e),r=t):(Ru=r,r=s);}else Ru=r,r=s;return r}())===s&&(a=null),a!==s?(c=e,l=u,f=o,b=a,e={tableList:Array.from(vi),columnList:fi(di),ast:{type:c[0].toLowerCase(),keyword:"database",if_not_exists:l&&l[0].toLowerCase(),database:f,create_definitions:b}},t=e):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s);var c,l,f,b;return t}());return t}())===s&&(t=function(){var t,e,n,u;t=Ru,(e=function(){var t,e,n,u;t=Ru,"truncate"===r.substr(Ru,8).toLowerCase()?(e=r.substr(Ru,8),Ru+=8):(e=s,0===xu&&$u(In));e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="TRUNCATE"):(Ru=t,t=s)):(Ru=t,t=s);return t}())!==s&&Fa()!==s?((n=$o())===s&&(n=null),n!==s&&Fa()!==s&&(u=Ls())!==s?(o=e,a=n,(i=u)&&i.forEach(r=>vi.add(`${o}::${r.db}::${r.table}`)),e={tableList:Array.from(vi),columnList:fi(di),ast:{type:o.toLowerCase(),keyword:a&&a.toLowerCase()||"table",name:i}},t=e):(Ru=t,t=s)):(Ru=t,t=s);var o,a,i;return t}())===s&&(t=function(){var r,t,e;r=Ru,(t=xo())!==s&&Fa()!==s&&$o()!==s&&Fa()!==s&&(e=function(){var r,t,e,n,u,o,a,i;if(r=Ru,(t=fs())!==s){for(e=[],n=Ru,(u=Fa())!==s&&(o=xa())!==s&&(a=Fa())!==s&&(i=fs())!==s?n=u=[u,o,a,i]:(Ru=n,n=s);n!==s;)e.push(n),n=Ru,(u=Fa())!==s&&(o=xa())!==s&&(a=Fa())!==s&&(i=fs())!==s?n=u=[u,o,a,i]:(Ru=n,n=s);e!==s?(t=c(t,e),r=t):(Ru=r,r=s);}else Ru=r,r=s;return r}())!==s?((n=e).forEach(r=>r.forEach(r=>r.table&&vi.add(`rename::${r.db}::${r.table}`))),t={tableList:Array.from(vi),columnList:fi(di),ast:{type:"rename",table:n}},r=t):(Ru=r,r=s);var n;return r}())===s&&(t=function(){var t,e,n;t=Ru,(e=function(){var t,e,n,u;t=Ru,"call"===r.substr(Ru,4).toLowerCase()?(e=r.substr(Ru,4),Ru+=4):(e=s,0===xu&&$u(Ve));e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="CALL"):(Ru=t,t=s)):(Ru=t,t=s);return t}())!==s&&Fa()!==s&&(n=Ja())!==s?(u=n,e={tableList:Array.from(vi),columnList:fi(di),ast:{type:"call",expr:u}},t=e):(Ru=t,t=s);var u;return t}())===s&&(t=function(){var t,e,n;t=Ru,(e=function(){var t,e,n,u;t=Ru,"use"===r.substr(Ru,3).toLowerCase()?(e=r.substr(Ru,3),Ru+=3):(e=s,0===xu&&$u(Vt));e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s);return t}())!==s&&Fa()!==s&&(n=Js())!==s?(u=n,vi.add(`use::${u}::null`),e={tableList:Array.from(vi),columnList:fi(di),ast:{type:"use",db:u}},t=e):(Ru=t,t=s);var u;return t}())===s&&(t=function(){var t,e,n,u;t=Ru,(e=function(){var t,e,n,u;t=Ru,"alter"===r.substr(Ru,5).toLowerCase()?(e=r.substr(Ru,5),Ru+=5):(e=s,0===xu&&$u(Kt));e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s);return t}())!==s&&Fa()!==s&&$o()!==s&&Fa()!==s&&(n=Ls())!==s&&Fa()!==s&&(u=function(){var r,t,e,n,u,o,a,i;if(r=Ru,(t=Wu())!==s){for(e=[],n=Ru,(u=Fa())!==s&&(o=xa())!==s&&(a=Fa())!==s&&(i=Wu())!==s?n=u=[u,o,a,i]:(Ru=n,n=s);n!==s;)e.push(n),n=Ru,(u=Fa())!==s&&(o=xa())!==s&&(a=Fa())!==s&&(i=Wu())!==s?n=u=[u,o,a,i]:(Ru=n,n=s);e!==s?(t=c(t,e),r=t):(Ru=r,r=s);}else Ru=r,r=s;return r}())!==s?(a=u,(o=n)&&o.length>0&&o.forEach(r=>vi.add(`alter::${r.db}::${r.table}`)),e={tableList:Array.from(vi),columnList:fi(di),ast:{type:"alter",table:o,expr:a}},t=e):(Ru=t,t=s);var o,a;return t}())===s&&(t=function(){var t,e,n,u;t=Ru,(e=Do())!==s&&Fa()!==s?((n=function(){var t,e,n,u;t=Ru,"global"===r.substr(Ru,6).toLowerCase()?(e=r.substr(Ru,6),Ru+=6):(e=s,0===xu&&$u(Hn));e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="GLOBAL"):(Ru=t,t=s)):(Ru=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=Ru,"session"===r.substr(Ru,7).toLowerCase()?(e=r.substr(Ru,7),Ru+=7):(e=s,0===xu&&$u(jn));e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="SESSION"):(Ru=t,t=s)):(Ru=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=Ru,"local"===r.substr(Ru,5).toLowerCase()?(e=r.substr(Ru,5),Ru+=5):(e=s,0===xu&&$u(ar));e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="LOCAL"):(Ru=t,t=s)):(Ru=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=Ru,"persist"===r.substr(Ru,7).toLowerCase()?(e=r.substr(Ru,7),Ru+=7):(e=s,0===xu&&$u(Yn));e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="PERSIST"):(Ru=t,t=s)):(Ru=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=Ru,"persist_only"===r.substr(Ru,12).toLowerCase()?(e=r.substr(Ru,12),Ru+=12):(e=s,0===xu&&$u(Bn));e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="PERSIST_ONLY"):(Ru=t,t=s)):(Ru=t,t=s);return t}()),n===s&&(n=null),n!==s&&Fa()!==s&&(u=Wa())!==s?(o=n,(a=u).keyword=o,e={tableList:Array.from(vi),columnList:fi(di),ast:{type:"set",expr:a}},t=e):(Ru=t,t=s)):(Ru=t,t=s);var o,a;return t}())===s&&(t=function(){var t,e,n;t=Ru,(e=function(){var t,e,n,u;t=Ru,"lock"===r.substr(Ru,4).toLowerCase()?(e=r.substr(Ru,4),Ru+=4):(e=s,0===xu&&$u(S));e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s);return t}())!==s&&Fa()!==s&&Fo()!==s&&Fa()!==s&&(n=function(){var r,t,e,n,u,o,a,i;if(r=Ru,(t=rs())!==s){for(e=[],n=Ru,(u=Fa())!==s&&(o=xa())!==s&&(a=Fa())!==s&&(i=rs())!==s?n=u=[u,o,a,i]:(Ru=n,n=s);n!==s;)e.push(n),n=Ru,(u=Fa())!==s&&(o=xa())!==s&&(a=Fa())!==s&&(i=rs())!==s?n=u=[u,o,a,i]:(Ru=n,n=s);e!==s?(t=lr(t,e),r=t):(Ru=r,r=s);}else Ru=r,r=s;return r}())!==s?(u=n,e={tableList:Array.from(vi),columnList:fi(di),ast:{type:"lock",keyword:"tables",tables:u}},t=e):(Ru=t,t=s);var u;return t}())===s&&(t=function(){var t,e;t=Ru,(e=function(){var t,e,n,u;t=Ru,"unlock"===r.substr(Ru,6).toLowerCase()?(e=r.substr(Ru,6),Ru+=6):(e=s,0===xu&&$u(ae));e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s);return t}())!==s&&Fa()!==s&&Fo()!==s?(e={tableList:Array.from(vi),columnList:fi(di),ast:{type:"unlock",keyword:"tables"}},t=e):(Ru=t,t=s);return t}())===s&&(t=function(){var t,e,n,u,o,a,i,c,l;t=Ru,(e=So())!==s&&Fa()!==s?("binary"===r.substr(Ru,6).toLowerCase()?(n=r.substr(Ru,6),Ru+=6):(n=s,0===xu&&$u(fr)),n===s&&("master"===r.substr(Ru,6).toLowerCase()?(n=r.substr(Ru,6),Ru+=6):(n=s,0===xu&&$u(br))),n!==s&&(u=Fa())!==s?("logs"===r.substr(Ru,4).toLowerCase()?(o=r.substr(Ru,4),Ru+=4):(o=s,0===xu&&$u(vr)),o!==s?(f=n,e={tableList:Array.from(vi),columnList:fi(di),ast:{type:"show",suffix:"logs",keyword:f.toLowerCase()}},t=e):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s);var f;t===s&&(t=Ru,(e=So())!==s&&Fa()!==s?("binlog"===r.substr(Ru,6).toLowerCase()?(n=r.substr(Ru,6),Ru+=6):(n=s,0===xu&&$u(dr)),n!==s&&(u=Fa())!==s?("events"===r.substr(Ru,6).toLowerCase()?(o=r.substr(Ru,6),Ru+=6):(o=s,0===xu&&$u(Lr)),o!==s&&(a=Fa())!==s?((i=Xs())===s&&(i=null),i!==s&&Fa()!==s?((c=ls())===s&&(c=null),c!==s&&Fa()!==s?((l=Ss())===s&&(l=null),l!==s?(b=i,v=c,d=l,e={tableList:Array.from(vi),columnList:fi(di),ast:{type:"show",suffix:"events",keyword:"binlog",in:b,from:v,limit:d}},t=e):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s),t===s&&(t=Ru,(e=So())!==s&&Fa()!==s?(n=Ru,"character"===r.substr(Ru,9).toLowerCase()?(u=r.substr(Ru,9),Ru+=9):(u=s,0===xu&&$u(X)),u!==s&&(o=Fa())!==s?("set"===r.substr(Ru,3).toLowerCase()?(a=r.substr(Ru,3),Ru+=3):(a=s,0===xu&&$u(W)),a!==s?n=u=[u,o,a]:(Ru=n,n=s)):(Ru=n,n=s),n===s&&("collation"===r.substr(Ru,9).toLowerCase()?(n=r.substr(Ru,9),Ru+=9):(n=s,0===xu&&$u(Cr))),n!==s&&(u=Fa())!==s?((o=Bs())===s&&(o=As()),o===s&&(o=null),o!==s?(e=function(r,t){let e=Array.isArray(r)&&r||[r];return {tableList:Array.from(vi),columnList:fi(di),ast:{type:"show",suffix:e[2]&&e[2].toLowerCase(),keyword:e[0].toLowerCase(),expr:t}}}(n,o),t=e):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s),t===s&&(t=function(){var t,e,n,u;t=Ru,(e=So())!==s&&Fa()!==s?("grants"===r.substr(Ru,6).toLowerCase()?(n=r.substr(Ru,6),Ru+=6):(n=s,0===xu&&$u(pr)),n!==s&&Fa()!==s?((u=function(){var t,e,n,u,o,a,i;t=Ru,"for"===r.substr(Ru,3).toLowerCase()?(e=r.substr(Ru,3),Ru+=3):(e=s,0===xu&&$u(g));e!==s&&Fa()!==s&&(n=Js())!==s&&Fa()!==s?(u=Ru,(o=ma())!==s&&(a=Fa())!==s&&(i=Js())!==s?u=o=[o,a,i]:(Ru=u,u=s),u===s&&(u=null),u!==s&&(o=Fa())!==s?((a=function(){var r,t;r=Ru,Bo()!==s&&Fa()!==s&&(t=function(){var r,t,e,n,u,o,a,i;if(r=Ru,(t=Js())!==s){for(e=[],n=Ru,(u=Fa())!==s&&(o=xa())!==s&&(a=Fa())!==s&&(i=Js())!==s?n=u=[u,o,a,i]:(Ru=n,n=s);n!==s;)e.push(n),n=Ru,(u=Fa())!==s&&(o=xa())!==s&&(a=Fa())!==s&&(i=Js())!==s?n=u=[u,o,a,i]:(Ru=n,n=s);e!==s?(t=lr(t,e),r=t):(Ru=r,r=s);}else Ru=r,r=s;return r}())!==s?(r=t):(Ru=r,r=s);return r}())===s&&(a=null),a!==s?(l=a,e={user:n,host:(c=u)&&c[2],role_list:l},t=e):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s);var c,l;return t}())===s&&(u=null),u!==s?(e=function(r){return {tableList:Array.from(vi),columnList:fi(di),ast:{type:"show",keyword:"grants",for:r}}}(u),t=e):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s);return t}())));var b,v,d;return t}())===s&&(t=function(){var t,e,n;t=Ru,(e=Vo())===s&&(e=function(){var t,e,n,u;t=Ru,"describe"===r.substr(Ru,8).toLowerCase()?(e=r.substr(Ru,8),Ru+=8):(e=s,0===xu&&$u(Oe));e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="DESCRIBE"):(Ru=t,t=s)):(Ru=t,t=s);return t}());e!==s&&Fa()!==s&&(n=Js())!==s?(u=n,e={tableList:Array.from(vi),columnList:fi(di),ast:{type:"desc",table:u}},t=e):(Ru=t,t=s);var u;return t}()),t}function Hu(){var t;return (t=ju())===s&&(t=function(){var r,t,e,n,u,o,a;r=Ru,(t=No())!==s&&Fa()!==s&&(e=Ls())!==s&&Fa()!==s&&Do()!==s&&Fa()!==s&&(n=Is())!==s&&Fa()!==s?((u=As())===s&&(u=null),u!==s&&Fa()!==s?((o=ys())===s&&(o=null),o!==s&&Fa()!==s?((a=Ss())===s&&(a=null),a!==s?(c=n,l=u,f=o,b=a,(i=e)&&i.forEach(r=>{const{db:t,as:e,table:n}=r;vi.add(`update::${t}::${n}`);}),c&&c.forEach(r=>di.add(`update::${r.table}::${r.column}`)),t={tableList:Array.from(vi),columnList:fi(di),ast:{type:"update",table:i,set:c,where:l,orderby:f,limit:b}},r=t):(Ru=r,r=s)):(Ru=r,r=s)):(Ru=r,r=s)):(Ru=r,r=s);var i,c,l,f,b;return r}())===s&&(t=function(){var r,t,e,n,u,o,a,i;r=Ru,(t=gs())!==s&&Fa()!==s?((e=Mo())===s&&(e=null),e!==s&&Fa()!==s&&(n=Es())!==s&&Fa()!==s?((u=_s())===s&&(u=null),u!==s&&Fa()!==s&&Ma()!==s&&Fa()!==s&&(o=function(){var r,t,e,n,u,o,a,i;if(r=Ru,(t=ro())!==s){for(e=[],n=Ru,(u=Fa())!==s&&(o=xa())!==s&&(a=Fa())!==s&&(i=ro())!==s?n=u=[u,o,a,i]:(Ru=n,n=s);n!==s;)e.push(n),n=Ru,(u=Fa())!==s&&(o=xa())!==s&&(a=Fa())!==s&&(i=ro())!==s?n=u=[u,o,a,i]:(Ru=n,n=s);e!==s?(t=c(t,e),r=t):(Ru=r,r=s);}else Ru=r,r=s;return r}())!==s&&Fa()!==s&&Da()!==s&&Fa()!==s&&(a=Rs())!==s&&Fa()!==s?((i=Os())===s&&(i=null),i!==s?(t=function(r,t,e,n,u,s){if(t&&(vi.add(`insert::${t.db}::${t.table}`),t.as=null),n){let r=t&&t.table||null;Array.isArray(u)&&u.forEach((r,t)=>{if(r.value.length!=n.length)throw new Error("Error: column count doesn't match value count at row "+(t+1))}),n.forEach(t=>di.add(`insert::${r}::${t}`));}return {tableList:Array.from(vi),columnList:fi(di),ast:{type:r,table:[t],columns:n,values:u,partition:e,on_duplicate_update:s}}}(t,n,u,o,a,i),r=t):(Ru=r,r=s)):(Ru=r,r=s)):(Ru=r,r=s)):(Ru=r,r=s);return r}())===s&&(t=function(){var r,t,e,n,u,o;r=Ru,(t=gs())!==s&&Fa()!==s&&Mo()!==s&&Fa()!==s&&(e=Es())!==s&&Fa()!==s?((n=_s())===s&&(n=null),n!==s&&Fa()!==s&&(u=Rs())!==s&&Fa()!==s?((o=Os())===s&&(o=null),o!==s?(a=t,c=n,l=u,f=o,(i=e)&&(vi.add(`insert::${i.db}::${i.table}`),di.add(`insert::${i.table}::(.*)`),i.as=null),t={tableList:Array.from(vi),columnList:fi(di),ast:{type:a,table:[i],columns:null,values:l,partition:c,on_duplicate_update:f}},r=t):(Ru=r,r=s)):(Ru=r,r=s)):(Ru=r,r=s);var a,i,c,l,f;return r}())===s&&(t=function(){var r,t,e,n,u,o;r=Ru,(t=gs())!==s&&Fa()!==s&&Mo()!==s&&Fa()!==s&&(e=Es())!==s&&Fa()!==s?((n=_s())===s&&(n=null),n!==s&&Fa()!==s&&Do()!==s&&Fa()!==s&&(u=Is())!==s&&Fa()!==s?((o=Os())===s&&(o=null),o!==s?(a=t,c=n,l=u,f=o,(i=e)&&(vi.add(`insert::${i.db}::${i.table}`),di.add(`insert::${i.table}::(.*)`),i.as=null),t={tableList:Array.from(vi),columnList:fi(di),ast:{type:a,table:[i],columns:null,partition:c,set:l,on_duplicate_update:f}},r=t):(Ru=r,r=s)):(Ru=r,r=s)):(Ru=r,r=s);var a,i,c,l,f;return r}())===s&&(t=function(){var t,e,n,u,o,a,i;t=Ru,(e=function(){var t,e,n,u;t=Ru,"delete"===r.substr(Ru,6).toLowerCase()?(e=r.substr(Ru,6),Ru+=6):(e=s,0===xu&&$u(F));e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s);return t}())!==s&&Fa()!==s?((n=Ls())===s&&(n=null),n!==s&&Fa()!==s&&(u=ls())!==s&&Fa()!==s?((o=As())===s&&(o=null),o!==s&&Fa()!==s?((a=ys())===s&&(a=null),a!==s&&Fa()!==s?((i=Ss())===s&&(i=null),i!==s?(e=function(r,t,e,n,u){if(t&&t.forEach(r=>{r.table&&vi.add(`delete::${r.db}::${r.table}`),di.add(`delete::${r.table}::(.*)`);}),null===r&&1===t.length){const e=t[0];r=[{db:e.db,table:e.table,as:e.as,addition:!0}];}return {tableList:Array.from(vi),columnList:fi(di),ast:{type:"delete",table:r,from:t,where:e,orderby:n,limit:u}}}(n,u,o,a,i),t=e):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s);return t}())===s&&(t=Gu())===s&&(t=function(){var r,t;r=[],t=Xa();for(;t!==s;)r.push(t),t=Xa();return r}()),t}function ju(){var r,t,e,n,u,o,a,i,c,l;if(r=Ru,(t=ts())!==s){for(e=[],n=Ru,(u=Fa())!==s&&(o=jo())!==s&&(a=Fa())!==s?((i=Ko())===s&&(i=null),i!==s&&(c=Fa())!==s&&(l=ts())!==s?n=u=[u,o,a,i,c,l]:(Ru=n,n=s)):(Ru=n,n=s);n!==s;)e.push(n),n=Ru,(u=Fa())!==s&&(o=jo())!==s&&(a=Fa())!==s?((i=Ko())===s&&(i=null),i!==s&&(c=Fa())!==s&&(l=ts())!==s?n=u=[u,o,a,i,c,l]:(Ru=n,n=s)):(Ru=n,n=s);e!==s&&(n=Fa())!==s?((u=ys())===s&&(u=null),u!==s&&(o=Fa())!==s?((a=Ss())===s&&(a=null),a!==s?(r=t=function(r,t,e,n){let u=r;for(let r=0;r<t.length;r++)u._next=t[r][5],u.union=t[r][3]?"union all":"union",u=u._next;return e&&(r._orderby=e),n&&(r._limit=n),{tableList:Array.from(vi),columnList:fi(di),ast:r}}(t,e,u,a)):(Ru=r,r=s)):(Ru=r,r=s)):(Ru=r,r=s);}else Ru=r,r=s;return r}function Yu(){var t;return (t=function(){var t;(t=function(){var t,e,n,u,o,a,i,c;t=Ru,(e=qu())===s&&(e=null);e!==s&&Fa()!==s?(n=Ru,"primary"===r.substr(Ru,7).toLowerCase()?(u=r.substr(Ru,7),Ru+=7):(u=s,0===xu&&$u(b)),u!==s&&(o=Fa())!==s?("key"===r.substr(Ru,3).toLowerCase()?(a=r.substr(Ru,3),Ru+=3):(a=s,0===xu&&$u(v)),a!==s?n=u=[u,o,a]:(Ru=n,n=s)):(Ru=n,n=s),n!==s&&(u=Fa())!==s?((o=bs())===s&&(o=null),o!==s&&(a=Fa())!==s&&(i=us())!==s&&Fa()!==s?((c=vs())===s&&(c=null),c!==s?(f=n,d=o,L=i,C=c,e={constraint:(l=e)&&l.constraint,definition:L,constraint_type:`${f[0].toLowerCase()} ${f[2].toLowerCase()}`,keyword:l&&l.keyword,index_type:d,resource:"constraint",index_options:C},t=e):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s);var l,f,d,L,C;return t}())===s&&(t=function(){var t,e,n,u,o,a,i,c;t=Ru,(e=qu())===s&&(e=null);e!==s&&Fa()!==s&&(n=function(){var t,e,n,u;t=Ru,"unique"===r.substr(Ru,6).toLowerCase()?(e=r.substr(Ru,6),Ru+=6):(e=s,0===xu&&$u(f));e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="UNIQUE"):(Ru=t,t=s)):(Ru=t,t=s);return t}())!==s&&Fa()!==s?((u=Ra())===s&&(u=_a()),u===s&&(u=null),u!==s&&Fa()!==s?((o=ro())===s&&(o=null),o!==s&&Fa()!==s?((a=bs())===s&&(a=null),a!==s&&Fa()!==s&&(i=us())!==s&&Fa()!==s?((c=vs())===s&&(c=null),c!==s?(b=n,v=u,d=o,L=a,C=i,p=c,e={constraint:(l=e)&&l.constraint,definition:C,constraint_type:v&&`${b.toLowerCase()} ${v.toLowerCase()}`||b.toLowerCase(),keyword:l&&l.keyword,index_type:L,index:d,resource:"constraint",index_options:p},t=e):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s);var l,b,v,d,L,C,p;return t}())===s&&(t=function(){var t,e,n,u,o,a;t=Ru,(e=qu())===s&&(e=null);e!==s&&Fa()!==s?("foreign key"===r.substr(Ru,11).toLowerCase()?(n=r.substr(Ru,11),Ru+=11):(n=s,0===xu&&$u(U)),n!==s&&Fa()!==s?((u=ro())===s&&(u=null),u!==s&&Fa()!==s&&(o=us())!==s&&Fa()!==s?((a=Zu())===s&&(a=null),a!==s?(c=n,l=u,f=o,b=a,e={constraint:(i=e)&&i.constraint,definition:f,constraint_type:c,keyword:i&&i.keyword,index:l,resource:"constraint",reference_definition:b},t=e):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s);var i,c,l,f,b;return t}())===s&&(t=function(){var t,e,n,u,o,a,i,c,l,f;t=Ru,(e=qu())===s&&(e=null);e!==s&&Fa()!==s?("check"===r.substr(Ru,5).toLowerCase()?(n=r.substr(Ru,5),Ru+=5):(n=s,0===xu&&$u(_)),n!==s&&Fa()!==s?(u=Ru,"not"===r.substr(Ru,3).toLowerCase()?(o=r.substr(Ru,3),Ru+=3):(o=s,0===xu&&$u(O)),o!==s&&(a=Fa())!==s?("for"===r.substr(Ru,3).toLowerCase()?(i=r.substr(Ru,3),Ru+=3):(i=s,0===xu&&$u(g)),i!==s&&(c=Fa())!==s?("replication"===r.substr(Ru,11).toLowerCase()?(l=r.substr(Ru,11),Ru+=11):(l=s,0===xu&&$u(x)),l!==s&&(f=Fa())!==s?u=o=[o,a,i,c,l,f]:(Ru=u,u=s)):(Ru=u,u=s)):(Ru=u,u=s),u===s&&(u=null),u!==s&&(o=Ma())!==s&&(a=Fa())!==s&&(i=$s())!==s&&(c=Fa())!==s&&(l=Da())!==s?(b=e,v=u,d=i,e={constraint_type:n.toLowerCase(),keyword:b&&b.keyword,constraint:b&&b.constraint,index_type:v&&{keyword:"not for replication"},definition:[d],resource:"constraint"},t=e):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s);var b,v,d;return t}());return t}())===s&&(t=Bu())===s&&(t=function(){var r,t,e,n,u,o;r=Ru,(t=Ra())===s&&(t=_a());t!==s&&Fa()!==s?((e=ro())===s&&(e=null),e!==s&&Fa()!==s?((n=bs())===s&&(n=null),n!==s&&Fa()!==s&&(u=us())!==s&&Fa()!==s?((o=vs())===s&&(o=null),o!==s&&Fa()!==s?(a=n,i=o,t={index:e,definition:u,keyword:t.toLowerCase(),index_type:a,resource:"index",index_options:i},r=t):(Ru=r,r=s)):(Ru=r,r=s)):(Ru=r,r=s)):(Ru=r,r=s);var a,i;return r}())===s&&(t=function(){var t,e,n,u,o,a;t=Ru,(e=function(){var t,e,n,u;t=Ru,"fulltext"===r.substr(Ru,8).toLowerCase()?(e=r.substr(Ru,8),Ru+=8):(e=s,0===xu&&$u(ru));e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="FULLTEXT"):(Ru=t,t=s)):(Ru=t,t=s);return t}())===s&&(e=function(){var t,e,n,u;t=Ru,"spatial"===r.substr(Ru,7).toLowerCase()?(e=r.substr(Ru,7),Ru+=7):(e=s,0===xu&&$u(tu));e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="SPATIAL"):(Ru=t,t=s)):(Ru=t,t=s);return t}());e!==s&&Fa()!==s?((n=Ra())===s&&(n=_a()),n===s&&(n=null),n!==s&&Fa()!==s?((u=ro())===s&&(u=null),u!==s&&Fa()!==s&&(o=us())!==s&&Fa()!==s?((a=vs())===s&&(a=null),a!==s&&Fa()!==s?(i=e,l=a,e={index:u,definition:o,keyword:(c=n)&&`${i.toLowerCase()} ${c.toLowerCase()}`||i.toLowerCase(),index_options:l,resource:"index"},t=e):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s);var i,c,l;return t}()),t}function Bu(){var t,e,n,u,o,a,i,c,A,y,T,m,S,I,N,R,_,O,g,x,U,M,D,k,$;return t=Ru,(e=zs())!==s&&Fa()!==s&&(n=ei())!==s&&Fa()!==s?((u=function(){var e;(e=function(){var t,e,n,u;t=Ru,"not null"===r.substr(Ru,8).toLowerCase()?(e=r.substr(Ru,8),Ru+=8):(e=s,0===xu&&$u(Ht));e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s);return t}())!==s&&(e={type:"not null",value:"not null"});return e}())===s&&(u=lo()),u===s&&(u=null),u!==s&&Fa()!==s?((o=function(){var r,t;r=Ru,To()!==s&&Fa()!==s?((t=co())===s&&(t=$s()),t!==s?(r={type:"default",value:t}):(Ru=r,r=s)):(Ru=r,r=s);return r}())===s&&(o=null),o!==s&&Fa()!==s?("auto_increment"===r.substr(Ru,14).toLowerCase()?(a=r.substr(Ru,14),Ru+=14):(a=s,0===xu&&$u(l)),a===s&&(a=null),a!==s&&Fa()!==s?(i=Ru,"unique"===r.substr(Ru,6).toLowerCase()?(c=r.substr(Ru,6),Ru+=6):(c=s,0===xu&&$u(f)),c===s&&("primary"===r.substr(Ru,7).toLowerCase()?(c=r.substr(Ru,7),Ru+=7):(c=s,0===xu&&$u(b))),c===s&&(c=null),c!==s&&(A=Fa())!==s?("key"===r.substr(Ru,3).toLowerCase()?(y=r.substr(Ru,3),Ru+=3):(y=s,0===xu&&$u(v)),y!==s?i=c=[c,A,y]:(Ru=i,i=s)):(Ru=i,i=s),i===s&&(i=null),i!==s&&(c=Fa())!==s?((A=Ha())===s&&(A=null),A!==s&&(y=Fa())!==s?((T=Xu())===s&&(T=null),T!==s&&Fa()!==s?((m=function(){var t,e,n;t=Ru,"column_format"===r.substr(Ru,13).toLowerCase()?(e=r.substr(Ru,13),Ru+=13):(e=s,0===xu&&$u(d));e!==s&&Fa()!==s?("fixed"===r.substr(Ru,5).toLowerCase()?(n=r.substr(Ru,5),Ru+=5):(n=s,0===xu&&$u(L)),n===s&&("dynamic"===r.substr(Ru,7).toLowerCase()?(n=r.substr(Ru,7),Ru+=7):(n=s,0===xu&&$u(C)),n===s&&("default"===r.substr(Ru,7).toLowerCase()?(n=r.substr(Ru,7),Ru+=7):(n=s,0===xu&&$u(p)))),n!==s?(e=function(r,t){return {type:"column_format",value:t.toLowerCase()}}(0,n),t=e):(Ru=t,t=s)):(Ru=t,t=s);return t}())===s&&(m=null),m!==s&&Fa()!==s?((S=function(){var t,e,n;t=Ru,"storage"===r.substr(Ru,7).toLowerCase()?(e=r.substr(Ru,7),Ru+=7):(e=s,0===xu&&$u(w));e!==s&&Fa()!==s?("disk"===r.substr(Ru,4).toLowerCase()?(n=r.substr(Ru,4),Ru+=4):(n=s,0===xu&&$u(E)),n===s&&("memory"===r.substr(Ru,6).toLowerCase()?(n=r.substr(Ru,6),Ru+=6):(n=s,0===xu&&$u(h))),n!==s?(e={type:"storage",value:n.toLowerCase()},t=e):(Ru=t,t=s)):(Ru=t,t=s);return t}())===s&&(S=null),S!==s&&Fa()!==s?((I=Zu())===s&&(I=null),I!==s?(N=e,R=n,_=u,O=o,g=a,x=i,U=A,M=T,D=m,k=S,$=I,di.add(`create::${N.table}::${N.column}`),_&&!_.value&&(_.value="null"),t=e={column:N,definition:R,nullable:_,default_val:O,auto_increment:g&&g.toLowerCase(),unique_or_primary:x&&`${x[0].toLowerCase()} ${x[2].toLowerCase()}`,comment:U,collate:M,column_format:D,storage:k,reference_definition:$,resource:"column"}):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s),t}function Xu(){var t,e,n;return t=Ru,function(){var t,e,n,u;t=Ru,"collate"===r.substr(Ru,7).toLowerCase()?(e=r.substr(Ru,7),Ru+=7):(e=s,0===xu&&$u(K));e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="COLLATE"):(Ru=t,t=s)):(Ru=t,t=s);return t}()!==s&&Fa()!==s?((e=Ia())===s&&(e=null),e!==s&&Fa()!==s&&(n=eo())!==s?(t={type:"collate",symbol:e,value:n}):(Ru=t,t=s)):(Ru=t,t=s),t}function Wu(){var t;return (t=function(){var t,e,n,u;t=Ru,(e=function(){var t,e,n,u;t=Ru,"add"===r.substr(Ru,3).toLowerCase()?(e=r.substr(Ru,3),Ru+=3):(e=s,0===xu&&$u(zn));e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="ADD"):(Ru=t,t=s)):(Ru=t,t=s);return t}())!==s&&Fa()!==s?((n=Na())===s&&(n=null),n!==s&&Fa()!==s&&(u=Bu())!==s?(o=n,a=u,e={action:"add",...a,keyword:o,resource:"column",type:"alter"},t=e):(Ru=t,t=s)):(Ru=t,t=s);var o,a;return t}())===s&&(t=function(){var r,t,e;r=Ru,Io()!==s&&Fa()!==s?((t=Na())===s&&(t=null),t!==s&&Fa()!==s&&(e=zs())!==s?(r={action:"drop",column:e,keyword:t,resource:"column",type:"alter"}):(Ru=r,r=s)):(Ru=r,r=s);return r}())===s&&(t=function(){var r,t,e,n;r=Ru,(t=xo())!==s&&Fa()!==s?((e=mo())===s&&(e=ko()),e===s&&(e=null),e!==s&&Fa()!==s&&(n=Js())!==s?(o=n,t={action:"rename",type:"alter",resource:"table",keyword:(u=e)&&u[0].toLowerCase(),table:o},r=t):(Ru=r,r=s)):(Ru=r,r=s);var u,o;return r}()),t}function Vu(){var t,e,n,u;return t=Ru,"algorithm"===r.substr(Ru,9).toLowerCase()?(e=r.substr(Ru,9),Ru+=9):(e=s,0===xu&&$u(A)),e!==s&&Fa()!==s?((n=Ia())===s&&(n=null),n!==s&&Fa()!==s?("default"===r.substr(Ru,7).toLowerCase()?(u=r.substr(Ru,7),Ru+=7):(u=s,0===xu&&$u(p)),u===s&&("instant"===r.substr(Ru,7).toLowerCase()?(u=r.substr(Ru,7),Ru+=7):(u=s,0===xu&&$u(y)),u===s&&("inplace"===r.substr(Ru,7).toLowerCase()?(u=r.substr(Ru,7),Ru+=7):(u=s,0===xu&&$u(T)),u===s&&("copy"===r.substr(Ru,4).toLowerCase()?(u=r.substr(Ru,4),Ru+=4):(u=s,0===xu&&$u(m))))),u!==s?(t=e={type:"alter",keyword:"algorithm",resource:"algorithm",symbol:n,algorithm:u}):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s),t}function Ku(){var t,e,n,u;return t=Ru,"lock"===r.substr(Ru,4).toLowerCase()?(e=r.substr(Ru,4),Ru+=4):(e=s,0===xu&&$u(S)),e!==s&&Fa()!==s?((n=Ia())===s&&(n=null),n!==s&&Fa()!==s?("default"===r.substr(Ru,7).toLowerCase()?(u=r.substr(Ru,7),Ru+=7):(u=s,0===xu&&$u(p)),u===s&&("none"===r.substr(Ru,4).toLowerCase()?(u=r.substr(Ru,4),Ru+=4):(u=s,0===xu&&$u(I)),u===s&&("shared"===r.substr(Ru,6).toLowerCase()?(u=r.substr(Ru,6),Ru+=6):(u=s,0===xu&&$u(N)),u===s&&("exclusive"===r.substr(Ru,9).toLowerCase()?(u=r.substr(Ru,9),Ru+=9):(u=s,0===xu&&$u(R))))),u!==s?(t=e={type:"alter",keyword:"lock",resource:"lock",symbol:n,lock:u}):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s),t}function qu(){var t,e,n,u;return t=Ru,(e=function(){var t,e,n,u;t=Ru,"constraint"===r.substr(Ru,10).toLowerCase()?(e=r.substr(Ru,10),Ru+=10):(e=s,0===xu&&$u(nu));e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="CONSTRAINT"):(Ru=t,t=s)):(Ru=t,t=s);return t}())!==s&&Fa()!==s?((n=Js())===s&&(n=null),n!==s?(u=n,t=e={keyword:e.toLowerCase(),constraint:u}):(Ru=t,t=s)):(Ru=t,t=s),t}function Zu(){var t,e,n,u,o,a,i,c,l,f;return t=Ru,(e=function(){var t,e,n,u;t=Ru,"references"===r.substr(Ru,10).toLowerCase()?(e=r.substr(Ru,10),Ru+=10):(e=s,0===xu&&$u(uu));e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="REFERENCES"):(Ru=t,t=s)):(Ru=t,t=s);return t}())!==s&&Fa()!==s&&(n=Ls())!==s&&Fa()!==s&&(u=us())!==s&&Fa()!==s?("match full"===r.substr(Ru,10).toLowerCase()?(o=r.substr(Ru,10),Ru+=10):(o=s,0===xu&&$u(M)),o===s&&("match partial"===r.substr(Ru,13).toLowerCase()?(o=r.substr(Ru,13),Ru+=13):(o=s,0===xu&&$u(D)),o===s&&("match simple"===r.substr(Ru,12).toLowerCase()?(o=r.substr(Ru,12),Ru+=12):(o=s,0===xu&&$u(k)))),o===s&&(o=null),o!==s&&Fa()!==s?((a=zu())===s&&(a=null),a!==s&&Fa()!==s?((i=zu())===s&&(i=null),i!==s?(c=o,l=a,f=i,t=e={definition:u,table:n,keyword:e.toLowerCase(),match:c&&c.toLowerCase(),on_delete:l,on_update:f}):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s),t}function zu(){var t,e,n,u,o,a;return t=Ru,"on"===r.substr(Ru,2).toLowerCase()?(e=r.substr(Ru,2),Ru+=2):(e=s,0===xu&&$u($)),e!==s&&Fa()!==s?("delete"===r.substr(Ru,6).toLowerCase()?(n=r.substr(Ru,6),Ru+=6):(n=s,0===xu&&$u(F)),n===s&&("update"===r.substr(Ru,6).toLowerCase()?(n=r.substr(Ru,6),Ru+=6):(n=s,0===xu&&$u(P))),n!==s&&Fa()!==s&&(u=function(){var e;"restrict"===r.substr(Ru,8).toLowerCase()?(e=r.substr(Ru,8),Ru+=8):(e=s,0===xu&&$u(G));e===s&&("cascade"===r.substr(Ru,7).toLowerCase()?(e=r.substr(Ru,7),Ru+=7):(e=s,0===xu&&$u(H)),e===s&&("set null"===r.substr(Ru,8).toLowerCase()?(e=r.substr(Ru,8),Ru+=8):(e=s,0===xu&&$u(j)),e===s&&("no action"===r.substr(Ru,9).toLowerCase()?(e=r.substr(Ru,9),Ru+=9):(e=s,0===xu&&$u(Y)),e===s&&("set default"===r.substr(Ru,11).toLowerCase()?(e=r.substr(Ru,11),Ru+=11):(e=s,0===xu&&$u(B))))));e!==s&&(e=e.toLowerCase());return e}())!==s?(o=n,a=u,t=e={type:`${e.toLowerCase()} ${o.toLowerCase()}`,value:a}):(Ru=t,t=s)):(Ru=t,t=s),t}function Ju(){var t,e,n,u,o,a,i,c,l;return t=Ru,(e=To())===s&&(e=null),e!==s&&Fa()!==s?((n=function(){var t,e,n;return t=Ru,"character"===r.substr(Ru,9).toLowerCase()?(e=r.substr(Ru,9),Ru+=9):(e=s,0===xu&&$u(X)),e!==s&&Fa()!==s?("set"===r.substr(Ru,3).toLowerCase()?(n=r.substr(Ru,3),Ru+=3):(n=s,0===xu&&$u(W)),n!==s?(t=e="CHARACTER SET"):(Ru=t,t=s)):(Ru=t,t=s),t}())===s&&("charset"===r.substr(Ru,7).toLowerCase()?(n=r.substr(Ru,7),Ru+=7):(n=s,0===xu&&$u(V)),n===s&&("collate"===r.substr(Ru,7).toLowerCase()?(n=r.substr(Ru,7),Ru+=7):(n=s,0===xu&&$u(K)))),n!==s&&Fa()!==s?((u=Ia())===s&&(u=null),u!==s&&Fa()!==s&&(o=eo())!==s?(i=n,c=u,l=o,t=e={keyword:(a=e)&&`${a[0].toLowerCase()} ${i.toLowerCase()}`||i.toLowerCase(),symbol:c,value:l}):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s),t}function Qu(){var t,e,n,u,o,a,i,c,f;return t=Ru,"auto_increment"===r.substr(Ru,14).toLowerCase()?(e=r.substr(Ru,14),Ru+=14):(e=s,0===xu&&$u(l)),e===s&&("avg_row_length"===r.substr(Ru,14).toLowerCase()?(e=r.substr(Ru,14),Ru+=14):(e=s,0===xu&&$u(q)),e===s&&("key_block_size"===r.substr(Ru,14).toLowerCase()?(e=r.substr(Ru,14),Ru+=14):(e=s,0===xu&&$u(Z)),e===s&&("max_rows"===r.substr(Ru,8).toLowerCase()?(e=r.substr(Ru,8),Ru+=8):(e=s,0===xu&&$u(z)),e===s&&("min_rows"===r.substr(Ru,8).toLowerCase()?(e=r.substr(Ru,8),Ru+=8):(e=s,0===xu&&$u(J)),e===s&&("stats_sample_pages"===r.substr(Ru,18).toLowerCase()?(e=r.substr(Ru,18),Ru+=18):(e=s,0===xu&&$u(Q))))))),e!==s&&Fa()!==s?((n=Ia())===s&&(n=null),n!==s&&Fa()!==s&&(u=Co())!==s?(c=n,f=u,t=e={keyword:e.toLowerCase(),symbol:c,value:f.value}):(Ru=t,t=s)):(Ru=t,t=s),t===s&&(t=Ju())===s&&(t=Ru,(e=Oa())===s&&("connection"===r.substr(Ru,10).toLowerCase()?(e=r.substr(Ru,10),Ru+=10):(e=s,0===xu&&$u(rr))),e!==s&&Fa()!==s?((n=Ia())===s&&(n=null),n!==s&&Fa()!==s&&(u=fo())!==s?(t=e=function(r,t,e){return {keyword:r.toLowerCase(),symbol:t,value:`'${e.value}'`}}(e,n,u)):(Ru=t,t=s)):(Ru=t,t=s),t===s&&(t=Ru,"compression"===r.substr(Ru,11).toLowerCase()?(e=r.substr(Ru,11),Ru+=11):(e=s,0===xu&&$u(tr)),e!==s&&Fa()!==s?((n=Ia())===s&&(n=null),n!==s&&Fa()!==s?(u=Ru,39===r.charCodeAt(Ru)?(o="'",Ru++):(o=s,0===xu&&$u(er)),o!==s?("zlib"===r.substr(Ru,4).toLowerCase()?(a=r.substr(Ru,4),Ru+=4):(a=s,0===xu&&$u(nr)),a===s&&("lz4"===r.substr(Ru,3).toLowerCase()?(a=r.substr(Ru,3),Ru+=3):(a=s,0===xu&&$u(ur)),a===s&&("none"===r.substr(Ru,4).toLowerCase()?(a=r.substr(Ru,4),Ru+=4):(a=s,0===xu&&$u(I)))),a!==s?(39===r.charCodeAt(Ru)?(i="'",Ru++):(i=s,0===xu&&$u(er)),i!==s?u=o=[o,a,i]:(Ru=u,u=s)):(Ru=u,u=s)):(Ru=u,u=s),u!==s?(t=e=function(r,t,e){return {keyword:r.toLowerCase(),symbol:t,value:e.join("").toUpperCase()}}(e,n,u)):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s),t===s&&(t=Ru,"engine"===r.substr(Ru,6).toLowerCase()?(e=r.substr(Ru,6),Ru+=6):(e=s,0===xu&&$u(sr)),e!==s&&Fa()!==s?((n=Ia())===s&&(n=null),n!==s&&Fa()!==s&&(u=eo())!==s?(t=e=function(r,t,e){return {keyword:r.toLowerCase(),symbol:t,value:e.toUpperCase()}}(e,n,u)):(Ru=t,t=s)):(Ru=t,t=s)))),t}function rs(){var t,e,n,u,o;return t=Ru,(e=ps())!==s&&Fa()!==s&&(n=function(){var t,e,n;return t=Ru,"read"===r.substr(Ru,4).toLowerCase()?(e=r.substr(Ru,4),Ru+=4):(e=s,0===xu&&$u(or)),e!==s&&Fa()!==s?("local"===r.substr(Ru,5).toLowerCase()?(n=r.substr(Ru,5),Ru+=5):(n=s,0===xu&&$u(ar)),n===s&&(n=null),n!==s?(t=e={type:"read",suffix:n&&"local"}):(Ru=t,t=s)):(Ru=t,t=s),t===s&&(t=Ru,"low_priority"===r.substr(Ru,12).toLowerCase()?(e=r.substr(Ru,12),Ru+=12):(e=s,0===xu&&$u(ir)),e===s&&(e=null),e!==s&&Fa()!==s?("write"===r.substr(Ru,5).toLowerCase()?(n=r.substr(Ru,5),Ru+=5):(n=s,0===xu&&$u(cr)),n!==s?(t=e={type:"write",prefix:e&&"low_priority"}):(Ru=t,t=s)):(Ru=t,t=s)),t}())!==s?(u=e,o=n,vi.add(`lock::${u.db}::${u.table}`),t=e={table:u,lock_type:o}):(Ru=t,t=s),t}function ts(){var t,e,n,u,o,a,i;return (t=ss())===s&&(t=Ru,e=Ru,40===r.charCodeAt(Ru)?(n="(",Ru++):(n=s,0===xu&&$u(wr)),n!==s&&(u=Fa())!==s&&(o=ts())!==s&&(a=Fa())!==s?(41===r.charCodeAt(Ru)?(i=")",Ru++):(i=s,0===xu&&$u(Er)),i!==s?e=n=[n,u,o,a,i]:(Ru=e,e=s)):(Ru=e,e=s),e!==s&&(e={...e[2],parentheses_symbol:!0}),t=e),t}function es(){var t,e,n,u,o,a,i,l,f;if(t=Ru,Xo()!==s)if(Fa()!==s)if((e=ns())!==s){for(n=[],u=Ru,(o=Fa())!==s&&(a=xa())!==s&&(i=Fa())!==s&&(l=ns())!==s?u=o=[o,a,i,l]:(Ru=u,u=s);u!==s;)n.push(u),u=Ru,(o=Fa())!==s&&(a=xa())!==s&&(i=Fa())!==s&&(l=ns())!==s?u=o=[o,a,i,l]:(Ru=u,u=s);n!==s?(t=c(e,n)):(Ru=t,t=s);}else Ru=t,t=s;else Ru=t,t=s;else Ru=t,t=s;return t===s&&(t=Ru,Fa()!==s&&Xo()!==s&&(e=Fa())!==s&&(n=function(){var t,e,n,u;t=Ru,"RECURSIVE"===r.substr(Ru,9)?(e="RECURSIVE",Ru+=9):(e=s,0===xu&&$u(re));e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s);return t}())!==s&&(u=Fa())!==s&&(o=ns())!==s?((f=o).recursive=!0,t=[f]):(Ru=t,t=s)),t}function ns(){var r,t,e,n,u;return r=Ru,(t=fo())===s&&(t=eo()),t!==s&&Fa()!==s?((e=us())===s&&(e=null),e!==s&&Fa()!==s&&ko()!==s&&Fa()!==s&&Ma()!==s&&Fa()!==s&&(n=ju())!==s&&Fa()!==s&&Da()!==s?("string"==typeof(u=t)&&(u={type:"default",value:u}),r=t={name:u,stmt:n,columns:e}):(Ru=r,r=s)):(Ru=r,r=s),r}function us(){var r,t,e,n,u,o,a,i;if(r=Ru,Ma()!==s)if(Fa()!==s)if((t=ro())!==s){for(e=[],n=Ru,(u=Fa())!==s&&(o=xa())!==s&&(a=Fa())!==s&&(i=ro())!==s?n=u=[u,o,a,i]:(Ru=n,n=s);n!==s;)e.push(n),n=Ru,(u=Fa())!==s&&(o=xa())!==s&&(a=Fa())!==s&&(i=ro())!==s?n=u=[u,o,a,i]:(Ru=n,n=s);e!==s&&(n=Fa())!==s&&(u=Da())!==s?(r=c(t,e)):(Ru=r,r=s);}else Ru=r,r=s;else Ru=r,r=s;else Ru=r,r=s;return r}function ss(){var t,e,n,u,o,a,i,c,l,f,b,v,d,L,C;return t=Ru,Fa()!==s?((e=es())===s&&(e=null),e!==s&&Fa()!==s&&function(){var t,e,n,u;t=Ru,"select"===r.substr(Ru,6).toLowerCase()?(e=r.substr(Ru,6),Ru+=6):(e=s,0===xu&&$u(qt));e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s);return t}()!==s&&Pa()!==s?((n=function(){var r,t,e,n,u,o;if(r=Ru,(t=os())!==s){for(e=[],n=Ru,(u=Fa())!==s&&(o=os())!==s?n=u=[u,o]:(Ru=n,n=s);n!==s;)e.push(n),n=Ru,(u=Fa())!==s&&(o=os())!==s?n=u=[u,o]:(Ru=n,n=s);e!==s?(t=function(r,t){const e=[r];for(let r=0,n=t.length;r<n;++r)e.push(t[r][1]);return e}(t,e),r=t):(Ru=r,r=s);}else Ru=r,r=s;return r}())===s&&(n=null),n!==s&&Fa()!==s?((u=qo())===s&&(u=null),u!==s&&Fa()!==s&&(o=as())!==s&&Fa()!==s?((a=ls())===s&&(a=null),a!==s&&Fa()!==s?((i=As())===s&&(i=null),i!==s&&Fa()!==s?((c=function(){var t,e,n;t=Ru,(e=function(){var t,e,n,u;t=Ru,"group"===r.substr(Ru,5).toLowerCase()?(e=r.substr(Ru,5),Ru+=5):(e=s,0===xu&&$u(ye));e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s);return t}())!==s&&Fa()!==s&&Wo()!==s&&Fa()!==s&&(n=Us())!==s?(e=n.value,t=e):(Ru=t,t=s);return t}())===s&&(c=null),c!==s&&Fa()!==s?((l=function(){var t,e;t=Ru,function(){var t,e,n,u;t=Ru,"having"===r.substr(Ru,6).toLowerCase()?(e=r.substr(Ru,6),Ru+=6):(e=s,0===xu&&$u(Se));e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s);return t}()!==s&&Fa()!==s&&(e=$s())!==s?(t=e):(Ru=t,t=s);return t}())===s&&(l=null),l!==s&&Fa()!==s?((f=ys())===s&&(f=null),f!==s&&Fa()!==s?((b=Ss())===s&&(b=null),b!==s?(v=Ru,"for"===r.substr(Ru,3).toLowerCase()?(d=r.substr(Ru,3),Ru+=3):(d=s,0===xu&&$u(g)),d!==s&&(L=Fa())!==s&&(C=No())!==s?v=d=[d,L,C]:(Ru=v,v=s),v===s&&(v=null),v!==s?(t=function(r,t,e,n,u,s,o,a,i,c,l){return u&&u.forEach(r=>r.table&&vi.add(`select::${r.db}::${r.table}`)),{with:r,type:"select",options:t,distinct:e,columns:n,from:u,where:s,groupby:o,having:a,orderby:i,limit:c,for_update:l&&`${l[0]} ${l[2][0]}`}}(e,n,u,o,a,i,c,l,f,b,v)):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s),t}function os(){var e;return (e=function(){var t;"sql_calc_found_rows"===r.substr(Ru,19).toLowerCase()?(t=r.substr(Ru,19),Ru+=19):(t=s,0===xu&&$u(su));return t}())===s&&((e=function(){var t;"sql_cache"===r.substr(Ru,9).toLowerCase()?(t=r.substr(Ru,9),Ru+=9):(t=s,0===xu&&$u(ou));return t}())===s&&(e=function(){var t;"sql_no_cache"===r.substr(Ru,12).toLowerCase()?(t=r.substr(Ru,12),Ru+=12):(t=s,0===xu&&$u(au));return t}()),e===s&&(e=function(){var t;"sql_big_result"===r.substr(Ru,14).toLowerCase()?(t=r.substr(Ru,14),Ru+=14):(t=s,0===xu&&$u(cu));return t}())===s&&(e=function(){var t;"sql_small_result"===r.substr(Ru,16).toLowerCase()?(t=r.substr(Ru,16),Ru+=16):(t=s,0===xu&&$u(iu));return t}())===s&&(e=function(){var t;"sql_buffer_result"===r.substr(Ru,17).toLowerCase()?(t=r.substr(Ru,17),Ru+=17):(t=s,0===xu&&$u(lu));return t}())),e!==s&&(e=e),e}function as(){var r,t,e,n,u,o,a,i,l,f;if(r=Ru,(t=Ko())===s&&(t=Ru,(e=Ua())!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s),t===s&&(t=Ua())),t!==s){for(e=[],n=Ru,(u=Fa())!==s&&(o=xa())!==s&&(a=Fa())!==s&&(i=is())!==s?n=u=[u,o,a,i]:(Ru=n,n=s);n!==s;)e.push(n),n=Ru,(u=Fa())!==s&&(o=xa())!==s&&(a=Fa())!==s&&(i=is())!==s?n=u=[u,o,a,i]:(Ru=n,n=s);e!==s?(l=t,f=e,di.add("select::null::(.*)"),r=t=f&&f.length>0?(l[0]={expr:{type:"column_ref",table:null,column:"*"},as:null},ii(l[0],f)):l[0]):(Ru=r,r=s);}else Ru=r,r=s;if(r===s)if(r=Ru,(t=is())!==s){for(e=[],n=Ru,(u=Fa())!==s&&(o=xa())!==s&&(a=Fa())!==s&&(i=is())!==s?n=u=[u,o,a,i]:(Ru=n,n=s);n!==s;)e.push(n),n=Ru,(u=Fa())!==s&&(o=xa())!==s&&(a=Fa())!==s&&(i=is())!==s?n=u=[u,o,a,i]:(Ru=n,n=s);e!==s?(r=t=c(t,e)):(Ru=r,r=s);}else Ru=r,r=s;return r}function is(){var r,t,e,n;return r=Ru,(t=Js())!==s&&Fa()!==s&&(e=ga())!==s&&Fa()!==s&&Ua()!==s?(n=t,di.add(`select::${n}::(.*)`),r=t={expr:{type:"column_ref",table:n,column:"*"},as:null}):(Ru=r,r=s),r===s&&(r=Ru,(t=$s())!==s&&Fa()!==s?((e=cs())===s&&(e=null),e!==s?(r=t={expr:t,as:e}):(Ru=r,r=s)):(Ru=r,r=s)),r}function cs(){var r,t,e;return r=Ru,(t=ko())!==s&&Fa()!==s&&(e=function(){var r,t;r=Ru,(t=eo())!==s?((function(r){if(!0===ui[r.toUpperCase()])throw new Error("Error: "+JSON.stringify(r)+" is a reserved word, can not as alias clause");return !1}(t)?s:void 0)!==s?(r=t=t):(Ru=r,r=s)):(Ru=r,r=s);r===s&&(r=Ru,(t=Qs())!==s&&(t=t),r=t);return r}())!==s?(r=t=e):(Ru=r,r=s),r===s&&(r=Ru,(t=ko())===s&&(t=null),t!==s&&Fa()!==s&&(e=Js())!==s?(r=t=e):(Ru=r,r=s)),r}function ls(){var t,e;return t=Ru,function(){var t,e,n,u;t=Ru,"from"===r.substr(Ru,4).toLowerCase()?(e=r.substr(Ru,4),Ru+=4):(e=s,0===xu&&$u(oe));e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s);return t}()!==s&&Fa()!==s&&(e=Ls())!==s?(t=e):(Ru=t,t=s),t}function fs(){var r,t,e;return r=Ru,(t=Es())!==s&&Fa()!==s&&mo()!==s&&Fa()!==s&&(e=Es())!==s?(r=t=[t,e]):(Ru=r,r=s),r}function bs(){var t,e;return t=Ru,Bo()!==s&&Fa()!==s?("btree"===r.substr(Ru,5).toLowerCase()?(e=r.substr(Ru,5),Ru+=5):(e=s,0===xu&&$u(hr)),e===s&&("hash"===r.substr(Ru,4).toLowerCase()?(e=r.substr(Ru,4),Ru+=4):(e=s,0===xu&&$u(Ar))),e!==s?(t={keyword:"using",type:e.toLowerCase()}):(Ru=t,t=s)):(Ru=t,t=s),t}function vs(){var r,t,e,n,u,o;if(r=Ru,(t=ds())!==s){for(e=[],n=Ru,(u=Fa())!==s&&(o=ds())!==s?n=u=[u,o]:(Ru=n,n=s);n!==s;)e.push(n),n=Ru,(u=Fa())!==s&&(o=ds())!==s?n=u=[u,o]:(Ru=n,n=s);e!==s?(r=t=function(r,t){const e=[r];for(let r=0;r<t.length;r++)e.push(t[r][1]);return e}(t,e)):(Ru=r,r=s);}else Ru=r,r=s;return r}function ds(){var t,e,n,u,o,a;return t=Ru,(e=function(){var t,e,n,u;t=Ru,"key_block_size"===r.substr(Ru,14).toLowerCase()?(e=r.substr(Ru,14),Ru+=14):(e=s,0===xu&&$u(Z));e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="KEY_BLOCK_SIZE"):(Ru=t,t=s)):(Ru=t,t=s);return t}())!==s&&Fa()!==s?((n=Ia())===s&&(n=null),n!==s&&Fa()!==s&&(u=Co())!==s?(o=n,a=u,t=e={type:e.toLowerCase(),symbol:o,expr:a}):(Ru=t,t=s)):(Ru=t,t=s),t===s&&(t=bs())===s&&(t=Ru,"with"===r.substr(Ru,4).toLowerCase()?(e=r.substr(Ru,4),Ru+=4):(e=s,0===xu&&$u(yr)),e!==s&&Fa()!==s?("parser"===r.substr(Ru,6).toLowerCase()?(n=r.substr(Ru,6),Ru+=6):(n=s,0===xu&&$u(Tr)),n!==s&&Fa()!==s&&(u=eo())!==s?(t=e={type:"with parser",expr:u}):(Ru=t,t=s)):(Ru=t,t=s),t===s&&(t=Ru,"visible"===r.substr(Ru,7).toLowerCase()?(e=r.substr(Ru,7),Ru+=7):(e=s,0===xu&&$u(mr)),e===s&&("invisible"===r.substr(Ru,9).toLowerCase()?(e=r.substr(Ru,9),Ru+=9):(e=s,0===xu&&$u(Sr))),e!==s&&(e=function(r){return {type:r.toLowerCase(),expr:r.toLowerCase()}}(e)),(t=e)===s&&(t=Ha()))),t}function Ls(){var r,t,e,n;if(r=Ru,(t=ps())!==s){for(e=[],n=Cs();n!==s;)e.push(n),n=Cs();e!==s?(r=t=Ir(t,e)):(Ru=r,r=s);}else Ru=r,r=s;return r}function Cs(){var r,t,e;return r=Ru,Fa()!==s&&(t=xa())!==s&&Fa()!==s&&(e=ps())!==s?(r=e):(Ru=r,r=s),r===s&&(r=Ru,Fa()!==s&&(t=function(){var r,t,e,n,u,o,a,i,c,l,f;if(r=Ru,(t=ws())!==s)if(Fa()!==s)if((e=ps())!==s)if(Fa()!==s)if((n=Bo())!==s)if(Fa()!==s)if(Ma()!==s)if(Fa()!==s)if((u=eo())!==s){for(o=[],a=Ru,(i=Fa())!==s&&(c=xa())!==s&&(l=Fa())!==s&&(f=eo())!==s?a=i=[i,c,l,f]:(Ru=a,a=s);a!==s;)o.push(a),a=Ru,(i=Fa())!==s&&(c=xa())!==s&&(l=Fa())!==s&&(f=eo())!==s?a=i=[i,c,l,f]:(Ru=a,a=s);o!==s&&(a=Fa())!==s&&(i=Da())!==s?(b=t,d=u,L=o,(v=e).join=b,v.using=ii(d,L),r=t=v):(Ru=r,r=s);}else Ru=r,r=s;else Ru=r,r=s;else Ru=r,r=s;else Ru=r,r=s;else Ru=r,r=s;else Ru=r,r=s;else Ru=r,r=s;else Ru=r,r=s;else Ru=r,r=s;var b,v,d,L;r===s&&(r=Ru,(t=ws())!==s&&Fa()!==s&&(e=ps())!==s&&Fa()!==s?((n=hs())===s&&(n=null),n!==s?(t=function(r,t,e){return t.join=r,t.on=e,t}(t,e,n),r=t):(Ru=r,r=s)):(Ru=r,r=s),r===s&&(r=Ru,(t=ws())!==s&&Fa()!==s&&(e=Ma())!==s&&Fa()!==s&&(n=ju())!==s&&Fa()!==s&&Da()!==s&&Fa()!==s?((u=cs())===s&&(u=null),u!==s&&(o=Fa())!==s?((a=hs())===s&&(a=null),a!==s?(t=function(r,t,e,n){return t.parentheses=!0,{expr:t,as:e,join:r,on:n}}(t,n,u,a),r=t):(Ru=r,r=s)):(Ru=r,r=s)):(Ru=r,r=s)));return r}())!==s?(r=t):(Ru=r,r=s)),r}function ps(){var t,e,n,u,o,a;return t=Ru,(e=function(){var t;"dual"===r.substr(Ru,4).toLowerCase()?(t=r.substr(Ru,4),Ru+=4):(t=s,0===xu&&$u(Zn));return t}())!==s&&(e={type:"dual"}),(t=e)===s&&(t=Ru,(e=eo())!==s&&Fa()!==s&&(n=Ma())!==s&&Fa()!==s&&(u=Us())!==s&&Fa()!==s&&(o=Da())!==s&&Fa()!==s?((a=cs())===s&&(a=null),a!==s?(t=e={expr:{type:"function",name:e,args:u},as:a}):(Ru=t,t=s)):(Ru=t,t=s),t===s&&(t=Ru,(e=Es())!==s&&Fa()!==s?((n=cs())===s&&(n=null),n!==s?(t=e=function(r,t){return "var"===r.type?(r.as=t,r):{db:r.db,table:r.table,as:t}}(e,n)):(Ru=t,t=s)):(Ru=t,t=s),t===s&&(t=Ru,(e=Ma())!==s&&Fa()!==s&&(n=ju())!==s&&Fa()!==s&&(u=Da())!==s&&Fa()!==s?((o=cs())===s&&(o=null),o!==s?(t=e=function(r,t){return r.parentheses=!0,{expr:r,as:t}}(n,o)):(Ru=t,t=s)):(Ru=t,t=s)))),t}function ws(){var t,e,n,u;return t=Ru,(e=function(){var t,e,n,u;t=Ru,"left"===r.substr(Ru,4).toLowerCase()?(e=r.substr(Ru,4),Ru+=4):(e=s,0===xu&&$u(ve));e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s);return t}())!==s&&(n=Fa())!==s?((u=function(){var t,e,n,u;t=Ru,"outer"===r.substr(Ru,5).toLowerCase()?(e=r.substr(Ru,5),Ru+=5):(e=s,0===xu&&$u(Ce));e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s);return t}())===s&&(u=null),u!==s&&Fa()!==s&&Ho()!==s?(t=e="LEFT JOIN"):(Ru=t,t=s)):(Ru=t,t=s),t===s&&(t=Ru,e=Ru,(n=function(){var t,e,n,u;t=Ru,"inner"===r.substr(Ru,5).toLowerCase()?(e=r.substr(Ru,5),Ru+=5):(e=s,0===xu&&$u(de));e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s);return t}())!==s&&(u=Fa())!==s?e=n=[n,u]:(Ru=e,e=s),e===s&&(e=null),e!==s&&(n=Ho())!==s?(t=e="INNER JOIN"):(Ru=t,t=s)),t}function Es(){var r,t,e,n,u,o,a,i;return r=Ru,(t=Js())!==s?(e=Ru,(n=Fa())!==s&&(u=ga())!==s&&(o=Fa())!==s&&(a=Js())!==s?e=n=[n,u,o,a]:(Ru=e,e=s),e===s&&(e=null),e!==s?(r=t=function(r,t){const e={db:null,table:r};return null!==t&&(e.db=r,e.table=t[3]),e}(t,e)):(Ru=r,r=s)):(Ru=r,r=s),r===s&&(r=Ru,(t=ri())!==s&&((i=t).db=null,i.table=i.name,t=i),r=t),r}function hs(){var r,t;return r=Ru,Go()!==s&&Fa()!==s&&(t=$s())!==s?(r=t):(Ru=r,r=s),r}function As(){var t,e;return t=Ru,function(){var t,e,n,u;t=Ru,"where"===r.substr(Ru,5).toLowerCase()?(e=r.substr(Ru,5),Ru+=5):(e=s,0===xu&&$u(Ae));e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s);return t}()!==s&&Fa()!==s&&(e=Fs())!==s?(t=e):(Ru=t,t=s),t}function ys(){var t,e;return t=Ru,function(){var t,e,n,u;t=Ru,"order"===r.substr(Ru,5).toLowerCase()?(e=r.substr(Ru,5),Ru+=5):(e=s,0===xu&&$u(me));e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s);return t}()!==s&&Fa()!==s&&Wo()!==s&&Fa()!==s&&(e=function(){var r,t,e,n,u,o,a,i;if(r=Ru,(t=Ts())!==s){for(e=[],n=Ru,(u=Fa())!==s&&(o=xa())!==s&&(a=Fa())!==s&&(i=Ts())!==s?n=u=[u,o,a,i]:(Ru=n,n=s);n!==s;)e.push(n),n=Ru,(u=Fa())!==s&&(o=xa())!==s&&(a=Fa())!==s&&(i=Ts())!==s?n=u=[u,o,a,i]:(Ru=n,n=s);e!==s?(t=c(t,e),r=t):(Ru=r,r=s);}else Ru=r,r=s;return r}())!==s?(t=e):(Ru=t,t=s),t}function Ts(){var t,e,n;return t=Ru,(e=$s())!==s&&Fa()!==s?((n=Vo())===s&&(n=function(){var t,e,n,u;t=Ru,"asc"===r.substr(Ru,3).toLowerCase()?(e=r.substr(Ru,3),Ru+=3):(e=s,0===xu&&$u(Re));e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="ASC"):(Ru=t,t=s)):(Ru=t,t=s);return t}()),n===s&&(n=null),n!==s?(t=e=function(r,t){const e={expr:r,type:"ASC"};return "DESC"===t&&(e.type="DESC"),e}(e,n)):(Ru=t,t=s)):(Ru=t,t=s),t}function ms(){var r;return (r=Co())===s&&(r=oo()),r}function Ss(){var t,e,n,u,o,a;return t=Ru,function(){var t,e,n,u;t=Ru,"limit"===r.substr(Ru,5).toLowerCase()?(e=r.substr(Ru,5),Ru+=5):(e=s,0===xu&&$u(Ie));e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s);return t}()!==s&&Fa()!==s&&(e=ms())!==s&&Fa()!==s?(n=Ru,(u=xa())===s&&(u=function(){var t,e,n,u;t=Ru,"offset"===r.substr(Ru,6).toLowerCase()?(e=r.substr(Ru,6),Ru+=6):(e=s,0===xu&&$u(Ne));e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="OFFSET"):(Ru=t,t=s)):(Ru=t,t=s);return t}()),u!==s&&(o=Fa())!==s&&(a=ms())!==s?n=u=[u,o,a]:(Ru=n,n=s),n===s&&(n=null),n!==s?(t=function(r,t){const e=[r];return t&&e.push(t[2]),{seperator:t&&t[0]&&t[0].toLowerCase()||"",value:e}}(e,n)):(Ru=t,t=s)):(Ru=t,t=s),t}function Is(){var r,t,e,n,u,o,a,i;if(r=Ru,(t=Ns())!==s){for(e=[],n=Ru,(u=Fa())!==s&&(o=xa())!==s&&(a=Fa())!==s&&(i=Ns())!==s?n=u=[u,o,a,i]:(Ru=n,n=s);n!==s;)e.push(n),n=Ru,(u=Fa())!==s&&(o=xa())!==s&&(a=Fa())!==s&&(i=Ns())!==s?n=u=[u,o,a,i]:(Ru=n,n=s);e!==s?(r=t=c(t,e)):(Ru=r,r=s);}else Ru=r,r=s;return r}function Ns(){var t,e,n,u,o,a,i,c,l;return t=Ru,e=Ru,(n=Js())!==s&&(u=Fa())!==s&&(o=ga())!==s?e=n=[n,u,o]:(Ru=e,e=s),e===s&&(e=null),e!==s&&(n=Fa())!==s&&(u=ro())!==s&&(o=Fa())!==s?(61===r.charCodeAt(Ru)?(a="=",Ru++):(a=s,0===xu&&$u(Nr)),a!==s&&Fa()!==s&&(i=Ws())!==s?(t=e={column:u,value:i,table:(l=e)&&l[0]}):(Ru=t,t=s)):(Ru=t,t=s),t===s&&(t=Ru,e=Ru,(n=Js())!==s&&(u=Fa())!==s&&(o=ga())!==s?e=n=[n,u,o]:(Ru=e,e=s),e===s&&(e=null),e!==s&&(n=Fa())!==s&&(u=ro())!==s&&(o=Fa())!==s?(61===r.charCodeAt(Ru)?(a="=",Ru++):(a=s,0===xu&&$u(Nr)),a!==s&&Fa()!==s&&(i=Yo())!==s&&Fa()!==s&&Ma()!==s&&Fa()!==s&&(c=zs())!==s&&Fa()!==s&&Da()!==s?(t=e=function(r,t,e){return {column:t,value:e,table:r&&r[0],keyword:"values"}}(e,u,c)):(Ru=t,t=s)):(Ru=t,t=s)),t}function Rs(){var r;return (r=function(){var r,t;r=Ru,Yo()!==s&&Fa()!==s&&(t=function(){var r,t,e,n,u,o,a,i;if(r=Ru,(t=xs())!==s){for(e=[],n=Ru,(u=Fa())!==s&&(o=xa())!==s&&(a=Fa())!==s&&(i=xs())!==s?n=u=[u,o,a,i]:(Ru=n,n=s);n!==s;)e.push(n),n=Ru,(u=Fa())!==s&&(o=xa())!==s&&(a=Fa())!==s&&(i=xs())!==s?n=u=[u,o,a,i]:(Ru=n,n=s);e!==s?(t=c(t,e),r=t):(Ru=r,r=s);}else Ru=r,r=s;return r}())!==s?(r=t):(Ru=r,r=s);return r}())===s&&(r=ss()),r}function _s(){var r,t,e,n,u,o,a,i,c;if(r=Ru,Uo()!==s)if(Fa()!==s)if((t=Ma())!==s)if(Fa()!==s)if((e=eo())!==s){for(n=[],u=Ru,(o=Fa())!==s&&(a=xa())!==s&&(i=Fa())!==s&&(c=eo())!==s?u=o=[o,a,i,c]:(Ru=u,u=s);u!==s;)n.push(u),u=Ru,(o=Fa())!==s&&(a=xa())!==s&&(i=Fa())!==s&&(c=eo())!==s?u=o=[o,a,i,c]:(Ru=u,u=s);n!==s&&(u=Fa())!==s&&(o=Da())!==s?(r=ii(e,n)):(Ru=r,r=s);}else Ru=r,r=s;else Ru=r,r=s;else Ru=r,r=s;else Ru=r,r=s;else Ru=r,r=s;return r===s&&(r=Ru,Uo()!==s&&Fa()!==s&&(t=xs())!==s?(r=t):(Ru=r,r=s)),r}function Os(){var t,e,n;return t=Ru,Go()!==s&&Fa()!==s?("duplicate"===r.substr(Ru,9).toLowerCase()?(e=r.substr(Ru,9),Ru+=9):(e=s,0===xu&&$u(Rr)),e!==s&&Fa()!==s&&_a()!==s&&Fa()!==s&&No()!==s&&Fa()!==s&&(n=Is())!==s?(t={keyword:"on duplicate key update",set:n}):(Ru=t,t=s)):(Ru=t,t=s),t}function gs(){var t,e;return t=Ru,(e=function(){var t,e,n,u;t=Ru,"insert"===r.substr(Ru,6).toLowerCase()?(e=r.substr(Ru,6),Ru+=6):(e=s,0===xu&&$u(Qt));e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s);return t}())!==s&&(e="insert"),(t=e)===s&&(t=Ru,(e=go())!==s&&(e="replace"),t=e),t}function xs(){var r,t;return r=Ru,Ma()!==s&&Fa()!==s&&(t=Us())!==s&&Fa()!==s&&Da()!==s?(r=t):(Ru=r,r=s),r}function Us(){var r,t,e,n,u,o,a,i;if(r=Ru,(t=$s())!==s){for(e=[],n=Ru,(u=Fa())!==s&&(o=xa())!==s&&(a=Fa())!==s&&(i=$s())!==s?n=u=[u,o,a,i]:(Ru=n,n=s);n!==s;)e.push(n),n=Ru,(u=Fa())!==s&&(o=xa())!==s&&(a=Fa())!==s&&(i=$s())!==s?n=u=[u,o,a,i]:(Ru=n,n=s);e!==s?(r=t=function(r,t){const e={type:"expr_list"};return e.value=ii(r,t),e}(t,e)):(Ru=r,r=s);}else Ru=r,r=s;return r}function Ms(){var t,e,n;return t=Ru,function(){var t,e,n,u;t=Ru,"interval"===r.substr(Ru,8).toLowerCase()?(e=r.substr(Ru,8),Ru+=8):(e=s,0===xu&&$u(_n));e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="INTERVAL"):(Ru=t,t=s)):(Ru=t,t=s);return t}()!==s&&Fa()!==s&&(e=$s())!==s&&Fa()!==s&&(n=function(){var t;(t=function(){var t,e,n,u;t=Ru,"year"===r.substr(Ru,4).toLowerCase()?(e=r.substr(Ru,4),Ru+=4):(e=s,0===xu&&$u(On));e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="YEAR"):(Ru=t,t=s)):(Ru=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Ru,"month"===r.substr(Ru,5).toLowerCase()?(e=r.substr(Ru,5),Ru+=5):(e=s,0===xu&&$u(gn));e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="MONTH"):(Ru=t,t=s)):(Ru=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Ru,"day"===r.substr(Ru,3).toLowerCase()?(e=r.substr(Ru,3),Ru+=3):(e=s,0===xu&&$u(xn));e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="DAY"):(Ru=t,t=s)):(Ru=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Ru,"hour"===r.substr(Ru,4).toLowerCase()?(e=r.substr(Ru,4),Ru+=4):(e=s,0===xu&&$u(Un));e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="HOUR"):(Ru=t,t=s)):(Ru=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Ru,"minute"===r.substr(Ru,6).toLowerCase()?(e=r.substr(Ru,6),Ru+=6):(e=s,0===xu&&$u(Mn));e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="MINUTE"):(Ru=t,t=s)):(Ru=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Ru,"second"===r.substr(Ru,6).toLowerCase()?(e=r.substr(Ru,6),Ru+=6):(e=s,0===xu&&$u(Dn));e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="SECOND"):(Ru=t,t=s)):(Ru=t,t=s);return t}());return t}())!==s?(t={type:"interval",expr:e,unit:n.toLowerCase()}):(Ru=t,t=s),t}function Ds(){var t,e,n;return t=Ru,function(){var t,e,n,u;t=Ru,"when"===r.substr(Ru,4).toLowerCase()?(e=r.substr(Ru,4),Ru+=4):(e=s,0===xu&&$u(qe));e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s);return t}()!==s&&Fa()!==s&&(e=Fs())!==s&&Fa()!==s&&function(){var t,e,n,u;t=Ru,"then"===r.substr(Ru,4).toLowerCase()?(e=r.substr(Ru,4),Ru+=4):(e=s,0===xu&&$u(Ze));e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s);return t}()!==s&&Fa()!==s&&(n=$s())!==s?(t={type:"when",cond:e,result:n}):(Ru=t,t=s),t}function ks(){var t,e;return t=Ru,function(){var t,e,n,u;t=Ru,"else"===r.substr(Ru,4).toLowerCase()?(e=r.substr(Ru,4),Ru+=4):(e=s,0===xu&&$u(ze));e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s);return t}()!==s&&Fa()!==s&&(e=$s())!==s?(t={type:"else",result:e}):(Ru=t,t=s),t}function $s(){var r;return (r=function(){var r,t,e,n,u,o,a,i;if(r=Ru,(t=Zs())!==s){if(e=[],n=Ru,(u=Fa())!==s&&(o=$a())!==s&&(a=Fa())!==s&&(i=Zs())!==s?n=u=[u,o,a,i]:(Ru=n,n=s),n!==s)for(;n!==s;)e.push(n),n=Ru,(u=Fa())!==s&&(o=$a())!==s&&(a=Fa())!==s&&(i=Zs())!==s?n=u=[u,o,a,i]:(Ru=n,n=s);else e=s;e!==s?(t=ci(t,e),r=t):(Ru=r,r=s);}else Ru=r,r=s;return r}())===s&&(r=function(){var r,t,e,n,u,o,a,i;if(r=Ru,(t=Ps())!==s){for(e=[],n=Ru,(u=Pa())!==s&&(o=na())!==s&&(a=Fa())!==s&&(i=Ps())!==s?n=u=[u,o,a,i]:(Ru=n,n=s);n!==s;)e.push(n),n=Ru,(u=Pa())!==s&&(o=na())!==s&&(a=Fa())!==s&&(i=Ps())!==s?n=u=[u,o,a,i]:(Ru=n,n=s);e!==s?(t=_r(t,e),r=t):(Ru=r,r=s);}else Ru=r,r=s;return r}())===s&&(r=function(){var r,t,e,n,u,o;if(r=Ru,(t=Vs())!==s){if(e=[],n=Ru,(u=Fa())!==s&&(o=Zs())!==s?n=u=[u,o]:(Ru=n,n=s),n!==s)for(;n!==s;)e.push(n),n=Ru,(u=Fa())!==s&&(o=Zs())!==s?n=u=[u,o]:(Ru=n,n=s);else e=s;e!==s?(t=si(t,e[0][1]),r=t):(Ru=r,r=s);}else Ru=r,r=s;return r}()),r}function Fs(){var r,t,e,n,u,o,a,i;if(r=Ru,(t=$s())!==s){for(e=[],n=Ru,(u=Fa())!==s?((o=ea())===s&&(o=na())===s&&(o=xa()),o!==s&&(a=Fa())!==s&&(i=$s())!==s?n=u=[u,o,a,i]:(Ru=n,n=s)):(Ru=n,n=s);n!==s;)e.push(n),n=Ru,(u=Fa())!==s?((o=ea())===s&&(o=na())===s&&(o=xa()),o!==s&&(a=Fa())!==s&&(i=$s())!==s?n=u=[u,o,a,i]:(Ru=n,n=s)):(Ru=n,n=s);e!==s?(r=t=function(r,t){let e=r,n="";for(let u=0;u<t.length;u++)","===t[u][1]?(n=",",0===u&&(e=[r]),e.push(t[u][3])):e=oi(t[u][1],e,t[u][3]);if(","===n){const r={type:"expr_list"};return r.value=e,r}return e}(t,e)):(Ru=r,r=s);}else Ru=r,r=s;return r}function Ps(){var r,t,e,n,u,o,a,i;if(r=Ru,(t=Gs())!==s){for(e=[],n=Ru,(u=Pa())!==s&&(o=ea())!==s&&(a=Fa())!==s&&(i=Gs())!==s?n=u=[u,o,a,i]:(Ru=n,n=s);n!==s;)e.push(n),n=Ru,(u=Pa())!==s&&(o=ea())!==s&&(a=Fa())!==s&&(i=Gs())!==s?n=u=[u,o,a,i]:(Ru=n,n=s);e!==s?(r=t=_r(t,e)):(Ru=r,r=s);}else Ru=r,r=s;return r}function Gs(){var t,e,n,u,o;return (t=Hs())===s&&(t=function(){var r,t,e;r=Ru,(t=function(){var r,t,e,n,u;r=Ru,t=Ru,(e=ta())!==s&&(n=Fa())!==s&&(u=ra())!==s?t=e=[e,n,u]:(Ru=t,t=s);t!==s&&(t=gr(t));(r=t)===s&&(r=ra());return r}())!==s&&Fa()!==s&&Ma()!==s&&Fa()!==s&&(e=ju())!==s&&Fa()!==s&&Da()!==s?(n=t,(u=e).parentheses=!0,t=si(n,u),r=t):(Ru=r,r=s);var n,u;return r}())===s&&(t=Ru,(e=ta())===s&&(e=Ru,33===r.charCodeAt(Ru)?(n="!",Ru++):(n=s,0===xu&&$u(Or)),n!==s?(u=Ru,xu++,61===r.charCodeAt(Ru)?(o="=",Ru++):(o=s,0===xu&&$u(Nr)),xu--,o===s?u=void 0:(Ru=u,u=s),u!==s?e=n=[n,u]:(Ru=e,e=s)):(Ru=e,e=s)),e!==s&&(n=Fa())!==s&&(u=Gs())!==s?(t=e=si("NOT",u)):(Ru=t,t=s)),t}function Hs(){var t,e,n,u,o;return t=Ru,(e=Ws())!==s&&Fa()!==s?((n=function(){var t;(t=function(){var t,e,n,u,o,a;t=[],e=Ru,(n=Fa())!==s&&(u=js())!==s&&(o=Fa())!==s&&(a=Ws())!==s?e=n=[n,u,o,a]:(Ru=e,e=s);if(e!==s)for(;e!==s;)t.push(e),e=Ru,(n=Fa())!==s&&(u=js())!==s&&(o=Fa())!==s&&(a=Ws())!==s?e=n=[n,u,o,a]:(Ru=e,e=s);else t=s;t!==s&&(t={type:"arithmetic",tail:t});return t}())===s&&(t=Xs())===s&&(t=function(){var r,t,e,n;r=Ru,(t=function(){var r,t,e,n,u;r=Ru,t=Ru,(e=ta())!==s&&(n=Fa())!==s&&(u=Zo())!==s?t=e=[e,n,u]:(Ru=t,t=s);t!==s&&(t=gr(t));(r=t)===s&&(r=Zo());return r}())!==s&&Fa()!==s&&(e=Ws())!==s&&Fa()!==s&&ea()!==s&&Fa()!==s&&(n=Ws())!==s?(r=t={op:t,right:{type:"expr_list",value:[e,n]}}):(Ru=r,r=s);return r}())===s&&(t=function(){var r,t,e,n,u;r=Ru,(t=Jo())!==s&&(e=Fa())!==s&&(n=Ws())!==s?(r=t={op:"IS",right:n}):(Ru=r,r=s);r===s&&(r=Ru,t=Ru,(e=Jo())!==s&&(n=Fa())!==s&&(u=ta())!==s?t=e=[e,n,u]:(Ru=t,t=s),t!==s&&(e=Fa())!==s&&(n=Ws())!==s?(t=function(r){return {op:"IS NOT",right:r}}(n),r=t):(Ru=r,r=s));return r}())===s&&(t=Bs())===s&&(t=function(){var t,e,n,u;t=Ru,(e=function(){var t,e,n;t=Ru,(e=ta())===s&&(e=null);e!==s&&Fa()!==s?((n=function(){var t,e,n,u;t=Ru,"regexp"===r.substr(Ru,6).toLowerCase()?(e=r.substr(Ru,6),Ru+=6):(e=s,0===xu&&$u(Fe));e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="REGEXP"):(Ru=t,t=s)):(Ru=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=Ru,"rlike"===r.substr(Ru,5).toLowerCase()?(e=r.substr(Ru,5),Ru+=5):(e=s,0===xu&&$u($e));e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="RLIKE"):(Ru=t,t=s)):(Ru=t,t=s);return t}()),n!==s?(o=n,t=e=(u=e)?`${u} ${o}`:o):(Ru=t,t=s)):(Ru=t,t=s);var u,o;return t}())!==s&&Fa()!==s?("binary"===r.substr(Ru,6).toLowerCase()?(n=r.substr(Ru,6),Ru+=6):(n=s,0===xu&&$u(fr)),n===s&&(n=null),n!==s&&Fa()!==s&&(u=fo())!==s?(o=e,t=e={op:(a=n)?`${o} ${a}`:o,right:u}):(Ru=t,t=s)):(Ru=t,t=s);var o,a;return t}());return t}())===s&&(n=null),n!==s?(u=e,t=e=null===(o=n)?u:"arithmetic"===o.type?ci(u,o.tail):oi(o.op,u,o.right)):(Ru=t,t=s)):(Ru=t,t=s),t===s&&(t=fo())===s&&(t=zs()),t}function js(){var t;return ">="===r.substr(Ru,2)?(t=">=",Ru+=2):(t=s,0===xu&&$u(xr)),t===s&&(62===r.charCodeAt(Ru)?(t=">",Ru++):(t=s,0===xu&&$u(Ur)),t===s&&("<="===r.substr(Ru,2)?(t="<=",Ru+=2):(t=s,0===xu&&$u(Mr)),t===s&&("<>"===r.substr(Ru,2)?(t="<>",Ru+=2):(t=s,0===xu&&$u(Dr)),t===s&&(60===r.charCodeAt(Ru)?(t="<",Ru++):(t=s,0===xu&&$u(kr)),t===s&&(61===r.charCodeAt(Ru)?(t="=",Ru++):(t=s,0===xu&&$u(Nr)),t===s&&("!="===r.substr(Ru,2)?(t="!=",Ru+=2):(t=s,0===xu&&$u($r)))))))),t}function Ys(){var r,t,e,n,u;return r=Ru,t=Ru,(e=ta())!==s&&(n=Fa())!==s&&(u=zo())!==s?t=e=[e,n,u]:(Ru=t,t=s),t!==s&&(t=gr(t)),(r=t)===s&&(r=zo()),r}function Bs(){var r,t,e;return r=Ru,(t=function(){var r,t,e,n,u;return r=Ru,t=Ru,(e=ta())!==s&&(n=Fa())!==s&&(u=Qo())!==s?t=e=[e,n,u]:(Ru=t,t=s),t!==s&&(t=gr(t)),(r=t)===s&&(r=Qo()),r}())!==s&&Fa()!==s?((e=co())===s&&(e=Hs()),e!==s?(r=t={op:t,right:e}):(Ru=r,r=s)):(Ru=r,r=s),r}function Xs(){var r,t,e,n;return r=Ru,(t=Ys())!==s&&Fa()!==s&&(e=Ma())!==s&&Fa()!==s&&(n=Us())!==s&&Fa()!==s&&Da()!==s?(r=t={op:t,right:n}):(Ru=r,r=s),r===s&&(r=Ru,(t=Ys())!==s&&Fa()!==s?((e=ri())===s&&(e=fo()),e!==s?(r=t=function(r,t){return {op:r,right:t}}(t,e)):(Ru=r,r=s)):(Ru=r,r=s)),r}function Ws(){var r,t,e,n,u,o,a,i;if(r=Ru,(t=Ks())!==s){for(e=[],n=Ru,(u=Fa())!==s&&(o=Vs())!==s&&(a=Fa())!==s&&(i=Ks())!==s?n=u=[u,o,a,i]:(Ru=n,n=s);n!==s;)e.push(n),n=Ru,(u=Fa())!==s&&(o=Vs())!==s&&(a=Fa())!==s&&(i=Ks())!==s?n=u=[u,o,a,i]:(Ru=n,n=s);e!==s?(r=t=_r(t,e)):(Ru=r,r=s);}else Ru=r,r=s;return r}function Vs(){var t;return 43===r.charCodeAt(Ru)?(t="+",Ru++):(t=s,0===xu&&$u(Fr)),t===s&&(45===r.charCodeAt(Ru)?(t="-",Ru++):(t=s,0===xu&&$u(Pr))),t}function Ks(){var r,t,e,n,u,o,a,i;if(r=Ru,(t=Zs())!==s){for(e=[],n=Ru,(u=Fa())!==s&&(o=qs())!==s&&(a=Fa())!==s&&(i=Zs())!==s?n=u=[u,o,a,i]:(Ru=n,n=s);n!==s;)e.push(n),n=Ru,(u=Fa())!==s&&(o=qs())!==s&&(a=Fa())!==s&&(i=Zs())!==s?n=u=[u,o,a,i]:(Ru=n,n=s);e!==s?(r=t=ci(t,e)):(Ru=r,r=s);}else Ru=r,r=s;return r}function qs(){var t;return 42===r.charCodeAt(Ru)?(t="*",Ru++):(t=s,0===xu&&$u(Gr)),t===s&&(47===r.charCodeAt(Ru)?(t="/",Ru++):(t=s,0===xu&&$u(Hr)),t===s&&(37===r.charCodeAt(Ru)?(t="%",Ru++):(t=s,0===xu&&$u(jr)),t===s&&("||"===r.substr(Ru,2)?(t="||",Ru+=2):(t=s,0===xu&&$u(Yr))))),t}function Zs(){var t,e,n,u;return (t=function(){var t,e,n,u,o,a,i;t=Ru,(e=oa())!==s&&Fa()!==s&&Ma()!==s&&Fa()!==s&&(n=$s())!==s&&Fa()!==s&&ko()!==s&&Fa()!==s&&(u=ei())!==s&&Fa()!==s&&(o=Da())!==s?(t=e={type:"cast",expr:n,symbol:"as",target:u}):(Ru=t,t=s);t===s&&(t=Ru,(e=oa())!==s&&Fa()!==s&&Ma()!==s&&Fa()!==s&&(n=$s())!==s&&Fa()!==s&&ko()!==s&&Fa()!==s&&(u=la())!==s&&Fa()!==s&&(o=Ma())!==s&&Fa()!==s&&(a=po())!==s&&Fa()!==s&&Da()!==s&&Fa()!==s&&(i=Da())!==s?(e=function(r,t){return {type:"cast",expr:r,symbol:"as",target:{dataType:"DECIMAL("+t+")"}}}(n,a),t=e):(Ru=t,t=s),t===s&&(t=Ru,(e=oa())!==s&&Fa()!==s&&Ma()!==s&&Fa()!==s&&(n=$s())!==s&&Fa()!==s&&ko()!==s&&Fa()!==s&&(u=la())!==s&&Fa()!==s&&(o=Ma())!==s&&Fa()!==s&&(a=po())!==s&&Fa()!==s&&xa()!==s&&Fa()!==s&&(i=po())!==s&&Fa()!==s&&Da()!==s&&Fa()!==s&&Da()!==s?(e=function(r,t,e){return {type:"cast",expr:r,symbol:"as",target:{dataType:"DECIMAL("+t+", "+e+")"}}}(n,a,i),t=e):(Ru=t,t=s),t===s&&(t=Ru,(e=oa())!==s&&Fa()!==s&&Ma()!==s&&Fa()!==s&&(n=$s())!==s&&Fa()!==s&&ko()!==s&&Fa()!==s&&(u=function(){var t;(t=function(){var t,e,n,u;t=Ru,"signed"===r.substr(Ru,6).toLowerCase()?(e=r.substr(Ru,6),Ru+=6):(e=s,0===xu&&$u(sn));e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="SIGNED"):(Ru=t,t=s)):(Ru=t,t=s);return t}())===s&&(t=fa());return t}())!==s&&Fa()!==s?((o=va())===s&&(o=null),o!==s&&Fa()!==s&&(a=Da())!==s?(e=function(r,t,e){return {type:"cast",expr:r,symbol:"as",target:{dataType:t+(e?" "+e:"")}}}(n,u,o),t=e):(Ru=t,t=s)):(Ru=t,t=s))));return t}())===s&&(t=co())===s&&(t=function(){var t;(t=function(){var t,e,n,u;t=Ru,(e=function(){var t,e,n,u;t=Ru,"count"===r.substr(Ru,5).toLowerCase()?(e=r.substr(Ru,5),Ru+=5):(e=s,0===xu&&$u(je));e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="COUNT"):(Ru=t,t=s)):(Ru=t,t=s);return t}())!==s&&Fa()!==s&&Ma()!==s&&Fa()!==s&&(n=function(){var t,e,n,u,o;t=Ru,(e=function(){var e;42===r.charCodeAt(Ru)?(e="*",Ru++):(e=s,0===xu&&$u(Gr));e!==s&&(e={type:"star",value:"*"});return e}())!==s&&(e={expr:e});(t=e)===s&&(t=Ru,(e=qo())===s&&(e=null),e!==s&&Fa()!==s&&(n=zs())!==s?(t=e={distinct:e,expr:n}):(Ru=t,t=s),t===s&&(t=Ru,(e=qo())===s&&(e=null),e!==s&&Fa()!==s&&(n=Ma())!==s&&Fa()!==s&&(u=$s())!==s&&Fa()!==s&&Da()!==s&&Fa()!==s?((o=ys())===s&&(o=null),o!==s?(e=function(r,t,e){return t.parentheses=!0,{distinct:r,expr:t,orderby:e}}(e,u,o),t=e):(Ru=t,t=s)):(Ru=t,t=s)));return t}())!==s&&Fa()!==s&&Da()!==s&&Fa()!==s?((u=io())===s&&(u=null),u!==s?(e=function(r,t,e){return {type:"aggr_func",name:r,args:t,over:e}}(e,n,u),t=e):(Ru=t,t=s)):(Ru=t,t=s);return t}())===s&&(t=function(){var t,e,n;t=Ru,(e=function(){var t;(t=function(){var t,e,n,u;t=Ru,"sum"===r.substr(Ru,3).toLowerCase()?(e=r.substr(Ru,3),Ru+=3):(e=s,0===xu&&$u(Xe));e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="SUM"):(Ru=t,t=s)):(Ru=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Ru,"max"===r.substr(Ru,3).toLowerCase()?(e=r.substr(Ru,3),Ru+=3):(e=s,0===xu&&$u(Ye));e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="MAX"):(Ru=t,t=s)):(Ru=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Ru,"min"===r.substr(Ru,3).toLowerCase()?(e=r.substr(Ru,3),Ru+=3):(e=s,0===xu&&$u(Be));e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="MIN"):(Ru=t,t=s)):(Ru=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Ru,"avg"===r.substr(Ru,3).toLowerCase()?(e=r.substr(Ru,3),Ru+=3):(e=s,0===xu&&$u(We));e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="AVG"):(Ru=t,t=s)):(Ru=t,t=s);return t}());return t}())!==s&&Fa()!==s&&Ma()!==s&&Fa()!==s&&(n=Ws())!==s&&Fa()!==s&&Da()!==s?(t=e={type:"aggr_func",name:e,args:{expr:n}}):(Ru=t,t=s);return t}());return t}())===s&&(t=function(){var t,e,n,u,o;t=Ru,(e=za())!==s&&Fa()!==s&&(n=Ma())!==s&&Fa()!==s?((u=Us())===s&&(u=null),u!==s&&Fa()!==s&&Da()!==s&&Fa()!==s?((o=io())===s&&(o=null),o!==s?(e=ct(e,u,o),t=e):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s);t===s&&(t=Ru,(e=function(){var t;(t=function(){var t,e,n,u;t=Ru,"current_date"===r.substr(Ru,12).toLowerCase()?(e=r.substr(Ru,12),Ru+=12):(e=s,0===xu&&$u(Rn));e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="CURRENT_DATE"):(Ru=t,t=s)):(Ru=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Ru,"current_time"===r.substr(Ru,12).toLowerCase()?(e=r.substr(Ru,12),Ru+=12):(e=s,0===xu&&$u(kn));e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="CURRENT_TIME"):(Ru=t,t=s)):(Ru=t,t=s);return t}())===s&&(t=Ta())===s&&(t=function(){var t,e,n,u;t=Ru,"current_user"===r.substr(Ru,12).toLowerCase()?(e=r.substr(Ru,12),Ru+=12):(e=s,0===xu&&$u(Fn));e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="CURRENT_USER"):(Ru=t,t=s)):(Ru=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Ru,"user"===r.substr(Ru,4).toLowerCase()?(e=r.substr(Ru,4),Ru+=4):(e=s,0===xu&&$u(Nn));e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="USER"):(Ru=t,t=s)):(Ru=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Ru,"session_user"===r.substr(Ru,12).toLowerCase()?(e=r.substr(Ru,12),Ru+=12):(e=s,0===xu&&$u(Pn));e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="SESSION_USER"):(Ru=t,t=s)):(Ru=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Ru,"system_user"===r.substr(Ru,11).toLowerCase()?(e=r.substr(Ru,11),Ru+=11):(e=s,0===xu&&$u(Gn));e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="SYSTEM_USER"):(Ru=t,t=s)):(Ru=t,t=s);return t}());return t}())!==s&&Fa()!==s&&(n=Ma())!==s&&Fa()!==s?((u=Us())===s&&(u=null),u!==s&&Fa()!==s&&Da()!==s&&Fa()!==s?((o=io())===s&&(o=null),o!==s?(e=ct(e,u,o),t=e):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s),t===s&&(t=Ru,(e=Ta())!==s&&Fa()!==s?((n=ao())===s&&(n=null),n!==s?(e=function(r,t){return {type:"function",name:r,over:t}}(e,n),t=e):(Ru=t,t=s)):(Ru=t,t=s)));return t}())===s&&(t=function(){var r,t,e,n,u,o,a,i,c,l;if(r=Ru,ua()!==s)if(Fa()!==s){if(t=[],(e=Ds())!==s)for(;e!==s;)t.push(e),e=Ds();else t=s;t!==s&&(e=Fa())!==s?((n=ks())===s&&(n=null),n!==s&&(u=Fa())!==s&&(o=sa())!==s&&Fa()!==s?((a=ua())===s&&(a=null),a!==s?(c=t,(l=n)&&c.push(l),r={type:"case",expr:null,args:c}):(Ru=r,r=s)):(Ru=r,r=s)):(Ru=r,r=s);}else Ru=r,r=s;else Ru=r,r=s;if(r===s)if(r=Ru,ua()!==s)if(Fa()!==s)if((t=$s())!==s)if((e=Fa())!==s){if(n=[],(u=Ds())!==s)for(;u!==s;)n.push(u),u=Ds();else n=s;n!==s&&(u=Fa())!==s?((o=ks())===s&&(o=null),o!==s&&Fa()!==s&&(a=sa())!==s&&Fa()!==s?((i=ua())===s&&(i=null),i!==s?(r=function(r,t,e){return e&&t.push(e),{type:"case",expr:r,args:t}}(t,n,o)):(Ru=r,r=s)):(Ru=r,r=s)):(Ru=r,r=s);}else Ru=r,r=s;else Ru=r,r=s;else Ru=r,r=s;else Ru=r,r=s;return r}())===s&&(t=Ms())===s&&(t=zs())===s&&(t=oo())===s&&(t=Ru,Ma()!==s&&(e=Fa())!==s&&(n=Fs())!==s&&Fa()!==s&&Da()!==s?((u=n).parentheses=!0,t=u):(Ru=t,t=s),t===s&&(t=ri())===s&&(t=Ru,Fa()!==s?(63===r.charCodeAt(Ru)?(e="?",Ru++):(e=s,0===xu&&$u(Br)),e!==s?(t={type:"origin",value:e}):(Ru=t,t=s)):(Ru=t,t=s))),t}function zs(){var t,e,n,u,o,a,i,c,l,f;return t=Ru,e=Ru,(n=Js())!==s&&(u=Fa())!==s&&(o=ga())!==s&&(a=Fa())!==s?e=n=[n,u,o,a]:(Ru=e,e=s),e===s&&(e=null),e!==s&&(n=ro())!==s&&(u=Fa())!==s?((o=function(){var t;"->>"===r.substr(Ru,3)?(t="->>",Ru+=3):(t=s,0===xu&&$u(Cu));return t}())===s&&(o=function(){var t;"->"===r.substr(Ru,2)?(t="->",Ru+=2):(t=s,0===xu&&$u(Lu));return t}()),o!==s&&(a=Fa())!==s?((i=fo())===s&&(i=Co()),i!==s&&Fa()!==s?((c=Xu())===s&&(c=null),c!==s?(t=e=function(r,t,e,n,u){const s=r&&r[0]||null;return di.add(`select::${s}::${t}`),{type:"column_ref",table:s,column:t,collate:u,arrow:e,property:n}}(e,n,o,i,c)):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s),t===s&&(t=Ru,(e=Js())!==s&&(n=Fa())!==s&&(u=ga())!==s&&(o=Fa())!==s&&(a=function(){var r,t;r=Ru,(t=to())!==s&&(t=t);(r=t)===s&&(r=Qs());return r}())!==s?(l=e,f=a,di.add(`select::${l}::${f}`),t=e={type:"column_ref",table:l,column:f}):(Ru=t,t=s),t===s&&(t=Ru,(e=ro())!==s&&(e=function(r){return di.add("select::null::"+r),{type:"column_ref",table:null,column:r}}(e)),t=e)),t}function Js(){var r,t;return r=Ru,(t=eo())!==s?((Xr(t)?s:void 0)!==s?(r=t=t):(Ru=r,r=s)):(Ru=r,r=s),r===s&&(r=Ru,(t=Qs())!==s&&(t=t),r=t),r}function Qs(){var t;return (t=function(){var t,e,n,u;t=Ru,34===r.charCodeAt(Ru)?(e='"',Ru++):(e=s,0===xu&&$u(Wr));if(e!==s){if(n=[],Vr.test(r.charAt(Ru))?(u=r.charAt(Ru),Ru++):(u=s,0===xu&&$u(Kr)),u!==s)for(;u!==s;)n.push(u),Vr.test(r.charAt(Ru))?(u=r.charAt(Ru),Ru++):(u=s,0===xu&&$u(Kr));else n=s;n!==s?(34===r.charCodeAt(Ru)?(u='"',Ru++):(u=s,0===xu&&$u(Wr)),u!==s?(e=qr(n),t=e):(Ru=t,t=s)):(Ru=t,t=s);}else Ru=t,t=s;return t}())===s&&(t=function(){var t,e,n,u;t=Ru,39===r.charCodeAt(Ru)?(e="'",Ru++):(e=s,0===xu&&$u(er));if(e!==s){if(n=[],Zr.test(r.charAt(Ru))?(u=r.charAt(Ru),Ru++):(u=s,0===xu&&$u(zr)),u!==s)for(;u!==s;)n.push(u),Zr.test(r.charAt(Ru))?(u=r.charAt(Ru),Ru++):(u=s,0===xu&&$u(zr));else n=s;n!==s?(39===r.charCodeAt(Ru)?(u="'",Ru++):(u=s,0===xu&&$u(er)),u!==s?(e=qr(n),t=e):(Ru=t,t=s)):(Ru=t,t=s);}else Ru=t,t=s;return t}())===s&&(t=function(){var t,e,n,u;t=Ru,96===r.charCodeAt(Ru)?(e="`",Ru++):(e=s,0===xu&&$u(Jr));if(e!==s){if(n=[],Qr.test(r.charAt(Ru))?(u=r.charAt(Ru),Ru++):(u=s,0===xu&&$u(rt)),u!==s)for(;u!==s;)n.push(u),Qr.test(r.charAt(Ru))?(u=r.charAt(Ru),Ru++):(u=s,0===xu&&$u(rt));else n=s;n!==s?(96===r.charCodeAt(Ru)?(u="`",Ru++):(u=s,0===xu&&$u(Jr)),u!==s?(e=qr(n),t=e):(Ru=t,t=s)):(Ru=t,t=s);}else Ru=t,t=s;return t}()),t}function ro(){var r,t;return r=Ru,(t=to())!==s?((Xr(t)?s:void 0)!==s?(r=t=t):(Ru=r,r=s)):(Ru=r,r=s),r===s&&(r=Qs()),r}function to(){var r,t,e,n;if(r=Ru,(t=no())!==s){for(e=[],n=so();n!==s;)e.push(n),n=so();e!==s?(r=t=tt(t,e)):(Ru=r,r=s);}else Ru=r,r=s;return r}function eo(){var r,t,e,n;if(r=Ru,(t=no())!==s){for(e=[],n=uo();n!==s;)e.push(n),n=uo();e!==s?(r=t=tt(t,e)):(Ru=r,r=s);}else Ru=r,r=s;return r}function no(){var t;return et.test(r.charAt(Ru))?(t=r.charAt(Ru),Ru++):(t=s,0===xu&&$u(nt)),t}function uo(){var t;return ut.test(r.charAt(Ru))?(t=r.charAt(Ru),Ru++):(t=s,0===xu&&$u(st)),t}function so(){var t;return ot.test(r.charAt(Ru))?(t=r.charAt(Ru),Ru++):(t=s,0===xu&&$u(at)),t}function oo(){var e,n,u;return e=Ru,58===r.charCodeAt(Ru)?(n=":",Ru++):(n=s,0===xu&&$u(it)),n!==s&&(u=eo())!==s?e=n=[n,u]:(Ru=e,e=s),e!==s&&(e={type:"param",value:e[1]}),e}function ao(){var r,t,e;return r=Ru,Go()!==s&&Fa()!==s&&No()!==s&&Fa()!==s&&(t=Ta())!==s&&Fa()!==s&&Ma()!==s&&Fa()!==s?((e=Us())===s&&(e=null),e!==s&&Fa()!==s&&Da()!==s?(r={type:"on update",keyword:t,parentheses:!0,expr:e}):(Ru=r,r=s)):(Ru=r,r=s),r===s&&(r=Ru,Go()!==s&&Fa()!==s&&No()!==s&&Fa()!==s&&(t=Ta())!==s?(r=function(r){return {type:"on update",keyword:r}}(t)):(Ru=r,r=s)),r}function io(){var t,e,n;return t=Ru,function(){var t,e,n,u;t=Ru,"over"===r.substr(Ru,4).toLowerCase()?(e=r.substr(Ru,4),Ru+=4):(e=s,0===xu&&$u(pe));e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s);return t}()!==s&&Fa()!==s&&Ma()!==s&&Fa()!==s&&Uo()!==s&&Fa()!==s&&Wo()!==s&&Fa()!==s&&(e=as())!==s&&Fa()!==s?((n=ys())===s&&(n=null),n!==s&&Fa()!==s&&Da()!==s?(t=function(r,t){return {partitionby:r,orderby:t}}(e,n)):(Ru=t,t=s)):(Ru=t,t=s),t===s&&(t=ao()),t}function co(){var t,e,n,u,o,a,i,c,l;return t=Ru,"binary"===r.substr(Ru,6).toLowerCase()?(e=r.substr(Ru,6),Ru+=6):(e=s,0===xu&&$u(fr)),e===s&&(e=null),e!==s&&Fa()!==s&&(n=fo())!==s?(u=Ru,(o=Fa())!==s&&(a=Xu())!==s?u=o=[o,a]:(Ru=u,u=s),u===s&&(u=null),u!==s?(c=n,l=u,(i=e)&&(c.prefix=i.toLowerCase()),l&&(c.suffix={collate:l[1]}),t=e=c):(Ru=t,t=s)):(Ru=t,t=s),t===s&&(t=Co())===s&&(t=function(){var t,e;t=Ru,(e=function(){var t,e,n,u;t=Ru,"true"===r.substr(Ru,4).toLowerCase()?(e=r.substr(Ru,4),Ru+=4):(e=s,0===xu&&$u(jt));e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s);return t}())!==s&&(e={type:"bool",value:!0});(t=e)===s&&(t=Ru,(e=function(){var t,e,n,u;t=Ru,"false"===r.substr(Ru,5).toLowerCase()?(e=r.substr(Ru,5),Ru+=5):(e=s,0===xu&&$u(Bt));e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s);return t}())!==s&&(e={type:"bool",value:!1}),t=e);return t}())===s&&(t=lo())===s&&(t=function(){var t,e,n,u,o,a;t=Ru,(e=Aa())===s&&(e=Ea())===s&&(e=ya())===s&&(e=ha());if(e!==s)if(Fa()!==s){if(n=Ru,39===r.charCodeAt(Ru)?(u="'",Ru++):(u=s,0===xu&&$u(er)),u!==s){for(o=[],a=vo();a!==s;)o.push(a),a=vo();o!==s?(39===r.charCodeAt(Ru)?(a="'",Ru++):(a=s,0===xu&&$u(er)),a!==s?n=u=[u,o,a]:(Ru=n,n=s)):(Ru=n,n=s);}else Ru=n,n=s;n!==s?(e=ft(e,n),t=e):(Ru=t,t=s);}else Ru=t,t=s;else Ru=t,t=s;if(t===s)if(t=Ru,(e=Aa())===s&&(e=Ea())===s&&(e=ya())===s&&(e=ha()),e!==s)if(Fa()!==s){if(n=Ru,34===r.charCodeAt(Ru)?(u='"',Ru++):(u=s,0===xu&&$u(Wr)),u!==s){for(o=[],a=bo();a!==s;)o.push(a),a=bo();o!==s?(34===r.charCodeAt(Ru)?(a='"',Ru++):(a=s,0===xu&&$u(Wr)),a!==s?n=u=[u,o,a]:(Ru=n,n=s)):(Ru=n,n=s);}else Ru=n,n=s;n!==s?(e=ft(e,n),t=e):(Ru=t,t=s);}else Ru=t,t=s;else Ru=t,t=s;return t}()),t}function lo(){var e;return (e=function(){var t,e,n,u;t=Ru,"null"===r.substr(Ru,4).toLowerCase()?(e=r.substr(Ru,4),Ru+=4):(e=s,0===xu&&$u(Gt));e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s);return t}())!==s&&(e={type:"null",value:null}),e}function fo(){var t,e,n,u,o,a;if(t=Ru,"x"===r.substr(Ru,1).toLowerCase()?(e=r.charAt(Ru),Ru++):(e=s,0===xu&&$u(lt)),e===s&&(e=null),e!==s){if(n=Ru,39===r.charCodeAt(Ru)?(u="'",Ru++):(u=s,0===xu&&$u(er)),u!==s){for(o=[],a=vo();a!==s;)o.push(a),a=vo();o!==s?(39===r.charCodeAt(Ru)?(a="'",Ru++):(a=s,0===xu&&$u(er)),a!==s?n=u=[u,o,a]:(Ru=n,n=s)):(Ru=n,n=s);}else Ru=n,n=s;n!==s?(t=e={type:e?"hex_string":"single_quote_string",value:n[1].join("")}):(Ru=t,t=s);}else Ru=t,t=s;if(t===s)if(t=Ru,"x"===r.substr(Ru,1).toLowerCase()?(e=r.charAt(Ru),Ru++):(e=s,0===xu&&$u(lt)),e===s&&(e=null),e!==s){if(n=Ru,34===r.charCodeAt(Ru)?(u='"',Ru++):(u=s,0===xu&&$u(Wr)),u!==s){for(o=[],a=bo();a!==s;)o.push(a),a=bo();o!==s?(34===r.charCodeAt(Ru)?(a='"',Ru++):(a=s,0===xu&&$u(Wr)),a!==s?n=u=[u,o,a]:(Ru=n,n=s)):(Ru=n,n=s);}else Ru=n,n=s;n!==s?(t=e=function(r,t){return {type:r?"hex_string":"string",value:t[1].join("")}}(e,n)):(Ru=t,t=s);}else Ru=t,t=s;return t}function bo(){var t;return bt.test(r.charAt(Ru))?(t=r.charAt(Ru),Ru++):(t=s,0===xu&&$u(vt)),t===s&&(t=Lo()),t}function vo(){var t;return dt.test(r.charAt(Ru))?(t=r.charAt(Ru),Ru++):(t=s,0===xu&&$u(Lt)),t===s&&(t=Lo()),t}function Lo(){var t,e,n,u,o,a,i,c,l,f;return t=Ru,"\\'"===r.substr(Ru,2)?(e="\\'",Ru+=2):(e=s,0===xu&&$u(Ct)),e!==s&&(e="'"),(t=e)===s&&(t=Ru,'\\"'===r.substr(Ru,2)?(e='\\"',Ru+=2):(e=s,0===xu&&$u(pt)),e!==s&&(e='"'),(t=e)===s&&(t=Ru,"\\\\"===r.substr(Ru,2)?(e="\\\\",Ru+=2):(e=s,0===xu&&$u(wt)),e!==s&&(e="\\"),(t=e)===s&&(t=Ru,"\\/"===r.substr(Ru,2)?(e="\\/",Ru+=2):(e=s,0===xu&&$u(Et)),e!==s&&(e="/"),(t=e)===s&&(t=Ru,"\\b"===r.substr(Ru,2)?(e="\\b",Ru+=2):(e=s,0===xu&&$u(ht)),e!==s&&(e="\b"),(t=e)===s&&(t=Ru,"\\f"===r.substr(Ru,2)?(e="\\f",Ru+=2):(e=s,0===xu&&$u(At)),e!==s&&(e="\f"),(t=e)===s&&(t=Ru,"\\n"===r.substr(Ru,2)?(e="\\n",Ru+=2):(e=s,0===xu&&$u(yt)),e!==s&&(e="\n"),(t=e)===s&&(t=Ru,"\\r"===r.substr(Ru,2)?(e="\\r",Ru+=2):(e=s,0===xu&&$u(Tt)),e!==s&&(e="\r"),(t=e)===s&&(t=Ru,"\\t"===r.substr(Ru,2)?(e="\\t",Ru+=2):(e=s,0===xu&&$u(mt)),e!==s&&(e="\t"),(t=e)===s&&(t=Ru,"\\u"===r.substr(Ru,2)?(e="\\u",Ru+=2):(e=s,0===xu&&$u(St)),e!==s&&(n=yo())!==s&&(u=yo())!==s&&(o=yo())!==s&&(a=yo())!==s?(i=n,c=u,l=o,f=a,t=e=String.fromCharCode(parseInt("0x"+i+c+l+f))):(Ru=t,t=s),t===s&&(t=Ru,92===r.charCodeAt(Ru)?(e="\\",Ru++):(e=s,0===xu&&$u(It)),e!==s&&(e="\\"),t=e)))))))))),t}function Co(){var t,e;return (t=function(){var r,t,e,n;r=Ru,(t=po())!==s&&(e=wo())!==s&&(n=Eo())!==s?(r=t={type:"bigint",value:t+e+n}):(Ru=r,r=s);r===s&&(r=Ru,(t=po())!==s&&(e=wo())!==s?(t=function(r,t){const e=r+t;return ai(r)?{type:"bigint",value:e}:parseFloat(e)}(t,e),r=t):(Ru=r,r=s),r===s&&(r=Ru,(t=po())!==s&&(e=Eo())!==s?(t=function(r,t){return {type:"bigint",value:r+t}}(t,e),r=t):(Ru=r,r=s),r===s&&(r=Ru,(t=po())!==s&&(t=function(r){return ai(r)?{type:"bigint",value:r}:parseFloat(r)}(t)),r=t)));return r}())!==s&&(t=(e=t)&&"bigint"===e.type?e:{type:"number",value:e}),t}function po(){var t,e,n;return (t=ho())===s&&(t=Ao())===s&&(t=Ru,45===r.charCodeAt(Ru)?(e="-",Ru++):(e=s,0===xu&&$u(Pr)),e===s&&(43===r.charCodeAt(Ru)?(e="+",Ru++):(e=s,0===xu&&$u(Fr))),e!==s&&(n=ho())!==s?(t=e="-"+n):(Ru=t,t=s),t===s&&(t=Ru,45===r.charCodeAt(Ru)?(e="-",Ru++):(e=s,0===xu&&$u(Pr)),e===s&&(43===r.charCodeAt(Ru)?(e="+",Ru++):(e=s,0===xu&&$u(Fr))),e!==s&&(n=Ao())!==s?(t=e="-"+n):(Ru=t,t=s))),t}function wo(){var t,e,n;return t=Ru,46===r.charCodeAt(Ru)?(e=".",Ru++):(e=s,0===xu&&$u(_t)),e!==s&&(n=ho())!==s?(t=e="."+n):(Ru=t,t=s),t}function Eo(){var t,e,n;return t=Ru,(e=function(){var t,e,n;t=Ru,Mt.test(r.charAt(Ru))?(e=r.charAt(Ru),Ru++):(e=s,0===xu&&$u(Dt));e!==s?(kt.test(r.charAt(Ru))?(n=r.charAt(Ru),Ru++):(n=s,0===xu&&$u($t)),n===s&&(n=null),n!==s?(t=e=e+(null!==(u=n)?u:"")):(Ru=t,t=s)):(Ru=t,t=s);var u;return t}())!==s&&(n=ho())!==s?(t=e=e+n):(Ru=t,t=s),t}function ho(){var t,e;if(t=[],(e=Ao())!==s)for(;e!==s;)t.push(e),e=Ao();else t=s;return t!==s&&(t=t.join("")),t}function Ao(){var t;return Ot.test(r.charAt(Ru))?(t=r.charAt(Ru),Ru++):(t=s,0===xu&&$u(gt)),t}function yo(){var t;return xt.test(r.charAt(Ru))?(t=r.charAt(Ru),Ru++):(t=s,0===xu&&$u(Ut)),t}function To(){var t,e,n,u;return t=Ru,"default"===r.substr(Ru,7).toLowerCase()?(e=r.substr(Ru,7),Ru+=7):(e=s,0===xu&&$u(p)),e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s),t}function mo(){var t,e,n,u;return t=Ru,"to"===r.substr(Ru,2).toLowerCase()?(e=r.substr(Ru,2),Ru+=2):(e=s,0===xu&&$u(Yt)),e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s),t}function So(){var t,e,n,u;return t=Ru,"show"===r.substr(Ru,4).toLowerCase()?(e=r.substr(Ru,4),Ru+=4):(e=s,0===xu&&$u(Xt)),e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s),t}function Io(){var t,e,n,u;return t=Ru,"drop"===r.substr(Ru,4).toLowerCase()?(e=r.substr(Ru,4),Ru+=4):(e=s,0===xu&&$u(Wt)),e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="DROP"):(Ru=t,t=s)):(Ru=t,t=s),t}function No(){var t,e,n,u;return t=Ru,"update"===r.substr(Ru,6).toLowerCase()?(e=r.substr(Ru,6),Ru+=6):(e=s,0===xu&&$u(P)),e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s),t}function Ro(){var t,e,n,u;return t=Ru,"create"===r.substr(Ru,6).toLowerCase()?(e=r.substr(Ru,6),Ru+=6):(e=s,0===xu&&$u(Zt)),e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s),t}function _o(){var t,e,n,u;return t=Ru,"temporary"===r.substr(Ru,9).toLowerCase()?(e=r.substr(Ru,9),Ru+=9):(e=s,0===xu&&$u(zt)),e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s),t}function Oo(){var t,e,n,u;return t=Ru,"if not exists"===r.substr(Ru,13).toLowerCase()?(e=r.substr(Ru,13),Ru+=13):(e=s,0===xu&&$u(Jt)),e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s),t}function go(){var t,e,n,u;return t=Ru,"replace"===r.substr(Ru,7).toLowerCase()?(e=r.substr(Ru,7),Ru+=7):(e=s,0===xu&&$u(te)),e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s),t}function xo(){var t,e,n,u;return t=Ru,"rename"===r.substr(Ru,6).toLowerCase()?(e=r.substr(Ru,6),Ru+=6):(e=s,0===xu&&$u(ee)),e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s),t}function Uo(){var t,e,n,u;return t=Ru,"partition"===r.substr(Ru,9).toLowerCase()?(e=r.substr(Ru,9),Ru+=9):(e=s,0===xu&&$u(ue)),e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="PARTITION"):(Ru=t,t=s)):(Ru=t,t=s),t}function Mo(){var t,e,n,u;return t=Ru,"into"===r.substr(Ru,4).toLowerCase()?(e=r.substr(Ru,4),Ru+=4):(e=s,0===xu&&$u(se)),e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s),t}function Do(){var t,e,n,u;return t=Ru,"set"===r.substr(Ru,3).toLowerCase()?(e=r.substr(Ru,3),Ru+=3):(e=s,0===xu&&$u(W)),e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s),t}function ko(){var t,e,n,u;return t=Ru,"as"===r.substr(Ru,2).toLowerCase()?(e=r.substr(Ru,2),Ru+=2):(e=s,0===xu&&$u(ie)),e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s),t}function $o(){var t,e,n,u;return t=Ru,"table"===r.substr(Ru,5).toLowerCase()?(e=r.substr(Ru,5),Ru+=5):(e=s,0===xu&&$u(ce)),e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="TABLE"):(Ru=t,t=s)):(Ru=t,t=s),t}function Fo(){var t,e,n,u;return t=Ru,"tables"===r.substr(Ru,6).toLowerCase()?(e=r.substr(Ru,6),Ru+=6):(e=s,0===xu&&$u(le)),e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="TABLES"):(Ru=t,t=s)):(Ru=t,t=s),t}function Po(){var t,e,n,u;return t=Ru,"database"===r.substr(Ru,8).toLowerCase()?(e=r.substr(Ru,8),Ru+=8):(e=s,0===xu&&$u(fe)),e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="DATABASE"):(Ru=t,t=s)):(Ru=t,t=s),t}function Go(){var t,e,n,u;return t=Ru,"on"===r.substr(Ru,2).toLowerCase()?(e=r.substr(Ru,2),Ru+=2):(e=s,0===xu&&$u($)),e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s),t}function Ho(){var t,e,n,u;return t=Ru,"join"===r.substr(Ru,4).toLowerCase()?(e=r.substr(Ru,4),Ru+=4):(e=s,0===xu&&$u(Le)),e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s),t}function jo(){var t,e,n,u;return t=Ru,"union"===r.substr(Ru,5).toLowerCase()?(e=r.substr(Ru,5),Ru+=5):(e=s,0===xu&&$u(we)),e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s),t}function Yo(){var t,e,n,u;return t=Ru,"values"===r.substr(Ru,6).toLowerCase()?(e=r.substr(Ru,6),Ru+=6):(e=s,0===xu&&$u(Ee)),e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s),t}function Bo(){var t,e,n,u;return t=Ru,"using"===r.substr(Ru,5).toLowerCase()?(e=r.substr(Ru,5),Ru+=5):(e=s,0===xu&&$u(he)),e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s),t}function Xo(){var t,e,n,u;return t=Ru,"with"===r.substr(Ru,4).toLowerCase()?(e=r.substr(Ru,4),Ru+=4):(e=s,0===xu&&$u(yr)),e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s),t}function Wo(){var t,e,n,u;return t=Ru,"by"===r.substr(Ru,2).toLowerCase()?(e=r.substr(Ru,2),Ru+=2):(e=s,0===xu&&$u(Te)),e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s),t}function Vo(){var t,e,n,u;return t=Ru,"desc"===r.substr(Ru,4).toLowerCase()?(e=r.substr(Ru,4),Ru+=4):(e=s,0===xu&&$u(_e)),e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="DESC"):(Ru=t,t=s)):(Ru=t,t=s),t}function Ko(){var t,e,n,u;return t=Ru,"all"===r.substr(Ru,3).toLowerCase()?(e=r.substr(Ru,3),Ru+=3):(e=s,0===xu&&$u(ge)),e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="ALL"):(Ru=t,t=s)):(Ru=t,t=s),t}function qo(){var t,e,n,u;return t=Ru,"distinct"===r.substr(Ru,8).toLowerCase()?(e=r.substr(Ru,8),Ru+=8):(e=s,0===xu&&$u(xe)),e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="DISTINCT"):(Ru=t,t=s)):(Ru=t,t=s),t}function Zo(){var t,e,n,u;return t=Ru,"between"===r.substr(Ru,7).toLowerCase()?(e=r.substr(Ru,7),Ru+=7):(e=s,0===xu&&$u(Ue)),e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="BETWEEN"):(Ru=t,t=s)):(Ru=t,t=s),t}function zo(){var t,e,n,u;return t=Ru,"in"===r.substr(Ru,2).toLowerCase()?(e=r.substr(Ru,2),Ru+=2):(e=s,0===xu&&$u(Me)),e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="IN"):(Ru=t,t=s)):(Ru=t,t=s),t}function Jo(){var t,e,n,u;return t=Ru,"is"===r.substr(Ru,2).toLowerCase()?(e=r.substr(Ru,2),Ru+=2):(e=s,0===xu&&$u(De)),e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="IS"):(Ru=t,t=s)):(Ru=t,t=s),t}function Qo(){var t,e,n,u;return t=Ru,"like"===r.substr(Ru,4).toLowerCase()?(e=r.substr(Ru,4),Ru+=4):(e=s,0===xu&&$u(ke)),e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="LIKE"):(Ru=t,t=s)):(Ru=t,t=s),t}function ra(){var t,e,n,u;return t=Ru,"exists"===r.substr(Ru,6).toLowerCase()?(e=r.substr(Ru,6),Ru+=6):(e=s,0===xu&&$u(Pe)),e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="EXISTS"):(Ru=t,t=s)):(Ru=t,t=s),t}function ta(){var t,e,n,u;return t=Ru,"not"===r.substr(Ru,3).toLowerCase()?(e=r.substr(Ru,3),Ru+=3):(e=s,0===xu&&$u(O)),e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="NOT"):(Ru=t,t=s)):(Ru=t,t=s),t}function ea(){var t,e,n,u;return t=Ru,"and"===r.substr(Ru,3).toLowerCase()?(e=r.substr(Ru,3),Ru+=3):(e=s,0===xu&&$u(Ge)),e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="AND"):(Ru=t,t=s)):(Ru=t,t=s),t}function na(){var t,e,n,u;return t=Ru,"or"===r.substr(Ru,2).toLowerCase()?(e=r.substr(Ru,2),Ru+=2):(e=s,0===xu&&$u(He)),e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="OR"):(Ru=t,t=s)):(Ru=t,t=s),t}function ua(){var t,e,n,u;return t=Ru,"case"===r.substr(Ru,4).toLowerCase()?(e=r.substr(Ru,4),Ru+=4):(e=s,0===xu&&$u(Ke)),e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s),t}function sa(){var t,e,n,u;return t=Ru,"end"===r.substr(Ru,3).toLowerCase()?(e=r.substr(Ru,3),Ru+=3):(e=s,0===xu&&$u(Je)),e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s),t}function oa(){var t,e,n,u;return t=Ru,"cast"===r.substr(Ru,4).toLowerCase()?(e=r.substr(Ru,4),Ru+=4):(e=s,0===xu&&$u(Qe)),e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s),t}function aa(){var t,e,n,u;return t=Ru,"char"===r.substr(Ru,4).toLowerCase()?(e=r.substr(Ru,4),Ru+=4):(e=s,0===xu&&$u(tn)),e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="CHAR"):(Ru=t,t=s)):(Ru=t,t=s),t}function ia(){var t,e,n,u;return t=Ru,"varchar"===r.substr(Ru,7).toLowerCase()?(e=r.substr(Ru,7),Ru+=7):(e=s,0===xu&&$u(en)),e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="VARCHAR"):(Ru=t,t=s)):(Ru=t,t=s),t}function ca(){var t,e,n,u;return t=Ru,"numeric"===r.substr(Ru,7).toLowerCase()?(e=r.substr(Ru,7),Ru+=7):(e=s,0===xu&&$u(nn)),e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="NUMERIC"):(Ru=t,t=s)):(Ru=t,t=s),t}function la(){var t,e,n,u;return t=Ru,"decimal"===r.substr(Ru,7).toLowerCase()?(e=r.substr(Ru,7),Ru+=7):(e=s,0===xu&&$u(un)),e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="DECIMAL"):(Ru=t,t=s)):(Ru=t,t=s),t}function fa(){var t,e,n,u;return t=Ru,"unsigned"===r.substr(Ru,8).toLowerCase()?(e=r.substr(Ru,8),Ru+=8):(e=s,0===xu&&$u(on)),e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="UNSIGNED"):(Ru=t,t=s)):(Ru=t,t=s),t}function ba(){var t,e,n,u;return t=Ru,"int"===r.substr(Ru,3).toLowerCase()?(e=r.substr(Ru,3),Ru+=3):(e=s,0===xu&&$u(an)),e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="INT"):(Ru=t,t=s)):(Ru=t,t=s),t}function va(){var t,e,n,u;return t=Ru,"integer"===r.substr(Ru,7).toLowerCase()?(e=r.substr(Ru,7),Ru+=7):(e=s,0===xu&&$u(ln)),e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="INTEGER"):(Ru=t,t=s)):(Ru=t,t=s),t}function da(){var t,e,n,u;return t=Ru,"smallint"===r.substr(Ru,8).toLowerCase()?(e=r.substr(Ru,8),Ru+=8):(e=s,0===xu&&$u(bn)),e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="SMALLINT"):(Ru=t,t=s)):(Ru=t,t=s),t}function La(){var t,e,n,u;return t=Ru,"tinyint"===r.substr(Ru,7).toLowerCase()?(e=r.substr(Ru,7),Ru+=7):(e=s,0===xu&&$u(vn)),e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="TINYINT"):(Ru=t,t=s)):(Ru=t,t=s),t}function Ca(){var t,e,n,u;return t=Ru,"bigint"===r.substr(Ru,6).toLowerCase()?(e=r.substr(Ru,6),Ru+=6):(e=s,0===xu&&$u(wn)),e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="BIGINT"):(Ru=t,t=s)):(Ru=t,t=s),t}function pa(){var t,e,n,u;return t=Ru,"float"===r.substr(Ru,5).toLowerCase()?(e=r.substr(Ru,5),Ru+=5):(e=s,0===xu&&$u(hn)),e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="FLOAT"):(Ru=t,t=s)):(Ru=t,t=s),t}function wa(){var t,e,n,u;return t=Ru,"double"===r.substr(Ru,6).toLowerCase()?(e=r.substr(Ru,6),Ru+=6):(e=s,0===xu&&$u(An)),e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="DOUBLE"):(Ru=t,t=s)):(Ru=t,t=s),t}function Ea(){var t,e,n,u;return t=Ru,"date"===r.substr(Ru,4).toLowerCase()?(e=r.substr(Ru,4),Ru+=4):(e=s,0===xu&&$u(yn)),e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="DATE"):(Ru=t,t=s)):(Ru=t,t=s),t}function ha(){var t,e,n,u;return t=Ru,"datetime"===r.substr(Ru,8).toLowerCase()?(e=r.substr(Ru,8),Ru+=8):(e=s,0===xu&&$u(Tn)),e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="DATETIME"):(Ru=t,t=s)):(Ru=t,t=s),t}function Aa(){var t,e,n,u;return t=Ru,"time"===r.substr(Ru,4).toLowerCase()?(e=r.substr(Ru,4),Ru+=4):(e=s,0===xu&&$u(mn)),e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="TIME"):(Ru=t,t=s)):(Ru=t,t=s),t}function ya(){var t,e,n,u;return t=Ru,"timestamp"===r.substr(Ru,9).toLowerCase()?(e=r.substr(Ru,9),Ru+=9):(e=s,0===xu&&$u(Sn)),e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="TIMESTAMP"):(Ru=t,t=s)):(Ru=t,t=s),t}function Ta(){var t,e,n,u;return t=Ru,"current_timestamp"===r.substr(Ru,17).toLowerCase()?(e=r.substr(Ru,17),Ru+=17):(e=s,0===xu&&$u($n)),e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="CURRENT_TIMESTAMP"):(Ru=t,t=s)):(Ru=t,t=s),t}function ma(){var t;return 64===r.charCodeAt(Ru)?(t="@",Ru++):(t=s,0===xu&&$u(Xn)),t}function Sa(){var t;return (t=function(){var t;return "@@"===r.substr(Ru,2)?(t="@@",Ru+=2):(t=s,0===xu&&$u(Wn)),t}())===s&&(t=ma())===s&&(t=function(){var t;return 36===r.charCodeAt(Ru)?(t="$",Ru++):(t=s,0===xu&&$u(Vn)),t}()),t}function Ia(){var t;return 61===r.charCodeAt(Ru)?(t="=",Ru++):(t=s,0===xu&&$u(Nr)),t}function Na(){var t,e,n,u;return t=Ru,"column"===r.substr(Ru,6).toLowerCase()?(e=r.substr(Ru,6),Ru+=6):(e=s,0===xu&&$u(Jn)),e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="COLUMN"):(Ru=t,t=s)):(Ru=t,t=s),t}function Ra(){var t,e,n,u;return t=Ru,"index"===r.substr(Ru,5).toLowerCase()?(e=r.substr(Ru,5),Ru+=5):(e=s,0===xu&&$u(Qn)),e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="INDEX"):(Ru=t,t=s)):(Ru=t,t=s),t}function _a(){var t,e,n,u;return t=Ru,"key"===r.substr(Ru,3).toLowerCase()?(e=r.substr(Ru,3),Ru+=3):(e=s,0===xu&&$u(v)),e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="KEY"):(Ru=t,t=s)):(Ru=t,t=s),t}function Oa(){var t,e,n,u;return t=Ru,"comment"===r.substr(Ru,7).toLowerCase()?(e=r.substr(Ru,7),Ru+=7):(e=s,0===xu&&$u(eu)),e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="COMMENT"):(Ru=t,t=s)):(Ru=t,t=s),t}function ga(){var t;return 46===r.charCodeAt(Ru)?(t=".",Ru++):(t=s,0===xu&&$u(_t)),t}function xa(){var t;return 44===r.charCodeAt(Ru)?(t=",",Ru++):(t=s,0===xu&&$u(fu)),t}function Ua(){var t;return 42===r.charCodeAt(Ru)?(t="*",Ru++):(t=s,0===xu&&$u(Gr)),t}function Ma(){var t;return 40===r.charCodeAt(Ru)?(t="(",Ru++):(t=s,0===xu&&$u(wr)),t}function Da(){var t;return 41===r.charCodeAt(Ru)?(t=")",Ru++):(t=s,0===xu&&$u(Er)),t}function ka(){var t;return 59===r.charCodeAt(Ru)?(t=";",Ru++):(t=s,0===xu&&$u(du)),t}function $a(){var t;return (t=function(){var t;return "||"===r.substr(Ru,2)?(t="||",Ru+=2):(t=s,0===xu&&$u(Yr)),t}())===s&&(t=function(){var t;return "&&"===r.substr(Ru,2)?(t="&&",Ru+=2):(t=s,0===xu&&$u(pu)),t}()),t}function Fa(){var r,t;for(r=[],(t=Ya())===s&&(t=Ga());t!==s;)r.push(t),(t=Ya())===s&&(t=Ga());return r}function Pa(){var r,t;if(r=[],(t=Ya())===s&&(t=Ga()),t!==s)for(;t!==s;)r.push(t),(t=Ya())===s&&(t=Ga());else r=s;return r}function Ga(){var t;return (t=function(){var t,e,n,u,o,a;t=Ru,"/*"===r.substr(Ru,2)?(e="/*",Ru+=2):(e=s,0===xu&&$u(wu));if(e!==s){for(n=[],u=Ru,o=Ru,xu++,"*/"===r.substr(Ru,2)?(a="*/",Ru+=2):(a=s,0===xu&&$u(Eu)),xu--,a===s?o=void 0:(Ru=o,o=s),o!==s&&(a=ja())!==s?u=o=[o,a]:(Ru=u,u=s);u!==s;)n.push(u),u=Ru,o=Ru,xu++,"*/"===r.substr(Ru,2)?(a="*/",Ru+=2):(a=s,0===xu&&$u(Eu)),xu--,a===s?o=void 0:(Ru=o,o=s),o!==s&&(a=ja())!==s?u=o=[o,a]:(Ru=u,u=s);n!==s?("*/"===r.substr(Ru,2)?(u="*/",Ru+=2):(u=s,0===xu&&$u(Eu)),u!==s?t=e=[e,n,u]:(Ru=t,t=s)):(Ru=t,t=s);}else Ru=t,t=s;return t}())===s&&(t=function(){var t,e,n,u,o,a;t=Ru,"--"===r.substr(Ru,2)?(e="--",Ru+=2):(e=s,0===xu&&$u(hu));if(e!==s){for(n=[],u=Ru,o=Ru,xu++,a=Ba(),xu--,a===s?o=void 0:(Ru=o,o=s),o!==s&&(a=ja())!==s?u=o=[o,a]:(Ru=u,u=s);u!==s;)n.push(u),u=Ru,o=Ru,xu++,a=Ba(),xu--,a===s?o=void 0:(Ru=o,o=s),o!==s&&(a=ja())!==s?u=o=[o,a]:(Ru=u,u=s);n!==s?t=e=[e,n]:(Ru=t,t=s);}else Ru=t,t=s;return t}())===s&&(t=function(){var t,e,n,u,o,a;t=Ru,35===r.charCodeAt(Ru)?(e="#",Ru++):(e=s,0===xu&&$u(Au));if(e!==s){for(n=[],u=Ru,o=Ru,xu++,a=Ba(),xu--,a===s?o=void 0:(Ru=o,o=s),o!==s&&(a=ja())!==s?u=o=[o,a]:(Ru=u,u=s);u!==s;)n.push(u),u=Ru,o=Ru,xu++,a=Ba(),xu--,a===s?o=void 0:(Ru=o,o=s),o!==s&&(a=ja())!==s?u=o=[o,a]:(Ru=u,u=s);n!==s?t=e=[e,n]:(Ru=t,t=s);}else Ru=t,t=s;return t}()),t}function Ha(){var r,t,e,n,u,o,a;return r=Ru,(t=Oa())!==s&&Fa()!==s?((e=Ia())===s&&(e=null),e!==s&&Fa()!==s&&(n=fo())!==s?(o=e,a=n,r=t={type:(u=t).toLowerCase(),keyword:u.toLowerCase(),symbol:o,value:a}):(Ru=r,r=s)):(Ru=r,r=s),r}function ja(){var t;return r.length>Ru?(t=r.charAt(Ru),Ru++):(t=s,0===xu&&$u(yu)),t}function Ya(){var t;return Tu.test(r.charAt(Ru))?(t=r.charAt(Ru),Ru++):(t=s,0===xu&&$u(mu)),t}function Ba(){var t,e;if((t=function(){var t,e;t=Ru,xu++,r.length>Ru?(e=r.charAt(Ru),Ru++):(e=s,0===xu&&$u(yu));xu--,e===s?t=void 0:(Ru=t,t=s);return t}())===s)if(t=[],Nt.test(r.charAt(Ru))?(e=r.charAt(Ru),Ru++):(e=s,0===xu&&$u(Rt)),e!==s)for(;e!==s;)t.push(e),Nt.test(r.charAt(Ru))?(e=r.charAt(Ru),Ru++):(e=s,0===xu&&$u(Rt));else t=s;return t}function Xa(){var t,e;return t=Ru,bi=[],(void 0)!==s&&Fa()!==s?((e=Wa())===s&&(e=function(){var t,e;t=Ru,function(){var t;return "return"===r.substr(Ru,6).toLowerCase()?(t=r.substr(Ru,6),Ru+=6):(t=s,0===xu&&$u(Kn)),t}()!==s&&Fa()!==s&&(e=Va())!==s?(t={type:"return",expr:e}):(Ru=t,t=s);return t}()),e!==s?(t={stmt:e,vars:bi}):(Ru=t,t=s)):(Ru=t,t=s),t}function Wa(){var t,e,n,u;return t=Ru,(e=ri())===s&&(e=ti()),e!==s&&Fa()!==s?((n=function(){var t;return ":="===r.substr(Ru,2)?(t=":=",Ru+=2):(t=s,0===xu&&$u(qn)),t}())===s&&(n=Ia()),n!==s&&Fa()!==s&&(u=Va())!==s?(t=e={type:"assign",left:e,symbol:n,right:u}):(Ru=t,t=s)):(Ru=t,t=s),t}function Va(){var t;return (t=ts())===s&&(t=function(){var r,t,e,n,u;r=Ru,(t=ri())!==s&&Fa()!==s&&(e=ws())!==s&&Fa()!==s&&(n=ri())!==s&&Fa()!==s&&(u=hs())!==s?(r=t={type:"join",ltable:t,rtable:n,op:e,on:u}):(Ru=r,r=s);return r}())===s&&(t=Ka())===s&&(t=function(){var t,e;t=Ru,function(){var t;return 91===r.charCodeAt(Ru)?(t="[",Ru++):(t=s,0===xu&&$u(bu)),t}()!==s&&Fa()!==s&&(e=Qa())!==s&&Fa()!==s&&function(){var t;return 93===r.charCodeAt(Ru)?(t="]",Ru++):(t=s,0===xu&&$u(vu)),t}()!==s?(t={type:"array",value:e}):(Ru=t,t=s);return t}()),t}function Ka(){var r,t,e,n,u,o,a,i;if(r=Ru,(t=qa())!==s){for(e=[],n=Ru,(u=Fa())!==s&&(o=Vs())!==s&&(a=Fa())!==s&&(i=qa())!==s?n=u=[u,o,a,i]:(Ru=n,n=s);n!==s;)e.push(n),n=Ru,(u=Fa())!==s&&(o=Vs())!==s&&(a=Fa())!==s&&(i=qa())!==s?n=u=[u,o,a,i]:(Ru=n,n=s);e!==s?(r=t=_r(t,e)):(Ru=r,r=s);}else Ru=r,r=s;return r}function qa(){var r,t,e,n,u,o,a,i;if(r=Ru,(t=Za())!==s){for(e=[],n=Ru,(u=Fa())!==s&&(o=qs())!==s&&(a=Fa())!==s&&(i=Za())!==s?n=u=[u,o,a,i]:(Ru=n,n=s);n!==s;)e.push(n),n=Ru,(u=Fa())!==s&&(o=qs())!==s&&(a=Fa())!==s&&(i=Za())!==s?n=u=[u,o,a,i]:(Ru=n,n=s);e!==s?(r=t=_r(t,e)):(Ru=r,r=s);}else Ru=r,r=s;return r}function Za(){var r,t,e;return (r=co())===s&&(r=ri())===s&&(r=Ja())===s&&(r=oo())===s&&(r=Ru,Ma()!==s&&Fa()!==s&&(t=Ka())!==s&&Fa()!==s&&Da()!==s?((e=t).parentheses=!0,r=e):(Ru=r,r=s)),r}function za(){var r,t,e,n,u,o,a;return r=Ru,(t=Js())!==s?(e=Ru,(n=Fa())!==s&&(u=ga())!==s&&(o=Fa())!==s&&(a=Js())!==s?e=n=[n,u,o,a]:(Ru=e,e=s),e===s&&(e=null),e!==s?(r=t=function(r,t){let e=r;return null!==t&&(e=`${r}.${t[3]}`),e}(t,e)):(Ru=r,r=s)):(Ru=r,r=s),r}function Ja(){var r,t,e;return r=Ru,(t=za())!==s&&Fa()!==s&&Ma()!==s&&Fa()!==s?((e=Qa())===s&&(e=null),e!==s&&Fa()!==s&&Da()!==s?(r=t={type:"function",name:t,args:{type:"expr_list",value:e}}):(Ru=r,r=s)):(Ru=r,r=s),r===s&&(r=Ru,(t=za())!==s&&(t=function(r){return {type:"function",name:r,args:null}}(t)),r=t),r}function Qa(){var r,t,e,n,u,o,a,i;if(r=Ru,(t=Za())!==s){for(e=[],n=Ru,(u=Fa())!==s&&(o=xa())!==s&&(a=Fa())!==s&&(i=Za())!==s?n=u=[u,o,a,i]:(Ru=n,n=s);n!==s;)e.push(n),n=Ru,(u=Fa())!==s&&(o=xa())!==s&&(a=Fa())!==s&&(i=Za())!==s?n=u=[u,o,a,i]:(Ru=n,n=s);e!==s?(r=t=c(t,e)):(Ru=r,r=s);}else Ru=r,r=s;return r}function ri(){var r,t,e,n,u;return r=Ru,(t=Sa())!==s&&(e=ti())!==s?(n=t,u=e,r=t={type:"var",...u,prefix:n}):(Ru=r,r=s),r}function ti(){var t,e,n,u,o;return t=Ru,(e=eo())!==s&&(n=function(){var e,n,u,o;e=[],n=Ru,46===r.charCodeAt(Ru)?(u=".",Ru++):(u=s,0===xu&&$u(_t));u!==s&&(o=eo())!==s?n=u=[u,o]:(Ru=n,n=s);for(;n!==s;)e.push(n),n=Ru,46===r.charCodeAt(Ru)?(u=".",Ru++):(u=s,0===xu&&$u(_t)),u!==s&&(o=eo())!==s?n=u=[u,o]:(Ru=n,n=s);e!==s&&(e=function(r){const t=[];for(let e=0;e<r.length;e++)t.push(r[e][1]);return t}(e));return e}())!==s?(u=e,o=n,bi.push(u),t=e={type:"var",name:u,members:o,prefix:null}):(Ru=t,t=s),t}function ei(){var t;return (t=function(){var t,e,n,u;t=Ru,(e=aa())===s&&(e=ia());if(e!==s)if(Fa()!==s)if(Ma()!==s)if(Fa()!==s){if(n=[],Ot.test(r.charAt(Ru))?(u=r.charAt(Ru),Ru++):(u=s,0===xu&&$u(gt)),u!==s)for(;u!==s;)n.push(u),Ot.test(r.charAt(Ru))?(u=r.charAt(Ru),Ru++):(u=s,0===xu&&$u(gt));else n=s;n!==s&&(u=Fa())!==s&&Da()!==s?(e={dataType:e,length:parseInt(n.join(""),10)},t=e):(Ru=t,t=s);}else Ru=t,t=s;else Ru=t,t=s;else Ru=t,t=s;else Ru=t,t=s;t===s&&(t=Ru,(e=aa())!==s&&(e=Su(e)),(t=e)===s&&(t=Ru,(e=ia())!==s&&(e=Su(e)),t=e));return t}())===s&&(t=function(){var t,e,n,u,o,a,i,c,l,f,b,v;t=Ru,(e=ca())===s&&(e=la())===s&&(e=ba())===s&&(e=va())===s&&(e=da())===s&&(e=La())===s&&(e=Ca())===s&&(e=pa())===s&&(e=wa())===s&&(e=function(){var t,e,n,u;return t=Ru,"bit"===r.substr(Ru,3).toLowerCase()?(e=r.substr(Ru,3),Ru+=3):(e=s,0===xu&&$u(rn)),e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="BIT"):(Ru=t,t=s)):(Ru=t,t=s),t}());if(e!==s)if((n=Fa())!==s)if((u=Ma())!==s)if((o=Fa())!==s){if(a=[],Ot.test(r.charAt(Ru))?(i=r.charAt(Ru),Ru++):(i=s,0===xu&&$u(gt)),i!==s)for(;i!==s;)a.push(i),Ot.test(r.charAt(Ru))?(i=r.charAt(Ru),Ru++):(i=s,0===xu&&$u(gt));else a=s;if(a!==s)if((i=Fa())!==s){if(c=Ru,(l=xa())!==s)if((f=Fa())!==s){if(b=[],Ot.test(r.charAt(Ru))?(v=r.charAt(Ru),Ru++):(v=s,0===xu&&$u(gt)),v!==s)for(;v!==s;)b.push(v),Ot.test(r.charAt(Ru))?(v=r.charAt(Ru),Ru++):(v=s,0===xu&&$u(gt));else b=s;b!==s?c=l=[l,f,b]:(Ru=c,c=s);}else Ru=c,c=s;else Ru=c,c=s;c===s&&(c=null),c!==s&&(l=Fa())!==s&&(f=Da())!==s&&(b=Fa())!==s?((v=ni())===s&&(v=null),v!==s?(d=c,L=v,e={dataType:e,length:parseInt(a.join(""),10),scale:d&&parseInt(d[2].join(""),10),parentheses:!0,suffix:L},t=e):(Ru=t,t=s)):(Ru=t,t=s);}else Ru=t,t=s;else Ru=t,t=s;}else Ru=t,t=s;else Ru=t,t=s;else Ru=t,t=s;else Ru=t,t=s;var d,L;if(t===s){if(t=Ru,(e=ca())===s&&(e=la())===s&&(e=ba())===s&&(e=va())===s&&(e=da())===s&&(e=La())===s&&(e=Ca())===s&&(e=pa())===s&&(e=wa()),e!==s){if(n=[],Ot.test(r.charAt(Ru))?(u=r.charAt(Ru),Ru++):(u=s,0===xu&&$u(gt)),u!==s)for(;u!==s;)n.push(u),Ot.test(r.charAt(Ru))?(u=r.charAt(Ru),Ru++):(u=s,0===xu&&$u(gt));else n=s;n!==s&&(u=Fa())!==s?((o=ni())===s&&(o=null),o!==s?(e=function(r,t,e){return {dataType:r,length:parseInt(t.join(""),10),suffix:e}}(e,n,o),t=e):(Ru=t,t=s)):(Ru=t,t=s);}else Ru=t,t=s;t===s&&(t=Ru,(e=ca())===s&&(e=la())===s&&(e=ba())===s&&(e=va())===s&&(e=da())===s&&(e=La())===s&&(e=Ca())===s&&(e=pa())===s&&(e=wa()),e!==s&&(n=Fa())!==s?((u=ni())===s&&(u=null),u!==s&&(o=Fa())!==s?(e=function(r,t){return {dataType:r,suffix:t}}(e,u),t=e):(Ru=t,t=s)):(Ru=t,t=s));}return t}())===s&&(t=function(){var t,e,n,u;t=Ru,(e=Ea())===s&&(e=ha())===s&&(e=Aa())===s&&(e=ya());e!==s&&Fa()!==s&&Ma()!==s&&Fa()!==s?(Iu.test(r.charAt(Ru))?(n=r.charAt(Ru),Ru++):(n=s,0===xu&&$u(Nu)),n!==s&&Fa()!==s&&Da()!==s&&Fa()!==s?((u=ni())===s&&(u=null),u!==s?(e={dataType:e,length:parseInt(n,10)},t=e):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s);t===s&&(t=Ru,(e=Ea())===s&&(e=ha())===s&&(e=Aa())===s&&(e=ya()),e!==s&&(e=Su(e)),t=e);return t}())===s&&(t=function(){var e;(e=function(){var t,e,n,u;return t=Ru,"json"===r.substr(Ru,4).toLowerCase()?(e=r.substr(Ru,4),Ru+=4):(e=s,0===xu&&$u(fn)),e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="JSON"):(Ru=t,t=s)):(Ru=t,t=s),t}())!==s&&(e=Su(e));return e}())===s&&(t=function(){var e;(e=function(){var t,e,n,u;return t=Ru,"tinytext"===r.substr(Ru,8).toLowerCase()?(e=r.substr(Ru,8),Ru+=8):(e=s,0===xu&&$u(dn)),e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="TINYTEXT"):(Ru=t,t=s)):(Ru=t,t=s),t}())===s&&(e=function(){var t,e,n,u;return t=Ru,"text"===r.substr(Ru,4).toLowerCase()?(e=r.substr(Ru,4),Ru+=4):(e=s,0===xu&&$u(Ln)),e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="TEXT"):(Ru=t,t=s)):(Ru=t,t=s),t}())===s&&(e=function(){var t,e,n,u;return t=Ru,"mediumtext"===r.substr(Ru,10).toLowerCase()?(e=r.substr(Ru,10),Ru+=10):(e=s,0===xu&&$u(Cn)),e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="MEDIUMTEXT"):(Ru=t,t=s)):(Ru=t,t=s),t}())===s&&(e=function(){var t,e,n,u;return t=Ru,"longtext"===r.substr(Ru,8).toLowerCase()?(e=r.substr(Ru,8),Ru+=8):(e=s,0===xu&&$u(pn)),e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="LONGTEXT"):(Ru=t,t=s)):(Ru=t,t=s),t}());e!==s&&(e={dataType:e});return e}())===s&&(t=function(){var t,e,n;t=Ru,(e=function(){var t,e,n,u;return t=Ru,"enum"===r.substr(Ru,4).toLowerCase()?(e=r.substr(Ru,4),Ru+=4):(e=s,0===xu&&$u(En)),e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="ENUM"):(Ru=t,t=s)):(Ru=t,t=s),t}())!==s&&Fa()!==s&&(n=xs())!==s?(u=e,(o=n).parentheses=!0,t=e={dataType:u,expr:o}):(Ru=t,t=s);var u,o;return t}()),t}function ni(){var t,e,n;return t=Ru,(e=fa())===s&&(e=null),e!==s&&Fa()!==s?((n=function(){var t,e,n,u;return t=Ru,"zerofill"===r.substr(Ru,8).toLowerCase()?(e=r.substr(Ru,8),Ru+=8):(e=s,0===xu&&$u(cn)),e!==s?(n=Ru,xu++,u=no(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="ZEROFILL"):(Ru=t,t=s)):(Ru=t,t=s),t}())===s&&(n=null),n!==s?(t=e=function(r,t){const e=[];return r&&e.push(r),t&&e.push(t),e}(e,n)):(Ru=t,t=s)):(Ru=t,t=s),t}const ui={ALTER:!0,ALL:!0,ADD:!0,AND:!0,AS:!0,ASC:!0,BETWEEN:!0,BY:!0,CALL:!0,CASE:!0,CREATE:!0,CONTAINS:!0,CURRENT_DATE:!0,CURRENT_TIME:!0,CURRENT_TIMESTAMP:!0,CURRENT_USER:!0,DELETE:!0,DESC:!0,DISTINCT:!0,DROP:!0,ELSE:!0,END:!0,EXISTS:!0,EXPLAIN:!0,FALSE:!0,FROM:!0,FULL:!0,GROUP:!0,HAVING:!0,IN:!0,INNER:!0,INSERT:!0,INTO:!0,IS:!0,JOIN:!0,KEY:!0,LEFT:!0,LIKE:!0,LIMIT:!0,LOW_PRIORITY:!0,NOT:!0,NULL:!0,ON:!0,OR:!0,ORDER:!0,OUTER:!0,RECURSIVE:!0,RENAME:!0,READ:!0,RIGHT:!0,SELECT:!0,SESSION_USER:!0,SET:!0,SHOW:!0,SYSTEM_USER:!0,TABLE:!0,THEN:!0,TRUE:!0,TRUNCATE:!0,UNION:!0,UPDATE:!0,USING:!0,VALUES:!0,WITH:!0,WHEN:!0,WHERE:!0,WRITE:!0,GLOBAL:!0,SESSION:!0,LOCAL:!0,PERSIST:!0,PERSIST_ONLY:!0};function si(r,t){return {type:"unary_expr",operator:r,expr:t}}function oi(r,t,e){return {type:"binary_expr",operator:r,left:t,right:e}}function ai(r){const t=n(Number.MAX_SAFE_INTEGER);return !(n(r)<t)}function ii(r,t,e=3){const n=[r];for(let r=0;r<t.length;r++)n.push(t[r][e]);return n}function ci(r,t){let e=r;for(let r=0;r<t.length;r++)e=oi(t[r][1],e,t[r][3]);return e}function li(r){const t=Li[r];return t||(r||null)}function fi(r){const t=new Set;for(let e of r.keys()){const r=e.split("::");if(!r){t.add(e);break}r&&r[1]&&(r[1]=li(r[1])),t.add(r.join("::"));}return Array.from(t)}let bi=[];const vi=new Set,di=new Set,Li={};if((e=a())!==s&&Ru===r.length)return e;throw e!==s&&Ru<r.length&&$u({type:"end"}),Fu(gu,Ou<r.length?r.charAt(Ou):null,Ou<r.length?ku(Ou,Ou+1):ku(Ou,Ou))}};},function(r,t,e){var n=e(0);function u(r,t,e,n){this.message=r,this.expected=t,this.found=e,this.location=n,this.name="SyntaxError","function"==typeof Error.captureStackTrace&&Error.captureStackTrace(this,u);}!function(r,t){function e(){this.constructor=r;}e.prototype=t.prototype,r.prototype=new e;}(u,Error),u.buildMessage=function(r,t){var e={literal:function(r){return '"'+u(r.text)+'"'},class:function(r){var t,e="";for(t=0;t<r.parts.length;t++)e+=r.parts[t]instanceof Array?s(r.parts[t][0])+"-"+s(r.parts[t][1]):s(r.parts[t]);return "["+(r.inverted?"^":"")+e+"]"},any:function(r){return "any character"},end:function(r){return "end of input"},other:function(r){return r.description}};function n(r){return r.charCodeAt(0).toString(16).toUpperCase()}function u(r){return r.replace(/\\/g,"\\\\").replace(/"/g,'\\"').replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(r){return "\\x0"+n(r)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(r){return "\\x"+n(r)}))}function s(r){return r.replace(/\\/g,"\\\\").replace(/\]/g,"\\]").replace(/\^/g,"\\^").replace(/-/g,"\\-").replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(r){return "\\x0"+n(r)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(r){return "\\x"+n(r)}))}return "Expected "+function(r){var t,n,u,s=new Array(r.length);for(t=0;t<r.length;t++)s[t]=(u=r[t],e[u.type](u));if(s.sort(),s.length>0){for(t=1,n=1;t<s.length;t++)s[t-1]!==s[t]&&(s[n]=s[t],n++);s.length=n;}switch(s.length){case 1:return s[0];case 2:return s[0]+" or "+s[1];default:return s.slice(0,-1).join(", ")+", or "+s[s.length-1]}}(r)+" but "+function(r){return r?'"'+u(r)+'"':"end of input"}(t)+" found."},r.exports={SyntaxError:u,parse:function(r,t){t=void 0!==t?t:{};var e,s={},o={start:bs},a=bs,i=function(r,t){return Qi(r,t)},c=os("INCLUDE",!0),l=os("FILESTREAM_ON",!0),f=function(r,t){return Qi(r,t,1)},b=function(r,t){return Qi(r,t)},v=os("UNIQUE",!0),d=os("PRIMARY",!0),L=os("KEY",!0),C=os("IDENTITY",!0),p=os("COLUMN_FORMAT",!0),w=os("FIXED",!0),E=os("DYNAMIC",!0),h=os("DEFAULT",!0),A=os("STORAGE",!0),y=os("DISK",!0),T=os("MEMORY",!0),m=os("CURSOR",!0),S=os("PROCEDURE",!0),I=os("ALGORITHM",!0),N=os("INSTANT",!0),R=os("INPLACE",!0),_=os("COPY",!0),O=os("LOCK",!0),g=os("NONE",!0),x=os("SHARED",!0),U=os("EXCLUSIVE",!0),M=os("CHECK",!0),D=os("NOCHECK",!0),k=os("PRIMARY KEY",!0),$=os("NOT",!0),F=os("FOR",!0),P=os("REPLICATION",!0),G=os("FOREIGN KEY",!0),H=os("MATCH FULL",!0),j=os("MATCH PARTIAL",!0),Y=os("MATCH SIMPLE",!0),B=os("ON",!0),X=os("DELETE",!0),W=os("UPDATE",!0),V=os("RESTRICT",!0),K=os("CASCADE",!0),q=os("SET NULL",!0),Z=os("NO ACTION",!0),z=os("SET DEFAULT",!0),J=os("CHARACTER",!0),Q=os("SET",!0),rr=os("CHARSET",!0),tr=os("COLLATE",!0),er=os("AUTO_INCREMENT",!0),nr=os("AVG_ROW_LENGTH",!0),ur=os("KEY_BLOCK_SIZE",!0),sr=os("MAX_ROWS",!0),or=os("MIN_ROWS",!0),ar=os("STATS_SAMPLE_PAGES",!0),ir=os("CONNECTION",!0),cr=os("COMPRESSION",!0),lr=os("'",!1),fr=os("ZLIB",!0),br=os("LZ4",!0),vr=os("ENGINE",!0),dr=os("READ",!0),Lr=os("LOCAL",!0),Cr=os("LOW_PRIORITY",!0),pr=os("WRITE",!0),wr=os("(",!1),Er=os(")",!1),hr=os("PERCENT",!0),Ar=os("BTREE",!0),yr=os("HASH",!0),Tr=os("NONCLUSTERED",!0),mr=os("PARTITIONS",!0),Sr=function(r,t,e){return {type:r.toLowerCase(),symbol:t,expr:e}},Ir=os("FILLFACTOR",!0),Nr=os("MAX_DURATION",!0),Rr=os("MAXDOP",!0),_r=os("WITH",!0),Or=os("PARSER",!0),gr=os("VISIBLE",!0),xr=os("INVISIBLE",!0),Ur=os("PAD_INDEX",!0),Mr=os("SORT_IN_TEMPDB",!0),Dr=os("IGNORE_DUP_KEY",!0),kr=os("STATISTICS_NORECOMPUTE",!0),$r=os("STATISTICS_INCREMENTAL",!0),Fr=os("DROP_EXISTING",!0),Pr=os("ONLINE",!0),Gr=os("RESUMABLE",!0),Hr=os("ALLOW_ROW_LOCKS",!0),jr=os("ALLOW_PAGE_LOCKS",!0),Yr=os("OPTIMIZE_FOR_SEQUENTIAL_KEY",!0),Br=os("DATA_COMPRESSION",!0),Xr=os("ROW",!0),Wr=os("PAGE",!1),Vr=function(r,t){return t.unshift(r),t.forEach(r=>{const{table:t,as:e}=r;oc[t]=t,e&&(oc[e]=t),function(r){const t=ec(r);r.clear(),t.forEach(t=>r.add(t));}(sc);}),t},Kr=os("=",!1),qr=function(r,t){return rc(r,t)},Zr=os("!",!1),zr=function(r){return r[0]+" "+r[2]},Jr=os(">=",!1),Qr=os(">",!1),rt=os("<=",!1),tt=os("<>",!1),et=os("<",!1),nt=os("!=",!1),ut=os("+",!1),st=os("-",!1),ot=os("*",!1),at=os("/",!1),it=os("%",!1),ct=function(r){return !0===qi[r.toUpperCase()]},lt=os('"',!1),ft=/^[^"]/,bt=as(['"'],!0,!1),vt=function(r){return r.join("")},dt=/^[^']/,Lt=as(["'"],!0,!1),Ct=os("`",!1),pt=/^[^`]/,wt=as(["`"],!0,!1),Et=os("[",!1),ht=/^[^\]]/,At=as(["]"],!0,!1),yt=os("]",!1),Tt=function(r,t){return r+t.join("")},mt=/^[A-Za-z_]/,St=as([["A","Z"],["a","z"],"_"],!1,!1),It=/^[A-Za-z0-9_]/,Nt=as([["A","Z"],["a","z"],["0","9"],"_"],!1,!1),Rt=/^[A-Za-z0-9_:]/,_t=as([["A","Z"],["a","z"],["0","9"],"_",":"],!1,!1),Ot=os(":",!1),gt=function(r,t,e){return {type:"function",name:r,args:t||{type:"expr_list",value:[]},over:e}},xt=function(r){return {type:"string",value:r[1].join("")}},Ut=function(r,t){return {type:r.toLowerCase(),value:t[1].join("")}},Mt=/^[^"\\\0-\x1F\x7F]/,Dt=as(['"',"\\",["\0",""],""],!0,!1),kt=/^[^'\\]/,$t=as(["'","\\"],!0,!1),Ft=os("\\'",!1),Pt=os('\\"',!1),Gt=os("\\\\",!1),Ht=os("\\/",!1),jt=os("\\b",!1),Yt=os("\\f",!1),Bt=os("\\n",!1),Xt=os("\\r",!1),Wt=os("\\t",!1),Vt=os("\\u",!1),Kt=os("\\",!1),qt=/^[\n\r]/,Zt=as(["\n","\r"],!1,!1),zt=os(".",!1),Jt=/^[0-9]/,Qt=as([["0","9"]],!1,!1),re=/^[0-9a-fA-F]/,te=as([["0","9"],["a","f"],["A","F"]],!1,!1),ee=/^[eE]/,ne=as(["e","E"],!1,!1),ue=/^[+\-]/,se=as(["+","-"],!1,!1),oe=os("NULL",!0),ae=os("NOT NULL",!0),ie=os("TRUE",!0),ce=os("TO",!0),le=os("TOP",!0),fe=os("FALSE",!0),be=(os("DROP",!0)),ve=os("DECLARE",!0),de=os("USE",!0),Le=os("ALTER",!0),Ce=os("SELECT",!0),pe=os("CREATE",!0),we=os("TEMPORARY",!0),Ee=os("IF NOT EXISTS",!0),he=os("INSERT",!0),Ae=os("RECURSIVE",!1),ye=os("REPLACE",!0),Te=os("RENAME",!0),me=os("IGNORE",!0),Se=(os("PARTITION",!0)),Ie=os("INTO",!0),Ne=os("FROM",!0),Re=os("UNLOCK",!0),_e=os("AS",!0),Oe=os("TABLE",!0),ge=os("DATABASE",!0),xe=os("SCHEME",!0),Ue=os("TABLES",!0),Me=os("OFF",!0),De=os("LEFT",!0),ke=os("RIGHT",!0),$e=os("FULL",!0),Fe=os("INNER",!0),Pe=os("JOIN",!0),Ge=os("OUTER",!0),He=os("OVER",!0),je=os("UNION",!0),Ye=os("VALUES",!0),Be=os("USING",!0),Xe=os("WHERE",!0),We=os("GROUP",!0),Ve=os("BY",!0),Ke=os("ORDER",!0),qe=os("HAVING",!0),Ze=os("LIMIT",!0),ze=os("OFFSET",!0),Je=os("ASC",!0),Qe=os("DESC",!0),rn=os("ALL",!0),tn=os("DISTINCT",!0),en=os("BETWEEN",!0),nn=os("IN",!0),un=os("IS",!0),sn=os("LIKE",!0),on=os("EXISTS",!0),an=os("AND",!0),cn=os("OR",!0),ln=os("COUNT",!0),fn=os("MAX",!0),bn=os("MIN",!0),vn=os("SUM",!0),dn=os("AVG",!0),Ln=os("CALL",!0),Cn=os("CASE",!0),pn=os("WHEN",!0),wn=os("THEN",!0),En=os("ELSE",!0),hn=os("END",!0),An=os("CAST",!0),yn=os("BIT",!0),Tn=os("MONEY",!0),mn=os("SMALLMONEY",!0),Sn=os("CHAR",!0),In=os("VARCHAR",!0),Nn=os("NCHAR",!0),Rn=os("NVARCHAR",!0),_n=os("NUMERIC",!0),On=os("DECIMAL",!0),gn=os("SIGNED",!0),xn=os("UNSIGNED",!0),Un=os("INT",!0),Mn=os("ZEROFILL",!0),Dn=os("INTEGER",!0),kn=os("JSON",!0),$n=os("SMALLINT",!0),Fn=os("TINYINT",!0),Pn=os("TINYTEXT",!0),Gn=os("TEXT",!0),Hn=os("MEDIUMTEXT",!0),jn=os("LONGTEXT",!0),Yn=os("BIGINT",!0),Bn=os("FLOAT",!0),Xn=os("REAL",!0),Wn=os("DOUBLE",!0),Vn=os("DATE",!0),Kn=os("SMALLDATETIME",!0),qn=os("DATETIME",!0),Zn=os("DATETIME2",!0),zn=os("DATETIMEOFFSET",!0),Jn=os("TIME",!0),Qn=os("TIMESTAMP",!0),ru=os("TRUNCATE",!0),tu=os("UNIQUEIDENTIFIER",!0),eu=os("USER",!0),nu=os("CURRENT_DATE",!0),uu=(os("INTERVAL",!0)),su=os("YEAR",!0),ou=os("MONTH",!0),au=os("DAY",!0),iu=os("HOUR",!0),cu=os("MINUTE",!0),lu=os("SECOND",!0),fu=os("CURRENT_TIME",!0),bu=os("CURRENT_TIMESTAMP",!0),vu=os("CURRENT_USER",!0),du=os("SESSION_USER",!0),Lu=os("SYSTEM_USER",!0),Cu=os("GLOBAL",!0),pu=os("SESSION",!0),wu=os("PERSIST",!0),Eu=os("PERSIST_ONLY",!0),hu=os("@",!1),Au=os("@@",!1),yu=os("$",!1),Tu=os("return",!0),mu=os(":=",!1),Su=os("DUAL",!0),Iu=os("ADD",!0),Nu=os("COLUMN",!0),Ru=os("INDEX",!0),_u=os("FULLTEXT",!0),Ou=os("SPATIAL",!0),gu=os("CLUSTERED",!0),xu=os("COMMENT",!0),Uu=os("CONSTRAINT",!0),Mu=os("REFERENCES",!0),Du=os("SQL_CALC_FOUND_ROWS",!0),ku=os("SQL_CACHE",!0),$u=os("SQL_NO_CACHE",!0),Fu=os("SQL_SMALL_RESULT",!0),Pu=os("SQL_BIG_RESULT",!0),Gu=os("SQL_BUFFER_RESULT",!0),Hu=os(",",!1),ju=os(";",!1),Yu=os("||",!1),Bu=os("&&",!1),Xu=os("/*",!1),Wu=os("*/",!1),Vu=os("--",!1),Ku=os("#",!1),qu={type:"any"},Zu=/^[ \t\n\r]/,zu=as([" ","\t","\n","\r"],!1,!1),Ju=function(r,t,e){return r&&!e||!r&&e},Qu=function(r,t,e){return {dataType:t}},rs=function(r,t,e){return {dataType:t}},ts=0,es=[{line:1,column:1}],ns=0,us=[],ss=0;if("startRule"in t){if(!(t.startRule in o))throw new Error("Can't start parsing from rule \""+t.startRule+'".');a=o[t.startRule];}function os(r,t){return {type:"literal",text:r,ignoreCase:t}}function as(r,t,e){return {type:"class",parts:r,inverted:t,ignoreCase:e}}function is(t){var e,n=es[t];if(n)return n;for(e=t-1;!es[e];)e--;for(n={line:(n=es[e]).line,column:n.column};e<t;)10===r.charCodeAt(e)?(n.line++,n.column=1):n.column++,e++;return es[t]=n,n}function cs(r,t){var e=is(r),n=is(t);return {start:{offset:r,line:e.line,column:e.column},end:{offset:t,line:n.line,column:n.column}}}function ls(r){ts<ns||(ts>ns&&(ns=ts,us=[]),us.push(r));}function fs(r,t,e){return new u(u.buildMessage(r,t),r,t,e)}function bs(){var r,t;return r=ts,_i()!==s?((t=function(){var r,t,e,n,u,o,a,i;if(r=ts,(t=ds())!==s){if(e=[],n=ts,(u=_i())!==s&&(o=Ni())!==s&&(a=_i())!==s&&(i=ds())!==s?n=u=[u,o,a,i]:(ts=n,n=s),n!==s)for(;n!==s;)e.push(n),n=ts,(u=_i())!==s&&(o=Ni())!==s&&(a=_i())!==s&&(i=ds())!==s?n=u=[u,o,a,i]:(ts=n,n=s);else e=s;e!==s?(t=function(r,t){const e=[r&&r.ast||r];for(let r=0;r<t.length;r++)t[r][3]&&0!==t[r][3].length&&e.push(t[r][3]&&t[r][3].ast||t[r][3]);return {tableList:Array.from(uc),columnList:ec(sc),ast:e}}(t,e),r=t):(ts=r,r=s);}else ts=r,r=s;return r}())===s&&(t=vs())===s&&(t=ds()),t!==s?(r=t):(ts=r,r=s)):(ts=r,r=s),r}function vs(){var t;return (t=function(){var t,e,n,u,o,a;t=ts,(e=sa())!==s&&_i()!==s&&(n=wa())!==s&&_i()!==s&&(u=Js())!==s?(i=e,c=n,(l=u)&&l.forEach(r=>uc.add(`${i}::${r.db}::${r.table}`)),e={tableList:Array.from(uc),columnList:ec(sc),ast:{type:i.toLowerCase(),keyword:c.toLowerCase(),name:l}},t=e):(ts=t,t=s);var i,c,l;t===s&&(t=ts,(e=sa())!==s&&_i()!==s?("procedure"===r.substr(ts,9).toLowerCase()?(n=r.substr(ts,9),ts+=9):(n=s,0===ss&&ls(S)),n!==s&&_i()!==s&&(u=Uo())!==s?(e=function(r,t,e){return {tableList:Array.from(uc),columnList:ec(sc),ast:{type:r.toLowerCase(),keyword:t.toLowerCase(),name:e}}}(e,n,u),t=e):(ts=t,t=s)):(ts=t,t=s),t===s&&(t=ts,(e=sa())!==s&&_i()!==s&&(n=Li())!==s&&_i()!==s&&(u=go())!==s&&_i()!==s&&ha()!==s&&_i()!==s&&(o=eo())!==s&&_i()!==s?((a=function(){var r,t,e,n,u,o;r=ts,(t=Ts())===s&&(t=ms());if(t!==s){for(e=[],n=ts,(u=_i())!==s?((o=Ts())===s&&(o=ms()),o!==s?n=u=[u,o]:(ts=n,n=s)):(ts=n,n=s);n!==s;)e.push(n),n=ts,(u=_i())!==s?((o=Ts())===s&&(o=ms()),o!==s?n=u=[u,o]:(ts=n,n=s)):(ts=n,n=s);e!==s?(t=f(t,e),r=t):(ts=r,r=s);}else ts=r,r=s;return r}())===s&&(a=null),a!==s&&_i()!==s?(e=function(r,t,e,n,u){return {tableList:Array.from(uc),columnList:ec(sc),ast:{type:r.toLowerCase(),keyword:t.toLowerCase(),name:e,table:n,options:u}}}(e,n,u,o,a),t=e):(ts=t,t=s)):(ts=t,t=s)));return t}())===s&&(t=function(){var t;(t=function(){var t,e,n,u,o,a,c,l,f,b;t=ts,(e=ca())!==s&&_i()!==s?((n=la())===s&&(n=null),n!==s&&_i()!==s&&wa()!==s&&_i()!==s?((u=fa())===s&&(u=null),u!==s&&_i()!==s&&(o=Js())!==s&&_i()!==s&&(a=ps())!==s&&_i()!==s?((c=function(){var r,t,e,n,u,o,a,c;if(r=ts,(t=Ms())!==s){for(e=[],n=ts,(u=_i())!==s?((o=Ai())===s&&(o=null),o!==s&&(a=_i())!==s&&(c=Ms())!==s?n=u=[u,o,a,c]:(ts=n,n=s)):(ts=n,n=s);n!==s;)e.push(n),n=ts,(u=_i())!==s?((o=Ai())===s&&(o=null),o!==s&&(a=_i())!==s&&(c=Ms())!==s?n=u=[u,o,a,c]:(ts=n,n=s)):(ts=n,n=s);e!==s?(t=i(t,e),r=t):(ts=r,r=s);}else ts=r,r=s;return r}())===s&&(c=null),c!==s&&_i()!==s?((l=function(){var t,e,n,u;t=ts,"ignore"===r.substr(ts,6).toLowerCase()?(e=r.substr(ts,6),ts+=6):(e=s,0===ss&&ls(me));e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?t=e=[e,n]:(ts=t,t=s)):(ts=t,t=s);return t}())===s&&(l=ba()),l===s&&(l=null),l!==s&&_i()!==s?((f=pa())===s&&(f=null),f!==s&&_i()!==s?((b=Ls())===s&&(b=null),b!==s?(v=e,d=n,L=u,p=a,w=c,E=l,h=f,A=b,(C=o)&&C.forEach(r=>uc.add(`create::${r.db}::${r.table}`)),e={tableList:Array.from(uc),columnList:ec(sc),ast:{type:v[0].toLowerCase(),keyword:"table",temporary:d&&d[0].toLowerCase(),if_not_exists:L&&L[0].toLowerCase(),table:C,ignore_replace:E&&E[0].toLowerCase(),as:h&&h[0].toLowerCase(),query_expr:A&&A.ast,create_definitions:p,table_options:w}},t=e):(ts=t,t=s)):(ts=t,t=s)):(ts=t,t=s)):(ts=t,t=s)):(ts=t,t=s)):(ts=t,t=s)):(ts=t,t=s);var v,d,L,C,p,w,E,h,A;t===s&&(t=ts,(e=ca())!==s&&_i()!==s?((n=la())===s&&(n=null),n!==s&&_i()!==s&&wa()!==s&&_i()!==s?((u=fa())===s&&(u=null),u!==s&&_i()!==s&&(o=Js())!==s&&_i()!==s&&(a=function r(){var t,e;(t=function(){var r,t,e;r=ts,(t=Da())!==s&&_i()!==s&&(e=Js())!==s?(t=function(r){return {type:"like",table:r}}(e),r=t):(ts=r,r=s);return r}())===s&&(t=ts,Ti()!==s&&_i()!==s&&(e=r())!==s&&_i()!==s&&mi()!==s?((n=e).parentheses=!0,t=n):(ts=t,t=s));var n;return t}())!==s?(e=function(r,t,e,n,u){return n&&n.forEach(r=>uc.add(`create::${r.db}::${r.table}`)),{tableList:Array.from(uc),columnList:ec(sc),ast:{type:r[0].toLowerCase(),keyword:"table",temporary:t&&t[0].toLowerCase(),if_not_exists:e&&e[0].toLowerCase(),table:n,like:u}}}(e,n,u,o,a),t=e):(ts=t,t=s)):(ts=t,t=s)):(ts=t,t=s));return t}())===s&&(t=function(){var t,e,n,u,o,a,f,b,v,d,L,C,p,w,E,h,A,y;t=ts,(e=ca())!==s&&_i()!==s?((n=pi())===s&&(n=function(){var t,e,n,u;t=ts,"clustered"===r.substr(ts,9).toLowerCase()?(e=r.substr(ts,9),ts+=9):(e=s,0===ss&&ls(gu));e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="CLUSTERED"):(ts=t,t=s)):(ts=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=ts,"nonclustered"===r.substr(ts,12).toLowerCase()?(e=r.substr(ts,12),ts+=12):(e=s,0===ss&&ls(Tr));e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="NONCLUSTERED"):(ts=t,t=s)):(ts=t,t=s);return t}()),n===s&&(n=null),n!==s&&_i()!==s&&(u=Li())!==s&&_i()!==s&&(o=Uo())!==s&&_i()!==s&&(a=ha())!==s&&_i()!==s&&(f=eo())!==s&&_i()!==s&&Ti()!==s&&_i()!==s&&(b=function(){var r,t,e,n,u,o,a,c;if(r=ts,(t=Cs())!==s){for(e=[],n=ts,(u=_i())!==s&&(o=Ai())!==s&&(a=_i())!==s&&(c=Cs())!==s?n=u=[u,o,a,c]:(ts=n,n=s);n!==s;)e.push(n),n=ts,(u=_i())!==s&&(o=Ai())!==s&&(a=_i())!==s&&(c=Cs())!==s?n=u=[u,o,a,c]:(ts=n,n=s);e!==s?(t=i(t,e),r=t):(ts=r,r=s);}else ts=r,r=s;return r}())!==s&&_i()!==s&&mi()!==s&&_i()!==s?((v=function(){var t,e,n;t=ts,"include"===r.substr(ts,7).toLowerCase()?(e=r.substr(ts,7),ts+=7):(e=s,0===ss&&ls(c));e!==s&&_i()!==s&&Ti()!==s&&_i()!==s&&(n=xo())!==s&&_i()!==s&&mi()!==s?(o=n,e={type:(u=e).toLowerCase(),keyword:u.toLowerCase(),columns:o},t=e):(ts=t,t=s);var u,o;return t}())===s&&(v=null),v!==s&&_i()!==s?((d=uo())===s&&(d=null),d!==s&&_i()!==s?(L=ts,(C=Ia())!==s&&(p=_i())!==s&&(w=Ti())!==s&&(E=_i())!==s&&(h=function(){var r,t,e,n,u,o,a,c;if(r=ts,(t=zs())!==s){for(e=[],n=ts,(u=_i())!==s&&(o=Ai())!==s&&(a=_i())!==s&&(c=zs())!==s?n=u=[u,o,a,c]:(ts=n,n=s);n!==s;)e.push(n),n=ts,(u=_i())!==s&&(o=Ai())!==s&&(a=_i())!==s&&(c=zs())!==s?n=u=[u,o,a,c]:(ts=n,n=s);e!==s?(t=i(t,e),r=t):(ts=r,r=s);}else ts=r,r=s;return r}())!==s&&(A=_i())!==s&&(y=mi())!==s?L=C=[C,p,w,E,h,A,y]:(ts=L,L=s),L===s&&(L=null),L!==s&&(C=_i())!==s?((p=no())===s&&(p=null),p!==s&&(w=_i())!==s?(E=ts,"filestream_on"===r.substr(ts,13).toLowerCase()?(h=r.substr(ts,13),ts+=13):(h=s,0===ss&&ls(l)),h!==s&&(A=_i())!==s&&(y=Uo())!==s?E=h=[h,A,y]:(ts=E,E=s),E===s&&(E=null),E!==s?(T=e,m=n,S=u,I=o,N=a,R=f,_=b,O=v,g=d,x=L,U=p,M=E,e={tableList:Array.from(uc),columnList:ec(sc),ast:{type:T[0].toLowerCase(),index_type:m&&m.toLowerCase(),keyword:S.toLowerCase(),index:I,on_kw:N[0].toLowerCase(),table:R,index_columns:_,include:O,where:g,with:x&&x[4],on:U,filestream_on:M&&{value:M[2]}}},t=e):(ts=t,t=s)):(ts=t,t=s)):(ts=t,t=s)):(ts=t,t=s)):(ts=t,t=s)):(ts=t,t=s)):(ts=t,t=s);var T,m,S,I,N,R,_,O,g,x,U,M;return t}())===s&&(t=function(){var t,e,n,u,o,a;t=ts,(e=ca())!==s&&_i()!==s?((n=function(){var t,e,n,u;t=ts,"database"===r.substr(ts,8).toLowerCase()?(e=r.substr(ts,8),ts+=8):(e=s,0===ss&&ls(ge));e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="DATABASE"):(ts=t,t=s)):(ts=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=ts,"scheme"===r.substr(ts,6).toLowerCase()?(e=r.substr(ts,6),ts+=6):(e=s,0===ss&&ls(xe));e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="SCHEME"):(ts=t,t=s)):(ts=t,t=s);return t}()),n!==s&&_i()!==s?((u=fa())===s&&(u=null),u!==s&&_i()!==s&&(o=ko())!==s&&_i()!==s?((a=function(){var r,t,e,n,u,o;if(r=ts,(t=Us())!==s){for(e=[],n=ts,(u=_i())!==s&&(o=Us())!==s?n=u=[u,o]:(ts=n,n=s);n!==s;)e.push(n),n=ts,(u=_i())!==s&&(o=Us())!==s?n=u=[u,o]:(ts=n,n=s);e!==s?(t=f(t,e),r=t):(ts=r,r=s);}else ts=r,r=s;return r}())===s&&(a=null),a!==s?(i=e,c=u,l=o,b=a,e={tableList:Array.from(uc),columnList:ec(sc),ast:{type:i[0].toLowerCase(),keyword:"database",if_not_exists:c&&c[0].toLowerCase(),database:l,create_definitions:b}},t=e):(ts=t,t=s)):(ts=t,t=s)):(ts=t,t=s)):(ts=t,t=s);var i,c,l,b;return t}());return t}())===s&&(t=function(){var t,e,n,u;t=ts,(e=function(){var t,e,n,u;t=ts,"truncate"===r.substr(ts,8).toLowerCase()?(e=r.substr(ts,8),ts+=8):(e=s,0===ss&&ls(ru));e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="TRUNCATE"):(ts=t,t=s)):(ts=t,t=s);return t}())!==s&&_i()!==s?((n=wa())===s&&(n=null),n!==s&&_i()!==s&&(u=Js())!==s?(o=e,a=n,(i=u)&&i.forEach(r=>uc.add(`${o}::${r.db}::${r.table}`)),e={tableList:Array.from(uc),columnList:ec(sc),ast:{type:o.toLowerCase(),keyword:a&&a.toLowerCase()||"table",name:i}},t=e):(ts=t,t=s)):(ts=t,t=s);var o,a,i;return t}())===s&&(t=function(){var r,t,e;r=ts,(t=va())!==s&&_i()!==s&&wa()!==s&&_i()!==s&&(e=function(){var r,t,e,n,u,o,a,i;if(r=ts,(t=Ws())!==s){for(e=[],n=ts,(u=_i())!==s&&(o=Ai())!==s&&(a=_i())!==s&&(i=Ws())!==s?n=u=[u,o,a,i]:(ts=n,n=s);n!==s;)e.push(n),n=ts,(u=_i())!==s&&(o=Ai())!==s&&(a=_i())!==s&&(i=Ws())!==s?n=u=[u,o,a,i]:(ts=n,n=s);e!==s?(t=b(t,e),r=t):(ts=r,r=s);}else ts=r,r=s;return r}())!==s?((n=e).forEach(r=>r.forEach(r=>r.table&&uc.add(`rename::${r.db}::${r.table}`))),t={tableList:Array.from(uc),columnList:ec(sc),ast:{type:"rename",table:n}},r=t):(ts=r,r=s);var n;return r}())===s&&(t=function(){var t,e,n;t=ts,(e=function(){var t,e,n,u;t=ts,"call"===r.substr(ts,4).toLowerCase()?(e=r.substr(ts,4),ts+=4):(e=s,0===ss&&ls(Ln));e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="CALL"):(ts=t,t=s)):(ts=t,t=s);return t}())!==s&&_i()!==s&&(n=Yi())!==s?(u=n,e={tableList:Array.from(uc),columnList:ec(sc),ast:{type:"call",expr:u}},t=e):(ts=t,t=s);var u;return t}())===s&&(t=function(){var t,e,n;t=ts,(e=function(){var t,e,n,u;t=ts,"use"===r.substr(ts,3).toLowerCase()?(e=r.substr(ts,3),ts+=3):(e=s,0===ss&&ls(de));e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?t=e=[e,n]:(ts=t,t=s)):(ts=t,t=s);return t}())!==s&&_i()!==s&&(n=Uo())!==s?(u=n,uc.add(`use::${u}::null`),e={tableList:Array.from(uc),columnList:ec(sc),ast:{type:"use",db:u}},t=e):(ts=t,t=s);var u;return t}())===s&&(t=function(){var r,t,e,n;r=ts,(t=aa())!==s&&_i()!==s&&wa()!==s&&_i()!==s&&(e=Js())!==s&&_i()!==s&&(n=function(){var r,t,e,n,u,o,a,i;if(r=ts,(t=ys())!==s){for(e=[],n=ts,(u=_i())!==s&&(o=Ai())!==s&&(a=_i())!==s&&(i=ys())!==s?n=u=[u,o,a,i]:(ts=n,n=s);n!==s;)e.push(n),n=ts,(u=_i())!==s&&(o=Ai())!==s&&(a=_i())!==s&&(i=ys())!==s?n=u=[u,o,a,i]:(ts=n,n=s);e!==s?(t=b(t,e),r=t):(ts=r,r=s);}else ts=r,r=s;return r}())!==s?(o=n,(u=e)&&u.length>0&&u.forEach(r=>uc.add(`alter::${r.db}::${r.table}`)),t={tableList:Array.from(uc),columnList:ec(sc),ast:{type:"alter",table:u,expr:o}},r=t):(ts=r,r=s);var u,o;return r}())===s&&(t=function(){var t,e,n,u;t=ts,(e=Ca())!==s&&_i()!==s?((n=function(){var t,e,n,u;t=ts,"global"===r.substr(ts,6).toLowerCase()?(e=r.substr(ts,6),ts+=6):(e=s,0===ss&&ls(Cu));e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="GLOBAL"):(ts=t,t=s)):(ts=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=ts,"session"===r.substr(ts,7).toLowerCase()?(e=r.substr(ts,7),ts+=7):(e=s,0===ss&&ls(pu));e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="SESSION"):(ts=t,t=s)):(ts=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=ts,"local"===r.substr(ts,5).toLowerCase()?(e=r.substr(ts,5),ts+=5):(e=s,0===ss&&ls(Lr));e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="LOCAL"):(ts=t,t=s)):(ts=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=ts,"persist"===r.substr(ts,7).toLowerCase()?(e=r.substr(ts,7),ts+=7):(e=s,0===ss&&ls(wu));e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="PERSIST"):(ts=t,t=s)):(ts=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=ts,"persist_only"===r.substr(ts,12).toLowerCase()?(e=r.substr(ts,12),ts+=12):(e=s,0===ss&&ls(Eu));e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="PERSIST_ONLY"):(ts=t,t=s)):(ts=t,t=s);return t}()),n===s&&(n=null),n!==s&&_i()!==s&&(u=$i())!==s?(o=n,(a=u).keyword=o,e={tableList:Array.from(uc),columnList:ec(sc),ast:{type:"set",expr:a}},t=e):(ts=t,t=s)):(ts=t,t=s);var o,a;return t}())===s&&(t=function(){var t,e,n;t=ts,(e=function(){var t,e,n,u;t=ts,"lock"===r.substr(ts,4).toLowerCase()?(e=r.substr(ts,4),ts+=4):(e=s,0===ss&&ls(O));e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?t=e=[e,n]:(ts=t,t=s)):(ts=t,t=s);return t}())!==s&&_i()!==s&&Ea()!==s&&_i()!==s&&(n=function(){var r,t,e,n,u,o,a,i;if(r=ts,(t=Ds())!==s){for(e=[],n=ts,(u=_i())!==s&&(o=Ai())!==s&&(a=_i())!==s&&(i=Ds())!==s?n=u=[u,o,a,i]:(ts=n,n=s);n!==s;)e.push(n),n=ts,(u=_i())!==s&&(o=Ai())!==s&&(a=_i())!==s&&(i=Ds())!==s?n=u=[u,o,a,i]:(ts=n,n=s);e!==s?(t=Qi(t,e),r=t):(ts=r,r=s);}else ts=r,r=s;return r}())!==s?(u=n,e={tableList:Array.from(uc),columnList:ec(sc),ast:{type:"lock",keyword:"tables",tables:u}},t=e):(ts=t,t=s);var u;return t}())===s&&(t=function(){var t,e;t=ts,(e=function(){var t,e,n,u;t=ts,"unlock"===r.substr(ts,6).toLowerCase()?(e=r.substr(ts,6),ts+=6):(e=s,0===ss&&ls(Re));e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?t=e=[e,n]:(ts=t,t=s)):(ts=t,t=s);return t}())!==s&&_i()!==s&&Ea()!==s?(e={tableList:Array.from(uc),columnList:ec(sc),ast:{type:"unlock",keyword:"tables"}},t=e):(ts=t,t=s);return t}())===s&&(t=function(){var r,t,e,n,u,o;r=ts,(t=oa())!==s&&_i()!==s&&(e=function(){var r,t,e,n,u,o,a,i;if(r=ts,(t=As())!==s){for(e=[],n=ts,(u=_i())!==s&&(o=Ai())!==s&&(a=_i())!==s&&(i=As())!==s?n=u=[u,o,a,i]:(ts=n,n=s);n!==s;)e.push(n),n=ts,(u=_i())!==s&&(o=Ai())!==s&&(a=_i())!==s&&(i=As())!==s?n=u=[u,o,a,i]:(ts=n,n=s);e!==s?(t=b(t,e),r=t):(ts=r,r=s);}else ts=r,r=s;return r}())!==s?(a=e,t={tableList:Array.from(uc),columnList:ec(sc),ast:{type:"declare",declare:a}},r=t):(ts=r,r=s);var a;r===s&&(r=ts,(t=oa())!==s&&_i()!==s&&(e=li())!==s&&_i()!==s&&(n=ko())!==s&&_i()!==s?((u=pa())===s&&(u=null),u!==s&&_i()!==s&&wa()!==s&&_i()!==s&&(o=ps())!==s?(i=n,c=u,l=o,t={tableList:Array.from(uc),columnList:ec(sc),ast:{type:"declare",declare:[{at:"@",name:i,as:c&&c[0].toLowerCase(),keyword:"table",prefix:"table",definition:l}]}},r=t):(ts=r,r=s)):(ts=r,r=s));var i,c,l;return r}()),t}function ds(){var t;return (t=Ls())===s&&(t=function(){var r,t,e,n,u;r=ts,(t=ia())!==s&&_i()!==s&&(e=Js())!==s&&_i()!==s&&Ca()!==s&&_i()!==s&&(n=function(){var r,t,e,n,u,o,a,i;if(r=ts,(t=co())!==s){for(e=[],n=ts,(u=_i())!==s&&(o=Ai())!==s&&(a=_i())!==s&&(i=co())!==s?n=u=[u,o,a,i]:(ts=n,n=s);n!==s;)e.push(n),n=ts,(u=_i())!==s&&(o=Ai())!==s&&(a=_i())!==s&&(i=co())!==s?n=u=[u,o,a,i]:(ts=n,n=s);e!==s?(t=b(t,e),r=t):(ts=r,r=s);}else ts=r,r=s;return r}())!==s&&_i()!==s?((u=uo())===s&&(u=null),u!==s?(a=n,i=u,(o=e)&&o.forEach(r=>{const{db:t,as:e,table:n}=r;uc.add(`update::${t}::${n}`);}),a&&a.forEach(r=>sc.add(`update::${r.table}::${r.column}`)),t={tableList:Array.from(uc),columnList:ec(sc),ast:{type:"update",table:o,set:a,where:i}},r=t):(ts=r,r=s)):(ts=r,r=s);var o,a,i;return r}())===s&&(t=function(){var r,t,e,n,u,o,a;r=ts,(t=bo())!==s&&_i()!==s?((e=La())===s&&(e=null),e!==s&&_i()!==s&&(n=eo())!==s&&_i()!==s?((u=fo())===s&&(u=null),u!==s&&_i()!==s&&Ti()!==s&&_i()!==s&&(o=xo())!==s&&_i()!==s&&mi()!==s&&_i()!==s&&(a=lo())!==s?(t=function(r,t,e,n,u){if(t&&(uc.add(`insert::${t.db}::${t.table}`),t.as=null),n){let r=t&&t.table||null;Array.isArray(u)&&u.forEach((r,t)=>{if(r.value.length!=n.length)throw new Error("Error: column count doesn't match value count at row "+(t+1))}),n.forEach(t=>sc.add(`insert::${r}::${t}`));}return {tableList:Array.from(uc),columnList:ec(sc),ast:{type:r,table:[t],columns:n,values:u,partition:e}}}(t,n,u,o,a),r=t):(ts=r,r=s)):(ts=r,r=s)):(ts=r,r=s);return r}())===s&&(t=function(){var r,t,e,n,u;r=ts,(t=bo())!==s&&_i()!==s&&La()!==s&&_i()!==s&&(e=eo())!==s&&_i()!==s?((n=fo())===s&&(n=null),n!==s&&_i()!==s&&(u=lo())!==s?(o=t,i=n,c=u,(a=e)&&(uc.add(`insert::${a.db}::${a.table}`),sc.add(`insert::${a.table}::(.*)`),a.as=null),t={tableList:Array.from(uc),columnList:ec(sc),ast:{type:o,table:[a],columns:null,values:c,partition:i}},r=t):(ts=r,r=s)):(ts=r,r=s);var o,a,i,c;return r}())===s&&(t=function(){var t,e,n,u,o;t=ts,(e=function(){var t,e,n,u;t=ts,"delete"===r.substr(ts,6).toLowerCase()?(e=r.substr(ts,6),ts+=6):(e=s,0===ss&&ls(X));e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?t=e=[e,n]:(ts=t,t=s)):(ts=t,t=s);return t}())!==s&&_i()!==s?((n=Js())===s&&(n=null),n!==s&&_i()!==s&&(u=Xs())!==s&&_i()!==s?((o=uo())===s&&(o=null),o!==s?(e=function(r,t,e){if(t&&t.forEach(r=>{r.table&&uc.add(`delete::${r.db}::${r.table}`),sc.add(`delete::${r.table}::(.*)`);}),null===r&&1===t.length){const e=t[0];r=[{db:e.db,table:e.table,as:e.as,addition:!0}];}return {tableList:Array.from(uc),columnList:ec(sc),ast:{type:"delete",table:r,from:t,where:e}}}(n,u,o),t=e):(ts=t,t=s)):(ts=t,t=s)):(ts=t,t=s);return t}())===s&&(t=vs())===s&&(t=function(){var r,t;r=[],t=ki();for(;t!==s;)r.push(t),t=ki();return r}()),t}function Ls(){var r,t,e,n,u,o,a,i,c,l;if(r=ts,(t=ks())!==s){for(e=[],n=ts,(u=_i())!==s&&(o=Ta())!==s&&(a=_i())!==s?((i=Oa())===s&&(i=null),i!==s&&(c=_i())!==s&&(l=ks())!==s?n=u=[u,o,a,i,c,l]:(ts=n,n=s)):(ts=n,n=s);n!==s;)e.push(n),n=ts,(u=_i())!==s&&(o=Ta())!==s&&(a=_i())!==s?((i=Oa())===s&&(i=null),i!==s&&(c=_i())!==s&&(l=ks())!==s?n=u=[u,o,a,i,c,l]:(ts=n,n=s)):(ts=n,n=s);e!==s&&(n=_i())!==s?((u=so())===s&&(u=null),u!==s&&(o=_i())!==s?((a=io())===s&&(a=null),a!==s?(r=t=function(r,t,e,n){let u=r;for(let r=0;r<t.length;r++)u._next=t[r][5],u.union=t[r][3]?"union all":"union",u=u._next;return e&&(r._orderby=e),n&&(r._limit=n),{tableList:Array.from(uc),columnList:ec(sc),ast:r}}(t,e,u,a)):(ts=r,r=s)):(ts=r,r=s)):(ts=r,r=s);}else ts=r,r=s;return r}function Cs(){var r,t,e,n;return r=ts,Si()!==s&&_i()!==s&&(t=go())!==s&&_i()!==s&&Ii()!==s&&_i()!==s?((e=Ra())===s&&(e=_a()),e===s&&(e=null),e!==s?(r={column:t,order:(n=e)&&n.toLowerCase()||"asc"}):(ts=r,r=s)):(ts=r,r=s),r===s&&(r=function(){var r,t,e;r=ts,(t=go())!==s&&_i()!==s?((e=Ra())===s&&(e=_a()),e===s&&(e=null),e!==s?(t=function(r,t){return {column:r,order:t&&t.toLowerCase()||"asc"}}(t,e),r=t):(ts=r,r=s)):(ts=r,r=s);return r}()),r}function ps(){var r,t,e,n,u,o,a,i;if(r=ts,Ti()!==s)if(_i()!==s)if((t=ws())!==s){for(e=[],n=ts,(u=_i())!==s&&(o=Ai())!==s&&(a=_i())!==s&&(i=ws())!==s?n=u=[u,o,a,i]:(ts=n,n=s);n!==s;)e.push(n),n=ts,(u=_i())!==s&&(o=Ai())!==s&&(a=_i())!==s&&(i=ws())!==s?n=u=[u,o,a,i]:(ts=n,n=s);e!==s&&(n=_i())!==s?((u=Ai())===s&&(u=null),u!==s&&(o=_i())!==s&&(a=mi())!==s?(r=b(t,e)):(ts=r,r=s)):(ts=r,r=s);}else ts=r,r=s;else ts=r,r=s;else ts=r,r=s;return r}function ws(){var r;return (r=Ns())===s&&(r=hs())===s&&(r=Ss())===s&&(r=Is()),r}function Es(){var t,e,n,u,o,a,i;return t=ts,(e=function(){var e;(e=function(){var t,e,n,u;t=ts,"not null"===r.substr(ts,8).toLowerCase()?(e=r.substr(ts,8),ts+=8):(e=s,0===ss&&ls(ae));e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?t=e=[e,n]:(ts=t,t=s)):(ts=t,t=s);return t}())!==s&&(e={type:"not null",value:"not null"});return e}())===s&&(e=Bo()),e!==s&&((i=e)&&!i.value&&(i.value="null"),e={nullable:i}),(t=e)===s&&(t=ts,(e=function(){var r,t;r=ts,na()!==s&&_i()!==s?((t=Yo())===s&&(t=Eo()),t!==s?(r={type:"default",value:t}):(ts=r,r=s)):(ts=r,r=s);return r}())!==s&&(e={default_val:e}),(t=e)===s&&(t=ts,(e=_s())!==s&&(e={check:e}),(t=e)===s&&(t=ts,"unique"===r.substr(ts,6).toLowerCase()?(e=r.substr(ts,6),ts+=6):(e=s,0===ss&&ls(v)),e===s&&(e=ts,"primary"===r.substr(ts,7).toLowerCase()?(n=r.substr(ts,7),ts+=7):(n=s,0===ss&&ls(d)),n!==s&&(u=_i())!==s?("key"===r.substr(ts,3).toLowerCase()?(o=r.substr(ts,3),ts+=3):(o=s,0===ss&&ls(L)),o!==s?e=n=[n,u,o]:(ts=e,e=s)):(ts=e,e=s)),e!==s&&(e=function(r){let t=[r];return Array.isArray(r)&&(t=[r[0],r[2]]),{unique_or_primary:t.filter(r=>r).join(" ").toLowerCase("")}}(e)),(t=e)===s&&(t=ts,(e=function(){var t,e,n,u,o,a,i,c,l,f,b,v;t=ts,"identity"===r.substr(ts,8).toLowerCase()?(e=r.substr(ts,8),ts+=8):(e=s,0===ss&&ls(C));e!==s&&_i()!==s?(n=ts,(u=Ti())!==s&&(o=_i())!==s&&(a=qo())!==s&&(i=_i())!==s&&(c=Ai())!==s&&(l=_i())!==s&&(f=qo())!==s&&(b=_i())!==s&&(v=mi())!==s?n=u=[u,o,a,i,c,l,f,b,v]:(ts=n,n=s),n===s&&(n=null),n!==s?(e={keyword:"identity",seed:(d=n)&&d[2],increment:d&&d[6],parentheses:!!d},t=e):(ts=t,t=s)):(ts=t,t=s);var d;return t}())!==s&&(e={auto_increment:e}),(t=e)===s&&(t=ts,(e=xi())!==s&&(e={comment:e}),(t=e)===s&&(t=ts,(e=function(){var t,e,n;t=ts,function(){var t,e,n,u;t=ts,"collate"===r.substr(ts,7).toLowerCase()?(e=r.substr(ts,7),ts+=7):(e=s,0===ss&&ls(tr));e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="COLLATE"):(ts=t,t=s)):(ts=t,t=s);return t}()!==s&&_i()!==s?((e=bi())===s&&(e=null),e!==s&&_i()!==s&&(n=ko())!==s?(t={type:"collate",symbol:e,value:n}):(ts=t,t=s)):(ts=t,t=s);return t}())!==s&&(e={collate:e}),(t=e)===s&&(t=ts,(e=function(){var t,e,n;t=ts,"column_format"===r.substr(ts,13).toLowerCase()?(e=r.substr(ts,13),ts+=13):(e=s,0===ss&&ls(p));e!==s&&_i()!==s?("fixed"===r.substr(ts,5).toLowerCase()?(n=r.substr(ts,5),ts+=5):(n=s,0===ss&&ls(w)),n===s&&("dynamic"===r.substr(ts,7).toLowerCase()?(n=r.substr(ts,7),ts+=7):(n=s,0===ss&&ls(E)),n===s&&("default"===r.substr(ts,7).toLowerCase()?(n=r.substr(ts,7),ts+=7):(n=s,0===ss&&ls(h)))),n!==s?(e=function(r,t){return {type:"column_format",value:t.toLowerCase()}}(0,n),t=e):(ts=t,t=s)):(ts=t,t=s);return t}())!==s&&(e={column_format:e}),(t=e)===s&&(t=ts,(e=function(){var t,e,n;t=ts,"storage"===r.substr(ts,7).toLowerCase()?(e=r.substr(ts,7),ts+=7):(e=s,0===ss&&ls(A));e!==s&&_i()!==s?("disk"===r.substr(ts,4).toLowerCase()?(n=r.substr(ts,4),ts+=4):(n=s,0===ss&&ls(y)),n===s&&("memory"===r.substr(ts,6).toLowerCase()?(n=r.substr(ts,6),ts+=6):(n=s,0===ss&&ls(T))),n!==s?(e={type:"storage",value:n.toLowerCase()},t=e):(ts=t,t=s)):(ts=t,t=s);return t}())!==s&&(e={storage:e}),(t=e)===s&&(t=ts,(e=Os())!==s&&(e={reference_definition:e}),(t=e)===s&&(t=ts,(e=xs())!==s&&(n=_i())!==s?((u=bi())===s&&(u=null),u!==s&&(o=_i())!==s&&(a=ko())!==s?(t=e=function(r,t,e){return {character_set:{type:r,value:e,symbol:t}}}(e,u,a)):(ts=t,t=s)):(ts=t,t=s))))))))))),t}function hs(){var r,t,e,n,u,o,a,i,c;return r=ts,(t=go())!==s&&_i()!==s&&(e=Vi())!==s&&(n=_i())!==s?((u=function(){var r,t,e,n,u,o;if(r=ts,(t=Es())!==s)if(_i()!==s){for(e=[],n=ts,(u=_i())!==s&&(o=Es())!==s?n=u=[u,o]:(ts=n,n=s);n!==s;)e.push(n),n=ts,(u=_i())!==s&&(o=Es())!==s?n=u=[u,o]:(ts=n,n=s);e!==s?(r=t=function(r,t){let e=r;for(let r=0;r<t.length;r++)e={...e,...t[r][1]};return e}(t,e)):(ts=r,r=s);}else ts=r,r=s;else ts=r,r=s;return r}())===s&&(u=null),u!==s?(a=t,i=e,c=u,sc.add(`create::${a.table}::${a.column}`),r=t={column:a,definition:i,resource:"column",...c||{}}):(ts=r,r=s)):(ts=r,r=s),r===s&&(r=ts,(t=go())!==s&&_i()!==s?(e=ts,(n=pa())!==s&&(u=_i())!==s&&(o=Eo())!==s?e=n=[n,u,o]:(ts=e,e=s),e===s&&(e=null),e!==s?(r=t=function(r,t){return t&&(r.as=t[2]),{column:r,resource:"column"}}(t,e)):(ts=r,r=s)):(ts=r,r=s)),r}function As(){var t,e,n,u,o,a,i,c,l,f,b;return t=ts,li()!==s&&_i()!==s&&(e=ko())!==s&&_i()!==s?((n=pa())===s&&(n=null),n!==s&&_i()!==s&&(u=Vi())!==s&&_i()!==s?(o=ts,(a=bi())!==s&&(i=_i())!==s&&(c=Eo())!==s?o=a=[a,i,c]:(ts=o,o=s),o===s&&(o=null),o!==s?(f=u,b=o,t={at:"@",name:e,as:(l=n)&&l[0].toLowerCase(),prefix:f,keyword:"variable",definition:b&&b[2]}):(ts=t,t=s)):(ts=t,t=s)):(ts=t,t=s),t===s&&(t=ts,li()!==s&&_i()!==s&&(e=ko())!==s&&_i()!==s?("cursor"===r.substr(ts,6).toLowerCase()?(n=r.substr(ts,6),ts+=6):(n=s,0===ss&&ls(m)),n!==s?(t=function(r,t){return {at:"@",name:t,keyword:"cursor",prefix:"cursor"}}(0,e)):(ts=t,t=s)):(ts=t,t=s)),t}function ys(){var t;return (t=function(){var r,t;r=ts,vi()!==s&&_i()!==s&&(t=Ns())!==s?(r={action:"add",create_definitions:t,resource:"constraint",type:"alter"}):(ts=r,r=s);return r}())===s&&(t=function(){var r,t,e,n;r=ts,(t=sa())!==s&&_i()!==s&&(e=Ei())!==s&&_i()!==s&&(n=ko())!==s?(t={action:"drop",constraint:n,keyword:e.toLowerCase(),resource:"constraint",type:"alter"},r=t):(ts=r,r=s);return r}())===s&&(t=function(){var t,e,n,u;t=ts,Ia()!==s&&_i()!==s?("check"===r.substr(ts,5).toLowerCase()?(e=r.substr(ts,5),ts+=5):(e=s,0===ss&&ls(M)),e!==s&&_i()!==s?("check"===r.substr(ts,5).toLowerCase()?(n=r.substr(ts,5),ts+=5):(n=s,0===ss&&ls(M)),n!==s&&_i()!==s&&Ei()!==s&&_i()!==s&&(u=ko())!==s?(t={action:"with",constraint:u,keyword:"check check constraint",resource:"constraint",type:"alter"}):(ts=t,t=s)):(ts=t,t=s)):(ts=t,t=s);return t}())===s&&(t=function(){var t,e,n;t=ts,"nocheck"===r.substr(ts,7).toLowerCase()?(e=r.substr(ts,7),ts+=7):(e=s,0===ss&&ls(D));e!==s&&_i()!==s&&Ei()!==s&&_i()!==s&&(n=ko())!==s?(t=e={action:"nocheck",keyword:"constraint",constraint:n,resource:"constraint",type:"alter"}):(ts=t,t=s);return t}())===s&&(t=function(){var r,t,e,n;r=ts,(t=vi())===s&&(t=aa());t!==s&&_i()!==s?((e=di())===s&&(e=null),e!==s&&_i()!==s&&(n=hs())!==s?(u=e,o=n,t={action:t.toLowerCase(),...o,keyword:u,resource:"column",type:"alter"},r=t):(ts=r,r=s)):(ts=r,r=s);var u,o;return r}())===s&&(t=function(){var r,t,e;r=ts,sa()!==s&&_i()!==s?((t=di())===s&&(t=null),t!==s&&_i()!==s&&(e=go())!==s?(r={action:"drop",column:e,keyword:t,resource:"column",type:"alter"}):(ts=r,r=s)):(ts=r,r=s);return r}())===s&&(t=function(){var r,t,e;r=ts,(t=vi())!==s&&_i()!==s&&(e=Ss())!==s?(n=e,t={action:"add",type:"alter",...n},r=t):(ts=r,r=s);var n;return r}())===s&&(t=function(){var r,t,e;r=ts,(t=vi())!==s&&_i()!==s&&(e=Is())!==s?(n=e,t={action:"add",type:"alter",...n},r=t):(ts=r,r=s);var n;return r}())===s&&(t=function(){var r,t,e,n;r=ts,(t=va())!==s&&_i()!==s?((e=ua())===s&&(e=pa()),e===s&&(e=null),e!==s&&_i()!==s&&(n=Uo())!==s?(o=n,t={action:"rename",type:"alter",resource:"table",keyword:(u=e)&&u[0].toLowerCase(),table:o},r=t):(ts=r,r=s)):(ts=r,r=s);var u,o;return r}())===s&&(t=Ts())===s&&(t=ms()),t}function Ts(){var t,e,n,u;return t=ts,"algorithm"===r.substr(ts,9).toLowerCase()?(e=r.substr(ts,9),ts+=9):(e=s,0===ss&&ls(I)),e!==s&&_i()!==s?((n=bi())===s&&(n=null),n!==s&&_i()!==s?("default"===r.substr(ts,7).toLowerCase()?(u=r.substr(ts,7),ts+=7):(u=s,0===ss&&ls(h)),u===s&&("instant"===r.substr(ts,7).toLowerCase()?(u=r.substr(ts,7),ts+=7):(u=s,0===ss&&ls(N)),u===s&&("inplace"===r.substr(ts,7).toLowerCase()?(u=r.substr(ts,7),ts+=7):(u=s,0===ss&&ls(R)),u===s&&("copy"===r.substr(ts,4).toLowerCase()?(u=r.substr(ts,4),ts+=4):(u=s,0===ss&&ls(_))))),u!==s?(t=e={type:"alter",keyword:"algorithm",resource:"algorithm",symbol:n,algorithm:u}):(ts=t,t=s)):(ts=t,t=s)):(ts=t,t=s),t}function ms(){var t,e,n,u;return t=ts,"lock"===r.substr(ts,4).toLowerCase()?(e=r.substr(ts,4),ts+=4):(e=s,0===ss&&ls(O)),e!==s&&_i()!==s?((n=bi())===s&&(n=null),n!==s&&_i()!==s?("default"===r.substr(ts,7).toLowerCase()?(u=r.substr(ts,7),ts+=7):(u=s,0===ss&&ls(h)),u===s&&("none"===r.substr(ts,4).toLowerCase()?(u=r.substr(ts,4),ts+=4):(u=s,0===ss&&ls(g)),u===s&&("shared"===r.substr(ts,6).toLowerCase()?(u=r.substr(ts,6),ts+=6):(u=s,0===ss&&ls(x)),u===s&&("exclusive"===r.substr(ts,9).toLowerCase()?(u=r.substr(ts,9),ts+=9):(u=s,0===ss&&ls(U))))),u!==s?(t=e={type:"alter",keyword:"lock",resource:"lock",symbol:n,lock:u}):(ts=t,t=s)):(ts=t,t=s)):(ts=t,t=s),t}function Ss(){var r,t,e,n,u,o,a,i;return r=ts,(t=Li())===s&&(t=Ci()),t!==s&&_i()!==s?((e=Do())===s&&(e=null),e!==s&&_i()!==s?((n=Vs())===s&&(n=null),n!==s&&_i()!==s&&(u=Ps())!==s&&_i()!==s?((o=Ks())===s&&(o=null),o!==s&&_i()!==s?(a=n,i=o,r=t={index:e,definition:u,keyword:t.toLowerCase(),index_type:a,resource:"index",index_options:i}):(ts=r,r=s)):(ts=r,r=s)):(ts=r,r=s)):(ts=r,r=s),r}function Is(){var t,e,n,u,o,a,i,c,l;return t=ts,(e=function(){var t,e,n,u;t=ts,"fulltext"===r.substr(ts,8).toLowerCase()?(e=r.substr(ts,8),ts+=8):(e=s,0===ss&&ls(_u));e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="FULLTEXT"):(ts=t,t=s)):(ts=t,t=s);return t}())===s&&(e=function(){var t,e,n,u;t=ts,"spatial"===r.substr(ts,7).toLowerCase()?(e=r.substr(ts,7),ts+=7):(e=s,0===ss&&ls(Ou));e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="SPATIAL"):(ts=t,t=s)):(ts=t,t=s);return t}()),e!==s&&_i()!==s?((n=Li())===s&&(n=Ci()),n===s&&(n=null),n!==s&&_i()!==s?((u=Do())===s&&(u=null),u!==s&&_i()!==s&&(o=Ps())!==s&&_i()!==s?((a=Ks())===s&&(a=null),a!==s&&_i()!==s?(i=e,l=a,t=e={index:u,definition:o,keyword:(c=n)&&`${i.toLowerCase()} ${c.toLowerCase()}`||i.toLowerCase(),index_options:l,resource:"index"}):(ts=t,t=s)):(ts=t,t=s)):(ts=t,t=s)):(ts=t,t=s),t}function Ns(){var t;return (t=function(){var t,e,n,u,o,a;t=ts,(e=Rs())===s&&(e=null);e!==s&&_i()!==s?("primary key"===r.substr(ts,11).toLowerCase()?(n=r.substr(ts,11),ts+=11):(n=s,0===ss&&ls(k)),n!==s&&_i()!==s?((u=Vs())===s&&(u=null),u!==s&&_i()!==s&&(o=Ps())!==s&&_i()!==s?((a=Ks())===s&&(a=null),a!==s?(c=n,l=u,f=o,b=a,e={constraint:(i=e)&&i.constraint,definition:f,constraint_type:c.toLowerCase(),keyword:i&&i.keyword,index_type:l,resource:"constraint",index_options:b},t=e):(ts=t,t=s)):(ts=t,t=s)):(ts=t,t=s)):(ts=t,t=s);var i,c,l,f,b;return t}())===s&&(t=function(){var r,t,e,n,u,o,a,i;r=ts,(t=Rs())===s&&(t=null);t!==s&&_i()!==s&&(e=pi())!==s&&_i()!==s?((n=Li())===s&&(n=Ci()),n===s&&(n=null),n!==s&&_i()!==s?((u=Do())===s&&(u=null),u!==s&&_i()!==s?((o=Vs())===s&&(o=null),o!==s&&_i()!==s&&(a=Ps())!==s&&_i()!==s?((i=Ks())===s&&(i=null),i!==s?(l=e,f=n,b=u,v=o,d=a,L=i,t={constraint:(c=t)&&c.constraint,definition:d,constraint_type:f&&`${l.toLowerCase()} ${f.toLowerCase()}`||l.toLowerCase(),keyword:c&&c.keyword,index_type:v,index:b,resource:"constraint",index_options:L},r=t):(ts=r,r=s)):(ts=r,r=s)):(ts=r,r=s)):(ts=r,r=s)):(ts=r,r=s);var c,l,f,b,v,d,L;return r}())===s&&(t=function(){var t,e,n,u,o,a;t=ts,(e=Rs())===s&&(e=null);e!==s&&_i()!==s?("foreign key"===r.substr(ts,11).toLowerCase()?(n=r.substr(ts,11),ts+=11):(n=s,0===ss&&ls(G)),n!==s&&_i()!==s?((u=Do())===s&&(u=null),u!==s&&_i()!==s&&(o=Ps())!==s&&_i()!==s?((a=Os())===s&&(a=null),a!==s?(c=n,l=u,f=o,b=a,e={constraint:(i=e)&&i.constraint,definition:f,constraint_type:c,keyword:i&&i.keyword,index:l,resource:"constraint",reference_definition:b},t=e):(ts=t,t=s)):(ts=t,t=s)):(ts=t,t=s)):(ts=t,t=s);var i,c,l,f,b;return t}())===s&&(t=_s()),t}function Rs(){var r,t,e,n;return r=ts,(t=Ei())!==s&&_i()!==s?((e=Uo())===s&&(e=null),e!==s?(n=e,r=t={keyword:t.toLowerCase(),constraint:n}):(ts=r,r=s)):(ts=r,r=s),r}function _s(){var t,e,n,u,o,a,i,c,l,f,b,v,d;return t=ts,(e=Rs())===s&&(e=null),e!==s&&_i()!==s?("check"===r.substr(ts,5).toLowerCase()?(n=r.substr(ts,5),ts+=5):(n=s,0===ss&&ls(M)),n!==s&&_i()!==s?(u=ts,"not"===r.substr(ts,3).toLowerCase()?(o=r.substr(ts,3),ts+=3):(o=s,0===ss&&ls($)),o!==s&&(a=_i())!==s?("for"===r.substr(ts,3).toLowerCase()?(i=r.substr(ts,3),ts+=3):(i=s,0===ss&&ls(F)),i!==s&&(c=_i())!==s?("replication"===r.substr(ts,11).toLowerCase()?(l=r.substr(ts,11),ts+=11):(l=s,0===ss&&ls(P)),l!==s&&(f=_i())!==s?u=o=[o,a,i,c,l,f]:(ts=u,u=s)):(ts=u,u=s)):(ts=u,u=s),u===s&&(u=null),u!==s&&(o=Ti())!==s&&(a=_i())!==s&&(i=Eo())!==s&&(c=_i())!==s&&(l=mi())!==s?(b=e,v=u,d=i,t=e={constraint_type:n.toLowerCase(),keyword:b&&b.keyword,constraint:b&&b.constraint,index_type:v&&{keyword:"not for replication",type:""},definition:[d],resource:"constraint"}):(ts=t,t=s)):(ts=t,t=s)):(ts=t,t=s),t}function Os(){var t,e,n,u,o,a,i,c,l,f;return t=ts,(e=function(){var t,e,n,u;t=ts,"references"===r.substr(ts,10).toLowerCase()?(e=r.substr(ts,10),ts+=10):(e=s,0===ss&&ls(Mu));e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="REFERENCES"):(ts=t,t=s)):(ts=t,t=s);return t}())!==s&&_i()!==s&&(n=Js())!==s&&_i()!==s&&(u=Ps())!==s&&_i()!==s?("match full"===r.substr(ts,10).toLowerCase()?(o=r.substr(ts,10),ts+=10):(o=s,0===ss&&ls(H)),o===s&&("match partial"===r.substr(ts,13).toLowerCase()?(o=r.substr(ts,13),ts+=13):(o=s,0===ss&&ls(j)),o===s&&("match simple"===r.substr(ts,12).toLowerCase()?(o=r.substr(ts,12),ts+=12):(o=s,0===ss&&ls(Y)))),o===s&&(o=null),o!==s&&_i()!==s?((a=gs())===s&&(a=null),a!==s&&_i()!==s?((i=gs())===s&&(i=null),i!==s?(c=o,l=a,f=i,t=e={definition:u,table:n,keyword:e.toLowerCase(),match:c&&c.toLowerCase(),on_delete:l,on_update:f}):(ts=t,t=s)):(ts=t,t=s)):(ts=t,t=s)):(ts=t,t=s),t}function gs(){var t,e,n,u,o,a;return t=ts,"on"===r.substr(ts,2).toLowerCase()?(e=r.substr(ts,2),ts+=2):(e=s,0===ss&&ls(B)),e!==s&&_i()!==s?("delete"===r.substr(ts,6).toLowerCase()?(n=r.substr(ts,6),ts+=6):(n=s,0===ss&&ls(X)),n===s&&("update"===r.substr(ts,6).toLowerCase()?(n=r.substr(ts,6),ts+=6):(n=s,0===ss&&ls(W))),n!==s&&_i()!==s&&(u=function(){var e;"restrict"===r.substr(ts,8).toLowerCase()?(e=r.substr(ts,8),ts+=8):(e=s,0===ss&&ls(V));e===s&&("cascade"===r.substr(ts,7).toLowerCase()?(e=r.substr(ts,7),ts+=7):(e=s,0===ss&&ls(K)),e===s&&("set null"===r.substr(ts,8).toLowerCase()?(e=r.substr(ts,8),ts+=8):(e=s,0===ss&&ls(q)),e===s&&("no action"===r.substr(ts,9).toLowerCase()?(e=r.substr(ts,9),ts+=9):(e=s,0===ss&&ls(Z)),e===s&&("set default"===r.substr(ts,11).toLowerCase()?(e=r.substr(ts,11),ts+=11):(e=s,0===ss&&ls(z))))));e!==s&&(e=e.toLowerCase());return e}())!==s?(o=n,a=u,t=e={type:`${e.toLowerCase()} ${o.toLowerCase()}`,value:a}):(ts=t,t=s)):(ts=t,t=s),t}function xs(){var t,e,n;return t=ts,"character"===r.substr(ts,9).toLowerCase()?(e=r.substr(ts,9),ts+=9):(e=s,0===ss&&ls(J)),e!==s&&_i()!==s?("set"===r.substr(ts,3).toLowerCase()?(n=r.substr(ts,3),ts+=3):(n=s,0===ss&&ls(Q)),n!==s?(t=e="CHARACTER SET"):(ts=t,t=s)):(ts=t,t=s),t}function Us(){var t,e,n,u,o,a,i,c,l;return t=ts,(e=na())===s&&(e=null),e!==s&&_i()!==s?((n=xs())===s&&("charset"===r.substr(ts,7).toLowerCase()?(n=r.substr(ts,7),ts+=7):(n=s,0===ss&&ls(rr)),n===s&&("collate"===r.substr(ts,7).toLowerCase()?(n=r.substr(ts,7),ts+=7):(n=s,0===ss&&ls(tr)))),n!==s&&_i()!==s?((u=bi())===s&&(u=null),u!==s&&_i()!==s&&(o=ko())!==s?(i=n,c=u,l=o,t=e={keyword:(a=e)&&`${a[0].toLowerCase()} ${i.toLowerCase()}`||i.toLowerCase(),symbol:c,value:l}):(ts=t,t=s)):(ts=t,t=s)):(ts=t,t=s),t}function Ms(){var t,e,n,u,o,a,i,c,l;return t=ts,"auto_increment"===r.substr(ts,14).toLowerCase()?(e=r.substr(ts,14),ts+=14):(e=s,0===ss&&ls(er)),e===s&&("avg_row_length"===r.substr(ts,14).toLowerCase()?(e=r.substr(ts,14),ts+=14):(e=s,0===ss&&ls(nr)),e===s&&("key_block_size"===r.substr(ts,14).toLowerCase()?(e=r.substr(ts,14),ts+=14):(e=s,0===ss&&ls(ur)),e===s&&("max_rows"===r.substr(ts,8).toLowerCase()?(e=r.substr(ts,8),ts+=8):(e=s,0===ss&&ls(sr)),e===s&&("min_rows"===r.substr(ts,8).toLowerCase()?(e=r.substr(ts,8),ts+=8):(e=s,0===ss&&ls(or)),e===s&&("stats_sample_pages"===r.substr(ts,18).toLowerCase()?(e=r.substr(ts,18),ts+=18):(e=s,0===ss&&ls(ar))))))),e!==s&&_i()!==s?((n=bi())===s&&(n=null),n!==s&&_i()!==s&&(u=qo())!==s?(c=n,l=u,t=e={keyword:e.toLowerCase(),symbol:c,value:l.value}):(ts=t,t=s)):(ts=t,t=s),t===s&&(t=Us())===s&&(t=ts,(e=wi())===s&&("connection"===r.substr(ts,10).toLowerCase()?(e=r.substr(ts,10),ts+=10):(e=s,0===ss&&ls(ir))),e!==s&&_i()!==s?((n=bi())===s&&(n=null),n!==s&&_i()!==s&&(u=Xo())!==s?(t=e=function(r,t,e){return {keyword:r.toLowerCase(),symbol:t,value:`'${e.value}'`}}(e,n,u)):(ts=t,t=s)):(ts=t,t=s),t===s&&(t=ts,"compression"===r.substr(ts,11).toLowerCase()?(e=r.substr(ts,11),ts+=11):(e=s,0===ss&&ls(cr)),e!==s&&_i()!==s?((n=bi())===s&&(n=null),n!==s&&_i()!==s?(u=ts,39===r.charCodeAt(ts)?(o="'",ts++):(o=s,0===ss&&ls(lr)),o!==s?("zlib"===r.substr(ts,4).toLowerCase()?(a=r.substr(ts,4),ts+=4):(a=s,0===ss&&ls(fr)),a===s&&("lz4"===r.substr(ts,3).toLowerCase()?(a=r.substr(ts,3),ts+=3):(a=s,0===ss&&ls(br)),a===s&&("none"===r.substr(ts,4).toLowerCase()?(a=r.substr(ts,4),ts+=4):(a=s,0===ss&&ls(g)))),a!==s?(39===r.charCodeAt(ts)?(i="'",ts++):(i=s,0===ss&&ls(lr)),i!==s?u=o=[o,a,i]:(ts=u,u=s)):(ts=u,u=s)):(ts=u,u=s),u!==s?(t=e=function(r,t,e){return {keyword:r.toLowerCase(),symbol:t,value:e.join("").toUpperCase()}}(e,n,u)):(ts=t,t=s)):(ts=t,t=s)):(ts=t,t=s),t===s&&(t=ts,"engine"===r.substr(ts,6).toLowerCase()?(e=r.substr(ts,6),ts+=6):(e=s,0===ss&&ls(vr)),e!==s&&_i()!==s?((n=bi())===s&&(n=null),n!==s&&_i()!==s&&(u=ko())!==s?(t=e=function(r,t,e){return {keyword:r.toLowerCase(),symbol:t,value:e.toUpperCase()}}(e,n,u)):(ts=t,t=s)):(ts=t,t=s)))),t}function Ds(){var t,e,n,u,o;return t=ts,(e=ro())!==s&&_i()!==s&&(n=function(){var t,e,n;return t=ts,"read"===r.substr(ts,4).toLowerCase()?(e=r.substr(ts,4),ts+=4):(e=s,0===ss&&ls(dr)),e!==s&&_i()!==s?("local"===r.substr(ts,5).toLowerCase()?(n=r.substr(ts,5),ts+=5):(n=s,0===ss&&ls(Lr)),n===s&&(n=null),n!==s?(t=e={type:"read",suffix:n&&"local"}):(ts=t,t=s)):(ts=t,t=s),t===s&&(t=ts,"low_priority"===r.substr(ts,12).toLowerCase()?(e=r.substr(ts,12),ts+=12):(e=s,0===ss&&ls(Cr)),e===s&&(e=null),e!==s&&_i()!==s?("write"===r.substr(ts,5).toLowerCase()?(n=r.substr(ts,5),ts+=5):(n=s,0===ss&&ls(pr)),n!==s?(t=e={type:"write",prefix:e&&"low_priority"}):(ts=t,t=s)):(ts=t,t=s)),t}())!==s?(u=e,o=n,uc.add(`lock::${u.db}::${u.table}`),t=e={table:u,lock_type:o}):(ts=t,t=s),t}function ks(){var t,e,n,u,o,a,i;return (t=Gs())===s&&(t=ts,e=ts,40===r.charCodeAt(ts)?(n="(",ts++):(n=s,0===ss&&ls(wr)),n!==s&&(u=_i())!==s&&(o=ks())!==s&&(a=_i())!==s?(41===r.charCodeAt(ts)?(i=")",ts++):(i=s,0===ss&&ls(Er)),i!==s?e=n=[n,u,o,a,i]:(ts=e,e=s)):(ts=e,e=s),e!==s&&(e={...e[2],parentheses_symbol:!0}),t=e),t}function $s(){var t,e,n,u,o,a,i,c,l;if(t=ts,Ia()!==s)if(_i()!==s)if((e=Fs())!==s){for(n=[],u=ts,(o=_i())!==s&&(a=Ai())!==s&&(i=_i())!==s&&(c=Fs())!==s?u=o=[o,a,i,c]:(ts=u,u=s);u!==s;)n.push(u),u=ts,(o=_i())!==s&&(a=Ai())!==s&&(i=_i())!==s&&(c=Fs())!==s?u=o=[o,a,i,c]:(ts=u,u=s);n!==s?(t=b(e,n)):(ts=t,t=s);}else ts=t,t=s;else ts=t,t=s;else ts=t,t=s;return t===s&&(t=ts,_i()!==s&&Ia()!==s&&(e=_i())!==s&&(n=function(){var t,e,n,u;t=ts,"RECURSIVE"===r.substr(ts,9)?(e="RECURSIVE",ts+=9):(e=s,0===ss&&ls(Ae));e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?t=e=[e,n]:(ts=t,t=s)):(ts=t,t=s);return t}())!==s&&(u=_i())!==s&&(o=Fs())!==s?((l=o).recursive=!0,t=[l]):(ts=t,t=s)),t}function Fs(){var r,t,e,n,u;return r=ts,(t=Xo())===s&&(t=ko()),t!==s&&_i()!==s?((e=Ps())===s&&(e=null),e!==s&&_i()!==s&&pa()!==s&&_i()!==s&&Ti()!==s&&_i()!==s&&(n=Ls())!==s&&_i()!==s&&mi()!==s?("string"==typeof(u=t)&&(u={type:"default",value:u}),r=t={name:u,stmt:n,columns:e}):(ts=r,r=s)):(ts=r,r=s),r}function Ps(){var r,t,e,n,u,o,a,i;if(r=ts,Ti()!==s)if(_i()!==s)if((t=Do())!==s){for(e=[],n=ts,(u=_i())!==s&&(o=Ai())!==s&&(a=_i())!==s&&(i=Do())!==s?n=u=[u,o,a,i]:(ts=n,n=s);n!==s;)e.push(n),n=ts,(u=_i())!==s&&(o=Ai())!==s&&(a=_i())!==s&&(i=Do())!==s?n=u=[u,o,a,i]:(ts=n,n=s);e!==s&&(n=_i())!==s&&(u=mi())!==s?(r=b(t,e)):(ts=r,r=s);}else ts=r,r=s;else ts=r,r=s;else ts=r,r=s;return r}function Gs(){var t,e,n,u,o,a,i,c,l,f,b,v;return t=ts,_i()!==s?((e=$s())===s&&(e=null),e!==s&&_i()!==s&&function(){var t,e,n,u;t=ts,"select"===r.substr(ts,6).toLowerCase()?(e=r.substr(ts,6),ts+=6):(e=s,0===ss&&ls(Ce));e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?t=e=[e,n]:(ts=t,t=s)):(ts=t,t=s);return t}()!==s&&Oi()!==s?((n=function(){var r,t,e,n,u,o;if(r=ts,(t=Hs())!==s){for(e=[],n=ts,(u=_i())!==s&&(o=Hs())!==s?n=u=[u,o]:(ts=n,n=s);n!==s;)e.push(n),n=ts,(u=_i())!==s&&(o=Hs())!==s?n=u=[u,o]:(ts=n,n=s);e!==s?(t=function(r,t){const e=[r];for(let r=0,n=t.length;r<n;++r)e.push(t[r][1]);return e}(t,e),r=t):(ts=r,r=s);}else ts=r,r=s;return r}())===s&&(n=null),n!==s&&_i()!==s?((u=function(){var t,e,n,u;t=ts,(e=function(){var t,e,n,u;t=ts,"top"===r.substr(ts,3).toLowerCase()?(e=r.substr(ts,3),ts+=3):(e=s,0===ss&&ls(le));e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?t=e=[e,n]:(ts=t,t=s)):(ts=t,t=s);return t}())!==s&&_i()!==s&&(n=Zo())!==s&&_i()!==s?("percent"===r.substr(ts,7).toLowerCase()?(u=r.substr(ts,7),ts+=7):(u=s,0===ss&&ls(hr)),u===s&&(u=null),u!==s?(e={value:n,percent:(o=u)&&o.toLowerCase()},t=e):(ts=t,t=s)):(ts=t,t=s);var o;return t}())===s&&(u=null),u!==s&&_i()!==s?((o=ga())===s&&(o=null),o!==s&&_i()!==s&&(a=js())!==s&&_i()!==s?((i=Xs())===s&&(i=null),i!==s&&_i()!==s?((c=uo())===s&&(c=null),c!==s&&_i()!==s?((l=function(){var t,e,n;t=ts,(e=function(){var t,e,n,u;t=ts,"group"===r.substr(ts,5).toLowerCase()?(e=r.substr(ts,5),ts+=5):(e=s,0===ss&&ls(We));e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?t=e=[e,n]:(ts=t,t=s)):(ts=t,t=s);return t}())!==s&&_i()!==s&&Na()!==s&&_i()!==s&&(n=Lo())!==s?(e=n.value,t=e):(ts=t,t=s);return t}())===s&&(l=null),l!==s&&_i()!==s?((f=function(){var t,e;t=ts,function(){var t,e,n,u;t=ts,"having"===r.substr(ts,6).toLowerCase()?(e=r.substr(ts,6),ts+=6):(e=s,0===ss&&ls(qe));e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?t=e=[e,n]:(ts=t,t=s)):(ts=t,t=s);return t}()!==s&&_i()!==s&&(e=Eo())!==s?(t=e):(ts=t,t=s);return t}())===s&&(f=null),f!==s&&_i()!==s?((b=so())===s&&(b=null),b!==s&&_i()!==s?((v=io())===s&&(v=null),v!==s?(t=function(r,t,e,n,u,s,o,a,i,c,l){return s&&s.forEach(r=>r.table&&uc.add(`select::${r.db}::${r.table}`)),{with:r,type:"select",options:t,distinct:n,columns:u,from:s,where:o,groupby:a,having:i,top:e,orderby:c,limit:l}}(e,n,u,o,a,i,c,l,f,b,v)):(ts=t,t=s)):(ts=t,t=s)):(ts=t,t=s)):(ts=t,t=s)):(ts=t,t=s)):(ts=t,t=s)):(ts=t,t=s)):(ts=t,t=s)):(ts=t,t=s)):(ts=t,t=s)):(ts=t,t=s),t}function Hs(){var e;return (e=function(){var t;"sql_calc_found_rows"===r.substr(ts,19).toLowerCase()?(t=r.substr(ts,19),ts+=19):(t=s,0===ss&&ls(Du));return t}())===s&&((e=function(){var t;"sql_cache"===r.substr(ts,9).toLowerCase()?(t=r.substr(ts,9),ts+=9):(t=s,0===ss&&ls(ku));return t}())===s&&(e=function(){var t;"sql_no_cache"===r.substr(ts,12).toLowerCase()?(t=r.substr(ts,12),ts+=12):(t=s,0===ss&&ls($u));return t}()),e===s&&(e=function(){var t;"sql_big_result"===r.substr(ts,14).toLowerCase()?(t=r.substr(ts,14),ts+=14):(t=s,0===ss&&ls(Pu));return t}())===s&&(e=function(){var t;"sql_small_result"===r.substr(ts,16).toLowerCase()?(t=r.substr(ts,16),ts+=16):(t=s,0===ss&&ls(Fu));return t}())===s&&(e=function(){var t;"sql_buffer_result"===r.substr(ts,17).toLowerCase()?(t=r.substr(ts,17),ts+=17):(t=s,0===ss&&ls(Gu));return t}())),e!==s&&(e=e),e}function js(){var r,t,e,n,u,o,a,i,c,l;if(r=ts,(t=Oa())===s&&(t=ts,(e=yi())!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?t=e=[e,n]:(ts=t,t=s)):(ts=t,t=s),t===s&&(t=yi())),t!==s){for(e=[],n=ts,(u=_i())!==s&&(o=Ai())!==s&&(a=_i())!==s&&(i=Ys())!==s?n=u=[u,o,a,i]:(ts=n,n=s);n!==s;)e.push(n),n=ts,(u=_i())!==s&&(o=Ai())!==s&&(a=_i())!==s&&(i=Ys())!==s?n=u=[u,o,a,i]:(ts=n,n=s);e!==s?(c=t,l=e,sc.add("select::null::(.*)"),r=t=l&&l.length>0?(c[0]={expr:{type:"column_ref",table:null,column:"*"},as:null},Qi(c[0],l)):c[0]):(ts=r,r=s);}else ts=r,r=s;if(r===s)if(r=ts,(t=Ys())!==s){for(e=[],n=ts,(u=_i())!==s&&(o=Ai())!==s&&(a=_i())!==s&&(i=Ys())!==s?n=u=[u,o,a,i]:(ts=n,n=s);n!==s;)e.push(n),n=ts,(u=_i())!==s&&(o=Ai())!==s&&(a=_i())!==s&&(i=Ys())!==s?n=u=[u,o,a,i]:(ts=n,n=s);e!==s?(r=t=b(t,e)):(ts=r,r=s);}else ts=r,r=s;return r}function Ys(){var r,t,e,n;return r=ts,(t=Uo())!==s&&_i()!==s&&(e=hi())!==s&&_i()!==s&&yi()!==s?(n=t,sc.add(`select::${n}::(.*)`),r=t={expr:{type:"column_ref",table:n,column:"*"},as:null}):(ts=r,r=s),r===s&&(r=ts,(t=Eo())!==s&&_i()!==s?((e=Bs())===s&&(e=null),e!==s?(r=t={expr:t,as:e}):(ts=r,r=s)):(ts=r,r=s)),r}function Bs(){var r,t,e;return r=ts,(t=pa())!==s&&_i()!==s&&(e=function(){var r,t;r=ts,(t=ko())!==s?((function(r){if(!0===qi[r.toUpperCase()])throw new Error("Error: "+JSON.stringify(r)+" is a reserved word, can not as alias clause");return !1}(t)?s:void 0)!==s?(r=t=t):(ts=r,r=s)):(ts=r,r=s);r===s&&(r=ts,(t=Mo())!==s&&(t=t),r=t);return r}())!==s?(r=t=e):(ts=r,r=s),r===s&&(r=ts,(t=pa())===s&&(t=null),t!==s&&_i()!==s&&(e=Uo())!==s?(r=t=e):(ts=r,r=s)),r}function Xs(){var t,e;return t=ts,function(){var t,e,n,u;t=ts,"from"===r.substr(ts,4).toLowerCase()?(e=r.substr(ts,4),ts+=4):(e=s,0===ss&&ls(Ne));e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?t=e=[e,n]:(ts=t,t=s)):(ts=t,t=s);return t}()!==s&&_i()!==s&&(e=Js())!==s?(t=e):(ts=t,t=s),t}function Ws(){var r,t,e;return r=ts,(t=eo())!==s&&_i()!==s&&ua()!==s&&_i()!==s&&(e=eo())!==s?(r=t=[t,e]):(ts=r,r=s),r}function Vs(){var t,e,n;return t=ts,(e=Sa())!==s&&_i()!==s?("btree"===r.substr(ts,5).toLowerCase()?(n=r.substr(ts,5),ts+=5):(n=s,0===ss&&ls(Ar)),n===s&&("hash"===r.substr(ts,4).toLowerCase()?(n=r.substr(ts,4),ts+=4):(n=s,0===ss&&ls(yr))),n!==s?(t=e={keyword:"using",type:n.toLowerCase()}):(ts=t,t=s)):(ts=t,t=s),t===s&&(t=ts,"nonclustered"===r.substr(ts,12).toLowerCase()?(e=r.substr(ts,12),ts+=12):(e=s,0===ss&&ls(Tr)),e!==s&&(e={keyword:e.toLowerCase()}),t=e),t}function Ks(){var r,t,e,n,u,o;if(r=ts,(t=zs())!==s){for(e=[],n=ts,(u=_i())!==s&&(o=zs())!==s?n=u=[u,o]:(ts=n,n=s);n!==s;)e.push(n),n=ts,(u=_i())!==s&&(o=zs())!==s?n=u=[u,o]:(ts=n,n=s);e!==s?(r=t=function(r,t){const e=[r];for(let r=0;r<t.length;r++)e.push(t[r][1]);return e}(t,e)):(ts=r,r=s);}else ts=r,r=s;return r}function qs(){var r,t,e,n;return r=ts,(t=qo())!==s&&_i()!==s&&(e=ua())!==s&&_i()!==s&&qo()!==s?(n=t,r=t={type:"range",symbol:e[0],start:n,end:n}):(ts=r,r=s),r===s&&(r=qo()),r}function Zs(){var t,e,n;return t=ts,ha()!==s&&_i()!==s?("partitions"===r.substr(ts,10).toLowerCase()?(e=r.substr(ts,10),ts+=10):(e=s,0===ss&&ls(mr)),e!==s&&_i()!==s&&Ti()!==s&&_i()!==s&&(n=function(){var r,t,e,n,u,o,a,c;if(r=ts,(t=qs())!==s){for(e=[],n=ts,(u=_i())!==s&&(o=Ai())!==s&&(a=_i())!==s&&(c=qs())!==s?n=u=[u,o,a,c]:(ts=n,n=s);n!==s;)e.push(n),n=ts,(u=_i())!==s&&(o=Ai())!==s&&(a=_i())!==s&&(c=qs())!==s?n=u=[u,o,a,c]:(ts=n,n=s);e!==s?(r=t=i(t,e)):(ts=r,r=s);}else ts=r,r=s;return r}())!==s&&_i()!==s&&mi()!==s?(t={type:"on partitions",partitions:n}):(ts=t,t=s)):(ts=t,t=s),t}function zs(){var t,e,n,u,o,a;return t=ts,(e=function(){var t,e,n,u;t=ts,"key_block_size"===r.substr(ts,14).toLowerCase()?(e=r.substr(ts,14),ts+=14):(e=s,0===ss&&ls(ur));e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="KEY_BLOCK_SIZE"):(ts=t,t=s)):(ts=t,t=s);return t}())!==s&&_i()!==s?((n=bi())===s&&(n=null),n!==s&&_i()!==s&&(u=qo())!==s?(t=e=Sr(e,n,u)):(ts=t,t=s)):(ts=t,t=s),t===s&&(t=ts,"fillfactor"===r.substr(ts,10).toLowerCase()?(e=r.substr(ts,10),ts+=10):(e=s,0===ss&&ls(Ir)),e===s&&("max_duration"===r.substr(ts,12).toLowerCase()?(e=r.substr(ts,12),ts+=12):(e=s,0===ss&&ls(Nr)),e===s&&("maxdop"===r.substr(ts,6).toLowerCase()?(e=r.substr(ts,6),ts+=6):(e=s,0===ss&&ls(Rr)))),e!==s&&_i()!==s&&(n=bi())!==s&&_i()!==s&&(u=qo())!==s?(t=e=Sr(e,n,u)):(ts=t,t=s),t===s&&(t=Vs())===s&&(t=ts,"with"===r.substr(ts,4).toLowerCase()?(e=r.substr(ts,4),ts+=4):(e=s,0===ss&&ls(_r)),e!==s&&_i()!==s?("parser"===r.substr(ts,6).toLowerCase()?(n=r.substr(ts,6),ts+=6):(n=s,0===ss&&ls(Or)),n!==s&&_i()!==s&&(u=ko())!==s?(t=e={type:"with parser",expr:u}):(ts=t,t=s)):(ts=t,t=s),t===s&&(t=ts,"visible"===r.substr(ts,7).toLowerCase()?(e=r.substr(ts,7),ts+=7):(e=s,0===ss&&ls(gr)),e===s&&("invisible"===r.substr(ts,9).toLowerCase()?(e=r.substr(ts,9),ts+=9):(e=s,0===ss&&ls(xr))),e!==s&&(e={type:(a=e).toLowerCase(),expr:a.toLowerCase()}),(t=e)===s&&(t=ts,"pad_index"===r.substr(ts,9).toLowerCase()?(e=r.substr(ts,9),ts+=9):(e=s,0===ss&&ls(Ur)),e===s&&("sort_in_tempdb"===r.substr(ts,14).toLowerCase()?(e=r.substr(ts,14),ts+=14):(e=s,0===ss&&ls(Mr)),e===s&&("ignore_dup_key"===r.substr(ts,14).toLowerCase()?(e=r.substr(ts,14),ts+=14):(e=s,0===ss&&ls(Dr)),e===s&&("statistics_norecompute"===r.substr(ts,22).toLowerCase()?(e=r.substr(ts,22),ts+=22):(e=s,0===ss&&ls(kr)),e===s&&("statistics_incremental"===r.substr(ts,22).toLowerCase()?(e=r.substr(ts,22),ts+=22):(e=s,0===ss&&ls($r)),e===s&&("drop_existing"===r.substr(ts,13).toLowerCase()?(e=r.substr(ts,13),ts+=13):(e=s,0===ss&&ls(Fr)),e===s&&("online"===r.substr(ts,6).toLowerCase()?(e=r.substr(ts,6),ts+=6):(e=s,0===ss&&ls(Pr)),e===s&&("resumable"===r.substr(ts,9).toLowerCase()?(e=r.substr(ts,9),ts+=9):(e=s,0===ss&&ls(Gr)),e===s&&("allow_row_locks"===r.substr(ts,15).toLowerCase()?(e=r.substr(ts,15),ts+=15):(e=s,0===ss&&ls(Hr)),e===s&&("allow_page_locks"===r.substr(ts,16).toLowerCase()?(e=r.substr(ts,16),ts+=16):(e=s,0===ss&&ls(jr)),e===s&&("optimize_for_sequential_key"===r.substr(ts,27).toLowerCase()?(e=r.substr(ts,27),ts+=27):(e=s,0===ss&&ls(Yr)))))))))))),e!==s&&_i()!==s&&(n=bi())!==s&&_i()!==s?((u=ha())===s&&(u=function(){var t,e,n,u;t=ts,"off"===r.substr(ts,3).toLowerCase()?(e=r.substr(ts,3),ts+=3):(e=s,0===ss&&ls(Me));e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?t=e=[e,n]:(ts=t,t=s)):(ts=t,t=s);return t}()),u!==s?(t=e=function(r,t,e){return {type:r.toLowerCase(),symbol:t,expr:{type:"origin",value:e[0]}}}(e,n,u)):(ts=t,t=s)):(ts=t,t=s),t===s&&(t=ts,"data_compression"===r.substr(ts,16).toLowerCase()?(e=r.substr(ts,16),ts+=16):(e=s,0===ss&&ls(Br)),e!==s&&_i()!==s&&(n=bi())!==s&&_i()!==s?("none"===r.substr(ts,4).toLowerCase()?(u=r.substr(ts,4),ts+=4):(u=s,0===ss&&ls(g)),u===s&&("row"===r.substr(ts,3).toLowerCase()?(u=r.substr(ts,3),ts+=3):(u=s,0===ss&&ls(Xr)),u===s&&("PAGE"===r.substr(ts,4)?(u="PAGE",ts+=4):(u=s,0===ss&&ls(Wr)))),u!==s&&_i()!==s?((o=Zs())===s&&(o=null),o!==s?(t=e=function(r,t,e,n){return {type:r.toLowerCase(),symbol:t,expr:{value:e,on:n}}}(e,n,u,o)):(ts=t,t=s)):(ts=t,t=s)):(ts=t,t=s),t===s&&(t=xi())))))),t}function Js(){var r,t,e,n;if(r=ts,(t=ro())!==s){for(e=[],n=Qs();n!==s;)e.push(n),n=Qs();e!==s?(r=t=Vr(t,e)):(ts=r,r=s);}else ts=r,r=s;return r}function Qs(){var r,t,e;return r=ts,_i()!==s&&(t=Ai())!==s&&_i()!==s&&(e=ro())!==s?(r=e):(ts=r,r=s),r===s&&(r=ts,_i()!==s&&(t=function(){var r,t,e,n,u,o,a,i,c,l,f;if(r=ts,(t=to())!==s)if(_i()!==s)if((e=ro())!==s)if(_i()!==s)if((n=Sa())!==s)if(_i()!==s)if(Ti()!==s)if(_i()!==s)if((u=ko())!==s){for(o=[],a=ts,(i=_i())!==s&&(c=Ai())!==s&&(l=_i())!==s&&(f=ko())!==s?a=i=[i,c,l,f]:(ts=a,a=s);a!==s;)o.push(a),a=ts,(i=_i())!==s&&(c=Ai())!==s&&(l=_i())!==s&&(f=ko())!==s?a=i=[i,c,l,f]:(ts=a,a=s);o!==s&&(a=_i())!==s&&(i=mi())!==s?(b=t,d=u,L=o,(v=e).join=b,v.using=Qi(d,L),r=t=v):(ts=r,r=s);}else ts=r,r=s;else ts=r,r=s;else ts=r,r=s;else ts=r,r=s;else ts=r,r=s;else ts=r,r=s;else ts=r,r=s;else ts=r,r=s;else ts=r,r=s;var b,v,d,L;r===s&&(r=ts,(t=to())!==s&&_i()!==s&&(e=ro())!==s&&_i()!==s?((n=no())===s&&(n=null),n!==s?(t=function(r,t,e){return t.join=r,t.on=e,t}(t,e,n),r=t):(ts=r,r=s)):(ts=r,r=s),r===s&&(r=ts,(t=to())!==s&&_i()!==s&&(e=Ti())!==s&&_i()!==s&&(n=Ls())!==s&&_i()!==s&&mi()!==s&&_i()!==s?((u=Bs())===s&&(u=null),u!==s&&(o=_i())!==s?((a=no())===s&&(a=null),a!==s?(t=function(r,t,e,n){return t.parentheses=!0,{expr:t,as:e,join:r,on:n}}(t,n,u,a),r=t):(ts=r,r=s)):(ts=r,r=s)):(ts=r,r=s)));return r}())!==s?(r=t):(ts=r,r=s)),r}function ro(){var t,e,n,u,o,a;return t=ts,(e=function(){var t;"dual"===r.substr(ts,4).toLowerCase()?(t=r.substr(ts,4),ts+=4):(t=s,0===ss&&ls(Su));return t}())!==s&&(e={type:"dual"}),(t=e)===s&&(t=ts,(e=eo())!==s&&_i()!==s?((n=Bs())===s&&(n=null),n!==s?(a=n,t=e="var"===(o=e).type?(o.as=a,o):{db:o.db,table:o.table,as:a}):(ts=t,t=s)):(ts=t,t=s),t===s&&(t=ts,(e=Ti())!==s&&_i()!==s&&(n=Ls())!==s&&_i()!==s&&mi()!==s&&_i()!==s?((u=Bs())===s&&(u=null),u!==s?(t=e=function(r,t){return r.parentheses=!0,{expr:r,as:t}}(n,u)):(ts=t,t=s)):(ts=t,t=s))),t}function to(){var t,e,n,u;return t=ts,(e=function(){var t,e,n,u;t=ts,"left"===r.substr(ts,4).toLowerCase()?(e=r.substr(ts,4),ts+=4):(e=s,0===ss&&ls(De));e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?t=e=[e,n]:(ts=t,t=s)):(ts=t,t=s);return t}())!==s&&(n=_i())!==s?((u=ya())===s&&(u=null),u!==s&&_i()!==s&&Aa()!==s?(t=e="LEFT JOIN"):(ts=t,t=s)):(ts=t,t=s),t===s&&(t=ts,(e=function(){var t,e,n,u;t=ts,"right"===r.substr(ts,5).toLowerCase()?(e=r.substr(ts,5),ts+=5):(e=s,0===ss&&ls(ke));e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?t=e=[e,n]:(ts=t,t=s)):(ts=t,t=s);return t}())!==s&&(n=_i())!==s?((u=ya())===s&&(u=null),u!==s&&_i()!==s&&Aa()!==s?(t=e="RIGHT JOIN"):(ts=t,t=s)):(ts=t,t=s),t===s&&(t=ts,(e=function(){var t,e,n,u;t=ts,"full"===r.substr(ts,4).toLowerCase()?(e=r.substr(ts,4),ts+=4):(e=s,0===ss&&ls($e));e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?t=e=[e,n]:(ts=t,t=s)):(ts=t,t=s);return t}())!==s&&(n=_i())!==s?((u=ya())===s&&(u=null),u!==s&&_i()!==s&&Aa()!==s?(t=e="FULL JOIN"):(ts=t,t=s)):(ts=t,t=s),t===s&&(t=ts,e=ts,(n=function(){var t,e,n,u;t=ts,"inner"===r.substr(ts,5).toLowerCase()?(e=r.substr(ts,5),ts+=5):(e=s,0===ss&&ls(Fe));e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?t=e=[e,n]:(ts=t,t=s)):(ts=t,t=s);return t}())!==s&&(u=_i())!==s?e=n=[n,u]:(ts=e,e=s),e===s&&(e=null),e!==s&&(n=Aa())!==s?(t=e="INNER JOIN"):(ts=t,t=s)))),t}function eo(){var r,t,e,n,u,o,a,i,c;return r=ts,(t=Uo())!==s?(e=ts,(n=_i())!==s&&(u=hi())!==s&&(o=_i())!==s&&(a=Uo())!==s?e=n=[n,u,o,a]:(ts=e,e=s),e!==s?(n=ts,(u=_i())!==s&&(o=hi())!==s&&(a=_i())!==s&&(i=Uo())!==s?n=u=[u,o,a,i]:(ts=n,n=s),n!==s?(r=t=function(r,t,e){const n={db:null,table:r};return null!==e&&(n.db=`${r}.${t[3]}`,n.table=e[3]),n}(t,e,n)):(ts=r,r=s)):(ts=r,r=s)):(ts=r,r=s),r===s&&(r=ts,(t=Uo())!==s?(e=ts,(n=_i())!==s&&(u=hi())!==s&&(o=_i())!==s&&(a=Uo())!==s?e=n=[n,u,o,a]:(ts=e,e=s),e===s&&(e=null),e!==s?(r=t=function(r,t){const e={db:null,table:r};return null!==t&&(e.db=r,e.table=t[3]),e}(t,e)):(ts=r,r=s)):(ts=r,r=s),r===s&&(r=ts,(t=Xi())!==s&&((c=t).db=null,c.table=c.name,t=c),r=t)),r}function no(){var r,t;return r=ts,ha()!==s&&_i()!==s&&(t=Eo())!==s?(r=t):(ts=r,r=s),r}function uo(){var t,e;return t=ts,function(){var t,e,n,u;t=ts,"where"===r.substr(ts,5).toLowerCase()?(e=r.substr(ts,5),ts+=5):(e=s,0===ss&&ls(Xe));e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?t=e=[e,n]:(ts=t,t=s)):(ts=t,t=s);return t}()!==s&&_i()!==s&&(e=ho())!==s?(t=e):(ts=t,t=s),t}function so(){var t,e;return t=ts,function(){var t,e,n,u;t=ts,"order"===r.substr(ts,5).toLowerCase()?(e=r.substr(ts,5),ts+=5):(e=s,0===ss&&ls(Ke));e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?t=e=[e,n]:(ts=t,t=s)):(ts=t,t=s);return t}()!==s&&_i()!==s&&Na()!==s&&_i()!==s&&(e=function(){var r,t,e,n,u,o,a,i;if(r=ts,(t=oo())!==s){for(e=[],n=ts,(u=_i())!==s&&(o=Ai())!==s&&(a=_i())!==s&&(i=oo())!==s?n=u=[u,o,a,i]:(ts=n,n=s);n!==s;)e.push(n),n=ts,(u=_i())!==s&&(o=Ai())!==s&&(a=_i())!==s&&(i=oo())!==s?n=u=[u,o,a,i]:(ts=n,n=s);e!==s?(t=b(t,e),r=t):(ts=r,r=s);}else ts=r,r=s;return r}())!==s?(t=e):(ts=t,t=s),t}function oo(){var r,t,e;return r=ts,(t=Eo())!==s&&_i()!==s?((e=_a())===s&&(e=Ra()),e===s&&(e=null),e!==s?(r=t=function(r,t){const e={expr:r,type:"ASC"};return "DESC"===t&&(e.type="DESC"),e}(t,e)):(ts=r,r=s)):(ts=r,r=s),r}function ao(){var r;return (r=qo())===s&&(r=Go()),r}function io(){var t,e,n,u,o,a;return t=ts,function(){var t,e,n,u;t=ts,"limit"===r.substr(ts,5).toLowerCase()?(e=r.substr(ts,5),ts+=5):(e=s,0===ss&&ls(Ze));e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?t=e=[e,n]:(ts=t,t=s)):(ts=t,t=s);return t}()!==s&&_i()!==s&&(e=ao())!==s&&_i()!==s?(n=ts,(u=Ai())===s&&(u=function(){var t,e,n,u;t=ts,"offset"===r.substr(ts,6).toLowerCase()?(e=r.substr(ts,6),ts+=6):(e=s,0===ss&&ls(ze));e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="OFFSET"):(ts=t,t=s)):(ts=t,t=s);return t}()),u!==s&&(o=_i())!==s&&(a=ao())!==s?n=u=[u,o,a]:(ts=n,n=s),n===s&&(n=null),n!==s?(t=function(r,t){const e=[r];return t&&e.push(t[2]),{seperator:t&&t[0]&&t[0].toLowerCase()||"",value:e}}(e,n)):(ts=t,t=s)):(ts=t,t=s),t}function co(){var t,e,n,u,o,a,i,c,l;return t=ts,e=ts,(n=Uo())!==s&&(u=_i())!==s&&(o=hi())!==s?e=n=[n,u,o]:(ts=e,e=s),e===s&&(e=null),e!==s&&(n=_i())!==s&&(u=Do())!==s&&(o=_i())!==s?(61===r.charCodeAt(ts)?(a="=",ts++):(a=s,0===ss&&ls(Kr)),a!==s&&_i()!==s&&(i=Io())!==s?(t=e={column:u,value:i,table:(l=e)&&l[0]}):(ts=t,t=s)):(ts=t,t=s),t===s&&(t=ts,e=ts,(n=Uo())!==s&&(u=_i())!==s&&(o=hi())!==s?e=n=[n,u,o]:(ts=e,e=s),e===s&&(e=null),e!==s&&(n=_i())!==s&&(u=Do())!==s&&(o=_i())!==s?(61===r.charCodeAt(ts)?(a="=",ts++):(a=s,0===ss&&ls(Kr)),a!==s&&_i()!==s&&(i=ma())!==s&&_i()!==s&&Ti()!==s&&_i()!==s&&(c=go())!==s&&_i()!==s&&mi()!==s?(t=e=function(r,t,e){return {column:t,value:e,table:r&&r[0],keyword:"values"}}(e,u,c)):(ts=t,t=s)):(ts=t,t=s)),t}function lo(){var r;return (r=function(){var r,t;r=ts,ma()!==s&&_i()!==s&&(t=function(){var r,t,e,n,u,o,a,i;if(r=ts,(t=vo())!==s){for(e=[],n=ts,(u=_i())!==s&&(o=Ai())!==s&&(a=_i())!==s&&(i=vo())!==s?n=u=[u,o,a,i]:(ts=n,n=s);n!==s;)e.push(n),n=ts,(u=_i())!==s&&(o=Ai())!==s&&(a=_i())!==s&&(i=vo())!==s?n=u=[u,o,a,i]:(ts=n,n=s);e!==s?(t=b(t,e),r=t):(ts=r,r=s);}else ts=r,r=s;return r}())!==s?(r=t):(ts=r,r=s);return r}())===s&&(r=Gs()),r}function fo(){var r,t,e,n,u,o,a,i,c;if(r=ts,da()!==s)if(_i()!==s)if((t=Ti())!==s)if(_i()!==s)if((e=ko())!==s){for(n=[],u=ts,(o=_i())!==s&&(a=Ai())!==s&&(i=_i())!==s&&(c=ko())!==s?u=o=[o,a,i,c]:(ts=u,u=s);u!==s;)n.push(u),u=ts,(o=_i())!==s&&(a=Ai())!==s&&(i=_i())!==s&&(c=ko())!==s?u=o=[o,a,i,c]:(ts=u,u=s);n!==s&&(u=_i())!==s&&(o=mi())!==s?(r=Qi(e,n)):(ts=r,r=s);}else ts=r,r=s;else ts=r,r=s;else ts=r,r=s;else ts=r,r=s;else ts=r,r=s;return r===s&&(r=ts,da()!==s&&_i()!==s&&(t=vo())!==s?(r=t):(ts=r,r=s)),r}function bo(){var t,e;return t=ts,(e=function(){var t,e,n,u;t=ts,"insert"===r.substr(ts,6).toLowerCase()?(e=r.substr(ts,6),ts+=6):(e=s,0===ss&&ls(he));e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?t=e=[e,n]:(ts=t,t=s)):(ts=t,t=s);return t}())!==s&&(e="insert"),(t=e)===s&&(t=ts,(e=ba())!==s&&(e="replace"),t=e),t}function vo(){var r,t;return r=ts,Ti()!==s&&_i()!==s&&(t=Lo())!==s&&_i()!==s&&mi()!==s?(r=t):(ts=r,r=s),r}function Lo(){var r,t,e,n,u,o,a,i;if(r=ts,(t=Eo())!==s){for(e=[],n=ts,(u=_i())!==s&&(o=Ai())!==s&&(a=_i())!==s&&(i=Eo())!==s?n=u=[u,o,a,i]:(ts=n,n=s);n!==s;)e.push(n),n=ts,(u=_i())!==s&&(o=Ai())!==s&&(a=_i())!==s&&(i=Eo())!==s?n=u=[u,o,a,i]:(ts=n,n=s);e!==s?(r=t=function(r,t){const e={type:"expr_list"};return e.value=Qi(r,t),e}(t,e)):(ts=r,r=s);}else ts=r,r=s;return r}function Co(){var t,e,n;return t=ts,function(){var t,e,n,u;t=ts,"interval"===r.substr(ts,8).toLowerCase()?(e=r.substr(ts,8),ts+=8):(e=s,0===ss&&ls(uu));e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="INTERVAL"):(ts=t,t=s)):(ts=t,t=s);return t}()!==s&&_i()!==s&&(e=Eo())!==s&&_i()!==s&&(n=function(){var t;(t=function(){var t,e,n,u;t=ts,"year"===r.substr(ts,4).toLowerCase()?(e=r.substr(ts,4),ts+=4):(e=s,0===ss&&ls(su));e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="YEAR"):(ts=t,t=s)):(ts=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=ts,"month"===r.substr(ts,5).toLowerCase()?(e=r.substr(ts,5),ts+=5):(e=s,0===ss&&ls(ou));e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="MONTH"):(ts=t,t=s)):(ts=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=ts,"day"===r.substr(ts,3).toLowerCase()?(e=r.substr(ts,3),ts+=3):(e=s,0===ss&&ls(au));e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="DAY"):(ts=t,t=s)):(ts=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=ts,"hour"===r.substr(ts,4).toLowerCase()?(e=r.substr(ts,4),ts+=4):(e=s,0===ss&&ls(iu));e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="HOUR"):(ts=t,t=s)):(ts=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=ts,"minute"===r.substr(ts,6).toLowerCase()?(e=r.substr(ts,6),ts+=6):(e=s,0===ss&&ls(cu));e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="MINUTE"):(ts=t,t=s)):(ts=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=ts,"second"===r.substr(ts,6).toLowerCase()?(e=r.substr(ts,6),ts+=6):(e=s,0===ss&&ls(lu));e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="SECOND"):(ts=t,t=s)):(ts=t,t=s);return t}());return t}())!==s?(t={type:"interval",expr:e,unit:n.toLowerCase()}):(ts=t,t=s),t}function po(){var t,e,n;return t=ts,function(){var t,e,n,u;t=ts,"when"===r.substr(ts,4).toLowerCase()?(e=r.substr(ts,4),ts+=4):(e=s,0===ss&&ls(pn));e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?t=e=[e,n]:(ts=t,t=s)):(ts=t,t=s);return t}()!==s&&_i()!==s&&(e=ho())!==s&&_i()!==s&&function(){var t,e,n,u;t=ts,"then"===r.substr(ts,4).toLowerCase()?(e=r.substr(ts,4),ts+=4):(e=s,0===ss&&ls(wn));e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?t=e=[e,n]:(ts=t,t=s)):(ts=t,t=s);return t}()!==s&&_i()!==s&&(n=Eo())!==s?(t={type:"when",cond:e,result:n}):(ts=t,t=s),t}function wo(){var t,e;return t=ts,function(){var t,e,n,u;t=ts,"else"===r.substr(ts,4).toLowerCase()?(e=r.substr(ts,4),ts+=4):(e=s,0===ss&&ls(En));e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?t=e=[e,n]:(ts=t,t=s)):(ts=t,t=s);return t}()!==s&&_i()!==s&&(e=Eo())!==s?(t={type:"else",result:e}):(ts=t,t=s),t}function Eo(){var r;return (r=function(){var r,t,e,n,u,o,a,i;if(r=ts,(t=Oo())!==s){if(e=[],n=ts,(u=_i())!==s&&(o=Ri())!==s&&(a=_i())!==s&&(i=Oo())!==s?n=u=[u,o,a,i]:(ts=n,n=s),n!==s)for(;n!==s;)e.push(n),n=ts,(u=_i())!==s&&(o=Ri())!==s&&(a=_i())!==s&&(i=Oo())!==s?n=u=[u,o,a,i]:(ts=n,n=s);else e=s;e!==s?(t=rc(t,e),r=t):(ts=r,r=s);}else ts=r,r=s;return r}())===s&&(r=function(){var r,t,e,n,u,o,a,i;if(r=ts,(t=Ao())!==s){for(e=[],n=ts,(u=Oi())!==s&&(o=Pa())!==s&&(a=_i())!==s&&(i=Ao())!==s?n=u=[u,o,a,i]:(ts=n,n=s);n!==s;)e.push(n),n=ts,(u=Oi())!==s&&(o=Pa())!==s&&(a=_i())!==s&&(i=Ao())!==s?n=u=[u,o,a,i]:(ts=n,n=s);e!==s?(t=qr(t,e),r=t):(ts=r,r=s);}else ts=r,r=s;return r}())===s&&(r=function(){var r,t,e,n,u,o;if(r=ts,(t=No())!==s){if(e=[],n=ts,(u=_i())!==s&&(o=Oo())!==s?n=u=[u,o]:(ts=n,n=s),n!==s)for(;n!==s;)e.push(n),n=ts,(u=_i())!==s&&(o=Oo())!==s?n=u=[u,o]:(ts=n,n=s);else e=s;e!==s?(t=Zi(t,e[0][1]),r=t):(ts=r,r=s);}else ts=r,r=s;return r}())===s&&(r=ks()),r}function ho(){var r,t,e,n,u,o,a,i;if(r=ts,(t=Eo())!==s){for(e=[],n=ts,(u=_i())!==s?((o=Fa())===s&&(o=Pa())===s&&(o=Ai()),o!==s&&(a=_i())!==s&&(i=Eo())!==s?n=u=[u,o,a,i]:(ts=n,n=s)):(ts=n,n=s);n!==s;)e.push(n),n=ts,(u=_i())!==s?((o=Fa())===s&&(o=Pa())===s&&(o=Ai()),o!==s&&(a=_i())!==s&&(i=Eo())!==s?n=u=[u,o,a,i]:(ts=n,n=s)):(ts=n,n=s);e!==s?(r=t=function(r,t){let e=r,n="";for(let u=0;u<t.length;u++)","===t[u][1]?(n=",",0===u&&(e=[r]),e.push(t[u][3])):e=zi(t[u][1],e,t[u][3]);if(","===n){const r={type:"expr_list"};return r.value=e,r}return e}(t,e)):(ts=r,r=s);}else ts=r,r=s;return r}function Ao(){var r,t,e,n,u,o,a,i;if(r=ts,(t=yo())!==s){for(e=[],n=ts,(u=Oi())!==s&&(o=Fa())!==s&&(a=_i())!==s&&(i=yo())!==s?n=u=[u,o,a,i]:(ts=n,n=s);n!==s;)e.push(n),n=ts,(u=Oi())!==s&&(o=Fa())!==s&&(a=_i())!==s&&(i=yo())!==s?n=u=[u,o,a,i]:(ts=n,n=s);e!==s?(r=t=qr(t,e)):(ts=r,r=s);}else ts=r,r=s;return r}function yo(){var t,e,n,u,o;return (t=To())===s&&(t=function(){var r,t,e;r=ts,(t=function(){var r,t,e,n,u;r=ts,t=ts,(e=$a())!==s&&(n=_i())!==s&&(u=ka())!==s?t=e=[e,n,u]:(ts=t,t=s);t!==s&&(t=zr(t));(r=t)===s&&(r=ka());return r}())!==s&&_i()!==s&&Ti()!==s&&_i()!==s&&(e=Ls())!==s&&_i()!==s&&mi()!==s?(n=t,(u=e).parentheses=!0,t=Zi(n,u),r=t):(ts=r,r=s);var n,u;return r}())===s&&(t=ts,(e=$a())===s&&(e=ts,33===r.charCodeAt(ts)?(n="!",ts++):(n=s,0===ss&&ls(Zr)),n!==s?(u=ts,ss++,61===r.charCodeAt(ts)?(o="=",ts++):(o=s,0===ss&&ls(Kr)),ss--,o===s?u=void 0:(ts=u,u=s),u!==s?e=n=[n,u]:(ts=e,e=s)):(ts=e,e=s)),e!==s&&(n=_i())!==s&&(u=yo())!==s?(t=e=Zi("NOT",u)):(ts=t,t=s)),t}function To(){var r,t,e,n,u;return r=ts,(t=Io())!==s&&_i()!==s?((e=function(){var r;(r=function(){var t,e,n,u,o,a;t=[],e=ts,(n=_i())!==s&&(u=mo())!==s&&(o=_i())!==s&&(a=Io())!==s?e=n=[n,u,o,a]:(ts=e,e=s);if(e!==s)for(;e!==s;)t.push(e),e=ts,(n=_i())!==s&&(u=mo())!==s&&(o=_i())!==s&&(a=Io())!==s?e=n=[n,u,o,a]:(ts=e,e=s);else t=s;t!==s&&(t={type:"arithmetic",tail:t});return t}())===s&&(r=function(){var r,t,e,n;r=ts,(t=So())!==s&&_i()!==s&&(e=Ti())!==s&&_i()!==s&&(n=Lo())!==s&&_i()!==s&&mi()!==s?(r=t={op:t,right:n}):(ts=r,r=s);r===s&&(r=ts,(t=So())!==s&&_i()!==s?((e=Xi())===s&&(e=Xo()),e!==s?(t=function(r,t){return {op:r,right:t}}(t,e),r=t):(ts=r,r=s)):(ts=r,r=s));return r}())===s&&(r=function(){var r,t,e,n;r=ts,(t=function(){var r,t,e,n,u;r=ts,t=ts,(e=$a())!==s&&(n=_i())!==s&&(u=xa())!==s?t=e=[e,n,u]:(ts=t,t=s);t!==s&&(t=zr(t));(r=t)===s&&(r=xa());return r}())!==s&&_i()!==s&&(e=Io())!==s&&_i()!==s&&Fa()!==s&&_i()!==s&&(n=Io())!==s?(r=t={op:t,right:{type:"expr_list",value:[e,n]}}):(ts=r,r=s);return r}())===s&&(r=function(){var r,t,e,n,u;r=ts,(t=Ma())!==s&&(e=_i())!==s&&(n=Io())!==s?(r=t={op:"IS",right:n}):(ts=r,r=s);r===s&&(r=ts,t=ts,(e=Ma())!==s&&(n=_i())!==s&&(u=$a())!==s?t=e=[e,n,u]:(ts=t,t=s),t!==s&&(e=_i())!==s&&(n=Io())!==s?(t=function(r){return {op:"IS NOT",right:r}}(n),r=t):(ts=r,r=s));return r}())===s&&(r=function(){var r,t,e;r=ts,(t=function(){var r,t,e,n,u;r=ts,t=ts,(e=$a())!==s&&(n=_i())!==s&&(u=Da())!==s?t=e=[e,n,u]:(ts=t,t=s);t!==s&&(t=zr(t));(r=t)===s&&(r=Da());return r}())!==s&&_i()!==s?((e=Yo())===s&&(e=To()),e!==s?(r=t={op:t,right:e}):(ts=r,r=s)):(ts=r,r=s);return r}());return r}())===s&&(e=null),e!==s?(n=t,r=t=null===(u=e)?n:"arithmetic"===u.type?rc(n,u.tail):zi(u.op,n,u.right)):(ts=r,r=s)):(ts=r,r=s),r===s&&(r=Xo())===s&&(r=go()),r}function mo(){var t;return ">="===r.substr(ts,2)?(t=">=",ts+=2):(t=s,0===ss&&ls(Jr)),t===s&&(62===r.charCodeAt(ts)?(t=">",ts++):(t=s,0===ss&&ls(Qr)),t===s&&("<="===r.substr(ts,2)?(t="<=",ts+=2):(t=s,0===ss&&ls(rt)),t===s&&("<>"===r.substr(ts,2)?(t="<>",ts+=2):(t=s,0===ss&&ls(tt)),t===s&&(60===r.charCodeAt(ts)?(t="<",ts++):(t=s,0===ss&&ls(et)),t===s&&(61===r.charCodeAt(ts)?(t="=",ts++):(t=s,0===ss&&ls(Kr)),t===s&&("!="===r.substr(ts,2)?(t="!=",ts+=2):(t=s,0===ss&&ls(nt)))))))),t}function So(){var r,t,e,n,u;return r=ts,t=ts,(e=$a())!==s&&(n=_i())!==s&&(u=Ua())!==s?t=e=[e,n,u]:(ts=t,t=s),t!==s&&(t=zr(t)),(r=t)===s&&(r=Ua()),r}function Io(){var r,t,e,n,u,o,a,i;if(r=ts,(t=Ro())!==s){for(e=[],n=ts,(u=_i())!==s&&(o=No())!==s&&(a=_i())!==s&&(i=Ro())!==s?n=u=[u,o,a,i]:(ts=n,n=s);n!==s;)e.push(n),n=ts,(u=_i())!==s&&(o=No())!==s&&(a=_i())!==s&&(i=Ro())!==s?n=u=[u,o,a,i]:(ts=n,n=s);e!==s?(r=t=qr(t,e)):(ts=r,r=s);}else ts=r,r=s;return r}function No(){var t;return 43===r.charCodeAt(ts)?(t="+",ts++):(t=s,0===ss&&ls(ut)),t===s&&(45===r.charCodeAt(ts)?(t="-",ts++):(t=s,0===ss&&ls(st))),t}function Ro(){var r,t,e,n,u,o,a,i;if(r=ts,(t=Oo())!==s){for(e=[],n=ts,(u=_i())!==s&&(o=_o())!==s&&(a=_i())!==s&&(i=Oo())!==s?n=u=[u,o,a,i]:(ts=n,n=s);n!==s;)e.push(n),n=ts,(u=_i())!==s&&(o=_o())!==s&&(a=_i())!==s&&(i=Oo())!==s?n=u=[u,o,a,i]:(ts=n,n=s);e!==s?(r=t=rc(t,e)):(ts=r,r=s);}else ts=r,r=s;return r}function _o(){var t;return 42===r.charCodeAt(ts)?(t="*",ts++):(t=s,0===ss&&ls(ot)),t===s&&(47===r.charCodeAt(ts)?(t="/",ts++):(t=s,0===ss&&ls(at)),t===s&&(37===r.charCodeAt(ts)?(t="%",ts++):(t=s,0===ss&&ls(it)))),t}function Oo(){var t,e,n;return (t=function(){var t,e,n,u,o,a,i;t=ts,(e=ja())!==s&&_i()!==s&&Ti()!==s&&_i()!==s&&(n=Eo())!==s&&_i()!==s&&pa()!==s&&_i()!==s&&(u=Vi())!==s&&_i()!==s&&(o=mi())!==s?(t=e={type:"cast",expr:n,symbol:"as",target:u}):(ts=t,t=s);t===s&&(t=ts,(e=ja())!==s&&_i()!==s&&Ti()!==s&&_i()!==s&&(n=Eo())!==s&&_i()!==s&&pa()!==s&&_i()!==s&&(u=Va())!==s&&_i()!==s&&(o=Ti())!==s&&_i()!==s&&(a=zo())!==s&&_i()!==s&&mi()!==s&&_i()!==s&&(i=mi())!==s?(e=function(r,t){return {type:"cast",expr:r,symbol:"as",target:{dataType:"DECIMAL("+t+")"}}}(n,a),t=e):(ts=t,t=s),t===s&&(t=ts,(e=ja())!==s&&_i()!==s&&Ti()!==s&&_i()!==s&&(n=Eo())!==s&&_i()!==s&&pa()!==s&&_i()!==s&&(u=Va())!==s&&_i()!==s&&(o=Ti())!==s&&_i()!==s&&(a=zo())!==s&&_i()!==s&&Ai()!==s&&_i()!==s&&(i=zo())!==s&&_i()!==s&&mi()!==s&&_i()!==s&&mi()!==s?(e=function(r,t,e){return {type:"cast",expr:r,symbol:"as",target:{dataType:"DECIMAL("+t+", "+e+")"}}}(n,a,i),t=e):(ts=t,t=s),t===s&&(t=ts,(e=ja())!==s&&_i()!==s&&Ti()!==s&&_i()!==s&&(n=Eo())!==s&&_i()!==s&&pa()!==s&&_i()!==s&&(u=function(){var t;(t=function(){var t,e,n,u;t=ts,"signed"===r.substr(ts,6).toLowerCase()?(e=r.substr(ts,6),ts+=6):(e=s,0===ss&&ls(gn));e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="SIGNED"):(ts=t,t=s)):(ts=t,t=s);return t}())===s&&(t=Ka());return t}())!==s&&_i()!==s?((o=Za())===s&&(o=null),o!==s&&_i()!==s&&(a=mi())!==s?(e=function(r,t,e){return {type:"cast",expr:r,symbol:"as",target:{dataType:t+(e?" "+e:"")}}}(n,u,o),t=e):(ts=t,t=s)):(ts=t,t=s))));return t}())===s&&(t=Yo())===s&&(t=function(){var t;(t=function(){var t,e,n,u;t=ts,(e=function(){var t,e,n,u;t=ts,"count"===r.substr(ts,5).toLowerCase()?(e=r.substr(ts,5),ts+=5):(e=s,0===ss&&ls(ln));e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="COUNT"):(ts=t,t=s)):(ts=t,t=s);return t}())!==s&&_i()!==s&&Ti()!==s&&_i()!==s&&(n=function(){var t,e,n,u,o;t=ts,(e=function(){var e;42===r.charCodeAt(ts)?(e="*",ts++):(e=s,0===ss&&ls(ot));e!==s&&(e={type:"star",value:"*"});return e}())!==s&&(e={expr:e});(t=e)===s&&(t=ts,(e=ga())===s&&(e=null),e!==s&&_i()!==s&&(n=go())!==s?(t=e={distinct:e,expr:n}):(ts=t,t=s),t===s&&(t=ts,(e=ga())===s&&(e=null),e!==s&&_i()!==s&&(n=Ti())!==s&&_i()!==s&&(u=Eo())!==s&&_i()!==s&&mi()!==s&&_i()!==s?((o=so())===s&&(o=null),o!==s?(e=function(r,t,e){return t.parentheses=!0,{distinct:r,expr:t,orderby:e}}(e,u,o),t=e):(ts=t,t=s)):(ts=t,t=s)));return t}())!==s&&_i()!==s&&mi()!==s&&_i()!==s?((u=jo())===s&&(u=null),u!==s?(e=function(r,t,e){return {type:"aggr_func",name:r,args:t,over:e}}(e,n,u),t=e):(ts=t,t=s)):(ts=t,t=s);return t}())===s&&(t=function(){var t,e,n;t=ts,(e=function(){var t;(t=function(){var t,e,n,u;t=ts,"sum"===r.substr(ts,3).toLowerCase()?(e=r.substr(ts,3),ts+=3):(e=s,0===ss&&ls(vn));e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="SUM"):(ts=t,t=s)):(ts=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=ts,"max"===r.substr(ts,3).toLowerCase()?(e=r.substr(ts,3),ts+=3):(e=s,0===ss&&ls(fn));e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="MAX"):(ts=t,t=s)):(ts=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=ts,"min"===r.substr(ts,3).toLowerCase()?(e=r.substr(ts,3),ts+=3):(e=s,0===ss&&ls(bn));e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="MIN"):(ts=t,t=s)):(ts=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=ts,"avg"===r.substr(ts,3).toLowerCase()?(e=r.substr(ts,3),ts+=3):(e=s,0===ss&&ls(dn));e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="AVG"):(ts=t,t=s)):(ts=t,t=s);return t}());return t}())!==s&&_i()!==s&&Ti()!==s&&_i()!==s&&(n=Io())!==s&&_i()!==s&&mi()!==s?(t=e={type:"aggr_func",name:e,args:{expr:n}}):(ts=t,t=s);return t}());return t}())===s&&(t=function(){var t,e,n,u,o;t=ts,(e=ji())!==s&&_i()!==s&&(n=Ti())!==s&&_i()!==s?((u=Lo())===s&&(u=null),u!==s&&_i()!==s&&mi()!==s&&_i()!==s?((o=jo())===s&&(o=null),o!==s?(e=gt(e,u,o),t=e):(ts=t,t=s)):(ts=t,t=s)):(ts=t,t=s);t===s&&(t=ts,(e=function(){var t;(t=function(){var t,e,n,u;t=ts,"current_date"===r.substr(ts,12).toLowerCase()?(e=r.substr(ts,12),ts+=12):(e=s,0===ss&&ls(nu));e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="CURRENT_DATE"):(ts=t,t=s)):(ts=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=ts,"current_time"===r.substr(ts,12).toLowerCase()?(e=r.substr(ts,12),ts+=12):(e=s,0===ss&&ls(fu));e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="CURRENT_TIME"):(ts=t,t=s)):(ts=t,t=s);return t}())===s&&(t=ci())===s&&(t=function(){var t,e,n,u;t=ts,"current_user"===r.substr(ts,12).toLowerCase()?(e=r.substr(ts,12),ts+=12):(e=s,0===ss&&ls(vu));e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="CURRENT_USER"):(ts=t,t=s)):(ts=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=ts,"user"===r.substr(ts,4).toLowerCase()?(e=r.substr(ts,4),ts+=4):(e=s,0===ss&&ls(eu));e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="USER"):(ts=t,t=s)):(ts=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=ts,"session_user"===r.substr(ts,12).toLowerCase()?(e=r.substr(ts,12),ts+=12):(e=s,0===ss&&ls(du));e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="SESSION_USER"):(ts=t,t=s)):(ts=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=ts,"system_user"===r.substr(ts,11).toLowerCase()?(e=r.substr(ts,11),ts+=11):(e=s,0===ss&&ls(Lu));e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="SYSTEM_USER"):(ts=t,t=s)):(ts=t,t=s);return t}());return t}())!==s&&_i()!==s&&(n=Ti())!==s&&_i()!==s?((u=Lo())===s&&(u=null),u!==s&&_i()!==s&&mi()!==s&&_i()!==s?((o=jo())===s&&(o=null),o!==s?(e=gt(e,u,o),t=e):(ts=t,t=s)):(ts=t,t=s)):(ts=t,t=s),t===s&&(t=ts,(e=ci())!==s&&_i()!==s?((n=Ho())===s&&(n=null),n!==s?(e=function(r,t){return {type:"function",name:r,over:t}}(e,n),t=e):(ts=t,t=s)):(ts=t,t=s)));return t}())===s&&(t=function(){var r,t,e,n,u,o,a,i,c,l;if(r=ts,Ga()!==s)if(_i()!==s){if(t=[],(e=po())!==s)for(;e!==s;)t.push(e),e=po();else t=s;t!==s&&(e=_i())!==s?((n=wo())===s&&(n=null),n!==s&&(u=_i())!==s&&(o=Ha())!==s&&_i()!==s?((a=Ga())===s&&(a=null),a!==s?(c=t,(l=n)&&c.push(l),r={type:"case",expr:null,args:c}):(ts=r,r=s)):(ts=r,r=s)):(ts=r,r=s);}else ts=r,r=s;else ts=r,r=s;if(r===s)if(r=ts,Ga()!==s)if(_i()!==s)if((t=Eo())!==s)if((e=_i())!==s){if(n=[],(u=po())!==s)for(;u!==s;)n.push(u),u=po();else n=s;n!==s&&(u=_i())!==s?((o=wo())===s&&(o=null),o!==s&&_i()!==s&&(a=Ha())!==s&&_i()!==s?((i=Ga())===s&&(i=null),i!==s?(r=function(r,t,e){return e&&t.push(e),{type:"case",expr:r,args:t}}(t,n,o)):(ts=r,r=s)):(ts=r,r=s)):(ts=r,r=s);}else ts=r,r=s;else ts=r,r=s;else ts=r,r=s;else ts=r,r=s;return r}())===s&&(t=Co())===s&&(t=go())===s&&(t=Go())===s&&(t=ts,Ti()!==s&&_i()!==s&&(e=ho())!==s&&_i()!==s&&mi()!==s?((n=e).parentheses=!0,t=n):(ts=t,t=s),t===s&&(t=Xi())),t}function go(){var r,t,e,n,u;return r=ts,(t=Uo())!==s&&_i()!==s&&hi()!==s&&_i()!==s&&(e=Do())!==s?(n=t,u=e,sc.add(`select::${n}::${u}`),r=t={type:"column_ref",table:n,column:u}):(ts=r,r=s),r===s&&(r=ts,(t=Do())!==s&&(t=function(r){return sc.add("select::null::"+r),{type:"column_ref",table:null,column:r}}(t)),r=t),r}function xo(){var r,t,e,n,u,o,a,i;if(r=ts,(t=Do())!==s){for(e=[],n=ts,(u=_i())!==s&&(o=Ai())!==s&&(a=_i())!==s&&(i=Do())!==s?n=u=[u,o,a,i]:(ts=n,n=s);n!==s;)e.push(n),n=ts,(u=_i())!==s&&(o=Ai())!==s&&(a=_i())!==s&&(i=Do())!==s?n=u=[u,o,a,i]:(ts=n,n=s);e!==s?(r=t=b(t,e)):(ts=r,r=s);}else ts=r,r=s;return r}function Uo(){var r,t;return r=ts,(t=ko())!==s?((ct(t)?s:void 0)!==s?(r=t=t):(ts=r,r=s)):(ts=r,r=s),r===s&&(r=ts,(t=Mo())!==s&&(t=t),r=t),r}function Mo(){var t;return (t=function(){var t,e,n,u;t=ts,34===r.charCodeAt(ts)?(e='"',ts++):(e=s,0===ss&&ls(lt));if(e!==s){if(n=[],ft.test(r.charAt(ts))?(u=r.charAt(ts),ts++):(u=s,0===ss&&ls(bt)),u!==s)for(;u!==s;)n.push(u),ft.test(r.charAt(ts))?(u=r.charAt(ts),ts++):(u=s,0===ss&&ls(bt));else n=s;n!==s?(34===r.charCodeAt(ts)?(u='"',ts++):(u=s,0===ss&&ls(lt)),u!==s?(e=vt(n),t=e):(ts=t,t=s)):(ts=t,t=s);}else ts=t,t=s;return t}())===s&&(t=function(){var t,e,n,u;t=ts,39===r.charCodeAt(ts)?(e="'",ts++):(e=s,0===ss&&ls(lr));if(e!==s){if(n=[],dt.test(r.charAt(ts))?(u=r.charAt(ts),ts++):(u=s,0===ss&&ls(Lt)),u!==s)for(;u!==s;)n.push(u),dt.test(r.charAt(ts))?(u=r.charAt(ts),ts++):(u=s,0===ss&&ls(Lt));else n=s;n!==s?(39===r.charCodeAt(ts)?(u="'",ts++):(u=s,0===ss&&ls(lr)),u!==s?(e=vt(n),t=e):(ts=t,t=s)):(ts=t,t=s);}else ts=t,t=s;return t}())===s&&(t=function(){var t,e,n,u;t=ts,96===r.charCodeAt(ts)?(e="`",ts++):(e=s,0===ss&&ls(Ct));if(e!==s){if(n=[],pt.test(r.charAt(ts))?(u=r.charAt(ts),ts++):(u=s,0===ss&&ls(wt)),u!==s)for(;u!==s;)n.push(u),pt.test(r.charAt(ts))?(u=r.charAt(ts),ts++):(u=s,0===ss&&ls(wt));else n=s;n!==s?(96===r.charCodeAt(ts)?(u="`",ts++):(u=s,0===ss&&ls(Ct)),u!==s?(e=vt(n),t=e):(ts=t,t=s)):(ts=t,t=s);}else ts=t,t=s;return t}())===s&&(t=function(){var t,e,n,u;t=ts,91===r.charCodeAt(ts)?(e="[",ts++):(e=s,0===ss&&ls(Et));if(e!==s){if(n=[],ht.test(r.charAt(ts))?(u=r.charAt(ts),ts++):(u=s,0===ss&&ls(At)),u!==s)for(;u!==s;)n.push(u),ht.test(r.charAt(ts))?(u=r.charAt(ts),ts++):(u=s,0===ss&&ls(At));else n=s;n!==s?(93===r.charCodeAt(ts)?(u="]",ts++):(u=s,0===ss&&ls(yt)),u!==s?(e=vt(n),t=e):(ts=t,t=s)):(ts=t,t=s);}else ts=t,t=s;return t}()),t}function Do(){var r,t;return r=ts,(t=function(){var r,t,e,n;if(r=ts,(t=$o())!==s){for(e=[],n=Po();n!==s;)e.push(n),n=Po();e!==s?(t=Tt(t,e),r=t):(ts=r,r=s);}else ts=r,r=s;return r}())!==s?((ct(t)?s:void 0)!==s?(r=t=t):(ts=r,r=s)):(ts=r,r=s),r===s&&(r=Mo()),r}function ko(){var r,t,e,n;if(r=ts,(t=$o())!==s){for(e=[],n=Fo();n!==s;)e.push(n),n=Fo();e!==s?(r=t=Tt(t,e)):(ts=r,r=s);}else ts=r,r=s;return r}function $o(){var t;return mt.test(r.charAt(ts))?(t=r.charAt(ts),ts++):(t=s,0===ss&&ls(St)),t}function Fo(){var t;return It.test(r.charAt(ts))?(t=r.charAt(ts),ts++):(t=s,0===ss&&ls(Nt)),t}function Po(){var t;return Rt.test(r.charAt(ts))?(t=r.charAt(ts),ts++):(t=s,0===ss&&ls(_t)),t}function Go(){var e,n,u;return e=ts,58===r.charCodeAt(ts)?(n=":",ts++):(n=s,0===ss&&ls(Ot)),n!==s&&(u=ko())!==s?e=n=[n,u]:(ts=e,e=s),e!==s&&(e={type:"param",value:e[1]}),e}function Ho(){var r,t,e;return r=ts,ha()!==s&&_i()!==s&&ia()!==s&&_i()!==s&&(t=ci())!==s&&_i()!==s&&Ti()!==s&&_i()!==s?((e=Lo())===s&&(e=null),e!==s&&_i()!==s&&mi()!==s?(r={type:"on update",keyword:t,parentheses:!0,expr:e}):(ts=r,r=s)):(ts=r,r=s),r===s&&(r=ts,ha()!==s&&_i()!==s&&ia()!==s&&_i()!==s&&(t=ci())!==s?(r=function(r){return {type:"on update",keyword:r}}(t)):(ts=r,r=s)),r}function jo(){var t,e,n;return t=ts,function(){var t,e,n,u;t=ts,"over"===r.substr(ts,4).toLowerCase()?(e=r.substr(ts,4),ts+=4):(e=s,0===ss&&ls(He));e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?t=e=[e,n]:(ts=t,t=s)):(ts=t,t=s);return t}()!==s&&_i()!==s&&Ti()!==s&&_i()!==s&&da()!==s&&_i()!==s&&Na()!==s&&_i()!==s&&(e=js())!==s&&_i()!==s?((n=so())===s&&(n=null),n!==s&&_i()!==s&&mi()!==s?(t=function(r,t){return {partitionby:r,orderby:t}}(e,n)):(ts=t,t=s)):(ts=t,t=s),t===s&&(t=Ho()),t}function Yo(){var t;return (t=Xo())===s&&(t=qo())===s&&(t=function(){var t,e;t=ts,(e=function(){var t,e,n,u;t=ts,"true"===r.substr(ts,4).toLowerCase()?(e=r.substr(ts,4),ts+=4):(e=s,0===ss&&ls(ie));e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?t=e=[e,n]:(ts=t,t=s)):(ts=t,t=s);return t}())!==s&&(e={type:"bool",value:!0});(t=e)===s&&(t=ts,(e=function(){var t,e,n,u;t=ts,"false"===r.substr(ts,5).toLowerCase()?(e=r.substr(ts,5),ts+=5):(e=s,0===ss&&ls(fe));e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?t=e=[e,n]:(ts=t,t=s)):(ts=t,t=s);return t}())!==s&&(e={type:"bool",value:!1}),t=e);return t}())===s&&(t=Bo())===s&&(t=function(){var t,e,n,u,o,a;t=ts,(e=ai())===s&&(e=ni())===s&&(e=ii())===s&&(e=ui());if(e!==s)if(_i()!==s){if(n=ts,39===r.charCodeAt(ts)?(u="'",ts++):(u=s,0===ss&&ls(lr)),u!==s){for(o=[],a=Vo();a!==s;)o.push(a),a=Vo();o!==s?(39===r.charCodeAt(ts)?(a="'",ts++):(a=s,0===ss&&ls(lr)),a!==s?n=u=[u,o,a]:(ts=n,n=s)):(ts=n,n=s);}else ts=n,n=s;n!==s?(e=Ut(e,n),t=e):(ts=t,t=s);}else ts=t,t=s;else ts=t,t=s;if(t===s)if(t=ts,(e=ai())===s&&(e=ni())===s&&(e=ii())===s&&(e=ui()),e!==s)if(_i()!==s){if(n=ts,34===r.charCodeAt(ts)?(u='"',ts++):(u=s,0===ss&&ls(lt)),u!==s){for(o=[],a=Wo();a!==s;)o.push(a),a=Wo();o!==s?(34===r.charCodeAt(ts)?(a='"',ts++):(a=s,0===ss&&ls(lt)),a!==s?n=u=[u,o,a]:(ts=n,n=s)):(ts=n,n=s);}else ts=n,n=s;n!==s?(e=Ut(e,n),t=e):(ts=t,t=s);}else ts=t,t=s;else ts=t,t=s;return t}()),t}function Bo(){var e;return (e=function(){var t,e,n,u;t=ts,"null"===r.substr(ts,4).toLowerCase()?(e=r.substr(ts,4),ts+=4):(e=s,0===ss&&ls(oe));e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?t=e=[e,n]:(ts=t,t=s)):(ts=t,t=s);return t}())!==s&&(e={type:"null",value:null}),e}function Xo(){var t,e,n,u,o;if(t=ts,e=ts,39===r.charCodeAt(ts)?(n="'",ts++):(n=s,0===ss&&ls(lr)),n!==s){for(u=[],o=Vo();o!==s;)u.push(o),o=Vo();u!==s?(39===r.charCodeAt(ts)?(o="'",ts++):(o=s,0===ss&&ls(lr)),o!==s?e=n=[n,u,o]:(ts=e,e=s)):(ts=e,e=s);}else ts=e,e=s;if(e!==s&&(e=xt(e)),(t=e)===s){if(t=ts,e=ts,34===r.charCodeAt(ts)?(n='"',ts++):(n=s,0===ss&&ls(lt)),n!==s){for(u=[],o=Wo();o!==s;)u.push(o),o=Wo();u!==s?(34===r.charCodeAt(ts)?(o='"',ts++):(o=s,0===ss&&ls(lt)),o!==s?e=n=[n,u,o]:(ts=e,e=s)):(ts=e,e=s);}else ts=e,e=s;e!==s&&(e=xt(e)),t=e;}return t}function Wo(){var t;return Mt.test(r.charAt(ts))?(t=r.charAt(ts),ts++):(t=s,0===ss&&ls(Dt)),t===s&&(t=Ko()),t}function Vo(){var t;return kt.test(r.charAt(ts))?(t=r.charAt(ts),ts++):(t=s,0===ss&&ls($t)),t===s&&(t=Ko()),t}function Ko(){var t,e,n,u,o,a,i,c,l,f;return t=ts,"\\'"===r.substr(ts,2)?(e="\\'",ts+=2):(e=s,0===ss&&ls(Ft)),e!==s&&(e="'"),(t=e)===s&&(t=ts,'\\"'===r.substr(ts,2)?(e='\\"',ts+=2):(e=s,0===ss&&ls(Pt)),e!==s&&(e='"'),(t=e)===s&&(t=ts,"\\\\"===r.substr(ts,2)?(e="\\\\",ts+=2):(e=s,0===ss&&ls(Gt)),e!==s&&(e="\\"),(t=e)===s&&(t=ts,"\\/"===r.substr(ts,2)?(e="\\/",ts+=2):(e=s,0===ss&&ls(Ht)),e!==s&&(e="/"),(t=e)===s&&(t=ts,"\\b"===r.substr(ts,2)?(e="\\b",ts+=2):(e=s,0===ss&&ls(jt)),e!==s&&(e="\b"),(t=e)===s&&(t=ts,"\\f"===r.substr(ts,2)?(e="\\f",ts+=2):(e=s,0===ss&&ls(Yt)),e!==s&&(e="\f"),(t=e)===s&&(t=ts,"\\n"===r.substr(ts,2)?(e="\\n",ts+=2):(e=s,0===ss&&ls(Bt)),e!==s&&(e="\n"),(t=e)===s&&(t=ts,"\\r"===r.substr(ts,2)?(e="\\r",ts+=2):(e=s,0===ss&&ls(Xt)),e!==s&&(e="\r"),(t=e)===s&&(t=ts,"\\t"===r.substr(ts,2)?(e="\\t",ts+=2):(e=s,0===ss&&ls(Wt)),e!==s&&(e="\t"),(t=e)===s&&(t=ts,"\\u"===r.substr(ts,2)?(e="\\u",ts+=2):(e=s,0===ss&&ls(Vt)),e!==s&&(n=ea())!==s&&(u=ea())!==s&&(o=ea())!==s&&(a=ea())!==s?(i=n,c=u,l=o,f=a,t=e=String.fromCharCode(parseInt("0x"+i+c+l+f))):(ts=t,t=s),t===s&&(t=ts,92===r.charCodeAt(ts)?(e="\\",ts++):(e=s,0===ss&&ls(Kt)),e!==s&&(e="\\"),t=e)))))))))),t}function qo(){var t,e;return (t=Zo())!==s&&(t=(e=t)&&"bigint"===e.type?e:{type:"number",value:e}),t}function Zo(){var r,t,e,n;return r=ts,(t=zo())!==s&&(e=Jo())!==s&&(n=Qo())!==s?(r=t={type:"bigint",value:t+e+n}):(ts=r,r=s),r===s&&(r=ts,(t=zo())!==s&&(e=Jo())!==s?(r=t=function(r,t){const e=r+t;return Ji(r)?{type:"bigint",value:e}:parseFloat(e)}(t,e)):(ts=r,r=s),r===s&&(r=ts,(t=zo())!==s&&(e=Qo())!==s?(r=t=function(r,t){return {type:"bigint",value:r+t}}(t,e)):(ts=r,r=s),r===s&&(r=ts,(t=zo())!==s&&(t=function(r){return Ji(r)?{type:"bigint",value:r}:parseFloat(r)}(t)),r=t))),r}function zo(){var t,e,n;return (t=ra())===s&&(t=ta())===s&&(t=ts,45===r.charCodeAt(ts)?(e="-",ts++):(e=s,0===ss&&ls(st)),e===s&&(43===r.charCodeAt(ts)?(e="+",ts++):(e=s,0===ss&&ls(ut))),e!==s&&(n=ra())!==s?(t=e="-"+n):(ts=t,t=s),t===s&&(t=ts,45===r.charCodeAt(ts)?(e="-",ts++):(e=s,0===ss&&ls(st)),e===s&&(43===r.charCodeAt(ts)?(e="+",ts++):(e=s,0===ss&&ls(ut))),e!==s&&(n=ta())!==s?(t=e="-"+n):(ts=t,t=s))),t}function Jo(){var t,e,n;return t=ts,46===r.charCodeAt(ts)?(e=".",ts++):(e=s,0===ss&&ls(zt)),e!==s&&(n=ra())!==s?(t=e="."+n):(ts=t,t=s),t}function Qo(){var t,e,n;return t=ts,(e=function(){var t,e,n;t=ts,ee.test(r.charAt(ts))?(e=r.charAt(ts),ts++):(e=s,0===ss&&ls(ne));e!==s?(ue.test(r.charAt(ts))?(n=r.charAt(ts),ts++):(n=s,0===ss&&ls(se)),n===s&&(n=null),n!==s?(t=e=e+(null!==(u=n)?u:"")):(ts=t,t=s)):(ts=t,t=s);var u;return t}())!==s&&(n=ra())!==s?(t=e=e+n):(ts=t,t=s),t}function ra(){var t,e;if(t=[],(e=ta())!==s)for(;e!==s;)t.push(e),e=ta();else t=s;return t!==s&&(t=t.join("")),t}function ta(){var t;return Jt.test(r.charAt(ts))?(t=r.charAt(ts),ts++):(t=s,0===ss&&ls(Qt)),t}function ea(){var t;return re.test(r.charAt(ts))?(t=r.charAt(ts),ts++):(t=s,0===ss&&ls(te)),t}function na(){var t,e,n,u;return t=ts,"default"===r.substr(ts,7).toLowerCase()?(e=r.substr(ts,7),ts+=7):(e=s,0===ss&&ls(h)),e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?t=e=[e,n]:(ts=t,t=s)):(ts=t,t=s),t}function ua(){var t,e,n,u;return t=ts,"to"===r.substr(ts,2).toLowerCase()?(e=r.substr(ts,2),ts+=2):(e=s,0===ss&&ls(ce)),e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?t=e=[e,n]:(ts=t,t=s)):(ts=t,t=s),t}function sa(){var t,e,n,u;return t=ts,"drop"===r.substr(ts,4).toLowerCase()?(e=r.substr(ts,4),ts+=4):(e=s,0===ss&&ls(be)),e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="DROP"):(ts=t,t=s)):(ts=t,t=s),t}function oa(){var t,e,n,u;return t=ts,"declare"===r.substr(ts,7).toLowerCase()?(e=r.substr(ts,7),ts+=7):(e=s,0===ss&&ls(ve)),e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="DECLARE"):(ts=t,t=s)):(ts=t,t=s),t}function aa(){var t,e,n,u;return t=ts,"alter"===r.substr(ts,5).toLowerCase()?(e=r.substr(ts,5),ts+=5):(e=s,0===ss&&ls(Le)),e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="ALTER"):(ts=t,t=s)):(ts=t,t=s),t}function ia(){var t,e,n,u;return t=ts,"update"===r.substr(ts,6).toLowerCase()?(e=r.substr(ts,6),ts+=6):(e=s,0===ss&&ls(W)),e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?t=e=[e,n]:(ts=t,t=s)):(ts=t,t=s),t}function ca(){var t,e,n,u;return t=ts,"create"===r.substr(ts,6).toLowerCase()?(e=r.substr(ts,6),ts+=6):(e=s,0===ss&&ls(pe)),e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?t=e=[e,n]:(ts=t,t=s)):(ts=t,t=s),t}function la(){var t,e,n,u;return t=ts,"temporary"===r.substr(ts,9).toLowerCase()?(e=r.substr(ts,9),ts+=9):(e=s,0===ss&&ls(we)),e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?t=e=[e,n]:(ts=t,t=s)):(ts=t,t=s),t}function fa(){var t,e,n,u;return t=ts,"if not exists"===r.substr(ts,13).toLowerCase()?(e=r.substr(ts,13),ts+=13):(e=s,0===ss&&ls(Ee)),e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?t=e=[e,n]:(ts=t,t=s)):(ts=t,t=s),t}function ba(){var t,e,n,u;return t=ts,"replace"===r.substr(ts,7).toLowerCase()?(e=r.substr(ts,7),ts+=7):(e=s,0===ss&&ls(ye)),e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?t=e=[e,n]:(ts=t,t=s)):(ts=t,t=s),t}function va(){var t,e,n,u;return t=ts,"rename"===r.substr(ts,6).toLowerCase()?(e=r.substr(ts,6),ts+=6):(e=s,0===ss&&ls(Te)),e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?t=e=[e,n]:(ts=t,t=s)):(ts=t,t=s),t}function da(){var t,e,n,u;return t=ts,"partition"===r.substr(ts,9).toLowerCase()?(e=r.substr(ts,9),ts+=9):(e=s,0===ss&&ls(Se)),e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="PARTITION"):(ts=t,t=s)):(ts=t,t=s),t}function La(){var t,e,n,u;return t=ts,"into"===r.substr(ts,4).toLowerCase()?(e=r.substr(ts,4),ts+=4):(e=s,0===ss&&ls(Ie)),e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?t=e=[e,n]:(ts=t,t=s)):(ts=t,t=s),t}function Ca(){var t,e,n,u;return t=ts,"set"===r.substr(ts,3).toLowerCase()?(e=r.substr(ts,3),ts+=3):(e=s,0===ss&&ls(Q)),e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?t=e=[e,n]:(ts=t,t=s)):(ts=t,t=s),t}function pa(){var t,e,n,u;return t=ts,"as"===r.substr(ts,2).toLowerCase()?(e=r.substr(ts,2),ts+=2):(e=s,0===ss&&ls(_e)),e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?t=e=[e,n]:(ts=t,t=s)):(ts=t,t=s),t}function wa(){var t,e,n,u;return t=ts,"table"===r.substr(ts,5).toLowerCase()?(e=r.substr(ts,5),ts+=5):(e=s,0===ss&&ls(Oe)),e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="TABLE"):(ts=t,t=s)):(ts=t,t=s),t}function Ea(){var t,e,n,u;return t=ts,"tables"===r.substr(ts,6).toLowerCase()?(e=r.substr(ts,6),ts+=6):(e=s,0===ss&&ls(Ue)),e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="TABLES"):(ts=t,t=s)):(ts=t,t=s),t}function ha(){var t,e,n,u;return t=ts,"on"===r.substr(ts,2).toLowerCase()?(e=r.substr(ts,2),ts+=2):(e=s,0===ss&&ls(B)),e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?t=e=[e,n]:(ts=t,t=s)):(ts=t,t=s),t}function Aa(){var t,e,n,u;return t=ts,"join"===r.substr(ts,4).toLowerCase()?(e=r.substr(ts,4),ts+=4):(e=s,0===ss&&ls(Pe)),e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?t=e=[e,n]:(ts=t,t=s)):(ts=t,t=s),t}function ya(){var t,e,n,u;return t=ts,"outer"===r.substr(ts,5).toLowerCase()?(e=r.substr(ts,5),ts+=5):(e=s,0===ss&&ls(Ge)),e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?t=e=[e,n]:(ts=t,t=s)):(ts=t,t=s),t}function Ta(){var t,e,n,u;return t=ts,"union"===r.substr(ts,5).toLowerCase()?(e=r.substr(ts,5),ts+=5):(e=s,0===ss&&ls(je)),e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?t=e=[e,n]:(ts=t,t=s)):(ts=t,t=s),t}function ma(){var t,e,n,u;return t=ts,"values"===r.substr(ts,6).toLowerCase()?(e=r.substr(ts,6),ts+=6):(e=s,0===ss&&ls(Ye)),e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?t=e=[e,n]:(ts=t,t=s)):(ts=t,t=s),t}function Sa(){var t,e,n,u;return t=ts,"using"===r.substr(ts,5).toLowerCase()?(e=r.substr(ts,5),ts+=5):(e=s,0===ss&&ls(Be)),e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?t=e=[e,n]:(ts=t,t=s)):(ts=t,t=s),t}function Ia(){var t,e,n,u;return t=ts,"with"===r.substr(ts,4).toLowerCase()?(e=r.substr(ts,4),ts+=4):(e=s,0===ss&&ls(_r)),e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?t=e=[e,n]:(ts=t,t=s)):(ts=t,t=s),t}function Na(){var t,e,n,u;return t=ts,"by"===r.substr(ts,2).toLowerCase()?(e=r.substr(ts,2),ts+=2):(e=s,0===ss&&ls(Ve)),e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?t=e=[e,n]:(ts=t,t=s)):(ts=t,t=s),t}function Ra(){var t,e,n,u;return t=ts,"asc"===r.substr(ts,3).toLowerCase()?(e=r.substr(ts,3),ts+=3):(e=s,0===ss&&ls(Je)),e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="ASC"):(ts=t,t=s)):(ts=t,t=s),t}function _a(){var t,e,n,u;return t=ts,"desc"===r.substr(ts,4).toLowerCase()?(e=r.substr(ts,4),ts+=4):(e=s,0===ss&&ls(Qe)),e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="DESC"):(ts=t,t=s)):(ts=t,t=s),t}function Oa(){var t,e,n,u;return t=ts,"all"===r.substr(ts,3).toLowerCase()?(e=r.substr(ts,3),ts+=3):(e=s,0===ss&&ls(rn)),e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="ALL"):(ts=t,t=s)):(ts=t,t=s),t}function ga(){var t,e,n,u;return t=ts,"distinct"===r.substr(ts,8).toLowerCase()?(e=r.substr(ts,8),ts+=8):(e=s,0===ss&&ls(tn)),e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="DISTINCT"):(ts=t,t=s)):(ts=t,t=s),t}function xa(){var t,e,n,u;return t=ts,"between"===r.substr(ts,7).toLowerCase()?(e=r.substr(ts,7),ts+=7):(e=s,0===ss&&ls(en)),e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="BETWEEN"):(ts=t,t=s)):(ts=t,t=s),t}function Ua(){var t,e,n,u;return t=ts,"in"===r.substr(ts,2).toLowerCase()?(e=r.substr(ts,2),ts+=2):(e=s,0===ss&&ls(nn)),e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="IN"):(ts=t,t=s)):(ts=t,t=s),t}function Ma(){var t,e,n,u;return t=ts,"is"===r.substr(ts,2).toLowerCase()?(e=r.substr(ts,2),ts+=2):(e=s,0===ss&&ls(un)),e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="IS"):(ts=t,t=s)):(ts=t,t=s),t}function Da(){var t,e,n,u;return t=ts,"like"===r.substr(ts,4).toLowerCase()?(e=r.substr(ts,4),ts+=4):(e=s,0===ss&&ls(sn)),e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="LIKE"):(ts=t,t=s)):(ts=t,t=s),t}function ka(){var t,e,n,u;return t=ts,"exists"===r.substr(ts,6).toLowerCase()?(e=r.substr(ts,6),ts+=6):(e=s,0===ss&&ls(on)),e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="EXISTS"):(ts=t,t=s)):(ts=t,t=s),t}function $a(){var t,e,n,u;return t=ts,"not"===r.substr(ts,3).toLowerCase()?(e=r.substr(ts,3),ts+=3):(e=s,0===ss&&ls($)),e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="NOT"):(ts=t,t=s)):(ts=t,t=s),t}function Fa(){var t,e,n,u;return t=ts,"and"===r.substr(ts,3).toLowerCase()?(e=r.substr(ts,3),ts+=3):(e=s,0===ss&&ls(an)),e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="AND"):(ts=t,t=s)):(ts=t,t=s),t}function Pa(){var t,e,n,u;return t=ts,"or"===r.substr(ts,2).toLowerCase()?(e=r.substr(ts,2),ts+=2):(e=s,0===ss&&ls(cn)),e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="OR"):(ts=t,t=s)):(ts=t,t=s),t}function Ga(){var t,e,n,u;return t=ts,"case"===r.substr(ts,4).toLowerCase()?(e=r.substr(ts,4),ts+=4):(e=s,0===ss&&ls(Cn)),e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?t=e=[e,n]:(ts=t,t=s)):(ts=t,t=s),t}function Ha(){var t,e,n,u;return t=ts,"end"===r.substr(ts,3).toLowerCase()?(e=r.substr(ts,3),ts+=3):(e=s,0===ss&&ls(hn)),e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?t=e=[e,n]:(ts=t,t=s)):(ts=t,t=s),t}function ja(){var t,e,n,u;return t=ts,"cast"===r.substr(ts,4).toLowerCase()?(e=r.substr(ts,4),ts+=4):(e=s,0===ss&&ls(An)),e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?t=e=[e,n]:(ts=t,t=s)):(ts=t,t=s),t}function Ya(){var t,e,n,u;return t=ts,"char"===r.substr(ts,4).toLowerCase()?(e=r.substr(ts,4),ts+=4):(e=s,0===ss&&ls(Sn)),e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="CHAR"):(ts=t,t=s)):(ts=t,t=s),t}function Ba(){var t,e,n,u;return t=ts,"varchar"===r.substr(ts,7).toLowerCase()?(e=r.substr(ts,7),ts+=7):(e=s,0===ss&&ls(In)),e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="VARCHAR"):(ts=t,t=s)):(ts=t,t=s),t}function Xa(){var t,e,n,u;return t=ts,"nvarchar"===r.substr(ts,8).toLowerCase()?(e=r.substr(ts,8),ts+=8):(e=s,0===ss&&ls(Rn)),e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="NVARCHAR"):(ts=t,t=s)):(ts=t,t=s),t}function Wa(){var t,e,n,u;return t=ts,"numeric"===r.substr(ts,7).toLowerCase()?(e=r.substr(ts,7),ts+=7):(e=s,0===ss&&ls(_n)),e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="NUMERIC"):(ts=t,t=s)):(ts=t,t=s),t}function Va(){var t,e,n,u;return t=ts,"decimal"===r.substr(ts,7).toLowerCase()?(e=r.substr(ts,7),ts+=7):(e=s,0===ss&&ls(On)),e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="DECIMAL"):(ts=t,t=s)):(ts=t,t=s),t}function Ka(){var t,e,n,u;return t=ts,"unsigned"===r.substr(ts,8).toLowerCase()?(e=r.substr(ts,8),ts+=8):(e=s,0===ss&&ls(xn)),e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="UNSIGNED"):(ts=t,t=s)):(ts=t,t=s),t}function qa(){var t,e,n,u;return t=ts,"int"===r.substr(ts,3).toLowerCase()?(e=r.substr(ts,3),ts+=3):(e=s,0===ss&&ls(Un)),e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="INT"):(ts=t,t=s)):(ts=t,t=s),t}function Za(){var t,e,n,u;return t=ts,"integer"===r.substr(ts,7).toLowerCase()?(e=r.substr(ts,7),ts+=7):(e=s,0===ss&&ls(Dn)),e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="INTEGER"):(ts=t,t=s)):(ts=t,t=s),t}function za(){var t,e,n,u;return t=ts,"smallint"===r.substr(ts,8).toLowerCase()?(e=r.substr(ts,8),ts+=8):(e=s,0===ss&&ls($n)),e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="SMALLINT"):(ts=t,t=s)):(ts=t,t=s),t}function Ja(){var t,e,n,u;return t=ts,"tinyint"===r.substr(ts,7).toLowerCase()?(e=r.substr(ts,7),ts+=7):(e=s,0===ss&&ls(Fn)),e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="TINYINT"):(ts=t,t=s)):(ts=t,t=s),t}function Qa(){var t,e,n,u;return t=ts,"bigint"===r.substr(ts,6).toLowerCase()?(e=r.substr(ts,6),ts+=6):(e=s,0===ss&&ls(Yn)),e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="BIGINT"):(ts=t,t=s)):(ts=t,t=s),t}function ri(){var t,e,n,u;return t=ts,"float"===r.substr(ts,5).toLowerCase()?(e=r.substr(ts,5),ts+=5):(e=s,0===ss&&ls(Bn)),e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="FLOAT"):(ts=t,t=s)):(ts=t,t=s),t}function ti(){var t,e,n,u;return t=ts,"real"===r.substr(ts,4).toLowerCase()?(e=r.substr(ts,4),ts+=4):(e=s,0===ss&&ls(Xn)),e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="REAL"):(ts=t,t=s)):(ts=t,t=s),t}function ei(){var t,e,n,u;return t=ts,"double"===r.substr(ts,6).toLowerCase()?(e=r.substr(ts,6),ts+=6):(e=s,0===ss&&ls(Wn)),e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="DOUBLE"):(ts=t,t=s)):(ts=t,t=s),t}function ni(){var t,e,n,u;return t=ts,"date"===r.substr(ts,4).toLowerCase()?(e=r.substr(ts,4),ts+=4):(e=s,0===ss&&ls(Vn)),e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="DATE"):(ts=t,t=s)):(ts=t,t=s),t}function ui(){var t,e,n,u;return t=ts,"datetime"===r.substr(ts,8).toLowerCase()?(e=r.substr(ts,8),ts+=8):(e=s,0===ss&&ls(qn)),e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="DATETIME"):(ts=t,t=s)):(ts=t,t=s),t}function si(){var t,e,n,u;return t=ts,"datetime2"===r.substr(ts,9).toLowerCase()?(e=r.substr(ts,9),ts+=9):(e=s,0===ss&&ls(Zn)),e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="DATETIME2"):(ts=t,t=s)):(ts=t,t=s),t}function oi(){var t,e,n,u;return t=ts,"datetimeoffset"===r.substr(ts,14).toLowerCase()?(e=r.substr(ts,14),ts+=14):(e=s,0===ss&&ls(zn)),e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="DATETIMEOFFSET"):(ts=t,t=s)):(ts=t,t=s),t}function ai(){var t,e,n,u;return t=ts,"time"===r.substr(ts,4).toLowerCase()?(e=r.substr(ts,4),ts+=4):(e=s,0===ss&&ls(Jn)),e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="TIME"):(ts=t,t=s)):(ts=t,t=s),t}function ii(){var t,e,n,u;return t=ts,"timestamp"===r.substr(ts,9).toLowerCase()?(e=r.substr(ts,9),ts+=9):(e=s,0===ss&&ls(Qn)),e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="TIMESTAMP"):(ts=t,t=s)):(ts=t,t=s),t}function ci(){var t,e,n,u;return t=ts,"current_timestamp"===r.substr(ts,17).toLowerCase()?(e=r.substr(ts,17),ts+=17):(e=s,0===ss&&ls(bu)),e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="CURRENT_TIMESTAMP"):(ts=t,t=s)):(ts=t,t=s),t}function li(){var t;return 64===r.charCodeAt(ts)?(t="@",ts++):(t=s,0===ss&&ls(hu)),t}function fi(){var t;return (t=function(){var t;return "@@"===r.substr(ts,2)?(t="@@",ts+=2):(t=s,0===ss&&ls(Au)),t}())===s&&(t=li())===s&&(t=function(){var t;return 36===r.charCodeAt(ts)?(t="$",ts++):(t=s,0===ss&&ls(yu)),t}()),t}function bi(){var t;return 61===r.charCodeAt(ts)?(t="=",ts++):(t=s,0===ss&&ls(Kr)),t}function vi(){var t,e,n,u;return t=ts,"add"===r.substr(ts,3).toLowerCase()?(e=r.substr(ts,3),ts+=3):(e=s,0===ss&&ls(Iu)),e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="ADD"):(ts=t,t=s)):(ts=t,t=s),t}function di(){var t,e,n,u;return t=ts,"column"===r.substr(ts,6).toLowerCase()?(e=r.substr(ts,6),ts+=6):(e=s,0===ss&&ls(Nu)),e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="COLUMN"):(ts=t,t=s)):(ts=t,t=s),t}function Li(){var t,e,n,u;return t=ts,"index"===r.substr(ts,5).toLowerCase()?(e=r.substr(ts,5),ts+=5):(e=s,0===ss&&ls(Ru)),e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="INDEX"):(ts=t,t=s)):(ts=t,t=s),t}function Ci(){var t,e,n,u;return t=ts,"key"===r.substr(ts,3).toLowerCase()?(e=r.substr(ts,3),ts+=3):(e=s,0===ss&&ls(L)),e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="KEY"):(ts=t,t=s)):(ts=t,t=s),t}function pi(){var t,e,n,u;return t=ts,"unique"===r.substr(ts,6).toLowerCase()?(e=r.substr(ts,6),ts+=6):(e=s,0===ss&&ls(v)),e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="UNIQUE"):(ts=t,t=s)):(ts=t,t=s),t}function wi(){var t,e,n,u;return t=ts,"comment"===r.substr(ts,7).toLowerCase()?(e=r.substr(ts,7),ts+=7):(e=s,0===ss&&ls(xu)),e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="COMMENT"):(ts=t,t=s)):(ts=t,t=s),t}function Ei(){var t,e,n,u;return t=ts,"constraint"===r.substr(ts,10).toLowerCase()?(e=r.substr(ts,10),ts+=10):(e=s,0===ss&&ls(Uu)),e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="CONSTRAINT"):(ts=t,t=s)):(ts=t,t=s),t}function hi(){var t;return 46===r.charCodeAt(ts)?(t=".",ts++):(t=s,0===ss&&ls(zt)),t}function Ai(){var t;return 44===r.charCodeAt(ts)?(t=",",ts++):(t=s,0===ss&&ls(Hu)),t}function yi(){var t;return 42===r.charCodeAt(ts)?(t="*",ts++):(t=s,0===ss&&ls(ot)),t}function Ti(){var t;return 40===r.charCodeAt(ts)?(t="(",ts++):(t=s,0===ss&&ls(wr)),t}function mi(){var t;return 41===r.charCodeAt(ts)?(t=")",ts++):(t=s,0===ss&&ls(Er)),t}function Si(){var t;return 91===r.charCodeAt(ts)?(t="[",ts++):(t=s,0===ss&&ls(Et)),t}function Ii(){var t;return 93===r.charCodeAt(ts)?(t="]",ts++):(t=s,0===ss&&ls(yt)),t}function Ni(){var t;return 59===r.charCodeAt(ts)?(t=";",ts++):(t=s,0===ss&&ls(ju)),t}function Ri(){var t;return (t=function(){var t;return "||"===r.substr(ts,2)?(t="||",ts+=2):(t=s,0===ss&&ls(Yu)),t}())===s&&(t=function(){var t;return "&&"===r.substr(ts,2)?(t="&&",ts+=2):(t=s,0===ss&&ls(Bu)),t}()),t}function _i(){var r,t;for(r=[],(t=Mi())===s&&(t=gi());t!==s;)r.push(t),(t=Mi())===s&&(t=gi());return r}function Oi(){var r,t;if(r=[],(t=Mi())===s&&(t=gi()),t!==s)for(;t!==s;)r.push(t),(t=Mi())===s&&(t=gi());else r=s;return r}function gi(){var t;return (t=function(){var t,e,n,u,o,a;t=ts,"/*"===r.substr(ts,2)?(e="/*",ts+=2):(e=s,0===ss&&ls(Xu));if(e!==s){for(n=[],u=ts,o=ts,ss++,"*/"===r.substr(ts,2)?(a="*/",ts+=2):(a=s,0===ss&&ls(Wu)),ss--,a===s?o=void 0:(ts=o,o=s),o!==s&&(a=Ui())!==s?u=o=[o,a]:(ts=u,u=s);u!==s;)n.push(u),u=ts,o=ts,ss++,"*/"===r.substr(ts,2)?(a="*/",ts+=2):(a=s,0===ss&&ls(Wu)),ss--,a===s?o=void 0:(ts=o,o=s),o!==s&&(a=Ui())!==s?u=o=[o,a]:(ts=u,u=s);n!==s?("*/"===r.substr(ts,2)?(u="*/",ts+=2):(u=s,0===ss&&ls(Wu)),u!==s?t=e=[e,n,u]:(ts=t,t=s)):(ts=t,t=s);}else ts=t,t=s;return t}())===s&&(t=function(){var t,e,n,u,o,a;t=ts,"--"===r.substr(ts,2)?(e="--",ts+=2):(e=s,0===ss&&ls(Vu));if(e!==s){for(n=[],u=ts,o=ts,ss++,a=Di(),ss--,a===s?o=void 0:(ts=o,o=s),o!==s&&(a=Ui())!==s?u=o=[o,a]:(ts=u,u=s);u!==s;)n.push(u),u=ts,o=ts,ss++,a=Di(),ss--,a===s?o=void 0:(ts=o,o=s),o!==s&&(a=Ui())!==s?u=o=[o,a]:(ts=u,u=s);n!==s?t=e=[e,n]:(ts=t,t=s);}else ts=t,t=s;return t}())===s&&(t=function(){var t,e,n,u,o,a;t=ts,35===r.charCodeAt(ts)?(e="#",ts++):(e=s,0===ss&&ls(Ku));if(e!==s){for(n=[],u=ts,o=ts,ss++,a=Di(),ss--,a===s?o=void 0:(ts=o,o=s),o!==s&&(a=Ui())!==s?u=o=[o,a]:(ts=u,u=s);u!==s;)n.push(u),u=ts,o=ts,ss++,a=Di(),ss--,a===s?o=void 0:(ts=o,o=s),o!==s&&(a=Ui())!==s?u=o=[o,a]:(ts=u,u=s);n!==s?t=e=[e,n]:(ts=t,t=s);}else ts=t,t=s;return t}()),t}function xi(){var r,t,e,n,u,o,a;return r=ts,(t=wi())!==s&&_i()!==s?((e=bi())===s&&(e=null),e!==s&&_i()!==s&&(n=Xo())!==s?(o=e,a=n,r=t={type:(u=t).toLowerCase(),keyword:u.toLowerCase(),symbol:o,value:a}):(ts=r,r=s)):(ts=r,r=s),r}function Ui(){var t;return r.length>ts?(t=r.charAt(ts),ts++):(t=s,0===ss&&ls(qu)),t}function Mi(){var t;return Zu.test(r.charAt(ts))?(t=r.charAt(ts),ts++):(t=s,0===ss&&ls(zu)),t}function Di(){var t,e;if((t=function(){var t,e;t=ts,ss++,r.length>ts?(e=r.charAt(ts),ts++):(e=s,0===ss&&ls(qu));ss--,e===s?t=void 0:(ts=t,t=s);return t}())===s)if(t=[],qt.test(r.charAt(ts))?(e=r.charAt(ts),ts++):(e=s,0===ss&&ls(Zt)),e!==s)for(;e!==s;)t.push(e),qt.test(r.charAt(ts))?(e=r.charAt(ts),ts++):(e=s,0===ss&&ls(Zt));else t=s;return t}function ki(){var t,e;return t=ts,nc=[],(void 0)!==s&&_i()!==s?((e=$i())===s&&(e=function(){var t,e;t=ts,function(){var t;return "return"===r.substr(ts,6).toLowerCase()?(t=r.substr(ts,6),ts+=6):(t=s,0===ss&&ls(Tu)),t}()!==s&&_i()!==s&&(e=Fi())!==s?(t={type:"return",expr:e}):(ts=t,t=s);return t}()),e!==s?(t={stmt:e,vars:nc}):(ts=t,t=s)):(ts=t,t=s),t}function $i(){var t,e,n,u;return t=ts,(e=Xi())===s&&(e=Wi()),e!==s&&_i()!==s?((n=function(){var t;return ":="===r.substr(ts,2)?(t=":=",ts+=2):(t=s,0===ss&&ls(mu)),t}())===s&&(n=bi()),n!==s&&_i()!==s&&(u=Fi())!==s?(t=e={type:"assign",left:e,symbol:n,right:u}):(ts=t,t=s)):(ts=t,t=s),t}function Fi(){var r;return (r=ks())===s&&(r=function(){var r,t,e,n,u;r=ts,(t=Xi())!==s&&_i()!==s&&(e=to())!==s&&_i()!==s&&(n=Xi())!==s&&_i()!==s&&(u=no())!==s?(r=t={type:"join",ltable:t,rtable:n,op:e,on:u}):(ts=r,r=s);return r}())===s&&(r=Pi())===s&&(r=function(){var r,t;r=ts,Si()!==s&&_i()!==s&&(t=Bi())!==s&&_i()!==s&&Ii()!==s?(r={type:"array",value:t}):(ts=r,r=s);return r}()),r}function Pi(){var r,t,e,n,u,o,a,i;if(r=ts,(t=Gi())!==s){for(e=[],n=ts,(u=_i())!==s&&(o=No())!==s&&(a=_i())!==s&&(i=Gi())!==s?n=u=[u,o,a,i]:(ts=n,n=s);n!==s;)e.push(n),n=ts,(u=_i())!==s&&(o=No())!==s&&(a=_i())!==s&&(i=Gi())!==s?n=u=[u,o,a,i]:(ts=n,n=s);e!==s?(r=t=qr(t,e)):(ts=r,r=s);}else ts=r,r=s;return r}function Gi(){var r,t,e,n,u,o,a,i;if(r=ts,(t=Hi())!==s){for(e=[],n=ts,(u=_i())!==s&&(o=_o())!==s&&(a=_i())!==s&&(i=Hi())!==s?n=u=[u,o,a,i]:(ts=n,n=s);n!==s;)e.push(n),n=ts,(u=_i())!==s&&(o=_o())!==s&&(a=_i())!==s&&(i=Hi())!==s?n=u=[u,o,a,i]:(ts=n,n=s);e!==s?(r=t=qr(t,e)):(ts=r,r=s);}else ts=r,r=s;return r}function Hi(){var r,t,e;return (r=Yo())===s&&(r=Xi())===s&&(r=Yi())===s&&(r=Go())===s&&(r=ts,Ti()!==s&&_i()!==s&&(t=Pi())!==s&&_i()!==s&&mi()!==s?((e=t).parentheses=!0,r=e):(ts=r,r=s)),r}function ji(){var r,t,e,n,u,o,a;return r=ts,(t=Uo())!==s?(e=ts,(n=_i())!==s&&(u=hi())!==s&&(o=_i())!==s&&(a=Uo())!==s?e=n=[n,u,o,a]:(ts=e,e=s),e===s&&(e=null),e!==s?(r=t=function(r,t){let e=r;return null!==t&&(e=`${r}.${t[3]}`),e}(t,e)):(ts=r,r=s)):(ts=r,r=s),r}function Yi(){var r,t,e;return r=ts,(t=ji())!==s&&_i()!==s&&Ti()!==s&&_i()!==s?((e=Bi())===s&&(e=null),e!==s&&_i()!==s&&mi()!==s?(r=t={type:"function",name:t,args:{type:"expr_list",value:e}}):(ts=r,r=s)):(ts=r,r=s),r===s&&(r=ts,(t=ji())!==s&&(t=function(r){return {type:"function",name:r,args:null}}(t)),r=t),r}function Bi(){var r,t,e,n,u,o,a,i;if(r=ts,(t=Hi())!==s){for(e=[],n=ts,(u=_i())!==s&&(o=Ai())!==s&&(a=_i())!==s&&(i=Hi())!==s?n=u=[u,o,a,i]:(ts=n,n=s);n!==s;)e.push(n),n=ts,(u=_i())!==s&&(o=Ai())!==s&&(a=_i())!==s&&(i=Hi())!==s?n=u=[u,o,a,i]:(ts=n,n=s);e!==s?(r=t=b(t,e)):(ts=r,r=s);}else ts=r,r=s;return r}function Xi(){var r,t,e,n,u;return r=ts,(t=fi())!==s&&(e=Wi())!==s?(n=t,u=e,r=t={type:"var",...u,prefix:n}):(ts=r,r=s),r}function Wi(){var t,e,n,u,o;return t=ts,(e=ko())!==s&&(n=function(){var e,n,u,o;e=[],n=ts,46===r.charCodeAt(ts)?(u=".",ts++):(u=s,0===ss&&ls(zt));u!==s&&(o=ko())!==s?n=u=[u,o]:(ts=n,n=s);for(;n!==s;)e.push(n),n=ts,46===r.charCodeAt(ts)?(u=".",ts++):(u=s,0===ss&&ls(zt)),u!==s&&(o=ko())!==s?n=u=[u,o]:(ts=n,n=s);e!==s&&(e=function(r){const t=[];for(let e=0;e<r.length;e++)t.push(r[e][1]);return t}(e));return e}())!==s?(u=e,o=n,nc.push(u),t=e={type:"var",name:u,members:o,prefix:null}):(ts=t,t=s),t}function Vi(){var t;return (t=function(){var t,e,n,u,o,a;t=ts,(e=Si())===s&&(e=null);if(e!==s)if(_i()!==s)if((n=Ya())===s&&(n=Ba())===s&&(n=function(){var t,e,n,u;return t=ts,"nchar"===r.substr(ts,5).toLowerCase()?(e=r.substr(ts,5),ts+=5):(e=s,0===ss&&ls(Nn)),e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="NCHAR"):(ts=t,t=s)):(ts=t,t=s),t}())===s&&(n=Xa()),n!==s)if(_i()!==s)if((u=Ii())===s&&(u=null),u!==s)if((Ju(e,0,u)?s:void 0)!==s)if(_i()!==s)if(Ti()!==s)if(_i()!==s){if(o=[],Jt.test(r.charAt(ts))?(a=r.charAt(ts),ts++):(a=s,0===ss&&ls(Qt)),a!==s)for(;a!==s;)o.push(a),Jt.test(r.charAt(ts))?(a=r.charAt(ts),ts++):(a=s,0===ss&&ls(Qt));else o=s;o!==s&&(a=_i())!==s&&mi()!==s?(e={dataType:n,length:parseInt(o.join(""),10)},t=e):(ts=t,t=s);}else ts=t,t=s;else ts=t,t=s;else ts=t,t=s;else ts=t,t=s;else ts=t,t=s;else ts=t,t=s;else ts=t,t=s;else ts=t,t=s;else ts=t,t=s;t===s&&(t=ts,(e=Si())===s&&(e=null),e!==s&&_i()!==s?((n=Ya())===s&&(n=Ba()),n!==s&&_i()!==s?((u=Ii())===s&&(u=null),u!==s?((Ju(e,0,u)?s:void 0)!==s?(e=Qu(0,n),t=e):(ts=t,t=s)):(ts=t,t=s)):(ts=t,t=s)):(ts=t,t=s),t===s&&(t=ts,(e=Si())===s&&(e=null),e!==s&&_i()!==s&&(n=Xa())!==s&&_i()!==s?((u=Ii())===s&&(u=null),u!==s?((Ju(e,0,u)?s:void 0)!==s&&_i()!==s&&Ti()!==s&&_i()!==s?("max"===r.substr(ts,3).toLowerCase()?(o=r.substr(ts,3),ts+=3):(o=s,0===ss&&ls(fn)),o!==s&&(a=_i())!==s&&mi()!==s?(e=function(r,t,e,n){return {dataType:t,length:"max"}}(0,n),t=e):(ts=t,t=s)):(ts=t,t=s)):(ts=t,t=s)):(ts=t,t=s)));return t}())===s&&(t=function(){var t,e,n,u,o,a,i,c,l,f,b,v,d,L,C;t=ts,(e=Si())===s&&(e=null);if(e!==s)if(_i()!==s)if((n=Wa())===s&&(n=Va())===s&&(n=qa())===s&&(n=Za())===s&&(n=za())===s&&(n=Ja())===s&&(n=Qa())===s&&(n=ri())===s&&(n=ti())===s&&(n=ei()),n!==s)if((u=_i())!==s)if((o=Ii())===s&&(o=null),o!==s)if((Ju(e,0,o)?s:void 0)!==s)if((a=_i())!==s)if((i=Ti())!==s)if((c=_i())!==s){if(l=[],Jt.test(r.charAt(ts))?(f=r.charAt(ts),ts++):(f=s,0===ss&&ls(Qt)),f!==s)for(;f!==s;)l.push(f),Jt.test(r.charAt(ts))?(f=r.charAt(ts),ts++):(f=s,0===ss&&ls(Qt));else l=s;if(l!==s)if((f=_i())!==s){if(b=ts,(v=Ai())!==s)if((d=_i())!==s){if(L=[],Jt.test(r.charAt(ts))?(C=r.charAt(ts),ts++):(C=s,0===ss&&ls(Qt)),C!==s)for(;C!==s;)L.push(C),Jt.test(r.charAt(ts))?(C=r.charAt(ts),ts++):(C=s,0===ss&&ls(Qt));else L=s;L!==s?b=v=[v,d,L]:(ts=b,b=s);}else ts=b,b=s;else ts=b,b=s;b===s&&(b=null),b!==s&&(v=_i())!==s&&(d=mi())!==s&&(L=_i())!==s?((C=Ki())===s&&(C=null),C!==s?(p=b,w=C,e={dataType:n,length:parseInt(l.join(""),10),scale:p&&parseInt(p[2].join(""),10),parentheses:!0,suffix:w},t=e):(ts=t,t=s)):(ts=t,t=s);}else ts=t,t=s;else ts=t,t=s;}else ts=t,t=s;else ts=t,t=s;else ts=t,t=s;else ts=t,t=s;else ts=t,t=s;else ts=t,t=s;else ts=t,t=s;else ts=t,t=s;else ts=t,t=s;var p,w;if(t===s){if(t=ts,(e=Si())===s&&(e=null),e!==s)if(_i()!==s)if((n=Wa())===s&&(n=Va())===s&&(n=qa())===s&&(n=Za())===s&&(n=za())===s&&(n=Ja())===s&&(n=Qa())===s&&(n=ri())===s&&(n=ti())===s&&(n=ei()),n!==s)if((u=Ii())===s&&(u=null),u!==s)if((o=(o=Ju(e,0,u))?s:void 0)!==s)if(_i()!==s){if(a=[],Jt.test(r.charAt(ts))?(i=r.charAt(ts),ts++):(i=s,0===ss&&ls(Qt)),i!==s)for(;i!==s;)a.push(i),Jt.test(r.charAt(ts))?(i=r.charAt(ts),ts++):(i=s,0===ss&&ls(Qt));else a=s;a!==s&&(i=_i())!==s?((c=Ki())===s&&(c=null),c!==s?(e=function(r,t,e,n,u){return {dataType:t,length:parseInt(n.join(""),10),suffix:u}}(0,n,0,a,c),t=e):(ts=t,t=s)):(ts=t,t=s);}else ts=t,t=s;else ts=t,t=s;else ts=t,t=s;else ts=t,t=s;else ts=t,t=s;else ts=t,t=s;t===s&&(t=ts,(e=Si())===s&&(e=null),e!==s&&_i()!==s?((n=Wa())===s&&(n=Va())===s&&(n=qa())===s&&(n=Za())===s&&(n=za())===s&&(n=Ja())===s&&(n=Qa())===s&&(n=ri())===s&&(n=ti())===s&&(n=ei())===s&&(n=function(){var t,e,n,u;return t=ts,"bit"===r.substr(ts,3).toLowerCase()?(e=r.substr(ts,3),ts+=3):(e=s,0===ss&&ls(yn)),e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="BIT"):(ts=t,t=s)):(ts=t,t=s),t}())===s&&(n=function(){var t,e,n,u;return t=ts,"money"===r.substr(ts,5).toLowerCase()?(e=r.substr(ts,5),ts+=5):(e=s,0===ss&&ls(Tn)),e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="MONEY"):(ts=t,t=s)):(ts=t,t=s),t}())===s&&(n=function(){var t,e,n,u;return t=ts,"smallmoney"===r.substr(ts,10).toLowerCase()?(e=r.substr(ts,10),ts+=10):(e=s,0===ss&&ls(mn)),e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="SMALLMONEY"):(ts=t,t=s)):(ts=t,t=s),t}()),n!==s&&(u=_i())!==s?((o=Ii())===s&&(o=null),o!==s?((Ju(e,0,o)?s:void 0)!==s&&(a=_i())!==s?((i=Ki())===s&&(i=null),i!==s&&(c=_i())!==s?(e=function(r,t,e,n){return {dataType:t,suffix:n}}(0,n,0,i),t=e):(ts=t,t=s)):(ts=t,t=s)):(ts=t,t=s)):(ts=t,t=s)):(ts=t,t=s));}return t}())===s&&(t=function(){var t,e,n,u,o,a,i,c,l,f,b;t=ts,(e=Si())===s&&(e=null);if(e!==s)if(_i()!==s)if((n=si())===s&&(n=oi())===s&&(n=ai()),n!==s)if(_i()!==s)if((u=Ii())===s&&(u=null),u!==s)if((Ju(e,0,u)?s:void 0)!==s)if(Ti()!==s)if(_i()!==s){if(o=[],Jt.test(r.charAt(ts))?(a=r.charAt(ts),ts++):(a=s,0===ss&&ls(Qt)),a!==s)for(;a!==s;)o.push(a),Jt.test(r.charAt(ts))?(a=r.charAt(ts),ts++):(a=s,0===ss&&ls(Qt));else o=s;if(o!==s)if((a=_i())!==s){if(i=ts,(c=Ai())!==s)if((l=_i())!==s){if(f=[],Jt.test(r.charAt(ts))?(b=r.charAt(ts),ts++):(b=s,0===ss&&ls(Qt)),b!==s)for(;b!==s;)f.push(b),Jt.test(r.charAt(ts))?(b=r.charAt(ts),ts++):(b=s,0===ss&&ls(Qt));else f=s;f!==s?i=c=[c,l,f]:(ts=i,i=s);}else ts=i,i=s;else ts=i,i=s;i===s&&(i=null),i!==s&&(c=_i())!==s&&(l=mi())!==s?(e={dataType:n,length:parseInt(o.join(""),10)},t=e):(ts=t,t=s);}else ts=t,t=s;else ts=t,t=s;}else ts=t,t=s;else ts=t,t=s;else ts=t,t=s;else ts=t,t=s;else ts=t,t=s;else ts=t,t=s;else ts=t,t=s;else ts=t,t=s;t===s&&(t=ts,(e=Si())===s&&(e=null),e!==s&&_i()!==s?((n=ni())===s&&(n=function(){var t,e,n,u;return t=ts,"smalldatetime"===r.substr(ts,13).toLowerCase()?(e=r.substr(ts,13),ts+=13):(e=s,0===ss&&ls(Kn)),e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="SMALLDATETIME"):(ts=t,t=s)):(ts=t,t=s),t}())===s&&(n=ui())===s&&(n=si())===s&&(n=oi())===s&&(n=ai())===s&&(n=ii()),n!==s&&_i()!==s?((u=Ii())===s&&(u=null),u!==s?((Ju(e,0,u)?s:void 0)!==s?(e=Qu(0,n),t=e):(ts=t,t=s)):(ts=t,t=s)):(ts=t,t=s)):(ts=t,t=s));return t}())===s&&(t=function(){var t,e,n,u;t=ts,(e=Si())===s&&(e=null);e!==s&&_i()!==s&&(n=function(){var t,e,n,u;return t=ts,"json"===r.substr(ts,4).toLowerCase()?(e=r.substr(ts,4),ts+=4):(e=s,0===ss&&ls(kn)),e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="JSON"):(ts=t,t=s)):(ts=t,t=s),t}())!==s&&_i()!==s?((u=Ii())===s&&(u=null),u!==s?((Ju(e,0,u)?s:void 0)!==s?(e=Qu(0,n),t=e):(ts=t,t=s)):(ts=t,t=s)):(ts=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=ts,(e=Si())===s&&(e=null);e!==s&&_i()!==s?((n=function(){var t,e,n,u;return t=ts,"tinytext"===r.substr(ts,8).toLowerCase()?(e=r.substr(ts,8),ts+=8):(e=s,0===ss&&ls(Pn)),e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="TINYTEXT"):(ts=t,t=s)):(ts=t,t=s),t}())===s&&(n=function(){var t,e,n,u;return t=ts,"text"===r.substr(ts,4).toLowerCase()?(e=r.substr(ts,4),ts+=4):(e=s,0===ss&&ls(Gn)),e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="TEXT"):(ts=t,t=s)):(ts=t,t=s),t}())===s&&(n=function(){var t,e,n,u;return t=ts,"mediumtext"===r.substr(ts,10).toLowerCase()?(e=r.substr(ts,10),ts+=10):(e=s,0===ss&&ls(Hn)),e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="MEDIUMTEXT"):(ts=t,t=s)):(ts=t,t=s),t}())===s&&(n=function(){var t,e,n,u;return t=ts,"longtext"===r.substr(ts,8).toLowerCase()?(e=r.substr(ts,8),ts+=8):(e=s,0===ss&&ls(jn)),e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="LONGTEXT"):(ts=t,t=s)):(ts=t,t=s),t}()),n!==s&&_i()!==s?((u=Ii())===s&&(u=null),u!==s?((Ju(e,0,u)?s:void 0)!==s?(e=rs(0,n),t=e):(ts=t,t=s)):(ts=t,t=s)):(ts=t,t=s)):(ts=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=ts,(e=Si())===s&&(e=null);e!==s&&_i()!==s&&(n=function(){var t,e,n,u;return t=ts,"uniqueidentifier"===r.substr(ts,16).toLowerCase()?(e=r.substr(ts,16),ts+=16):(e=s,0===ss&&ls(tu)),e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="UNIQUEIDENTIFIER"):(ts=t,t=s)):(ts=t,t=s),t}())!==s&&_i()!==s?((u=Ii())===s&&(u=null),u!==s?((Ju(e,0,u)?s:void 0)!==s?(e=rs(0,n),t=e):(ts=t,t=s)):(ts=t,t=s)):(ts=t,t=s);return t}()),t}function Ki(){var t,e,n;return t=ts,(e=Ka())===s&&(e=null),e!==s&&_i()!==s?((n=function(){var t,e,n,u;return t=ts,"zerofill"===r.substr(ts,8).toLowerCase()?(e=r.substr(ts,8),ts+=8):(e=s,0===ss&&ls(Mn)),e!==s?(n=ts,ss++,u=$o(),ss--,u===s?n=void 0:(ts=n,n=s),n!==s?(t=e="ZEROFILL"):(ts=t,t=s)):(ts=t,t=s),t}())===s&&(n=null),n!==s?(t=e=function(r,t){const e=[];return r&&e.push(r),t&&e.push(t),e}(e,n)):(ts=t,t=s)):(ts=t,t=s),t}const qi={ALTER:!0,ALL:!0,ADD:!0,AND:!0,AS:!0,ASC:!0,BETWEEN:!0,BY:!0,CALL:!0,CASE:!0,CREATE:!0,CONTAINS:!0,CURRENT_DATE:!0,CURRENT_TIME:!0,CURRENT_TIMESTAMP:!0,CURRENT_USER:!0,DELETE:!0,DESC:!0,DISTINCT:!0,DROP:!0,ELSE:!0,END:!0,EXISTS:!0,EXPLAIN:!0,FALSE:!0,FROM:!0,FULL:!0,GROUP:!0,HAVING:!0,IN:!0,INNER:!0,INSERT:!0,INTO:!0,IS:!0,JOIN:!0,JSON:!0,KEY:!0,LEFT:!0,LIKE:!0,LIMIT:!0,LOW_PRIORITY:!0,NOT:!0,NULL:!0,NOCHECK:!0,ON:!0,OR:!0,ORDER:!0,OUTER:!0,RECURSIVE:!0,RENAME:!0,READ:!0,RIGHT:!0,SELECT:!0,SESSION_USER:!0,SET:!0,SHOW:!0,STATUS:!0,SYSTEM_USER:!0,TABLE:!0,THEN:!0,TRUE:!0,TRUNCATE:!0,TYPE:!0,UNION:!0,UPDATE:!0,USING:!0,VALUES:!0,WITH:!0,WHEN:!0,WHERE:!0,WRITE:!0,GLOBAL:!0,SESSION:!0,LOCAL:!0,PERSIST:!0,PERSIST_ONLY:!0};function Zi(r,t){return {type:"unary_expr",operator:r,expr:t}}function zi(r,t,e){return {type:"binary_expr",operator:r,left:t,right:e}}function Ji(r){const t=n(Number.MAX_SAFE_INTEGER);return !(n(r)<t)}function Qi(r,t,e=3){const n=[r];for(let r=0;r<t.length;r++)n.push(t[r][e]);return n}function rc(r,t){let e=r;for(let r=0;r<t.length;r++)e=zi(t[r][1],e,t[r][3]);return e}function tc(r){const t=oc[r];return t||(r||null)}function ec(r){const t=new Set;for(let e of r.keys()){const r=e.split("::");if(!r){t.add(e);break}r&&r[1]&&(r[1]=tc(r[1])),t.add(r.join("::"));}return Array.from(t)}let nc=[];const uc=new Set,sc=new Set,oc={};if((e=a())!==s&&ts===r.length)return e;throw e!==s&&ts<r.length&&ls({type:"end"}),fs(us,ns<r.length?r.charAt(ns):null,ns<r.length?cs(ns,ns+1):cs(ns,ns))}};},function(r,t,e){var n=e(0);function u(r,t,e,n){this.message=r,this.expected=t,this.found=e,this.location=n,this.name="SyntaxError","function"==typeof Error.captureStackTrace&&Error.captureStackTrace(this,u);}!function(r,t){function e(){this.constructor=r;}e.prototype=t.prototype,r.prototype=new e;}(u,Error),u.buildMessage=function(r,t){var e={literal:function(r){return '"'+u(r.text)+'"'},class:function(r){var t,e="";for(t=0;t<r.parts.length;t++)e+=r.parts[t]instanceof Array?s(r.parts[t][0])+"-"+s(r.parts[t][1]):s(r.parts[t]);return "["+(r.inverted?"^":"")+e+"]"},any:function(r){return "any character"},end:function(r){return "end of input"},other:function(r){return r.description}};function n(r){return r.charCodeAt(0).toString(16).toUpperCase()}function u(r){return r.replace(/\\/g,"\\\\").replace(/"/g,'\\"').replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(r){return "\\x0"+n(r)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(r){return "\\x"+n(r)}))}function s(r){return r.replace(/\\/g,"\\\\").replace(/\]/g,"\\]").replace(/\^/g,"\\^").replace(/-/g,"\\-").replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(r){return "\\x0"+n(r)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(r){return "\\x"+n(r)}))}return "Expected "+function(r){var t,n,u,s=new Array(r.length);for(t=0;t<r.length;t++)s[t]=(u=r[t],e[u.type](u));if(s.sort(),s.length>0){for(t=1,n=1;t<s.length;t++)s[t-1]!==s[t]&&(s[n]=s[t],n++);s.length=n;}switch(s.length){case 1:return s[0];case 2:return s[0]+" or "+s[1];default:return s.slice(0,-1).join(", ")+", or "+s[s.length-1]}}(r)+" but "+function(r){return r?'"'+u(r)+'"':"end of input"}(t)+" found."},r.exports={SyntaxError:u,parse:function(r,t){t=void 0!==t?t:{};var e,s={},o={start:Ns},a=Ns,i=As("EXTENSION",!0),c=As("SCHEMA",!0),l=As("VERSION",!0),b=function(r,t){return cc(r,t,1)},v=As("NULLS",!0),d=As("FIRST",!0),L=As("LAST",!0),C=As("AUTO_INCREMENT",!0),p=As("UNIQUE",!0),w=As("PRIMARY",!0),E=As("KEY",!0),h=As("COLUMN_FORMAT",!0),A=As("FIXED",!0),y=As("DYNAMIC",!0),T=As("DEFAULT",!0),m=As("STORAGE",!0),S=As("DISK",!0),I=As("MEMORY",!0),N=As("ALGORITHM",!0),R=As("INSTANT",!0),_=As("INPLACE",!0),O=As("COPY",!0),g=As("LOCK",!0),x=As("NONE",!0),U=As("SHARED",!0),M=As("EXCLUSIVE",!0),D=As("PRIMARY KEY",!0),k=As("FOREIGN KEY",!0),$=As("MATCH FULL",!0),F=As("MATCH PARTIAL",!0),P=As("MATCH SIMPLE",!0),G=As("ON",!0),H=As("DELETE",!0),j=As("UPDATE",!0),Y=As("RESTRICT",!0),B=As("CASCADE",!0),X=As("SET NULL",!0),W=As("NO ACTION",!0),V=As("SET DEFAULT",!0),K=As("TRIGGER",!0),q=As("BEFORE",!0),Z=As("AFTER",!0),z=As("INSTEAD OF",!0),J=As("EXECUTE",!0),Q=As("PROCEDURE",!0),rr=As("OF",!0),tr=As("NOT",!0),er=As("DEFERRABLE",!0),nr=As("INITIALLY IMMEDIATE",!0),ur=As("INITIALLY DEFERRED",!0),sr=As("FOR",!0),or=As("EACH",!0),ar=As("ROW",!0),ir=As("STATEMENT",!0),cr=As("CHARACTER",!0),lr=As("SET",!0),fr=As("CHARSET",!0),br=As("COLLATE",!0),vr=As("AVG_ROW_LENGTH",!0),dr=As("KEY_BLOCK_SIZE",!0),Lr=As("MAX_ROWS",!0),Cr=As("MIN_ROWS",!0),pr=As("STATS_SAMPLE_PAGES",!0),wr=As("CONNECTION",!0),Er=As("COMPRESSION",!0),hr=As("'",!1),Ar=As("ZLIB",!0),yr=As("LZ4",!0),Tr=As("ENGINE",!0),mr=As("IN",!0),Sr=As("ACCESS SHARE",!0),Ir=As("ROW SHARE",!0),Nr=As("ROW EXCLUSIVE",!0),Rr=As("SHARE UPDATE EXCLUSIVE",!0),_r=As("SHARE ROW EXCLUSIVE",!0),Or=As("ACCESS EXCLUSIVE",!0),gr=As("SHARE",!0),xr=As("MODE",!0),Ur=As("NOWAIT",!0),Mr=As("(",!1),Dr=As(")",!1),kr=function(r,t){return cc(r,t)},$r=As("BTREE",!0),Fr=As("HASH",!0),Pr=As("GIST",!0),Gr=As("GIN",!0),Hr=As("WITH",!0),jr=As("PARSER",!0),Yr=As("VISIBLE",!0),Br=As("INVISIBLE",!0),Xr=function(r,t){return t.unshift(r),t.forEach(r=>{const{table:t,as:e}=r;wc[t]=t,e&&(wc[e]=t),function(r){const t=vc(r);r.clear(),t.forEach(t=>r.add(t));}(pc);}),t},Wr=As("=",!1),Vr=function(r,t){return lc(r,t)},Kr=As("!",!1),qr=As(">=",!1),Zr=As(">",!1),zr=As("<=",!1),Jr=As("<>",!1),Qr=As("<",!1),rt=As("!=",!1),tt=As("@>",!1),et=As("<@",!1),nt=As("?",!1),ut=As("?|",!1),st=As("?&",!1),ot=As("#-",!1),at=As("+",!1),it=As("-",!1),ct=As("*",!1),lt=As("/",!1),ft=As("%",!1),bt=As("$",!1),vt=function(r){return !0===sc[r.toUpperCase()]},dt=As('"',!1),Lt=/^[^"]/,Ct=ys(['"'],!0,!1),pt=function(r){return r.join("")},wt=/^[^']/,Et=ys(["'"],!0,!1),ht=As("`",!1),At=/^[^`]/,yt=ys(["`"],!0,!1),Tt=/^[A-Za-z_]/,mt=ys([["A","Z"],["a","z"],"_"],!1,!1),St=/^[A-Za-z0-9_\-]/,It=ys([["A","Z"],["a","z"],["0","9"],"_","-"],!1,!1),Nt=/^[A-Za-z0-9_]/,Rt=ys([["A","Z"],["a","z"],["0","9"],"_"],!1,!1),_t=As(":",!1),Ot=As("OVER",!0),gt=As("CENTURY",!0),xt=As("DAY",!0),Ut=As("DECADE",!0),Mt=As("DOW",!0),Dt=As("DOY",!0),kt=As("EPOCH",!0),$t=As("HOUR",!0),Ft=As("ISODOW",!0),Pt=As("ISOYEAR",!0),Gt=As("MICROSECONDS",!0),Ht=As("MILLENNIUM",!0),jt=As("MILLISECONDS",!0),Yt=As("MINUTE",!0),Bt=As("MONTH",!0),Xt=As("QUARTER",!0),Wt=As("SECOND",!0),Vt=As("TIMEZONE",!0),Kt=As("TIMEZONE_HOUR",!0),qt=As("TIMEZONE_MINUTE",!0),Zt=As("WEEK",!0),zt=As("YEAR",!0),Jt=/^[^"\\\0-\x1F\x7F]/,Qt=ys(['"',"\\",["\0",""],""],!0,!1),re=/^[^'\\]/,te=ys(["'","\\"],!0,!1),ee=As("\\'",!1),ne=As('\\"',!1),ue=As("\\\\",!1),se=As("\\/",!1),oe=As("\\b",!1),ae=As("\\f",!1),ie=As("\\n",!1),ce=As("\\r",!1),le=As("\\t",!1),fe=As("\\u",!1),be=As("\\",!1),ve=/^[\n\r]/,de=ys(["\n","\r"],!1,!1),Le=As(".",!1),Ce=/^[0-9]/,pe=ys([["0","9"]],!1,!1),we=/^[0-9a-fA-F]/,Ee=ys([["0","9"],["a","f"],["A","F"]],!1,!1),he=/^[eE]/,Ae=ys(["e","E"],!1,!1),ye=/^[+\-]/,Te=ys(["+","-"],!1,!1),me=As("NULL",!0),Se=As("NOT NULL",!0),Ie=As("TRUE",!0),Ne=As("TO",!0),Re=As("FALSE",!0),_e=(As("DROP",!0)),Oe=As("USE",!0),ge=As("ALTER",!0),xe=As("SELECT",!0),Ue=As("CREATE",!0),Me=As("TEMPORARY",!0),De=As("IF NOT EXISTS",!0),ke=As("INSERT",!0),$e=As("RECURSIVE",!1),Fe=As("REPLACE",!0),Pe=As("RETURNING",!0),Ge=As("RENAME",!0),He=As("IGNORE",!0),je=(As("PARTITION",!0)),Ye=As("INTO",!0),Be=As("FROM",!0),Xe=As("AS",!0),We=As("TABLE",!0),Ve=As("TABLESPACE",!0),Ke=As("DATABASE",!0),qe=As("SCHEME",!0),Ze=As("LEFT",!0),ze=As("RIGHT",!0),Je=As("FULL",!0),Qe=As("INNER",!0),rn=As("JOIN",!0),tn=As("OUTER",!0),en=As("UNION",!0),nn=As("VALUES",!0),un=As("USING",!0),sn=As("WHERE",!0),on=As("GROUP",!0),an=As("BY",!0),cn=As("ORDER",!0),ln=As("HAVING",!0),fn=As("LIMIT",!0),bn=As("OFFSET",!0),vn=As("ASC",!0),dn=As("DESC",!0),Ln=As("ALL",!0),Cn=As("DISTINCT",!0),pn=As("BETWEEN",!0),wn=As("IS",!0),En=As("LIKE",!0),hn=As("EXISTS",!0),An=As("AND",!0),yn=As("OR",!0),Tn=As("COUNT",!0),mn=As("MAX",!0),Sn=As("MIN",!0),In=As("SUM",!0),Nn=As("AVG",!0),Rn=As("COLLECT",!0),_n=As("RANK",!0),On=As("DENSE_RANK",!0),gn=As("LISTAGG",!0),xn=As("ROW_NUMBER",!0),Un=(As("EXTRACT",!0)),Mn=As("CALL",!0),Dn=As("CASE",!0),kn=As("WHEN",!0),$n=As("THEN",!0),Fn=As("ELSE",!0),Pn=As("END",!0),Gn=As("CAST",!0),Hn=As("BOOL",!0),jn=As("BOOLEAN",!0),Yn=As("CHAR",!0),Bn=As("VARCHAR",!0),Xn=As("STRING",!0),Wn=As("NUMERIC",!0),Vn=As("DECIMAL",!0),Kn=As("SIGNED",!0),qn=As("UNSIGNED",!0),Zn=As("INT",!0),zn=As("ZEROFILL",!0),Jn=As("INTEGER",!0),Qn=As("JSON",!0),ru=As("JSONB",!0),tu=As("GEOMETRY",!0),eu=As("SMALLINT",!0),nu=As("TINYINT",!0),uu=As("TINYTEXT",!0),su=As("TEXT",!0),ou=As("MEDIUMTEXT",!0),au=As("LONGTEXT",!0),iu=As("BIGINT",!0),cu=As("FLOAT",!0),lu=As("DOUBLE",!0),fu=As("DATE",!0),bu=As("DATETIME",!0),vu=As("TIME",!0),du=As("TIMESTAMP",!0),Lu=As("TRUNCATE",!0),Cu=As("USER",!0),pu=As("UUID",!0),wu=As("ARRAY",!0),Eu=As("MAP",!0),hu=(As("CURRENT_DATE",!0)),Au=(As("INTERVAL",!0)),yu=As("CURRENT_TIME",!0),Tu=As("CURRENT_TIMESTAMP",!0),mu=As("CURRENT_USER",!0),Su=As("SESSION_USER",!0),Iu=As("SYSTEM_USER",!0),Nu=As("GLOBAL",!0),Ru=As("SESSION",!0),_u=As("LOCAL",!0),Ou=As("PERSIST",!0),gu=As("PERSIST_ONLY",!0),xu=As("@",!1),Uu=As("@@",!1),Mu=As("return",!0),Du=As(":=",!1),ku=As("::",!1),$u=As("DUAL",!0),Fu=As("ADD",!0),Pu=As("COLUMN",!0),Gu=As("INDEX",!0),Hu=As("FULLTEXT",!0),ju=As("SPATIAL",!0),Yu=As("COMMENT",!0),Bu=As("CONSTRAINT",!0),Xu=As("CONCURRENTLY",!0),Wu=As("REFERENCES",!0),Vu=As("SQL_CALC_FOUND_ROWS",!0),Ku=As("SQL_CACHE",!0),qu=As("SQL_NO_CACHE",!0),Zu=As("SQL_SMALL_RESULT",!0),zu=As("SQL_BIG_RESULT",!0),Ju=As("SQL_BUFFER_RESULT",!0),Qu=As(",",!1),rs=As("[",!1),ts=As("]",!1),es=As(";",!1),ns=As("->",!1),us=As("->>",!1),ss=As("#>",!1),os=As("#>>",!1),as=As("||",!1),is=As("&&",!1),cs=As("/*",!1),ls=As("*/",!1),fs=As("--",!1),bs=({type:"any"}),vs=/^[ \t\n\r]/,ds=ys([" ","\t","\n","\r"],!1,!1),Ls=function(r){return {dataType:r}},Cs=0,ps=[{line:1,column:1}],ws=0,Es=[],hs=0;if("startRule"in t){if(!(t.startRule in o))throw new Error("Can't start parsing from rule \""+t.startRule+'".');a=o[t.startRule];}function As(r,t){return {type:"literal",text:r,ignoreCase:t}}function ys(r,t,e){return {type:"class",parts:r,inverted:t,ignoreCase:e}}function Ts(t){var e,n=ps[t];if(n)return n;for(e=t-1;!ps[e];)e--;for(n={line:(n=ps[e]).line,column:n.column};e<t;)10===r.charCodeAt(e)?(n.line++,n.column=1):n.column++,e++;return ps[t]=n,n}function ms(r,t){var e=Ts(r),n=Ts(t);return {start:{offset:r,line:e.line,column:e.column},end:{offset:t,line:n.line,column:n.column}}}function Ss(r){Cs<ws||(Cs>ws&&(ws=Cs,Es=[]),Es.push(r));}function Is(r,t,e){return new u(u.buildMessage(r,t),r,t,e)}function Ns(){var r,t;return r=Cs,Pi()!==s?((t=function(){var r,t,e,n,u,o,a,i;if(r=Cs,(t=_s())!==s){if(e=[],n=Cs,(u=Pi())!==s&&(o=ki())!==s&&(a=Pi())!==s&&(i=_s())!==s?n=u=[u,o,a,i]:(Cs=n,n=s),n!==s)for(;n!==s;)e.push(n),n=Cs,(u=Pi())!==s&&(o=ki())!==s&&(a=Pi())!==s&&(i=_s())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);else e=s;e!==s?(t=function(r,t){const e=[r&&r.ast||r];for(let r=0;r<t.length;r++)t[r][3]&&0!==t[r][3].length&&e.push(t[r][3]&&t[r][3].ast||t[r][3]);return {tableList:Array.from(Cc),columnList:vc(pc),ast:e}}(t,e),r=t):(Cs=r,r=s);}else Cs=r,r=s;return r}())===s&&(t=Rs())===s&&(t=_s()),t!==s?(r=t):(Cs=r,r=s)):(Cs=r,r=s),r}function Rs(){var t;return (t=function(){var r,t,e,n,u,o;r=Cs,(t=Ca())!==s&&Pi()!==s&&(e=Oa())!==s&&Pi()!==s&&(n=ao())!==s?(a=t,i=e,(c=n)&&c.forEach(r=>Cc.add(`${a}::${r.db}::${r.table}`)),t={tableList:Array.from(Cc),columnList:vc(pc),ast:{type:a.toLowerCase(),keyword:i.toLowerCase(),name:c}},r=t):(Cs=r,r=s);var a,i,c;r===s&&(r=Cs,(t=Ca())!==s&&Pi()!==s&&(e=mi())!==s&&Pi()!==s&&(n=jo())!==s&&Pi()!==s&&ga()!==s&&Pi()!==s&&(u=fo())!==s&&Pi()!==s?((o=function(){var r,t,e,n,u,o;r=Cs,(t=$s())===s&&(t=Fs());if(t!==s){for(e=[],n=Cs,(u=Pi())!==s?((o=$s())===s&&(o=Fs()),o!==s?n=u=[u,o]:(Cs=n,n=s)):(Cs=n,n=s);n!==s;)e.push(n),n=Cs,(u=Pi())!==s?((o=$s())===s&&(o=Fs()),o!==s?n=u=[u,o]:(Cs=n,n=s)):(Cs=n,n=s);e!==s?(t=b(t,e),r=t):(Cs=r,r=s);}else Cs=r,r=s;return r}())===s&&(o=null),o!==s&&Pi()!==s?(t=function(r,t,e,n,u){return {tableList:Array.from(Cc),columnList:vc(pc),ast:{type:r.toLowerCase(),keyword:t.toLowerCase(),name:e,table:n,options:u}}}(t,e,n,u,o),r=t):(Cs=r,r=s)):(Cs=r,r=s));return r}())===s&&(t=function(){var t;(t=function(){var t,e,n,u,o,a,i,c,l,f;t=Cs,(e=wa())!==s&&Pi()!==s?((n=Ea())===s&&(n=null),n!==s&&Pi()!==s&&Oa()!==s&&Pi()!==s?((u=ha())===s&&(u=null),u!==s&&Pi()!==s&&(o=ao())!==s&&Pi()!==s&&(a=function(){var r,t,e,n,u,o,a,i,c;if(r=Cs,(t=xi())!==s)if(Pi()!==s)if((e=xs())!==s){for(n=[],u=Cs,(o=Pi())!==s&&(a=Oi())!==s&&(i=Pi())!==s&&(c=xs())!==s?u=o=[o,a,i,c]:(Cs=u,u=s);u!==s;)n.push(u),u=Cs,(o=Pi())!==s&&(a=Oi())!==s&&(i=Pi())!==s&&(c=xs())!==s?u=o=[o,a,i,c]:(Cs=u,u=s);n!==s&&(u=Pi())!==s&&(o=Ui())!==s?(t=cc(e,n),r=t):(Cs=r,r=s);}else Cs=r,r=s;else Cs=r,r=s;else Cs=r,r=s;return r}())!==s&&Pi()!==s?((i=function(){var r,t,e,n,u,o,a,i;if(r=Cs,(t=Ws())!==s){for(e=[],n=Cs,(u=Pi())!==s?((o=Oi())===s&&(o=null),o!==s&&(a=Pi())!==s&&(i=Ws())!==s?n=u=[u,o,a,i]:(Cs=n,n=s)):(Cs=n,n=s);n!==s;)e.push(n),n=Cs,(u=Pi())!==s?((o=Oi())===s&&(o=null),o!==s&&(a=Pi())!==s&&(i=Ws())!==s?n=u=[u,o,a,i]:(Cs=n,n=s)):(Cs=n,n=s);e!==s?(t=cc(t,e),r=t):(Cs=r,r=s);}else Cs=r,r=s;return r}())===s&&(i=null),i!==s&&Pi()!==s?((c=function(){var t,e,n,u;t=Cs,"ignore"===r.substr(Cs,6).toLowerCase()?(e=r.substr(Cs,6),Cs+=6):(e=s,0===hs&&Ss(He));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s);return t}())===s&&(c=Ta()),c===s&&(c=null),c!==s&&Pi()!==s?((l=_a())===s&&(l=null),l!==s&&Pi()!==s?((f=Os())===s&&(f=null),f!==s?(b=e,v=n,d=u,C=a,p=i,w=c,E=l,h=f,(L=o)&&L.forEach(r=>Cc.add(`create::${r.db}::${r.table}`)),e={tableList:Array.from(Cc),columnList:vc(pc),ast:{type:b[0].toLowerCase(),keyword:"table",temporary:v&&v[0].toLowerCase(),if_not_exists:d&&d[0].toLowerCase(),table:L,ignore_replace:w&&w[0].toLowerCase(),as:E&&E[0].toLowerCase(),query_expr:h&&h.ast,create_definitions:C,table_options:p}},t=e):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s);var b,v,d,L,C,p,w,E,h;t===s&&(t=Cs,(e=wa())!==s&&Pi()!==s?((n=Ea())===s&&(n=null),n!==s&&Pi()!==s&&Oa()!==s&&Pi()!==s?((u=ha())===s&&(u=null),u!==s&&Pi()!==s&&(o=ao())!==s&&Pi()!==s&&(a=function r(){var t,e;(t=function(){var r,t;r=Cs,Wa()!==s&&Pi()!==s&&(t=ao())!==s?(r={type:"like",table:t}):(Cs=r,r=s);return r}())===s&&(t=Cs,xi()!==s&&Pi()!==s&&(e=r())!==s&&Pi()!==s&&Ui()!==s?((n=e).parentheses=!0,t=n):(Cs=t,t=s));var n;return t}())!==s?(e=function(r,t,e,n,u){return n&&n.forEach(r=>Cc.add(`create::${r.db}::${r.table}`)),{tableList:Array.from(Cc),columnList:vc(pc),ast:{type:r[0].toLowerCase(),keyword:"table",temporary:t&&t[0].toLowerCase(),if_not_exists:e&&e[0].toLowerCase(),table:n,like:u}}}(e,n,u,o,a),t=e):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s));return t}())===s&&(t=function(){var t,e,n,u,o,a,i,c,l,f,b,v,d,L,C,p,w,E;t=Cs,(e=wa())!==s&&Pi()!==s?((n=Ri())===s&&(n=null),n!==s&&Pi()!==s?("trigger"===r.substr(Cs,7).toLowerCase()?(u=r.substr(Cs,7),Cs+=7):(u=s,0===hs&&Ss(K)),u!==s&&Pi()!==s&&(o=Wo())!==s&&Pi()!==s?("before"===r.substr(Cs,6).toLowerCase()?(a=r.substr(Cs,6),Cs+=6):(a=s,0===hs&&Ss(q)),a===s&&("after"===r.substr(Cs,5).toLowerCase()?(a=r.substr(Cs,5),Cs+=5):(a=s,0===hs&&Ss(Z)),a===s&&("instead of"===r.substr(Cs,10).toLowerCase()?(a=r.substr(Cs,10),Cs+=10):(a=s,0===hs&&Ss(z)))),a!==s&&Pi()!==s&&(i=function(){var r,t,e,n,u,o,a,i;if(r=Cs,(t=Bs())!==s){for(e=[],n=Cs,(u=Pi())!==s&&(o=Za())!==s&&(a=Pi())!==s&&(i=Bs())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);n!==s;)e.push(n),n=Cs,(u=Pi())!==s&&(o=Za())!==s&&(a=Pi())!==s&&(i=Bs())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);e!==s?(t=cc(t,e),r=t):(Cs=r,r=s);}else Cs=r,r=s;return r}())!==s&&Pi()!==s?("on"===r.substr(Cs,2).toLowerCase()?(c=r.substr(Cs,2),Cs+=2):(c=s,0===hs&&Ss(G)),c!==s&&Pi()!==s&&(l=fo())!==s&&Pi()!==s?(f=Cs,(b=Na())!==s&&(v=Pi())!==s&&(d=fo())!==s?f=b=[b,v,d]:(Cs=f,f=s),f===s&&(f=null),f!==s&&(b=Pi())!==s?((v=function(){var t,e,n,u,o;t=Cs,e=Cs,"not"===r.substr(Cs,3).toLowerCase()?(n=r.substr(Cs,3),Cs+=3):(n=s,0===hs&&Ss(tr));n===s&&(n=null);n!==s&&(u=Pi())!==s?("deferrable"===r.substr(Cs,10).toLowerCase()?(o=r.substr(Cs,10),Cs+=10):(o=s,0===hs&&Ss(er)),o!==s?e=n=[n,u,o]:(Cs=e,e=s)):(Cs=e,e=s);e!==s&&(n=Pi())!==s?("initially immediate"===r.substr(Cs,19).toLowerCase()?(u=r.substr(Cs,19),Cs+=19):(u=s,0===hs&&Ss(nr)),u===s&&("initially deferred"===r.substr(Cs,18).toLowerCase()?(u=r.substr(Cs,18),Cs+=18):(u=s,0===hs&&Ss(ur))),u!==s?(i=u,e={keyword:(a=e)&&a[0]?a[0].toLowerCase()+" deferrable":"deferrable",args:i&&i.toLowerCase()},t=e):(Cs=t,t=s)):(Cs=t,t=s);var a,i;return t}())===s&&(v=null),v!==s&&(d=Pi())!==s?((L=function(){var t,e,n,u;t=Cs,"for"===r.substr(Cs,3).toLowerCase()?(e=r.substr(Cs,3),Cs+=3):(e=s,0===hs&&Ss(sr));e!==s&&Pi()!==s?("each"===r.substr(Cs,4).toLowerCase()?(n=r.substr(Cs,4),Cs+=4):(n=s,0===hs&&Ss(or)),n===s&&(n=null),n!==s&&Pi()!==s?("row"===r.substr(Cs,3).toLowerCase()?(u=r.substr(Cs,3),Cs+=3):(u=s,0===hs&&Ss(ar)),u===s&&("statement"===r.substr(Cs,9).toLowerCase()?(u=r.substr(Cs,9),Cs+=9):(u=s,0===hs&&Ss(ir))),u!==s?(o=e,i=u,e={keyword:(a=n)?`${o.toLowerCase()} ${a.toLowerCase()}`:o.toLowerCase(),args:i.toLowerCase()},t=e):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s);var o,a,i;return t}())===s&&(L=null),L!==s&&Pi()!==s?((C=function(){var r,t;r=Cs,Ja()!==s&&Pi()!==s&&xi()!==s&&Pi()!==s&&(t=Oo())!==s&&Pi()!==s&&Ui()!==s?(r={type:"when",cond:t,parentheses:!0}):(Cs=r,r=s);return r}())===s&&(C=null),C!==s&&Pi()!==s?("execute"===r.substr(Cs,7).toLowerCase()?(p=r.substr(Cs,7),Cs+=7):(p=s,0===hs&&Ss(J)),p!==s&&Pi()!==s?("procedure"===r.substr(Cs,9).toLowerCase()?(w=r.substr(Cs,9),Cs+=9):(w=s,0===hs&&Ss(Q)),w!==s&&Pi()!==s&&(E=Qi())!==s?(h=n,A=u,T=i,m=l,S=f,I=v,N=L,R=C,_=E,e={type:"create",constraint:o,location:(y=a)&&y.toLowerCase(),events:T,table:m,from:S&&S[2],deferrable:I,for_each:N,when:R,execute:{keyword:"execute procedure",expr:_},constraint_type:A&&A.toLowerCase(),keyword:A&&A.toLowerCase(),constraint_kw:h&&h.toLowerCase(),resource:"constraint"},t=e):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s);var h,A,y,T,m,S,I,N,R,_;return t}())===s&&(t=function(){var t,e,n,u,o,a,f,b,v,d,L,C,p,w;t=Cs,(e=wa())!==s&&Pi()!==s?("extension"===r.substr(Cs,9).toLowerCase()?(n=r.substr(Cs,9),Cs+=9):(n=s,0===hs&&Ss(i)),n!==s&&Pi()!==s?((u=ha())===s&&(u=null),u!==s&&Pi()!==s?((o=Wo())===s&&(o=na()),o!==s&&Pi()!==s?((a=$a())===s&&(a=null),a!==s&&Pi()!==s?(f=Cs,"schema"===r.substr(Cs,6).toLowerCase()?(b=r.substr(Cs,6),Cs+=6):(b=s,0===hs&&Ss(c)),b!==s&&(v=Pi())!==s&&(d=Wo())!==s?f=b=[b,v,d]:(Cs=f,f=s),f===s&&(f=na()),f===s&&(f=null),f!==s&&(b=Pi())!==s?(v=Cs,"version"===r.substr(Cs,7).toLowerCase()?(d=r.substr(Cs,7),Cs+=7):(d=s,0===hs&&Ss(l)),d!==s&&(L=Pi())!==s?((C=Wo())===s&&(C=na()),C!==s?v=d=[d,L,C]:(Cs=v,v=s)):(Cs=v,v=s),v===s&&(v=null),v!==s&&(d=Pi())!==s?(L=Cs,(C=Na())!==s&&(p=Pi())!==s?((w=Wo())===s&&(w=na()),w!==s?L=C=[C,p,w]:(Cs=L,L=s)):(Cs=L,L=s),L===s&&(L=null),L!==s?(e=function(r,t,e,n,u,s,o,a){return {type:"create",keyword:t.toLowerCase(),if_not_exists:e&&e[0].toLowerCase(),extension:dc(n),with:u&&u[0].toLowerCase(),schema:dc(s&&s[2].toLowerCase()),version:dc(o&&o[2]),from:dc(a&&a[2])}}(0,n,u,o,a,f,v,L),t=e):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s);return t}())===s&&(t=function(){var t,e,n,u,o,a,i,c,l,f,b,v,d,L,C,p,w,E;t=Cs,(e=wa())!==s&&Pi()!==s?((n=Ii())===s&&(n=null),n!==s&&Pi()!==s&&(u=mi())!==s&&Pi()!==s?((o=function(){var t,e,n,u;t=Cs,"concurrently"===r.substr(Cs,12).toLowerCase()?(e=r.substr(Cs,12),Cs+=12):(e=s,0===hs&&Ss(Xu));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="CONCURRENTLY"):(Cs=t,t=s)):(Cs=t,t=s);return t}())===s&&(o=null),o!==s&&Pi()!==s?((a=Yo())===s&&(a=null),a!==s&&Pi()!==s&&(i=ga())!==s&&Pi()!==s&&(c=fo())!==s&&Pi()!==s?((l=uo())===s&&(l=null),l!==s&&Pi()!==s&&xi()!==s&&Pi()!==s&&(f=function(){var r,t,e,n,u,o,a,i;if(r=Cs,(t=gs())!==s){for(e=[],n=Cs,(u=Pi())!==s&&(o=Oi())!==s&&(a=Pi())!==s&&(i=gs())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);n!==s;)e.push(n),n=Cs,(u=Pi())!==s&&(o=Oi())!==s&&(a=Pi())!==s&&(i=gs())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);e!==s?(t=cc(t,e),r=t):(Cs=r,r=s);}else Cs=r,r=s;return r}())!==s&&Pi()!==s&&Ui()!==s&&Pi()!==s?(b=Cs,(v=$a())!==s&&(d=Pi())!==s&&(L=xi())!==s&&(C=Pi())!==s&&(p=function(){var r,t,e,n,u,o,a,i;if(r=Cs,(t=oo())!==s){for(e=[],n=Cs,(u=Pi())!==s&&(o=Oi())!==s&&(a=Pi())!==s&&(i=oo())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);n!==s;)e.push(n),n=Cs,(u=Pi())!==s&&(o=Oi())!==s&&(a=Pi())!==s&&(i=oo())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);e!==s?(t=cc(t,e),r=t):(Cs=r,r=s);}else Cs=r,r=s;return r}())!==s&&(w=Pi())!==s&&(E=Ui())!==s?b=v=[v,d,L,C,p,w,E]:(Cs=b,b=s),b===s&&(b=null),b!==s&&(v=Pi())!==s?(d=Cs,(L=function(){var t,e,n,u;t=Cs,"tablespace"===r.substr(Cs,10).toLowerCase()?(e=r.substr(Cs,10),Cs+=10):(e=s,0===hs&&Ss(Ve));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="TABLESPACE"):(Cs=t,t=s)):(Cs=t,t=s);return t}())!==s&&(C=Pi())!==s&&(p=Wo())!==s?d=L=[L,C,p]:(Cs=d,d=s),d===s&&(d=null),d!==s&&(L=Pi())!==s?((C=vo())===s&&(C=null),C!==s&&(p=Pi())!==s?(h=e,A=n,y=u,T=o,m=a,S=i,I=c,N=l,R=f,_=b,O=d,g=C,e={tableList:Array.from(Cc),columnList:vc(pc),ast:{type:h[0].toLowerCase(),index_type:A&&A.toLowerCase(),keyword:y.toLowerCase(),concurrently:T&&T.toLowerCase(),index:m,on_kw:S[0].toLowerCase(),table:I,index_using:N,index_columns:R,with:_&&_[4],with_before_where:!0,tablespace:O&&{type:"origin",value:O[2]},where:g}},t=e):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s);var h,A,y,T,m,S,I,N,R,_,O,g;return t}())===s&&(t=function(){var t,e,n,u,o,a;t=Cs,(e=wa())!==s&&Pi()!==s?((n=function(){var t,e,n,u;t=Cs,"database"===r.substr(Cs,8).toLowerCase()?(e=r.substr(Cs,8),Cs+=8):(e=s,0===hs&&Ss(Ke));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="DATABASE"):(Cs=t,t=s)):(Cs=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=Cs,"scheme"===r.substr(Cs,6).toLowerCase()?(e=r.substr(Cs,6),Cs+=6):(e=s,0===hs&&Ss(qe));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="SCHEME"):(Cs=t,t=s)):(Cs=t,t=s);return t}()),n!==s&&Pi()!==s?((u=ha())===s&&(u=null),u!==s&&Pi()!==s&&(o=Wo())!==s&&Pi()!==s?((a=function(){var r,t,e,n,u,o;if(r=Cs,(t=Xs())!==s){for(e=[],n=Cs,(u=Pi())!==s&&(o=Xs())!==s?n=u=[u,o]:(Cs=n,n=s);n!==s;)e.push(n),n=Cs,(u=Pi())!==s&&(o=Xs())!==s?n=u=[u,o]:(Cs=n,n=s);e!==s?(t=b(t,e),r=t):(Cs=r,r=s);}else Cs=r,r=s;return r}())===s&&(a=null),a!==s?(i=e,c=u,l=o,f=a,e={tableList:Array.from(Cc),columnList:vc(pc),ast:{type:i[0].toLowerCase(),keyword:"database",if_not_exists:c&&c[0].toLowerCase(),database:l,create_definitions:f}},t=e):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s);var i,c,l,f;return t}());return t}())===s&&(t=function(){var r,t,e,n;r=Cs,(t=Ci())!==s&&Pi()!==s?((e=Oa())===s&&(e=null),e!==s&&Pi()!==s&&(n=ao())!==s?(u=t,o=e,(a=n)&&a.forEach(r=>Cc.add(`${u}::${r.db}::${r.table}`)),t={tableList:Array.from(Cc),columnList:vc(pc),ast:{type:u.toLowerCase(),keyword:o&&o.toLowerCase()||"table",name:a}},r=t):(Cs=r,r=s)):(Cs=r,r=s);var u,o,a;return r}())===s&&(t=function(){var r,t,e;r=Cs,(t=ma())!==s&&Pi()!==s&&Oa()!==s&&Pi()!==s&&(e=function(){var r,t,e,n,u,o,a,i;if(r=Cs,(t=no())!==s){for(e=[],n=Cs,(u=Pi())!==s&&(o=Oi())!==s&&(a=Pi())!==s&&(i=no())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);n!==s;)e.push(n),n=Cs,(u=Pi())!==s&&(o=Oi())!==s&&(a=Pi())!==s&&(i=no())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);e!==s?(t=cc(t,e),r=t):(Cs=r,r=s);}else Cs=r,r=s;return r}())!==s?((n=e).forEach(r=>r.forEach(r=>r.table&&Cc.add(`rename::${r.db}::${r.table}`))),t={tableList:Array.from(Cc),columnList:vc(pc),ast:{type:"rename",table:n}},r=t):(Cs=r,r=s);var n;return r}())===s&&(t=function(){var t,e,n;t=Cs,(e=function(){var t,e,n,u;t=Cs,"call"===r.substr(Cs,4).toLowerCase()?(e=r.substr(Cs,4),Cs+=4):(e=s,0===hs&&Ss(Mn));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="CALL"):(Cs=t,t=s)):(Cs=t,t=s);return t}())!==s&&Pi()!==s&&(n=Qi())!==s?(u=n,e={tableList:Array.from(Cc),columnList:vc(pc),ast:{type:"call",expr:u}},t=e):(Cs=t,t=s);var u;return t}())===s&&(t=function(){var t,e,n;t=Cs,(e=function(){var t,e,n,u;t=Cs,"use"===r.substr(Cs,3).toLowerCase()?(e=r.substr(Cs,3),Cs+=3):(e=s,0===hs&&Ss(Oe));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s);return t}())!==s&&Pi()!==s&&(n=Yo())!==s?(u=n,Cc.add(`use::${u}::null`),e={tableList:Array.from(Cc),columnList:vc(pc),ast:{type:"use",db:u}},t=e):(Cs=t,t=s);var u;return t}())===s&&(t=function(){var t,e,n,u;t=Cs,(e=function(){var t,e,n,u;t=Cs,"alter"===r.substr(Cs,5).toLowerCase()?(e=r.substr(Cs,5),Cs+=5):(e=s,0===hs&&Ss(ge));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s);return t}())!==s&&Pi()!==s&&Oa()!==s&&Pi()!==s&&(n=ao())!==s&&Pi()!==s&&(u=function(){var r,t,e,n,u,o,a,i;if(r=Cs,(t=ks())!==s){for(e=[],n=Cs,(u=Pi())!==s&&(o=Oi())!==s&&(a=Pi())!==s&&(i=ks())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);n!==s;)e.push(n),n=Cs,(u=Pi())!==s&&(o=Oi())!==s&&(a=Pi())!==s&&(i=ks())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);e!==s?(t=cc(t,e),r=t):(Cs=r,r=s);}else Cs=r,r=s;return r}())!==s?(a=u,(o=n)&&o.length>0&&o.forEach(r=>Cc.add(`alter::${r.db}::${r.table}`)),e={tableList:Array.from(Cc),columnList:vc(pc),ast:{type:"alter",table:o,expr:a}},t=e):(Cs=t,t=s);var o,a;return t}())===s&&(t=function(){var t,e,n,u;t=Cs,(e=Ra())!==s&&Pi()!==s?((n=function(){var t,e,n,u;t=Cs,"global"===r.substr(Cs,6).toLowerCase()?(e=r.substr(Cs,6),Cs+=6):(e=s,0===hs&&Ss(Nu));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="GLOBAL"):(Cs=t,t=s)):(Cs=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=Cs,"session"===r.substr(Cs,7).toLowerCase()?(e=r.substr(Cs,7),Cs+=7):(e=s,0===hs&&Ss(Ru));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="SESSION"):(Cs=t,t=s)):(Cs=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=Cs,"local"===r.substr(Cs,5).toLowerCase()?(e=r.substr(Cs,5),Cs+=5):(e=s,0===hs&&Ss(_u));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="LOCAL"):(Cs=t,t=s)):(Cs=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=Cs,"persist"===r.substr(Cs,7).toLowerCase()?(e=r.substr(Cs,7),Cs+=7):(e=s,0===hs&&Ss(Ou));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="PERSIST"):(Cs=t,t=s)):(Cs=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=Cs,"persist_only"===r.substr(Cs,12).toLowerCase()?(e=r.substr(Cs,12),Cs+=12):(e=s,0===hs&&Ss(gu));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="PERSIST_ONLY"):(Cs=t,t=s)):(Cs=t,t=s);return t}()),n===s&&(n=null),n!==s&&Pi()!==s&&(u=Vi())!==s?(o=n,(a=u).keyword=o,e={tableList:Array.from(Cc),columnList:vc(pc),ast:{type:"set",expr:a}},t=e):(Cs=t,t=s)):(Cs=t,t=s);var o,a;return t}())===s&&(t=function(){var t,e,n,u,o,a;t=Cs,(e=function(){var t,e,n,u;t=Cs,"lock"===r.substr(Cs,4).toLowerCase()?(e=r.substr(Cs,4),Cs+=4):(e=s,0===hs&&Ss(g));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s);return t}())!==s&&Pi()!==s?((n=Oa())===s&&(n=null),n!==s&&Pi()!==s&&(u=ao())!==s&&Pi()!==s?((o=function(){var t,e,n,u;t=Cs,"in"===r.substr(Cs,2).toLowerCase()?(e=r.substr(Cs,2),Cs+=2):(e=s,0===hs&&Ss(mr));e!==s&&Pi()!==s?("access share"===r.substr(Cs,12).toLowerCase()?(n=r.substr(Cs,12),Cs+=12):(n=s,0===hs&&Ss(Sr)),n===s&&("row share"===r.substr(Cs,9).toLowerCase()?(n=r.substr(Cs,9),Cs+=9):(n=s,0===hs&&Ss(Ir)),n===s&&("row exclusive"===r.substr(Cs,13).toLowerCase()?(n=r.substr(Cs,13),Cs+=13):(n=s,0===hs&&Ss(Nr)),n===s&&("share update exclusive"===r.substr(Cs,22).toLowerCase()?(n=r.substr(Cs,22),Cs+=22):(n=s,0===hs&&Ss(Rr)),n===s&&("share row exclusive"===r.substr(Cs,19).toLowerCase()?(n=r.substr(Cs,19),Cs+=19):(n=s,0===hs&&Ss(_r)),n===s&&("exclusive"===r.substr(Cs,9).toLowerCase()?(n=r.substr(Cs,9),Cs+=9):(n=s,0===hs&&Ss(M)),n===s&&("access exclusive"===r.substr(Cs,16).toLowerCase()?(n=r.substr(Cs,16),Cs+=16):(n=s,0===hs&&Ss(Or)),n===s&&("share"===r.substr(Cs,5).toLowerCase()?(n=r.substr(Cs,5),Cs+=5):(n=s,0===hs&&Ss(gr))))))))),n!==s&&Pi()!==s?("mode"===r.substr(Cs,4).toLowerCase()?(u=r.substr(Cs,4),Cs+=4):(u=s,0===hs&&Ss(xr)),u!==s?(e={mode:`in ${n.toLowerCase()} mode`},t=e):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s);return t}())===s&&(o=null),o!==s&&Pi()!==s?("nowait"===r.substr(Cs,6).toLowerCase()?(a=r.substr(Cs,6),Cs+=6):(a=s,0===hs&&Ss(Ur)),a===s&&(a=null),a!==s?(i=n,l=o,f=a,(c=u)&&c.forEach(r=>Cc.add(`lock::${r.db}::${r.table}`)),e={tableList:Array.from(Cc),columnList:vc(pc),ast:{type:"lock",keyword:i&&i.toLowerCase(),tables:c.map(r=>({table:r})),lock_mode:l,nowait:f}},t=e):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s);var i,c,l,f;return t}()),t}function _s(){var r;return (r=Os())===s&&(r=function(){var r,t,e,n,u,o;r=Cs,(t=pa())!==s&&Pi()!==s&&(e=ao())!==s&&Pi()!==s&&Ra()!==s&&Pi()!==s&&(n=function(){var r,t,e,n,u,o,a,i;if(r=Cs,(t=ho())!==s){for(e=[],n=Cs,(u=Pi())!==s&&(o=Oi())!==s&&(a=Pi())!==s&&(i=ho())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);n!==s;)e.push(n),n=Cs,(u=Pi())!==s&&(o=Oi())!==s&&(a=Pi())!==s&&(i=ho())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);e!==s?(t=cc(t,e),r=t):(Cs=r,r=s);}else Cs=r,r=s;return r}())!==s&&Pi()!==s?((u=vo())===s&&(u=null),u!==s&&Pi()!==s?((o=Ao())===s&&(o=null),o!==s?(i=n,c=u,l=o,(a=e)&&a.forEach(r=>{const{db:t,as:e,table:n}=r;Cc.add(`update::${t}::${n}`);}),i&&i.forEach(r=>pc.add(`update::${r.table}::${r.column}`)),t={tableList:Array.from(Cc),columnList:vc(pc),ast:{type:"update",table:a,set:i,where:c,returning:l}},r=t):(Cs=r,r=s)):(Cs=r,r=s)):(Cs=r,r=s);var a,i,c,l;return r}())===s&&(r=function(){var r,t,e,n,u,o,a,i;r=Cs,(t=mo())!==s&&Pi()!==s?((e=Ia())===s&&(e=null),e!==s&&Pi()!==s&&(n=fo())!==s&&Pi()!==s?((u=To())===s&&(u=null),u!==s&&Pi()!==s&&xi()!==s&&Pi()!==s&&(o=function(){var r,t,e,n,u,o,a,i;if(r=Cs,(t=Xo())!==s){for(e=[],n=Cs,(u=Pi())!==s&&(o=Oi())!==s&&(a=Pi())!==s&&(i=Xo())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);n!==s;)e.push(n),n=Cs,(u=Pi())!==s&&(o=Oi())!==s&&(a=Pi())!==s&&(i=Xo())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);e!==s?(t=kr(t,e),r=t):(Cs=r,r=s);}else Cs=r,r=s;return r}())!==s&&Pi()!==s&&Ui()!==s&&Pi()!==s&&(a=yo())!==s&&Pi()!==s?((i=Ao())===s&&(i=null),i!==s?(t=function(r,t,e,n,u,s){if(t&&(Cc.add(`insert::${t.db}::${t.table}`),t.as=null),n){let r=t&&t.table||null;Array.isArray(u)&&u.forEach((r,t)=>{if(r.value.length!=n.length)throw new Error("Error: column count doesn't match value count at row "+(t+1))}),n.forEach(t=>pc.add(`insert::${r}::${t}`));}return {tableList:Array.from(Cc),columnList:vc(pc),ast:{type:r,table:[t],columns:n,values:u,partition:e,returning:s}}}(t,n,u,o,a,i),r=t):(Cs=r,r=s)):(Cs=r,r=s)):(Cs=r,r=s)):(Cs=r,r=s);return r}())===s&&(r=function(){var r,t,e,n,u,o;r=Cs,(t=mo())!==s&&Pi()!==s&&Ia()!==s&&Pi()!==s&&(e=fo())!==s&&Pi()!==s?((n=To())===s&&(n=null),n!==s&&Pi()!==s&&(u=yo())!==s&&Pi()!==s?((o=Ao())===s&&(o=null),o!==s?(a=t,c=n,l=u,f=o,(i=e)&&(Cc.add(`insert::${i.db}::${i.table}`),pc.add(`insert::${i.table}::(.*)`),i.as=null),t={tableList:Array.from(Cc),columnList:vc(pc),ast:{type:a,table:[i],columns:null,values:l,partition:c,returning:f}},r=t):(Cs=r,r=s)):(Cs=r,r=s)):(Cs=r,r=s);var a,i,c,l,f;return r}())===s&&(r=function(){var r,t,e,n,u;r=Cs,(t=Aa())!==s&&Pi()!==s?((e=ao())===s&&(e=null),e!==s&&Pi()!==s&&(n=eo())!==s&&Pi()!==s?((u=vo())===s&&(u=null),u!==s?(t=function(r,t,e){if(t&&t.forEach(r=>{r.table&&Cc.add(`delete::${r.db}::${r.table}`),pc.add(`delete::${r.table}::(.*)`);}),null===r&&1===t.length){const e=t[0];r=[{db:e.db,table:e.table,as:e.as,addition:!0}];}return {tableList:Array.from(Cc),columnList:vc(pc),ast:{type:"delete",table:r,from:t,where:e}}}(e,n,u),r=t):(Cs=r,r=s)):(Cs=r,r=s)):(Cs=r,r=s);return r}())===s&&(r=Rs())===s&&(r=function(){var r,t;r=[],t=Wi();for(;t!==s;)r.push(t),t=Wi();return r}()),r}function Os(){var r,t,e,n,u,o,a,i,c,l;if(r=Cs,(t=Vs())!==s){for(e=[],n=Cs,(u=Pi())!==s&&(o=Ma())!==s&&(a=Pi())!==s?((i=Ha())===s&&(i=null),i!==s&&(c=Pi())!==s&&(l=Vs())!==s?n=u=[u,o,a,i,c,l]:(Cs=n,n=s)):(Cs=n,n=s);n!==s;)e.push(n),n=Cs,(u=Pi())!==s&&(o=Ma())!==s&&(a=Pi())!==s?((i=Ha())===s&&(i=null),i!==s&&(c=Pi())!==s&&(l=Vs())!==s?n=u=[u,o,a,i,c,l]:(Cs=n,n=s)):(Cs=n,n=s);e!==s&&(n=Pi())!==s?((u=Co())===s&&(u=null),u!==s&&(o=Pi())!==s?((a=Eo())===s&&(a=null),a!==s?(r=t=function(r,t,e,n){let u=r;for(let r=0;r<t.length;r++)u._next=t[r][5],u.union=t[r][3]?"union all":"union",u=u._next;return e&&(r._orderby=e),n&&(r._limit=n),{tableList:Array.from(Cc),columnList:vc(pc),ast:r}}(t,e,u,a)):(Cs=r,r=s)):(Cs=r,r=s)):(Cs=r,r=s);}else Cs=r,r=s;return r}function gs(){var t,e,n,u,o,a,i,c,l,f,b;return t=Cs,(e=Oo())!==s&&Pi()!==s?((n=Ms())===s&&(n=null),n!==s&&Pi()!==s?((u=Yo())===s&&(u=null),u!==s&&Pi()!==s?((o=Pa())===s&&(o=Ga()),o===s&&(o=null),o!==s&&Pi()!==s?(a=Cs,"nulls"===r.substr(Cs,5).toLowerCase()?(i=r.substr(Cs,5),Cs+=5):(i=s,0===hs&&Ss(v)),i!==s&&(c=Pi())!==s?("first"===r.substr(Cs,5).toLowerCase()?(l=r.substr(Cs,5),Cs+=5):(l=s,0===hs&&Ss(d)),l===s&&("last"===r.substr(Cs,4).toLowerCase()?(l=r.substr(Cs,4),Cs+=4):(l=s,0===hs&&Ss(L))),l!==s?a=i=[i,c,l]:(Cs=a,a=s)):(Cs=a,a=s),a===s&&(a=null),a!==s?(b=a,t=e={column:e,collate:n,opclass:u,order:(f=o)&&f.toLowerCase()||"asc",nulls:b&&`${b[0].toLowerCase()} ${b[2].toLowerCase()}`}):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s),t}function xs(){var t;return (t=Us())===s&&(t=Ps())===s&&(t=Gs())===s&&(t=function(){var t;(t=function(){var t,e,n,u,o,a;t=Cs,(e=Hs())===s&&(e=null);e!==s&&Pi()!==s?("primary key"===r.substr(Cs,11).toLowerCase()?(n=r.substr(Cs,11),Cs+=11):(n=s,0===hs&&Ss(D)),n!==s&&Pi()!==s?((u=uo())===s&&(u=null),u!==s&&Pi()!==s&&(o=Zs())!==s&&Pi()!==s?((a=so())===s&&(a=null),a!==s?(c=n,l=u,f=o,b=a,e={constraint:(i=e)&&i.constraint,definition:f,constraint_type:c.toLowerCase(),keyword:i&&i.keyword,index_type:l,resource:"constraint",index_options:b},t=e):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s);var i,c,l,f,b;return t}())===s&&(t=function(){var r,t,e,n,u,o,a,i;r=Cs,(t=Hs())===s&&(t=null);t!==s&&Pi()!==s&&(e=Ii())!==s&&Pi()!==s?((n=mi())===s&&(n=Si()),n===s&&(n=null),n!==s&&Pi()!==s?((u=Xo())===s&&(u=null),u!==s&&Pi()!==s?((o=uo())===s&&(o=null),o!==s&&Pi()!==s&&(a=Zs())!==s&&Pi()!==s?((i=so())===s&&(i=null),i!==s?(l=e,f=n,b=u,v=o,d=a,L=i,t={constraint:(c=t)&&c.constraint,definition:d,constraint_type:f&&`${l.toLowerCase()} ${f.toLowerCase()}`||l.toLowerCase(),keyword:c&&c.keyword,index_type:v,index:b,resource:"constraint",index_options:L},r=t):(Cs=r,r=s)):(Cs=r,r=s)):(Cs=r,r=s)):(Cs=r,r=s)):(Cs=r,r=s);var c,l,f,b,v,d,L;return r}())===s&&(t=function(){var t,e,n,u,o,a;t=Cs,(e=Hs())===s&&(e=null);e!==s&&Pi()!==s?("foreign key"===r.substr(Cs,11).toLowerCase()?(n=r.substr(Cs,11),Cs+=11):(n=s,0===hs&&Ss(k)),n!==s&&Pi()!==s?((u=Xo())===s&&(u=null),u!==s&&Pi()!==s&&(o=Zs())!==s&&Pi()!==s?((a=js())===s&&(a=null),a!==s?(c=n,l=u,f=o,b=a,e={constraint:(i=e)&&i.constraint,definition:f,constraint_type:c,keyword:i&&i.keyword,index:l,resource:"constraint",reference_definition:b},t=e):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s);var i,c,l,f,b;return t}());return t}()),t}function Us(){var t,e,n,u,o,a,i,c,l,f,b,v,d,L,N,R,_,O,g,x,U,M,D;return t=Cs,(e=jo())!==s&&Pi()!==s&&(n=nc())!==s&&Pi()!==s?((u=function(){var r,t,e;r=Cs,(t=ea())===s&&(t=ta());t!==s&&Pi()!==s?((e=Ds())===s&&(e=null),e!==s?(u=e,(n=t)&&!n.value&&(n.value="null"),r=t={default_val:u,nullable:n}):(Cs=r,r=s)):(Cs=r,r=s);var n,u;r===s&&(r=Cs,(t=Ds())!==s&&Pi()!==s?((e=ea())===s&&(e=ta()),e===s&&(e=null),e!==s?(t=function(r,t){return t&&!t.value&&(t.value="null"),{default_val:r,nullable:t}}(t,e),r=t):(Cs=r,r=s)):(Cs=r,r=s));return r}())===s&&(u=null),u!==s&&Pi()!==s?("auto_increment"===r.substr(Cs,14).toLowerCase()?(o=r.substr(Cs,14),Cs+=14):(o=s,0===hs&&Ss(C)),o===s&&(o=null),o!==s&&Pi()!==s?("unique"===r.substr(Cs,6).toLowerCase()?(a=r.substr(Cs,6),Cs+=6):(a=s,0===hs&&Ss(p)),a===s&&(a=Cs,"primary"===r.substr(Cs,7).toLowerCase()?(i=r.substr(Cs,7),Cs+=7):(i=s,0===hs&&Ss(w)),i!==s&&(c=Pi())!==s?("key"===r.substr(Cs,3).toLowerCase()?(l=r.substr(Cs,3),Cs+=3):(l=s,0===hs&&Ss(E)),l!==s?a=i=[i,c,l]:(Cs=a,a=s)):(Cs=a,a=s)),a===s&&(a=null),a!==s&&(i=Pi())!==s?((c=ji())===s&&(c=null),c!==s&&(l=Pi())!==s?((f=Ms())===s&&(f=null),f!==s&&Pi()!==s?((b=function(){var t,e,n;t=Cs,"column_format"===r.substr(Cs,13).toLowerCase()?(e=r.substr(Cs,13),Cs+=13):(e=s,0===hs&&Ss(h));e!==s&&Pi()!==s?("fixed"===r.substr(Cs,5).toLowerCase()?(n=r.substr(Cs,5),Cs+=5):(n=s,0===hs&&Ss(A)),n===s&&("dynamic"===r.substr(Cs,7).toLowerCase()?(n=r.substr(Cs,7),Cs+=7):(n=s,0===hs&&Ss(y)),n===s&&("default"===r.substr(Cs,7).toLowerCase()?(n=r.substr(Cs,7),Cs+=7):(n=s,0===hs&&Ss(T)))),n!==s?(e=function(r,t){return {type:"column_format",value:t.toLowerCase()}}(0,n),t=e):(Cs=t,t=s)):(Cs=t,t=s);return t}())===s&&(b=null),b!==s&&Pi()!==s?((v=function(){var t,e,n;t=Cs,"storage"===r.substr(Cs,7).toLowerCase()?(e=r.substr(Cs,7),Cs+=7):(e=s,0===hs&&Ss(m));e!==s&&Pi()!==s?("disk"===r.substr(Cs,4).toLowerCase()?(n=r.substr(Cs,4),Cs+=4):(n=s,0===hs&&Ss(S)),n===s&&("memory"===r.substr(Cs,6).toLowerCase()?(n=r.substr(Cs,6),Cs+=6):(n=s,0===hs&&Ss(I))),n!==s?(e={type:"storage",value:n.toLowerCase()},t=e):(Cs=t,t=s)):(Cs=t,t=s);return t}())===s&&(v=null),v!==s&&Pi()!==s?((d=js())===s&&(d=null),d!==s?(L=e,N=n,R=u,_=o,O=a,g=c,x=f,U=b,M=v,D=d,pc.add(`create::${L.table}::${L.column}`),t=e={column:L,definition:N,nullable:R&&R.nullable,default_val:R&&R.default_val,auto_increment:_&&_.toLowerCase(),unique_or_primary:Array.isArray(O)?`${O[0].toLowerCase()} ${O[2].toLowerCase()}`:O,comment:g,collate:x,column_format:U,storage:M,reference_definition:D,resource:"column"}):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s),t}function Ms(){var t,e;return t=Cs,function(){var t,e,n,u;t=Cs,"collate"===r.substr(Cs,7).toLowerCase()?(e=r.substr(Cs,7),Cs+=7):(e=s,0===hs&&Ss(br));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="COLLATE"):(Cs=t,t=s)):(Cs=t,t=s);return t}()!==s&&Pi()!==s&&(e=Yo())!==s?(t={type:"collate",value:e}):(Cs=t,t=s),t}function Ds(){var r,t;return r=Cs,da()!==s&&Pi()!==s?((t=ra())===s&&(t=Oo()),t!==s?(r={type:"default",value:t}):(Cs=r,r=s)):(Cs=r,r=s),r}function ks(){var r;return (r=function(){var r,t,e,n;r=Cs,(t=yi())!==s&&Pi()!==s?((e=Ti())===s&&(e=null),e!==s&&Pi()!==s&&(n=Us())!==s?(u=e,o=n,t={action:"add",...o,keyword:u,resource:"column",type:"alter"},r=t):(Cs=r,r=s)):(Cs=r,r=s);var u,o;return r}())===s&&(r=function(){var r,t,e;r=Cs,Ca()!==s&&Pi()!==s?((t=Ti())===s&&(t=null),t!==s&&Pi()!==s&&(e=jo())!==s?(r={action:"drop",column:e,keyword:t,resource:"column",type:"alter"}):(Cs=r,r=s)):(Cs=r,r=s);return r}())===s&&(r=function(){var r,t,e;r=Cs,(t=yi())!==s&&Pi()!==s&&(e=Ps())!==s?(n=e,t={action:"add",type:"alter",...n},r=t):(Cs=r,r=s);var n;return r}())===s&&(r=function(){var r,t,e;r=Cs,(t=yi())!==s&&Pi()!==s&&(e=Gs())!==s?(n=e,t={action:"add",type:"alter",...n},r=t):(Cs=r,r=s);var n;return r}())===s&&(r=function(){var r,t,e,n;r=Cs,(t=ma())!==s&&Pi()!==s?((e=La())===s&&(e=_a()),e===s&&(e=null),e!==s&&Pi()!==s&&(n=Yo())!==s?(o=n,t={action:"rename",type:"alter",resource:"table",keyword:(u=e)&&u[0].toLowerCase(),table:o},r=t):(Cs=r,r=s)):(Cs=r,r=s);var u,o;return r}())===s&&(r=$s())===s&&(r=Fs()),r}function $s(){var t,e,n,u;return t=Cs,"algorithm"===r.substr(Cs,9).toLowerCase()?(e=r.substr(Cs,9),Cs+=9):(e=s,0===hs&&Ss(N)),e!==s&&Pi()!==s?((n=Ai())===s&&(n=null),n!==s&&Pi()!==s?("default"===r.substr(Cs,7).toLowerCase()?(u=r.substr(Cs,7),Cs+=7):(u=s,0===hs&&Ss(T)),u===s&&("instant"===r.substr(Cs,7).toLowerCase()?(u=r.substr(Cs,7),Cs+=7):(u=s,0===hs&&Ss(R)),u===s&&("inplace"===r.substr(Cs,7).toLowerCase()?(u=r.substr(Cs,7),Cs+=7):(u=s,0===hs&&Ss(_)),u===s&&("copy"===r.substr(Cs,4).toLowerCase()?(u=r.substr(Cs,4),Cs+=4):(u=s,0===hs&&Ss(O))))),u!==s?(t=e={type:"alter",keyword:"algorithm",resource:"algorithm",symbol:n,algorithm:u}):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s),t}function Fs(){var t,e,n,u;return t=Cs,"lock"===r.substr(Cs,4).toLowerCase()?(e=r.substr(Cs,4),Cs+=4):(e=s,0===hs&&Ss(g)),e!==s&&Pi()!==s?((n=Ai())===s&&(n=null),n!==s&&Pi()!==s?("default"===r.substr(Cs,7).toLowerCase()?(u=r.substr(Cs,7),Cs+=7):(u=s,0===hs&&Ss(T)),u===s&&("none"===r.substr(Cs,4).toLowerCase()?(u=r.substr(Cs,4),Cs+=4):(u=s,0===hs&&Ss(x)),u===s&&("shared"===r.substr(Cs,6).toLowerCase()?(u=r.substr(Cs,6),Cs+=6):(u=s,0===hs&&Ss(U)),u===s&&("exclusive"===r.substr(Cs,9).toLowerCase()?(u=r.substr(Cs,9),Cs+=9):(u=s,0===hs&&Ss(M))))),u!==s?(t=e={type:"alter",keyword:"lock",resource:"lock",symbol:n,lock:u}):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s),t}function Ps(){var r,t,e,n,u,o,a,i;return r=Cs,(t=mi())===s&&(t=Si()),t!==s&&Pi()!==s?((e=Xo())===s&&(e=null),e!==s&&Pi()!==s?((n=uo())===s&&(n=null),n!==s&&Pi()!==s&&(u=Zs())!==s&&Pi()!==s?((o=so())===s&&(o=null),o!==s&&Pi()!==s?(a=n,i=o,r=t={index:e,definition:u,keyword:t.toLowerCase(),index_type:a,resource:"index",index_options:i}):(Cs=r,r=s)):(Cs=r,r=s)):(Cs=r,r=s)):(Cs=r,r=s),r}function Gs(){var t,e,n,u,o,a,i,c,l;return t=Cs,(e=function(){var t,e,n,u;t=Cs,"fulltext"===r.substr(Cs,8).toLowerCase()?(e=r.substr(Cs,8),Cs+=8):(e=s,0===hs&&Ss(Hu));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="FULLTEXT"):(Cs=t,t=s)):(Cs=t,t=s);return t}())===s&&(e=function(){var t,e,n,u;t=Cs,"spatial"===r.substr(Cs,7).toLowerCase()?(e=r.substr(Cs,7),Cs+=7):(e=s,0===hs&&Ss(ju));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="SPATIAL"):(Cs=t,t=s)):(Cs=t,t=s);return t}()),e!==s&&Pi()!==s?((n=mi())===s&&(n=Si()),n===s&&(n=null),n!==s&&Pi()!==s?((u=Xo())===s&&(u=null),u!==s&&Pi()!==s&&(o=Zs())!==s&&Pi()!==s?((a=so())===s&&(a=null),a!==s&&Pi()!==s?(i=e,l=a,t=e={index:u,definition:o,keyword:(c=n)&&`${i.toLowerCase()} ${c.toLowerCase()}`||i.toLowerCase(),index_options:l,resource:"index"}):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s),t}function Hs(){var r,t,e,n;return r=Cs,(t=Ri())!==s&&Pi()!==s?((e=Yo())===s&&(e=null),e!==s?(n=e,r=t={keyword:t.toLowerCase(),constraint:n}):(Cs=r,r=s)):(Cs=r,r=s),r}function js(){var t,e,n,u,o,a,i,c,l,f;return t=Cs,(e=function(){var t,e,n,u;t=Cs,"references"===r.substr(Cs,10).toLowerCase()?(e=r.substr(Cs,10),Cs+=10):(e=s,0===hs&&Ss(Wu));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="REFERENCES"):(Cs=t,t=s)):(Cs=t,t=s);return t}())!==s&&Pi()!==s&&(n=ao())!==s&&Pi()!==s&&(u=Zs())!==s&&Pi()!==s?("match full"===r.substr(Cs,10).toLowerCase()?(o=r.substr(Cs,10),Cs+=10):(o=s,0===hs&&Ss($)),o===s&&("match partial"===r.substr(Cs,13).toLowerCase()?(o=r.substr(Cs,13),Cs+=13):(o=s,0===hs&&Ss(F)),o===s&&("match simple"===r.substr(Cs,12).toLowerCase()?(o=r.substr(Cs,12),Cs+=12):(o=s,0===hs&&Ss(P)))),o===s&&(o=null),o!==s&&Pi()!==s?((a=Ys())===s&&(a=null),a!==s&&Pi()!==s?((i=Ys())===s&&(i=null),i!==s?(c=o,l=a,f=i,t=e={definition:u,table:n,keyword:e.toLowerCase(),match:c&&c.toLowerCase(),on_delete:l,on_update:f}):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s),t}function Ys(){var t,e,n,u,o,a;return t=Cs,"on"===r.substr(Cs,2).toLowerCase()?(e=r.substr(Cs,2),Cs+=2):(e=s,0===hs&&Ss(G)),e!==s&&Pi()!==s?("delete"===r.substr(Cs,6).toLowerCase()?(n=r.substr(Cs,6),Cs+=6):(n=s,0===hs&&Ss(H)),n===s&&("update"===r.substr(Cs,6).toLowerCase()?(n=r.substr(Cs,6),Cs+=6):(n=s,0===hs&&Ss(j))),n!==s&&Pi()!==s&&(u=function(){var e;"restrict"===r.substr(Cs,8).toLowerCase()?(e=r.substr(Cs,8),Cs+=8):(e=s,0===hs&&Ss(Y));e===s&&("cascade"===r.substr(Cs,7).toLowerCase()?(e=r.substr(Cs,7),Cs+=7):(e=s,0===hs&&Ss(B)),e===s&&("set null"===r.substr(Cs,8).toLowerCase()?(e=r.substr(Cs,8),Cs+=8):(e=s,0===hs&&Ss(X)),e===s&&("no action"===r.substr(Cs,9).toLowerCase()?(e=r.substr(Cs,9),Cs+=9):(e=s,0===hs&&Ss(W)),e===s&&("set default"===r.substr(Cs,11).toLowerCase()?(e=r.substr(Cs,11),Cs+=11):(e=s,0===hs&&Ss(V))))));e!==s&&(e=e.toLowerCase());return e}())!==s?(o=n,a=u,t=e={type:`${e.toLowerCase()} ${o.toLowerCase()}`,value:a}):(Cs=t,t=s)):(Cs=t,t=s),t}function Bs(){var t,e,n,u,o,a,i;return t=Cs,(e=ya())===s&&(e=Aa())===s&&(e=Ci()),e!==s&&(i=e,e={keyword:Array.isArray(i)?i[0].toLowerCase():i.toLowerCase()}),(t=e)===s&&(t=Cs,(e=pa())!==s&&Pi()!==s?(n=Cs,"of"===r.substr(Cs,2).toLowerCase()?(u=r.substr(Cs,2),Cs+=2):(u=s,0===hs&&Ss(rr)),u!==s&&(o=Pi())!==s&&(a=Lo())!==s?n=u=[u,o,a]:(Cs=n,n=s),n===s&&(n=null),n!==s?(t=e=function(r,t){return {keyword:r&&r[0]&&r[0].toLowerCase(),args:t&&{keyword:t[0],columns:t[2]}||null}}(e,n)):(Cs=t,t=s)):(Cs=t,t=s)),t}function Xs(){var t,e,n,u,o,a,i,c,l;return t=Cs,(e=da())===s&&(e=null),e!==s&&Pi()!==s?((n=function(){var t,e,n;return t=Cs,"character"===r.substr(Cs,9).toLowerCase()?(e=r.substr(Cs,9),Cs+=9):(e=s,0===hs&&Ss(cr)),e!==s&&Pi()!==s?("set"===r.substr(Cs,3).toLowerCase()?(n=r.substr(Cs,3),Cs+=3):(n=s,0===hs&&Ss(lr)),n!==s?(t=e="CHARACTER SET"):(Cs=t,t=s)):(Cs=t,t=s),t}())===s&&("charset"===r.substr(Cs,7).toLowerCase()?(n=r.substr(Cs,7),Cs+=7):(n=s,0===hs&&Ss(fr)),n===s&&("collate"===r.substr(Cs,7).toLowerCase()?(n=r.substr(Cs,7),Cs+=7):(n=s,0===hs&&Ss(br)))),n!==s&&Pi()!==s?((u=Ai())===s&&(u=null),u!==s&&Pi()!==s&&(o=Wo())!==s?(i=n,c=u,l=o,t=e={keyword:(a=e)&&`${a[0].toLowerCase()} ${i.toLowerCase()}`||i.toLowerCase(),symbol:c,value:l}):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s),t}function Ws(){var t,e,n,u,o,a,i,c,l;return t=Cs,"auto_increment"===r.substr(Cs,14).toLowerCase()?(e=r.substr(Cs,14),Cs+=14):(e=s,0===hs&&Ss(C)),e===s&&("avg_row_length"===r.substr(Cs,14).toLowerCase()?(e=r.substr(Cs,14),Cs+=14):(e=s,0===hs&&Ss(vr)),e===s&&("key_block_size"===r.substr(Cs,14).toLowerCase()?(e=r.substr(Cs,14),Cs+=14):(e=s,0===hs&&Ss(dr)),e===s&&("max_rows"===r.substr(Cs,8).toLowerCase()?(e=r.substr(Cs,8),Cs+=8):(e=s,0===hs&&Ss(Lr)),e===s&&("min_rows"===r.substr(Cs,8).toLowerCase()?(e=r.substr(Cs,8),Cs+=8):(e=s,0===hs&&Ss(Cr)),e===s&&("stats_sample_pages"===r.substr(Cs,18).toLowerCase()?(e=r.substr(Cs,18),Cs+=18):(e=s,0===hs&&Ss(pr))))))),e!==s&&Pi()!==s?((n=Ai())===s&&(n=null),n!==s&&Pi()!==s&&(u=aa())!==s?(c=n,l=u,t=e={keyword:e.toLowerCase(),symbol:c,value:l.value}):(Cs=t,t=s)):(Cs=t,t=s),t===s&&(t=Xs())===s&&(t=Cs,(e=Ni())===s&&("connection"===r.substr(Cs,10).toLowerCase()?(e=r.substr(Cs,10),Cs+=10):(e=s,0===hs&&Ss(wr))),e!==s&&Pi()!==s?((n=Ai())===s&&(n=null),n!==s&&Pi()!==s&&(u=na())!==s?(t=e=function(r,t,e){return {keyword:r.toLowerCase(),symbol:t,value:`'${e.value}'`}}(e,n,u)):(Cs=t,t=s)):(Cs=t,t=s),t===s&&(t=Cs,"compression"===r.substr(Cs,11).toLowerCase()?(e=r.substr(Cs,11),Cs+=11):(e=s,0===hs&&Ss(Er)),e!==s&&Pi()!==s?((n=Ai())===s&&(n=null),n!==s&&Pi()!==s?(u=Cs,39===r.charCodeAt(Cs)?(o="'",Cs++):(o=s,0===hs&&Ss(hr)),o!==s?("zlib"===r.substr(Cs,4).toLowerCase()?(a=r.substr(Cs,4),Cs+=4):(a=s,0===hs&&Ss(Ar)),a===s&&("lz4"===r.substr(Cs,3).toLowerCase()?(a=r.substr(Cs,3),Cs+=3):(a=s,0===hs&&Ss(yr)),a===s&&("none"===r.substr(Cs,4).toLowerCase()?(a=r.substr(Cs,4),Cs+=4):(a=s,0===hs&&Ss(x)))),a!==s?(39===r.charCodeAt(Cs)?(i="'",Cs++):(i=s,0===hs&&Ss(hr)),i!==s?u=o=[o,a,i]:(Cs=u,u=s)):(Cs=u,u=s)):(Cs=u,u=s),u!==s?(t=e=function(r,t,e){return {keyword:r.toLowerCase(),symbol:t,value:e.join("").toUpperCase()}}(e,n,u)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s),t===s&&(t=Cs,"engine"===r.substr(Cs,6).toLowerCase()?(e=r.substr(Cs,6),Cs+=6):(e=s,0===hs&&Ss(Tr)),e!==s&&Pi()!==s?((n=Ai())===s&&(n=null),n!==s&&Pi()!==s&&(u=Wo())!==s?(t=e=function(r,t,e){return {keyword:r.toLowerCase(),symbol:t,value:e.toUpperCase()}}(e,n,u)):(Cs=t,t=s)):(Cs=t,t=s)))),t}function Vs(){var t,e,n,u,o,a,i;return (t=zs())===s&&(t=Cs,e=Cs,40===r.charCodeAt(Cs)?(n="(",Cs++):(n=s,0===hs&&Ss(Mr)),n!==s&&(u=Pi())!==s&&(o=Vs())!==s&&(a=Pi())!==s?(41===r.charCodeAt(Cs)?(i=")",Cs++):(i=s,0===hs&&Ss(Dr)),i!==s?e=n=[n,u,o,a,i]:(Cs=e,e=s)):(Cs=e,e=s),e!==s&&(e={...e[2],parentheses_symbol:!0}),t=e),t}function Ks(){var t,e,n,u,o,a,i,c,l;if(t=Cs,$a()!==s)if(Pi()!==s)if((e=qs())!==s){for(n=[],u=Cs,(o=Pi())!==s&&(a=Oi())!==s&&(i=Pi())!==s&&(c=qs())!==s?u=o=[o,a,i,c]:(Cs=u,u=s);u!==s;)n.push(u),u=Cs,(o=Pi())!==s&&(a=Oi())!==s&&(i=Pi())!==s&&(c=qs())!==s?u=o=[o,a,i,c]:(Cs=u,u=s);n!==s?(t=cc(e,n)):(Cs=t,t=s);}else Cs=t,t=s;else Cs=t,t=s;else Cs=t,t=s;return t===s&&(t=Cs,Pi()!==s&&$a()!==s&&(e=Pi())!==s&&(n=function(){var t,e,n,u;t=Cs,"RECURSIVE"===r.substr(Cs,9)?(e="RECURSIVE",Cs+=9):(e=s,0===hs&&Ss($e));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s);return t}())!==s&&(u=Pi())!==s&&(o=qs())!==s?((l=o).recursive=!0,t=[l]):(Cs=t,t=s)),t}function qs(){var r,t,e,n,u;return r=Cs,(t=na())===s&&(t=Wo()),t!==s&&Pi()!==s?((e=Zs())===s&&(e=null),e!==s&&Pi()!==s&&_a()!==s&&Pi()!==s&&xi()!==s&&Pi()!==s&&(n=Os())!==s&&Pi()!==s&&Ui()!==s?("string"==typeof(u=t)&&(u={type:"default",value:u}),r=t={name:u,stmt:n,columns:e}):(Cs=r,r=s)):(Cs=r,r=s),r}function Zs(){var r,t,e,n,u,o,a,i;if(r=Cs,xi()!==s)if(Pi()!==s)if((t=Xo())!==s){for(e=[],n=Cs,(u=Pi())!==s&&(o=Oi())!==s&&(a=Pi())!==s&&(i=Xo())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);n!==s;)e.push(n),n=Cs,(u=Pi())!==s&&(o=Oi())!==s&&(a=Pi())!==s&&(i=Xo())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);e!==s&&(n=Pi())!==s&&(u=Ui())!==s?(r=kr(t,e)):(Cs=r,r=s);}else Cs=r,r=s;else Cs=r,r=s;else Cs=r,r=s;return r}function zs(){var t,e,n,u,o,a,i,c,l,f,b;return t=Cs,Pi()!==s?((e=Ks())===s&&(e=null),e!==s&&Pi()!==s&&function(){var t,e,n,u;t=Cs,"select"===r.substr(Cs,6).toLowerCase()?(e=r.substr(Cs,6),Cs+=6):(e=s,0===hs&&Ss(xe));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s);return t}()!==s&&Gi()!==s?((n=function(){var r,t,e,n,u,o;if(r=Cs,(t=Js())!==s){for(e=[],n=Cs,(u=Pi())!==s&&(o=Js())!==s?n=u=[u,o]:(Cs=n,n=s);n!==s;)e.push(n),n=Cs,(u=Pi())!==s&&(o=Js())!==s?n=u=[u,o]:(Cs=n,n=s);e!==s?(t=function(r,t){const e=[r];for(let r=0,n=t.length;r<n;++r)e.push(t[r][1]);return e}(t,e),r=t):(Cs=r,r=s);}else Cs=r,r=s;return r}())===s&&(n=null),n!==s&&Pi()!==s?((u=ja())===s&&(u=null),u!==s&&Pi()!==s&&(o=Qs())!==s&&Pi()!==s?((a=eo())===s&&(a=null),a!==s&&Pi()!==s?((i=vo())===s&&(i=null),i!==s&&Pi()!==s?((c=function(){var t,e,n;t=Cs,(e=function(){var t,e,n,u;t=Cs,"group"===r.substr(Cs,5).toLowerCase()?(e=r.substr(Cs,5),Cs+=5):(e=s,0===hs&&Ss(on));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s);return t}())!==s&&Pi()!==s&&Fa()!==s&&Pi()!==s&&(n=Io())!==s?(e=n.value,t=e):(Cs=t,t=s);return t}())===s&&(c=null),c!==s&&Pi()!==s?((l=function(){var t,e;t=Cs,function(){var t,e,n,u;t=Cs,"having"===r.substr(Cs,6).toLowerCase()?(e=r.substr(Cs,6),Cs+=6):(e=s,0===hs&&Ss(ln));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s);return t}()!==s&&Pi()!==s&&(e=Oo())!==s?(t=e):(Cs=t,t=s);return t}())===s&&(l=null),l!==s&&Pi()!==s?((f=Co())===s&&(f=null),f!==s&&Pi()!==s?((b=Eo())===s&&(b=null),b!==s?(t=function(r,t,e,n,u,s,o,a,i,c){return u&&u.forEach(r=>r.table&&Cc.add(`select::${r.db}::${r.table}`)),{with:r,type:"select",options:t,distinct:e,columns:n,from:u,where:s,groupby:o,having:a,orderby:i,limit:c}}(e,n,u,o,a,i,c,l,f,b)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s),t}function Js(){var e;return (e=function(){var t;"sql_calc_found_rows"===r.substr(Cs,19).toLowerCase()?(t=r.substr(Cs,19),Cs+=19):(t=s,0===hs&&Ss(Vu));return t}())===s&&((e=function(){var t;"sql_cache"===r.substr(Cs,9).toLowerCase()?(t=r.substr(Cs,9),Cs+=9):(t=s,0===hs&&Ss(Ku));return t}())===s&&(e=function(){var t;"sql_no_cache"===r.substr(Cs,12).toLowerCase()?(t=r.substr(Cs,12),Cs+=12):(t=s,0===hs&&Ss(qu));return t}()),e===s&&(e=function(){var t;"sql_big_result"===r.substr(Cs,14).toLowerCase()?(t=r.substr(Cs,14),Cs+=14):(t=s,0===hs&&Ss(zu));return t}())===s&&(e=function(){var t;"sql_small_result"===r.substr(Cs,16).toLowerCase()?(t=r.substr(Cs,16),Cs+=16):(t=s,0===hs&&Ss(Zu));return t}())===s&&(e=function(){var t;"sql_buffer_result"===r.substr(Cs,17).toLowerCase()?(t=r.substr(Cs,17),Cs+=17):(t=s,0===hs&&Ss(Ju));return t}())),e!==s&&(e=e),e}function Qs(){var r,t,e,n,u,o,a,i,c,l;if(r=Cs,(t=Ha())===s&&(t=Cs,(e=gi())!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s),t===s&&(t=gi())),t!==s){for(e=[],n=Cs,(u=Pi())!==s&&(o=Oi())!==s&&(a=Pi())!==s&&(i=ro())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);n!==s;)e.push(n),n=Cs,(u=Pi())!==s&&(o=Oi())!==s&&(a=Pi())!==s&&(i=ro())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);e!==s?(c=t,l=e,pc.add("select::null::(.*)"),r=t=l&&l.length>0?(c[0]={expr:{type:"column_ref",table:null,column:"*"},as:null},cc(c[0],l)):c[0]):(Cs=r,r=s);}else Cs=r,r=s;if(r===s)if(r=Cs,(t=ro())!==s){for(e=[],n=Cs,(u=Pi())!==s&&(o=Oi())!==s&&(a=Pi())!==s&&(i=ro())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);n!==s;)e.push(n),n=Cs,(u=Pi())!==s&&(o=Oi())!==s&&(a=Pi())!==s&&(i=ro())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);e!==s?(r=t=function(r,t){return cc(r,t)}(t,e)):(Cs=r,r=s);}else Cs=r,r=s;return r}function ro(){var r,t,e,n;return r=Cs,(t=Oo())!==s&&hi()!==s&&(e=nc())!==s?(r=t={type:"cast",expr:t,symbol:"::",target:e}):(Cs=r,r=s),r===s&&(r=Cs,(t=Yo())!==s&&Pi()!==s&&(e=_i())!==s&&Pi()!==s&&gi()!==s?(n=t,pc.add(`select::${n}::(.*)`),r=t={type:"star_ref",expr:{type:"column_ref",table:n,column:"*"},as:null}):(Cs=r,r=s),r===s&&(r=Cs,(t=Oo())!==s&&Pi()!==s?((e=to())===s&&(e=null),e!==s?(r=t=function(r,t){return {type:"expr",expr:r,as:t}}(t,e)):(Cs=r,r=s)):(Cs=r,r=s))),r}function to(){var r,t,e;return r=Cs,(t=_a())!==s&&Pi()!==s&&(e=function(){var r,t;r=Cs,(t=Wo())!==s?((function(r){if(!0===sc[r.toUpperCase()])throw new Error("Error: "+JSON.stringify(r)+" is a reserved word, can not as alias clause");return !1}(t)?s:void 0)!==s?(r=t=t):(Cs=r,r=s)):(Cs=r,r=s);r===s&&(r=Cs,(t=Bo())!==s&&(t=t),r=t);return r}())!==s?(r=t=e):(Cs=r,r=s),r===s&&(r=Cs,(t=_a())===s&&(t=null),t!==s&&Pi()!==s&&(e=Yo())!==s?(r=t=e):(Cs=r,r=s)),r}function eo(){var r,t;return r=Cs,Na()!==s&&Pi()!==s&&(t=ao())!==s?(r=t):(Cs=r,r=s),r}function no(){var r,t,e;return r=Cs,(t=fo())!==s&&Pi()!==s&&La()!==s&&Pi()!==s&&(e=fo())!==s?(r=t=[t,e]):(Cs=r,r=s),r}function uo(){var t,e;return t=Cs,ka()!==s&&Pi()!==s?("btree"===r.substr(Cs,5).toLowerCase()?(e=r.substr(Cs,5),Cs+=5):(e=s,0===hs&&Ss($r)),e===s&&("hash"===r.substr(Cs,4).toLowerCase()?(e=r.substr(Cs,4),Cs+=4):(e=s,0===hs&&Ss(Fr)),e===s&&("gist"===r.substr(Cs,4).toLowerCase()?(e=r.substr(Cs,4),Cs+=4):(e=s,0===hs&&Ss(Pr)),e===s&&("gin"===r.substr(Cs,3).toLowerCase()?(e=r.substr(Cs,3),Cs+=3):(e=s,0===hs&&Ss(Gr))))),e!==s?(t={keyword:"using",type:e.toLowerCase()}):(Cs=t,t=s)):(Cs=t,t=s),t}function so(){var r,t,e,n,u,o;if(r=Cs,(t=oo())!==s){for(e=[],n=Cs,(u=Pi())!==s&&(o=oo())!==s?n=u=[u,o]:(Cs=n,n=s);n!==s;)e.push(n),n=Cs,(u=Pi())!==s&&(o=oo())!==s?n=u=[u,o]:(Cs=n,n=s);e!==s?(r=t=function(r,t){const e=[r];for(let r=0;r<t.length;r++)e.push(t[r][1]);return e}(t,e)):(Cs=r,r=s);}else Cs=r,r=s;return r}function oo(){var t,e,n,u,o,a;return t=Cs,(e=function(){var t,e,n,u;t=Cs,"key_block_size"===r.substr(Cs,14).toLowerCase()?(e=r.substr(Cs,14),Cs+=14):(e=s,0===hs&&Ss(dr));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="KEY_BLOCK_SIZE"):(Cs=t,t=s)):(Cs=t,t=s);return t}())!==s&&Pi()!==s?((n=Ai())===s&&(n=null),n!==s&&Pi()!==s&&(u=aa())!==s?(o=n,a=u,t=e={type:e.toLowerCase(),symbol:o,expr:a}):(Cs=t,t=s)):(Cs=t,t=s),t===s&&(t=Cs,(e=Wo())!==s&&Pi()!==s&&(n=Ai())!==s&&Pi()!==s?((u=aa())===s&&(u=Yo()),u!==s?(t=e=function(r,t,e){return {type:r.toLowerCase(),symbol:t,expr:"string"==typeof e&&{type:"origin",value:e}||e}}(e,n,u)):(Cs=t,t=s)):(Cs=t,t=s),t===s&&(t=uo())===s&&(t=Cs,"with"===r.substr(Cs,4).toLowerCase()?(e=r.substr(Cs,4),Cs+=4):(e=s,0===hs&&Ss(Hr)),e!==s&&Pi()!==s?("parser"===r.substr(Cs,6).toLowerCase()?(n=r.substr(Cs,6),Cs+=6):(n=s,0===hs&&Ss(jr)),n!==s&&Pi()!==s&&(u=Wo())!==s?(t=e={type:"with parser",expr:u}):(Cs=t,t=s)):(Cs=t,t=s),t===s&&(t=Cs,"visible"===r.substr(Cs,7).toLowerCase()?(e=r.substr(Cs,7),Cs+=7):(e=s,0===hs&&Ss(Yr)),e===s&&("invisible"===r.substr(Cs,9).toLowerCase()?(e=r.substr(Cs,9),Cs+=9):(e=s,0===hs&&Ss(Br))),e!==s&&(e=function(r){return {type:r.toLowerCase(),expr:r.toLowerCase()}}(e)),(t=e)===s&&(t=ji())))),t}function ao(){var r,t,e,n;if(r=Cs,(t=co())!==s){for(e=[],n=io();n!==s;)e.push(n),n=io();e!==s?(r=t=Xr(t,e)):(Cs=r,r=s);}else Cs=r,r=s;return r}function io(){var r,t,e;return r=Cs,Pi()!==s&&(t=Oi())!==s&&Pi()!==s&&(e=co())!==s?(r=e):(Cs=r,r=s),r===s&&(r=Cs,Pi()!==s&&(t=function(){var r,t,e,n,u,o,a,i,c,l,f;if(r=Cs,(t=lo())!==s)if(Pi()!==s)if((e=co())!==s)if(Pi()!==s)if((n=ka())!==s)if(Pi()!==s)if(xi()!==s)if(Pi()!==s)if((u=Wo())!==s){for(o=[],a=Cs,(i=Pi())!==s&&(c=Oi())!==s&&(l=Pi())!==s&&(f=Wo())!==s?a=i=[i,c,l,f]:(Cs=a,a=s);a!==s;)o.push(a),a=Cs,(i=Pi())!==s&&(c=Oi())!==s&&(l=Pi())!==s&&(f=Wo())!==s?a=i=[i,c,l,f]:(Cs=a,a=s);o!==s&&(a=Pi())!==s&&(i=Ui())!==s?(b=t,d=u,L=o,(v=e).join=b,v.using=cc(d,L),r=t=v):(Cs=r,r=s);}else Cs=r,r=s;else Cs=r,r=s;else Cs=r,r=s;else Cs=r,r=s;else Cs=r,r=s;else Cs=r,r=s;else Cs=r,r=s;else Cs=r,r=s;else Cs=r,r=s;var b,v,d,L;r===s&&(r=Cs,(t=lo())!==s&&Pi()!==s&&(e=co())!==s&&Pi()!==s?((n=bo())===s&&(n=null),n!==s?(t=function(r,t,e){return t.join=r,t.on=e,t}(t,e,n),r=t):(Cs=r,r=s)):(Cs=r,r=s),r===s&&(r=Cs,(t=lo())!==s&&Pi()!==s&&(e=xi())!==s&&Pi()!==s&&(n=Os())!==s&&Pi()!==s&&Ui()!==s&&Pi()!==s?((u=to())===s&&(u=null),u!==s&&(o=Pi())!==s?((a=bo())===s&&(a=null),a!==s?(t=function(r,t,e,n){return t.parentheses=!0,{expr:t,as:e,join:r,on:n}}(t,n,u,a),r=t):(Cs=r,r=s)):(Cs=r,r=s)):(Cs=r,r=s)));return r}())!==s?(r=t):(Cs=r,r=s)),r}function co(){var t,e,n,u,o,a;return t=Cs,(e=function(){var t;"dual"===r.substr(Cs,4).toLowerCase()?(t=r.substr(Cs,4),Cs+=4):(t=s,0===hs&&Ss($u));return t}())!==s&&(e={type:"dual"}),(t=e)===s&&(t=Cs,(e=fo())!==s&&Pi()!==s?((n=to())===s&&(n=null),n!==s?(a=n,t=e="var"===(o=e).type?(o.as=a,o):{db:o.db,table:o.table,as:a}):(Cs=t,t=s)):(Cs=t,t=s),t===s&&(t=Cs,(e=xi())!==s&&Pi()!==s&&(n=Os())!==s&&Pi()!==s&&Ui()!==s&&Pi()!==s?((u=to())===s&&(u=null),u!==s?(t=e=function(r,t){return r.parentheses=!0,{expr:r,as:t}}(n,u)):(Cs=t,t=s)):(Cs=t,t=s))),t}function lo(){var t,e,n,u;return t=Cs,(e=function(){var t,e,n,u;t=Cs,"left"===r.substr(Cs,4).toLowerCase()?(e=r.substr(Cs,4),Cs+=4):(e=s,0===hs&&Ss(Ze));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s);return t}())!==s&&(n=Pi())!==s?((u=Ua())===s&&(u=null),u!==s&&Pi()!==s&&xa()!==s?(t=e="LEFT JOIN"):(Cs=t,t=s)):(Cs=t,t=s),t===s&&(t=Cs,(e=function(){var t,e,n,u;t=Cs,"right"===r.substr(Cs,5).toLowerCase()?(e=r.substr(Cs,5),Cs+=5):(e=s,0===hs&&Ss(ze));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s);return t}())!==s&&(n=Pi())!==s?((u=Ua())===s&&(u=null),u!==s&&Pi()!==s&&xa()!==s?(t=e="RIGHT JOIN"):(Cs=t,t=s)):(Cs=t,t=s),t===s&&(t=Cs,(e=function(){var t,e,n,u;t=Cs,"full"===r.substr(Cs,4).toLowerCase()?(e=r.substr(Cs,4),Cs+=4):(e=s,0===hs&&Ss(Je));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s);return t}())!==s&&(n=Pi())!==s?((u=Ua())===s&&(u=null),u!==s&&Pi()!==s&&xa()!==s?(t=e="FULL JOIN"):(Cs=t,t=s)):(Cs=t,t=s),t===s&&(t=Cs,e=Cs,(n=function(){var t,e,n,u;t=Cs,"inner"===r.substr(Cs,5).toLowerCase()?(e=r.substr(Cs,5),Cs+=5):(e=s,0===hs&&Ss(Qe));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s);return t}())!==s&&(u=Pi())!==s?e=n=[n,u]:(Cs=e,e=s),e===s&&(e=null),e!==s&&(n=xa())!==s?(t=e="INNER JOIN"):(Cs=t,t=s)))),t}function fo(){var r,t,e,n,u,o,a,i,c,l;return r=Cs,(t=Yo())!==s?(e=Cs,(n=Pi())!==s&&(u=_i())!==s&&(o=Pi())!==s&&(a=Yo())!==s?e=n=[n,u,o,a]:(Cs=e,e=s),e!==s?(n=Cs,(u=Pi())!==s&&(o=_i())!==s&&(a=Pi())!==s&&(i=Yo())!==s?n=u=[u,o,a,i]:(Cs=n,n=s),n!==s?(r=t=function(r,t,e){const n={db:null,table:r};return null!==e&&(n.db=`${r}.${t[3]}`,n.table=e[3]),n}(t,e,n)):(Cs=r,r=s)):(Cs=r,r=s)):(Cs=r,r=s),r===s&&(r=Cs,(t=Yo())!==s&&(e=Pi())!==s&&(n=_i())!==s&&(u=Pi())!==s&&(o=gi())!==s?(l=t,Cc.add(`select::${l}::(.*)`),r=t={db:l,table:"*"}):(Cs=r,r=s),r===s&&(r=Cs,(t=Yo())!==s?(e=Cs,(n=Pi())!==s&&(u=_i())!==s&&(o=Pi())!==s&&(a=Yo())!==s?e=n=[n,u,o,a]:(Cs=e,e=s),e===s&&(e=null),e!==s?(r=t=function(r,t){const e={db:null,table:r};return null!==t&&(e.db=r,e.table=t[3]),e}(t,e)):(Cs=r,r=s)):(Cs=r,r=s),r===s&&(r=Cs,(t=tc())!==s&&((c=t).db=null,c.table=c.name,t=c),r=t))),r}function bo(){var r,t;return r=Cs,ga()!==s&&Pi()!==s&&(t=Oo())!==s?(r=t):(Cs=r,r=s),r}function vo(){var t,e;return t=Cs,function(){var t,e,n,u;t=Cs,"where"===r.substr(Cs,5).toLowerCase()?(e=r.substr(Cs,5),Cs+=5):(e=s,0===hs&&Ss(sn));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s);return t}()!==s&&Pi()!==s?((e=go())===s&&(e=Oo()),e!==s?(t=e):(Cs=t,t=s)):(Cs=t,t=s),t}function Lo(){var r,t,e,n,u,o,a,i;if(r=Cs,(t=jo())!==s){for(e=[],n=Cs,(u=Pi())!==s&&(o=Oi())!==s&&(a=Pi())!==s&&(i=jo())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);n!==s;)e.push(n),n=Cs,(u=Pi())!==s&&(o=Oi())!==s&&(a=Pi())!==s&&(i=jo())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);e!==s?(r=t=cc(t,e)):(Cs=r,r=s);}else Cs=r,r=s;return r}function Co(){var t,e;return t=Cs,function(){var t,e,n,u;t=Cs,"order"===r.substr(Cs,5).toLowerCase()?(e=r.substr(Cs,5),Cs+=5):(e=s,0===hs&&Ss(cn));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s);return t}()!==s&&Pi()!==s&&Fa()!==s&&Pi()!==s&&(e=function(){var r,t,e,n,u,o,a,i;if(r=Cs,(t=po())!==s){for(e=[],n=Cs,(u=Pi())!==s&&(o=Oi())!==s&&(a=Pi())!==s&&(i=po())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);n!==s;)e.push(n),n=Cs,(u=Pi())!==s&&(o=Oi())!==s&&(a=Pi())!==s&&(i=po())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);e!==s?(t=cc(t,e),r=t):(Cs=r,r=s);}else Cs=r,r=s;return r}())!==s?(t=e):(Cs=t,t=s),t}function po(){var r,t,e;return r=Cs,(t=Oo())!==s&&Pi()!==s?((e=Ga())===s&&(e=Pa()),e===s&&(e=null),e!==s?(r=t=function(r,t){const e={expr:r,type:"ASC"};return "DESC"===t&&(e.type="DESC"),e}(t,e)):(Cs=r,r=s)):(Cs=r,r=s),r}function wo(){var r;return (r=aa())===s&&(r=Zo()),r}function Eo(){var t,e,n,u,o,a;return t=Cs,function(){var t,e,n,u;t=Cs,"limit"===r.substr(Cs,5).toLowerCase()?(e=r.substr(Cs,5),Cs+=5):(e=s,0===hs&&Ss(fn));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s);return t}()!==s&&Pi()!==s?((e=wo())===s&&(e=Ha()),e!==s&&Pi()!==s?(n=Cs,(u=function(){var t,e,n,u;t=Cs,"offset"===r.substr(Cs,6).toLowerCase()?(e=r.substr(Cs,6),Cs+=6):(e=s,0===hs&&Ss(bn));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="OFFSET"):(Cs=t,t=s)):(Cs=t,t=s);return t}())!==s&&(o=Pi())!==s&&(a=wo())!==s?n=u=[u,o,a]:(Cs=n,n=s),n===s&&(n=null),n!==s?(t=function(r,t){const e=[];return "string"==typeof r?e.push({type:"origin",value:"all"}):e.push(r),t&&e.push(t[2]),{seperator:t&&t[0]&&t[0].toLowerCase()||"",value:e}}(e,n)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s),t}function ho(){var t,e,n,u,o,a,i,c,l;return t=Cs,e=Cs,(n=Yo())!==s&&(u=Pi())!==s&&(o=_i())!==s?e=n=[n,u,o]:(Cs=e,e=s),e===s&&(e=null),e!==s&&(n=Pi())!==s&&(u=Xo())!==s&&(o=Pi())!==s?(61===r.charCodeAt(Cs)?(a="=",Cs++):(a=s,0===hs&&Ss(Wr)),a!==s&&Pi()!==s&&(i=$o())!==s?(t=e={column:u,value:i,table:(l=e)&&l[0]}):(Cs=t,t=s)):(Cs=t,t=s),t===s&&(t=Cs,e=Cs,(n=Yo())!==s&&(u=Pi())!==s&&(o=_i())!==s?e=n=[n,u,o]:(Cs=e,e=s),e===s&&(e=null),e!==s&&(n=Pi())!==s&&(u=Xo())!==s&&(o=Pi())!==s?(61===r.charCodeAt(Cs)?(a="=",Cs++):(a=s,0===hs&&Ss(Wr)),a!==s&&Pi()!==s&&(i=Da())!==s&&Pi()!==s&&xi()!==s&&Pi()!==s&&(c=jo())!==s&&Pi()!==s&&Ui()!==s?(t=e=function(r,t,e){return {column:t,value:e,table:r&&r[0],keyword:"values"}}(e,u,c)):(Cs=t,t=s)):(Cs=t,t=s)),t}function Ao(){var t,e,n,u,o;return t=Cs,(e=function(){var t,e,n,u;t=Cs,"returning"===r.substr(Cs,9).toLowerCase()?(e=r.substr(Cs,9),Cs+=9):(e=s,0===hs&&Ss(Pe));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="RETURNING"):(Cs=t,t=s)):(Cs=t,t=s);return t}())!==s&&Pi()!==s?((n=gi())===s&&(n=Lo()),n!==s?(o=n,t=e={type:(u=e)&&u.toLowerCase()||"returning",columns:"*"===o&&[{type:"columne_ref",table:null,column:"*"}]||o}):(Cs=t,t=s)):(Cs=t,t=s),t}function yo(){var r;return (r=function(){var r,t;r=Cs,Da()!==s&&Pi()!==s&&(t=function(){var r,t,e,n,u,o,a,i;if(r=Cs,(t=So())!==s){for(e=[],n=Cs,(u=Pi())!==s&&(o=Oi())!==s&&(a=Pi())!==s&&(i=So())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);n!==s;)e.push(n),n=Cs,(u=Pi())!==s&&(o=Oi())!==s&&(a=Pi())!==s&&(i=So())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);e!==s?(t=cc(t,e),r=t):(Cs=r,r=s);}else Cs=r,r=s;return r}())!==s?(r=t):(Cs=r,r=s);return r}())===s&&(r=zs()),r}function To(){var r,t,e,n,u,o,a,i,c;if(r=Cs,Sa()!==s)if(Pi()!==s)if((t=xi())!==s)if(Pi()!==s)if((e=Wo())!==s){for(n=[],u=Cs,(o=Pi())!==s&&(a=Oi())!==s&&(i=Pi())!==s&&(c=Wo())!==s?u=o=[o,a,i,c]:(Cs=u,u=s);u!==s;)n.push(u),u=Cs,(o=Pi())!==s&&(a=Oi())!==s&&(i=Pi())!==s&&(c=Wo())!==s?u=o=[o,a,i,c]:(Cs=u,u=s);n!==s&&(u=Pi())!==s&&(o=Ui())!==s?(r=cc(e,n)):(Cs=r,r=s);}else Cs=r,r=s;else Cs=r,r=s;else Cs=r,r=s;else Cs=r,r=s;else Cs=r,r=s;return r===s&&(r=Cs,Sa()!==s&&Pi()!==s&&(t=So())!==s?(r=t):(Cs=r,r=s)),r}function mo(){var r,t;return r=Cs,(t=ya())!==s&&(t="insert"),(r=t)===s&&(r=Cs,(t=Ta())!==s&&(t="replace"),r=t),r}function So(){var r,t;return r=Cs,xi()!==s&&Pi()!==s&&(t=Io())!==s&&Pi()!==s&&Ui()!==s?(r=t):(Cs=r,r=s),r}function Io(){var r,t,e,n,u,o,a,i;if(r=Cs,(t=Oo())!==s){for(e=[],n=Cs,(u=Pi())!==s&&(o=Oi())!==s&&(a=Pi())!==s&&(i=Oo())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);n!==s;)e.push(n),n=Cs,(u=Pi())!==s&&(o=Oi())!==s&&(a=Pi())!==s&&(i=Oo())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);e!==s?(r=t=function(r,t){const e={type:"expr_list"};return e.value=cc(r,t),e}(t,e)):(Cs=r,r=s);}else Cs=r,r=s;return r}function No(){var t,e,n;return t=Cs,pi()!==s&&Pi()!==s&&(e=Oo())!==s&&Pi()!==s&&(n=function(){var t;(t=function(){var t,e,n,u;t=Cs,"year"===r.substr(Cs,4).toLowerCase()?(e=r.substr(Cs,4),Cs+=4):(e=s,0===hs&&Ss(zt));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="YEAR"):(Cs=t,t=s)):(Cs=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Cs,"month"===r.substr(Cs,5).toLowerCase()?(e=r.substr(Cs,5),Cs+=5):(e=s,0===hs&&Ss(Bt));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="MONTH"):(Cs=t,t=s)):(Cs=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Cs,"day"===r.substr(Cs,3).toLowerCase()?(e=r.substr(Cs,3),Cs+=3):(e=s,0===hs&&Ss(xt));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="DAY"):(Cs=t,t=s)):(Cs=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Cs,"hour"===r.substr(Cs,4).toLowerCase()?(e=r.substr(Cs,4),Cs+=4):(e=s,0===hs&&Ss($t));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="HOUR"):(Cs=t,t=s)):(Cs=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Cs,"minute"===r.substr(Cs,6).toLowerCase()?(e=r.substr(Cs,6),Cs+=6):(e=s,0===hs&&Ss(Yt));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="MINUTE"):(Cs=t,t=s)):(Cs=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Cs,"second"===r.substr(Cs,6).toLowerCase()?(e=r.substr(Cs,6),Cs+=6):(e=s,0===hs&&Ss(Wt));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="SECOND"):(Cs=t,t=s)):(Cs=t,t=s);return t}());return t}())!==s?(t={type:"interval",expr:e,unit:n.toLowerCase()}):(Cs=t,t=s),t===s&&(t=Cs,pi()!==s&&Pi()!==s&&(e=na())!==s?(t=function(r){return {type:"interval",expr:r,unit:""}}(e)):(Cs=t,t=s)),t}function Ro(){var t,e,n,u,o,a,i,c,l;if(t=Cs,za()!==s)if(Pi()!==s)if((e=Oo())===s&&(e=null),e!==s)if(Pi()!==s){if(n=[],(u=_o())!==s)for(;u!==s;)n.push(u),u=_o();else n=s;n!==s&&(u=Pi())!==s?((o=function(){var t,e;t=Cs,function(){var t,e,n,u;t=Cs,"else"===r.substr(Cs,4).toLowerCase()?(e=r.substr(Cs,4),Cs+=4):(e=s,0===hs&&Ss(Fn));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s);return t}()!==s&&Pi()!==s&&(e=Oo())!==s?(t={type:"else",result:e}):(Cs=t,t=s);return t}())===s&&(o=null),o!==s&&Pi()!==s&&function(){var t,e,n,u;t=Cs,"end"===r.substr(Cs,3).toLowerCase()?(e=r.substr(Cs,3),Cs+=3):(e=s,0===hs&&Ss(Pn));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s);return t}()!==s&&Pi()!==s?((a=za())===s&&(a=null),a!==s?(i=e,c=n,(l=o)&&c.push(l),t={type:"case",expr:i||null,args:c}):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s);}else Cs=t,t=s;else Cs=t,t=s;else Cs=t,t=s;else Cs=t,t=s;return t}function _o(){var t,e,n;return t=Cs,Ja()!==s&&Pi()!==s&&(e=go())!==s&&Pi()!==s&&function(){var t,e,n,u;t=Cs,"then"===r.substr(Cs,4).toLowerCase()?(e=r.substr(Cs,4),Cs+=4):(e=s,0===hs&&Ss($n));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s);return t}()!==s&&Pi()!==s&&(n=Oo())!==s?(t={type:"when",cond:e,result:n}):(Cs=t,t=s),t}function Oo(){var r;return (r=function(){var r,t,e,n,u,o,a,i;if(r=Cs,(t=Ho())!==s){if(e=[],n=Cs,(u=Pi())!==s&&(o=Fi())!==s&&(a=Pi())!==s&&(i=Ho())!==s?n=u=[u,o,a,i]:(Cs=n,n=s),n!==s)for(;n!==s;)e.push(n),n=Cs,(u=Pi())!==s&&(o=Fi())!==s&&(a=Pi())!==s&&(i=Ho())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);else e=s;e!==s?(t=lc(t,e),r=t):(Cs=r,r=s);}else Cs=r,r=s;return r}())===s&&(r=function(){var r,t,e,n,u,o,a,i;if(r=Cs,(t=xo())!==s){for(e=[],n=Cs,(u=Gi())!==s&&(o=Za())!==s&&(a=Pi())!==s&&(i=xo())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);n!==s;)e.push(n),n=Cs,(u=Gi())!==s&&(o=Za())!==s&&(a=Pi())!==s&&(i=xo())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);e!==s?(t=Vr(t,e),r=t):(Cs=r,r=s);}else Cs=r,r=s;return r}())===s&&(r=function(){var r,t,e,n,u,o;if(r=Cs,(t=Fo())!==s){if(e=[],n=Cs,(u=Pi())!==s&&(o=Ho())!==s?n=u=[u,o]:(Cs=n,n=s),n!==s)for(;n!==s;)e.push(n),n=Cs,(u=Pi())!==s&&(o=Ho())!==s?n=u=[u,o]:(Cs=n,n=s);else e=s;e!==s?(t=oc(t,e[0][1]),r=t):(Cs=r,r=s);}else Cs=r,r=s;return r}())===s&&(r=Vs()),r}function go(){var r,t,e,n,u,o,a,i;if(r=Cs,(t=Oo())!==s){for(e=[],n=Cs,(u=Pi())!==s?((o=qa())===s&&(o=Za())===s&&(o=Oi()),o!==s&&(a=Pi())!==s&&(i=Oo())!==s?n=u=[u,o,a,i]:(Cs=n,n=s)):(Cs=n,n=s);n!==s;)e.push(n),n=Cs,(u=Pi())!==s?((o=qa())===s&&(o=Za())===s&&(o=Oi()),o!==s&&(a=Pi())!==s&&(i=Oo())!==s?n=u=[u,o,a,i]:(Cs=n,n=s)):(Cs=n,n=s);e!==s?(r=t=function(r,t){let e=r,n="";for(let u=0;u<t.length;u++)","===t[u][1]?(n=",",0===u&&(e=[r]),e.push(t[u][3])):e=ac(t[u][1],e,t[u][3]);if(","===n){const r={type:"expr_list"};return r.value=e,r}return e}(t,e)):(Cs=r,r=s);}else Cs=r,r=s;return r}function xo(){var r,t,e,n,u,o,a,i;if(r=Cs,(t=Uo())!==s){for(e=[],n=Cs,(u=Gi())!==s&&(o=qa())!==s&&(a=Pi())!==s&&(i=Uo())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);n!==s;)e.push(n),n=Cs,(u=Gi())!==s&&(o=qa())!==s&&(a=Pi())!==s&&(i=Uo())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);e!==s?(r=t=Vr(t,e)):(Cs=r,r=s);}else Cs=r,r=s;return r}function Uo(){var t,e,n,u,o;return (t=Mo())===s&&(t=function(){var r,t,e;r=Cs,(t=function(){var r,t,e,n,u;r=Cs,t=Cs,(e=Ka())!==s&&(n=Pi())!==s&&(u=Va())!==s?t=e=[e,n,u]:(Cs=t,t=s);t!==s&&(t=(o=t)[0]+" "+o[2]);var o;(r=t)===s&&(r=Va());return r}())!==s&&Pi()!==s&&xi()!==s&&Pi()!==s&&(e=Os())!==s&&Pi()!==s&&Ui()!==s?(n=t,(u=e).parentheses=!0,t=oc(n,u),r=t):(Cs=r,r=s);var n,u;return r}())===s&&(t=Cs,(e=Ka())===s&&(e=Cs,33===r.charCodeAt(Cs)?(n="!",Cs++):(n=s,0===hs&&Ss(Kr)),n!==s?(u=Cs,hs++,61===r.charCodeAt(Cs)?(o="=",Cs++):(o=s,0===hs&&Ss(Wr)),hs--,o===s?u=void 0:(Cs=u,u=s),u!==s?e=n=[n,u]:(Cs=e,e=s)):(Cs=e,e=s)),e!==s&&(n=Pi())!==s&&(u=Uo())!==s?(t=e=oc("NOT",u)):(Cs=t,t=s)),t}function Mo(){var t,e,n,u,o;return t=Cs,(e=$o())!==s&&Pi()!==s?((n=function(){var t;(t=function(){var t,e,n,u,o,a;t=[],e=Cs,(n=Pi())!==s&&(u=Do())!==s&&(o=Pi())!==s&&(a=$o())!==s?e=n=[n,u,o,a]:(Cs=e,e=s);if(e!==s)for(;e!==s;)t.push(e),e=Cs,(n=Pi())!==s&&(u=Do())!==s&&(o=Pi())!==s&&(a=$o())!==s?e=n=[n,u,o,a]:(Cs=e,e=s);else t=s;t!==s&&(t={type:"arithmetic",tail:t});return t}())===s&&(t=function(){var r,t,e,n;r=Cs,(t=ko())!==s&&Pi()!==s&&(e=xi())!==s&&Pi()!==s&&(n=Io())!==s&&Pi()!==s&&Ui()!==s?(r=t={op:t,right:n}):(Cs=r,r=s);r===s&&(r=Cs,(t=ko())!==s&&Pi()!==s?((e=tc())===s&&(e=na()),e!==s?(t=function(r,t){return {op:r,right:t}}(t,e),r=t):(Cs=r,r=s)):(Cs=r,r=s));return r}())===s&&(t=function(){var r,t,e,n;r=Cs,(t=function(){var r,t,e,n,u;r=Cs,t=Cs,(e=Ka())!==s&&(n=Pi())!==s&&(u=Ya())!==s?t=e=[e,n,u]:(Cs=t,t=s);t!==s&&(t=(o=t)[0]+" "+o[2]);var o;(r=t)===s&&(r=Ya());return r}())!==s&&Pi()!==s&&(e=$o())!==s&&Pi()!==s&&qa()!==s&&Pi()!==s&&(n=$o())!==s?(r=t={op:t,right:{type:"expr_list",value:[e,n]}}):(Cs=r,r=s);return r}())===s&&(t=function(){var r,t,e,n,u,o,a,i,c;r=Cs,(t=Xa())!==s&&(e=Pi())!==s&&(n=$o())!==s?(r=t={op:"IS",right:n}):(Cs=r,r=s);r===s&&(r=Cs,(t=Xa())!==s&&(e=Pi())!==s?(n=Cs,(u=ja())!==s&&(o=Pi())!==s&&(a=Na())!==s&&(i=Pi())!==s&&(c=fo())!==s?n=u=[u,o,a,i,c]:(Cs=n,n=s),n!==s?(t=function(r){const{db:t,table:e}=r.pop(),n="*"===e?"*":`"${e}"`;return {op:"IS",right:{type:"origin",value:"DISTINCT FROM "+(t?`"${t}".${n}`:n)}}}(n),r=t):(Cs=r,r=s)):(Cs=r,r=s),r===s&&(r=Cs,t=Cs,(e=Xa())!==s&&(n=Pi())!==s&&(u=Ka())!==s?t=e=[e,n,u]:(Cs=t,t=s),t!==s&&(e=Pi())!==s&&(n=$o())!==s?(t=function(r){return {op:"IS NOT",right:r}}(n),r=t):(Cs=r,r=s)));return r}())===s&&(t=function(){var r,t,e;r=Cs,(t=function(){var r,t,e,n,u;r=Cs,t=Cs,(e=Ka())!==s&&(n=Pi())!==s&&(u=Wa())!==s?t=e=[e,n,u]:(Cs=t,t=s);t!==s&&(t=(o=t)[0]+" "+o[2]);var o;(r=t)===s&&(r=Wa());return r}())!==s&&Pi()!==s?((e=ra())===s&&(e=Mo()),e!==s?(r=t={op:t,right:e}):(Cs=r,r=s)):(Cs=r,r=s);return r}())===s&&(t=function(){var t,e,n;t=Cs,"@>"===r.substr(Cs,2)?(e="@>",Cs+=2):(e=s,0===hs&&Ss(tt));e===s&&("<@"===r.substr(Cs,2)?(e="<@",Cs+=2):(e=s,0===hs&&Ss(et)),e===s&&(e=$i())===s&&(e=function(){var t;"#>>"===r.substr(Cs,3)?(t="#>>",Cs+=3):(t=s,0===hs&&Ss(os));return t}())===s&&(e=function(){var t;"#>"===r.substr(Cs,2)?(t="#>",Cs+=2):(t=s,0===hs&&Ss(ss));return t}())===s&&(63===r.charCodeAt(Cs)?(e="?",Cs++):(e=s,0===hs&&Ss(nt)),e===s&&("?|"===r.substr(Cs,2)?(e="?|",Cs+=2):(e=s,0===hs&&Ss(ut)),e===s&&("?&"===r.substr(Cs,2)?(e="?&",Cs+=2):(e=s,0===hs&&Ss(st)),e===s&&("#-"===r.substr(Cs,2)?(e="#-",Cs+=2):(e=s,0===hs&&Ss(ot)))))));e!==s&&Pi()!==s&&(n=ro())!==s?(e={op:e,right:(u=n)&&u.expr||u},t=e):(Cs=t,t=s);var u;return t}());return t}())===s&&(n=null),n!==s?(u=e,t=e=null===(o=n)?u:"arithmetic"===o.type?lc(u,o.tail):ac(o.op,u,o.right)):(Cs=t,t=s)):(Cs=t,t=s),t===s&&(t=na())===s&&(t=jo()),t}function Do(){var t;return ">="===r.substr(Cs,2)?(t=">=",Cs+=2):(t=s,0===hs&&Ss(qr)),t===s&&(62===r.charCodeAt(Cs)?(t=">",Cs++):(t=s,0===hs&&Ss(Zr)),t===s&&("<="===r.substr(Cs,2)?(t="<=",Cs+=2):(t=s,0===hs&&Ss(zr)),t===s&&("<>"===r.substr(Cs,2)?(t="<>",Cs+=2):(t=s,0===hs&&Ss(Jr)),t===s&&(60===r.charCodeAt(Cs)?(t="<",Cs++):(t=s,0===hs&&Ss(Qr)),t===s&&(61===r.charCodeAt(Cs)?(t="=",Cs++):(t=s,0===hs&&Ss(Wr)),t===s&&("!="===r.substr(Cs,2)?(t="!=",Cs+=2):(t=s,0===hs&&Ss(rt)))))))),t}function ko(){var r,t,e,n,u,o;return r=Cs,t=Cs,(e=Ka())!==s&&(n=Pi())!==s&&(u=Ba())!==s?t=e=[e,n,u]:(Cs=t,t=s),t!==s&&(t=(o=t)[0]+" "+o[2]),(r=t)===s&&(r=Ba()),r}function $o(){var r,t,e,n,u,o,a,i;if(r=Cs,(t=Po())!==s){for(e=[],n=Cs,(u=Pi())!==s&&(o=Fo())!==s&&(a=Pi())!==s&&(i=Po())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);n!==s;)e.push(n),n=Cs,(u=Pi())!==s&&(o=Fo())!==s&&(a=Pi())!==s&&(i=Po())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);e!==s?(r=t=Vr(t,e)):(Cs=r,r=s);}else Cs=r,r=s;return r}function Fo(){var t;return 43===r.charCodeAt(Cs)?(t="+",Cs++):(t=s,0===hs&&Ss(at)),t===s&&(45===r.charCodeAt(Cs)?(t="-",Cs++):(t=s,0===hs&&Ss(it))),t}function Po(){var r,t,e,n,u,o,a,i;if(r=Cs,(t=Ho())!==s){for(e=[],n=Cs,(u=Pi())!==s&&(o=Go())!==s&&(a=Pi())!==s&&(i=Ho())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);n!==s;)e.push(n),n=Cs,(u=Pi())!==s&&(o=Go())!==s&&(a=Pi())!==s&&(i=Ho())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);e!==s?(r=t=lc(t,e)):(Cs=r,r=s);}else Cs=r,r=s;return r}function Go(){var t;return 42===r.charCodeAt(Cs)?(t="*",Cs++):(t=s,0===hs&&Ss(ct)),t===s&&(47===r.charCodeAt(Cs)?(t="/",Cs++):(t=s,0===hs&&Ss(lt)),t===s&&(37===r.charCodeAt(Cs)?(t="%",Cs++):(t=s,0===hs&&Ss(ft)))),t}function Ho(){var t,e,n,u;return (t=function(){var t,e,n,u,o,a,i,c;t=Cs,(e=ra())===s&&(e=zo())===s&&(e=Qo())===s&&(e=Ro())===s&&(e=No())===s&&(e=jo())===s&&(e=Zo());e!==s&&hi()!==s&&(n=nc())!==s?(t=e={type:"cast",expr:e,symbol:"::",target:n}):(Cs=t,t=s);t===s&&(t=Cs,(e=Qa())!==s&&Pi()!==s&&(n=xi())!==s&&Pi()!==s&&(u=Oo())!==s&&Pi()!==s&&_a()!==s&&Pi()!==s&&(o=nc())!==s&&Pi()!==s&&(a=Ui())!==s?(e=function(r,t){return {type:"cast",expr:r,symbol:"as",target:t}}(u,o),t=e):(Cs=t,t=s),t===s&&(t=Cs,(e=Qa())!==s&&Pi()!==s&&(n=xi())!==s&&Pi()!==s&&(u=Oo())!==s&&Pi()!==s&&_a()!==s&&Pi()!==s&&(o=ni())!==s&&Pi()!==s&&(a=xi())!==s&&Pi()!==s&&(i=ia())!==s&&Pi()!==s&&Ui()!==s&&Pi()!==s&&(c=Ui())!==s?(e=function(r,t){return {type:"cast",expr:r,symbol:"as",target:{dataType:"DECIMAL("+t+")"}}}(u,i),t=e):(Cs=t,t=s),t===s&&(t=Cs,(e=Qa())!==s&&Pi()!==s&&(n=xi())!==s&&Pi()!==s&&(u=Oo())!==s&&Pi()!==s&&_a()!==s&&Pi()!==s&&(o=ni())!==s&&Pi()!==s&&(a=xi())!==s&&Pi()!==s&&(i=ia())!==s&&Pi()!==s&&Oi()!==s&&Pi()!==s&&(c=ia())!==s&&Pi()!==s&&Ui()!==s&&Pi()!==s&&Ui()!==s?(e=function(r,t,e){return {type:"cast",expr:r,symbol:"as",target:{dataType:"DECIMAL("+t+", "+e+")"}}}(u,i,c),t=e):(Cs=t,t=s),t===s&&(t=Cs,(e=Qa())!==s&&Pi()!==s&&(n=xi())!==s&&Pi()!==s&&(u=Oo())!==s&&Pi()!==s&&_a()!==s&&Pi()!==s&&(o=function(){var t;(t=function(){var t,e,n,u;t=Cs,"signed"===r.substr(Cs,6).toLowerCase()?(e=r.substr(Cs,6),Cs+=6):(e=s,0===hs&&Ss(Kn));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="SIGNED"):(Cs=t,t=s)):(Cs=t,t=s);return t}())===s&&(t=ui());return t}())!==s&&Pi()!==s?((a=oi())===s&&(a=null),a!==s&&Pi()!==s&&(i=Ui())!==s?(e=function(r,t,e){return {type:"cast",expr:r,symbol:"as",target:{dataType:t+(e?" "+e:"")}}}(u,o,a),t=e):(Cs=t,t=s)):(Cs=t,t=s)))));return t}())===s&&(t=ra())===s&&(t=zo())===s&&(t=Qo())===s&&(t=Ro())===s&&(t=No())===s&&(t=jo())===s&&(t=Zo())===s&&(t=Cs,xi()!==s&&(e=Pi())!==s&&(n=go())!==s&&Pi()!==s&&Ui()!==s?((u=n).parentheses=!0,t=u):(Cs=t,t=s),t===s&&(t=tc())===s&&(t=Cs,Pi()!==s?(36===r.charCodeAt(Cs)?(e="$",Cs++):(e=s,0===hs&&Ss(bt)),e!==s&&(n=aa())!==s?(t={type:"origin",value:"$"+n.value}):(Cs=t,t=s)):(Cs=t,t=s))),t}function jo(){var t,e,n,u,o,a,i,c,l;return t=Cs,(e=Yo())!==s&&(n=Pi())!==s&&(u=_i())!==s&&(o=Pi())!==s&&(a=gi())!==s?(c=e,pc.add(`select::${c}::(.*)`),t=e={type:"column_ref",table:c,column:"*"}):(Cs=t,t=s),t===s&&(t=Cs,e=Cs,(n=Yo())!==s&&(u=Pi())!==s&&(o=_i())!==s?e=n=[n,u,o]:(Cs=e,e=s),e===s&&(e=null),e!==s&&(n=Pi())!==s&&(u=Xo())!==s&&(o=Pi())!==s?((a=function(){var t;"->>"===r.substr(Cs,3)?(t="->>",Cs+=3):(t=s,0===hs&&Ss(us));return t}())===s&&(a=function(){var t;"->"===r.substr(Cs,2)?(t="->",Cs+=2):(t=s,0===hs&&Ss(ns));return t}()),a!==s&&Pi()!==s?((i=na())===s&&(i=aa()),i!==s?(t=e=function(r,t,e,n){const u=r&&r[0]||null;return pc.add(`select::${u}::${t}`),{type:"column_ref",table:u,column:t,arrow:e,property:n}}(e,u,a,i)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s),t===s&&(t=Cs,(e=Yo())!==s&&(n=Pi())!==s&&(u=_i())!==s&&(o=Pi())!==s&&(a=Xo())!==s?(t=e=function(r,t){return pc.add(`select::${r}::${t}`),{type:"column_ref",table:r,column:t}}(e,a)):(Cs=t,t=s),t===s&&(t=Cs,(e=Xo())!==s&&(l=e,pc.add("select::null::"+l),e={type:"column_ref",table:null,column:l}),t=e))),t}function Yo(){var r,t;return r=Cs,(t=Wo())!==s?((vt(t)?s:void 0)!==s?(r=t=t):(Cs=r,r=s)):(Cs=r,r=s),r===s&&(r=Cs,(t=Bo())!==s&&(t=t),r=t),r}function Bo(){var t;return (t=function(){var t,e,n,u;t=Cs,34===r.charCodeAt(Cs)?(e='"',Cs++):(e=s,0===hs&&Ss(dt));if(e!==s){if(n=[],Lt.test(r.charAt(Cs))?(u=r.charAt(Cs),Cs++):(u=s,0===hs&&Ss(Ct)),u!==s)for(;u!==s;)n.push(u),Lt.test(r.charAt(Cs))?(u=r.charAt(Cs),Cs++):(u=s,0===hs&&Ss(Ct));else n=s;n!==s?(34===r.charCodeAt(Cs)?(u='"',Cs++):(u=s,0===hs&&Ss(dt)),u!==s?(e=pt(n),t=e):(Cs=t,t=s)):(Cs=t,t=s);}else Cs=t,t=s;return t}())===s&&(t=function(){var t,e,n,u;t=Cs,39===r.charCodeAt(Cs)?(e="'",Cs++):(e=s,0===hs&&Ss(hr));if(e!==s){if(n=[],wt.test(r.charAt(Cs))?(u=r.charAt(Cs),Cs++):(u=s,0===hs&&Ss(Et)),u!==s)for(;u!==s;)n.push(u),wt.test(r.charAt(Cs))?(u=r.charAt(Cs),Cs++):(u=s,0===hs&&Ss(Et));else n=s;n!==s?(39===r.charCodeAt(Cs)?(u="'",Cs++):(u=s,0===hs&&Ss(hr)),u!==s?(e=pt(n),t=e):(Cs=t,t=s)):(Cs=t,t=s);}else Cs=t,t=s;return t}())===s&&(t=function(){var t,e,n,u;t=Cs,96===r.charCodeAt(Cs)?(e="`",Cs++):(e=s,0===hs&&Ss(ht));if(e!==s){if(n=[],At.test(r.charAt(Cs))?(u=r.charAt(Cs),Cs++):(u=s,0===hs&&Ss(yt)),u!==s)for(;u!==s;)n.push(u),At.test(r.charAt(Cs))?(u=r.charAt(Cs),Cs++):(u=s,0===hs&&Ss(yt));else n=s;n!==s?(96===r.charCodeAt(Cs)?(u="`",Cs++):(u=s,0===hs&&Ss(ht)),u!==s?(e=pt(n),t=e):(Cs=t,t=s)):(Cs=t,t=s);}else Cs=t,t=s;return t}()),t}function Xo(){var r,t;return r=Cs,(t=function(){var r,t,e,n;if(r=Cs,(t=Vo())!==s){for(e=[],n=qo();n!==s;)e.push(n),n=qo();e!==s?(t=t+e.join(""),r=t):(Cs=r,r=s);}else Cs=r,r=s;return r}())!==s?((vt(t)?s:void 0)!==s?(r=t=t):(Cs=r,r=s)):(Cs=r,r=s),r===s&&(r=Bo()),r}function Wo(){var r,t,e,n;if(r=Cs,(t=Vo())!==s){for(e=[],n=Ko();n!==s;)e.push(n),n=Ko();e!==s?(r=t=t+e.join("")):(Cs=r,r=s);}else Cs=r,r=s;return r}function Vo(){var t;return Tt.test(r.charAt(Cs))?(t=r.charAt(Cs),Cs++):(t=s,0===hs&&Ss(mt)),t}function Ko(){var t;return St.test(r.charAt(Cs))?(t=r.charAt(Cs),Cs++):(t=s,0===hs&&Ss(It)),t}function qo(){var t;return Nt.test(r.charAt(Cs))?(t=r.charAt(Cs),Cs++):(t=s,0===hs&&Ss(Rt)),t}function Zo(){var e,n,u;return e=Cs,58===r.charCodeAt(Cs)?(n=":",Cs++):(n=s,0===hs&&Ss(_t)),n!==s&&(u=Wo())!==s?e=n=[n,u]:(Cs=e,e=s),e!==s&&(e={type:"param",value:e[1]}),e}function zo(){var t;return (t=function(){var t,e,n;t=Cs,(e=function(){var t,e,n,u;t=Cs,"count"===r.substr(Cs,5).toLowerCase()?(e=r.substr(Cs,5),Cs+=5):(e=s,0===hs&&Ss(Tn));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="COUNT"):(Cs=t,t=s)):(Cs=t,t=s);return t}())!==s&&Pi()!==s&&xi()!==s&&Pi()!==s&&(n=function(){var t,e,n,u,o;t=Cs,(e=function(){var e;42===r.charCodeAt(Cs)?(e="*",Cs++):(e=s,0===hs&&Ss(ct));e!==s&&(e={type:"star",value:"*"});return e}())!==s&&(e={expr:e});(t=e)===s&&(t=Cs,(e=ja())===s&&(e=null),e!==s&&Pi()!==s&&(n=jo())!==s?(t=e={distinct:e,expr:n}):(Cs=t,t=s),t===s&&(t=Cs,(e=ja())===s&&(e=null),e!==s&&Pi()!==s&&(n=xi())!==s&&Pi()!==s&&(u=Oo())!==s&&Pi()!==s&&Ui()!==s&&Pi()!==s?((o=Co())===s&&(o=null),o!==s?(e=function(r,t,e){return t.parentheses=!0,{distinct:r,expr:t,orderby:e}}(e,u,o),t=e):(Cs=t,t=s)):(Cs=t,t=s)));return t}())!==s&&Pi()!==s&&Ui()!==s?(t=e={type:"aggr_func",name:e,args:n}):(Cs=t,t=s);return t}())===s&&(t=function(){var t,e,n,u,o,a,i,c;t=Cs,(e=function(){var t;(t=function(){var t,e,n,u;t=Cs,"sum"===r.substr(Cs,3).toLowerCase()?(e=r.substr(Cs,3),Cs+=3):(e=s,0===hs&&Ss(In));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="SUM"):(Cs=t,t=s)):(Cs=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Cs,"max"===r.substr(Cs,3).toLowerCase()?(e=r.substr(Cs,3),Cs+=3):(e=s,0===hs&&Ss(mn));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="MAX"):(Cs=t,t=s)):(Cs=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Cs,"min"===r.substr(Cs,3).toLowerCase()?(e=r.substr(Cs,3),Cs+=3):(e=s,0===hs&&Ss(Sn));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="MIN"):(Cs=t,t=s)):(Cs=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Cs,"avg"===r.substr(Cs,3).toLowerCase()?(e=r.substr(Cs,3),Cs+=3):(e=s,0===hs&&Ss(Nn));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="AVG"):(Cs=t,t=s)):(Cs=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Cs,"collect"===r.substr(Cs,7).toLowerCase()?(e=r.substr(Cs,7),Cs+=7):(e=s,0===hs&&Ss(Rn));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="COLLECT"):(Cs=t,t=s)):(Cs=t,t=s);return t}());return t}())!==s&&Pi()!==s&&xi()!==s&&Pi()!==s?((n=ja())===s&&(n=null),n!==s&&(u=Pi())!==s&&(o=$o())!==s&&(a=Pi())!==s&&(i=Ui())!==s?(t=e={type:"aggr_func",name:e,args:{expr:o,distinct:n}}):(Cs=t,t=s)):(Cs=t,t=s);t===s&&(t=Cs,(e=function(){var t;(t=function(){var t,e,n,u;t=Cs,"rank"===r.substr(Cs,4).toLowerCase()?(e=r.substr(Cs,4),Cs+=4):(e=s,0===hs&&Ss(_n));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="RANK"):(Cs=t,t=s)):(Cs=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Cs,"dense_rank"===r.substr(Cs,10).toLowerCase()?(e=r.substr(Cs,10),Cs+=10):(e=s,0===hs&&Ss(On));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="DENSE_RANK"):(Cs=t,t=s)):(Cs=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Cs,"row_number"===r.substr(Cs,10).toLowerCase()?(e=r.substr(Cs,10),Cs+=10):(e=s,0===hs&&Ss(xn));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="ROW_NUMBER"):(Cs=t,t=s)):(Cs=t,t=s);return t}());return t}())!==s&&Pi()!==s&&xi()!==s&&Pi()!==s&&(n=Ui())!==s?(e=function(r){return {type:"aggr_func",name:r}}(e),t=e):(Cs=t,t=s),t===s&&(t=Cs,(e=function(){var t,e,n,u;t=Cs,"listagg"===r.substr(Cs,7).toLowerCase()?(e=r.substr(Cs,7),Cs+=7):(e=s,0===hs&&Ss(gn));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="LISTAGG"):(Cs=t,t=s)):(Cs=t,t=s);return t}())!==s&&Pi()!==s&&xi()!==s&&Pi()!==s&&(n=$o())!==s?(u=Cs,(o=Pi())!==s&&(a=Oi())!==s&&(i=Pi())!==s&&(c=na())!==s?u=o=[o,a,i,c]:(Cs=u,u=s),u===s&&(u=null),u!==s&&(o=Pi())!==s&&(a=Ui())!==s?(e=function(r,t,e){return {type:"aggr_func",name:r,args:{expr:t,separator:e}}}(e,n,u),t=e):(Cs=t,t=s)):(Cs=t,t=s)));return t}()),t}function Jo(){var r,t,e;return r=Cs,ga()!==s&&Pi()!==s&&pa()!==s&&Pi()!==s&&(t=wi())!==s&&Pi()!==s&&xi()!==s&&Pi()!==s?((e=Io())===s&&(e=null),e!==s&&Pi()!==s&&Ui()!==s?(r={type:"on update",keyword:t,parentheses:!0,expr:e}):(Cs=r,r=s)):(Cs=r,r=s),r===s&&(r=Cs,ga()!==s&&Pi()!==s&&pa()!==s&&Pi()!==s&&(t=wi())!==s?(r=function(r){return {type:"on update",keyword:r}}(t)):(Cs=r,r=s)),r}function Qo(){var t,e,n,u,o;return t=Cs,(e=Ji())!==s&&Pi()!==s&&(n=xi())!==s&&Pi()!==s?((u=Io())===s&&(u=null),u!==s&&Pi()!==s&&Ui()!==s&&Pi()!==s?((o=function(){var t,e,n,u;return t=Cs,"over"===r.substr(Cs,4).toLowerCase()?(e=r.substr(Cs,4),Cs+=4):(e=s,0===hs&&Ss(Ot)),e!==s&&Pi()!==s&&xi()!==s&&Pi()!==s&&Sa()!==s&&Pi()!==s&&Fa()!==s&&Pi()!==s&&(n=Qs())!==s&&Pi()!==s?((u=Co())===s&&(u=null),u!==s&&Pi()!==s&&Ui()!==s?(t=e=function(r,t){return {partitionby:r,orderby:t}}(n,u)):(Cs=t,t=s)):(Cs=t,t=s),t===s&&(t=Jo()),t}())===s&&(o=null),o!==s?(t=e=function(r,t,e){return {type:"function",name:r,args:t||{type:"expr_list",value:[]},over:e}}(e,u,o)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s),t===s&&(t=Cs,(e=function(){var t;(t=function(){var t,e,n,u;t=Cs,"current_date"===r.substr(Cs,12).toLowerCase()?(e=r.substr(Cs,12),Cs+=12):(e=s,0===hs&&Ss(hu));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="CURRENT_DATE"):(Cs=t,t=s)):(Cs=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Cs,"current_time"===r.substr(Cs,12).toLowerCase()?(e=r.substr(Cs,12),Cs+=12):(e=s,0===hs&&Ss(yu));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="CURRENT_TIME"):(Cs=t,t=s)):(Cs=t,t=s);return t}())===s&&(t=wi())===s&&(t=function(){var t,e,n,u;t=Cs,"current_user"===r.substr(Cs,12).toLowerCase()?(e=r.substr(Cs,12),Cs+=12):(e=s,0===hs&&Ss(mu));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="CURRENT_USER"):(Cs=t,t=s)):(Cs=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Cs,"user"===r.substr(Cs,4).toLowerCase()?(e=r.substr(Cs,4),Cs+=4):(e=s,0===hs&&Ss(Cu));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="USER"):(Cs=t,t=s)):(Cs=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Cs,"session_user"===r.substr(Cs,12).toLowerCase()?(e=r.substr(Cs,12),Cs+=12):(e=s,0===hs&&Ss(Su));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="SESSION_USER"):(Cs=t,t=s)):(Cs=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Cs,"system_user"===r.substr(Cs,11).toLowerCase()?(e=r.substr(Cs,11),Cs+=11):(e=s,0===hs&&Ss(Iu));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="SYSTEM_USER"):(Cs=t,t=s)):(Cs=t,t=s);return t}());return t}())!==s&&Pi()!==s&&(n=xi())!==s&&Pi()!==s?((u=Io())===s&&(u=null),u!==s&&Pi()!==s&&Ui()!==s?(t=e={type:"function",name:e,args:u||{type:"expr_list",value:[]},over:bc}):(Cs=t,t=s)):(Cs=t,t=s),t===s&&(t=function(){var t,e,n,u,o;t=Cs,(e=function(){var t,e,n,u;t=Cs,"extract"===r.substr(Cs,7).toLowerCase()?(e=r.substr(Cs,7),Cs+=7):(e=s,0===hs&&Ss(Un));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="EXTRACT"):(Cs=t,t=s)):(Cs=t,t=s);return t}())!==s&&Pi()!==s&&xi()!==s&&Pi()!==s&&(n=function(){var t,e;"century"===r.substr(Cs,7).toLowerCase()?(t=r.substr(Cs,7),Cs+=7):(t=s,0===hs&&Ss(gt));t===s&&("day"===r.substr(Cs,3).toLowerCase()?(t=r.substr(Cs,3),Cs+=3):(t=s,0===hs&&Ss(xt)),t===s&&("decade"===r.substr(Cs,6).toLowerCase()?(t=r.substr(Cs,6),Cs+=6):(t=s,0===hs&&Ss(Ut)),t===s&&("dow"===r.substr(Cs,3).toLowerCase()?(t=r.substr(Cs,3),Cs+=3):(t=s,0===hs&&Ss(Mt)),t===s&&("doy"===r.substr(Cs,3).toLowerCase()?(t=r.substr(Cs,3),Cs+=3):(t=s,0===hs&&Ss(Dt)),t===s&&("epoch"===r.substr(Cs,5).toLowerCase()?(t=r.substr(Cs,5),Cs+=5):(t=s,0===hs&&Ss(kt)),t===s&&("hour"===r.substr(Cs,4).toLowerCase()?(t=r.substr(Cs,4),Cs+=4):(t=s,0===hs&&Ss($t)),t===s&&("isodow"===r.substr(Cs,6).toLowerCase()?(t=r.substr(Cs,6),Cs+=6):(t=s,0===hs&&Ss(Ft)),t===s&&("isoyear"===r.substr(Cs,7).toLowerCase()?(t=r.substr(Cs,7),Cs+=7):(t=s,0===hs&&Ss(Pt)),t===s&&("microseconds"===r.substr(Cs,12).toLowerCase()?(t=r.substr(Cs,12),Cs+=12):(t=s,0===hs&&Ss(Gt)),t===s&&("millennium"===r.substr(Cs,10).toLowerCase()?(t=r.substr(Cs,10),Cs+=10):(t=s,0===hs&&Ss(Ht)),t===s&&("milliseconds"===r.substr(Cs,12).toLowerCase()?(t=r.substr(Cs,12),Cs+=12):(t=s,0===hs&&Ss(jt)),t===s&&("minute"===r.substr(Cs,6).toLowerCase()?(t=r.substr(Cs,6),Cs+=6):(t=s,0===hs&&Ss(Yt)),t===s&&("month"===r.substr(Cs,5).toLowerCase()?(t=r.substr(Cs,5),Cs+=5):(t=s,0===hs&&Ss(Bt)),t===s&&("quarter"===r.substr(Cs,7).toLowerCase()?(t=r.substr(Cs,7),Cs+=7):(t=s,0===hs&&Ss(Xt)),t===s&&("second"===r.substr(Cs,6).toLowerCase()?(t=r.substr(Cs,6),Cs+=6):(t=s,0===hs&&Ss(Wt)),t===s&&("timezone"===r.substr(Cs,8).toLowerCase()?(t=r.substr(Cs,8),Cs+=8):(t=s,0===hs&&Ss(Vt)),t===s&&("timezone_hour"===r.substr(Cs,13).toLowerCase()?(t=r.substr(Cs,13),Cs+=13):(t=s,0===hs&&Ss(Kt)),t===s&&("timezone_minute"===r.substr(Cs,15).toLowerCase()?(t=r.substr(Cs,15),Cs+=15):(t=s,0===hs&&Ss(qt)),t===s&&("week"===r.substr(Cs,4).toLowerCase()?(t=r.substr(Cs,4),Cs+=4):(t=s,0===hs&&Ss(Zt)),t===s&&(t=Cs,"year"===r.substr(Cs,4).toLowerCase()?(e=r.substr(Cs,4),Cs+=4):(e=s,0===hs&&Ss(zt)),e!==s&&(e=f),t=e))))))))))))))))))));return t}())!==s&&Pi()!==s&&Na()!==s&&Pi()!==s?((u=Li())===s&&(u=pi())===s&&(u=di())===s&&(u=bi()),u===s&&(u=null),u!==s&&Pi()!==s&&(o=Oo())!==s&&Pi()!==s&&Ui()!==s?(e=function(r,t,e,n){return {type:r.toLowerCase(),args:{field:t,cast_type:e,source:n}}}(e,n,u,o),t=e):(Cs=t,t=s)):(Cs=t,t=s);return t}())===s&&(t=Cs,(e=wi())!==s&&Pi()!==s?((n=Jo())===s&&(n=null),n!==s?(t=e=function(r,t){return {type:"function",name:r,over:t}}(e,n)):(Cs=t,t=s)):(Cs=t,t=s))),t}function ra(){var t;return (t=na())===s&&(t=aa())===s&&(t=function(){var t,e;t=Cs,(e=function(){var t,e,n,u;t=Cs,"true"===r.substr(Cs,4).toLowerCase()?(e=r.substr(Cs,4),Cs+=4):(e=s,0===hs&&Ss(Ie));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s);return t}())!==s&&(e={type:"bool",value:!0});(t=e)===s&&(t=Cs,(e=function(){var t,e,n,u;t=Cs,"false"===r.substr(Cs,5).toLowerCase()?(e=r.substr(Cs,5),Cs+=5):(e=s,0===hs&&Ss(Re));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s);return t}())!==s&&(e={type:"bool",value:!1}),t=e);return t}())===s&&(t=ta())===s&&(t=function(){var t,e,n,u,o,a;t=Cs,(e=di())===s&&(e=bi())===s&&(e=Li())===s&&(e=vi());if(e!==s)if(Pi()!==s){if(n=Cs,39===r.charCodeAt(Cs)?(u="'",Cs++):(u=s,0===hs&&Ss(hr)),u!==s){for(o=[],a=sa();a!==s;)o.push(a),a=sa();o!==s?(39===r.charCodeAt(Cs)?(a="'",Cs++):(a=s,0===hs&&Ss(hr)),a!==s?n=u=[u,o,a]:(Cs=n,n=s)):(Cs=n,n=s);}else Cs=n,n=s;n!==s?(i=n,e={type:e.toLowerCase(),value:i[1].join("")},t=e):(Cs=t,t=s);}else Cs=t,t=s;else Cs=t,t=s;var i;if(t===s)if(t=Cs,(e=di())===s&&(e=bi())===s&&(e=Li())===s&&(e=vi()),e!==s)if(Pi()!==s){if(n=Cs,34===r.charCodeAt(Cs)?(u='"',Cs++):(u=s,0===hs&&Ss(dt)),u!==s){for(o=[],a=ua();a!==s;)o.push(a),a=ua();o!==s?(34===r.charCodeAt(Cs)?(a='"',Cs++):(a=s,0===hs&&Ss(dt)),a!==s?n=u=[u,o,a]:(Cs=n,n=s)):(Cs=n,n=s);}else Cs=n,n=s;n!==s?(e=function(r,t){return {type:r.toLowerCase(),value:t[1].join("")}}(e,n),t=e):(Cs=t,t=s);}else Cs=t,t=s;else Cs=t,t=s;return t}()),t}function ta(){var e;return (e=function(){var t,e,n,u;t=Cs,"null"===r.substr(Cs,4).toLowerCase()?(e=r.substr(Cs,4),Cs+=4):(e=s,0===hs&&Ss(me));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s);return t}())!==s&&(e={type:"null",value:null}),e}function ea(){var e;return (e=function(){var t,e,n,u;t=Cs,"not null"===r.substr(Cs,8).toLowerCase()?(e=r.substr(Cs,8),Cs+=8):(e=s,0===hs&&Ss(Se));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s);return t}())!==s&&(e={type:"not null",value:"not null"}),e}function na(){var t,e,n,u,o;if(t=Cs,e=Cs,39===r.charCodeAt(Cs)?(n="'",Cs++):(n=s,0===hs&&Ss(hr)),n!==s){for(u=[],o=sa();o!==s;)u.push(o),o=sa();u!==s?(39===r.charCodeAt(Cs)?(o="'",Cs++):(o=s,0===hs&&Ss(hr)),o!==s?e=n=[n,u,o]:(Cs=e,e=s)):(Cs=e,e=s);}else Cs=e,e=s;if(e!==s&&(e={type:"single_quote_string",value:e[1].join("")}),(t=e)===s){if(t=Cs,e=Cs,34===r.charCodeAt(Cs)?(n='"',Cs++):(n=s,0===hs&&Ss(dt)),n!==s){for(u=[],o=ua();o!==s;)u.push(o),o=ua();u!==s?(34===r.charCodeAt(Cs)?(o='"',Cs++):(o=s,0===hs&&Ss(dt)),o!==s?e=n=[n,u,o]:(Cs=e,e=s)):(Cs=e,e=s);}else Cs=e,e=s;e!==s?(n=Cs,hs++,u=_i(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e=function(r){return {type:"string",value:r[1].join("")}}(e)):(Cs=t,t=s)):(Cs=t,t=s);}return t}function ua(){var t;return Jt.test(r.charAt(Cs))?(t=r.charAt(Cs),Cs++):(t=s,0===hs&&Ss(Qt)),t===s&&(t=oa()),t}function sa(){var t;return re.test(r.charAt(Cs))?(t=r.charAt(Cs),Cs++):(t=s,0===hs&&Ss(te)),t===s&&(t=oa()),t}function oa(){var t,e,n,u,o,a,i,c,l,f;return t=Cs,"\\'"===r.substr(Cs,2)?(e="\\'",Cs+=2):(e=s,0===hs&&Ss(ee)),e!==s&&(e="'"),(t=e)===s&&(t=Cs,'\\"'===r.substr(Cs,2)?(e='\\"',Cs+=2):(e=s,0===hs&&Ss(ne)),e!==s&&(e='"'),(t=e)===s&&(t=Cs,"\\\\"===r.substr(Cs,2)?(e="\\\\",Cs+=2):(e=s,0===hs&&Ss(ue)),e!==s&&(e="\\"),(t=e)===s&&(t=Cs,"\\/"===r.substr(Cs,2)?(e="\\/",Cs+=2):(e=s,0===hs&&Ss(se)),e!==s&&(e="/"),(t=e)===s&&(t=Cs,"\\b"===r.substr(Cs,2)?(e="\\b",Cs+=2):(e=s,0===hs&&Ss(oe)),e!==s&&(e="\b"),(t=e)===s&&(t=Cs,"\\f"===r.substr(Cs,2)?(e="\\f",Cs+=2):(e=s,0===hs&&Ss(ae)),e!==s&&(e="\f"),(t=e)===s&&(t=Cs,"\\n"===r.substr(Cs,2)?(e="\\n",Cs+=2):(e=s,0===hs&&Ss(ie)),e!==s&&(e="\n"),(t=e)===s&&(t=Cs,"\\r"===r.substr(Cs,2)?(e="\\r",Cs+=2):(e=s,0===hs&&Ss(ce)),e!==s&&(e="\r"),(t=e)===s&&(t=Cs,"\\t"===r.substr(Cs,2)?(e="\\t",Cs+=2):(e=s,0===hs&&Ss(le)),e!==s&&(e="\t"),(t=e)===s&&(t=Cs,"\\u"===r.substr(Cs,2)?(e="\\u",Cs+=2):(e=s,0===hs&&Ss(fe)),e!==s&&(n=va())!==s&&(u=va())!==s&&(o=va())!==s&&(a=va())!==s?(i=n,c=u,l=o,f=a,t=e=String.fromCharCode(parseInt("0x"+i+c+l+f))):(Cs=t,t=s),t===s&&(t=Cs,92===r.charCodeAt(Cs)?(e="\\",Cs++):(e=s,0===hs&&Ss(be)),e!==s&&(e="\\"),t=e)))))))))),t}function aa(){var t,e;return (t=function(){var r,t,e,n;r=Cs,(t=ia())!==s&&(e=ca())!==s&&(n=la())!==s?(r=t={type:"bigint",value:t+e+n}):(Cs=r,r=s);r===s&&(r=Cs,(t=ia())!==s&&(e=ca())!==s?(t=function(r,t){const e=r+t;return ic(r)?{type:"bigint",value:e}:parseFloat(e)}(t,e),r=t):(Cs=r,r=s),r===s&&(r=Cs,(t=ia())!==s&&(e=la())!==s?(t=function(r,t){return {type:"bigint",value:r+t}}(t,e),r=t):(Cs=r,r=s),r===s&&(r=Cs,(t=ia())!==s&&(t=function(r){return ic(r)?{type:"bigint",value:r}:parseFloat(r)}(t)),r=t)));return r}())!==s&&(t=(e=t)&&"bigint"===e.type?e:{type:"number",value:e}),t}function ia(){var t,e,n;return (t=fa())===s&&(t=ba())===s&&(t=Cs,45===r.charCodeAt(Cs)?(e="-",Cs++):(e=s,0===hs&&Ss(it)),e===s&&(43===r.charCodeAt(Cs)?(e="+",Cs++):(e=s,0===hs&&Ss(at))),e!==s&&(n=fa())!==s?(t=e="-"+n):(Cs=t,t=s),t===s&&(t=Cs,45===r.charCodeAt(Cs)?(e="-",Cs++):(e=s,0===hs&&Ss(it)),e===s&&(43===r.charCodeAt(Cs)?(e="+",Cs++):(e=s,0===hs&&Ss(at))),e!==s&&(n=ba())!==s?(t=e="-"+n):(Cs=t,t=s))),t}function ca(){var t,e,n;return t=Cs,46===r.charCodeAt(Cs)?(e=".",Cs++):(e=s,0===hs&&Ss(Le)),e!==s&&(n=fa())!==s?(t=e="."+n):(Cs=t,t=s),t}function la(){var t,e,n;return t=Cs,(e=function(){var t,e,n;t=Cs,he.test(r.charAt(Cs))?(e=r.charAt(Cs),Cs++):(e=s,0===hs&&Ss(Ae));e!==s?(ye.test(r.charAt(Cs))?(n=r.charAt(Cs),Cs++):(n=s,0===hs&&Ss(Te)),n===s&&(n=null),n!==s?(t=e=e+(null!==(u=n)?u:"")):(Cs=t,t=s)):(Cs=t,t=s);var u;return t}())!==s&&(n=fa())!==s?(t=e=e+n):(Cs=t,t=s),t}function fa(){var t,e;if(t=[],(e=ba())!==s)for(;e!==s;)t.push(e),e=ba();else t=s;return t!==s&&(t=t.join("")),t}function ba(){var t;return Ce.test(r.charAt(Cs))?(t=r.charAt(Cs),Cs++):(t=s,0===hs&&Ss(pe)),t}function va(){var t;return we.test(r.charAt(Cs))?(t=r.charAt(Cs),Cs++):(t=s,0===hs&&Ss(Ee)),t}function da(){var t,e,n,u;return t=Cs,"default"===r.substr(Cs,7).toLowerCase()?(e=r.substr(Cs,7),Cs+=7):(e=s,0===hs&&Ss(T)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s),t}function La(){var t,e,n,u;return t=Cs,"to"===r.substr(Cs,2).toLowerCase()?(e=r.substr(Cs,2),Cs+=2):(e=s,0===hs&&Ss(Ne)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s),t}function Ca(){var t,e,n,u;return t=Cs,"drop"===r.substr(Cs,4).toLowerCase()?(e=r.substr(Cs,4),Cs+=4):(e=s,0===hs&&Ss(_e)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="DROP"):(Cs=t,t=s)):(Cs=t,t=s),t}function pa(){var t,e,n,u;return t=Cs,"update"===r.substr(Cs,6).toLowerCase()?(e=r.substr(Cs,6),Cs+=6):(e=s,0===hs&&Ss(j)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s),t}function wa(){var t,e,n,u;return t=Cs,"create"===r.substr(Cs,6).toLowerCase()?(e=r.substr(Cs,6),Cs+=6):(e=s,0===hs&&Ss(Ue)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s),t}function Ea(){var t,e,n,u;return t=Cs,"temporary"===r.substr(Cs,9).toLowerCase()?(e=r.substr(Cs,9),Cs+=9):(e=s,0===hs&&Ss(Me)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s),t}function ha(){var t,e,n,u;return t=Cs,"if not exists"===r.substr(Cs,13).toLowerCase()?(e=r.substr(Cs,13),Cs+=13):(e=s,0===hs&&Ss(De)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s),t}function Aa(){var t,e,n,u;return t=Cs,"delete"===r.substr(Cs,6).toLowerCase()?(e=r.substr(Cs,6),Cs+=6):(e=s,0===hs&&Ss(H)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s),t}function ya(){var t,e,n,u;return t=Cs,"insert"===r.substr(Cs,6).toLowerCase()?(e=r.substr(Cs,6),Cs+=6):(e=s,0===hs&&Ss(ke)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s),t}function Ta(){var t,e,n,u;return t=Cs,"replace"===r.substr(Cs,7).toLowerCase()?(e=r.substr(Cs,7),Cs+=7):(e=s,0===hs&&Ss(Fe)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s),t}function ma(){var t,e,n,u;return t=Cs,"rename"===r.substr(Cs,6).toLowerCase()?(e=r.substr(Cs,6),Cs+=6):(e=s,0===hs&&Ss(Ge)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s),t}function Sa(){var t,e,n,u;return t=Cs,"partition"===r.substr(Cs,9).toLowerCase()?(e=r.substr(Cs,9),Cs+=9):(e=s,0===hs&&Ss(je)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="PARTITION"):(Cs=t,t=s)):(Cs=t,t=s),t}function Ia(){var t,e,n,u;return t=Cs,"into"===r.substr(Cs,4).toLowerCase()?(e=r.substr(Cs,4),Cs+=4):(e=s,0===hs&&Ss(Ye)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s),t}function Na(){var t,e,n,u;return t=Cs,"from"===r.substr(Cs,4).toLowerCase()?(e=r.substr(Cs,4),Cs+=4):(e=s,0===hs&&Ss(Be)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s),t}function Ra(){var t,e,n,u;return t=Cs,"set"===r.substr(Cs,3).toLowerCase()?(e=r.substr(Cs,3),Cs+=3):(e=s,0===hs&&Ss(lr)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s),t}function _a(){var t,e,n,u;return t=Cs,"as"===r.substr(Cs,2).toLowerCase()?(e=r.substr(Cs,2),Cs+=2):(e=s,0===hs&&Ss(Xe)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s),t}function Oa(){var t,e,n,u;return t=Cs,"table"===r.substr(Cs,5).toLowerCase()?(e=r.substr(Cs,5),Cs+=5):(e=s,0===hs&&Ss(We)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="TABLE"):(Cs=t,t=s)):(Cs=t,t=s),t}function ga(){var t,e,n,u;return t=Cs,"on"===r.substr(Cs,2).toLowerCase()?(e=r.substr(Cs,2),Cs+=2):(e=s,0===hs&&Ss(G)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s),t}function xa(){var t,e,n,u;return t=Cs,"join"===r.substr(Cs,4).toLowerCase()?(e=r.substr(Cs,4),Cs+=4):(e=s,0===hs&&Ss(rn)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s),t}function Ua(){var t,e,n,u;return t=Cs,"outer"===r.substr(Cs,5).toLowerCase()?(e=r.substr(Cs,5),Cs+=5):(e=s,0===hs&&Ss(tn)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s),t}function Ma(){var t,e,n,u;return t=Cs,"union"===r.substr(Cs,5).toLowerCase()?(e=r.substr(Cs,5),Cs+=5):(e=s,0===hs&&Ss(en)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s),t}function Da(){var t,e,n,u;return t=Cs,"values"===r.substr(Cs,6).toLowerCase()?(e=r.substr(Cs,6),Cs+=6):(e=s,0===hs&&Ss(nn)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s),t}function ka(){var t,e,n,u;return t=Cs,"using"===r.substr(Cs,5).toLowerCase()?(e=r.substr(Cs,5),Cs+=5):(e=s,0===hs&&Ss(un)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s),t}function $a(){var t,e,n,u;return t=Cs,"with"===r.substr(Cs,4).toLowerCase()?(e=r.substr(Cs,4),Cs+=4):(e=s,0===hs&&Ss(Hr)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s),t}function Fa(){var t,e,n,u;return t=Cs,"by"===r.substr(Cs,2).toLowerCase()?(e=r.substr(Cs,2),Cs+=2):(e=s,0===hs&&Ss(an)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s),t}function Pa(){var t,e,n,u;return t=Cs,"asc"===r.substr(Cs,3).toLowerCase()?(e=r.substr(Cs,3),Cs+=3):(e=s,0===hs&&Ss(vn)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="ASC"):(Cs=t,t=s)):(Cs=t,t=s),t}function Ga(){var t,e,n,u;return t=Cs,"desc"===r.substr(Cs,4).toLowerCase()?(e=r.substr(Cs,4),Cs+=4):(e=s,0===hs&&Ss(dn)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="DESC"):(Cs=t,t=s)):(Cs=t,t=s),t}function Ha(){var t,e,n,u;return t=Cs,"all"===r.substr(Cs,3).toLowerCase()?(e=r.substr(Cs,3),Cs+=3):(e=s,0===hs&&Ss(Ln)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="ALL"):(Cs=t,t=s)):(Cs=t,t=s),t}function ja(){var t,e,n,u;return t=Cs,"distinct"===r.substr(Cs,8).toLowerCase()?(e=r.substr(Cs,8),Cs+=8):(e=s,0===hs&&Ss(Cn)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="DISTINCT"):(Cs=t,t=s)):(Cs=t,t=s),t}function Ya(){var t,e,n,u;return t=Cs,"between"===r.substr(Cs,7).toLowerCase()?(e=r.substr(Cs,7),Cs+=7):(e=s,0===hs&&Ss(pn)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="BETWEEN"):(Cs=t,t=s)):(Cs=t,t=s),t}function Ba(){var t,e,n,u;return t=Cs,"in"===r.substr(Cs,2).toLowerCase()?(e=r.substr(Cs,2),Cs+=2):(e=s,0===hs&&Ss(mr)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="IN"):(Cs=t,t=s)):(Cs=t,t=s),t}function Xa(){var t,e,n,u;return t=Cs,"is"===r.substr(Cs,2).toLowerCase()?(e=r.substr(Cs,2),Cs+=2):(e=s,0===hs&&Ss(wn)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="IS"):(Cs=t,t=s)):(Cs=t,t=s),t}function Wa(){var t,e,n,u;return t=Cs,"like"===r.substr(Cs,4).toLowerCase()?(e=r.substr(Cs,4),Cs+=4):(e=s,0===hs&&Ss(En)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="LIKE"):(Cs=t,t=s)):(Cs=t,t=s),t}function Va(){var t,e,n,u;return t=Cs,"exists"===r.substr(Cs,6).toLowerCase()?(e=r.substr(Cs,6),Cs+=6):(e=s,0===hs&&Ss(hn)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="EXISTS"):(Cs=t,t=s)):(Cs=t,t=s),t}function Ka(){var t,e,n,u;return t=Cs,"not"===r.substr(Cs,3).toLowerCase()?(e=r.substr(Cs,3),Cs+=3):(e=s,0===hs&&Ss(tr)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="NOT"):(Cs=t,t=s)):(Cs=t,t=s),t}function qa(){var t,e,n,u;return t=Cs,"and"===r.substr(Cs,3).toLowerCase()?(e=r.substr(Cs,3),Cs+=3):(e=s,0===hs&&Ss(An)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="AND"):(Cs=t,t=s)):(Cs=t,t=s),t}function Za(){var t,e,n,u;return t=Cs,"or"===r.substr(Cs,2).toLowerCase()?(e=r.substr(Cs,2),Cs+=2):(e=s,0===hs&&Ss(yn)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="OR"):(Cs=t,t=s)):(Cs=t,t=s),t}function za(){var t,e,n,u;return t=Cs,"case"===r.substr(Cs,4).toLowerCase()?(e=r.substr(Cs,4),Cs+=4):(e=s,0===hs&&Ss(Dn)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s),t}function Ja(){var t,e,n,u;return t=Cs,"when"===r.substr(Cs,4).toLowerCase()?(e=r.substr(Cs,4),Cs+=4):(e=s,0===hs&&Ss(kn)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s),t}function Qa(){var t,e,n,u;return t=Cs,"cast"===r.substr(Cs,4).toLowerCase()?(e=r.substr(Cs,4),Cs+=4):(e=s,0===hs&&Ss(Gn)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s),t}function ri(){var t,e,n,u;return t=Cs,"char"===r.substr(Cs,4).toLowerCase()?(e=r.substr(Cs,4),Cs+=4):(e=s,0===hs&&Ss(Yn)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="CHAR"):(Cs=t,t=s)):(Cs=t,t=s),t}function ti(){var t,e,n,u;return t=Cs,"varchar"===r.substr(Cs,7).toLowerCase()?(e=r.substr(Cs,7),Cs+=7):(e=s,0===hs&&Ss(Bn)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="VARCHAR"):(Cs=t,t=s)):(Cs=t,t=s),t}function ei(){var t,e,n,u;return t=Cs,"numeric"===r.substr(Cs,7).toLowerCase()?(e=r.substr(Cs,7),Cs+=7):(e=s,0===hs&&Ss(Wn)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="NUMERIC"):(Cs=t,t=s)):(Cs=t,t=s),t}function ni(){var t,e,n,u;return t=Cs,"decimal"===r.substr(Cs,7).toLowerCase()?(e=r.substr(Cs,7),Cs+=7):(e=s,0===hs&&Ss(Vn)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="DECIMAL"):(Cs=t,t=s)):(Cs=t,t=s),t}function ui(){var t,e,n,u;return t=Cs,"unsigned"===r.substr(Cs,8).toLowerCase()?(e=r.substr(Cs,8),Cs+=8):(e=s,0===hs&&Ss(qn)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="UNSIGNED"):(Cs=t,t=s)):(Cs=t,t=s),t}function si(){var t,e,n,u;return t=Cs,"int"===r.substr(Cs,3).toLowerCase()?(e=r.substr(Cs,3),Cs+=3):(e=s,0===hs&&Ss(Zn)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="INT"):(Cs=t,t=s)):(Cs=t,t=s),t}function oi(){var t,e,n,u;return t=Cs,"integer"===r.substr(Cs,7).toLowerCase()?(e=r.substr(Cs,7),Cs+=7):(e=s,0===hs&&Ss(Jn)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="INTEGER"):(Cs=t,t=s)):(Cs=t,t=s),t}function ai(){var t,e,n,u;return t=Cs,"smallint"===r.substr(Cs,8).toLowerCase()?(e=r.substr(Cs,8),Cs+=8):(e=s,0===hs&&Ss(eu)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="SMALLINT"):(Cs=t,t=s)):(Cs=t,t=s),t}function ii(){var t,e,n,u;return t=Cs,"tinyint"===r.substr(Cs,7).toLowerCase()?(e=r.substr(Cs,7),Cs+=7):(e=s,0===hs&&Ss(nu)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="TINYINT"):(Cs=t,t=s)):(Cs=t,t=s),t}function ci(){var t,e,n,u;return t=Cs,"bigint"===r.substr(Cs,6).toLowerCase()?(e=r.substr(Cs,6),Cs+=6):(e=s,0===hs&&Ss(iu)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="BIGINT"):(Cs=t,t=s)):(Cs=t,t=s),t}function li(){var t,e,n,u;return t=Cs,"float"===r.substr(Cs,5).toLowerCase()?(e=r.substr(Cs,5),Cs+=5):(e=s,0===hs&&Ss(cu)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="FLOAT"):(Cs=t,t=s)):(Cs=t,t=s),t}function fi(){var t,e,n,u;return t=Cs,"double"===r.substr(Cs,6).toLowerCase()?(e=r.substr(Cs,6),Cs+=6):(e=s,0===hs&&Ss(lu)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="DOUBLE"):(Cs=t,t=s)):(Cs=t,t=s),t}function bi(){var t,e,n,u;return t=Cs,"date"===r.substr(Cs,4).toLowerCase()?(e=r.substr(Cs,4),Cs+=4):(e=s,0===hs&&Ss(fu)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="DATE"):(Cs=t,t=s)):(Cs=t,t=s),t}function vi(){var t,e,n,u;return t=Cs,"datetime"===r.substr(Cs,8).toLowerCase()?(e=r.substr(Cs,8),Cs+=8):(e=s,0===hs&&Ss(bu)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="DATETIME"):(Cs=t,t=s)):(Cs=t,t=s),t}function di(){var t,e,n,u;return t=Cs,"time"===r.substr(Cs,4).toLowerCase()?(e=r.substr(Cs,4),Cs+=4):(e=s,0===hs&&Ss(vu)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="TIME"):(Cs=t,t=s)):(Cs=t,t=s),t}function Li(){var t,e,n,u;return t=Cs,"timestamp"===r.substr(Cs,9).toLowerCase()?(e=r.substr(Cs,9),Cs+=9):(e=s,0===hs&&Ss(du)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="TIMESTAMP"):(Cs=t,t=s)):(Cs=t,t=s),t}function Ci(){var t,e,n,u;return t=Cs,"truncate"===r.substr(Cs,8).toLowerCase()?(e=r.substr(Cs,8),Cs+=8):(e=s,0===hs&&Ss(Lu)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="TRUNCATE"):(Cs=t,t=s)):(Cs=t,t=s),t}function pi(){var t,e,n,u;return t=Cs,"interval"===r.substr(Cs,8).toLowerCase()?(e=r.substr(Cs,8),Cs+=8):(e=s,0===hs&&Ss(Au)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="INTERVAL"):(Cs=t,t=s)):(Cs=t,t=s),t}function wi(){var t,e,n,u;return t=Cs,"current_timestamp"===r.substr(Cs,17).toLowerCase()?(e=r.substr(Cs,17),Cs+=17):(e=s,0===hs&&Ss(Tu)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="CURRENT_TIMESTAMP"):(Cs=t,t=s)):(Cs=t,t=s),t}function Ei(){var t;return (t=function(){var t;return "@@"===r.substr(Cs,2)?(t="@@",Cs+=2):(t=s,0===hs&&Ss(Uu)),t}())===s&&(t=function(){var t;return 64===r.charCodeAt(Cs)?(t="@",Cs++):(t=s,0===hs&&Ss(xu)),t}())===s&&(t=function(){var t;return 36===r.charCodeAt(Cs)?(t="$",Cs++):(t=s,0===hs&&Ss(bt)),t}()),t}function hi(){var t;return "::"===r.substr(Cs,2)?(t="::",Cs+=2):(t=s,0===hs&&Ss(ku)),t}function Ai(){var t;return 61===r.charCodeAt(Cs)?(t="=",Cs++):(t=s,0===hs&&Ss(Wr)),t}function yi(){var t,e,n,u;return t=Cs,"add"===r.substr(Cs,3).toLowerCase()?(e=r.substr(Cs,3),Cs+=3):(e=s,0===hs&&Ss(Fu)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="ADD"):(Cs=t,t=s)):(Cs=t,t=s),t}function Ti(){var t,e,n,u;return t=Cs,"column"===r.substr(Cs,6).toLowerCase()?(e=r.substr(Cs,6),Cs+=6):(e=s,0===hs&&Ss(Pu)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="COLUMN"):(Cs=t,t=s)):(Cs=t,t=s),t}function mi(){var t,e,n,u;return t=Cs,"index"===r.substr(Cs,5).toLowerCase()?(e=r.substr(Cs,5),Cs+=5):(e=s,0===hs&&Ss(Gu)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="INDEX"):(Cs=t,t=s)):(Cs=t,t=s),t}function Si(){var t,e,n,u;return t=Cs,"key"===r.substr(Cs,3).toLowerCase()?(e=r.substr(Cs,3),Cs+=3):(e=s,0===hs&&Ss(E)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="KEY"):(Cs=t,t=s)):(Cs=t,t=s),t}function Ii(){var t,e,n,u;return t=Cs,"unique"===r.substr(Cs,6).toLowerCase()?(e=r.substr(Cs,6),Cs+=6):(e=s,0===hs&&Ss(p)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="UNIQUE"):(Cs=t,t=s)):(Cs=t,t=s),t}function Ni(){var t,e,n,u;return t=Cs,"comment"===r.substr(Cs,7).toLowerCase()?(e=r.substr(Cs,7),Cs+=7):(e=s,0===hs&&Ss(Yu)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="COMMENT"):(Cs=t,t=s)):(Cs=t,t=s),t}function Ri(){var t,e,n,u;return t=Cs,"constraint"===r.substr(Cs,10).toLowerCase()?(e=r.substr(Cs,10),Cs+=10):(e=s,0===hs&&Ss(Bu)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="CONSTRAINT"):(Cs=t,t=s)):(Cs=t,t=s),t}function _i(){var t;return 46===r.charCodeAt(Cs)?(t=".",Cs++):(t=s,0===hs&&Ss(Le)),t}function Oi(){var t;return 44===r.charCodeAt(Cs)?(t=",",Cs++):(t=s,0===hs&&Ss(Qu)),t}function gi(){var t;return 42===r.charCodeAt(Cs)?(t="*",Cs++):(t=s,0===hs&&Ss(ct)),t}function xi(){var t;return 40===r.charCodeAt(Cs)?(t="(",Cs++):(t=s,0===hs&&Ss(Mr)),t}function Ui(){var t;return 41===r.charCodeAt(Cs)?(t=")",Cs++):(t=s,0===hs&&Ss(Dr)),t}function Mi(){var t;return 60===r.charCodeAt(Cs)?(t="<",Cs++):(t=s,0===hs&&Ss(Qr)),t}function Di(){var t;return 62===r.charCodeAt(Cs)?(t=">",Cs++):(t=s,0===hs&&Ss(Zr)),t}function ki(){var t;return 59===r.charCodeAt(Cs)?(t=";",Cs++):(t=s,0===hs&&Ss(es)),t}function $i(){var t;return "||"===r.substr(Cs,2)?(t="||",Cs+=2):(t=s,0===hs&&Ss(as)),t}function Fi(){var t;return (t=$i())===s&&(t=function(){var t;return "&&"===r.substr(Cs,2)?(t="&&",Cs+=2):(t=s,0===hs&&Ss(is)),t}()),t}function Pi(){var r,t;for(r=[],(t=Bi())===s&&(t=Hi());t!==s;)r.push(t),(t=Bi())===s&&(t=Hi());return r}function Gi(){var r,t;if(r=[],(t=Bi())===s&&(t=Hi()),t!==s)for(;t!==s;)r.push(t),(t=Bi())===s&&(t=Hi());else r=s;return r}function Hi(){var t;return (t=function(){var t,e,n,u,o,a;t=Cs,"/*"===r.substr(Cs,2)?(e="/*",Cs+=2):(e=s,0===hs&&Ss(cs));if(e!==s){for(n=[],u=Cs,o=Cs,hs++,"*/"===r.substr(Cs,2)?(a="*/",Cs+=2):(a=s,0===hs&&Ss(ls)),hs--,a===s?o=void 0:(Cs=o,o=s),o!==s&&(a=Yi())!==s?u=o=[o,a]:(Cs=u,u=s);u!==s;)n.push(u),u=Cs,o=Cs,hs++,"*/"===r.substr(Cs,2)?(a="*/",Cs+=2):(a=s,0===hs&&Ss(ls)),hs--,a===s?o=void 0:(Cs=o,o=s),o!==s&&(a=Yi())!==s?u=o=[o,a]:(Cs=u,u=s);n!==s?("*/"===r.substr(Cs,2)?(u="*/",Cs+=2):(u=s,0===hs&&Ss(ls)),u!==s?t=e=[e,n,u]:(Cs=t,t=s)):(Cs=t,t=s);}else Cs=t,t=s;return t}())===s&&(t=function(){var t,e,n,u,o,a;t=Cs,"--"===r.substr(Cs,2)?(e="--",Cs+=2):(e=s,0===hs&&Ss(fs));if(e!==s){for(n=[],u=Cs,o=Cs,hs++,a=Xi(),hs--,a===s?o=void 0:(Cs=o,o=s),o!==s&&(a=Yi())!==s?u=o=[o,a]:(Cs=u,u=s);u!==s;)n.push(u),u=Cs,o=Cs,hs++,a=Xi(),hs--,a===s?o=void 0:(Cs=o,o=s),o!==s&&(a=Yi())!==s?u=o=[o,a]:(Cs=u,u=s);n!==s?t=e=[e,n]:(Cs=t,t=s);}else Cs=t,t=s;return t}()),t}function ji(){var r,t,e,n,u,o,a;return r=Cs,(t=Ni())!==s&&Pi()!==s?((e=Ai())===s&&(e=null),e!==s&&Pi()!==s&&(n=na())!==s?(o=e,a=n,r=t={type:(u=t).toLowerCase(),keyword:u.toLowerCase(),symbol:o,value:a}):(Cs=r,r=s)):(Cs=r,r=s),r}function Yi(){var t;return r.length>Cs?(t=r.charAt(Cs),Cs++):(t=s,0===hs&&Ss(bs)),t}function Bi(){var t;return vs.test(r.charAt(Cs))?(t=r.charAt(Cs),Cs++):(t=s,0===hs&&Ss(ds)),t}function Xi(){var t,e;if((t=function(){var t,e;t=Cs,hs++,r.length>Cs?(e=r.charAt(Cs),Cs++):(e=s,0===hs&&Ss(bs));hs--,e===s?t=void 0:(Cs=t,t=s);return t}())===s)if(t=[],ve.test(r.charAt(Cs))?(e=r.charAt(Cs),Cs++):(e=s,0===hs&&Ss(de)),e!==s)for(;e!==s;)t.push(e),ve.test(r.charAt(Cs))?(e=r.charAt(Cs),Cs++):(e=s,0===hs&&Ss(de));else t=s;return t}function Wi(){var t,e;return t=Cs,Lc=[],(void 0)!==s&&Pi()!==s?((e=Vi())===s&&(e=function(){var t,e;t=Cs,function(){var t;return "return"===r.substr(Cs,6).toLowerCase()?(t=r.substr(Cs,6),Cs+=6):(t=s,0===hs&&Ss(Mu)),t}()!==s&&Pi()!==s&&(e=Ki())!==s?(t={type:"return",expr:e}):(Cs=t,t=s);return t}()),e!==s?(t={type:"proc",stmt:e,vars:Lc}):(Cs=t,t=s)):(Cs=t,t=s),t}function Vi(){var t,e,n,u;return t=Cs,(e=tc())===s&&(e=ec()),e!==s&&Pi()!==s?((n=function(){var t;return ":="===r.substr(Cs,2)?(t=":=",Cs+=2):(t=s,0===hs&&Ss(Du)),t}())===s&&(n=Ai()),n!==s&&Pi()!==s&&(u=Ki())!==s?(t=e={type:"assign",left:e,symbol:n,right:u}):(Cs=t,t=s)):(Cs=t,t=s),t}function Ki(){var t;return (t=Vs())===s&&(t=function(){var r,t,e,n,u;r=Cs,(t=tc())!==s&&Pi()!==s&&(e=lo())!==s&&Pi()!==s&&(n=tc())!==s&&Pi()!==s&&(u=bo())!==s?(r=t={type:"join",ltable:t,rtable:n,op:e,on:u}):(Cs=r,r=s);return r}())===s&&(t=qi())===s&&(t=function(){var t,e;t=Cs,function(){var t;return 91===r.charCodeAt(Cs)?(t="[",Cs++):(t=s,0===hs&&Ss(rs)),t}()!==s&&Pi()!==s&&(e=rc())!==s&&Pi()!==s&&function(){var t;return 93===r.charCodeAt(Cs)?(t="]",Cs++):(t=s,0===hs&&Ss(ts)),t}()!==s?(t={type:"array",value:e}):(Cs=t,t=s);return t}()),t}function qi(){var r,t,e,n,u,o,a,i;if(r=Cs,(t=Zi())!==s){for(e=[],n=Cs,(u=Pi())!==s&&(o=Fo())!==s&&(a=Pi())!==s&&(i=Zi())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);n!==s;)e.push(n),n=Cs,(u=Pi())!==s&&(o=Fo())!==s&&(a=Pi())!==s&&(i=Zi())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);e!==s?(r=t=Vr(t,e)):(Cs=r,r=s);}else Cs=r,r=s;return r}function Zi(){var r,t,e,n,u,o,a,i;if(r=Cs,(t=zi())!==s){for(e=[],n=Cs,(u=Pi())!==s&&(o=Go())!==s&&(a=Pi())!==s&&(i=zi())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);n!==s;)e.push(n),n=Cs,(u=Pi())!==s&&(o=Go())!==s&&(a=Pi())!==s&&(i=zi())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);e!==s?(r=t=Vr(t,e)):(Cs=r,r=s);}else Cs=r,r=s;return r}function zi(){var r,t,e;return (r=ra())===s&&(r=tc())===s&&(r=Qi())===s&&(r=Zo())===s&&(r=Cs,xi()!==s&&Pi()!==s&&(t=qi())!==s&&Pi()!==s&&Ui()!==s?((e=t).parentheses=!0,r=e):(Cs=r,r=s)),r}function Ji(){var r,t,e,n,u,o,a;return r=Cs,(t=Yo())!==s?(e=Cs,(n=Pi())!==s&&(u=_i())!==s&&(o=Pi())!==s&&(a=Yo())!==s?e=n=[n,u,o,a]:(Cs=e,e=s),e===s&&(e=null),e!==s?(r=t=function(r,t){let e=r;return null!==t&&(e=`${r}.${t[3]}`),e}(t,e)):(Cs=r,r=s)):(Cs=r,r=s),r}function Qi(){var r,t,e;return r=Cs,(t=Ji())!==s&&Pi()!==s&&xi()!==s&&Pi()!==s?((e=rc())===s&&(e=null),e!==s&&Pi()!==s&&Ui()!==s?(r=t={type:"function",name:t,args:{type:"expr_list",value:e}}):(Cs=r,r=s)):(Cs=r,r=s),r===s&&(r=Cs,(t=Ji())!==s&&(t=function(r){return {type:"function",name:r,args:null}}(t)),r=t),r}function rc(){var r,t,e,n,u,o,a,i;if(r=Cs,(t=zi())!==s){for(e=[],n=Cs,(u=Pi())!==s&&(o=Oi())!==s&&(a=Pi())!==s&&(i=zi())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);n!==s;)e.push(n),n=Cs,(u=Pi())!==s&&(o=Oi())!==s&&(a=Pi())!==s&&(i=zi())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);e!==s?(r=t=cc(t,e)):(Cs=r,r=s);}else Cs=r,r=s;return r}function tc(){var r,t,e,n,u;return r=Cs,(t=Ei())!==s&&(e=ec())!==s?(n=t,u=e,r=t={type:"var",...u,prefix:n}):(Cs=r,r=s),r}function ec(){var t,e,n,u,o;return t=Cs,(e=Wo())!==s&&(n=function(){var e,n,u,o;e=[],n=Cs,46===r.charCodeAt(Cs)?(u=".",Cs++):(u=s,0===hs&&Ss(Le));u!==s&&(o=Wo())!==s?n=u=[u,o]:(Cs=n,n=s);for(;n!==s;)e.push(n),n=Cs,46===r.charCodeAt(Cs)?(u=".",Cs++):(u=s,0===hs&&Ss(Le)),u!==s&&(o=Wo())!==s?n=u=[u,o]:(Cs=n,n=s);e!==s&&(e=function(r){const t=[];for(let e=0;e<r.length;e++)t.push(r[e][1]);return t}(e));return e}())!==s?(u=e,o=n,Lc.push(u),t=e={type:"var",name:u,members:o,prefix:null}):(Cs=t,t=s),t}function nc(){var t;return (t=function(){var t,e,n,u;t=Cs,(e=ri())===s&&(e=ti());if(e!==s)if(Pi()!==s)if(xi()!==s)if(Pi()!==s){if(n=[],Ce.test(r.charAt(Cs))?(u=r.charAt(Cs),Cs++):(u=s,0===hs&&Ss(pe)),u!==s)for(;u!==s;)n.push(u),Ce.test(r.charAt(Cs))?(u=r.charAt(Cs),Cs++):(u=s,0===hs&&Ss(pe));else n=s;n!==s&&(u=Pi())!==s&&Ui()!==s?(e={dataType:e,length:parseInt(n.join(""),10)},t=e):(Cs=t,t=s);}else Cs=t,t=s;else Cs=t,t=s;else Cs=t,t=s;else Cs=t,t=s;t===s&&(t=Cs,(e=ri())!==s&&(e=function(r){return {dataType:r}}(e)),(t=e)===s&&(t=Cs,(e=ti())!==s&&(e=Ls(e)),(t=e)===s&&(t=Cs,(e=function(){var t,e,n,u;return t=Cs,"string"===r.substr(Cs,6).toLowerCase()?(e=r.substr(Cs,6),Cs+=6):(e=s,0===hs&&Ss(Xn)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="STRING"):(Cs=t,t=s)):(Cs=t,t=s),t}())!==s&&(e=function(r){return {dataType:r}}(e)),t=e)));return t}())===s&&(t=function(){var t,e,n,u,o,a,i,c,l,f,b,v;t=Cs,(e=ei())===s&&(e=ni())===s&&(e=si())===s&&(e=oi())===s&&(e=ai())===s&&(e=ii())===s&&(e=ci())===s&&(e=li())===s&&(e=fi());if(e!==s)if((n=Pi())!==s)if((u=xi())!==s)if((o=Pi())!==s){if(a=[],Ce.test(r.charAt(Cs))?(i=r.charAt(Cs),Cs++):(i=s,0===hs&&Ss(pe)),i!==s)for(;i!==s;)a.push(i),Ce.test(r.charAt(Cs))?(i=r.charAt(Cs),Cs++):(i=s,0===hs&&Ss(pe));else a=s;if(a!==s)if((i=Pi())!==s){if(c=Cs,(l=Oi())!==s)if((f=Pi())!==s){if(b=[],Ce.test(r.charAt(Cs))?(v=r.charAt(Cs),Cs++):(v=s,0===hs&&Ss(pe)),v!==s)for(;v!==s;)b.push(v),Ce.test(r.charAt(Cs))?(v=r.charAt(Cs),Cs++):(v=s,0===hs&&Ss(pe));else b=s;b!==s?c=l=[l,f,b]:(Cs=c,c=s);}else Cs=c,c=s;else Cs=c,c=s;c===s&&(c=null),c!==s&&(l=Pi())!==s&&(f=Ui())!==s&&(b=Pi())!==s?((v=uc())===s&&(v=null),v!==s?(d=c,L=v,e={dataType:e,length:parseInt(a.join(""),10),scale:d&&parseInt(d[2].join(""),10),parentheses:!0,suffix:L},t=e):(Cs=t,t=s)):(Cs=t,t=s);}else Cs=t,t=s;else Cs=t,t=s;}else Cs=t,t=s;else Cs=t,t=s;else Cs=t,t=s;else Cs=t,t=s;var d,L;if(t===s){if(t=Cs,(e=ei())===s&&(e=ni())===s&&(e=si())===s&&(e=oi())===s&&(e=ai())===s&&(e=ii())===s&&(e=ci())===s&&(e=li())===s&&(e=fi()),e!==s){if(n=[],Ce.test(r.charAt(Cs))?(u=r.charAt(Cs),Cs++):(u=s,0===hs&&Ss(pe)),u!==s)for(;u!==s;)n.push(u),Ce.test(r.charAt(Cs))?(u=r.charAt(Cs),Cs++):(u=s,0===hs&&Ss(pe));else n=s;n!==s&&(u=Pi())!==s?((o=uc())===s&&(o=null),o!==s?(e=function(r,t,e){return {dataType:r,length:parseInt(t.join(""),10),suffix:e}}(e,n,o),t=e):(Cs=t,t=s)):(Cs=t,t=s);}else Cs=t,t=s;t===s&&(t=Cs,(e=ei())===s&&(e=ni())===s&&(e=si())===s&&(e=oi())===s&&(e=ai())===s&&(e=ii())===s&&(e=ci())===s&&(e=li())===s&&(e=fi()),e!==s&&(n=Pi())!==s?((u=uc())===s&&(u=null),u!==s&&(o=Pi())!==s?(e=function(r,t){return {dataType:r,suffix:t}}(e,u),t=e):(Cs=t,t=s)):(Cs=t,t=s));}return t}())===s&&(t=function(){var t,e,n,u;t=Cs,(e=bi())===s&&(e=vi())===s&&(e=di())===s&&(e=Li());if(e!==s)if(Pi()!==s)if(xi()!==s)if(Pi()!==s){if(n=[],Ce.test(r.charAt(Cs))?(u=r.charAt(Cs),Cs++):(u=s,0===hs&&Ss(pe)),u!==s)for(;u!==s;)n.push(u),Ce.test(r.charAt(Cs))?(u=r.charAt(Cs),Cs++):(u=s,0===hs&&Ss(pe));else n=s;n!==s&&(u=Pi())!==s&&Ui()!==s?(e={dataType:e,length:parseInt(n.join(""),10)},t=e):(Cs=t,t=s);}else Cs=t,t=s;else Cs=t,t=s;else Cs=t,t=s;else Cs=t,t=s;t===s&&(t=Cs,(e=bi())===s&&(e=vi())===s&&(e=di())===s&&(e=Li()),e!==s&&(e=Ls(e)),t=e);return t}())===s&&(t=function(){var e;(e=function(){var t,e,n,u;return t=Cs,"json"===r.substr(Cs,4).toLowerCase()?(e=r.substr(Cs,4),Cs+=4):(e=s,0===hs&&Ss(Qn)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="JSON"):(Cs=t,t=s)):(Cs=t,t=s),t}())===s&&(e=function(){var t,e,n,u;return t=Cs,"jsonb"===r.substr(Cs,5).toLowerCase()?(e=r.substr(Cs,5),Cs+=5):(e=s,0===hs&&Ss(ru)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="JSONB"):(Cs=t,t=s)):(Cs=t,t=s),t}());e!==s&&(e=Ls(e));return e}())===s&&(t=function(){var e;(e=function(){var t,e,n,u;return t=Cs,"geometry"===r.substr(Cs,8).toLowerCase()?(e=r.substr(Cs,8),Cs+=8):(e=s,0===hs&&Ss(tu)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="GEOMETRY"):(Cs=t,t=s)):(Cs=t,t=s),t}())!==s&&(e={dataType:e});return e}())===s&&(t=function(){var e;(e=function(){var t,e,n,u;return t=Cs,"tinytext"===r.substr(Cs,8).toLowerCase()?(e=r.substr(Cs,8),Cs+=8):(e=s,0===hs&&Ss(uu)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="TINYTEXT"):(Cs=t,t=s)):(Cs=t,t=s),t}())===s&&(e=function(){var t,e,n,u;return t=Cs,"text"===r.substr(Cs,4).toLowerCase()?(e=r.substr(Cs,4),Cs+=4):(e=s,0===hs&&Ss(su)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="TEXT"):(Cs=t,t=s)):(Cs=t,t=s),t}())===s&&(e=function(){var t,e,n,u;return t=Cs,"mediumtext"===r.substr(Cs,10).toLowerCase()?(e=r.substr(Cs,10),Cs+=10):(e=s,0===hs&&Ss(ou)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="MEDIUMTEXT"):(Cs=t,t=s)):(Cs=t,t=s),t}())===s&&(e=function(){var t,e,n,u;return t=Cs,"longtext"===r.substr(Cs,8).toLowerCase()?(e=r.substr(Cs,8),Cs+=8):(e=s,0===hs&&Ss(au)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="LONGTEXT"):(Cs=t,t=s)):(Cs=t,t=s),t}());e!==s&&(e={dataType:e});return e}())===s&&(t=function(){var e;(e=function(){var t,e,n,u;return t=Cs,"uuid"===r.substr(Cs,4).toLowerCase()?(e=r.substr(Cs,4),Cs+=4):(e=s,0===hs&&Ss(pu)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="UUID"):(Cs=t,t=s)):(Cs=t,t=s),t}())!==s&&(e={dataType:e});return e}())===s&&(t=function(){var e;(e=function(){var t,e,n,u;return t=Cs,"bool"===r.substr(Cs,4).toLowerCase()?(e=r.substr(Cs,4),Cs+=4):(e=s,0===hs&&Ss(Hn)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="BOOL"):(Cs=t,t=s)):(Cs=t,t=s),t}())===s&&(e=function(){var t,e,n,u;return t=Cs,"boolean"===r.substr(Cs,7).toLowerCase()?(e=r.substr(Cs,7),Cs+=7):(e=s,0===hs&&Ss(jn)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="BOOLEAN"):(Cs=t,t=s)):(Cs=t,t=s),t}());e!==s&&(e={dataType:e});return e}())===s&&(t=function(){var t,e,n;t=Cs,(e=function(){var t,e,n,u;return t=Cs,"array"===r.substr(Cs,5).toLowerCase()?(e=r.substr(Cs,5),Cs+=5):(e=s,0===hs&&Ss(wu)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="ARRAY"):(Cs=t,t=s)):(Cs=t,t=s),t}())!==s&&Mi()!==s&&(n=nc())!==s&&Di()!==s?(t=e={dataType:e,subType:n}):(Cs=t,t=s);return t}())===s&&(t=function(){var t,e,n;t=Cs,(e=function(){var t,e,n,u;return t=Cs,"map"===r.substr(Cs,3).toLowerCase()?(e=r.substr(Cs,3),Cs+=3):(e=s,0===hs&&Ss(Eu)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="MAP"):(Cs=t,t=s)):(Cs=t,t=s),t}())!==s&&Mi()!==s&&nc()!==s&&Oi()!==s&&(n=nc())!==s&&Di()!==s?(t=e={dataType:e,subType:n}):(Cs=t,t=s);return t}())===s&&(t=function(){var e;(e=function(){var t,e,n,u;return t=Cs,"row"===r.substr(Cs,3).toLowerCase()?(e=r.substr(Cs,3),Cs+=3):(e=s,0===hs&&Ss(ar)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="ROW"):(Cs=t,t=s)):(Cs=t,t=s),t}())!==s&&(e={dataType:e});return e}()),t}function uc(){var t,e,n;return t=Cs,(e=ui())===s&&(e=null),e!==s&&Pi()!==s?((n=function(){var t,e,n,u;return t=Cs,"zerofill"===r.substr(Cs,8).toLowerCase()?(e=r.substr(Cs,8),Cs+=8):(e=s,0===hs&&Ss(zn)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="ZEROFILL"):(Cs=t,t=s)):(Cs=t,t=s),t}())===s&&(n=null),n!==s?(t=e=function(r,t){const e=[];return r&&e.push(r),t&&e.push(t),e}(e,n)):(Cs=t,t=s)):(Cs=t,t=s),t}const sc={ALTER:!0,ALL:!0,ADD:!0,AND:!0,AS:!0,ASC:!0,BETWEEN:!0,BY:!0,CALL:!0,CASE:!0,CREATE:!0,CONTAINS:!0,CURRENT_DATE:!0,CURRENT_TIME:!0,CURRENT_TIMESTAMP:!0,CURRENT_USER:!0,DELETE:!0,DESC:!0,DISTINCT:!0,DROP:!0,ELSE:!0,END:!0,EXISTS:!0,EXPLAIN:!0,FALSE:!0,FROM:!0,FULL:!0,GROUP:!0,HAVING:!0,IN:!0,INNER:!0,INSERT:!0,INTO:!0,INTERVAL:!0,IS:!0,JOIN:!0,JSON:!0,KEY:!0,LEFT:!0,LIKE:!0,LIMIT:!0,NOT:!0,NULL:!0,NULLS:!0,ON:!0,OR:!0,ORDER:!0,OUTER:!0,RECURSIVE:!0,RENAME:!0,RIGHT:!0,SELECT:!0,SESSION_USER:!0,SET:!0,SHOW:!0,STATUS:!0,SYSTEM_USER:!0,TABLE:!0,THEN:!0,TRUE:!0,TRUNCATE:!0,TYPE:!0,UNION:!0,UPDATE:!0,USING:!0,VALUES:!0,WITH:!0,WHEN:!0,WHERE:!0,GLOBAL:!0,SESSION:!0,LOCAL:!0,PERSIST:!0,PERSIST_ONLY:!0};function oc(r,t){return {type:"unary_expr",operator:r,expr:t}}function ac(r,t,e){return {type:"binary_expr",operator:r,left:t,right:e}}function ic(r){const t=n(Number.MAX_SAFE_INTEGER);return !(n(r)<t)}function cc(r,t,e=3){const n=[r];for(let r=0;r<t.length;r++)n.push(t[r][e]);return n}function lc(r,t){let e=r;for(let r=0;r<t.length;r++)e=ac(t[r][1],e,t[r][3]);return e}function fc(r){const t=wc[r];return t||(r||null)}function vc(r){const t=new Set;for(let e of r.keys()){const r=e.split("::");if(!r){t.add(e);break}r&&r[1]&&(r[1]=fc(r[1])),t.add(r.join("::"));}return Array.from(t)}function dc(r){return "string"==typeof r?{type:"same",value:r}:r}let Lc=[];const Cc=new Set,pc=new Set,wc={};if((e=a())!==s&&Cs===r.length)return e;throw e!==s&&Cs<r.length&&Ss({type:"end"}),Is(Es,ws<r.length?r.charAt(ws):null,ws<r.length?ms(ws,ws+1):ms(ws,ws))}};},function(r,t,e){r.exports=e(11);},function(r,t,e){e.r(t),e.d(t,"Parser",(function(){return Zr})),e.d(t,"util",(function(){return n}));var n={};e.r(n),e.d(n,"arrayStructTypeToSQL",(function(){return U})),e.d(n,"autoIncreatementToSQL",(function(){return F})),e.d(n,"columnOrderListToSQL",(function(){return P})),e.d(n,"commonKeywordArgsToSQL",(function(){return $})),e.d(n,"commonOptionConnector",(function(){return p})),e.d(n,"connector",(function(){return w})),e.d(n,"commonTypeValue",(function(){return N})),e.d(n,"commentToSQL",(function(){return M})),e.d(n,"createBinaryExpr",(function(){return h})),e.d(n,"createValueExpr",(function(){return E})),e.d(n,"DEFAULT_OPT",(function(){return L})),e.d(n,"escape",(function(){return A})),e.d(n,"literalToSQL",(function(){return O})),e.d(n,"columnIdentifierToSql",(function(){return S})),e.d(n,"identifierToSql",(function(){return I})),e.d(n,"onPartitionsToSQL",(function(){return x})),e.d(n,"replaceParams",(function(){return g})),e.d(n,"returningToSQL",(function(){return k})),e.d(n,"hasVal",(function(){return _})),e.d(n,"setParserOpt",(function(){return T})),e.d(n,"toUpper",(function(){return R})),e.d(n,"topToSQL",(function(){return m})),e.d(n,"triggerEventToSQL",(function(){return D}));var u=e(1),s=e(2),o=e(3),a=e(4),i=e(5),c=e(6),l=e(7),f=e(8),b=e(9),v={bigquery:u.parse,db2:s.parse,hive:o.parse,mysql:a.parse,mariadb:i.parse,postgresql:c.parse,sqlite:l.parse,transactsql:f.parse,flinksql:b.parse};function d(r){return (d="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(r){return typeof r}:function(r){return r&&"function"==typeof Symbol&&r.constructor===Symbol&&r!==Symbol.prototype?"symbol":typeof r})(r)}var L={database:"mysql",type:"table"},C=L;function p(r,t,e){if(e)return r?"".concat(r.toUpperCase()," ").concat(t(e)):t(e)}function w(r,t){if(t)return "".concat(r.toUpperCase()," ").concat(t)}function E(r){var t=d(r);if(Array.isArray(r))return {type:"expr_list",value:r.map(E)};if(null===r)return {type:"null",value:null};switch(t){case"boolean":return {type:"bool",value:r};case"string":return {type:"string",value:r};case"number":return {type:"number",value:r};default:throw new Error('Cannot convert value "'.concat(t,'" to SQL'))}}function h(r,t,e){var n={operator:r,type:"binary_expr"};return n.left=t.type?t:E(t),"BETWEEN"===r||"NOT BETWEEN"===r?(n.right={type:"expr_list",value:[E(e[0]),E(e[1])]},n):(n.right=e.type?e:E(e),n)}function A(r){return r}function y(){return C}function T(r){C=r;}function m(r){if(r){var t=r.value,e=r.percent,n="TOP ".concat(t);return e?"".concat(n," ").concat(e.toUpperCase()):n}}function S(r){var t=y().database;if(r)switch(t&&t.toLowerCase()){case"postgresql":case"db2":return '"'.concat(r,'"');case"transactsql":return "[".concat(r,"]");case"mysql":case"mariadb":case"bigquery":default:return "`".concat(r,"`")}}function I(r,t){var e=y().database;if(!0===t)return "'".concat(r,"'");if(r)switch(e&&e.toLowerCase()){case"mysql":case"mariadb":case"sqlite":return "`".concat(r,"`");case"postgresql":return '"'.concat(r,'"');case"transactsql":return "[".concat(r,"]");case"bigquery":case"db2":return r;default:return "`".concat(r,"`")}}function N(r){var t=[];if(!r)return t;var e=r.type,n=r.symbol,u=r.value;return t.push(e.toUpperCase()),n&&t.push(n),t.push(u.toUpperCase()),t}function R(r){if(r)return r.toUpperCase()}function _(r){return r}function O(r){if(r){var t=r.type,e=r.parentheses,n=r.value,u=n;switch(t){case"string":u="'".concat(n,"'");break;case"regex_string":u='r"'.concat(n,'"');break;case"hex_string":u="X'".concat(n,"'");break;case"double_quote_string":u='"'.concat(n,'"');break;case"single_quote_string":u="'".concat(n,"'");break;case"boolean":case"bool":u=n?"TRUE":"FALSE";break;case"null":u="NULL";break;case"star":u="*";break;case"param":u=":".concat(n);break;case"origin":u=n.toUpperCase();break;case"date":case"datetime":case"time":case"timestamp":u="".concat(t.toUpperCase()," '").concat(n,"'");}var s=r.prefix,o=r.suffix,a=[];return s&&a.push(R(s)),a.push(u),o&&o.collate&&a.push(N(o.collate).join(" ")),u=a.join(" "),e?"(".concat(u,")"):u}}function g(r,t){return function r(t,e){return Object.keys(t).filter((function(r){var e=t[r];return Array.isArray(e)||"object"===d(e)&&null!==e})).forEach((function(n){var u=t[n];if("object"!==d(u)||"param"!==u.type)return r(u,e);if(void 0===e[u.value])throw new Error("no value for parameter :".concat(u.value," found"));return t[n]=E(e[u.value]),null})),t}(JSON.parse(JSON.stringify(r)),t)}function x(r){var t=r.type,e=r.partitions;return [R(t),"(".concat(e.map((function(r){if("range"!==r.type)return O(r);var t=r.start,e=r.end,n=r.symbol;return "".concat(O(t)," ").concat(R(n)," ").concat(O(e))})).join(", "),")")].join(" ")}function U(r){if(r){var t=r.dataType,e=r.definition,n=r.anglebracket,u=R(t);if("ARRAY"!==u&&"STRUCT"!==u)return u;var s=e&&e.map((function(r){return [r.field_name,U(r.field_type)].filter(_).join(" ")})).join(", ");return n?"".concat(u,"<").concat(s,">"):"".concat(u," ").concat(s)}}function M(r){if(r){var t=[],e=r.keyword,n=r.symbol,u=r.value;return t.push(e.toUpperCase()),n&&t.push(n),t.push(O(u)),t.join(" ")}}function D(r){return r.map((function(r){var t=r.keyword,e=r.args,n=[R(t)];if(e){var u=e.keyword,s=e.columns;n.push(R(u),s.map(Ir).join(", "));}return n.join(" ")})).join(" OR ")}function k(r){return r?["RETURNING",r.columns.map(Ir).filter(_).join(", ")].join(" "):""}function $(r){return r?[R(r.keyword),R(r.args)]:[]}function F(r){if(!r||"string"==typeof r)return R(r);var t=r.keyword,e=r.seed,n=r.increment,u=r.parentheses,s=R(t);return u&&(s+="(".concat(O(e),", ").concat(O(n),")")),s}function P(r){if(r)return r.map(_r).filter(_).join(", ")}function G(r){if("string"==typeof r)return r;var t=r.window_specification;return "(".concat(function(r){var t=r.name,e=r.partitionby,n=r.orderby,u=r.window_frame_clause;return [t,dr(e,"partition by"),dr(n,"order by"),R(u)].filter(_).join(" ")}(t),")")}function H(r){var t=r.name,e=r.as_window_specification;return "".concat(t," AS ").concat(G(e))}function j(r){if(r){var t=r.as_window_specification,e=r.expr,n=r.keyword,u=r.orderby,s=r.partitionby,o=r.type;if("WINDOW"===R(o)){var a=G(t);return "OVER ".concat(a)}if("ON UPDATE"===R(o)){var i="".concat(R(o)," ").concat(R(n)),c=br(e);return c&&(i="".concat(i,"(").concat(c.join(", "),")")),i}var l=dr(s,"partition by"),f=dr(u,"order by");return "OVER (".concat([l,f].filter(_).join(" "),")")}}function Y(r){var t=r.collate,e=r.target,n=r.expr,u=r.symbol,s=r.as,o=e.length,a=e.dataType,i=e.parentheses,c=e.scale,l="";null!=o&&(l=c?"".concat(o,", ").concat(c):o),i&&(l="(".concat(l,")"));var f=br(n),b="::",v="";return "as"===u&&(f="CAST(".concat(f),v=")",b=" ".concat(u.toUpperCase()," ")),s&&(v+=" AS ".concat(I(s))),t&&(v+=" ".concat(N(t).join(" "))),"".concat(f).concat(b).concat(a).concat(l).concat(v)}function B(r){var t=r.args,e=r.name,n=r.parentheses,u=r.over,s=N(r.collate).join(" "),o=j(u);if(!t)return [e,o].filter(_).join(" ");var a="".concat(e,"(").concat(br(t).join(", "),")");return [n?"(".concat(a,")"):a,s,o].filter(_).join(" ")}function X(r){return function(r){if(Array.isArray(r))return W(r)}(r)||function(r){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(r))return Array.from(r)}(r)||function(r,t){if(!r)return;if("string"==typeof r)return W(r,t);var e=Object.prototype.toString.call(r).slice(8,-1);"Object"===e&&r.constructor&&(e=r.constructor.name);if("Map"===e||"Set"===e)return Array.from(r);if("Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))return W(r,t)}(r)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function W(r,t){(null==t||t>r.length)&&(t=r.length);for(var e=0,n=new Array(t);e<t;e++)n[e]=r[e];return n}function V(r){return r?[R(r.prefix),br(r.value),R(r.suffix)]:[]}function K(r){return r?r.fetch?(e=(t=r).fetch,n=t.offset,[].concat(X(V(n)),X(V(e))).filter(_).join(" ")):function(r){var t=r.seperator;return w("LIMIT",r.value.map(br).join("".concat("offset"===t?" ":"").concat(R(t)," ")))}(r):"";var t,e,n;}function q(r){if(r&&0!==r.length){var t=r[0].recursive?"RECURSIVE ":"",e=r.map((function(r){var t=r.name,e=r.stmt,n=r.columns,u=Array.isArray(n)?"(".concat(n.join(", "),")"):"";return "".concat(O(t)).concat(u," AS (").concat(br(e),")")})).join(", ");return "WITH ".concat(t).concat(e)}}function Z(r,t){var e;if("undefined"==typeof Symbol||null==r[Symbol.iterator]){if(Array.isArray(r)||(e=function(r,t){if(!r)return;if("string"==typeof r)return z(r,t);var e=Object.prototype.toString.call(r).slice(8,-1);"Object"===e&&r.constructor&&(e=r.constructor.name);if("Map"===e||"Set"===e)return Array.from(r);if("Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))return z(r,t)}(r))||t&&r&&"number"==typeof r.length){e&&(r=e);var n=0,u=function(){};return {s:u,n:function(){return n>=r.length?{done:!0}:{done:!1,value:r[n++]}},e:function(r){throw r},f:u}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var s,o=!0,a=!1;return {s:function(){e=r[Symbol.iterator]();},n:function(){var r=e.next();return o=r.done,r},e:function(r){a=!0,s=r;},f:function(){try{o||null==e.return||e.return();}finally{if(a)throw s}}}}function z(r,t){(null==t||t>r.length)&&(t=r.length);for(var e=0,n=new Array(t);e<t;e++)n[e]=r[e];return n}function J(r){if(!r||0===r.length)return "";var t,e=[],n=Z(r);try{for(n.s();!(t=n.n()).done;){var u=t.value,s=u.table,o=u.column,a=u.value,i=[[s,o].filter(_).map((function(r){return I(r)})).join(".")],c="";a&&(c=br(a),i.push("=",c)),e.push(i.filter(_).join(" "));}}catch(r){n.e(r);}finally{n.f();}return e.join(", ")}function Q(r){if("select"===r.type)return sr(r);var t=r.map(br);return "(".concat(t.join("), ("),")")}function rr(r){if(!r)return "";var t=["PARTITION","("];if(Array.isArray(r))t.push(r.map(I).join(", "));else {var e=r.value;t.push(e.map(br).join(", "));}return t.push(")"),t.filter(_).join("")}function tr(r){var t=r.table,e=r.type,n=r.prefix,u=void 0===n?"into":n,s=r.columns,o=r.values,a=r.where,i=r.on_duplicate_update,c=r.partition,l=r.returning,f=r.set,b=i||{},v=b.keyword,d=b.set,L=[R(e),R(u),nr(t),rr(c)];return Array.isArray(s)&&L.push("(".concat(s.map(I).join(", "),")")),L.push(p(Array.isArray(o)?"VALUES":"",Q,o)),L.push(p("SET",J,f)),L.push(p("WHERE",br,a)),L.push(k(l)),L.push(p(v,J,d)),L.filter(_).join(" ")}function er(r){var t=r.table,e=r.db,n=r.as,u=r.expr,s=r.schema,o=I(e),a=I(s),i=t&&I(t);u&&"values"===u.type&&(i="(".concat(p("VALUES",Q,u.values),")")),u&&"values"!==u.type&&(i=br(u));var c=[o,a,i].filter(_).join(".");return n?"".concat(c," AS ").concat(I(n)):c}function nr(r){if("UNNEST"===R(r.type))return function(r){var t=r.type,e=r.as,n=r.expr,u=r.with_offset;return [R(t),"(".concat(n&&br(n)||" ",")"),p("AS",I,e),p(R(u&&u.keyword),I,u&&u.as)].filter(_).join(" ")}(r);var t=r[0],e=[];if("dual"===t.type)return "DUAL";e.push(er(t));for(var n=1;n<r.length;++n){var u=r[n],s=u.on,o=u.using,a=u.join,i=[];i.push(a?" ".concat(a):","),i.push(er(u)),i.push(p("ON",br,s)),o&&i.push("USING (".concat(o.map(I).join(", "),")")),e.push(i.filter(_).join(" "));}return e.filter(_).join("")}function ur(r){var t=r.keyword,e=r.symbol,n=r.value,u=[t.toUpperCase()];return e&&u.push(e),u.push(n),u.join(" ")}function sr(r){var t=r.as_struct_val,e=r.columns,n=r.distinct,u=r.from,s=r.for_sys_time_as_of,o=void 0===s?{}:s,a=r.for_update,i=r.groupby,c=r.having,l=r.limit,f=r.options,b=r.orderby,v=r.parentheses_symbol,d=r.top,L=r.window,C=r.with,E=r.where,h=[q(C),"SELECT",R(t)];h.push(m(d)),Array.isArray(f)&&h.push(f.join(" ")),h.push(n,gr(e,u)),h.push(p("FROM",nr,u));var A=o||{},y=A.keyword,T=A.expr;h.push(p(y,br,T)),h.push(p("WHERE",br,E)),h.push(w("GROUP BY",vr(i).join(", "))),h.push(p("HAVING",br,c)),h.push(p("WINDOW",br,L)),h.push(dr(b,"order by")),h.push(K(l)),h.push(R(a));var S=h.filter(_).join(" ");return v?"(".concat(S,")"):S}function or(r){var t,e,n,u,s=r.suffix,o=r.keyword,a="";switch(R(o)){case"BINLOG":e=(t=r).in,n=t.from,u=t.limit,a=[p("IN",O,e&&e.right),p("FROM",nr,n),K(u)].filter(_).join(" ");break;case"CHARACTER":case"COLLATION":a=function(r){var t=r.expr;if(t)return "LIKE"===R(t.op)?p("LIKE",O,t.right):p("WHERE",br,t)}(r);break;case"GRANTS":a=function(r){var t=r.for;if(t){var e=t.user,n=t.host,u=t.role_list,s="'".concat(e,"'");return n&&(s+="@'".concat(n,"'")),["FOR",s,u&&"USING",u&&u.map((function(r){return "'".concat(r,"'")})).join(", ")].filter(_).join(" ")}}(r);}return ["SHOW",R(o),R(s),a].filter(_).join(" ")}function ar(r){return (ar="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(r){return typeof r}:function(r){return r&&"function"==typeof Symbol&&r.constructor===Symbol&&r!==Symbol.prototype?"symbol":typeof r})(r)}function ir(r){var t=r.expr_list;switch(R(r.type)){case"STRUCT":return "(".concat(gr(t),")");case"ARRAY":return function(r){var t=r.array_path,e=r.brackets,n=r.expr_list,u=r.parentheses;if(!n)return "[".concat(gr(t),"]");if(Array.isArray(n))return "[".concat(n.map((function(r){return "(".concat(gr(r),")")})).filter(_).join(", "),"]");var s=br(n);return e?"[".concat(s,"]"):u?"(".concat(s,")"):s}(r);default:return ""}}function cr(r){var t=r.definition,e=[R(r.keyword)];return t&&"object"===ar(t)&&(e.length=0,e.push(U(t))),e.push(ir(r)),e.filter(_).join("")}function lr(r){return (lr="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(r){return typeof r}:function(r){return r&&"function"==typeof Symbol&&r.constructor===Symbol&&r!==Symbol.prototype?"symbol":typeof r})(r)}var fr={alter:Dr,aggr_func:function(r){var t=r.args,e=r.over,n=r.orderby,u=r.within_group_orderby,s=br(t.expr),o=r.name,a=j(e);if(t.distinct){var i=t.expr.parentheses?"":" ";s=["DISTINCT",s].join(i);}t.orderby&&(s="".concat(s," ").concat(dr(t.orderby,"order by"))),n&&(s="".concat(s," ").concat(dr(n,"order by")));var c=u?"WITHIN GROUP (".concat(dr(u,"order by"),")"):"";return ["".concat(o,"(").concat(s,")"),c,a].filter(_).join(" ")},window_func:function(r){var t=r.over;return [function(r){var t=r.args,e=r.name,n=r.consider_nulls,u=void 0===n?"":n,s=t?br(t).join(", "):"",o=function(r){switch(r){case"NTH_VALUE":case"LEAD":case"LAG":return !1;default:return !0}}(e);return [e,"(",s,!o&&")",u&&" ",u,o&&")"].filter(_).join("")}(r),j(t)].filter(_).join(" ")},array:cr,assign:function(r){var t=r.left,e=r.right,n=r.symbol,u=r.keyword;t.keyword=u;var s=br(t),o=br(e);return "".concat(s," ").concat(n," ").concat(o)},binary_expr:function(r){var t=r.operator,e=br(r.right),n=!1;if(Array.isArray(e)){switch(t){case"=":t="IN";break;case"!=":t="NOT IN";break;case"BETWEEN":case"NOT BETWEEN":n=!0,e="".concat(e[0]," AND ").concat(e[1]);}n||(e="(".concat(e.join(", "),")"));}var u=[br(r.left),t,e].join(" ");return r.parentheses?"(".concat(u,")"):u},case:function(r){var t=["CASE"],e=r.args;r.expr&&t.push(br(r.expr));for(var n=0,u=e.length;n<u;++n)t.push(e[n].type.toUpperCase()),e[n].cond&&(t.push(br(e[n].cond)),t.push("THEN")),t.push(br(e[n].result));return t.push("END"),t.join(" ")},cast:Y,column_ref:Ir,extract:function(r){var t=r.args,e=r.type,n=t.field,u=t.cast_type,s=t.source,o=["".concat(R(e),"(").concat(R(n)),"FROM",R(u),br(s)];return "".concat(o.filter(_).join(" "),")")},function:B,interval:function(r){var t=r.expr,e=r.unit;return ["INTERVAL",br(t),R(e)].filter(_).join(" ")},show:or,struct:cr,window:function(r){return r.expr.map(H).join(", ")}};function br(r){if(r){var t=r;if(r.ast){var e=t.ast;Reflect.deleteProperty(t,e);for(var n=0,u=Object.keys(e);n<u.length;n++){var s=u[n];t[s]=e[s];}}return fr[t.type]?fr[t.type](t):O(t)}}function vr(r){return r?r.map(br):[]}function dr(r,t){if(!Array.isArray(r))return "";var e=[],n=R(t);switch(n){case"ORDER BY":e=r.map((function(r){return "".concat(br(r.expr)," ").concat(r.type)}));break;case"PARTITION BY":default:e=r.map((function(r){return "".concat(Ir(r.expr))}));}return w(n,e.join(", "))}function Lr(r){return function(r){if(Array.isArray(r))return Cr(r)}(r)||function(r){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(r))return Array.from(r)}(r)||function(r,t){if(!r)return;if("string"==typeof r)return Cr(r,t);var e=Object.prototype.toString.call(r).slice(8,-1);"Object"===e&&r.constructor&&(e=r.constructor.name);if("Map"===e||"Set"===e)return Array.from(r);if("Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))return Cr(r,t)}(r)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Cr(r,t){(null==t||t>r.length)&&(t=r.length);for(var e=0,n=new Array(t);e<t;e++)n[e]=r[e];return n}function pr(r){if(!r)return [];var t=r.keyword,e=r.type;return [t.toUpperCase(),e.toUpperCase()]}function wr(r){if(r){var t=r.type,e=r.expr,n=r.symbol,u=t.toUpperCase(),s=[];switch(s.push(u),u){case"KEY_BLOCK_SIZE":n&&s.push(n),s.push(O(e));break;case"BTREE":case"HASH":s.length=0,s.push.apply(s,Lr(pr(r)));break;case"WITH PARSER":s.push(e);break;case"VISIBLE":case"INVISIBLE":break;case"COMMENT":s.shift(),s.push(M(r));break;case"DATA_COMPRESSION":s.push(n,R(e.value),x(e.on));break;default:s.push(n,O(e));}return s.filter(_).join(" ")}}function Er(r){return r?r.map(wr):[]}function hr(r){var t=r.constraint_type,e=r.index_type,n=r.index_options,u=void 0===n?[]:n,s=r.definition,o=[];if(o.push.apply(o,Lr(pr(e))),s&&s.length){var a="CHECK"===R(t)?"(".concat(br(s[0]),")"):"(".concat(s.map((function(r){return I(r)})).join(", "),")");o.push(a);}return o.push(Er(u).join(" ")),o}function Ar(r){return function(r){if(Array.isArray(r))return yr(r)}(r)||function(r){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(r))return Array.from(r)}(r)||function(r,t){if(!r)return;if("string"==typeof r)return yr(r,t);var e=Object.prototype.toString.call(r).slice(8,-1);"Object"===e&&r.constructor&&(e=r.constructor.name);if("Map"===e||"Set"===e)return Array.from(r);if("Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))return yr(r,t)}(r)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function yr(r,t){(null==t||t>r.length)&&(t=r.length);for(var e=0,n=new Array(t);e<t;e++)n[e]=r[e];return n}function Tr(r){if(r){var t=r.constraint,e=r.constraint_type,n=r.enforced,u=r.index,s=r.keyword,o=r.reference_definition,a=[];return a.push(R(s)),a.push(I(t)),a.push(R(e)),a.push(I(u)),a.push.apply(a,Ar(hr(r))),a.push.apply(a,Ar(Rr(o))),a.push(R(n)),a.filter(_).join(" ")}}function mr(r){return function(r){if(Array.isArray(r))return Sr(r)}(r)||function(r){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(r))return Array.from(r)}(r)||function(r,t){if(!r)return;if("string"==typeof r)return Sr(r,t);var e=Object.prototype.toString.call(r).slice(8,-1);"Object"===e&&r.constructor&&(e=r.constructor.name);if("Map"===e||"Set"===e)return Array.from(r);if("Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))return Sr(r,t)}(r)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Sr(r,t){(null==t||t>r.length)&&(t=r.length);for(var e=0,n=new Array(t);e<t;e++)n[e]=r[e];return n}function Ir(r){var t=r.arrow,e=r.as,n=r.collate,u=r.column,s=r.isDual,o=r.schema,a=r.table,i=r.parentheses,c=r.property,l=r.suffix,f="*"===u?"*":function(r,t){if("string"==typeof r)return I(r,t);var e=r.expr,n=r.offset,u=r.suffix;return [br(e),n,u].filter(_).join("")}(u,s);a&&(f="".concat(I(a),".").concat(f)),o&&(f="".concat(I(o),".").concat(f));var b=[f,p("AS",br,e),p(t,O,c)];n&&b.push(N(n).join(" ")),b.push(R(l));var v=b.filter(_).join(" ");return i?"(".concat(v,")"):v}function Nr(r){var t=r||{},e=t.dataType,n=t.length,u=t.suffix,s=t.scale,o=t.expr,a=e;return null!=n&&(a+="(".concat([n,s].filter((function(r){return null!=r})).join(", "),")")),u&&u.length&&(a+=" ".concat(u.join(" "))),o&&(a+=br(o)),a}function Rr(r){var t=[];if(!r)return t;var e=r.definition,n=r.keyword,u=r.match,s=r.table,o=r.on_delete,a=r.on_update;return t.push(n.toUpperCase()),t.push(nr(s)),t.push("(".concat(e.map(I).join(", "),")")),t.push(R(u)),t.push.apply(t,mr(N(o))),t.push.apply(t,mr(N(a))),t.filter(_)}function _r(r){var t=r.column,e=r.collate,n=r.nulls,u=r.opclass,s=r.order;return [br(t),p(e&&e.type,I,e&&e.value),u,R(s),R(n)].filter(_).join(" ")}function Or(r){var t=[],e=Ir(r.column),n=Nr(r.definition);t.push(e),t.push(n);var u=function(r){var t=[],e=r.nullable,n=r.character_set,u=r.check,s=r.comment,o=r.collate,a=r.storage,i=r.default_val,c=r.auto_increment,l=r.unique_or_primary,f=r.column_format,b=r.reference_definition;if(t.push(R(e&&e.value)),i){var v=i.type,d=i.value;t.push(v.toUpperCase(),br(d));}return t.push(Tr(u)),t.push(F(c),R(l),M(s)),t.push.apply(t,mr(N(n))),t.push.apply(t,mr(N(o))),t.push.apply(t,mr(N(f))),t.push.apply(t,mr(N(a))),t.push.apply(t,mr(Rr(b))),t.filter(_).join(" ")}(r);return t.push(u),t.filter(_).join(" ")}function gr(r,t){if(!r||"*"===r)return r;var e=function(r){var t=Array.isArray(r)&&r[0];return !(!t||"dual"!==t.type)}(t),n=[],u=r.expr_list,s=r.star,o=r.type;n.push(s,R(o));var a=(u||r).map((function(r){return function(r,t){var e=r.expr;if("cast"===r.type)return Y(r);t&&(e.isDual=t);var n=br(e);return e.parentheses&&Reflect.has(e,"array_index")&&(n="(".concat(n,")")),e.array_index&&(n="".concat(n,"[").concat(e.array_index.number,"]")),null!==r.as&&(n="".concat(n," AS "),n=/^(`?)[a-z_][0-9a-z_]*(`?)$/i.test(r.as)?"".concat(n).concat(I(r.as)):"".concat(n).concat(S(r.as))),n}(r,e)})).join(", ");return n.push([o&&"(",a,o&&")"].filter(_).join("")),n.filter(_).join(" ")}function xr(r){return function(r){if(Array.isArray(r))return Ur(r)}(r)||function(r){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(r))return Array.from(r)}(r)||function(r,t){if(!r)return;if("string"==typeof r)return Ur(r,t);var e=Object.prototype.toString.call(r).slice(8,-1);"Object"===e&&r.constructor&&(e=r.constructor.name);if("Map"===e||"Set"===e)return Array.from(r);if("Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))return Ur(r,t)}(r)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Ur(r,t){(null==t||t>r.length)&&(t=r.length);for(var e=0,n=new Array(t);e<t;e++)n[e]=r[e];return n}function Mr(r){if(!r)return [];var t,e,n,u,s=r.resource;switch(s){case"column":return Or(r);case"index":return e=[],n=(t=r).keyword,u=t.index,e.push(R(n)),e.push(u),e.push.apply(e,Lr(hr(t))),e.filter(_).join(" ");case"constraint":return Tr(r);case"sequence":return [R(r.prefix),br(r.value)].filter(_).join(" ");default:throw new Error("unknown resource = ".concat(s," type"))}}function Dr(r){if(!r)return "";var t=r.action,e=r.create_definitions,n=r.first_after,u=r.if_not_exists,s=r.keyword,o=r.old_column,a=r.prefix,i=r.resource,c=r.symbol,l="",f=[];switch(i){case"column":f=[Or(r)];break;case"index":f=hr(r),l=r[i];break;case"table":l=I(r[i]);break;case"algorithm":case"lock":l=[c,R(r[i])].filter(_).join(" ");break;case"constraint":l=I(r[i]),f=[Mr(e)];break;case"key":l=I(r[i]);}return [R(t),R(s),R(u),o&&Ir(o),R(a),l,f.filter(_).join(" "),n&&"".concat(R(n.keyword)," ").concat(Ir(n.column))].filter(_).join(" ")}function kr(r){return function(r){if(Array.isArray(r))return Pr(r)}(r)||function(r){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(r))return Array.from(r)}(r)||Fr(r)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function $r(r,t){var e;if("undefined"==typeof Symbol||null==r[Symbol.iterator]){if(Array.isArray(r)||(e=Fr(r))||t&&r&&"number"==typeof r.length){e&&(r=e);var n=0,u=function(){};return {s:u,n:function(){return n>=r.length?{done:!0}:{done:!1,value:r[n++]}},e:function(r){throw r},f:u}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var s,o=!0,a=!1;return {s:function(){e=r[Symbol.iterator]();},n:function(){var r=e.next();return o=r.done,r},e:function(r){a=!0,s=r;},f:function(){try{o||null==e.return||e.return();}finally{if(a)throw s}}}}function Fr(r,t){if(r){if("string"==typeof r)return Pr(r,t);var e=Object.prototype.toString.call(r).slice(8,-1);return "Object"===e&&r.constructor&&(e=r.constructor.name),"Map"===e||"Set"===e?Array.from(r):"Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e)?Pr(r,t):void 0}}function Pr(r,t){(null==t||t>r.length)&&(t=r.length);for(var e=0,n=new Array(t);e<t;e++)n[e]=r[e];return n}function Gr(r){var t=r.type,e=r.keyword,n=r.name,u=[R(t),R(e)];switch(e){case"table":u.push(nr(n));break;case"procedure":u.push(I(n));break;case"index":u.push(Ir(n),"ON",er(r.table),r.options&&r.options.map(Dr).filter(_).join(" "));}return u.filter(_).join(" ")}function Hr(r){var t=r.type,e=r.keyword,n=r.tables,u=[t.toUpperCase(),R(e)];if("UNLOCK"===t.toUpperCase())return u.join(" ");var s,o=[],a=$r(n);try{var i=function(){var r=s.value,t=r.table,e=r.lock_type,n=[er(t)];if(e){n.push(["prefix","type","suffix"].map((function(r){return R(e[r])})).filter(_).join(" "));}o.push(n.join(" "));};for(a.s();!(s=a.n()).done;)i();}catch(r){a.e(r);}finally{a.f();}return u.push.apply(u,[o.join(", ")].concat(kr(function(r){var t=r.lock_mode,e=r.nowait,n=[];if(t){var u=t.mode;n.push(u.toUpperCase());}return e&&n.push(e.toUpperCase()),n}(r)))),u.filter(_).join(" ")}fr.var=function(r){var t=r.prefix,e=void 0===t?"@":t,n=r.name,u=r.members,s=r.keyword,o=[];s&&o.push(s);var a=u&&u.length>0?"".concat(n,".").concat(u.join(".")):n;return o.push("".concat(e||"").concat(a)),o.join(" ")},fr.expr_list=function(r){var t=vr(r.value);return r.parentheses?"(".concat(t.join(", "),")"):t},fr.select=function(r){var t="object"===lr(r._next)?Yr(r):sr(r);return r.parentheses?"(".concat(t,")"):t},fr.unary_expr=function(r){var t=r.operator,e=r.parentheses,n=r.expr,u="-"===t||"+"===t?"":" ",s="".concat(t).concat(u).concat(br(n));return e?"(".concat(s,")"):s};var jr={alter:function(r){var t=r.type,e=r.table,n=r.expr,u=void 0===n?[]:n;return [R(t),"TABLE",nr(e),u.map(br).join(", ")].filter(_).join(" ")},analyze:function(r){var t=r.type,e=r.table;return [R(t),er(e)].join(" ")},attach:function(r){var t=r.type,e=r.database,n=r.expr,u=r.as,s=r.schema;return [R(t),R(e),br(n),R(u),I(s)].filter(_).join(" ")},create:function(r){var t=r.keyword,e="";switch(t.toLowerCase()){case"table":e=function(r){var t=r.type,e=r.keyword,n=r.table,u=r.like,s=r.as,o=r.temporary,a=r.if_not_exists,i=r.create_definitions,c=r.table_options,l=r.ignore_replace,f=r.query_expr,b=[R(t),R(o),R(e),R(a),nr(n)];if(u){var v=u.type,d=nr(u.table);return b.push(R(v),d),b.filter(_).join(" ")}return i&&b.push("(".concat(i.map(Mr).join(", "),")")),c&&b.push(c.map(ur).join(" ")),b.push(R(l),R(s)),f&&b.push(Yr(f)),b.filter(_).join(" ")}(r);break;case"trigger":e=function(r){var t=r.constraint,e=r.constraint_kw,n=r.deferrable,u=r.events,s=r.execute,o=r.for_each,a=r.from,i=r.location,c=r.keyword,l=r.type,f=r.table,b=r.when,v=[R(l),R(e),R(c),I(t),R(i)],d=D(u);return v.push(d,"ON",er(f)),a&&v.push("FROM",er(a)),v.push.apply(v,xr($(n)).concat(xr($(o)))),b&&v.push(R(b.type),br(b.cond)),v.push(R(s.keyword),B(s.expr)),v.filter(_).join(" ")}(r);break;case"extension":e=function(r){var t=r.extension,e=r.from,n=r.if_not_exists,u=r.keyword,s=r.schema,o=r.type,a=r.with,i=r.version;return [R(o),R(u),R(n),O(t),R(a),p("SCHEMA",O,s),p("VERSION",O,i),p("FROM",O,e)].filter(_).join(" ")}(r);break;case"index":e=function(r){var t=r.concurrently,e=r.filestream_on,n=r.keyword,u=r.include,s=r.index_columns,o=r.index_type,a=r.index_using,i=r.index,c=r.on,l=r.index_options,f=r.algorithm_option,b=r.lock_option,v=r.on_kw,d=r.table,L=r.tablespace,C=r.type,w=r.where,E=r.with,h=r.with_before_where,A=E&&"WITH (".concat(Er(E).join(", "),")"),y=u&&"".concat(R(u.keyword)," (").concat(u.columns.map((function(r){return I(r)})).join(", "),")"),T=[R(C),R(o),R(n),R(t),I(i),R(v),er(d)].concat(xr(pr(a)),["(".concat(P(s),")"),y,Er(l).join(" "),Dr(f),Dr(b),p("TABLESPACE",O,L)]);return h?T.push(A,p("WHERE",br,w)):T.push(p("WHERE",br,w),A),T.push(p("ON",br,c),p("FILESTREAM_ON",O,e)),T.filter(_).join(" ")}(r);break;case"sequence":e=function(r){var t=r.type,e=r.keyword,n=r.sequence,u=r.temporary,s=r.if_not_exists,o=r.create_definitions,a=[R(t),R(u),R(e),R(s),nr(n)];return o&&a.push(o.map(Mr).join(" ")),a.filter(_).join(" ")}(r);break;case"database":e=function(r){var t=r.type,e=r.keyword,n=r.database,u=r.if_not_exists,s=r.create_definitions,o=[R(t),R(e),R(u),S(n)];return s&&o.push(s.map(ur).join(" ")),o.filter(_).join(" ")}(r);break;default:throw new Error("unknown create resource ".concat(t))}return e},select:sr,delete:function(r){var t=["DELETE"],e=r.columns,n=r.from,u=r.table,s=r.where,o=r.orderby,a=r.limit,i=gr(e,n);return t.push(i),Array.isArray(u)&&(1===u.length&&!0===u[0].addition||t.push(nr(u))),t.push(p("FROM",nr,n)),t.push(p("WHERE",br,s)),t.push(dr(o,"order by")),t.push(K(a)),t.filter(_).join(" ")},update:function(r){var t=r.table,e=r.set,n=r.where,u=r.orderby,s=r.limit,o=r.returning;return ["UPDATE",nr(t),p("SET",J,e),p("WHERE",br,n),dr(u,"order by"),K(s),k(o)].filter(_).join(" ")},insert:tr,drop:Gr,truncate:Gr,replace:tr,declare:function(r){var t=r.type,e=r.declare,n=[R(t)],u=e.map((function(r){var t=r.at,e=r.name,n=r.as,u=r.prefix,s=r.definition,o=r.keyword,a=["".concat(t).concat(e),R(n)];switch(o){case"variable":a.push(Nr(u)),s&&a.push("=",br(s));break;case"cursor":a.push(R(u));break;case"table":a.push(R(u),"(".concat(s.map(Mr).join(", "),")"));}return a.filter(_).join(" ")})).join(", ");return n.push(u),n.join(" ")},use:function(r){var t=r.type,e=r.db,n=R(t),u=I(e);return "".concat(n," ").concat(u)},rename:function(r){var t=r.type,e=r.table,n=[],u="".concat(t&&t.toUpperCase()," TABLE");if(e){var s,o=$r(e);try{for(o.s();!(s=o.n()).done;){var a=s.value.map(er);n.push(a.join(" TO "));}}catch(r){o.e(r);}finally{o.f();}}return "".concat(u," ").concat(n.join(", "))},call:function(r){var t=br(r.expr);return "".concat("CALL"," ").concat(t)},desc:function(r){var t=r.type,e=r.table,n=R(t);return "".concat(n," ").concat(I(e))},set:function(r){var t=br(r.expr);return "".concat("SET"," ").concat(t)},lock:Hr,unlock:Hr,show:or};function Yr(r){for(var t=jr[r.type],e=[t(r)],n=r,u=n._orderby,s=n._limit;r._next;){var o=(r.union||"union").toUpperCase();e.push(o,t(r._next)),r=r._next;}return e.push(dr(u,"order by"),K(s)),e.filter(_).join(" ")}var Br=["analyze","attach","select","delete","update","insert","drop","rename","truncate","call","desc","use","alter","set","create","lock","unlock","bigquery","declare","show","replace"];function Xr(r){var t=r&&r.ast?r.ast:r;if(!Br.includes(t.type))throw new Error("".concat(t.type," statements not supported at the moment"))}function Wr(r){return Array.isArray(r)?(r.forEach(Xr),function(r){for(var t=[],e=0,n=r.length;e<n;++e){var u=r[e]&&r[e].ast;u||(u=r[e]),t.push(Yr(u));}return t.join(" ; ")}(r)):(Xr(r),"bigquery"===r.type?(e=(t=r).with,n=t.parentheses,u=t.select,s=t.orderby,o=t.limit,(a=[q(e),n&&"(",Yr(u),n&&")"]).push(dr(s,"order by"),K(o)),a.filter((function(r){return r})).join(" ")):Yr(r));var t,e,n,u,s,o,a;}function Vr(r,t){var e;if("undefined"==typeof Symbol||null==r[Symbol.iterator]){if(Array.isArray(r)||(e=function(r,t){if(!r)return;if("string"==typeof r)return Kr(r,t);var e=Object.prototype.toString.call(r).slice(8,-1);"Object"===e&&r.constructor&&(e=r.constructor.name);if("Map"===e||"Set"===e)return Array.from(r);if("Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))return Kr(r,t)}(r))||t&&r&&"number"==typeof r.length){e&&(r=e);var n=0,u=function(){};return {s:u,n:function(){return n>=r.length?{done:!0}:{done:!1,value:r[n++]}},e:function(r){throw r},f:u}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var s,o=!0,a=!1;return {s:function(){e=r[Symbol.iterator]();},n:function(){var r=e.next();return o=r.done,r},e:function(r){a=!0,s=r;},f:function(){try{o||null==e.return||e.return();}finally{if(a)throw s}}}}function Kr(r,t){(null==t||t>r.length)&&(t=r.length);for(var e=0,n=new Array(t);e<t;e++)n[e]=r[e];return n}function qr(r,t){for(var e=0;e<t.length;e++){var n=t[e];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(r,n.key,n);}}var Zr=function(){function r(){!function(r,t){if(!(r instanceof t))throw new TypeError("Cannot call a class as a function")}(this,r);}var t,e;return t=r,(e=[{key:"astify",value:function(r){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:L,e=this.parse(r,t);return e&&e.ast}},{key:"sqlify",value:function(r){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:L;return T(t),Wr(r)}},{key:"parse",value:function(r){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:L,e=t.database,n=void 0===e?"mysql":e;T(t);var u=n.toLowerCase();if(v[u])return v[u](r.trim());throw new Error("".concat(n," is not supported currently"))}},{key:"whiteListCheck",value:function(r,t){var e=arguments.length>2&&void 0!==arguments[2]?arguments[2]:L;if(t&&0!==t.length){var n=e.type,u=void 0===n?"table":n;if(!this["".concat(u,"List")]||"function"!=typeof this["".concat(u,"List")])throw new Error("".concat(u," is not valid check mode"));var s,o=this["".concat(u,"List")].bind(this),a=o(r,e),i=!0,c="",l=Vr(a);try{for(l.s();!(s=l.n()).done;){var f,b=s.value,v=!1,d=Vr(t);try{for(d.s();!(f=d.n()).done;){var C=f.value,p=new RegExp(C,"i");if(p.test(b)){v=!0;break}}}catch(r){d.e(r);}finally{d.f();}if(!v){c=b,i=!1;break}}}catch(r){l.e(r);}finally{l.f();}if(!i)throw new Error("authority = '".concat(c,"' is required in ").concat(u," whiteList to execute SQL = '").concat(r,"'"))}}},{key:"tableList",value:function(r,t){var e=this.parse(r,t);return e&&e.tableList}},{key:"columnList",value:function(r,t){var e=this.parse(r,t);return e&&e.columnList}}])&&qr(t.prototype,e),r}();commonjsGlobal&&commonjsGlobal.window&&(commonjsGlobal.window.NodeSQLParser={Parser:Zr,util:n});}]));

    });

    var mysql = createCommonjsModule(function (module, exports) {
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.MySQLParser = void 0;

    class MySQLParser {
        constructor() {
            this.mysqlAstParser = new nodeSqlParser.Parser();
        }
        parse(sql) {
            const ast = this.mysqlAstParser.astify(sql, {
                database: "mysql",
            });
            const tables = [];
            for (const node of ast) {
                switch (node === null || node === void 0 ? void 0 : node.type) {
                    case "create":
                        switch (node === null || node === void 0 ? void 0 : node.keyword) {
                            case "table":
                                tables.push(this.parseTable(node));
                                break;
                        }
                        break;
                }
            }
            return tables;
        }
        // 테이블 구성 분석
        parseTable(node) {
            var _a, _b, _c, _d, _e, _f, _g, _h, _j;
            const table = {
                tableName: (_b = (_a = node === null || node === void 0 ? void 0 : node.table) === null || _a === void 0 ? void 0 : _a[0]) === null || _b === void 0 ? void 0 : _b.table,
                columns: [],
            };
            for (const nodeOfTable of node.create_definitions) {
                switch (nodeOfTable.resource) {
                    case "column":
                        const columnName = (_c = nodeOfTable === null || nodeOfTable === void 0 ? void 0 : nodeOfTable.column) === null || _c === void 0 ? void 0 : _c.column;
                        const dbType = nodeOfTable === null || nodeOfTable === void 0 ? void 0 : nodeOfTable.definition.dataType;
                        const isAutoIncrement = nodeOfTable.auto_increment === "auto_increment";
                        const isNotNull = ((_d = nodeOfTable.nullable) === null || _d === void 0 ? void 0 : _d.type) === "not null";
                        const isPrimaryKey = false; // ???
                        const defaultValue = (_g = (_f = (_e = nodeOfTable.default_val) === null || _e === void 0 ? void 0 : _e.value) === null || _f === void 0 ? void 0 : _f.value) !== null && _g !== void 0 ? _g : null;
                        const comment = (_j = (_h = nodeOfTable.comment) === null || _h === void 0 ? void 0 : _h.value) === null || _j === void 0 ? void 0 : _j.value;
                        const column = {
                            name: columnName,
                            dbType,
                            tsType: this.convertDbTypeToTsType(dbType),
                            javaType: this.convertDbTypeToJavaType(dbType),
                            pythonType: this.convertDbTypeToSQLAlchemyType(dbType),
                            isNotNull,
                            isPrimaryKey,
                            default: defaultValue,
                            isAutoIncrement,
                            comment,
                        };
                        table.columns.push(column);
                        break;
                    case "constraint":
                        switch (nodeOfTable.constraint_type) {
                            case "primary key":
                                table.columns.forEach((column) => {
                                    var _a;
                                    if ((_a = nodeOfTable === null || nodeOfTable === void 0 ? void 0 : nodeOfTable.definition) === null || _a === void 0 ? void 0 : _a.includes(column.name)) {
                                        column.isPrimaryKey = true;
                                    }
                                });
                                break;
                        }
                        break;
                }
            }
            return table;
        }
        // 데이터베이스의 컬럼타입을 타입스크립트 타입으로 변환
        convertDbTypeToTsType(typename) {
            if ([
                "tinyint",
                "smallint",
                "mediumint",
                "int",
                "bigint",
                "decimal",
                "float",
                "double",
            ].includes(typename.toLocaleLowerCase())) {
                return "number";
            }
            else if (["bool", "boolean"].includes(typename.toLocaleLowerCase())) {
                return "boolean";
            }
            else if ([
                "char",
                "varchar",
                "tinytext",
                "text",
                "mediumtext",
                "longtext",
            ].includes(typename.toLocaleLowerCase())) {
                return "string";
            }
            else if (["date", "time", "datetime", "timestamp", "year"].includes(typename.toLocaleLowerCase())) {
                return "Date";
            }
            else {
                return "string";
            }
        }
        // 데이터베이스의 컬럼타입을 자바 타입으로 변환
        convertDbTypeToJavaType(typename) {
            if (["tinyint", "smallint", "mediumint", "int", "bigint"].includes(typename.toLocaleLowerCase())) {
                switch (typename.toLocaleLowerCase()) {
                    case "tinyint":
                        return "Byte";
                    case "smallint":
                        return "Short";
                    case "mediumint":
                    case "int":
                        return "Integer";
                    case "bigint":
                        return "Long";
                }
            }
            else if (["decimal", "float", "double"].includes(typename.toLocaleLowerCase())) {
                switch (typename.toLocaleLowerCase()) {
                    case "decimal":
                        return "BigDecimal";
                    case "float":
                        return "Float";
                    case "double":
                        return "Double";
                }
            }
            else if (["bool", "boolean"].includes(typename.toLocaleLowerCase())) {
                return "Boolean";
            }
            else if ([
                "char",
                "varchar",
                "tinytext",
                "text",
                "mediumtext",
                "longtext",
            ].includes(typename.toLocaleLowerCase())) {
                return "String";
            }
            else if (["date", "time", "datetime", "timestamp", "year"].includes(typename.toLocaleLowerCase())) {
                return "LocalDateTime";
            }
            else {
                return "String";
            }
        }
        // 데이터베이스의 컬럼타입을 파이썬 타입으로 변환
        convertDbTypeToSQLAlchemyType(typename) {
            if (["tinyint", "smallint", "mediumint", "int", "bigint"].includes(typename.toLocaleLowerCase())) {
                switch (typename.toLocaleLowerCase()) {
                    case "tinyint":
                    case "smallint":
                    case "mediumint":
                    case "int":
                        return "Integer";
                    case "bigint":
                        return "BigInteger";
                }
            }
            else if (["decimal", "float", "double"].includes(typename.toLocaleLowerCase())) {
                switch (typename.toLocaleLowerCase()) {
                    case "decimal":
                        return "BigDecimal";
                    case "float":
                        return "Float";
                    case "double":
                        return "Double";
                }
            }
            else if (["bool", "boolean"].includes(typename.toLocaleLowerCase())) {
                return "Boolean";
            }
            else if ([
                "char",
                "varchar",
                "tinytext",
                "text",
                "mediumtext",
                "longtext",
            ].includes(typename.toLocaleLowerCase())) {
                return "String";
            }
            else if (["date", "time", "datetime", "timestamp", "year"].includes(typename.toLocaleLowerCase())) {
                return "DateTime";
            }
            else {
                return "String";
            }
        }
    }
    exports.MySQLParser = MySQLParser;

    });

    var typeorm = createCommonjsModule(function (module, exports) {
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.TypeOrmEmitter = void 0;


    const importTemplate = `import {Entity, PrimaryGeneratedColumn, Column, Generated} from "typeorm";
`;
    class TypeOrmEmitter {
        // 컬럼 필드 코드 생성
        generateColumn(column) {
            var _a, _b, _c;
            const columnFieldName = (0, name.convertNameCaseByOption)(this.option.outputFieldNameCase, column.name);
            let defaultValue = column.default
                ? `\n${tab.TAB}${tab.TAB}default: "${(_a = column.default) === null || _a === void 0 ? void 0 : _a.replace('"', '\\"')}",`
                : "";
            let comment = column.default
                ? `\n${tab.TAB}${tab.TAB}comment: "${(_c = (_b = column.comment) === null || _b === void 0 ? void 0 : _b.replace('"', '\\"')) !== null && _c !== void 0 ? _c : ""}",`
                : "";
            let nullable = column.default
                ? `\n${tab.TAB}${tab.TAB}nullable: ${!column.isNotNull},`
                : "";
            let columnDecorator = "Column";
            if (column.isPrimaryKey && column.isAutoIncrement) {
                columnDecorator = "PrimaryGeneratedColumn";
                defaultValue = "";
                nullable = "";
            }
            else if (column.isPrimaryKey) {
                columnDecorator = "PrimaryColumn";
                nullable = "";
            }
            else if (column.isAutoIncrement) {
                columnDecorator = "Generated";
                defaultValue = "";
            }
            return `    @${columnDecorator}({
        name: '${column.name}',
        type: '${column.dbType.toLowerCase()}',${nullable}${defaultValue}${comment}
    })
    ${columnFieldName}: ${column.tsType};`;
        }
        // 테이블 클래스 코드 생성
        generateTableCode(table) {
            const tableClassName = (0, name.convertNameCaseByOption)(this.option.outputClassNameCase, table.tableName);
            return `@Entity({
    name: '${table.tableName}',
    // database: '',
    // schema : true,
    synchronize : false,
})
export class ${tableClassName} {
${table.columns.map((column) => this.generateColumn(column)).join("\n\n")}
}`;
        }
        emit(tables, option = {
            sourceSplit: true,
            outputClassNameCase: "PASCAL",
            outputFieldNameCase: "CAMEL",
        }) {
            this.option = option;
            if (option === null || option === void 0 ? void 0 : option.sourceSplit) {
                return tables.map((table) => ({
                    sourceName: table.tableName,
                    source: importTemplate + "\n" + this.generateTableCode(table),
                }));
            }
            else {
                return [
                    {
                        sourceName: "all",
                        source: importTemplate +
                            "\n" +
                            tables.map((table) => this.generateTableCode(table)).join("\n\n"),
                    },
                ];
            }
        }
    }
    exports.TypeOrmEmitter = TypeOrmEmitter;

    });

    var mongery = createCommonjsModule(function (module, exports) {
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.MongeryEmitter = void 0;


    class MongeryEmitter {
        replaceType(type) {
            switch (type.toLowerCase()) {
                case "time":
                    return "time.Time";
                case "objectid":
                    return "primitive.ObjectID";
                default:
                    return type;
            }
        }
        // 컬럼 필드 코드 생성
        generateColumn(column) {
            let isPrimaryKey = false;
            column.dbType = this.replaceType(column.dbType);
            let fieldName = (0, name.convertNameCaseByOption)("PASCAL", column.name);
            if (column.name === "_id") {
                fieldName = "ID";
                isPrimaryKey = true;
            }
            const bsonName = (0, name.convertNameCaseByOption)("CAMEL", column.name);
            // PrimaryKey 강제 추가 옵션
            if (column.name == this.option.autoAddPrimaryKey) {
                column.isPrimaryKey = true;
            }
            const omitEmpty = isPrimaryKey || !column.isNotNull ? `,omitempty` : "";
            const bsonTag = `\`bson:"${bsonName}${omitEmpty}"\``;
            const fieldType = column.isNotNull ? column.dbType : `*${column.dbType}`;
            return `${tab.TAB}${fieldName} ${fieldType} ${bsonTag} // ${column.comment}`;
        }
        // 테이블 클래스 코드 생성
        generateTableCode(table) {
            const tableClassName = (0, name.convertNameCaseByOption)("PASCAL", table.tableName);
            return `// ${tableClassName}
// @Entity
type ${tableClassName} struct {
${table.columns.map((column) => this.generateColumn(column)).join("\n")}
}`;
        }
        emit(tables, option = {
            sourceSplit: true,
            outputClassNameCase: "PASCAL",
            outputFieldNameCase: "CAMEL",
        }) {
            this.option = option;
            if (option === null || option === void 0 ? void 0 : option.sourceSplit) {
                return tables.map((table) => ({
                    sourceName: table.tableName,
                    source: this.generateTableCode(table),
                }));
            }
            else {
                return [
                    {
                        sourceName: "all",
                        source: tables
                            .map((table) => this.generateTableCode(table))
                            .join("\n\n"),
                    },
                ];
            }
        }
    }
    exports.MongeryEmitter = MongeryEmitter;

    });

    var lib = createCommonjsModule(function (module, exports) {
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.MongeryEmitter = exports.PostgreSQLParser = exports.MySQLParser = exports.SQLAlchemyEmitter = exports.JPAKotlinEmitter = exports.JPAEmitter = exports.SequelizeTypescriptEmitter = exports.TypeOrmEmitter = void 0;

    Object.defineProperty(exports, "PostgreSQLParser", { enumerable: true, get: function () { return postgres.PostgreSQLParser; } });

    Object.defineProperty(exports, "SequelizeTypescriptEmitter", { enumerable: true, get: function () { return sequelizeTypescript.SequelizeTypescriptEmitter; } });

    Object.defineProperty(exports, "JPAEmitter", { enumerable: true, get: function () { return jpaJava.JPAEmitter; } });

    Object.defineProperty(exports, "JPAKotlinEmitter", { enumerable: true, get: function () { return jpaKotlin.JPAKotlinEmitter; } });

    Object.defineProperty(exports, "SQLAlchemyEmitter", { enumerable: true, get: function () { return sqlalchemy.SQLAlchemyEmitter; } });

    Object.defineProperty(exports, "MySQLParser", { enumerable: true, get: function () { return mysql.MySQLParser; } });

    Object.defineProperty(exports, "TypeOrmEmitter", { enumerable: true, get: function () { return typeorm.TypeOrmEmitter; } });

    Object.defineProperty(exports, "MongeryEmitter", { enumerable: true, get: function () { return mongery.MongeryEmitter; } });

    });

    function convert(query, database, orm, fieldname, primaryKey, createdAt, updatedAt, deletedAt, schemaName) {
        let parser = null;
        let emitter = null;
        switch (database) {
            case "postgresql":
            case "postgres":
            case "postgre":
            case "pg":
                parser = new lib.PostgreSQLParser();
                break;
            case "mysql":
            case "my":
                parser = new lib.MySQLParser();
                break;
            default:
                console.error("!! 지원되지 않는 데이터베이스입니다.");
                return;
        }
        switch (orm) {
            case "sequelize-typescript":
            case "st":
                emitter = new lib.SequelizeTypescriptEmitter();
                break;
            case "sequelize":
            case "sq":
                console.error("!! 아직 지원되지 않는 ORM입니다.");
                break;
            case "typeorm":
            case "ty":
                emitter = new lib.TypeOrmEmitter();
                break;
            case "jpa":
                emitter = new lib.JPAEmitter();
                break;
            case "jpa-kotlin":
                emitter = new lib.JPAKotlinEmitter();
                break;
            case "sqlalchemy":
                emitter = new lib.SQLAlchemyEmitter();
                break;
            case "mongery":
                emitter = new lib.MongeryEmitter();
                break;
            default:
                console.error("!! 지원되지 않는 ORM입니다.");
                return;
        }
        const emitOption = {
            sourceSplit: true,
            outputFieldNameCase: fieldname,
            outputClassNameCase: "PASCAL",
            autoAddPrimaryKey: primaryKey,
            autoAddCreatedAt: createdAt,
            autoAddUpdatedAt: updatedAt,
            autoAddDeletedAt: deletedAt,
            databaseName: schemaName,
        };
        console.log(emitOption);
        const tables = parser.parse(query + ";");
        const sources = emitter.emit(tables, emitOption);
        return sources[0].source;
    }

    const database = [
        { view: "DB 선택", value: null },
        { view: "MySQL", value: "mysql" },
        { view: "PostgreSQL", value: "pg" },
    ];

    const orm = [
        { view: "ORM 선택", value: null },
        { view: "Sequelize-Typescript", value: "st" },
        { view: "TypeORM", value: "ty" },
        { view: "JPA-hibernate", value: "jpa" },
        { view: "JPA-hibernate(Kotlin)", value: "jpa-kotlin" },
        { view: "SQLAlchemy", value: "sqlalchemy" },
        { view: "Mongery", value: "mongery" },
    ];

    const fieldname = [
        { view: "Camel Case", value: "CAMEL", selected: true },
        { view: "Snake Case", value: "SNAKE", selected: false },
    ];

    const app = new App({
        target: document.body,
        props: {
            name: "world",
            database,
            orm,
            fieldname,
            convert,
        },
    });

    return app;

})();
//# sourceMappingURL=bundle.js.map
