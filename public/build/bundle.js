
(function(l, r) { if (!l || l.getElementById('livereloadscript')) return; r = l.createElement('script'); r.async = 1; r.src = '//' + (self.location.host || 'localhost').split(':')[0] + ':35729/livereload.js?snipver=1'; r.id = 'livereloadscript'; l.getElementsByTagName('head')[0].appendChild(r) })(self.document);
var app = (function () {
    'use strict';

    function noop() { }
    function add_location(element, file, line, column, char) {
        element.__svelte_meta = {
            loc: { file, line, column, char }
        };
    }
    function run(fn) {
        return fn();
    }
    function blank_object() {
        return Object.create(null);
    }
    function run_all(fns) {
        fns.forEach(run);
    }
    function is_function(thing) {
        return typeof thing === 'function';
    }
    function safe_not_equal(a, b) {
        return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');
    }
    function is_empty(obj) {
        return Object.keys(obj).length === 0;
    }
    function append(target, node) {
        target.appendChild(node);
    }
    function insert(target, node, anchor) {
        target.insertBefore(node, anchor || null);
    }
    function detach(node) {
        node.parentNode.removeChild(node);
    }
    function destroy_each(iterations, detaching) {
        for (let i = 0; i < iterations.length; i += 1) {
            if (iterations[i])
                iterations[i].d(detaching);
        }
    }
    function element(name) {
        return document.createElement(name);
    }
    function text(data) {
        return document.createTextNode(data);
    }
    function space() {
        return text(' ');
    }
    function listen(node, event, handler, options) {
        node.addEventListener(event, handler, options);
        return () => node.removeEventListener(event, handler, options);
    }
    function attr(node, attribute, value) {
        if (value == null)
            node.removeAttribute(attribute);
        else if (node.getAttribute(attribute) !== value)
            node.setAttribute(attribute, value);
    }
    function children(element) {
        return Array.from(element.childNodes);
    }
    function set_input_value(input, value) {
        input.value = value == null ? '' : value;
    }
    function select_option(select, value) {
        for (let i = 0; i < select.options.length; i += 1) {
            const option = select.options[i];
            if (option.__value === value) {
                option.selected = true;
                return;
            }
        }
        select.selectedIndex = -1; // no option should be selected
    }
    function select_value(select) {
        const selected_option = select.querySelector(':checked') || select.options[0];
        return selected_option && selected_option.__value;
    }
    function custom_event(type, detail, bubbles = false) {
        const e = document.createEvent('CustomEvent');
        e.initCustomEvent(type, bubbles, false, detail);
        return e;
    }

    let current_component;
    function set_current_component(component) {
        current_component = component;
    }

    const dirty_components = [];
    const binding_callbacks = [];
    const render_callbacks = [];
    const flush_callbacks = [];
    const resolved_promise = Promise.resolve();
    let update_scheduled = false;
    function schedule_update() {
        if (!update_scheduled) {
            update_scheduled = true;
            resolved_promise.then(flush);
        }
    }
    function add_render_callback(fn) {
        render_callbacks.push(fn);
    }
    let flushing = false;
    const seen_callbacks = new Set();
    function flush() {
        if (flushing)
            return;
        flushing = true;
        do {
            // first, call beforeUpdate functions
            // and update components
            for (let i = 0; i < dirty_components.length; i += 1) {
                const component = dirty_components[i];
                set_current_component(component);
                update(component.$$);
            }
            set_current_component(null);
            dirty_components.length = 0;
            while (binding_callbacks.length)
                binding_callbacks.pop()();
            // then, once components are updated, call
            // afterUpdate functions. This may cause
            // subsequent updates...
            for (let i = 0; i < render_callbacks.length; i += 1) {
                const callback = render_callbacks[i];
                if (!seen_callbacks.has(callback)) {
                    // ...so guard against infinite loops
                    seen_callbacks.add(callback);
                    callback();
                }
            }
            render_callbacks.length = 0;
        } while (dirty_components.length);
        while (flush_callbacks.length) {
            flush_callbacks.pop()();
        }
        update_scheduled = false;
        flushing = false;
        seen_callbacks.clear();
    }
    function update($$) {
        if ($$.fragment !== null) {
            $$.update();
            run_all($$.before_update);
            const dirty = $$.dirty;
            $$.dirty = [-1];
            $$.fragment && $$.fragment.p($$.ctx, dirty);
            $$.after_update.forEach(add_render_callback);
        }
    }
    const outroing = new Set();
    function transition_in(block, local) {
        if (block && block.i) {
            outroing.delete(block);
            block.i(local);
        }
    }
    function mount_component(component, target, anchor, customElement) {
        const { fragment, on_mount, on_destroy, after_update } = component.$$;
        fragment && fragment.m(target, anchor);
        if (!customElement) {
            // onMount happens before the initial afterUpdate
            add_render_callback(() => {
                const new_on_destroy = on_mount.map(run).filter(is_function);
                if (on_destroy) {
                    on_destroy.push(...new_on_destroy);
                }
                else {
                    // Edge case - component was destroyed immediately,
                    // most likely as a result of a binding initialising
                    run_all(new_on_destroy);
                }
                component.$$.on_mount = [];
            });
        }
        after_update.forEach(add_render_callback);
    }
    function destroy_component(component, detaching) {
        const $$ = component.$$;
        if ($$.fragment !== null) {
            run_all($$.on_destroy);
            $$.fragment && $$.fragment.d(detaching);
            // TODO null out other refs, including component.$$ (but need to
            // preserve final state?)
            $$.on_destroy = $$.fragment = null;
            $$.ctx = [];
        }
    }
    function make_dirty(component, i) {
        if (component.$$.dirty[0] === -1) {
            dirty_components.push(component);
            schedule_update();
            component.$$.dirty.fill(0);
        }
        component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));
    }
    function init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {
        const parent_component = current_component;
        set_current_component(component);
        const $$ = component.$$ = {
            fragment: null,
            ctx: null,
            // state
            props,
            update: noop,
            not_equal,
            bound: blank_object(),
            // lifecycle
            on_mount: [],
            on_destroy: [],
            on_disconnect: [],
            before_update: [],
            after_update: [],
            context: new Map(parent_component ? parent_component.$$.context : options.context || []),
            // everything else
            callbacks: blank_object(),
            dirty,
            skip_bound: false,
            root: options.target || parent_component.$$.root
        };
        append_styles && append_styles($$.root);
        let ready = false;
        $$.ctx = instance
            ? instance(component, options.props || {}, (i, ret, ...rest) => {
                const value = rest.length ? rest[0] : ret;
                if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {
                    if (!$$.skip_bound && $$.bound[i])
                        $$.bound[i](value);
                    if (ready)
                        make_dirty(component, i);
                }
                return ret;
            })
            : [];
        $$.update();
        ready = true;
        run_all($$.before_update);
        // `false` as a special case of no DOM component
        $$.fragment = create_fragment ? create_fragment($$.ctx) : false;
        if (options.target) {
            if (options.hydrate) {
                const nodes = children(options.target);
                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
                $$.fragment && $$.fragment.l(nodes);
                nodes.forEach(detach);
            }
            else {
                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion
                $$.fragment && $$.fragment.c();
            }
            if (options.intro)
                transition_in(component.$$.fragment);
            mount_component(component, options.target, options.anchor, options.customElement);
            flush();
        }
        set_current_component(parent_component);
    }
    /**
     * Base class for Svelte components. Used when dev=false.
     */
    class SvelteComponent {
        $destroy() {
            destroy_component(this, 1);
            this.$destroy = noop;
        }
        $on(type, callback) {
            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));
            callbacks.push(callback);
            return () => {
                const index = callbacks.indexOf(callback);
                if (index !== -1)
                    callbacks.splice(index, 1);
            };
        }
        $set($$props) {
            if (this.$$set && !is_empty($$props)) {
                this.$$.skip_bound = true;
                this.$$set($$props);
                this.$$.skip_bound = false;
            }
        }
    }

    function dispatch_dev(type, detail) {
        document.dispatchEvent(custom_event(type, Object.assign({ version: '3.42.4' }, detail), true));
    }
    function append_dev(target, node) {
        dispatch_dev('SvelteDOMInsert', { target, node });
        append(target, node);
    }
    function insert_dev(target, node, anchor) {
        dispatch_dev('SvelteDOMInsert', { target, node, anchor });
        insert(target, node, anchor);
    }
    function detach_dev(node) {
        dispatch_dev('SvelteDOMRemove', { node });
        detach(node);
    }
    function listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {
        const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];
        if (has_prevent_default)
            modifiers.push('preventDefault');
        if (has_stop_propagation)
            modifiers.push('stopPropagation');
        dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });
        const dispose = listen(node, event, handler, options);
        return () => {
            dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });
            dispose();
        };
    }
    function attr_dev(node, attribute, value) {
        attr(node, attribute, value);
        if (value == null)
            dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });
        else
            dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });
    }
    function prop_dev(node, property, value) {
        node[property] = value;
        dispatch_dev('SvelteDOMSetProperty', { node, property, value });
    }
    function set_data_dev(text, data) {
        data = '' + data;
        if (text.wholeText === data)
            return;
        dispatch_dev('SvelteDOMSetData', { node: text, data });
        text.data = data;
    }
    function validate_each_argument(arg) {
        if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {
            let msg = '{#each} only iterates over array-like objects.';
            if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {
                msg += ' You can use a spread to convert this iterable into an array.';
            }
            throw new Error(msg);
        }
    }
    function validate_slots(name, slot, keys) {
        for (const slot_key of Object.keys(slot)) {
            if (!~keys.indexOf(slot_key)) {
                console.warn(`<${name}> received an unexpected slot "${slot_key}".`);
            }
        }
    }
    /**
     * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.
     */
    class SvelteComponentDev extends SvelteComponent {
        constructor(options) {
            if (!options || (!options.target && !options.$$inline)) {
                throw new Error("'target' is a required option");
            }
            super();
        }
        $destroy() {
            super.$destroy();
            this.$destroy = () => {
                console.warn('Component was already destroyed'); // eslint-disable-line no-console
            };
        }
        $capture_state() { }
        $inject_state() { }
    }

    /* src\App.svelte generated by Svelte v3.42.4 */

    const file = "src\\App.svelte";

    function get_each_context(ctx, list, i) {
    	const child_ctx = ctx.slice();
    	child_ctx[15] = list[i];
    	return child_ctx;
    }

    function get_each_context_1(ctx, list, i) {
    	const child_ctx = ctx.slice();
    	child_ctx[15] = list[i];
    	return child_ctx;
    }

    function get_each_context_2(ctx, list, i) {
    	const child_ctx = ctx.slice();
    	child_ctx[15] = list[i];
    	return child_ctx;
    }

    // (37:21) {#each database as option}
    function create_each_block_2(ctx) {
    	let option;
    	let t_value = /*option*/ ctx[15].view + "";
    	let t;
    	let option_value_value;

    	const block = {
    		c: function create() {
    			option = element("option");
    			t = text(t_value);
    			option.__value = option_value_value = /*option*/ ctx[15].value;
    			option.value = option.__value;
    			add_location(option, file, 37, 24, 955);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, option, anchor);
    			append_dev(option, t);
    		},
    		p: function update(ctx, dirty) {
    			if (dirty & /*database*/ 1 && t_value !== (t_value = /*option*/ ctx[15].view + "")) set_data_dev(t, t_value);

    			if (dirty & /*database*/ 1 && option_value_value !== (option_value_value = /*option*/ ctx[15].value)) {
    				prop_dev(option, "__value", option_value_value);
    				option.value = option.__value;
    			}
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(option);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_each_block_2.name,
    		type: "each",
    		source: "(37:21) {#each database as option}",
    		ctx
    	});

    	return block;
    }

    // (47:21) {#each orm as option}
    function create_each_block_1(ctx) {
    	let option;
    	let t_value = /*option*/ ctx[15].view + "";
    	let t;
    	let option_value_value;

    	const block = {
    		c: function create() {
    			option = element("option");
    			t = text(t_value);
    			option.__value = option_value_value = /*option*/ ctx[15].value;
    			option.value = option.__value;
    			add_location(option, file, 47, 24, 1384);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, option, anchor);
    			append_dev(option, t);
    		},
    		p: function update(ctx, dirty) {
    			if (dirty & /*orm*/ 2 && t_value !== (t_value = /*option*/ ctx[15].view + "")) set_data_dev(t, t_value);

    			if (dirty & /*orm*/ 2 && option_value_value !== (option_value_value = /*option*/ ctx[15].value)) {
    				prop_dev(option, "__value", option_value_value);
    				option.value = option.__value;
    			}
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(option);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_each_block_1.name,
    		type: "each",
    		source: "(47:21) {#each orm as option}",
    		ctx
    	});

    	return block;
    }

    // (54:21) {#each fieldname as option}
    function create_each_block(ctx) {
    	let option;
    	let t_value = /*option*/ ctx[15].view + "";
    	let t;
    	let option_value_value;
    	let option_selected_value;

    	const block = {
    		c: function create() {
    			option = element("option");
    			t = text(t_value);
    			option.__value = option_value_value = /*option*/ ctx[15].value;
    			option.value = option.__value;
    			option.selected = option_selected_value = /*option*/ ctx[15].selected;
    			add_location(option, file, 54, 24, 1693);
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, option, anchor);
    			append_dev(option, t);
    		},
    		p: function update(ctx, dirty) {
    			if (dirty & /*fieldname*/ 4 && t_value !== (t_value = /*option*/ ctx[15].view + "")) set_data_dev(t, t_value);

    			if (dirty & /*fieldname*/ 4 && option_value_value !== (option_value_value = /*option*/ ctx[15].value)) {
    				prop_dev(option, "__value", option_value_value);
    				option.value = option.__value;
    			}

    			if (dirty & /*fieldname*/ 4 && option_selected_value !== (option_selected_value = /*option*/ ctx[15].selected)) {
    				prop_dev(option, "selected", option_selected_value);
    			}
    		},
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(option);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_each_block.name,
    		type: "each",
    		source: "(54:21) {#each fieldname as option}",
    		ctx
    	});

    	return block;
    }

    function create_fragment(ctx) {
    	let main;
    	let hr;
    	let t0;
    	let div4;
    	let div1;
    	let div0;
    	let select0;
    	let t1;
    	let br0;
    	let t2;
    	let textarea0;
    	let t3;
    	let div3;
    	let div2;
    	let select1;
    	let t4;
    	let select2;
    	let t5;
    	let br1;
    	let t6;
    	let textarea1;
    	let t7;
    	let div5;
    	let button;
    	let t9;
    	let br2;
    	let br3;
    	let t10;
    	let br4;
    	let t11;
    	let textarea2;
    	let mounted;
    	let dispose;
    	let each_value_2 = /*database*/ ctx[0];
    	validate_each_argument(each_value_2);
    	let each_blocks_2 = [];

    	for (let i = 0; i < each_value_2.length; i += 1) {
    		each_blocks_2[i] = create_each_block_2(get_each_context_2(ctx, each_value_2, i));
    	}

    	let each_value_1 = /*orm*/ ctx[1];
    	validate_each_argument(each_value_1);
    	let each_blocks_1 = [];

    	for (let i = 0; i < each_value_1.length; i += 1) {
    		each_blocks_1[i] = create_each_block_1(get_each_context_1(ctx, each_value_1, i));
    	}

    	let each_value = /*fieldname*/ ctx[2];
    	validate_each_argument(each_value);
    	let each_blocks = [];

    	for (let i = 0; i < each_value.length; i += 1) {
    		each_blocks[i] = create_each_block(get_each_context(ctx, each_value, i));
    	}

    	const block = {
    		c: function create() {
    			main = element("main");
    			hr = element("hr");
    			t0 = space();
    			div4 = element("div");
    			div1 = element("div");
    			div0 = element("div");
    			select0 = element("select");

    			for (let i = 0; i < each_blocks_2.length; i += 1) {
    				each_blocks_2[i].c();
    			}

    			t1 = space();
    			br0 = element("br");
    			t2 = space();
    			textarea0 = element("textarea");
    			t3 = space();
    			div3 = element("div");
    			div2 = element("div");
    			select1 = element("select");

    			for (let i = 0; i < each_blocks_1.length; i += 1) {
    				each_blocks_1[i].c();
    			}

    			t4 = space();
    			select2 = element("select");

    			for (let i = 0; i < each_blocks.length; i += 1) {
    				each_blocks[i].c();
    			}

    			t5 = space();
    			br1 = element("br");
    			t6 = space();
    			textarea1 = element("textarea");
    			t7 = space();
    			div5 = element("div");
    			button = element("button");
    			button.textContent = "변환";
    			t9 = space();
    			br2 = element("br");
    			br3 = element("br");
    			t10 = text("\r\n\r\n        Error Log ");
    			br4 = element("br");
    			t11 = space();
    			textarea2 = element("textarea");
    			add_location(hr, file, 31, 4, 713);
    			attr_dev(select0, "id", "left-select");
    			if (/*selectedDatabase*/ ctx[3] === void 0) add_render_callback(() => /*select0_change_handler*/ ctx[11].call(select0));
    			add_location(select0, file, 35, 16, 826);
    			add_location(br0, file, 39, 18, 1063);
    			attr_dev(textarea0, "class", "top-textarea svelte-7hdm6x");
    			add_location(textarea0, file, 40, 16, 1087);
    			attr_dev(div0, "class", "left-inner svelte-7hdm6x");
    			add_location(div0, file, 34, 12, 784);
    			attr_dev(div1, "class", "left svelte-7hdm6x");
    			add_location(div1, file, 33, 8, 752);
    			attr_dev(select1, "id", "right-select");
    			if (/*selectedOrm*/ ctx[4] === void 0) add_render_callback(() => /*select1_change_handler*/ ctx[13].call(select1));
    			add_location(select1, file, 45, 16, 1264);
    			attr_dev(select2, "id", "right-select-fieldname");
    			if (/*selectedFieldname*/ ctx[5] === void 0) add_render_callback(() => /*select2_change_handler*/ ctx[14].call(select2));
    			add_location(select2, file, 50, 16, 1509);
    			add_location(br1, file, 59, 16, 1901);
    			textarea1.readOnly = true;
    			attr_dev(textarea1, "class", "top-textarea svelte-7hdm6x");
    			textarea1.value = /*rightText*/ ctx[7];
    			add_location(textarea1, file, 60, 16, 1925);
    			attr_dev(div2, "class", "right-inner svelte-7hdm6x");
    			add_location(div2, file, 44, 12, 1221);
    			attr_dev(div3, "class", "right svelte-7hdm6x");
    			add_location(div3, file, 43, 8, 1188);
    			attr_dev(div4, "class", "top svelte-7hdm6x");
    			add_location(div4, file, 32, 4, 725);
    			add_location(button, file, 65, 8, 2071);
    			add_location(br2, file, 65, 55, 2118);
    			add_location(br3, file, 65, 61, 2124);
    			add_location(br4, file, 67, 18, 2152);
    			textarea2.readOnly = true;
    			attr_dev(textarea2, "id", "error-textarea");
    			textarea2.value = /*errorLog*/ ctx[8];
    			attr_dev(textarea2, "class", "svelte-7hdm6x");
    			add_location(textarea2, file, 68, 8, 2168);
    			attr_dev(div5, "class", "bottom svelte-7hdm6x");
    			add_location(div5, file, 64, 4, 2041);
    			add_location(main, file, 30, 0, 701);
    		},
    		l: function claim(nodes) {
    			throw new Error("options.hydrate only works if the component was compiled with the `hydratable: true` option");
    		},
    		m: function mount(target, anchor) {
    			insert_dev(target, main, anchor);
    			append_dev(main, hr);
    			append_dev(main, t0);
    			append_dev(main, div4);
    			append_dev(div4, div1);
    			append_dev(div1, div0);
    			append_dev(div0, select0);

    			for (let i = 0; i < each_blocks_2.length; i += 1) {
    				each_blocks_2[i].m(select0, null);
    			}

    			select_option(select0, /*selectedDatabase*/ ctx[3]);
    			append_dev(div0, t1);
    			append_dev(div0, br0);
    			append_dev(div0, t2);
    			append_dev(div0, textarea0);
    			set_input_value(textarea0, /*leftText*/ ctx[6]);
    			append_dev(div4, t3);
    			append_dev(div4, div3);
    			append_dev(div3, div2);
    			append_dev(div2, select1);

    			for (let i = 0; i < each_blocks_1.length; i += 1) {
    				each_blocks_1[i].m(select1, null);
    			}

    			select_option(select1, /*selectedOrm*/ ctx[4]);
    			append_dev(div2, t4);
    			append_dev(div2, select2);

    			for (let i = 0; i < each_blocks.length; i += 1) {
    				each_blocks[i].m(select2, null);
    			}

    			select_option(select2, /*selectedFieldname*/ ctx[5]);
    			append_dev(div2, t5);
    			append_dev(div2, br1);
    			append_dev(div2, t6);
    			append_dev(div2, textarea1);
    			append_dev(main, t7);
    			append_dev(main, div5);
    			append_dev(div5, button);
    			append_dev(div5, t9);
    			append_dev(div5, br2);
    			append_dev(div5, br3);
    			append_dev(div5, t10);
    			append_dev(div5, br4);
    			append_dev(div5, t11);
    			append_dev(div5, textarea2);

    			if (!mounted) {
    				dispose = [
    					listen_dev(select0, "change", /*select0_change_handler*/ ctx[11]),
    					listen_dev(textarea0, "input", /*textarea0_input_handler*/ ctx[12]),
    					listen_dev(select1, "change", /*select1_change_handler*/ ctx[13]),
    					listen_dev(select2, "change", /*select2_change_handler*/ ctx[14]),
    					listen_dev(button, "click", /*onButtonClicked*/ ctx[9], false, false, false)
    				];

    				mounted = true;
    			}
    		},
    		p: function update(ctx, [dirty]) {
    			if (dirty & /*database*/ 1) {
    				each_value_2 = /*database*/ ctx[0];
    				validate_each_argument(each_value_2);
    				let i;

    				for (i = 0; i < each_value_2.length; i += 1) {
    					const child_ctx = get_each_context_2(ctx, each_value_2, i);

    					if (each_blocks_2[i]) {
    						each_blocks_2[i].p(child_ctx, dirty);
    					} else {
    						each_blocks_2[i] = create_each_block_2(child_ctx);
    						each_blocks_2[i].c();
    						each_blocks_2[i].m(select0, null);
    					}
    				}

    				for (; i < each_blocks_2.length; i += 1) {
    					each_blocks_2[i].d(1);
    				}

    				each_blocks_2.length = each_value_2.length;
    			}

    			if (dirty & /*selectedDatabase, database*/ 9) {
    				select_option(select0, /*selectedDatabase*/ ctx[3]);
    			}

    			if (dirty & /*leftText*/ 64) {
    				set_input_value(textarea0, /*leftText*/ ctx[6]);
    			}

    			if (dirty & /*orm*/ 2) {
    				each_value_1 = /*orm*/ ctx[1];
    				validate_each_argument(each_value_1);
    				let i;

    				for (i = 0; i < each_value_1.length; i += 1) {
    					const child_ctx = get_each_context_1(ctx, each_value_1, i);

    					if (each_blocks_1[i]) {
    						each_blocks_1[i].p(child_ctx, dirty);
    					} else {
    						each_blocks_1[i] = create_each_block_1(child_ctx);
    						each_blocks_1[i].c();
    						each_blocks_1[i].m(select1, null);
    					}
    				}

    				for (; i < each_blocks_1.length; i += 1) {
    					each_blocks_1[i].d(1);
    				}

    				each_blocks_1.length = each_value_1.length;
    			}

    			if (dirty & /*selectedOrm, orm*/ 18) {
    				select_option(select1, /*selectedOrm*/ ctx[4]);
    			}

    			if (dirty & /*fieldname*/ 4) {
    				each_value = /*fieldname*/ ctx[2];
    				validate_each_argument(each_value);
    				let i;

    				for (i = 0; i < each_value.length; i += 1) {
    					const child_ctx = get_each_context(ctx, each_value, i);

    					if (each_blocks[i]) {
    						each_blocks[i].p(child_ctx, dirty);
    					} else {
    						each_blocks[i] = create_each_block(child_ctx);
    						each_blocks[i].c();
    						each_blocks[i].m(select2, null);
    					}
    				}

    				for (; i < each_blocks.length; i += 1) {
    					each_blocks[i].d(1);
    				}

    				each_blocks.length = each_value.length;
    			}

    			if (dirty & /*selectedFieldname, fieldname*/ 36) {
    				select_option(select2, /*selectedFieldname*/ ctx[5]);
    			}

    			if (dirty & /*rightText*/ 128) {
    				prop_dev(textarea1, "value", /*rightText*/ ctx[7]);
    			}

    			if (dirty & /*errorLog*/ 256) {
    				prop_dev(textarea2, "value", /*errorLog*/ ctx[8]);
    			}
    		},
    		i: noop,
    		o: noop,
    		d: function destroy(detaching) {
    			if (detaching) detach_dev(main);
    			destroy_each(each_blocks_2, detaching);
    			destroy_each(each_blocks_1, detaching);
    			destroy_each(each_blocks, detaching);
    			mounted = false;
    			run_all(dispose);
    		}
    	};

    	dispatch_dev("SvelteRegisterBlock", {
    		block,
    		id: create_fragment.name,
    		type: "component",
    		source: "",
    		ctx
    	});

    	return block;
    }

    function instance($$self, $$props, $$invalidate) {
    	let { $$slots: slots = {}, $$scope } = $$props;
    	validate_slots('App', slots, []);
    	
    	let { database } = $$props;
    	let { orm } = $$props;
    	let { fieldname } = $$props;
    	let { convert } = $$props;
    	let selectedDatabase = null;
    	let selectedOrm = null;
    	let selectedFieldname = fieldname[0].value;
    	let leftText = "";
    	let rightText = "";
    	let errorLog = "";

    	function onButtonClicked() {
    		if (selectedDatabase === null) {
    			alert("데이터베이스를 선택해주세요.");
    			return;
    		}

    		if (selectedOrm === null) {
    			alert("ORM을 선택해주세요.");
    			return;
    		}

    		try {
    			$$invalidate(7, rightText = convert(leftText, selectedDatabase, selectedOrm, selectedFieldname));
    		} catch(error) {
    			alert("오류 발생");
    			$$invalidate(8, errorLog = JSON.stringify(error));
    		}
    	}

    	const writable_props = ['database', 'orm', 'fieldname', 'convert'];

    	Object.keys($$props).forEach(key => {
    		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== '$$' && key !== 'slot') console.warn(`<App> was created with unknown prop '${key}'`);
    	});

    	function select0_change_handler() {
    		selectedDatabase = select_value(this);
    		$$invalidate(3, selectedDatabase);
    		$$invalidate(0, database);
    	}

    	function textarea0_input_handler() {
    		leftText = this.value;
    		$$invalidate(6, leftText);
    	}

    	function select1_change_handler() {
    		selectedOrm = select_value(this);
    		$$invalidate(4, selectedOrm);
    		$$invalidate(1, orm);
    	}

    	function select2_change_handler() {
    		selectedFieldname = select_value(this);
    		$$invalidate(5, selectedFieldname);
    		$$invalidate(2, fieldname);
    	}

    	$$self.$$set = $$props => {
    		if ('database' in $$props) $$invalidate(0, database = $$props.database);
    		if ('orm' in $$props) $$invalidate(1, orm = $$props.orm);
    		if ('fieldname' in $$props) $$invalidate(2, fieldname = $$props.fieldname);
    		if ('convert' in $$props) $$invalidate(10, convert = $$props.convert);
    	};

    	$$self.$capture_state = () => ({
    		database,
    		orm,
    		fieldname,
    		convert,
    		selectedDatabase,
    		selectedOrm,
    		selectedFieldname,
    		leftText,
    		rightText,
    		errorLog,
    		onButtonClicked
    	});

    	$$self.$inject_state = $$props => {
    		if ('database' in $$props) $$invalidate(0, database = $$props.database);
    		if ('orm' in $$props) $$invalidate(1, orm = $$props.orm);
    		if ('fieldname' in $$props) $$invalidate(2, fieldname = $$props.fieldname);
    		if ('convert' in $$props) $$invalidate(10, convert = $$props.convert);
    		if ('selectedDatabase' in $$props) $$invalidate(3, selectedDatabase = $$props.selectedDatabase);
    		if ('selectedOrm' in $$props) $$invalidate(4, selectedOrm = $$props.selectedOrm);
    		if ('selectedFieldname' in $$props) $$invalidate(5, selectedFieldname = $$props.selectedFieldname);
    		if ('leftText' in $$props) $$invalidate(6, leftText = $$props.leftText);
    		if ('rightText' in $$props) $$invalidate(7, rightText = $$props.rightText);
    		if ('errorLog' in $$props) $$invalidate(8, errorLog = $$props.errorLog);
    	};

    	if ($$props && "$$inject" in $$props) {
    		$$self.$inject_state($$props.$$inject);
    	}

    	return [
    		database,
    		orm,
    		fieldname,
    		selectedDatabase,
    		selectedOrm,
    		selectedFieldname,
    		leftText,
    		rightText,
    		errorLog,
    		onButtonClicked,
    		convert,
    		select0_change_handler,
    		textarea0_input_handler,
    		select1_change_handler,
    		select2_change_handler
    	];
    }

    class App extends SvelteComponentDev {
    	constructor(options) {
    		super(options);

    		init(this, options, instance, create_fragment, safe_not_equal, {
    			database: 0,
    			orm: 1,
    			fieldname: 2,
    			convert: 10
    		});

    		dispatch_dev("SvelteRegisterComponent", {
    			component: this,
    			tagName: "App",
    			options,
    			id: create_fragment.name
    		});

    		const { ctx } = this.$$;
    		const props = options.props || {};

    		if (/*database*/ ctx[0] === undefined && !('database' in props)) {
    			console.warn("<App> was created without expected prop 'database'");
    		}

    		if (/*orm*/ ctx[1] === undefined && !('orm' in props)) {
    			console.warn("<App> was created without expected prop 'orm'");
    		}

    		if (/*fieldname*/ ctx[2] === undefined && !('fieldname' in props)) {
    			console.warn("<App> was created without expected prop 'fieldname'");
    		}

    		if (/*convert*/ ctx[10] === undefined && !('convert' in props)) {
    			console.warn("<App> was created without expected prop 'convert'");
    		}
    	}

    	get database() {
    		throw new Error("<App>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set database(value) {
    		throw new Error("<App>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get orm() {
    		throw new Error("<App>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set orm(value) {
    		throw new Error("<App>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get fieldname() {
    		throw new Error("<App>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set fieldname(value) {
    		throw new Error("<App>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	get convert() {
    		throw new Error("<App>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}

    	set convert(value) {
    		throw new Error("<App>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
    	}
    }

    var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

    function createCommonjsModule(fn, basedir, module) {
    	return module = {
    		path: basedir,
    		exports: {},
    		require: function (path, base) {
    			return commonjsRequire(path, (base === undefined || base === null) ? module.path : base);
    		}
    	}, fn(module, module.exports), module.exports;
    }

    function getAugmentedNamespace(n) {
    	if (n.__esModule) return n;
    	var a = Object.defineProperty({}, '__esModule', {value: true});
    	Object.keys(n).forEach(function (k) {
    		var d = Object.getOwnPropertyDescriptor(n, k);
    		Object.defineProperty(a, k, d.get ? d : {
    			enumerable: true,
    			get: function () {
    				return n[k];
    			}
    		});
    	});
    	return a;
    }

    function commonjsRequire () {
    	throw new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');
    }

    var moo = createCommonjsModule(function (module) {
    (function(root, factory) {
      if (module.exports) {
        module.exports = factory();
      } else {
        root.moo = factory();
      }
    }(commonjsGlobal, function() {

      var hasOwnProperty = Object.prototype.hasOwnProperty;
      var toString = Object.prototype.toString;
      var hasSticky = typeof new RegExp().sticky === 'boolean';

      /***************************************************************************/

      function isRegExp(o) { return o && toString.call(o) === '[object RegExp]' }
      function isObject(o) { return o && typeof o === 'object' && !isRegExp(o) && !Array.isArray(o) }

      function reEscape(s) {
        return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&')
      }
      function reGroups(s) {
        var re = new RegExp('|' + s);
        return re.exec('').length - 1
      }
      function reCapture(s) {
        return '(' + s + ')'
      }
      function reUnion(regexps) {
        if (!regexps.length) return '(?!)'
        var source =  regexps.map(function(s) {
          return "(?:" + s + ")"
        }).join('|');
        return "(?:" + source + ")"
      }

      function regexpOrLiteral(obj) {
        if (typeof obj === 'string') {
          return '(?:' + reEscape(obj) + ')'

        } else if (isRegExp(obj)) {
          // TODO: consider /u support
          if (obj.ignoreCase) throw new Error('RegExp /i flag not allowed')
          if (obj.global) throw new Error('RegExp /g flag is implied')
          if (obj.sticky) throw new Error('RegExp /y flag is implied')
          if (obj.multiline) throw new Error('RegExp /m flag is implied')
          return obj.source

        } else {
          throw new Error('Not a pattern: ' + obj)
        }
      }

      function objectToRules(object) {
        var keys = Object.getOwnPropertyNames(object);
        var result = [];
        for (var i = 0; i < keys.length; i++) {
          var key = keys[i];
          var thing = object[key];
          var rules = [].concat(thing);
          if (key === 'include') {
            for (var j = 0; j < rules.length; j++) {
              result.push({include: rules[j]});
            }
            continue
          }
          var match = [];
          rules.forEach(function(rule) {
            if (isObject(rule)) {
              if (match.length) result.push(ruleOptions(key, match));
              result.push(ruleOptions(key, rule));
              match = [];
            } else {
              match.push(rule);
            }
          });
          if (match.length) result.push(ruleOptions(key, match));
        }
        return result
      }

      function arrayToRules(array) {
        var result = [];
        for (var i = 0; i < array.length; i++) {
          var obj = array[i];
          if (obj.include) {
            var include = [].concat(obj.include);
            for (var j = 0; j < include.length; j++) {
              result.push({include: include[j]});
            }
            continue
          }
          if (!obj.type) {
            throw new Error('Rule has no type: ' + JSON.stringify(obj))
          }
          result.push(ruleOptions(obj.type, obj));
        }
        return result
      }

      function ruleOptions(type, obj) {
        if (!isObject(obj)) {
          obj = { match: obj };
        }
        if (obj.include) {
          throw new Error('Matching rules cannot also include states')
        }

        // nb. error and fallback imply lineBreaks
        var options = {
          defaultType: type,
          lineBreaks: !!obj.error || !!obj.fallback,
          pop: false,
          next: null,
          push: null,
          error: false,
          fallback: false,
          value: null,
          type: null,
          shouldThrow: false,
        };

        // Avoid Object.assign(), so we support IE9+
        for (var key in obj) {
          if (hasOwnProperty.call(obj, key)) {
            options[key] = obj[key];
          }
        }

        // type transform cannot be a string
        if (typeof options.type === 'string' && type !== options.type) {
          throw new Error("Type transform cannot be a string (type '" + options.type + "' for token '" + type + "')")
        }

        // convert to array
        var match = options.match;
        options.match = Array.isArray(match) ? match : match ? [match] : [];
        options.match.sort(function(a, b) {
          return isRegExp(a) && isRegExp(b) ? 0
               : isRegExp(b) ? -1 : isRegExp(a) ? +1 : b.length - a.length
        });
        return options
      }

      function toRules(spec) {
        return Array.isArray(spec) ? arrayToRules(spec) : objectToRules(spec)
      }

      var defaultErrorRule = ruleOptions('error', {lineBreaks: true, shouldThrow: true});
      function compileRules(rules, hasStates) {
        var errorRule = null;
        var fast = Object.create(null);
        var fastAllowed = true;
        var unicodeFlag = null;
        var groups = [];
        var parts = [];

        // If there is a fallback rule, then disable fast matching
        for (var i = 0; i < rules.length; i++) {
          if (rules[i].fallback) {
            fastAllowed = false;
          }
        }

        for (var i = 0; i < rules.length; i++) {
          var options = rules[i];

          if (options.include) {
            // all valid inclusions are removed by states() preprocessor
            throw new Error('Inheritance is not allowed in stateless lexers')
          }

          if (options.error || options.fallback) {
            // errorRule can only be set once
            if (errorRule) {
              if (!options.fallback === !errorRule.fallback) {
                throw new Error("Multiple " + (options.fallback ? "fallback" : "error") + " rules not allowed (for token '" + options.defaultType + "')")
              } else {
                throw new Error("fallback and error are mutually exclusive (for token '" + options.defaultType + "')")
              }
            }
            errorRule = options;
          }

          var match = options.match.slice();
          if (fastAllowed) {
            while (match.length && typeof match[0] === 'string' && match[0].length === 1) {
              var word = match.shift();
              fast[word.charCodeAt(0)] = options;
            }
          }

          // Warn about inappropriate state-switching options
          if (options.pop || options.push || options.next) {
            if (!hasStates) {
              throw new Error("State-switching options are not allowed in stateless lexers (for token '" + options.defaultType + "')")
            }
            if (options.fallback) {
              throw new Error("State-switching options are not allowed on fallback tokens (for token '" + options.defaultType + "')")
            }
          }

          // Only rules with a .match are included in the RegExp
          if (match.length === 0) {
            continue
          }
          fastAllowed = false;

          groups.push(options);

          // Check unicode flag is used everywhere or nowhere
          for (var j = 0; j < match.length; j++) {
            var obj = match[j];
            if (!isRegExp(obj)) {
              continue
            }

            if (unicodeFlag === null) {
              unicodeFlag = obj.unicode;
            } else if (unicodeFlag !== obj.unicode && options.fallback === false) {
              throw new Error('If one rule is /u then all must be')
            }
          }

          // convert to RegExp
          var pat = reUnion(match.map(regexpOrLiteral));

          // validate
          var regexp = new RegExp(pat);
          if (regexp.test("")) {
            throw new Error("RegExp matches empty string: " + regexp)
          }
          var groupCount = reGroups(pat);
          if (groupCount > 0) {
            throw new Error("RegExp has capture groups: " + regexp + "\nUse (?: … ) instead")
          }

          // try and detect rules matching newlines
          if (!options.lineBreaks && regexp.test('\n')) {
            throw new Error('Rule should declare lineBreaks: ' + regexp)
          }

          // store regex
          parts.push(reCapture(pat));
        }


        // If there's no fallback rule, use the sticky flag so we only look for
        // matches at the current index.
        //
        // If we don't support the sticky flag, then fake it using an irrefutable
        // match (i.e. an empty pattern).
        var fallbackRule = errorRule && errorRule.fallback;
        var flags = hasSticky && !fallbackRule ? 'ym' : 'gm';
        var suffix = hasSticky || fallbackRule ? '' : '|';

        if (unicodeFlag === true) flags += "u";
        var combined = new RegExp(reUnion(parts) + suffix, flags);
        return {regexp: combined, groups: groups, fast: fast, error: errorRule || defaultErrorRule}
      }

      function compile(rules) {
        var result = compileRules(toRules(rules));
        return new Lexer({start: result}, 'start')
      }

      function checkStateGroup(g, name, map) {
        var state = g && (g.push || g.next);
        if (state && !map[state]) {
          throw new Error("Missing state '" + state + "' (in token '" + g.defaultType + "' of state '" + name + "')")
        }
        if (g && g.pop && +g.pop !== 1) {
          throw new Error("pop must be 1 (in token '" + g.defaultType + "' of state '" + name + "')")
        }
      }
      function compileStates(states, start) {
        var all = states.$all ? toRules(states.$all) : [];
        delete states.$all;

        var keys = Object.getOwnPropertyNames(states);
        if (!start) start = keys[0];

        var ruleMap = Object.create(null);
        for (var i = 0; i < keys.length; i++) {
          var key = keys[i];
          ruleMap[key] = toRules(states[key]).concat(all);
        }
        for (var i = 0; i < keys.length; i++) {
          var key = keys[i];
          var rules = ruleMap[key];
          var included = Object.create(null);
          for (var j = 0; j < rules.length; j++) {
            var rule = rules[j];
            if (!rule.include) continue
            var splice = [j, 1];
            if (rule.include !== key && !included[rule.include]) {
              included[rule.include] = true;
              var newRules = ruleMap[rule.include];
              if (!newRules) {
                throw new Error("Cannot include nonexistent state '" + rule.include + "' (in state '" + key + "')")
              }
              for (var k = 0; k < newRules.length; k++) {
                var newRule = newRules[k];
                if (rules.indexOf(newRule) !== -1) continue
                splice.push(newRule);
              }
            }
            rules.splice.apply(rules, splice);
            j--;
          }
        }

        var map = Object.create(null);
        for (var i = 0; i < keys.length; i++) {
          var key = keys[i];
          map[key] = compileRules(ruleMap[key], true);
        }

        for (var i = 0; i < keys.length; i++) {
          var name = keys[i];
          var state = map[name];
          var groups = state.groups;
          for (var j = 0; j < groups.length; j++) {
            checkStateGroup(groups[j], name, map);
          }
          var fastKeys = Object.getOwnPropertyNames(state.fast);
          for (var j = 0; j < fastKeys.length; j++) {
            checkStateGroup(state.fast[fastKeys[j]], name, map);
          }
        }

        return new Lexer(map, start)
      }

      function keywordTransform(map) {
        var reverseMap = Object.create(null);
        var byLength = Object.create(null);
        var types = Object.getOwnPropertyNames(map);
        for (var i = 0; i < types.length; i++) {
          var tokenType = types[i];
          var item = map[tokenType];
          var keywordList = Array.isArray(item) ? item : [item];
          keywordList.forEach(function(keyword) {
            (byLength[keyword.length] = byLength[keyword.length] || []).push(keyword);
            if (typeof keyword !== 'string') {
              throw new Error("keyword must be string (in keyword '" + tokenType + "')")
            }
            reverseMap[keyword] = tokenType;
          });
        }

        // fast string lookup
        // https://jsperf.com/string-lookups
        function str(x) { return JSON.stringify(x) }
        var source = '';
        source += 'switch (value.length) {\n';
        for (var length in byLength) {
          var keywords = byLength[length];
          source += 'case ' + length + ':\n';
          source += 'switch (value) {\n';
          keywords.forEach(function(keyword) {
            var tokenType = reverseMap[keyword];
            source += 'case ' + str(keyword) + ': return ' + str(tokenType) + '\n';
          });
          source += '}\n';
        }
        source += '}\n';
        return Function('value', source) // type
      }

      /***************************************************************************/

      var Lexer = function(states, state) {
        this.startState = state;
        this.states = states;
        this.buffer = '';
        this.stack = [];
        this.reset();
      };

      Lexer.prototype.reset = function(data, info) {
        this.buffer = data || '';
        this.index = 0;
        this.line = info ? info.line : 1;
        this.col = info ? info.col : 1;
        this.queuedToken = info ? info.queuedToken : null;
        this.queuedThrow = info ? info.queuedThrow : null;
        this.setState(info ? info.state : this.startState);
        this.stack = info && info.stack ? info.stack.slice() : [];
        return this
      };

      Lexer.prototype.save = function() {
        return {
          line: this.line,
          col: this.col,
          state: this.state,
          stack: this.stack.slice(),
          queuedToken: this.queuedToken,
          queuedThrow: this.queuedThrow,
        }
      };

      Lexer.prototype.setState = function(state) {
        if (!state || this.state === state) return
        this.state = state;
        var info = this.states[state];
        this.groups = info.groups;
        this.error = info.error;
        this.re = info.regexp;
        this.fast = info.fast;
      };

      Lexer.prototype.popState = function() {
        this.setState(this.stack.pop());
      };

      Lexer.prototype.pushState = function(state) {
        this.stack.push(this.state);
        this.setState(state);
      };

      var eat = hasSticky ? function(re, buffer) { // assume re is /y
        return re.exec(buffer)
      } : function(re, buffer) { // assume re is /g
        var match = re.exec(buffer);
        // will always match, since we used the |(?:) trick
        if (match[0].length === 0) {
          return null
        }
        return match
      };

      Lexer.prototype._getGroup = function(match) {
        var groupCount = this.groups.length;
        for (var i = 0; i < groupCount; i++) {
          if (match[i + 1] !== undefined) {
            return this.groups[i]
          }
        }
        throw new Error('Cannot find token type for matched text')
      };

      function tokenToString() {
        return this.value
      }

      Lexer.prototype.next = function() {
        var index = this.index;

        // If a fallback token matched, we don't need to re-run the RegExp
        if (this.queuedGroup) {
          var token = this._token(this.queuedGroup, this.queuedText, index);
          this.queuedGroup = null;
          this.queuedText = "";
          return token
        }

        var buffer = this.buffer;
        if (index === buffer.length) {
          return // EOF
        }

        // Fast matching for single characters
        var group = this.fast[buffer.charCodeAt(index)];
        if (group) {
          return this._token(group, buffer.charAt(index), index)
        }

        // Execute RegExp
        var re = this.re;
        re.lastIndex = index;
        var match = eat(re, buffer);

        // Error tokens match the remaining buffer
        var error = this.error;
        if (match == null) {
          return this._token(error, buffer.slice(index, buffer.length), index)
        }

        var group = this._getGroup(match);
        var text = match[0];

        if (error.fallback && match.index !== index) {
          this.queuedGroup = group;
          this.queuedText = text;

          // Fallback tokens contain the unmatched portion of the buffer
          return this._token(error, buffer.slice(index, match.index), index)
        }

        return this._token(group, text, index)
      };

      Lexer.prototype._token = function(group, text, offset) {
        // count line breaks
        var lineBreaks = 0;
        if (group.lineBreaks) {
          var matchNL = /\n/g;
          var nl = 1;
          if (text === '\n') {
            lineBreaks = 1;
          } else {
            while (matchNL.exec(text)) { lineBreaks++; nl = matchNL.lastIndex; }
          }
        }

        var token = {
          type: (typeof group.type === 'function' && group.type(text)) || group.defaultType,
          value: typeof group.value === 'function' ? group.value(text) : text,
          text: text,
          toString: tokenToString,
          offset: offset,
          lineBreaks: lineBreaks,
          line: this.line,
          col: this.col,
        };
        // nb. adding more props to token object will make V8 sad!

        var size = text.length;
        this.index += size;
        this.line += lineBreaks;
        if (lineBreaks !== 0) {
          this.col = size - nl + 1;
        } else {
          this.col += size;
        }

        // throw, if no rule with {error: true}
        if (group.shouldThrow) {
          throw new Error(this.formatError(token, "invalid syntax"))
        }

        if (group.pop) this.popState();
        else if (group.push) this.pushState(group.push);
        else if (group.next) this.setState(group.next);

        return token
      };

      if (typeof Symbol !== 'undefined' && Symbol.iterator) {
        var LexerIterator = function(lexer) {
          this.lexer = lexer;
        };

        LexerIterator.prototype.next = function() {
          var token = this.lexer.next();
          return {value: token, done: !token}
        };

        LexerIterator.prototype[Symbol.iterator] = function() {
          return this
        };

        Lexer.prototype[Symbol.iterator] = function() {
          return new LexerIterator(this)
        };
      }

      Lexer.prototype.formatError = function(token, message) {
        if (token == null) {
          // An undefined token indicates EOF
          var text = this.buffer.slice(this.index);
          var token = {
            text: text,
            offset: this.index,
            lineBreaks: text.indexOf('\n') === -1 ? 0 : 1,
            line: this.line,
            col: this.col,
          };
        }
        var start = Math.max(0, token.offset - token.col + 1);
        var eol = token.lineBreaks ? token.text.indexOf('\n') : token.text.length;
        var firstLine = this.buffer.substring(start, token.offset + eol);
        message += " at line " + token.line + " col " + token.col + ":\n\n";
        message += "  " + firstLine + "\n";
        message += "  " + Array(token.col).join(" ") + "^";
        return message
      };

      Lexer.prototype.clone = function() {
        return new Lexer(this.states, this.state)
      };

      Lexer.prototype.has = function(tokenType) {
        return true
      };


      return {
        compile: compile,
        states: compileStates,
        error: Object.freeze({error: true}),
        fallback: Object.freeze({fallback: true}),
        keywords: keywordTransform,
      }

    }));
    });

    var nearley = createCommonjsModule(function (module) {
    (function(root, factory) {
        if (module.exports) {
            module.exports = factory();
        } else {
            root.nearley = factory();
        }
    }(commonjsGlobal, function() {

        function Rule(name, symbols, postprocess) {
            this.id = ++Rule.highestId;
            this.name = name;
            this.symbols = symbols;        // a list of literal | regex class | nonterminal
            this.postprocess = postprocess;
            return this;
        }
        Rule.highestId = 0;

        Rule.prototype.toString = function(withCursorAt) {
            var symbolSequence = (typeof withCursorAt === "undefined")
                                 ? this.symbols.map(getSymbolShortDisplay).join(' ')
                                 : (   this.symbols.slice(0, withCursorAt).map(getSymbolShortDisplay).join(' ')
                                     + " ● "
                                     + this.symbols.slice(withCursorAt).map(getSymbolShortDisplay).join(' ')     );
            return this.name + " → " + symbolSequence;
        };


        // a State is a rule at a position from a given starting point in the input stream (reference)
        function State(rule, dot, reference, wantedBy) {
            this.rule = rule;
            this.dot = dot;
            this.reference = reference;
            this.data = [];
            this.wantedBy = wantedBy;
            this.isComplete = this.dot === rule.symbols.length;
        }

        State.prototype.toString = function() {
            return "{" + this.rule.toString(this.dot) + "}, from: " + (this.reference || 0);
        };

        State.prototype.nextState = function(child) {
            var state = new State(this.rule, this.dot + 1, this.reference, this.wantedBy);
            state.left = this;
            state.right = child;
            if (state.isComplete) {
                state.data = state.build();
                // Having right set here will prevent the right state and its children
                // form being garbage collected
                state.right = undefined;
            }
            return state;
        };

        State.prototype.build = function() {
            var children = [];
            var node = this;
            do {
                children.push(node.right.data);
                node = node.left;
            } while (node.left);
            children.reverse();
            return children;
        };

        State.prototype.finish = function() {
            if (this.rule.postprocess) {
                this.data = this.rule.postprocess(this.data, this.reference, Parser.fail);
            }
        };


        function Column(grammar, index) {
            this.grammar = grammar;
            this.index = index;
            this.states = [];
            this.wants = {}; // states indexed by the non-terminal they expect
            this.scannable = []; // list of states that expect a token
            this.completed = {}; // states that are nullable
        }


        Column.prototype.process = function(nextColumn) {
            var states = this.states;
            var wants = this.wants;
            var completed = this.completed;

            for (var w = 0; w < states.length; w++) { // nb. we push() during iteration
                var state = states[w];

                if (state.isComplete) {
                    state.finish();
                    if (state.data !== Parser.fail) {
                        // complete
                        var wantedBy = state.wantedBy;
                        for (var i = wantedBy.length; i--; ) { // this line is hot
                            var left = wantedBy[i];
                            this.complete(left, state);
                        }

                        // special-case nullables
                        if (state.reference === this.index) {
                            // make sure future predictors of this rule get completed.
                            var exp = state.rule.name;
                            (this.completed[exp] = this.completed[exp] || []).push(state);
                        }
                    }

                } else {
                    // queue scannable states
                    var exp = state.rule.symbols[state.dot];
                    if (typeof exp !== 'string') {
                        this.scannable.push(state);
                        continue;
                    }

                    // predict
                    if (wants[exp]) {
                        wants[exp].push(state);

                        if (completed.hasOwnProperty(exp)) {
                            var nulls = completed[exp];
                            for (var i = 0; i < nulls.length; i++) {
                                var right = nulls[i];
                                this.complete(state, right);
                            }
                        }
                    } else {
                        wants[exp] = [state];
                        this.predict(exp);
                    }
                }
            }
        };

        Column.prototype.predict = function(exp) {
            var rules = this.grammar.byName[exp] || [];

            for (var i = 0; i < rules.length; i++) {
                var r = rules[i];
                var wantedBy = this.wants[exp];
                var s = new State(r, 0, this.index, wantedBy);
                this.states.push(s);
            }
        };

        Column.prototype.complete = function(left, right) {
            var copy = left.nextState(right);
            this.states.push(copy);
        };


        function Grammar(rules, start) {
            this.rules = rules;
            this.start = start || this.rules[0].name;
            var byName = this.byName = {};
            this.rules.forEach(function(rule) {
                if (!byName.hasOwnProperty(rule.name)) {
                    byName[rule.name] = [];
                }
                byName[rule.name].push(rule);
            });
        }

        // So we can allow passing (rules, start) directly to Parser for backwards compatibility
        Grammar.fromCompiled = function(rules, start) {
            var lexer = rules.Lexer;
            if (rules.ParserStart) {
              start = rules.ParserStart;
              rules = rules.ParserRules;
            }
            var rules = rules.map(function (r) { return (new Rule(r.name, r.symbols, r.postprocess)); });
            var g = new Grammar(rules, start);
            g.lexer = lexer; // nb. storing lexer on Grammar is iffy, but unavoidable
            return g;
        };


        function StreamLexer() {
          this.reset("");
        }

        StreamLexer.prototype.reset = function(data, state) {
            this.buffer = data;
            this.index = 0;
            this.line = state ? state.line : 1;
            this.lastLineBreak = state ? -state.col : 0;
        };

        StreamLexer.prototype.next = function() {
            if (this.index < this.buffer.length) {
                var ch = this.buffer[this.index++];
                if (ch === '\n') {
                  this.line += 1;
                  this.lastLineBreak = this.index;
                }
                return {value: ch};
            }
        };

        StreamLexer.prototype.save = function() {
          return {
            line: this.line,
            col: this.index - this.lastLineBreak,
          }
        };

        StreamLexer.prototype.formatError = function(token, message) {
            // nb. this gets called after consuming the offending token,
            // so the culprit is index-1
            var buffer = this.buffer;
            if (typeof buffer === 'string') {
                var lines = buffer
                    .split("\n")
                    .slice(
                        Math.max(0, this.line - 5), 
                        this.line
                    );

                buffer.indexOf('\n', this.index);
                var col = this.index - this.lastLineBreak;
                var lastLineDigits = String(this.line).length;
                message += " at line " + this.line + " col " + col + ":\n\n";
                message += lines
                    .map(function(line, i) {
                        return pad(this.line - lines.length + i + 1, lastLineDigits) + " " + line;
                    }, this)
                    .join("\n");
                message += "\n" + pad("", lastLineDigits + col) + "^\n";
                return message;
            } else {
                return message + " at index " + (this.index - 1);
            }

            function pad(n, length) {
                var s = String(n);
                return Array(length - s.length + 1).join(" ") + s;
            }
        };

        function Parser(rules, start, options) {
            if (rules instanceof Grammar) {
                var grammar = rules;
                var options = start;
            } else {
                var grammar = Grammar.fromCompiled(rules, start);
            }
            this.grammar = grammar;

            // Read options
            this.options = {
                keepHistory: false,
                lexer: grammar.lexer || new StreamLexer,
            };
            for (var key in (options || {})) {
                this.options[key] = options[key];
            }

            // Setup lexer
            this.lexer = this.options.lexer;
            this.lexerState = undefined;

            // Setup a table
            var column = new Column(grammar, 0);
            this.table = [column];

            // I could be expecting anything.
            column.wants[grammar.start] = [];
            column.predict(grammar.start);
            // TODO what if start rule is nullable?
            column.process();
            this.current = 0; // token index
        }

        // create a reserved token for indicating a parse fail
        Parser.fail = {};

        Parser.prototype.feed = function(chunk) {
            var lexer = this.lexer;
            lexer.reset(chunk, this.lexerState);

            var token;
            while (true) {
                try {
                    token = lexer.next();
                    if (!token) {
                        break;
                    }
                } catch (e) {
                    // Create the next column so that the error reporter
                    // can display the correctly predicted states.
                    var nextColumn = new Column(this.grammar, this.current + 1);
                    this.table.push(nextColumn);
                    var err = new Error(this.reportLexerError(e));
                    err.offset = this.current;
                    err.token = e.token;
                    throw err;
                }
                // We add new states to table[current+1]
                var column = this.table[this.current];

                // GC unused states
                if (!this.options.keepHistory) {
                    delete this.table[this.current - 1];
                }

                var n = this.current + 1;
                var nextColumn = new Column(this.grammar, n);
                this.table.push(nextColumn);

                // Advance all tokens that expect the symbol
                var literal = token.text !== undefined ? token.text : token.value;
                var value = lexer.constructor === StreamLexer ? token.value : token;
                var scannable = column.scannable;
                for (var w = scannable.length; w--; ) {
                    var state = scannable[w];
                    var expect = state.rule.symbols[state.dot];
                    // Try to consume the token
                    // either regex or literal
                    if (expect.test ? expect.test(value) :
                        expect.type ? expect.type === token.type
                                    : expect.literal === literal) {
                        // Add it
                        var next = state.nextState({data: value, token: token, isToken: true, reference: n - 1});
                        nextColumn.states.push(next);
                    }
                }

                // Next, for each of the rules, we either
                // (a) complete it, and try to see if the reference row expected that
                //     rule
                // (b) predict the next nonterminal it expects by adding that
                //     nonterminal's start state
                // To prevent duplication, we also keep track of rules we have already
                // added

                nextColumn.process();

                // If needed, throw an error:
                if (nextColumn.states.length === 0) {
                    // No states at all! This is not good.
                    var err = new Error(this.reportError(token));
                    err.offset = this.current;
                    err.token = token;
                    throw err;
                }

                // maybe save lexer state
                if (this.options.keepHistory) {
                  column.lexerState = lexer.save();
                }

                this.current++;
            }
            if (column) {
              this.lexerState = lexer.save();
            }

            // Incrementally keep track of results
            this.results = this.finish();

            // Allow chaining, for whatever it's worth
            return this;
        };

        Parser.prototype.reportLexerError = function(lexerError) {
            var tokenDisplay, lexerMessage;
            // Planning to add a token property to moo's thrown error
            // even on erroring tokens to be used in error display below
            var token = lexerError.token;
            if (token) {
                tokenDisplay = "input " + JSON.stringify(token.text[0]) + " (lexer error)";
                lexerMessage = this.lexer.formatError(token, "Syntax error");
            } else {
                tokenDisplay = "input (lexer error)";
                lexerMessage = lexerError.message;
            }
            return this.reportErrorCommon(lexerMessage, tokenDisplay);
        };

        Parser.prototype.reportError = function(token) {
            var tokenDisplay = (token.type ? token.type + " token: " : "") + JSON.stringify(token.value !== undefined ? token.value : token);
            var lexerMessage = this.lexer.formatError(token, "Syntax error");
            return this.reportErrorCommon(lexerMessage, tokenDisplay);
        };

        Parser.prototype.reportErrorCommon = function(lexerMessage, tokenDisplay) {
            var lines = [];
            lines.push(lexerMessage);
            var lastColumnIndex = this.table.length - 2;
            var lastColumn = this.table[lastColumnIndex];
            var expectantStates = lastColumn.states
                .filter(function(state) {
                    var nextSymbol = state.rule.symbols[state.dot];
                    return nextSymbol && typeof nextSymbol !== "string";
                });

            if (expectantStates.length === 0) {
                lines.push('Unexpected ' + tokenDisplay + '. I did not expect any more input. Here is the state of my parse table:\n');
                this.displayStateStack(lastColumn.states, lines);
            } else {
                lines.push('Unexpected ' + tokenDisplay + '. Instead, I was expecting to see one of the following:\n');
                // Display a "state stack" for each expectant state
                // - which shows you how this state came to be, step by step.
                // If there is more than one derivation, we only display the first one.
                var stateStacks = expectantStates
                    .map(function(state) {
                        return this.buildFirstStateStack(state, []) || [state];
                    }, this);
                // Display each state that is expecting a terminal symbol next.
                stateStacks.forEach(function(stateStack) {
                    var state = stateStack[0];
                    var nextSymbol = state.rule.symbols[state.dot];
                    var symbolDisplay = this.getSymbolDisplay(nextSymbol);
                    lines.push('A ' + symbolDisplay + ' based on:');
                    this.displayStateStack(stateStack, lines);
                }, this);
            }
            lines.push("");
            return lines.join("\n");
        };
        
        Parser.prototype.displayStateStack = function(stateStack, lines) {
            var lastDisplay;
            var sameDisplayCount = 0;
            for (var j = 0; j < stateStack.length; j++) {
                var state = stateStack[j];
                var display = state.rule.toString(state.dot);
                if (display === lastDisplay) {
                    sameDisplayCount++;
                } else {
                    if (sameDisplayCount > 0) {
                        lines.push('    ^ ' + sameDisplayCount + ' more lines identical to this');
                    }
                    sameDisplayCount = 0;
                    lines.push('    ' + display);
                }
                lastDisplay = display;
            }
        };

        Parser.prototype.getSymbolDisplay = function(symbol) {
            return getSymbolLongDisplay(symbol);
        };

        /*
        Builds a the first state stack. You can think of a state stack as the call stack
        of the recursive-descent parser which the Nearley parse algorithm simulates.
        A state stack is represented as an array of state objects. Within a
        state stack, the first item of the array will be the starting
        state, with each successive item in the array going further back into history.

        This function needs to be given a starting state and an empty array representing
        the visited states, and it returns an single state stack.

        */
        Parser.prototype.buildFirstStateStack = function(state, visited) {
            if (visited.indexOf(state) !== -1) {
                // Found cycle, return null
                // to eliminate this path from the results, because
                // we don't know how to display it meaningfully
                return null;
            }
            if (state.wantedBy.length === 0) {
                return [state];
            }
            var prevState = state.wantedBy[0];
            var childVisited = [state].concat(visited);
            var childResult = this.buildFirstStateStack(prevState, childVisited);
            if (childResult === null) {
                return null;
            }
            return [state].concat(childResult);
        };

        Parser.prototype.save = function() {
            var column = this.table[this.current];
            column.lexerState = this.lexerState;
            return column;
        };

        Parser.prototype.restore = function(column) {
            var index = column.index;
            this.current = index;
            this.table[index] = column;
            this.table.splice(index + 1);
            this.lexerState = column.lexerState;

            // Incrementally keep track of results
            this.results = this.finish();
        };

        // nb. deprecated: use save/restore instead!
        Parser.prototype.rewind = function(index) {
            if (!this.options.keepHistory) {
                throw new Error('set option `keepHistory` to enable rewinding')
            }
            // nb. recall column (table) indicies fall between token indicies.
            //        col 0   --   token 0   --   col 1
            this.restore(this.table[index]);
        };

        Parser.prototype.finish = function() {
            // Return the possible parsings
            var considerations = [];
            var start = this.grammar.start;
            var column = this.table[this.table.length - 1];
            column.states.forEach(function (t) {
                if (t.rule.name === start
                        && t.dot === t.rule.symbols.length
                        && t.reference === 0
                        && t.data !== Parser.fail) {
                    considerations.push(t);
                }
            });
            return considerations.map(function(c) {return c.data; });
        };

        function getSymbolLongDisplay(symbol) {
            var type = typeof symbol;
            if (type === "string") {
                return symbol;
            } else if (type === "object") {
                if (symbol.literal) {
                    return JSON.stringify(symbol.literal);
                } else if (symbol instanceof RegExp) {
                    return 'character matching ' + symbol;
                } else if (symbol.type) {
                    return symbol.type + ' token';
                } else if (symbol.test) {
                    return 'token matching ' + String(symbol.test);
                } else {
                    throw new Error('Unknown symbol type: ' + symbol);
                }
            }
        }

        function getSymbolShortDisplay(symbol) {
            var type = typeof symbol;
            if (type === "string") {
                return symbol;
            } else if (type === "object") {
                if (symbol.literal) {
                    return JSON.stringify(symbol.literal);
                } else if (symbol instanceof RegExp) {
                    return symbol.toString();
                } else if (symbol.type) {
                    return '%' + symbol.type;
                } else if (symbol.test) {
                    return '<' + String(symbol.test) + '>';
                } else {
                    throw new Error('Unknown symbol type: ' + symbol);
                }
            }
        }

        return {
            Parser: Parser,
            Grammar: Grammar,
            Rule: Rule,
        };

    }));
    });

    var pgsqlAstParser = createCommonjsModule(function (module, exports) {
    (function(e, a) { for(var i in a) e[i] = a[i]; }(exports, /******/ (function(modules) { // webpackBootstrap
    /******/ 	// The module cache
    /******/ 	var installedModules = {};
    /******/
    /******/ 	// The require function
    /******/ 	function __webpack_require__(moduleId) {
    /******/
    /******/ 		// Check if module is in cache
    /******/ 		if(installedModules[moduleId]) {
    /******/ 			return installedModules[moduleId].exports;
    /******/ 		}
    /******/ 		// Create a new module (and put it into the cache)
    /******/ 		var module = installedModules[moduleId] = {
    /******/ 			i: moduleId,
    /******/ 			l: false,
    /******/ 			exports: {}
    /******/ 		};
    /******/
    /******/ 		// Execute the module function
    /******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
    /******/
    /******/ 		// Flag the module as loaded
    /******/ 		module.l = true;
    /******/
    /******/ 		// Return the exports of the module
    /******/ 		return module.exports;
    /******/ 	}
    /******/
    /******/
    /******/ 	// expose the modules object (__webpack_modules__)
    /******/ 	__webpack_require__.m = modules;
    /******/
    /******/ 	// expose the module cache
    /******/ 	__webpack_require__.c = installedModules;
    /******/
    /******/ 	// define getter function for harmony exports
    /******/ 	__webpack_require__.d = function(exports, name, getter) {
    /******/ 		if(!__webpack_require__.o(exports, name)) {
    /******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
    /******/ 		}
    /******/ 	};
    /******/
    /******/ 	// define __esModule on exports
    /******/ 	__webpack_require__.r = function(exports) {
    /******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
    /******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
    /******/ 		}
    /******/ 		Object.defineProperty(exports, '__esModule', { value: true });
    /******/ 	};
    /******/
    /******/ 	// create a fake namespace object
    /******/ 	// mode & 1: value is a module id, require it
    /******/ 	// mode & 2: merge all properties of value into the ns
    /******/ 	// mode & 4: return value when already ns object
    /******/ 	// mode & 8|1: behave like require
    /******/ 	__webpack_require__.t = function(value, mode) {
    /******/ 		if(mode & 1) value = __webpack_require__(value);
    /******/ 		if(mode & 8) return value;
    /******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
    /******/ 		var ns = Object.create(null);
    /******/ 		__webpack_require__.r(ns);
    /******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
    /******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
    /******/ 		return ns;
    /******/ 	};
    /******/
    /******/ 	// getDefaultExport function for compatibility with non-harmony modules
    /******/ 	__webpack_require__.n = function(module) {
    /******/ 		var getter = module && module.__esModule ?
    /******/ 			function getDefault() { return module['default']; } :
    /******/ 			function getModuleExports() { return module; };
    /******/ 		__webpack_require__.d(getter, 'a', getter);
    /******/ 		return getter;
    /******/ 	};
    /******/
    /******/ 	// Object.prototype.hasOwnProperty.call
    /******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
    /******/
    /******/ 	// __webpack_public_path__
    /******/ 	__webpack_require__.p = "";
    /******/
    /******/
    /******/ 	// Load entry module and return exports
    /******/ 	return __webpack_require__(__webpack_require__.s = 7);
    /******/ })
    /************************************************************************/
    /******/ ([
    /* 0 */
    /***/ (function(module, exports) {

    module.exports = moo;

    /***/ }),
    /* 1 */
    /***/ (function(module, exports, __webpack_require__) {

    Object.defineProperty(exports, "__esModule", { value: true });
    exports.unbox = exports.box = exports.track = exports.tracking = exports.trackingComments = exports.lexerAny = exports.lexer = void 0;
    const moo_1 = __webpack_require__(0);
    const keywords_1 = __webpack_require__(3);
    // build keywords
    const keywodsMap = {};
    for (const k of keywords_1.sqlKeywords) {
        keywodsMap['kw_' + k.toLowerCase()] = k;
    }
    const caseInsensitiveKeywords = (map) => {
        const transform = moo_1.keywords(map);
        return (text) => transform(text.toUpperCase());
    };
    // build lexer
    exports.lexer = moo_1.compile({
        word: {
            match: /[eE](?!')[A-Za-z0-9_]*|[a-df-zA-DF-Z_][A-Za-z0-9_]*/,
            type: caseInsensitiveKeywords(keywodsMap),
            value: x => x.toLowerCase(),
        },
        wordQuoted: {
            match: /"(?:[^"\*]|"")+"/,
            type: () => 'word',
        },
        string: {
            match: /'(?:[^']|\'\')*'/,
            value: x => {
                return x.substr(1, x.length - 2)
                    .replace(/''/g, '\'');
            },
        },
        eString: {
            match: /\b(?:e|E)'(?:[^'\\]|[\r\n\s]|(?:\\\s)|(?:\\\n)|(?:\\.)|(?:\'\'))+'/,
            value: x => {
                return x.substr(2, x.length - 3)
                    .replace(/''/g, '\'')
                    .replace(/\\([\s\n])/g, (_, x) => x)
                    .replace(/\\./g, m => JSON.parse('"' + m + '"'));
            },
        },
        qparam: {
            match: /\$\d+/,
        },
        star: '*',
        comma: ',',
        space: { match: /[\s\t\n\v\f\r]+/, lineBreaks: true, },
        int: /\-?\d+(?![\.\d])/,
        float: /\-?(?:(?:\d*\.\d+)|(?:\d+\.\d*))/,
        // word: /[a-zA-Z][A-Za-z0-9_\-]*/,
        commentLine: /\-\-.*?$[\s\r\n]*/,
        commentFull: /(?<!\/)\/\*(?:.|[\r\n])*?\*\/[\s\r\n]*/,
        lparen: '(',
        rparen: ')',
        lbracket: '[',
        rbracket: ']',
        semicolon: ';',
        dot: /\.(?!\d)/,
        op_cast: '::',
        op_plus: '+',
        op_eq: '=',
        op_neq: {
            match: /(?:!=)|(?:\<\>)/,
            value: () => '!=',
        },
        op_minus: /(?<!\-)\-(?!\-)(?!\>)/,
        op_div: /(?<!\/)\/(?!\/)/,
        op_like: /(?<!\!)~~(?!\*)/,
        op_ilike: /(?<!\!)~~\*/,
        op_not_like: /\!~~(?!\*)/,
        op_not_ilike: /\!~~\*/,
        op_mod: '%',
        op_exp: '^',
        op_member: /\-\>(?!\>)/,
        op_membertext: '->>',
        op_additive: {
            // group other additive operators
            match: ['||', '-', '#-', '&&'],
        },
        op_compare: {
            // group other comparison operators
            // ... to add: "IN" and "NOT IN" that are matched by keywords
            match: ['>', '>=', '<', '<=', '@>', '<@', '?', '?|', '?&', '#>>', '>>', '<<', '~'],
        },
        ops_others: {
            // referenced as (any other operator) in https://www.postgresql.org/docs/12/sql-syntax-lexical.html#SQL-PRECEDENCE
            // see also https://www.postgresql.org/docs/9.0/functions-math.html
            match: ['|', '&', '^', '#'],
        },
        codeblock: {
            match: /\$\$(?:.|[\s\t\n\v\f\r])*?\$\$/s,
            lineBreaks: true,
            value: (x) => x.substr(2, x.length - 4),
        },
    });
    exports.lexer.next = (next => () => {
        let tok;
        while (tok = next.call(exports.lexer)) {
            if (tok.type === 'space') {
                continue;
            }
            if (tok.type === 'commentLine' || tok.type === 'commentFull') {
                comments === null || comments === void 0 ? void 0 : comments.push({
                    _location: { start: tok.offset, end: tok.offset + tok.text.length },
                    comment: tok.text,
                });
                continue;
            }
            break;
        }
        if (trackingLoc && tok) {
            const start = tok.offset;
            const loc = {
                start,
                end: start + tok.text.length,
            };
            tok._location = loc;
        }
        return tok;
    })(exports.lexer.next);
    exports.lexerAny = exports.lexer;
    let comments = null;
    function trackingComments(act) {
        if (comments) {
            throw new Error('WAT ? Recursive comments tracking 🤔🤨 ?');
        }
        try {
            comments = [];
            const ast = act();
            return { comments, ast };
        }
        finally {
            comments = null;
        }
    }
    exports.trackingComments = trackingComments;
    let trackingLoc = false;
    function tracking(act) {
        if (trackingLoc) {
            return act();
        }
        try {
            trackingLoc = true;
            return act();
        }
        finally {
            trackingLoc = false;
        }
    }
    exports.tracking = tracking;
    function track(xs, ret) {
        if (!trackingLoc || !ret || typeof ret !== 'object') {
            return ret;
        }
        const start = seek(xs, true);
        const end = seek(xs, false);
        if (!start || !end) {
            return ret;
        }
        if (start === end) {
            ret._location = start;
        }
        else {
            const loc = {
                start: start.start,
                end: end.end,
            };
            ret._location = loc;
        }
        return ret;
    }
    exports.track = track;
    const literal = Symbol('_literal');
    function box(xs, value) {
        if (!trackingLoc) {
            return value;
        }
        return track(xs, { [literal]: value });
    }
    exports.box = box;
    function unbox(value) {
        var _a;
        if (!trackingLoc) {
            return value;
        }
        if (typeof value === 'object') {
            return (_a = value === null || value === void 0 ? void 0 : value[literal]) !== null && _a !== void 0 ? _a : value;
        }
        return value;
    }
    exports.unbox = unbox;
    function seek(xs, start) {
        if (!xs) {
            return null;
        }
        if (Array.isArray(xs)) {
            const diff = start ? 1 : -1;
            for (let i = start ? 0 : xs.length - 1; i >= 0 && i < xs.length; i += diff) {
                const v = seek(xs[i], start);
                if (v) {
                    return v;
                }
            }
            return null;
        }
        if (typeof xs !== 'object') {
            return null;
        }
        return xs._location;
    }


    /***/ }),
    /* 2 */
    /***/ (function(module, exports, __webpack_require__) {

    Object.defineProperty(exports, "__esModule", { value: true });
    exports.AstDefaultMapper = exports.arrayNilMap = exports.assignChanged = exports.astMapper = void 0;
    const utils_1 = __webpack_require__(6);
    /**
     * Builds an AST modifier based on the default implementation, merged with the one you provide.
     *
     * Example of a modifier that renames all reference to columns 'foo' to 'bar'
     * ```ts
     *  const mapper = astMapper(b => ({
     *       ref: a => assignChanged(a, {
     *           name: a.name === 'foo'
     *               ? 'bar'
     *               : a.name
     *       })
     *   }));
     *
     * const modified = mapper.statement(myStatementToModify);
     * ```
     */
    function astMapper(modifierBuilder) {
        const instance = new AstDefaultMapper();
        instance.wrapped = modifierBuilder(instance);
        return instance;
    }
    exports.astMapper = astMapper;
    /**
     * An helper function that returns a copy of an object with modified properties
     * (similar to Object.assign()), but ONLY if thos properties have changed.
     * Will return the original object if not.
     */
    function assignChanged(orig, assign) {
        if (!orig) {
            return orig;
        }
        let changed = false;
        for (const k of Object.keys(assign)) {
            if (orig[k] !== assign[k]) {
                changed = true;
                break;
            }
        }
        if (!changed) {
            return orig;
        }
        return utils_1.trimNullish({
            ...orig,
            ...assign,
        }, 0);
    }
    exports.assignChanged = assignChanged;
    /**
     * An helper function that returns a map of an array, but:
     * - It will return the original array if it is null-ish
     * - It will remove all null-ish entries
     * - It will return the original array if nothing has changed
     */
    function arrayNilMap(collection, mapper) {
        if (!(collection === null || collection === void 0 ? void 0 : collection.length)) {
            return collection;
        }
        let changed = false;
        let ret = collection;
        for (let i = 0; i < collection.length; i++) {
            const orig = collection[i];
            const val = mapper(orig);
            if (!val || val !== orig) {
                changed = true;
                ret = collection.slice(0, i);
            }
            if (!val) {
                continue;
            }
            if (changed) {
                ret.push(val);
            }
        }
        return ret;
    }
    exports.arrayNilMap = arrayNilMap;
    function withAccepts(val) {
        switch (val === null || val === void 0 ? void 0 : val.type) {
            case 'select':
            case 'delete':
            case 'insert':
            case 'update':
            case 'union':
            case 'union all':
            case 'with':
                return true;
            default:
                return false;
        }
    }
    /**
     * Can be used to modify an AST.
     *
     * You will have to override functions that you're interested in to use this class.
     *
     * Example: Will remove all references in
     */
    class AstDefaultMapper {
        super() {
            return new SkipModifier(this);
        }
        statement(val) {
            switch (val.type) {
                case 'alter table':
                    return this.alterTable(val);
                case 'commit':
                case 'start transaction':
                case 'rollback':
                    return this.transaction(val);
                case 'create index':
                    return this.createIndex(val);
                case 'create table':
                    return this.createTable(val);
                case 'truncate table':
                    return this.truncateTable(val);
                case 'delete':
                    return this.delete(val);
                case 'insert':
                    return this.insert(val);
                case 'with':
                    return this.with(val);
                case 'with recursive':
                    return this.withRecursive(val);
                case 'select':
                    return this.selection(val);
                case 'update':
                    return this.update(val);
                case 'create extension':
                    return this.createExtension(val);
                case 'tablespace':
                    return this.tablespace(val);
                case 'set':
                    return this.setGlobal(val);
                case 'set timezone':
                    return this.setTimezone(val);
                case 'create sequence':
                    return this.createSequence(val);
                case 'alter sequence':
                    return this.alterSequence(val);
                case 'begin':
                    return this.begin(val);
                case 'drop index':
                    return this.dropIndex(val);
                case 'drop sequence':
                    return this.dropSequence(val);
                case 'drop table':
                    return this.dropTable(val);
                case 'create enum':
                    return this.createEnum(val);
                case 'union':
                case 'union all':
                    return this.union(val);
                case 'show':
                    return this.show(val);
                case 'prepare':
                    return this.prepare(val);
                case 'create view':
                    return this.createView(val);
                case 'create materialized view':
                    return this.createMaterializedView(val);
                case 'create schema':
                    return this.createSchema(val);
                case 'raise':
                    return this.raise(val);
                case 'comment':
                    return this.comment(val);
                case 'do':
                    return this.do(val);
                case 'create function':
                    return this.createFunction(val);
                case 'values':
                    return this.values(val);
                default:
                    throw utils_1.NotSupported.never(val);
            }
        }
        comment(val) {
            // not really supported :/
            return val;
        }
        createView(val) {
            const query = this.select(val.query);
            if (!query) {
                return null;
            }
            const ref = this.tableRef(val.name);
            if (!ref) {
                return null;
            }
            return assignChanged(val, {
                query,
                name: ref,
            });
        }
        createMaterializedView(val) {
            const query = this.select(val.query);
            if (!query) {
                return null;
            }
            const ref = this.tableRef(val.name);
            if (!ref) {
                return null;
            }
            return assignChanged(val, {
                query,
                name: ref,
            });
        }
        do(val) {
            return val;
        }
        createFunction(val) {
            // process arguments
            const args = arrayNilMap(val.arguments, a => {
                const type = this.dataType(a.type);
                return assignChanged(a, { type });
            });
            // process return type
            let returns;
            if (val.returns) {
                switch (val.returns.kind) {
                    case 'table':
                        returns = assignChanged(val.returns, {
                            columns: arrayNilMap(val.returns.columns, v => {
                                const type = this.dataType(v.type);
                                return type && assignChanged(v, { type });
                            })
                        });
                        break;
                    case undefined:
                    case null:
                    case 'array':
                        returns = this.dataType(val.returns);
                        break;
                    default:
                        throw utils_1.NotSupported.never(val.returns);
                }
            }
            return assignChanged(val, {
                returns,
                arguments: args,
            });
        }
        show(val) {
            return val;
        }
        createEnum(val) {
            return val;
        }
        dropTable(val) {
            return val;
        }
        dropIndex(val) {
            return val;
        }
        dropSequence(val) {
            return val;
        }
        alterSequence(seq) {
            if (seq.change.type === 'set options') {
                if (seq.change.as) {
                    this.dataType(seq.change.as);
                }
            }
            return seq;
        }
        begin(begin) {
            return begin;
        }
        createSequence(seq) {
            if (seq.options.as) {
                this.dataType(seq.options.as);
            }
            return seq;
        }
        tablespace(val) {
            return val;
        }
        setGlobal(val) {
            return val;
        }
        setTimezone(val) {
            return val;
        }
        update(val) {
            if (!val) {
                return val;
            }
            const table = this.tableRef(val.table);
            if (!table) {
                return null; // nothing to update
            }
            const where = val.where && this.expr(val.where);
            const sets = arrayNilMap(val.sets, x => this.set(x));
            if (!(sets === null || sets === void 0 ? void 0 : sets.length)) {
                return null; // nothing to update
            }
            const returning = arrayNilMap(val.returning, c => this.selectionColumn(c));
            return assignChanged(val, {
                table,
                where,
                sets,
                returning,
            });
        }
        insert(val) {
            var _a, _b;
            const into = this.tableRef(val.into);
            if (!into) {
                return null; // nowhere to insert into
            }
            const select = val.insert && this.select(val.insert);
            if (!select) {
                // nothing to insert
                return null;
            }
            const returning = arrayNilMap(val.returning, c => this.selectionColumn(c));
            const onConflictOn = arrayNilMap((_a = val.onConflict) === null || _a === void 0 ? void 0 : _a.on, e => this.expr(e));
            let ocdo = (_b = val.onConflict) === null || _b === void 0 ? void 0 : _b.do;
            if (ocdo && ocdo !== 'do nothing') {
                const sets = arrayNilMap(ocdo.sets, x => this.set(x));
                if (!(sets === null || sets === void 0 ? void 0 : sets.length)) {
                    ocdo = 'do nothing';
                }
                else if (ocdo.sets !== sets) {
                    ocdo = { sets };
                }
            }
            return assignChanged(val, {
                into,
                insert: select,
                returning,
                onConflict: !ocdo ? val.onConflict : assignChanged(val.onConflict, {
                    do: ocdo,
                    on: onConflictOn,
                }),
            });
        }
        raise(val) {
            return assignChanged(val, {
                formatExprs: val.formatExprs && arrayNilMap(val.formatExprs, x => this.expr(x)),
                using: val.using && arrayNilMap(val.using, u => {
                    return assignChanged(u, {
                        value: this.expr(u.value),
                    });
                }),
            });
        }
        delete(val) {
            const from = this.tableRef(val.from);
            if (!from) {
                return null; // nothing to delete
            }
            const where = val.where && this.expr(val.where);
            const returning = arrayNilMap(val.returning, c => this.selectionColumn(c));
            return assignChanged(val, {
                where,
                returning,
                from,
            });
        }
        createSchema(val) {
            return val;
        }
        createTable(val) {
            const columns = arrayNilMap(val.columns, col => {
                switch (col.kind) {
                    case 'column':
                        return this.createColumn(col);
                    case 'like table':
                        return this.likeTable(col);
                    default:
                        throw utils_1.NotSupported.never(col);
                }
            });
            if (!(columns === null || columns === void 0 ? void 0 : columns.length)) {
                return null; // no column to create
            }
            return assignChanged(val, {
                columns,
            });
        }
        likeTable(col) {
            const like = this.tableRef(col.like);
            if (!like) {
                return null;
            }
            return assignChanged(col, { like });
        }
        truncateTable(val) {
            return val;
        }
        constraint(c) {
            switch (c.type) {
                case 'not null':
                case 'null':
                case 'primary key':
                case 'unique':
                case 'add generated':
                    return c;
                case 'default': {
                    const def = this.expr(c.default);
                    if (!def) {
                        return null;
                    }
                    return assignChanged(c, {
                        default: def,
                    });
                }
                case 'check': {
                    const def = this.expr(c.expr);
                    if (!def) {
                        return null;
                    }
                    return assignChanged(c, {
                        expr: def,
                    });
                }
                default:
                    throw utils_1.NotSupported.never(c);
            }
        }
        set(st) {
            const value = st.value === 'default'
                ? st.value
                : this.expr(st.value);
            if (!value) {
                return null;
            }
            return assignChanged(st, {
                value,
            });
        }
        // =========================================
        // ================ STUFF ==================
        // =========================================
        /** Called when a data type definition is encountered */
        dataType(dataType) {
            return dataType;
        }
        /** Called when an alias of a table is created */
        tableRef(st) {
            return st;
        }
        transaction(val) {
            return val;
        }
        createExtension(val) {
            return val;
        }
        createIndex(val) {
            const expressions = arrayNilMap(val.expressions, e => {
                const expression = this.expr(e.expression);
                if (expression === e.expression) {
                    return e;
                }
                if (!expression) {
                    return null; // no more index expression
                }
                return {
                    ...e,
                    expression,
                };
            });
            if (!(expressions === null || expressions === void 0 ? void 0 : expressions.length)) {
                return null; // no columns to create index on
            }
            return assignChanged(val, {
                expressions,
            });
        }
        prepare(st) {
            const statement = this.statement(st.statement);
            if (!statement) {
                return null;
            }
            return assignChanged(st, {
                args: arrayNilMap(st.args, a => this.dataType(a)),
                statement,
            });
        }
        // =========================================
        // ============== ALTER TABLE ==============
        // =========================================
        alterTable(st) {
            const table = this.tableRef(st.table);
            if (!table) {
                return null; // no table
            }
            let change;
            switch (st.change.type) {
                case 'add column': {
                    change = this.addColumn(st.change, st.table);
                    break;
                }
                case 'add constraint': {
                    change = this.addConstraint(st.change, st.table);
                    break;
                }
                case 'alter column': {
                    change = this.alterColumn(st.change, st.table);
                    break;
                }
                case 'rename': {
                    change = this.renameTable(st.change, st.table);
                    break;
                }
                case 'rename column': {
                    change = this.renameColumn(st.change, st.table);
                    break;
                }
                case 'rename constraint': {
                    change = this.renameConstraint(st.change, st.table);
                    break;
                }
                case 'drop column': {
                    change = this.dropColumn(st.change, st.table);
                    break;
                }
                case 'owner': {
                    change = this.setTableOwner(st.change, st.table);
                    break;
                }
                default:
                    throw utils_1.NotSupported.never(st.change);
            }
            if (!change) {
                return null; // no change left
            }
            return assignChanged(st, {
                table,
                change,
            });
        }
        dropColumn(change, table) {
            return change;
        }
        setTableOwner(change, table) {
            return change;
        }
        renameConstraint(change, table) {
            return change;
        }
        renameColumn(change, table) {
            return change;
        }
        renameTable(change, table) {
            return change;
        }
        alterColumn(change, inTable) {
            let alter;
            switch (change.alter.type) {
                case 'set default':
                    alter = this.setColumnDefault(change.alter, inTable, change.column);
                    break;
                case 'set type':
                    alter = this.setColumnType(change.alter, inTable, change.column);
                    break;
                case 'drop default':
                case 'set not null':
                case 'drop not null':
                    alter = this.alterColumnSimple(change.alter, inTable, change.column);
                    break;
                case 'add generated':
                    alter = this.alterColumnAddGenerated(change.alter, inTable, change.column);
                    break;
                default:
                    throw utils_1.NotSupported.never(change.alter);
            }
            if (!alter) {
                return null; // no more alter
            }
            return assignChanged(change, {
                alter,
            });
        }
        setColumnType(alter, inTable, inColumn) {
            const dataType = this.dataType(alter.dataType);
            return assignChanged(alter, {
                dataType,
            });
        }
        alterColumnAddGenerated(alter, inTable, inColumn) {
            return alter;
        }
        alterColumnSimple(alter, inTable, inColumn) {
            return alter;
        }
        setColumnDefault(alter, inTable, inColumn) {
            const def = this.expr(alter.default);
            if (!def) {
                return null; // no more default to set
            }
            return assignChanged(alter, {
                default: def,
            });
        }
        addConstraint(change, inTable) {
            return change;
        }
        addColumn(change, inTable) {
            const column = this.createColumn(change.column);
            if (!column) {
                return null; // no more column to add
            }
            return assignChanged(change, {
                column,
            });
        }
        createColumn(col) {
            var _a;
            // to be overriden
            const dataType = this.dataType(col.dataType);
            if (!dataType) {
                return null; // no data type => remove column
            }
            const constraints = (_a = arrayNilMap(col.constraints, m => this.constraint(m))) !== null && _a !== void 0 ? _a : undefined;
            return assignChanged(col, {
                dataType,
                constraints,
            });
        }
        // =========================================
        // ============== SELECTIONS ==============
        // =========================================
        select(val) {
            switch (val.type) {
                case 'select':
                    return this.selection(val);
                case 'union':
                case 'union all':
                    return this.union(val);
                case 'with':
                    return this.with(val);
                case 'values':
                    return this.values(val);
                case 'with recursive':
                    return this.withRecursive(val);
                default:
                    throw utils_1.NotSupported.never(val);
            }
        }
        selection(val) {
            var _a, _b;
            const from = arrayNilMap(val.from, c => this.from(c));
            const columns = arrayNilMap(val.columns, c => this.selectionColumn(c));
            const where = val.where && this.expr(val.where);
            const groupBy = arrayNilMap(val.groupBy, c => this.expr(c));
            const orderBy = this.orderBy(val.orderBy);
            const limit = assignChanged(val.limit, {
                limit: this.expr((_a = val.limit) === null || _a === void 0 ? void 0 : _a.limit),
                offset: this.expr((_b = val.limit) === null || _b === void 0 ? void 0 : _b.offset),
            });
            return assignChanged(val, {
                from,
                columns,
                where,
                groupBy,
                orderBy,
                limit,
            });
        }
        orderBy(orderBy) {
            return arrayNilMap(orderBy, c => {
                const by = this.expr(c.by);
                if (!by) {
                    return null;
                }
                if (by === c.by) {
                    return c;
                }
                return {
                    ...c,
                    by,
                };
            });
        }
        union(val) {
            const left = this.select(val.left);
            const right = this.select(val.right);
            if (!left || !right) {
                return left !== null && left !== void 0 ? left : right;
            }
            return assignChanged(val, {
                left,
                right
            });
        }
        with(val) {
            const bind = arrayNilMap(val.bind, s => {
                const statement = this.statement(s.statement);
                return withAccepts(statement)
                    ? assignChanged(s, { statement })
                    : null;
            });
            // no bindngs
            if (!bind) {
                return null;
            }
            const _in = this.statement(val.in);
            if (!withAccepts(_in)) {
                return null;
            }
            return assignChanged(val, {
                bind,
                in: _in,
            });
        }
        withRecursive(val) {
            const statement = this.union(val.bind);
            if (!statement) {
                return null;
            }
            // 'with recursive' only accepts unions
            if (statement.type !== 'union' && statement.type !== 'union all') {
                return null;
            }
            const _in = this.statement(val.in);
            if (!withAccepts(_in)) {
                return null;
            }
            return assignChanged(val, {
                bind: statement,
                in: _in,
            });
        }
        from(from) {
            switch (from.type) {
                case 'table':
                    return this.fromTable(from);
                case 'statement':
                    return this.fromStatement(from);
                case 'call':
                    return this.fromCall(from);
                default:
                    throw utils_1.NotSupported.never(from);
            }
        }
        fromCall(from) {
            const call = this.call(from);
            if (!call || call.type !== 'call') {
                return null;
            }
            return assignChanged(from, call);
        }
        fromStatement(from) {
            const statement = this.select(from.statement);
            if (!statement) {
                return null; // nothing to select from
            }
            const join = from.join && this.join(from.join);
            return assignChanged(from, {
                statement,
                join,
            });
        }
        values(from) {
            const values = arrayNilMap(from.values, x => arrayNilMap(x, y => this.expr(y)));
            if (!(values === null || values === void 0 ? void 0 : values.length)) {
                return null; // nothing to select from
            }
            return assignChanged(from, {
                values,
            });
        }
        join(join) {
            const on = join.on && this.expr(join.on);
            if (!on && !join.using) {
                return null;
            }
            return assignChanged(join, {
                on,
            });
        }
        fromTable(from) {
            const nfrom = this.tableRef(from.name);
            if (!nfrom) {
                return null; // nothing to select from
            }
            const join = from.join && this.join(from.join);
            return assignChanged(from, {
                name: nfrom,
                join,
            });
        }
        selectionColumn(val) {
            const expr = this.expr(val.expr);
            if (!expr) {
                return null; // not selected anymore
            }
            return assignChanged(val, {
                expr,
            });
        }
        // =========================================
        // ============== EXPRESSIONS ==============
        // =========================================
        expr(val) {
            if (!val) {
                return val;
            }
            switch (val.type) {
                case 'binary':
                    return this.binary(val);
                case 'unary':
                    return this.unary(val);
                case 'ref':
                    return this.ref(val);
                case 'string':
                case 'numeric':
                case 'integer':
                case 'boolean':
                case 'constant':
                case 'null':
                    return this.constant(val);
                case 'list':
                case 'array':
                    return this.array(val);
                case 'array select':
                    return this.arraySelect(val);
                case 'call':
                    return this.call(val);
                case 'cast':
                    return this.cast(val);
                case 'case':
                    return this.case(val);
                case 'member':
                    return this.member(val);
                case 'arrayIndex':
                    return this.arrayIndex(val);
                case 'ternary':
                    return this.ternary(val);
                case 'select':
                case 'union':
                case 'union all':
                case 'with':
                case 'with recursive':
                    return this.select(val);
                case 'keyword':
                    return this.valueKeyword(val);
                case 'parameter':
                    return this.parameter(val);
                case 'extract':
                    return this.extract(val);
                case 'overlay':
                    return this.callOverlay(val);
                case 'substring':
                    return this.callSubstring(val);
                case 'values':
                    return this.values(val);
                case 'default':
                    return this.default(val);
                default:
                    throw utils_1.NotSupported.never(val);
            }
        }
        arraySelect(val) {
            const select = this.select(val.select);
            if (!select) {
                return null;
            }
            return assignChanged(val, { select });
        }
        extract(st) {
            const from = this.expr(st.from);
            if (!from) {
                return null;
            }
            return assignChanged(st, { from });
        }
        valueKeyword(val) {
            return val;
        }
        ternary(val) {
            const value = this.expr(val.value);
            const lo = this.expr(val.lo);
            const hi = this.expr(val.hi);
            if (!value || !lo || !hi) {
                return null; // missing a branch
            }
            return assignChanged(val, {
                value,
                lo,
                hi,
            });
        }
        parameter(st) {
            return st;
        }
        arrayIndex(val) {
            const array = this.expr(val.array);
            const index = this.expr(val.index);
            if (!array || !index) {
                return null;
            }
            return assignChanged(val, {
                array,
                index,
            });
        }
        member(val) {
            const operand = this.expr(val.operand);
            if (!operand) {
                return null;
            }
            return assignChanged(val, {
                operand,
            });
        }
        case(val) {
            const value = val.value && this.expr(val.value);
            const whens = arrayNilMap(val.whens, w => {
                const when = this.expr(w.when);
                const value = this.expr(w.value);
                if (!when || !value) {
                    return null;
                }
                return assignChanged(w, {
                    value,
                    when,
                });
            });
            if (!(whens === null || whens === void 0 ? void 0 : whens.length)) {
                return null; // no case
            }
            const els = val.else && this.expr(val.else);
            return assignChanged(val, {
                value,
                whens,
                else: els,
            });
        }
        cast(val) {
            const operand = this.expr(val.operand);
            if (!operand) {
                return null;
            }
            return assignChanged(val, {
                operand,
            });
        }
        call(val) {
            const args = arrayNilMap(val.args, a => this.expr(a));
            if (!args) {
                return null;
            }
            const orderBy = this.orderBy(val.orderBy);
            const filter = this.expr(val.filter);
            return assignChanged(val, {
                args,
                orderBy,
                filter,
            });
        }
        callSubstring(val) {
            return assignChanged(val, {
                value: this.expr(val.value),
                from: this.expr(val.from),
                for: this.expr(val.for),
            });
        }
        callOverlay(val) {
            return assignChanged(val, {
                value: this.expr(val.value),
                placing: this.expr(val.placing),
                from: this.expr(val.from),
                for: this.expr(val.for),
            });
        }
        array(val) {
            const expressions = arrayNilMap(val.expressions, a => this.expr(a));
            if (!expressions) {
                return null;
            }
            return assignChanged(val, {
                expressions,
            });
        }
        constant(value) {
            return value;
        }
        default(value) {
            return value;
        }
        /** Called when a reference is used */
        ref(val) {
            return val;
        }
        unary(val) {
            const operand = this.expr(val.operand);
            if (!operand) {
                return null;
            }
            return assignChanged(val, {
                operand,
            });
        }
        binary(val) {
            const left = this.expr(val.left);
            const right = this.expr(val.right);
            if (!left || !right) {
                return null;
            }
            return assignChanged(val, {
                left,
                right,
            });
        }
    }
    exports.AstDefaultMapper = AstDefaultMapper;
    // ====== auto implement the replace mechanism
    const proto = AstDefaultMapper.prototype;
    for (const k of Object.getOwnPropertyNames(proto)) {
        const orig = proto[k];
        if (k === 'constructor' || k === 'super' || typeof orig !== 'function') {
            continue;
        }
        Object.defineProperty(proto, k, {
            configurable: false,
            get() {
                return function (...args) {
                    var _a;
                    const impl = (_a = this.wrapped) === null || _a === void 0 ? void 0 : _a[k];
                    if (!impl) {
                        return orig.apply(this, args);
                    }
                    return impl.apply(this.wrapped, args);
                };
            }
        });
    }
    // ====== auto implement the skip mechanism
    class SkipModifier extends AstDefaultMapper {
        constructor(parent) {
            super();
            this.parent = parent;
        }
    }
    for (const k of Object.getOwnPropertyNames(proto)) {
        const orig = proto[k];
        if (k === 'constructor' || k === 'super' || typeof orig !== 'function') {
            continue;
        }
        Object.defineProperty(SkipModifier.prototype, k, {
            configurable: false,
            get() {
                return function (...args) {
                    return orig.apply(this.parent.wrapped, args);
                };
            }
        });
    }


    /***/ }),
    /* 3 */
    /***/ (function(module, exports, __webpack_require__) {

    Object.defineProperty(exports, "__esModule", { value: true });
    exports.sqlKeywords = void 0;
    // https://www.postgresql.org/docs/current/sql-keywords-appendix.html
    // $('table.table').children('tbody').children().toArray().filter(x => { const txt = $($(x).children()[1]).text(); return txt.includes('reserved') && !txt.includes('non-reserved')}).map(x => $($(x).children()[0]).text())
    exports.sqlKeywords = [
        "ALL", "ANALYSE", "ANALYZE", "AND", "ANY", "ARRAY", "AS", "ASC", "ASYMMETRIC", "AUTHORIZATION", "BINARY", "BOTH", "CASE", "CAST", "CHECK", "COLLATE", "COLLATION", "COLUMN", "CONCURRENTLY", "CONSTRAINT", "CREATE", "CROSS", "CURRENT_CATALOG", "CURRENT_DATE", "CURRENT_ROLE", "CURRENT_SCHEMA", "CURRENT_TIME", "CURRENT_TIMESTAMP", "CURRENT_USER", "DEFAULT", "DEFERRABLE", "DESC", "DISTINCT", "DO", "ELSE", "END", "EXCEPT", "FALSE", "FETCH", "FOR", "FOREIGN", "FREEZE", "FROM", "FULL", "GRANT", "GROUP", "HAVING", "ILIKE", "IN", "INITIALLY", "INNER", "INTERSECT", "INTO", "IS", "ISNULL", "JOIN", "LATERAL", "LEADING", "LEFT", "LIKE", "LIMIT", "LOCALTIME", "LOCALTIMESTAMP", "NATURAL", "NOT", "NOTNULL", "NULL", "OFFSET", "ON", "ONLY", "OR", "ORDER", "OUTER", "OVERLAPS", "PLACING", "PRIMARY", "REFERENCES", "RETURNING", "RIGHT", "SELECT", "SESSION_USER", "SIMILAR", "SOME", "SYMMETRIC", "TABLE", "TABLESAMPLE", "THEN", "TO", "TRAILING", "TRUE", "UNION", "UNIQUE", "USER", "USING", "VARIADIC", "VERBOSE", "WHEN", "WHERE", "WINDOW", "WITH"
        // added manually
        ,
        "PRECISION"
    ];


    /***/ }),
    /* 4 */
    /***/ (function(module, exports, __webpack_require__) {

    Object.defineProperty(exports, "__esModule", { value: true });
    exports.intervalToString = exports.normalizeInterval = exports.buildInterval = void 0;
    const types = [
        ['years', 12],
        ['months', 30],
        ['days', 24],
        ['hours', 60],
        ['minutes', 60],
        ['seconds', 1000],
        ['milliseconds', 0],
    ];
    function* unwrap(k) {
        if (typeof k[1] === 'number') {
            yield k;
        }
        else {
            for (const v of k) {
                yield* unwrap(v);
            }
        }
    }
    function buildInterval(orig, vals) {
        var _a;
        const ret = {};
        if (vals === 'invalid') {
            throw new Error(`invalid input syntax for type interval: "${orig}"`);
        }
        for (const [k, v] of unwrap(vals)) {
            ret[k] = ((_a = ret[k]) !== null && _a !== void 0 ? _a : 0) + v;
        }
        return ret;
    }
    exports.buildInterval = buildInterval;
    /** Returns a normalized copy of the given interval */
    function normalizeInterval(value) {
        var _a, _b, _c, _d, _e, _f, _g, _h, _j;
        const ret = { ...value };
        // trim non-integers
        for (let i = 0; i < types.length; i++) {
            const [k, mul] = types[i];
            const v = (_a = ret[k]) !== null && _a !== void 0 ? _a : 0;
            const int = v >= 0
                ? Math.floor(v)
                : Math.ceil(v);
            if (!v || int === v) {
                continue;
            }
            const nk = (_b = types[i + 1]) === null || _b === void 0 ? void 0 : _b[0];
            if (nk) {
                ret[nk] = ((_c = ret[nk]) !== null && _c !== void 0 ? _c : 0) + mul * (v - int);
            }
            ret[k] = int;
        }
        if (ret.months || ret.years) {
            const m = ((_d = ret.months) !== null && _d !== void 0 ? _d : 0) + ((_e = ret.years) !== null && _e !== void 0 ? _e : 0) * 12;
            ret.months = m % 12;
            ret.years = (m - ret.months) / 12;
        }
        // normalize time
        let t = ((_f = ret.hours) !== null && _f !== void 0 ? _f : 0) * 3600
            + ((_g = ret.minutes) !== null && _g !== void 0 ? _g : 0) * 60
            + ((_h = ret.seconds) !== null && _h !== void 0 ? _h : 0)
            + ((_j = ret.milliseconds) !== null && _j !== void 0 ? _j : 0) / 1000;
        let sign = 1;
        if (t < 0) {
            sign = -1;
            t = -t;
        }
        if (t >= 3600) {
            ret.hours = sign * Math.floor(t / 3600);
            t -= sign * ret.hours * 3600;
        }
        else {
            delete ret.hours;
        }
        if (t >= 60) {
            ret.minutes = sign * Math.floor(t / 60);
            t -= sign * ret.minutes * 60;
        }
        else {
            delete ret.minutes;
        }
        if (t > 0) {
            ret.seconds = sign * Math.floor(t);
            t -= sign * ret.seconds;
        }
        else {
            delete ret.seconds;
        }
        if (t > 0) {
            ret.milliseconds = sign * Math.round(t * 1000);
        }
        else {
            delete ret.milliseconds;
        }
        // trim zeros.
        for (const [k] of types) {
            if (!ret[k]) {
                delete ret[k];
            }
        }
        return ret;
    }
    exports.normalizeInterval = normalizeInterval;
    /** Interval value to postgres string representation  */
    function intervalToString(value) {
        var _a, _b, _c;
        value = normalizeInterval(value);
        const ret = [];
        if (value.years) {
            ret.push(value.years === 1 ? '1 year' : value.years + ' years');
        }
        if (value.months) {
            ret.push(value.months === 1 ? '1 month' : value.months + ' months');
        }
        if (value.days) {
            ret.push(value.days === 1 ? '1 day' : value.days + ' days');
        }
        if (value.hours || value.minutes || value.seconds || value.milliseconds) {
            let time = `${num((_a = value.hours) !== null && _a !== void 0 ? _a : 0)}:${num((_b = value.minutes) !== null && _b !== void 0 ? _b : 0)}:${num((_c = value.seconds) !== null && _c !== void 0 ? _c : 0)}`;
            if (value.milliseconds) {
                time = time + (value.milliseconds / 1000).toString().substr(1);
            }
            if (neg(value.hours) || neg(value.minutes) || neg(value.seconds) || neg(value.milliseconds)) {
                time = '-' + time;
            }
            ret.push(time);
        }
        return ret.join(' ');
    }
    exports.intervalToString = intervalToString;
    function num(v) {
        v = Math.abs(v);
        return v < 10 ? '0' + v : v.toString();
    }
    function neg(v) {
        return v && v < 0;
    }


    /***/ }),
    /* 5 */
    /***/ (function(module, exports, __webpack_require__) {

    Object.defineProperty(exports, "__esModule", { value: true });
    exports.astVisitor = void 0;
    const ast_mapper_1 = __webpack_require__(2);
    class Visitor {
        super() {
            return new SkipVisitor(this);
        }
    }
    // =============== auto implement the mapper
    const mapperProto = ast_mapper_1.AstDefaultMapper.prototype;
    for (const k of Object.getOwnPropertyNames(mapperProto)) {
        const orig = mapperProto[k];
        if (k === 'constructor' || k === 'super' || typeof orig !== 'function') {
            continue;
        }
        Object.defineProperty(Visitor.prototype, k, {
            configurable: false,
            get() {
                return function (...args) {
                    const impl = this.visitor[k];
                    if (!impl) {
                        // just ignore & forward call to mapper
                        return orig.apply(this, args);
                    }
                    // return first argument
                    // ...which means "I dont wana change anything"
                    //    in the ast-modifier language.
                    impl.apply(this.visitor, args);
                    return args[0];
                };
            }
        });
    }
    // ====== auto implement the skip mechanism
    class SkipVisitor {
        constructor(parent) {
            this.parent = parent;
        }
    }
    for (const k of Object.getOwnPropertyNames(mapperProto)) {
        const orig = mapperProto[k];
        if (k === 'constructor' || k === 'super' || typeof orig !== 'function') {
            continue;
        }
        Object.defineProperty(SkipVisitor.prototype, k, {
            configurable: false,
            get() {
                return function (...args) {
                    return orig.apply(this.parent, args);
                };
            }
        });
    }
    /**
     * Builds an AST visitor based on the default implementation, merged with the one you provide.
     *
     * Example of visitor which counts references to a column 'foo':
     *
     * ```ts
     * let cnt = 0;
     * const visitor = astVisitor(v => ({
     *      ref: r => {
     *          if (r.name === 'foo') {
     *              cnt++;
     *          }
     *          v.super().ref(r);
     *      }
     *  }));
     *
     * visitor.statement(myStatementToCount);
     * console.log(`${cnt} references to foo !`);
     * ```
     */
    function astVisitor(visitorBuilder) {
        return ast_mapper_1.astMapper(m => {
            const ret = new Visitor();
            ret.mapper = m;
            ret.visitor = visitorBuilder(ret);
            return ret;
        });
    }
    exports.astVisitor = astVisitor;


    /***/ }),
    /* 6 */
    /***/ (function(module, exports, __webpack_require__) {

    Object.defineProperty(exports, "__esModule", { value: true });
    exports.trimNullish = exports.NotSupported = void 0;
    class NotSupported extends Error {
        constructor(what) {
            super('Not supported' + (what ? ': ' + what : ''));
        }
        static never(value, msg) {
            return new NotSupported(`${msg !== null && msg !== void 0 ? msg : ''} ${JSON.stringify(value)}`);
        }
    }
    exports.NotSupported = NotSupported;
    function trimNullish(value, depth = 5) {
        if (depth < 0)
            return value;
        if (value instanceof Array) {
            value.forEach(x => trimNullish(x, depth - 1));
        }
        if (typeof value !== 'object' || value instanceof Date)
            return value;
        if (!value) {
            return value;
        }
        for (const k of Object.keys(value)) {
            const val = value[k];
            if (val === undefined || val === null)
                delete value[k];
            else
                trimNullish(val, depth - 1);
        }
        return value;
    }
    exports.trimNullish = trimNullish;


    /***/ }),
    /* 7 */
    /***/ (function(module, exports, __webpack_require__) {

    var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
    }) : (function(o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        o[k2] = m[k];
    }));
    var __exportStar = (this && this.__exportStar) || function(m, exports) {
        for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var parser_1 = __webpack_require__(8);
    Object.defineProperty(exports, "parse", { enumerable: true, get: function () { return parser_1.parse; } });
    Object.defineProperty(exports, "parseFirst", { enumerable: true, get: function () { return parser_1.parseFirst; } });
    Object.defineProperty(exports, "parseArrayLiteral", { enumerable: true, get: function () { return parser_1.parseArrayLiteral; } });
    Object.defineProperty(exports, "parseGeometricLiteral", { enumerable: true, get: function () { return parser_1.parseGeometricLiteral; } });
    Object.defineProperty(exports, "parseIntervalLiteral", { enumerable: true, get: function () { return parser_1.parseIntervalLiteral; } });
    Object.defineProperty(exports, "parseWithComments", { enumerable: true, get: function () { return parser_1.parseWithComments; } });
    var ast_visitor_1 = __webpack_require__(5);
    Object.defineProperty(exports, "astVisitor", { enumerable: true, get: function () { return ast_visitor_1.astVisitor; } });
    var ast_mapper_1 = __webpack_require__(2);
    Object.defineProperty(exports, "arrayNilMap", { enumerable: true, get: function () { return ast_mapper_1.arrayNilMap; } });
    Object.defineProperty(exports, "assignChanged", { enumerable: true, get: function () { return ast_mapper_1.assignChanged; } });
    Object.defineProperty(exports, "astMapper", { enumerable: true, get: function () { return ast_mapper_1.astMapper; } });
    var to_sql_1 = __webpack_require__(19);
    Object.defineProperty(exports, "toSql", { enumerable: true, get: function () { return to_sql_1.toSql; } });
    __exportStar(__webpack_require__(21), exports);
    var interval_builder_1 = __webpack_require__(4);
    Object.defineProperty(exports, "intervalToString", { enumerable: true, get: function () { return interval_builder_1.intervalToString; } });
    Object.defineProperty(exports, "normalizeInterval", { enumerable: true, get: function () { return interval_builder_1.normalizeInterval; } });


    /***/ }),
    /* 8 */
    /***/ (function(module, exports, __webpack_require__) {

    var __importDefault = (this && this.__importDefault) || function (mod) {
        return (mod && mod.__esModule) ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.parseGeometricLiteral = exports.parseIntervalLiteral = exports.parseArrayLiteral = exports.parse = exports.parseWithComments = exports.parseFirst = void 0;
    const nearley_1 = __webpack_require__(9);
    const main_ne_1 = __importDefault(__webpack_require__(10));
    const array_ne_1 = __importDefault(__webpack_require__(11));
    const geometric_ne_1 = __importDefault(__webpack_require__(13));
    const interval_ne_1 = __importDefault(__webpack_require__(15));
    const interval_iso_ne_1 = __importDefault(__webpack_require__(17));
    const interval_builder_1 = __webpack_require__(4);
    const lexer_1 = __webpack_require__(1);
    let sqlCompiled;
    let arrayCompiled;
    let geometricCompiled;
    let intervalTextCompiled;
    let intervalIsoCompiled;
    /** Parse the first SQL statement in the given text (discards the rest), and return its AST */
    function parseFirst(sql) {
        const first = parse(sql);
        return first[0];
    }
    exports.parseFirst = parseFirst;
    /** Parse an AST from SQL, and get the comments */
    function parseWithComments(sql, options) {
        return lexer_1.trackingComments(() => parse(sql, options));
    }
    exports.parseWithComments = parseWithComments;
    function parse(sql, optEntry) {
        if (!sqlCompiled) {
            sqlCompiled = nearley_1.Grammar.fromCompiled(main_ne_1.default);
        }
        const entry = typeof optEntry === 'string'
            ? optEntry
            : optEntry === null || optEntry === void 0 ? void 0 : optEntry.entry;
        const opts = typeof optEntry === 'string' ? null : optEntry;
        // parse sql
        const doParse = () => _parse(sql, sqlCompiled, entry);
        let parsed = (opts === null || opts === void 0 ? void 0 : opts.locationTracking) ? lexer_1.tracking(doParse)
            : doParse();
        // always return an array of statements.
        if (!entry && !Array.isArray(parsed)) {
            parsed = [parsed];
        }
        return parsed;
    }
    exports.parse = parse;
    function parseArrayLiteral(sql) {
        if (!arrayCompiled) {
            arrayCompiled = nearley_1.Grammar.fromCompiled(array_ne_1.default);
        }
        return _parse(sql, arrayCompiled);
    }
    exports.parseArrayLiteral = parseArrayLiteral;
    function parseIntervalLiteral(literal) {
        if (literal.startsWith('P')) {
            if (!intervalIsoCompiled) {
                intervalIsoCompiled = nearley_1.Grammar.fromCompiled(interval_iso_ne_1.default);
            }
            return interval_builder_1.buildInterval(literal, _parse(literal, intervalIsoCompiled));
        }
        else {
            if (!intervalTextCompiled) {
                intervalTextCompiled = nearley_1.Grammar.fromCompiled(interval_ne_1.default);
            }
            const low = literal.toLowerCase(); // full text syntax is case insensitive
            return interval_builder_1.buildInterval(literal, _parse(low, intervalTextCompiled));
        }
    }
    exports.parseIntervalLiteral = parseIntervalLiteral;
    function parseGeometricLiteral(sql, type) {
        if (!geometricCompiled) {
            geometricCompiled = nearley_1.Grammar.fromCompiled(geometric_ne_1.default);
        }
        return _parse(sql, geometricCompiled, type);
    }
    exports.parseGeometricLiteral = parseGeometricLiteral;
    function _parse(sql, grammar, entry) {
        try {
            grammar.start = entry !== null && entry !== void 0 ? entry : 'main';
            const parser = new nearley_1.Parser(grammar);
            parser.feed(sql);
            const asts = parser.finish();
            if (!asts.length) {
                throw new Error('Unexpected end of input');
            }
            else if (asts.length !== 1) {
                throw new Error(`💀 Ambiguous SQL syntax: Please file an issue stating the request that has failed at https://github.com/oguimbal/pgsql-ast-parser:

        ${sql}

        `);
            }
            return asts[0];
        }
        catch (e) {
            if (typeof (e === null || e === void 0 ? void 0 : e.message) !== 'string') {
                throw e;
            }
            let msg = e.message;
            // remove all the stack crap of nearley parser
            let begin = null;
            const parts = [];
            const reg = /A (.+) token based on:/g;
            let m;
            while (m = reg.exec(msg)) {
                begin = begin !== null && begin !== void 0 ? begin : msg.substr(0, m.index);
                parts.push(`    - A "${m[1]}" token`);
            }
            if (begin) {
                msg = begin + parts.join('\n') + '\n\n';
            }
            e.message = msg;
            throw e;
        }
    }


    /***/ }),
    /* 9 */
    /***/ (function(module, exports) {

    module.exports = nearley;

    /***/ }),
    /* 10 */
    /***/ (function(module, exports, __webpack_require__) {

    Object.defineProperty(exports, "__esModule", { value: true });
    // Generated automatically by nearley, version unknown
    // http://github.com/Hardmath123/nearley
    // Bypasses TS6133. Allow declared but unused functions.
    // @ts-ignore
    function id(d) { return d[0]; }
    const lexer_1 = __webpack_require__(1);
    const lexer_2 = __webpack_require__(1);
    function asName(val) {
        const name = toStr(val);
        return lexer_2.track(val, { name });
    }
    function asLit(val) {
        const value = toStr(val);
        return lexer_2.track(val, { value });
    }
    function unwrap(e) {
        if (Array.isArray(e) && e.length === 1) {
            e = unwrap(e[0]);
        }
        if (Array.isArray(e) && !e.length) {
            return null;
        }
        return lexer_2.unbox(e);
    }
    const get = (i) => (x) => lexer_2.track(x, x[i]);
    const last = (x) => Array.isArray(x) ? lexer_2.track(x[x.length - 1], x[x.length - 1]) : x;
    const value = (x) => x && x.value;
    function flatten(e) {
        if (Array.isArray(e)) {
            const ret = [];
            for (const i of e) {
                ret.push(...flatten(i));
            }
            return ret;
        }
        if (!e) {
            return [];
        }
        return [e];
    }
    function asStr(value) {
        var _a;
        value = lexer_2.unbox(value);
        return (_a = value === null || value === void 0 ? void 0 : value.value) !== null && _a !== void 0 ? _a : value;
    }
    function flattenStr(e) {
        const fl = flatten(lexer_2.unbox(e));
        return fl.filter(x => !!x)
            .map(x => asStr(x))
            .filter(x => typeof x === 'string')
            .map(x => x.trim())
            .filter(x => !!x);
    }
    function toStr(e, join) {
        return flattenStr(e).join(join || '');
    }
    function fromEntries(vals) {
        const ret = {};
        for (const [k, v] of vals) {
            ret[k] = v;
        }
        return ret;
    }
    const kwSensitivity = { sensitivity: 'accent' };
    const eqInsensitive = (a, b) => a.localeCompare(b, undefined, kwSensitivity) === 0;
    const notReservedKw = (kw) => (x, _, rej) => {
        const val = asStr(x[0]);
        if (eqInsensitive(val, kw)) {
            return lexer_2.box(x, kw);
        }
        return rej;
    };
    const kw = notReservedKw;
    const anyKw = (...kw) => {
        const kwSet = new Set(kw);
        return (x, _, rej) => {
            const val = typeof x[0] === 'string' ? x[0] : x[0].value;
            return kwSet.has(val) ? val : rej;
        };
    };
    function setSeqOpts(ret, opts) {
        const defs = new Set();
        const unboxed = opts.map(lexer_2.unbox);
        for (const [k, v] of unboxed) {
            if (defs.has(k)) {
                throw new Error('conflicting or redundant options');
            }
            defs.add(k);
            ret[k] = lexer_2.unbox(v);
        }
    }
    const grammar = {
        Lexer: lexer_1.lexerAny,
        ParserRules: [
            { "name": "lparen", "symbols": [(lexer_1.lexerAny.has("lparen") ? { type: "lparen" } : lparen)] },
            { "name": "rparen", "symbols": [(lexer_1.lexerAny.has("rparen") ? { type: "rparen" } : rparen)] },
            { "name": "number$subexpression$1", "symbols": ["float"] },
            { "name": "number$subexpression$1", "symbols": ["int"] },
            { "name": "number", "symbols": ["number$subexpression$1"], "postprocess": unwrap },
            { "name": "dot", "symbols": [(lexer_1.lexerAny.has("dot") ? { type: "dot" } : dot)], "postprocess": id },
            { "name": "float", "symbols": [(lexer_1.lexerAny.has("float") ? { type: "float" } : float)], "postprocess": x => lexer_2.box(x, parseFloat(unwrap(x))) },
            { "name": "int", "symbols": [(lexer_1.lexerAny.has("int") ? { type: "int" } : int)], "postprocess": x => lexer_2.box(x, parseInt(unwrap(x), 10)) },
            { "name": "comma", "symbols": [(lexer_1.lexerAny.has("comma") ? { type: "comma" } : comma)], "postprocess": id },
            { "name": "star", "symbols": [(lexer_1.lexerAny.has("star") ? { type: "star" } : star)], "postprocess": x => lexer_2.box(x, x[0].value) },
            { "name": "string$subexpression$1", "symbols": [(lexer_1.lexerAny.has("string") ? { type: "string" } : string)] },
            { "name": "string$subexpression$1", "symbols": [(lexer_1.lexerAny.has("eString") ? { type: "eString" } : eString)] },
            { "name": "string", "symbols": ["string$subexpression$1"], "postprocess": x => lexer_2.box(x, unwrap(x[0]).value) },
            { "name": "ident", "symbols": ["word"], "postprocess": get(0) },
            { "name": "word", "symbols": [(lexer_1.lexerAny.has("kw_primary") ? { type: "kw_primary" } : kw_primary)], "postprocess": x => lexer_2.box(x, 'primary') },
            { "name": "word", "symbols": [(lexer_1.lexerAny.has("kw_unique") ? { type: "kw_unique" } : kw_unique)], "postprocess": x => lexer_2.box(x, 'unique') },
            { "name": "word", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": x => {
                    const val = x[0].value;
                    return lexer_2.box(x, val[0] === '"' ? val.substr(1, val.length - 2) : val);
                } },
            { "name": "collist_paren", "symbols": ["lparen", "collist", "rparen"], "postprocess": get(1) },
            { "name": "collist$ebnf$1", "symbols": [] },
            { "name": "collist$ebnf$1$subexpression$1", "symbols": ["comma", "ident"], "postprocess": last },
            { "name": "collist$ebnf$1", "symbols": ["collist$ebnf$1", "collist$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "collist", "symbols": ["ident", "collist$ebnf$1"], "postprocess": ([head, tail]) => {
                    return [head, ...(tail || [])];
                } },
            { "name": "kw_between", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('between') },
            { "name": "kw_conflict", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('conflict') },
            { "name": "kw_nothing", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('nothing') },
            { "name": "kw_begin", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('begin') },
            { "name": "kw_if", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('if') },
            { "name": "kw_exists", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('exists') },
            { "name": "kw_key", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('key') },
            { "name": "kw_index", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('index') },
            { "name": "kw_extension", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('extension') },
            { "name": "kw_schema", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('schema') },
            { "name": "kw_nulls", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('nulls') },
            { "name": "kw_first", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('first') },
            { "name": "kw_last", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('last') },
            { "name": "kw_start", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('start') },
            { "name": "kw_restart", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('restart') },
            { "name": "kw_filter", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('filter') },
            { "name": "kw_commit", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('commit') },
            { "name": "kw_tablespace", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('tablespace') },
            { "name": "kw_transaction", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('transaction') },
            { "name": "kw_work", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('work') },
            { "name": "kw_read", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('read') },
            { "name": "kw_write", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('write') },
            { "name": "kw_isolation", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('isolation') },
            { "name": "kw_level", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('level') },
            { "name": "kw_serializable", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('serializable') },
            { "name": "kw_rollback", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('rollback') },
            { "name": "kw_insert", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('insert') },
            { "name": "kw_value", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('value') },
            { "name": "kw_values", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('values') },
            { "name": "kw_update", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('update') },
            { "name": "kw_set", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('set') },
            { "name": "kw_version", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('version') },
            { "name": "kw_alter", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('alter') },
            { "name": "kw_rename", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('rename') },
            { "name": "kw_sequence", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('sequence') },
            { "name": "kw_temp", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('temp') },
            { "name": "kw_temporary", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('temporary') },
            { "name": "kw_add", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('add') },
            { "name": "kw_owner", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('owner') },
            { "name": "kw_owned", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('owned') },
            { "name": "kw_including", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('including') },
            { "name": "kw_excluding", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('excluding') },
            { "name": "kw_none", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('none') },
            { "name": "kw_drop", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('drop') },
            { "name": "kw_operator", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('operator') },
            { "name": "kw_minvalue", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('minvalue') },
            { "name": "kw_maxvalue", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('maxvalue') },
            { "name": "kw_data", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('data') },
            { "name": "kw_type", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('type') },
            { "name": "kw_delete", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('delete') },
            { "name": "kw_cache", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('cache') },
            { "name": "kw_cascade", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('cascade') },
            { "name": "kw_no", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('no') },
            { "name": "kw_timestamp", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('timestamp') },
            { "name": "kw_cycle", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('cycle') },
            { "name": "kw_function", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('function') },
            { "name": "kw_returns", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('returns') },
            { "name": "kw_language", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('language') },
            { "name": "kw_out", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('out') },
            { "name": "kw_inout", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('inout') },
            { "name": "kw_variadic", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('variadic') },
            { "name": "kw_action", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('action') },
            { "name": "kw_restrict", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('restrict') },
            { "name": "kw_truncate", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('truncate') },
            { "name": "kw_increment", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('increment') },
            { "name": "kw_by", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('by') },
            { "name": "kw_row", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('row') },
            { "name": "kw_rows", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('rows') },
            { "name": "kw_next", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('next') },
            { "name": "kw_match", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('match') },
            { "name": "kw_replace", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('replace') },
            { "name": "kw_recursive", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('recursive') },
            { "name": "kw_view", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('view') },
            { "name": "kw_cascaded", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('cascaded') },
            { "name": "kw_unlogged", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('unlogged') },
            { "name": "kw_global", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('global') },
            { "name": "kw_option", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('option') },
            { "name": "kw_materialized", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('materialized') },
            { "name": "kw_partial", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('partial') },
            { "name": "kw_partition", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('partition') },
            { "name": "kw_simple", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('simple') },
            { "name": "kw_generated", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('generated') },
            { "name": "kw_always", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('always') },
            { "name": "kw_identity", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('identity') },
            { "name": "kw_name", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('name') },
            { "name": "kw_enum", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('enum') },
            { "name": "kw_show", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('show') },
            { "name": "kw_overriding", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('overriding') },
            { "name": "kw_over", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('over') },
            { "name": "kw_system", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('system') },
            { "name": "kw_comment", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('comment') },
            { "name": "kw_time", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('time') },
            { "name": "kw_zone", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('zone') },
            { "name": "kw_interval", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('interval') },
            { "name": "kw_hour", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('hour') },
            { "name": "kw_minute", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('minute') },
            { "name": "kw_local", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('local') },
            { "name": "kw_prepare", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('prepare') },
            { "name": "kw_raise", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('raise') },
            { "name": "kw_continue", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": notReservedKw('continue') },
            { "name": "kw_ifnotexists", "symbols": ["kw_if", (lexer_1.lexerAny.has("kw_not") ? { type: "kw_not" } : kw_not), "kw_exists"] },
            { "name": "kw_ifexists", "symbols": ["kw_if", "kw_exists"] },
            { "name": "kw_not_null", "symbols": [(lexer_1.lexerAny.has("kw_not") ? { type: "kw_not" } : kw_not), (lexer_1.lexerAny.has("kw_null") ? { type: "kw_null" } : kw_null)] },
            { "name": "kw_primary_key", "symbols": [(lexer_1.lexerAny.has("kw_primary") ? { type: "kw_primary" } : kw_primary), "kw_key"] },
            { "name": "data_type$ebnf$1$subexpression$1$macrocall$2", "symbols": ["int"] },
            { "name": "data_type$ebnf$1$subexpression$1$macrocall$1$ebnf$1", "symbols": [] },
            { "name": "data_type$ebnf$1$subexpression$1$macrocall$1$ebnf$1$subexpression$1", "symbols": [(lexer_1.lexerAny.has("comma") ? { type: "comma" } : comma), "data_type$ebnf$1$subexpression$1$macrocall$2"], "postprocess": last },
            { "name": "data_type$ebnf$1$subexpression$1$macrocall$1$ebnf$1", "symbols": ["data_type$ebnf$1$subexpression$1$macrocall$1$ebnf$1", "data_type$ebnf$1$subexpression$1$macrocall$1$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "data_type$ebnf$1$subexpression$1$macrocall$1", "symbols": ["data_type$ebnf$1$subexpression$1$macrocall$2", "data_type$ebnf$1$subexpression$1$macrocall$1$ebnf$1"], "postprocess": ([head, tail]) => {
                    return [head, ...(tail || [])];
                } },
            { "name": "data_type$ebnf$1$subexpression$1", "symbols": ["lparen", "data_type$ebnf$1$subexpression$1$macrocall$1", "rparen"], "postprocess": get(1) },
            { "name": "data_type$ebnf$1", "symbols": ["data_type$ebnf$1$subexpression$1"], "postprocess": id },
            { "name": "data_type$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "data_type$ebnf$2$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_array") ? { type: "kw_array" } : kw_array)] },
            { "name": "data_type$ebnf$2$subexpression$1$ebnf$1$subexpression$1", "symbols": [(lexer_1.lexerAny.has("lbracket") ? { type: "lbracket" } : lbracket), (lexer_1.lexerAny.has("rbracket") ? { type: "rbracket" } : rbracket)] },
            { "name": "data_type$ebnf$2$subexpression$1$ebnf$1", "symbols": ["data_type$ebnf$2$subexpression$1$ebnf$1$subexpression$1"] },
            { "name": "data_type$ebnf$2$subexpression$1$ebnf$1$subexpression$2", "symbols": [(lexer_1.lexerAny.has("lbracket") ? { type: "lbracket" } : lbracket), (lexer_1.lexerAny.has("rbracket") ? { type: "rbracket" } : rbracket)] },
            { "name": "data_type$ebnf$2$subexpression$1$ebnf$1", "symbols": ["data_type$ebnf$2$subexpression$1$ebnf$1", "data_type$ebnf$2$subexpression$1$ebnf$1$subexpression$2"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "data_type$ebnf$2$subexpression$1", "symbols": ["data_type$ebnf$2$subexpression$1$ebnf$1"] },
            { "name": "data_type$ebnf$2", "symbols": ["data_type$ebnf$2$subexpression$1"], "postprocess": id },
            { "name": "data_type$ebnf$2", "symbols": [], "postprocess": () => null },
            { "name": "data_type", "symbols": ["data_type_simple", "data_type$ebnf$1", "data_type$ebnf$2"], "postprocess": x => {
                    let asArray = x[2];
                    const name = unwrap(x[0]);
                    let ret;
                    ret = {
                        ...name,
                        ...Array.isArray(x[1]) && x[1].length ? { config: x[1].map(unwrap) } : {},
                    };
                    if (asArray) {
                        if (asArray[0].type === 'kw_array') {
                            asArray = [['array']];
                        }
                        for (const _ of asArray[0]) {
                            ret = {
                                kind: 'array',
                                arrayOf: ret,
                            };
                        }
                    }
                    return lexer_2.track(x, ret);
                } },
            { "name": "data_type_list$ebnf$1", "symbols": [] },
            { "name": "data_type_list$ebnf$1$subexpression$1", "symbols": ["comma", "data_type"], "postprocess": last },
            { "name": "data_type_list$ebnf$1", "symbols": ["data_type_list$ebnf$1", "data_type_list$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "data_type_list", "symbols": ["data_type", "data_type_list$ebnf$1"], "postprocess": ([head, tail]) => {
                    return [head, ...(tail || [])];
                } },
            { "name": "data_type_simple", "symbols": ["data_type_text"], "postprocess": x => lexer_2.track(x, { name: toStr(x, ' ') }) },
            { "name": "data_type_simple", "symbols": ["data_type_numeric"], "postprocess": x => lexer_2.track(x, { name: toStr(x, ' ') }) },
            { "name": "data_type_simple", "symbols": ["data_type_date"], "postprocess": x => lexer_2.track(x, { name: toStr(x, ' ') }) },
            { "name": "data_type_simple", "symbols": ["qualified_name"] },
            { "name": "data_type_numeric$subexpression$1", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": kw('double') },
            { "name": "data_type_numeric", "symbols": ["data_type_numeric$subexpression$1", (lexer_1.lexerAny.has("kw_precision") ? { type: "kw_precision" } : kw_precision)] },
            { "name": "data_type_text$subexpression$1", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": anyKw('character', 'bit') },
            { "name": "data_type_text$subexpression$2", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": kw('varying') },
            { "name": "data_type_text", "symbols": ["data_type_text$subexpression$1", "data_type_text$subexpression$2"] },
            { "name": "data_type_date$subexpression$1", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": anyKw('timestamp', 'time') },
            { "name": "data_type_date$subexpression$2", "symbols": [(lexer_1.lexerAny.has("kw_with") ? { type: "kw_with" } : kw_with)] },
            { "name": "data_type_date$subexpression$2", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": kw('without') },
            { "name": "data_type_date$subexpression$3", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": kw('time') },
            { "name": "data_type_date$subexpression$4", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": kw('zone') },
            { "name": "data_type_date", "symbols": ["data_type_date$subexpression$1", "data_type_date$subexpression$2", "data_type_date$subexpression$3", "data_type_date$subexpression$4"] },
            { "name": "ident_aliased$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_as") ? { type: "kw_as" } : kw_as), "ident"], "postprocess": last },
            { "name": "ident_aliased", "symbols": ["ident_aliased$subexpression$1"] },
            { "name": "ident_aliased", "symbols": ["ident"], "postprocess": unwrap },
            { "name": "table_ref", "symbols": ["qualified_name"], "postprocess": unwrap },
            { "name": "qcolumn$ebnf$1$subexpression$1", "symbols": ["dot", "ident"], "postprocess": last },
            { "name": "qcolumn$ebnf$1", "symbols": ["qcolumn$ebnf$1$subexpression$1"], "postprocess": id },
            { "name": "qcolumn$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "qcolumn", "symbols": ["ident", "dot", "ident", "qcolumn$ebnf$1"], "postprocess": x => {
                    if (!x[3]) {
                        return lexer_2.track(x, {
                            table: lexer_2.unbox(x[0]),
                            column: lexer_2.unbox(x[2]),
                        });
                    }
                    return lexer_2.track(x, {
                        schema: lexer_2.unbox(x[0]),
                        table: lexer_2.unbox(x[2]),
                        column: lexer_2.unbox(x[3]),
                    });
                } },
            { "name": "table_ref_aliased$ebnf$1", "symbols": ["ident_aliased"], "postprocess": id },
            { "name": "table_ref_aliased$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "table_ref_aliased", "symbols": ["table_ref", "table_ref_aliased$ebnf$1"], "postprocess": x => {
                    const alias = unwrap(x[1]);
                    return lexer_2.track(x, {
                        ...unwrap(x[0]),
                        ...alias ? { alias } : {},
                    });
                } },
            { "name": "qualified_name$ebnf$1$subexpression$1", "symbols": ["ident", "dot"], "postprocess": get(0) },
            { "name": "qualified_name$ebnf$1", "symbols": ["qualified_name$ebnf$1$subexpression$1"], "postprocess": id },
            { "name": "qualified_name$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "qualified_name", "symbols": ["qualified_name$ebnf$1", "ident"], "postprocess": x => {
                    const schema = lexer_2.unbox(x[0]);
                    const name = lexer_2.unbox(x[1]);
                    if (schema) {
                        return lexer_2.track(x, { name, schema });
                    }
                    return lexer_2.track(x, { name });
                } },
            { "name": "qualified_name", "symbols": [(lexer_1.lexerAny.has("kw_current_schema") ? { type: "kw_current_schema" } : kw_current_schema)], "postprocess": x => lexer_2.track(x, { name: 'current_schema' }) },
            { "name": "qname", "symbols": ["qualified_name"], "postprocess": unwrap },
            { "name": "select_statement$ebnf$1", "symbols": ["select_from"], "postprocess": id },
            { "name": "select_statement$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "select_statement$ebnf$2", "symbols": ["select_where"], "postprocess": id },
            { "name": "select_statement$ebnf$2", "symbols": [], "postprocess": () => null },
            { "name": "select_statement$ebnf$3", "symbols": ["select_groupby"], "postprocess": id },
            { "name": "select_statement$ebnf$3", "symbols": [], "postprocess": () => null },
            { "name": "select_statement$ebnf$4", "symbols": ["select_order_by"], "postprocess": id },
            { "name": "select_statement$ebnf$4", "symbols": [], "postprocess": () => null },
            { "name": "select_statement", "symbols": ["select_what", "select_statement$ebnf$1", "select_statement$ebnf$2", "select_statement$ebnf$3", "select_statement$ebnf$4", "select_limit"], "postprocess": x => {
                    let [what, from, where, groupBy, orderBy, limit] = x;
                    from = unwrap(from);
                    groupBy = groupBy && (groupBy.length === 1 && groupBy[0].type === 'list' ? groupBy[0].expressions : groupBy);
                    return lexer_2.track(x, {
                        ...what,
                        ...from ? { from: Array.isArray(from) ? from : [from] } : {},
                        ...groupBy ? { groupBy } : {},
                        ...limit ? { limit } : {},
                        ...orderBy ? { orderBy } : {},
                        ...where ? { where } : {},
                        type: 'select',
                    });
                } },
            { "name": "select_from", "symbols": [(lexer_1.lexerAny.has("kw_from") ? { type: "kw_from" } : kw_from), "select_subject"], "postprocess": last },
            { "name": "select_subject", "symbols": ["select_table_base"], "postprocess": get(0) },
            { "name": "select_subject", "symbols": ["select_subject_joins"], "postprocess": get(0) },
            { "name": "select_subject", "symbols": ["lparen", "select_subject_joins", "rparen"], "postprocess": get(1) },
            { "name": "select_subject_joins$ebnf$1", "symbols": ["select_table_join"] },
            { "name": "select_subject_joins$ebnf$1", "symbols": ["select_subject_joins$ebnf$1", "select_table_join"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "select_subject_joins", "symbols": ["select_table_base", "select_subject_joins$ebnf$1"], "postprocess": ([head, tail]) => {
                    return [head, ...(tail || [])];
                } },
            { "name": "select_table_base", "symbols": ["stb_table"], "postprocess": unwrap },
            { "name": "select_table_base", "symbols": ["stb_statement"], "postprocess": unwrap },
            { "name": "select_table_base", "symbols": ["stb_call"], "postprocess": unwrap },
            { "name": "stb_opts$ebnf$1", "symbols": ["collist_paren"], "postprocess": id },
            { "name": "stb_opts$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "stb_opts", "symbols": ["ident_aliased", "stb_opts$ebnf$1"], "postprocess": x => lexer_2.track(x, {
                    alias: toStr(x[0]),
                    ...x[1] && { columnNames: lexer_2.unbox(x[1]).map(asName) },
                }) },
            { "name": "stb_table$ebnf$1", "symbols": ["stb_opts"], "postprocess": id },
            { "name": "stb_table$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "stb_table", "symbols": ["table_ref", "stb_table$ebnf$1"], "postprocess": x => {
                    return lexer_2.track(x, {
                        type: 'table',
                        name: lexer_2.track(x, {
                            ...x[0],
                            ...x[1],
                        }),
                    });
                } },
            { "name": "stb_statement", "symbols": ["selection_paren", "stb_opts"], "postprocess": x => lexer_2.track(x, {
                    type: 'statement',
                    statement: unwrap(x[0]),
                    ...x[1],
                }) },
            { "name": "select_values", "symbols": ["kw_values", "insert_values"], "postprocess": x => lexer_2.track(x, {
                    type: 'values',
                    values: x[1],
                }) },
            { "name": "stb_call$ebnf$1$subexpression$1$ebnf$1", "symbols": [(lexer_1.lexerAny.has("kw_as") ? { type: "kw_as" } : kw_as)], "postprocess": id },
            { "name": "stb_call$ebnf$1$subexpression$1$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "stb_call$ebnf$1$subexpression$1", "symbols": ["stb_call$ebnf$1$subexpression$1$ebnf$1", "ident"], "postprocess": last },
            { "name": "stb_call$ebnf$1", "symbols": ["stb_call$ebnf$1$subexpression$1"], "postprocess": id },
            { "name": "stb_call$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "stb_call", "symbols": ["expr_call", "stb_call$ebnf$1"], "postprocess": x => !x[1]
                    ? x[0]
                    : lexer_2.track(x, {
                        ...x[0],
                        alias: asName(x[1]),
                    }) },
            { "name": "select_table_join$ebnf$1", "symbols": ["select_table_join_clause"], "postprocess": id },
            { "name": "select_table_join$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "select_table_join", "symbols": ["select_join_op", (lexer_1.lexerAny.has("kw_join") ? { type: "kw_join" } : kw_join), "select_table_base", "select_table_join$ebnf$1"], "postprocess": x => lexer_2.track(x, {
                    ...unwrap(x[2]),
                    join: {
                        type: toStr(x[0], ' '),
                        ...x[3] && unwrap(x[3]),
                    }
                }) },
            { "name": "select_table_join_clause", "symbols": [(lexer_1.lexerAny.has("kw_on") ? { type: "kw_on" } : kw_on), "expr"], "postprocess": x => lexer_2.track(x, { on: last(x) }) },
            { "name": "select_table_join_clause$macrocall$2", "symbols": ["ident"] },
            { "name": "select_table_join_clause$macrocall$1$ebnf$1", "symbols": [] },
            { "name": "select_table_join_clause$macrocall$1$ebnf$1$subexpression$1", "symbols": [(lexer_1.lexerAny.has("comma") ? { type: "comma" } : comma), "select_table_join_clause$macrocall$2"], "postprocess": last },
            { "name": "select_table_join_clause$macrocall$1$ebnf$1", "symbols": ["select_table_join_clause$macrocall$1$ebnf$1", "select_table_join_clause$macrocall$1$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "select_table_join_clause$macrocall$1", "symbols": ["select_table_join_clause$macrocall$2", "select_table_join_clause$macrocall$1$ebnf$1"], "postprocess": ([head, tail]) => {
                    return [unwrap(head), ...(tail.map(unwrap) || [])];
                } },
            { "name": "select_table_join_clause", "symbols": [(lexer_1.lexerAny.has("kw_using") ? { type: "kw_using" } : kw_using), "lparen", "select_table_join_clause$macrocall$1", "rparen"], "postprocess": x => lexer_2.track(x, { using: x[2].map(asName) }) },
            { "name": "select_join_op$subexpression$1$ebnf$1", "symbols": [(lexer_1.lexerAny.has("kw_inner") ? { type: "kw_inner" } : kw_inner)], "postprocess": id },
            { "name": "select_join_op$subexpression$1$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "select_join_op$subexpression$1", "symbols": ["select_join_op$subexpression$1$ebnf$1"], "postprocess": x => lexer_2.box(x, 'INNER JOIN') },
            { "name": "select_join_op", "symbols": ["select_join_op$subexpression$1"] },
            { "name": "select_join_op$subexpression$2$ebnf$1", "symbols": [(lexer_1.lexerAny.has("kw_outer") ? { type: "kw_outer" } : kw_outer)], "postprocess": id },
            { "name": "select_join_op$subexpression$2$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "select_join_op$subexpression$2", "symbols": [(lexer_1.lexerAny.has("kw_left") ? { type: "kw_left" } : kw_left), "select_join_op$subexpression$2$ebnf$1"], "postprocess": x => lexer_2.box(x, 'LEFT JOIN') },
            { "name": "select_join_op", "symbols": ["select_join_op$subexpression$2"] },
            { "name": "select_join_op$subexpression$3$ebnf$1", "symbols": [(lexer_1.lexerAny.has("kw_outer") ? { type: "kw_outer" } : kw_outer)], "postprocess": id },
            { "name": "select_join_op$subexpression$3$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "select_join_op$subexpression$3", "symbols": [(lexer_1.lexerAny.has("kw_right") ? { type: "kw_right" } : kw_right), "select_join_op$subexpression$3$ebnf$1"], "postprocess": x => lexer_2.box(x, 'RIGHT JOIN') },
            { "name": "select_join_op", "symbols": ["select_join_op$subexpression$3"] },
            { "name": "select_join_op$subexpression$4$ebnf$1", "symbols": [(lexer_1.lexerAny.has("kw_outer") ? { type: "kw_outer" } : kw_outer)], "postprocess": id },
            { "name": "select_join_op$subexpression$4$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "select_join_op$subexpression$4", "symbols": [(lexer_1.lexerAny.has("kw_full") ? { type: "kw_full" } : kw_full), "select_join_op$subexpression$4$ebnf$1"], "postprocess": x => lexer_2.box(x, 'FULL JOIN') },
            { "name": "select_join_op", "symbols": ["select_join_op$subexpression$4"] },
            { "name": "select_what$ebnf$1", "symbols": ["select_distinct"], "postprocess": id },
            { "name": "select_what$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "select_what$ebnf$2", "symbols": ["select_expr_list_aliased"], "postprocess": id },
            { "name": "select_what$ebnf$2", "symbols": [], "postprocess": () => null },
            { "name": "select_what", "symbols": [(lexer_1.lexerAny.has("kw_select") ? { type: "kw_select" } : kw_select), "select_what$ebnf$1", "select_what$ebnf$2"], "postprocess": x => lexer_2.track(x, {
                    columns: x[2],
                    ...x[1] && { distinct: lexer_2.unbox(x[1]) },
                }) },
            { "name": "select_expr_list_aliased$ebnf$1", "symbols": [] },
            { "name": "select_expr_list_aliased$ebnf$1$subexpression$1", "symbols": ["comma", "select_expr_list_item"], "postprocess": last },
            { "name": "select_expr_list_aliased$ebnf$1", "symbols": ["select_expr_list_aliased$ebnf$1", "select_expr_list_aliased$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "select_expr_list_aliased", "symbols": ["select_expr_list_item", "select_expr_list_aliased$ebnf$1"], "postprocess": ([head, tail]) => {
                    return [head, ...(tail || [])];
                } },
            { "name": "select_expr_list_item$ebnf$1", "symbols": ["ident_aliased"], "postprocess": id },
            { "name": "select_expr_list_item$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "select_expr_list_item", "symbols": ["expr", "select_expr_list_item$ebnf$1"], "postprocess": x => lexer_2.track(x, {
                    expr: x[0],
                    ...x[1] ? { alias: asName(x[1]) } : {},
                }) },
            { "name": "select_distinct", "symbols": [(lexer_1.lexerAny.has("kw_all") ? { type: "kw_all" } : kw_all)], "postprocess": x => lexer_2.box(x, 'all') },
            { "name": "select_distinct$ebnf$1$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_on") ? { type: "kw_on" } : kw_on), "lparen", "expr_list_raw", "rparen"], "postprocess": get(2) },
            { "name": "select_distinct$ebnf$1", "symbols": ["select_distinct$ebnf$1$subexpression$1"], "postprocess": id },
            { "name": "select_distinct$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "select_distinct", "symbols": [(lexer_1.lexerAny.has("kw_distinct") ? { type: "kw_distinct" } : kw_distinct), "select_distinct$ebnf$1"], "postprocess": x => lexer_2.box(x, x[1] || 'distinct') },
            { "name": "select_where", "symbols": [(lexer_1.lexerAny.has("kw_where") ? { type: "kw_where" } : kw_where), "expr"], "postprocess": last },
            { "name": "select_groupby", "symbols": [(lexer_1.lexerAny.has("kw_group") ? { type: "kw_group" } : kw_group), "kw_by", "expr_list_raw"], "postprocess": last },
            { "name": "select_limit$ebnf$1$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_limit") ? { type: "kw_limit" } : kw_limit), "expr_nostar"], "postprocess": last },
            { "name": "select_limit$ebnf$1", "symbols": ["select_limit$ebnf$1$subexpression$1"], "postprocess": id },
            { "name": "select_limit$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "select_limit$ebnf$2$subexpression$1$ebnf$1$subexpression$1", "symbols": ["kw_row"] },
            { "name": "select_limit$ebnf$2$subexpression$1$ebnf$1$subexpression$1", "symbols": ["kw_rows"] },
            { "name": "select_limit$ebnf$2$subexpression$1$ebnf$1", "symbols": ["select_limit$ebnf$2$subexpression$1$ebnf$1$subexpression$1"], "postprocess": id },
            { "name": "select_limit$ebnf$2$subexpression$1$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "select_limit$ebnf$2$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_offset") ? { type: "kw_offset" } : kw_offset), "expr_nostar", "select_limit$ebnf$2$subexpression$1$ebnf$1"], "postprocess": get(1) },
            { "name": "select_limit$ebnf$2", "symbols": ["select_limit$ebnf$2$subexpression$1"], "postprocess": id },
            { "name": "select_limit$ebnf$2", "symbols": [], "postprocess": () => null },
            { "name": "select_limit$ebnf$3$subexpression$1$ebnf$1$subexpression$1", "symbols": ["kw_first"] },
            { "name": "select_limit$ebnf$3$subexpression$1$ebnf$1$subexpression$1", "symbols": ["kw_next"] },
            { "name": "select_limit$ebnf$3$subexpression$1$ebnf$1", "symbols": ["select_limit$ebnf$3$subexpression$1$ebnf$1$subexpression$1"], "postprocess": id },
            { "name": "select_limit$ebnf$3$subexpression$1$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "select_limit$ebnf$3$subexpression$1$ebnf$2$subexpression$1", "symbols": ["kw_row"] },
            { "name": "select_limit$ebnf$3$subexpression$1$ebnf$2$subexpression$1", "symbols": ["kw_rows"] },
            { "name": "select_limit$ebnf$3$subexpression$1$ebnf$2", "symbols": ["select_limit$ebnf$3$subexpression$1$ebnf$2$subexpression$1"], "postprocess": id },
            { "name": "select_limit$ebnf$3$subexpression$1$ebnf$2", "symbols": [], "postprocess": () => null },
            { "name": "select_limit$ebnf$3$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_fetch") ? { type: "kw_fetch" } : kw_fetch), "select_limit$ebnf$3$subexpression$1$ebnf$1", "expr_nostar", "select_limit$ebnf$3$subexpression$1$ebnf$2"], "postprocess": get(2) },
            { "name": "select_limit$ebnf$3", "symbols": ["select_limit$ebnf$3$subexpression$1"], "postprocess": id },
            { "name": "select_limit$ebnf$3", "symbols": [], "postprocess": () => null },
            { "name": "select_limit", "symbols": ["select_limit$ebnf$1", "select_limit$ebnf$2", "select_limit$ebnf$3"], "postprocess": (x, _, rej) => {
                    const limit1 = lexer_2.unbox(x[0]);
                    const offset = lexer_2.unbox(x[1]);
                    const limit2 = lexer_2.unbox(x[2]);
                    if (limit1 && limit2) {
                        return rej;
                    }
                    if (!limit1 && !limit2 && !offset) {
                        return null;
                    }
                    const limit = limit1 || limit2;
                    return lexer_2.track(x, {
                        ...limit ? { limit } : {},
                        ...offset ? { offset } : {},
                    });
                } },
            { "name": "select_order_by$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_order") ? { type: "kw_order" } : kw_order), "kw_by"] },
            { "name": "select_order_by$ebnf$1", "symbols": [] },
            { "name": "select_order_by$ebnf$1$subexpression$1", "symbols": ["comma", "select_order_by_expr"], "postprocess": last },
            { "name": "select_order_by$ebnf$1", "symbols": ["select_order_by$ebnf$1", "select_order_by$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "select_order_by", "symbols": ["select_order_by$subexpression$1", "select_order_by_expr", "select_order_by$ebnf$1"], "postprocess": ([_, head, tail]) => {
                    return [head, ...(tail || [])];
                } },
            { "name": "select_order_by_expr$ebnf$1$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_asc") ? { type: "kw_asc" } : kw_asc)] },
            { "name": "select_order_by_expr$ebnf$1$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_desc") ? { type: "kw_desc" } : kw_desc)] },
            { "name": "select_order_by_expr$ebnf$1", "symbols": ["select_order_by_expr$ebnf$1$subexpression$1"], "postprocess": id },
            { "name": "select_order_by_expr$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "select_order_by_expr", "symbols": ["expr", "select_order_by_expr$ebnf$1"], "postprocess": x => lexer_2.track(x, {
                    by: x[0],
                    ...x[1] && { order: toStr(x[1]).toUpperCase() },
                }) },
            { "name": "expr", "symbols": ["expr_nostar"], "postprocess": unwrap },
            { "name": "expr", "symbols": ["expr_star"], "postprocess": unwrap },
            { "name": "expr_nostar", "symbols": ["expr_paren"], "postprocess": unwrap },
            { "name": "expr_nostar", "symbols": ["expr_or"], "postprocess": unwrap },
            { "name": "expr_paren$subexpression$1", "symbols": ["expr_or_select"] },
            { "name": "expr_paren$subexpression$1", "symbols": ["expr_list_many"] },
            { "name": "expr_paren", "symbols": ["lparen", "expr_paren$subexpression$1", "rparen"], "postprocess": get(1) },
            { "name": "expr_or$macrocall$2$macrocall$2", "symbols": [(lexer_1.lexerAny.has("kw_or") ? { type: "kw_or" } : kw_or)] },
            { "name": "expr_or$macrocall$2$macrocall$1", "symbols": ["expr_or$macrocall$2$macrocall$2"], "postprocess": x => lexer_2.track(x, {
                    op: (toStr(x, ' ') || '<error>').toUpperCase()
                }) },
            { "name": "expr_or$macrocall$2", "symbols": ["expr_or$macrocall$2$macrocall$1"] },
            { "name": "expr_or$macrocall$3", "symbols": ["expr_or"] },
            { "name": "expr_or$macrocall$4", "symbols": ["expr_and"] },
            { "name": "expr_or$macrocall$1$subexpression$1", "symbols": ["expr_or$macrocall$3"] },
            { "name": "expr_or$macrocall$1$subexpression$1", "symbols": ["expr_paren"] },
            { "name": "expr_or$macrocall$1$subexpression$2", "symbols": ["expr_or$macrocall$4"] },
            { "name": "expr_or$macrocall$1$subexpression$2", "symbols": ["expr_paren"] },
            { "name": "expr_or$macrocall$1", "symbols": ["expr_or$macrocall$1$subexpression$1", "expr_or$macrocall$2", "expr_or$macrocall$1$subexpression$2"], "postprocess": x => lexer_2.track(x, {
                    type: 'binary',
                    left: unwrap(x[0]),
                    right: unwrap(x[2]),
                    ...unwrap(x[1]),
                }) },
            { "name": "expr_or$macrocall$1", "symbols": ["expr_or$macrocall$4"], "postprocess": unwrap },
            { "name": "expr_or", "symbols": ["expr_or$macrocall$1"] },
            { "name": "expr_and$macrocall$2$macrocall$2", "symbols": [(lexer_1.lexerAny.has("kw_and") ? { type: "kw_and" } : kw_and)] },
            { "name": "expr_and$macrocall$2$macrocall$1", "symbols": ["expr_and$macrocall$2$macrocall$2"], "postprocess": x => lexer_2.track(x, {
                    op: (toStr(x, ' ') || '<error>').toUpperCase()
                }) },
            { "name": "expr_and$macrocall$2", "symbols": ["expr_and$macrocall$2$macrocall$1"] },
            { "name": "expr_and$macrocall$3", "symbols": ["expr_and"] },
            { "name": "expr_and$macrocall$4", "symbols": ["expr_not"] },
            { "name": "expr_and$macrocall$1$subexpression$1", "symbols": ["expr_and$macrocall$3"] },
            { "name": "expr_and$macrocall$1$subexpression$1", "symbols": ["expr_paren"] },
            { "name": "expr_and$macrocall$1$subexpression$2", "symbols": ["expr_and$macrocall$4"] },
            { "name": "expr_and$macrocall$1$subexpression$2", "symbols": ["expr_paren"] },
            { "name": "expr_and$macrocall$1", "symbols": ["expr_and$macrocall$1$subexpression$1", "expr_and$macrocall$2", "expr_and$macrocall$1$subexpression$2"], "postprocess": x => lexer_2.track(x, {
                    type: 'binary',
                    left: unwrap(x[0]),
                    right: unwrap(x[2]),
                    ...unwrap(x[1]),
                }) },
            { "name": "expr_and$macrocall$1", "symbols": ["expr_and$macrocall$4"], "postprocess": unwrap },
            { "name": "expr_and", "symbols": ["expr_and$macrocall$1"] },
            { "name": "expr_not$macrocall$2$macrocall$2", "symbols": [(lexer_1.lexerAny.has("kw_not") ? { type: "kw_not" } : kw_not)] },
            { "name": "expr_not$macrocall$2$macrocall$1", "symbols": ["expr_not$macrocall$2$macrocall$2"], "postprocess": x => lexer_2.track(x, {
                    op: (toStr(x, ' ') || '<error>').toUpperCase()
                }) },
            { "name": "expr_not$macrocall$2", "symbols": ["expr_not$macrocall$2$macrocall$1"] },
            { "name": "expr_not$macrocall$3", "symbols": ["expr_not"] },
            { "name": "expr_not$macrocall$4", "symbols": ["expr_eq"] },
            { "name": "expr_not$macrocall$1$subexpression$1", "symbols": ["expr_not$macrocall$3"] },
            { "name": "expr_not$macrocall$1$subexpression$1", "symbols": ["expr_paren"] },
            { "name": "expr_not$macrocall$1", "symbols": ["expr_not$macrocall$2", "expr_not$macrocall$1$subexpression$1"], "postprocess": x => lexer_2.track(x, {
                    type: 'unary',
                    ...unwrap(x[0]),
                    operand: unwrap(x[1]),
                }) },
            { "name": "expr_not$macrocall$1", "symbols": ["expr_not$macrocall$4"], "postprocess": unwrap },
            { "name": "expr_not", "symbols": ["expr_not$macrocall$1"] },
            { "name": "expr_eq$macrocall$2$macrocall$2$subexpression$1", "symbols": [(lexer_1.lexerAny.has("op_eq") ? { type: "op_eq" } : op_eq)] },
            { "name": "expr_eq$macrocall$2$macrocall$2$subexpression$1", "symbols": [(lexer_1.lexerAny.has("op_neq") ? { type: "op_neq" } : op_neq)] },
            { "name": "expr_eq$macrocall$2$macrocall$2", "symbols": ["expr_eq$macrocall$2$macrocall$2$subexpression$1"] },
            { "name": "expr_eq$macrocall$2$macrocall$1$macrocall$2", "symbols": ["expr_eq$macrocall$2$macrocall$2"] },
            { "name": "expr_eq$macrocall$2$macrocall$1$macrocall$1", "symbols": ["expr_eq$macrocall$2$macrocall$1$macrocall$2"], "postprocess": x => lexer_2.track(x, {
                    op: (toStr(x, ' ') || '<error>').toUpperCase()
                }) },
            { "name": "expr_eq$macrocall$2$macrocall$1", "symbols": ["expr_eq$macrocall$2$macrocall$1$macrocall$1"], "postprocess": unwrap },
            { "name": "expr_eq$macrocall$2$macrocall$1", "symbols": ["kw_operator", "lparen", "ident", "dot", "expr_eq$macrocall$2$macrocall$2", "rparen"], "postprocess": x => lexer_2.track(x, {
                    op: (toStr(x[4], ' ') || '<error>').toUpperCase(),
                    opSchema: toStr(x[2]),
                }) },
            { "name": "expr_eq$macrocall$2", "symbols": ["expr_eq$macrocall$2$macrocall$1"] },
            { "name": "expr_eq$macrocall$3", "symbols": ["expr_eq"] },
            { "name": "expr_eq$macrocall$4", "symbols": ["expr_is"] },
            { "name": "expr_eq$macrocall$1$subexpression$1", "symbols": ["expr_eq$macrocall$3"] },
            { "name": "expr_eq$macrocall$1$subexpression$1", "symbols": ["expr_paren"] },
            { "name": "expr_eq$macrocall$1$subexpression$2", "symbols": ["expr_eq$macrocall$4"] },
            { "name": "expr_eq$macrocall$1$subexpression$2", "symbols": ["expr_paren"] },
            { "name": "expr_eq$macrocall$1", "symbols": ["expr_eq$macrocall$1$subexpression$1", "expr_eq$macrocall$2", "expr_eq$macrocall$1$subexpression$2"], "postprocess": x => lexer_2.track(x, {
                    type: 'binary',
                    left: unwrap(x[0]),
                    right: unwrap(x[2]),
                    ...unwrap(x[1]),
                }) },
            { "name": "expr_eq$macrocall$1", "symbols": ["expr_eq$macrocall$4"], "postprocess": unwrap },
            { "name": "expr_eq", "symbols": ["expr_eq$macrocall$1"] },
            { "name": "expr_star", "symbols": ["star"], "postprocess": x => lexer_2.track(x, { type: 'ref', name: '*' }) },
            { "name": "expr_is$subexpression$1", "symbols": ["expr_is"] },
            { "name": "expr_is$subexpression$1", "symbols": ["expr_paren"] },
            { "name": "expr_is$subexpression$2", "symbols": [(lexer_1.lexerAny.has("kw_isnull") ? { type: "kw_isnull" } : kw_isnull)] },
            { "name": "expr_is$subexpression$2", "symbols": [(lexer_1.lexerAny.has("kw_is") ? { type: "kw_is" } : kw_is), (lexer_1.lexerAny.has("kw_null") ? { type: "kw_null" } : kw_null)] },
            { "name": "expr_is", "symbols": ["expr_is$subexpression$1", "expr_is$subexpression$2"], "postprocess": x => lexer_2.track(x, { type: 'unary', op: 'IS NULL', operand: unwrap(x[0]) }) },
            { "name": "expr_is$subexpression$3", "symbols": ["expr_is"] },
            { "name": "expr_is$subexpression$3", "symbols": ["expr_paren"] },
            { "name": "expr_is$subexpression$4", "symbols": [(lexer_1.lexerAny.has("kw_notnull") ? { type: "kw_notnull" } : kw_notnull)] },
            { "name": "expr_is$subexpression$4", "symbols": [(lexer_1.lexerAny.has("kw_is") ? { type: "kw_is" } : kw_is), "kw_not_null"] },
            { "name": "expr_is", "symbols": ["expr_is$subexpression$3", "expr_is$subexpression$4"], "postprocess": x => lexer_2.track(x, { type: 'unary', op: 'IS NOT NULL', operand: unwrap(x[0]) }) },
            { "name": "expr_is$subexpression$5", "symbols": ["expr_is"] },
            { "name": "expr_is$subexpression$5", "symbols": ["expr_paren"] },
            { "name": "expr_is$ebnf$1", "symbols": [(lexer_1.lexerAny.has("kw_not") ? { type: "kw_not" } : kw_not)], "postprocess": id },
            { "name": "expr_is$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "expr_is$subexpression$6", "symbols": [(lexer_1.lexerAny.has("kw_true") ? { type: "kw_true" } : kw_true)] },
            { "name": "expr_is$subexpression$6", "symbols": [(lexer_1.lexerAny.has("kw_false") ? { type: "kw_false" } : kw_false)] },
            { "name": "expr_is", "symbols": ["expr_is$subexpression$5", (lexer_1.lexerAny.has("kw_is") ? { type: "kw_is" } : kw_is), "expr_is$ebnf$1", "expr_is$subexpression$6"], "postprocess": x => lexer_2.track(x, {
                    type: 'unary',
                    op: 'IS ' + flattenStr([x[2], x[3]])
                        .join(' ')
                        .toUpperCase(),
                    operand: unwrap(x[0]),
                }) },
            { "name": "expr_is", "symbols": ["expr_compare"], "postprocess": unwrap },
            { "name": "expr_compare$macrocall$2$macrocall$2", "symbols": [(lexer_1.lexerAny.has("op_compare") ? { type: "op_compare" } : op_compare)] },
            { "name": "expr_compare$macrocall$2$macrocall$1$macrocall$2", "symbols": ["expr_compare$macrocall$2$macrocall$2"] },
            { "name": "expr_compare$macrocall$2$macrocall$1$macrocall$1", "symbols": ["expr_compare$macrocall$2$macrocall$1$macrocall$2"], "postprocess": x => lexer_2.track(x, {
                    op: (toStr(x, ' ') || '<error>').toUpperCase()
                }) },
            { "name": "expr_compare$macrocall$2$macrocall$1", "symbols": ["expr_compare$macrocall$2$macrocall$1$macrocall$1"], "postprocess": unwrap },
            { "name": "expr_compare$macrocall$2$macrocall$1", "symbols": ["kw_operator", "lparen", "ident", "dot", "expr_compare$macrocall$2$macrocall$2", "rparen"], "postprocess": x => lexer_2.track(x, {
                    op: (toStr(x[4], ' ') || '<error>').toUpperCase(),
                    opSchema: toStr(x[2]),
                }) },
            { "name": "expr_compare$macrocall$2", "symbols": ["expr_compare$macrocall$2$macrocall$1"] },
            { "name": "expr_compare$macrocall$3", "symbols": ["expr_compare"] },
            { "name": "expr_compare$macrocall$4", "symbols": ["expr_range"] },
            { "name": "expr_compare$macrocall$1$subexpression$1", "symbols": ["expr_compare$macrocall$3"] },
            { "name": "expr_compare$macrocall$1$subexpression$1", "symbols": ["expr_paren"] },
            { "name": "expr_compare$macrocall$1$subexpression$2", "symbols": ["expr_compare$macrocall$4"] },
            { "name": "expr_compare$macrocall$1$subexpression$2", "symbols": ["expr_paren"] },
            { "name": "expr_compare$macrocall$1", "symbols": ["expr_compare$macrocall$1$subexpression$1", "expr_compare$macrocall$2", "expr_compare$macrocall$1$subexpression$2"], "postprocess": x => lexer_2.track(x, {
                    type: 'binary',
                    left: unwrap(x[0]),
                    right: unwrap(x[2]),
                    ...unwrap(x[1]),
                }) },
            { "name": "expr_compare$macrocall$1", "symbols": ["expr_compare$macrocall$4"], "postprocess": unwrap },
            { "name": "expr_compare", "symbols": ["expr_compare$macrocall$1"] },
            { "name": "expr_range$macrocall$2", "symbols": ["ops_between"] },
            { "name": "expr_range$macrocall$3", "symbols": [(lexer_1.lexerAny.has("kw_and") ? { type: "kw_and" } : kw_and)] },
            { "name": "expr_range$macrocall$4", "symbols": ["expr_range"] },
            { "name": "expr_range$macrocall$5", "symbols": ["expr_others"] },
            { "name": "expr_range$macrocall$1$subexpression$1", "symbols": ["expr_range$macrocall$4"] },
            { "name": "expr_range$macrocall$1$subexpression$1", "symbols": ["expr_paren"] },
            { "name": "expr_range$macrocall$1$subexpression$2", "symbols": ["expr_range$macrocall$4"] },
            { "name": "expr_range$macrocall$1$subexpression$2", "symbols": ["expr_paren"] },
            { "name": "expr_range$macrocall$1$subexpression$3", "symbols": ["expr_range$macrocall$5"] },
            { "name": "expr_range$macrocall$1$subexpression$3", "symbols": ["expr_paren"] },
            { "name": "expr_range$macrocall$1", "symbols": ["expr_range$macrocall$1$subexpression$1", "expr_range$macrocall$2", "expr_range$macrocall$1$subexpression$2", "expr_range$macrocall$3", "expr_range$macrocall$1$subexpression$3"], "postprocess": x => lexer_2.track(x, {
                    type: 'ternary',
                    value: unwrap(x[0]),
                    lo: unwrap(x[2]),
                    hi: unwrap(x[4]),
                    op: (flattenStr(x[1]).join(' ') || '<error>').toUpperCase(),
                }) },
            { "name": "expr_range$macrocall$1", "symbols": ["expr_range$macrocall$5"], "postprocess": unwrap },
            { "name": "expr_range", "symbols": ["expr_range$macrocall$1"] },
            { "name": "expr_others$macrocall$2$macrocall$2", "symbols": [(lexer_1.lexerAny.has("ops_others") ? { type: "ops_others" } : ops_others)] },
            { "name": "expr_others$macrocall$2$macrocall$1$macrocall$2", "symbols": ["expr_others$macrocall$2$macrocall$2"] },
            { "name": "expr_others$macrocall$2$macrocall$1$macrocall$1", "symbols": ["expr_others$macrocall$2$macrocall$1$macrocall$2"], "postprocess": x => lexer_2.track(x, {
                    op: (toStr(x, ' ') || '<error>').toUpperCase()
                }) },
            { "name": "expr_others$macrocall$2$macrocall$1", "symbols": ["expr_others$macrocall$2$macrocall$1$macrocall$1"], "postprocess": unwrap },
            { "name": "expr_others$macrocall$2$macrocall$1", "symbols": ["kw_operator", "lparen", "ident", "dot", "expr_others$macrocall$2$macrocall$2", "rparen"], "postprocess": x => lexer_2.track(x, {
                    op: (toStr(x[4], ' ') || '<error>').toUpperCase(),
                    opSchema: toStr(x[2]),
                }) },
            { "name": "expr_others$macrocall$2", "symbols": ["expr_others$macrocall$2$macrocall$1"] },
            { "name": "expr_others$macrocall$3", "symbols": ["expr_others"] },
            { "name": "expr_others$macrocall$4", "symbols": ["expr_like"] },
            { "name": "expr_others$macrocall$1$subexpression$1", "symbols": ["expr_others$macrocall$3"] },
            { "name": "expr_others$macrocall$1$subexpression$1", "symbols": ["expr_paren"] },
            { "name": "expr_others$macrocall$1$subexpression$2", "symbols": ["expr_others$macrocall$4"] },
            { "name": "expr_others$macrocall$1$subexpression$2", "symbols": ["expr_paren"] },
            { "name": "expr_others$macrocall$1", "symbols": ["expr_others$macrocall$1$subexpression$1", "expr_others$macrocall$2", "expr_others$macrocall$1$subexpression$2"], "postprocess": x => lexer_2.track(x, {
                    type: 'binary',
                    left: unwrap(x[0]),
                    right: unwrap(x[2]),
                    ...unwrap(x[1]),
                }) },
            { "name": "expr_others$macrocall$1", "symbols": ["expr_others$macrocall$4"], "postprocess": unwrap },
            { "name": "expr_others", "symbols": ["expr_others$macrocall$1"] },
            { "name": "expr_like$macrocall$2$macrocall$2", "symbols": ["ops_like"] },
            { "name": "expr_like$macrocall$2$macrocall$1", "symbols": ["expr_like$macrocall$2$macrocall$2"], "postprocess": x => lexer_2.track(x, {
                    op: (toStr(x, ' ') || '<error>').toUpperCase()
                }) },
            { "name": "expr_like$macrocall$2", "symbols": ["expr_like$macrocall$2$macrocall$1"] },
            { "name": "expr_like$macrocall$3", "symbols": ["expr_like"] },
            { "name": "expr_like$macrocall$4", "symbols": ["expr_in"] },
            { "name": "expr_like$macrocall$1$subexpression$1", "symbols": ["expr_like$macrocall$3"] },
            { "name": "expr_like$macrocall$1$subexpression$1", "symbols": ["expr_paren"] },
            { "name": "expr_like$macrocall$1$subexpression$2", "symbols": ["expr_like$macrocall$4"] },
            { "name": "expr_like$macrocall$1$subexpression$2", "symbols": ["expr_paren"] },
            { "name": "expr_like$macrocall$1", "symbols": ["expr_like$macrocall$1$subexpression$1", "expr_like$macrocall$2", "expr_like$macrocall$1$subexpression$2"], "postprocess": x => lexer_2.track(x, {
                    type: 'binary',
                    left: unwrap(x[0]),
                    right: unwrap(x[2]),
                    ...unwrap(x[1]),
                }) },
            { "name": "expr_like$macrocall$1", "symbols": ["expr_like$macrocall$4"], "postprocess": unwrap },
            { "name": "expr_like", "symbols": ["expr_like$macrocall$1"] },
            { "name": "expr_in$macrocall$2$macrocall$2", "symbols": ["ops_in"] },
            { "name": "expr_in$macrocall$2$macrocall$1", "symbols": ["expr_in$macrocall$2$macrocall$2"], "postprocess": x => lexer_2.track(x, {
                    op: (toStr(x, ' ') || '<error>').toUpperCase()
                }) },
            { "name": "expr_in$macrocall$2", "symbols": ["expr_in$macrocall$2$macrocall$1"] },
            { "name": "expr_in$macrocall$3", "symbols": ["expr_in"] },
            { "name": "expr_in$macrocall$4", "symbols": ["expr_add"] },
            { "name": "expr_in$macrocall$1$subexpression$1", "symbols": ["expr_in$macrocall$3"] },
            { "name": "expr_in$macrocall$1$subexpression$1", "symbols": ["expr_paren"] },
            { "name": "expr_in$macrocall$1$subexpression$2", "symbols": ["expr_in$macrocall$4"] },
            { "name": "expr_in$macrocall$1$subexpression$2", "symbols": ["expr_paren"] },
            { "name": "expr_in$macrocall$1", "symbols": ["expr_in$macrocall$1$subexpression$1", "expr_in$macrocall$2", "expr_in$macrocall$1$subexpression$2"], "postprocess": x => lexer_2.track(x, {
                    type: 'binary',
                    left: unwrap(x[0]),
                    right: unwrap(x[2]),
                    ...unwrap(x[1]),
                }) },
            { "name": "expr_in$macrocall$1", "symbols": ["expr_in$macrocall$4"], "postprocess": unwrap },
            { "name": "expr_in", "symbols": ["expr_in$macrocall$1"] },
            { "name": "expr_add$macrocall$2$macrocall$2$subexpression$1", "symbols": [(lexer_1.lexerAny.has("op_plus") ? { type: "op_plus" } : op_plus)] },
            { "name": "expr_add$macrocall$2$macrocall$2$subexpression$1", "symbols": [(lexer_1.lexerAny.has("op_minus") ? { type: "op_minus" } : op_minus)] },
            { "name": "expr_add$macrocall$2$macrocall$2$subexpression$1", "symbols": [(lexer_1.lexerAny.has("op_additive") ? { type: "op_additive" } : op_additive)] },
            { "name": "expr_add$macrocall$2$macrocall$2", "symbols": ["expr_add$macrocall$2$macrocall$2$subexpression$1"] },
            { "name": "expr_add$macrocall$2$macrocall$1$macrocall$2", "symbols": ["expr_add$macrocall$2$macrocall$2"] },
            { "name": "expr_add$macrocall$2$macrocall$1$macrocall$1", "symbols": ["expr_add$macrocall$2$macrocall$1$macrocall$2"], "postprocess": x => lexer_2.track(x, {
                    op: (toStr(x, ' ') || '<error>').toUpperCase()
                }) },
            { "name": "expr_add$macrocall$2$macrocall$1", "symbols": ["expr_add$macrocall$2$macrocall$1$macrocall$1"], "postprocess": unwrap },
            { "name": "expr_add$macrocall$2$macrocall$1", "symbols": ["kw_operator", "lparen", "ident", "dot", "expr_add$macrocall$2$macrocall$2", "rparen"], "postprocess": x => lexer_2.track(x, {
                    op: (toStr(x[4], ' ') || '<error>').toUpperCase(),
                    opSchema: toStr(x[2]),
                }) },
            { "name": "expr_add$macrocall$2", "symbols": ["expr_add$macrocall$2$macrocall$1"] },
            { "name": "expr_add$macrocall$3", "symbols": ["expr_add"] },
            { "name": "expr_add$macrocall$4", "symbols": ["expr_mult"] },
            { "name": "expr_add$macrocall$1$subexpression$1", "symbols": ["expr_add$macrocall$3"] },
            { "name": "expr_add$macrocall$1$subexpression$1", "symbols": ["expr_paren"] },
            { "name": "expr_add$macrocall$1$subexpression$2", "symbols": ["expr_add$macrocall$4"] },
            { "name": "expr_add$macrocall$1$subexpression$2", "symbols": ["expr_paren"] },
            { "name": "expr_add$macrocall$1", "symbols": ["expr_add$macrocall$1$subexpression$1", "expr_add$macrocall$2", "expr_add$macrocall$1$subexpression$2"], "postprocess": x => lexer_2.track(x, {
                    type: 'binary',
                    left: unwrap(x[0]),
                    right: unwrap(x[2]),
                    ...unwrap(x[1]),
                }) },
            { "name": "expr_add$macrocall$1", "symbols": ["expr_add$macrocall$4"], "postprocess": unwrap },
            { "name": "expr_add", "symbols": ["expr_add$macrocall$1"] },
            { "name": "expr_mult$macrocall$2$macrocall$2$subexpression$1", "symbols": [(lexer_1.lexerAny.has("star") ? { type: "star" } : star)] },
            { "name": "expr_mult$macrocall$2$macrocall$2$subexpression$1", "symbols": [(lexer_1.lexerAny.has("op_div") ? { type: "op_div" } : op_div)] },
            { "name": "expr_mult$macrocall$2$macrocall$2$subexpression$1", "symbols": [(lexer_1.lexerAny.has("op_mod") ? { type: "op_mod" } : op_mod)] },
            { "name": "expr_mult$macrocall$2$macrocall$2", "symbols": ["expr_mult$macrocall$2$macrocall$2$subexpression$1"] },
            { "name": "expr_mult$macrocall$2$macrocall$1$macrocall$2", "symbols": ["expr_mult$macrocall$2$macrocall$2"] },
            { "name": "expr_mult$macrocall$2$macrocall$1$macrocall$1", "symbols": ["expr_mult$macrocall$2$macrocall$1$macrocall$2"], "postprocess": x => lexer_2.track(x, {
                    op: (toStr(x, ' ') || '<error>').toUpperCase()
                }) },
            { "name": "expr_mult$macrocall$2$macrocall$1", "symbols": ["expr_mult$macrocall$2$macrocall$1$macrocall$1"], "postprocess": unwrap },
            { "name": "expr_mult$macrocall$2$macrocall$1", "symbols": ["kw_operator", "lparen", "ident", "dot", "expr_mult$macrocall$2$macrocall$2", "rparen"], "postprocess": x => lexer_2.track(x, {
                    op: (toStr(x[4], ' ') || '<error>').toUpperCase(),
                    opSchema: toStr(x[2]),
                }) },
            { "name": "expr_mult$macrocall$2", "symbols": ["expr_mult$macrocall$2$macrocall$1"] },
            { "name": "expr_mult$macrocall$3", "symbols": ["expr_mult"] },
            { "name": "expr_mult$macrocall$4", "symbols": ["expr_exp"] },
            { "name": "expr_mult$macrocall$1$subexpression$1", "symbols": ["expr_mult$macrocall$3"] },
            { "name": "expr_mult$macrocall$1$subexpression$1", "symbols": ["expr_paren"] },
            { "name": "expr_mult$macrocall$1$subexpression$2", "symbols": ["expr_mult$macrocall$4"] },
            { "name": "expr_mult$macrocall$1$subexpression$2", "symbols": ["expr_paren"] },
            { "name": "expr_mult$macrocall$1", "symbols": ["expr_mult$macrocall$1$subexpression$1", "expr_mult$macrocall$2", "expr_mult$macrocall$1$subexpression$2"], "postprocess": x => lexer_2.track(x, {
                    type: 'binary',
                    left: unwrap(x[0]),
                    right: unwrap(x[2]),
                    ...unwrap(x[1]),
                }) },
            { "name": "expr_mult$macrocall$1", "symbols": ["expr_mult$macrocall$4"], "postprocess": unwrap },
            { "name": "expr_mult", "symbols": ["expr_mult$macrocall$1"] },
            { "name": "expr_exp$macrocall$2$macrocall$2", "symbols": [(lexer_1.lexerAny.has("op_exp") ? { type: "op_exp" } : op_exp)] },
            { "name": "expr_exp$macrocall$2$macrocall$1$macrocall$2", "symbols": ["expr_exp$macrocall$2$macrocall$2"] },
            { "name": "expr_exp$macrocall$2$macrocall$1$macrocall$1", "symbols": ["expr_exp$macrocall$2$macrocall$1$macrocall$2"], "postprocess": x => lexer_2.track(x, {
                    op: (toStr(x, ' ') || '<error>').toUpperCase()
                }) },
            { "name": "expr_exp$macrocall$2$macrocall$1", "symbols": ["expr_exp$macrocall$2$macrocall$1$macrocall$1"], "postprocess": unwrap },
            { "name": "expr_exp$macrocall$2$macrocall$1", "symbols": ["kw_operator", "lparen", "ident", "dot", "expr_exp$macrocall$2$macrocall$2", "rparen"], "postprocess": x => lexer_2.track(x, {
                    op: (toStr(x[4], ' ') || '<error>').toUpperCase(),
                    opSchema: toStr(x[2]),
                }) },
            { "name": "expr_exp$macrocall$2", "symbols": ["expr_exp$macrocall$2$macrocall$1"] },
            { "name": "expr_exp$macrocall$3", "symbols": ["expr_exp"] },
            { "name": "expr_exp$macrocall$4", "symbols": ["expr_unary_add"] },
            { "name": "expr_exp$macrocall$1$subexpression$1", "symbols": ["expr_exp$macrocall$3"] },
            { "name": "expr_exp$macrocall$1$subexpression$1", "symbols": ["expr_paren"] },
            { "name": "expr_exp$macrocall$1$subexpression$2", "symbols": ["expr_exp$macrocall$4"] },
            { "name": "expr_exp$macrocall$1$subexpression$2", "symbols": ["expr_paren"] },
            { "name": "expr_exp$macrocall$1", "symbols": ["expr_exp$macrocall$1$subexpression$1", "expr_exp$macrocall$2", "expr_exp$macrocall$1$subexpression$2"], "postprocess": x => lexer_2.track(x, {
                    type: 'binary',
                    left: unwrap(x[0]),
                    right: unwrap(x[2]),
                    ...unwrap(x[1]),
                }) },
            { "name": "expr_exp$macrocall$1", "symbols": ["expr_exp$macrocall$4"], "postprocess": unwrap },
            { "name": "expr_exp", "symbols": ["expr_exp$macrocall$1"] },
            { "name": "expr_unary_add$macrocall$2$macrocall$2$subexpression$1", "symbols": [(lexer_1.lexerAny.has("op_plus") ? { type: "op_plus" } : op_plus)] },
            { "name": "expr_unary_add$macrocall$2$macrocall$2$subexpression$1", "symbols": [(lexer_1.lexerAny.has("op_minus") ? { type: "op_minus" } : op_minus)] },
            { "name": "expr_unary_add$macrocall$2$macrocall$2", "symbols": ["expr_unary_add$macrocall$2$macrocall$2$subexpression$1"] },
            { "name": "expr_unary_add$macrocall$2$macrocall$1$macrocall$2", "symbols": ["expr_unary_add$macrocall$2$macrocall$2"] },
            { "name": "expr_unary_add$macrocall$2$macrocall$1$macrocall$1", "symbols": ["expr_unary_add$macrocall$2$macrocall$1$macrocall$2"], "postprocess": x => lexer_2.track(x, {
                    op: (toStr(x, ' ') || '<error>').toUpperCase()
                }) },
            { "name": "expr_unary_add$macrocall$2$macrocall$1", "symbols": ["expr_unary_add$macrocall$2$macrocall$1$macrocall$1"], "postprocess": unwrap },
            { "name": "expr_unary_add$macrocall$2$macrocall$1", "symbols": ["kw_operator", "lparen", "ident", "dot", "expr_unary_add$macrocall$2$macrocall$2", "rparen"], "postprocess": x => lexer_2.track(x, {
                    op: (toStr(x[4], ' ') || '<error>').toUpperCase(),
                    opSchema: toStr(x[2]),
                }) },
            { "name": "expr_unary_add$macrocall$2", "symbols": ["expr_unary_add$macrocall$2$macrocall$1"] },
            { "name": "expr_unary_add$macrocall$3", "symbols": ["expr_unary_add"] },
            { "name": "expr_unary_add$macrocall$4", "symbols": ["expr_array_index"] },
            { "name": "expr_unary_add$macrocall$1$subexpression$1", "symbols": ["expr_unary_add$macrocall$3"] },
            { "name": "expr_unary_add$macrocall$1$subexpression$1", "symbols": ["expr_paren"] },
            { "name": "expr_unary_add$macrocall$1", "symbols": ["expr_unary_add$macrocall$2", "expr_unary_add$macrocall$1$subexpression$1"], "postprocess": x => lexer_2.track(x, {
                    type: 'unary',
                    ...unwrap(x[0]),
                    operand: unwrap(x[1]),
                }) },
            { "name": "expr_unary_add$macrocall$1", "symbols": ["expr_unary_add$macrocall$4"], "postprocess": unwrap },
            { "name": "expr_unary_add", "symbols": ["expr_unary_add$macrocall$1"] },
            { "name": "expr_array_index$subexpression$1", "symbols": ["expr_array_index"] },
            { "name": "expr_array_index$subexpression$1", "symbols": ["expr_paren"] },
            { "name": "expr_array_index", "symbols": ["expr_array_index$subexpression$1", (lexer_1.lexerAny.has("lbracket") ? { type: "lbracket" } : lbracket), "expr_nostar", (lexer_1.lexerAny.has("rbracket") ? { type: "rbracket" } : rbracket)], "postprocess": x => lexer_2.track(x, {
                    type: 'arrayIndex',
                    array: unwrap(x[0]),
                    index: unwrap(x[2]),
                }) },
            { "name": "expr_array_index", "symbols": ["expr_member"], "postprocess": unwrap },
            { "name": "expr_member$subexpression$1", "symbols": ["expr_member"] },
            { "name": "expr_member$subexpression$1", "symbols": ["expr_paren"] },
            { "name": "expr_member$subexpression$2", "symbols": ["string"] },
            { "name": "expr_member$subexpression$2", "symbols": ["int"] },
            { "name": "expr_member", "symbols": ["expr_member$subexpression$1", "ops_member", "expr_member$subexpression$2"], "postprocess": x => lexer_2.track(x, {
                    type: 'member',
                    operand: unwrap(x[0]),
                    op: x[1],
                    member: unwrap(x[2])
                }) },
            { "name": "expr_member$subexpression$3", "symbols": ["expr_member"] },
            { "name": "expr_member$subexpression$3", "symbols": ["expr_paren"] },
            { "name": "expr_member", "symbols": ["expr_member$subexpression$3", (lexer_1.lexerAny.has("op_cast") ? { type: "op_cast" } : op_cast), "data_type"], "postprocess": x => lexer_2.track(x, {
                    type: 'cast',
                    operand: unwrap(x[0]),
                    to: x[2],
                }) },
            { "name": "expr_member", "symbols": [(lexer_1.lexerAny.has("kw_cast") ? { type: "kw_cast" } : kw_cast), "lparen", "expr_nostar", (lexer_1.lexerAny.has("kw_as") ? { type: "kw_as" } : kw_as), "data_type", "rparen"], "postprocess": x => lexer_2.track(x, {
                    type: 'cast',
                    operand: unwrap(x[2]),
                    to: x[4],
                }) },
            { "name": "expr_member", "symbols": ["data_type", "string"], "postprocess": x => lexer_2.track(x, {
                    type: 'cast',
                    operand: lexer_2.track(x[1], {
                        type: 'string',
                        value: lexer_2.unbox(x[1]),
                    }),
                    to: lexer_2.unbox(x[0]),
                }) },
            { "name": "expr_member", "symbols": ["expr_dot"], "postprocess": unwrap },
            { "name": "expr_dot$subexpression$1", "symbols": ["word"] },
            { "name": "expr_dot$subexpression$1", "symbols": ["star"] },
            { "name": "expr_dot", "symbols": ["qname", (lexer_1.lexerAny.has("dot") ? { type: "dot" } : dot), "expr_dot$subexpression$1"], "postprocess": x => lexer_2.track(x, {
                    type: 'ref',
                    table: unwrap(x[0]),
                    name: toStr(x[2])
                }) },
            { "name": "expr_dot", "symbols": ["expr_final"], "postprocess": unwrap },
            { "name": "expr_final", "symbols": ["expr_basic"] },
            { "name": "expr_final", "symbols": ["expr_primary"] },
            { "name": "expr_basic", "symbols": ["expr_special_calls"] },
            { "name": "expr_basic", "symbols": ["expr_call"] },
            { "name": "expr_basic", "symbols": ["expr_array"] },
            { "name": "expr_basic", "symbols": ["expr_case"] },
            { "name": "expr_basic", "symbols": ["expr_extract"] },
            { "name": "expr_basic", "symbols": ["word"], "postprocess": x => lexer_2.track(x, {
                    type: 'ref',
                    name: unwrap(x[0]),
                }) },
            { "name": "expr_array$ebnf$1", "symbols": ["expr_subarray_items"], "postprocess": id },
            { "name": "expr_array$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "expr_array", "symbols": [(lexer_1.lexerAny.has("kw_array") ? { type: "kw_array" } : kw_array), (lexer_1.lexerAny.has("lbracket") ? { type: "lbracket" } : lbracket), "expr_array$ebnf$1", (lexer_1.lexerAny.has("rbracket") ? { type: "rbracket" } : rbracket)], "postprocess": x => lexer_2.track(x, {
                    type: 'array',
                    expressions: x[2] || [],
                }) },
            { "name": "expr_array", "symbols": [(lexer_1.lexerAny.has("kw_array") ? { type: "kw_array" } : kw_array), "lparen", "selection", "rparen"], "postprocess": x => lexer_2.track(x, {
                    type: 'array select',
                    select: unwrap(x[2]),
                }) },
            { "name": "expr_subarray$ebnf$1", "symbols": ["expr_subarray_items"], "postprocess": id },
            { "name": "expr_subarray$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "expr_subarray", "symbols": [(lexer_1.lexerAny.has("lbracket") ? { type: "lbracket" } : lbracket), "expr_subarray$ebnf$1", (lexer_1.lexerAny.has("rbracket") ? { type: "rbracket" } : rbracket)], "postprocess": get(1) },
            { "name": "expr_subarray_items$macrocall$2", "symbols": ["expr_list_item"] },
            { "name": "expr_subarray_items$macrocall$1$ebnf$1", "symbols": [] },
            { "name": "expr_subarray_items$macrocall$1$ebnf$1$subexpression$1", "symbols": [(lexer_1.lexerAny.has("comma") ? { type: "comma" } : comma), "expr_subarray_items$macrocall$2"], "postprocess": last },
            { "name": "expr_subarray_items$macrocall$1$ebnf$1", "symbols": ["expr_subarray_items$macrocall$1$ebnf$1", "expr_subarray_items$macrocall$1$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "expr_subarray_items$macrocall$1", "symbols": ["expr_subarray_items$macrocall$2", "expr_subarray_items$macrocall$1$ebnf$1"], "postprocess": ([head, tail]) => {
                    return [head, ...(tail || [])];
                } },
            { "name": "expr_subarray_items", "symbols": ["expr_subarray_items$macrocall$1"], "postprocess": x => x[0].map(unwrap) },
            { "name": "expr_subarray_items$macrocall$4", "symbols": ["expr_subarray"] },
            { "name": "expr_subarray_items$macrocall$3$ebnf$1", "symbols": [] },
            { "name": "expr_subarray_items$macrocall$3$ebnf$1$subexpression$1", "symbols": [(lexer_1.lexerAny.has("comma") ? { type: "comma" } : comma), "expr_subarray_items$macrocall$4"], "postprocess": last },
            { "name": "expr_subarray_items$macrocall$3$ebnf$1", "symbols": ["expr_subarray_items$macrocall$3$ebnf$1", "expr_subarray_items$macrocall$3$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "expr_subarray_items$macrocall$3", "symbols": ["expr_subarray_items$macrocall$4", "expr_subarray_items$macrocall$3$ebnf$1"], "postprocess": ([head, tail]) => {
                    return [head, ...(tail || [])];
                } },
            { "name": "expr_subarray_items", "symbols": ["expr_subarray_items$macrocall$3"], "postprocess": (x) => {
                    return x[0].map((v) => {
                        return lexer_2.track(v, {
                            type: 'array',
                            expressions: v[0].map(unwrap),
                        });
                    });
                } },
            { "name": "expr_call$ebnf$1$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_all") ? { type: "kw_all" } : kw_all)] },
            { "name": "expr_call$ebnf$1$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_distinct") ? { type: "kw_distinct" } : kw_distinct)] },
            { "name": "expr_call$ebnf$1", "symbols": ["expr_call$ebnf$1$subexpression$1"], "postprocess": id },
            { "name": "expr_call$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "expr_call$ebnf$2", "symbols": ["expr_list_raw"], "postprocess": id },
            { "name": "expr_call$ebnf$2", "symbols": [], "postprocess": () => null },
            { "name": "expr_call$ebnf$3", "symbols": ["select_order_by"], "postprocess": id },
            { "name": "expr_call$ebnf$3", "symbols": [], "postprocess": () => null },
            { "name": "expr_call$ebnf$4$subexpression$1", "symbols": ["kw_filter", "lparen", (lexer_1.lexerAny.has("kw_where") ? { type: "kw_where" } : kw_where), "expr", "rparen"], "postprocess": get(3) },
            { "name": "expr_call$ebnf$4", "symbols": ["expr_call$ebnf$4$subexpression$1"], "postprocess": id },
            { "name": "expr_call$ebnf$4", "symbols": [], "postprocess": () => null },
            { "name": "expr_call$ebnf$5", "symbols": ["expr_call_over"], "postprocess": id },
            { "name": "expr_call$ebnf$5", "symbols": [], "postprocess": () => null },
            { "name": "expr_call", "symbols": ["expr_fn_name", "lparen", "expr_call$ebnf$1", "expr_call$ebnf$2", "expr_call$ebnf$3", "rparen", "expr_call$ebnf$4", "expr_call$ebnf$5"], "postprocess": x => lexer_2.track(x, {
                    type: 'call',
                    function: unwrap(x[0]),
                    ...x[2] && { distinct: toStr(x[2]) },
                    args: x[3] || [],
                    ...x[4] && { orderBy: x[4] },
                    ...x[6] && { filter: unwrap(x[6]) },
                    ...x[7] && { over: unwrap(x[7]) },
                }) },
            { "name": "expr_call_over$ebnf$1$subexpression$1", "symbols": ["kw_partition", "kw_by", "expr_list_raw"], "postprocess": last },
            { "name": "expr_call_over$ebnf$1", "symbols": ["expr_call_over$ebnf$1$subexpression$1"], "postprocess": id },
            { "name": "expr_call_over$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "expr_call_over$ebnf$2", "symbols": ["select_order_by"], "postprocess": id },
            { "name": "expr_call_over$ebnf$2", "symbols": [], "postprocess": () => null },
            { "name": "expr_call_over", "symbols": ["kw_over", "lparen", "expr_call_over$ebnf$1", "expr_call_over$ebnf$2", "rparen"], "postprocess": x => lexer_2.track(x, {
                    ...x[2] && { partitionBy: x[2] },
                    ...x[3] && { orderBy: x[3] },
                }) },
            { "name": "expr_extract$subexpression$1", "symbols": ["word"], "postprocess": kw('extract') },
            { "name": "expr_extract", "symbols": ["expr_extract$subexpression$1", "lparen", "word", (lexer_1.lexerAny.has("kw_from") ? { type: "kw_from" } : kw_from), "expr", "rparen"], "postprocess": x => lexer_2.track(x, {
                    type: 'extract',
                    field: asName(x[2]),
                    from: x[4],
                }) },
            { "name": "expr_primary", "symbols": ["float"], "postprocess": x => lexer_2.track(x, { type: 'numeric', value: lexer_2.unbox(x[0]) }) },
            { "name": "expr_primary", "symbols": ["int"], "postprocess": x => lexer_2.track(x, { type: 'integer', value: lexer_2.unbox(x[0]) }) },
            { "name": "expr_primary", "symbols": ["string"], "postprocess": x => lexer_2.track(x, { type: 'string', value: lexer_2.unbox(x[0]) }) },
            { "name": "expr_primary", "symbols": [(lexer_1.lexerAny.has("kw_true") ? { type: "kw_true" } : kw_true)], "postprocess": x => lexer_2.track(x, { type: 'boolean', value: true }) },
            { "name": "expr_primary", "symbols": [(lexer_1.lexerAny.has("kw_false") ? { type: "kw_false" } : kw_false)], "postprocess": x => lexer_2.track(x, { type: 'boolean', value: false }) },
            { "name": "expr_primary", "symbols": [(lexer_1.lexerAny.has("kw_null") ? { type: "kw_null" } : kw_null)], "postprocess": x => lexer_2.track(x, { type: 'null' }) },
            { "name": "expr_primary", "symbols": ["value_keyword"], "postprocess": x => lexer_2.track(x, { type: 'keyword', keyword: toStr(x) }) },
            { "name": "expr_primary", "symbols": [(lexer_1.lexerAny.has("qparam") ? { type: "qparam" } : qparam)], "postprocess": x => lexer_2.track(x, { type: 'parameter', name: toStr(x[0]) }) },
            { "name": "expr_primary", "symbols": [(lexer_1.lexerAny.has("kw_default") ? { type: "kw_default" } : kw_default)], "postprocess": x => lexer_2.track(x, { type: 'default' }) },
            { "name": "ops_like", "symbols": ["ops_like_keywors"] },
            { "name": "ops_like", "symbols": ["ops_like_operators"] },
            { "name": "ops_like_keywors$ebnf$1", "symbols": [(lexer_1.lexerAny.has("kw_not") ? { type: "kw_not" } : kw_not)], "postprocess": id },
            { "name": "ops_like_keywors$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "ops_like_keywors$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_like") ? { type: "kw_like" } : kw_like)] },
            { "name": "ops_like_keywors$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_ilike") ? { type: "kw_ilike" } : kw_ilike)] },
            { "name": "ops_like_keywors", "symbols": ["ops_like_keywors$ebnf$1", "ops_like_keywors$subexpression$1"] },
            { "name": "ops_like_operators$subexpression$1", "symbols": [(lexer_1.lexerAny.has("op_like") ? { type: "op_like" } : op_like)], "postprocess": () => 'LIKE' },
            { "name": "ops_like_operators", "symbols": ["ops_like_operators$subexpression$1"] },
            { "name": "ops_like_operators$subexpression$2", "symbols": [(lexer_1.lexerAny.has("op_ilike") ? { type: "op_ilike" } : op_ilike)], "postprocess": () => 'ILIKE' },
            { "name": "ops_like_operators", "symbols": ["ops_like_operators$subexpression$2"] },
            { "name": "ops_like_operators$subexpression$3", "symbols": [(lexer_1.lexerAny.has("op_not_like") ? { type: "op_not_like" } : op_not_like)], "postprocess": () => 'NOT LIKE' },
            { "name": "ops_like_operators", "symbols": ["ops_like_operators$subexpression$3"] },
            { "name": "ops_like_operators$subexpression$4", "symbols": [(lexer_1.lexerAny.has("op_not_ilike") ? { type: "op_not_ilike" } : op_not_ilike)], "postprocess": () => 'NOT ILIKE' },
            { "name": "ops_like_operators", "symbols": ["ops_like_operators$subexpression$4"] },
            { "name": "ops_in$ebnf$1", "symbols": [(lexer_1.lexerAny.has("kw_not") ? { type: "kw_not" } : kw_not)], "postprocess": id },
            { "name": "ops_in$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "ops_in", "symbols": ["ops_in$ebnf$1", (lexer_1.lexerAny.has("kw_in") ? { type: "kw_in" } : kw_in)] },
            { "name": "ops_between$ebnf$1", "symbols": [(lexer_1.lexerAny.has("kw_not") ? { type: "kw_not" } : kw_not)], "postprocess": id },
            { "name": "ops_between$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "ops_between", "symbols": ["ops_between$ebnf$1", "kw_between"] },
            { "name": "ops_member$subexpression$1", "symbols": [(lexer_1.lexerAny.has("op_member") ? { type: "op_member" } : op_member)] },
            { "name": "ops_member$subexpression$1", "symbols": [(lexer_1.lexerAny.has("op_membertext") ? { type: "op_membertext" } : op_membertext)] },
            { "name": "ops_member", "symbols": ["ops_member$subexpression$1"], "postprocess": x => { var _a; return (_a = unwrap(x)) === null || _a === void 0 ? void 0 : _a.value; } },
            { "name": "expr_list_item", "symbols": ["expr_or_select"], "postprocess": unwrap },
            { "name": "expr_list_item", "symbols": ["expr_star"], "postprocess": unwrap },
            { "name": "expr_list_raw$macrocall$2", "symbols": ["expr_list_item"] },
            { "name": "expr_list_raw$macrocall$1$ebnf$1", "symbols": [] },
            { "name": "expr_list_raw$macrocall$1$ebnf$1$subexpression$1", "symbols": [(lexer_1.lexerAny.has("comma") ? { type: "comma" } : comma), "expr_list_raw$macrocall$2"], "postprocess": last },
            { "name": "expr_list_raw$macrocall$1$ebnf$1", "symbols": ["expr_list_raw$macrocall$1$ebnf$1", "expr_list_raw$macrocall$1$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "expr_list_raw$macrocall$1", "symbols": ["expr_list_raw$macrocall$2", "expr_list_raw$macrocall$1$ebnf$1"], "postprocess": ([head, tail]) => {
                    return [head, ...(tail || [])];
                } },
            { "name": "expr_list_raw", "symbols": ["expr_list_raw$macrocall$1"], "postprocess": ([x]) => x.map(unwrap) },
            { "name": "expr_list_raw_many$macrocall$2", "symbols": ["expr_list_item"] },
            { "name": "expr_list_raw_many$macrocall$1$ebnf$1$subexpression$1", "symbols": [(lexer_1.lexerAny.has("comma") ? { type: "comma" } : comma), "expr_list_raw_many$macrocall$2"], "postprocess": last },
            { "name": "expr_list_raw_many$macrocall$1$ebnf$1", "symbols": ["expr_list_raw_many$macrocall$1$ebnf$1$subexpression$1"] },
            { "name": "expr_list_raw_many$macrocall$1$ebnf$1$subexpression$2", "symbols": [(lexer_1.lexerAny.has("comma") ? { type: "comma" } : comma), "expr_list_raw_many$macrocall$2"], "postprocess": last },
            { "name": "expr_list_raw_many$macrocall$1$ebnf$1", "symbols": ["expr_list_raw_many$macrocall$1$ebnf$1", "expr_list_raw_many$macrocall$1$ebnf$1$subexpression$2"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "expr_list_raw_many$macrocall$1", "symbols": ["expr_list_raw_many$macrocall$2", "expr_list_raw_many$macrocall$1$ebnf$1"], "postprocess": ([head, tail]) => {
                    return [head, ...(tail || [])];
                } },
            { "name": "expr_list_raw_many", "symbols": ["expr_list_raw_many$macrocall$1"], "postprocess": ([x]) => x.map(unwrap) },
            { "name": "expr_or_select", "symbols": ["expr_nostar"], "postprocess": unwrap },
            { "name": "expr_or_select", "symbols": ["selection"], "postprocess": unwrap },
            { "name": "expr_list_many", "symbols": ["expr_list_raw_many"], "postprocess": x => lexer_2.track(x, {
                    type: 'list',
                    expressions: x[0],
                }) },
            { "name": "expr_case$ebnf$1", "symbols": ["expr_nostar"], "postprocess": id },
            { "name": "expr_case$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "expr_case$ebnf$2", "symbols": [] },
            { "name": "expr_case$ebnf$2", "symbols": ["expr_case$ebnf$2", "expr_case_whens"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "expr_case$ebnf$3", "symbols": ["expr_case_else"], "postprocess": id },
            { "name": "expr_case$ebnf$3", "symbols": [], "postprocess": () => null },
            { "name": "expr_case", "symbols": [(lexer_1.lexerAny.has("kw_case") ? { type: "kw_case" } : kw_case), "expr_case$ebnf$1", "expr_case$ebnf$2", "expr_case$ebnf$3", (lexer_1.lexerAny.has("kw_end") ? { type: "kw_end" } : kw_end)], "postprocess": x => lexer_2.track(x, {
                    type: 'case',
                    value: x[1],
                    whens: x[2],
                    else: x[3],
                }) },
            { "name": "expr_case_whens", "symbols": [(lexer_1.lexerAny.has("kw_when") ? { type: "kw_when" } : kw_when), "expr_nostar", (lexer_1.lexerAny.has("kw_then") ? { type: "kw_then" } : kw_then), "expr_nostar"], "postprocess": x => lexer_2.track(x, {
                    when: x[1],
                    value: x[3],
                }) },
            { "name": "expr_case_else", "symbols": [(lexer_1.lexerAny.has("kw_else") ? { type: "kw_else" } : kw_else), "expr_nostar"], "postprocess": last },
            { "name": "expr_fn_name$subexpression$1$ebnf$1$subexpression$1", "symbols": ["word", (lexer_1.lexerAny.has("dot") ? { type: "dot" } : dot)] },
            { "name": "expr_fn_name$subexpression$1$ebnf$1", "symbols": ["expr_fn_name$subexpression$1$ebnf$1$subexpression$1"], "postprocess": id },
            { "name": "expr_fn_name$subexpression$1$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "expr_fn_name$subexpression$1", "symbols": ["expr_fn_name$subexpression$1$ebnf$1", "word_or_keyword"], "postprocess": x => lexer_2.track(x, {
                    name: lexer_2.unbox(unwrap(x[1])),
                    ...x[0] && { schema: toStr(x[0][0]) },
                }) },
            { "name": "expr_fn_name", "symbols": ["expr_fn_name$subexpression$1"] },
            { "name": "expr_fn_name$subexpression$2", "symbols": [(lexer_1.lexerAny.has("kw_any") ? { type: "kw_any" } : kw_any)], "postprocess": x => lexer_2.track(x, {
                    name: 'any',
                }) },
            { "name": "expr_fn_name", "symbols": ["expr_fn_name$subexpression$2"] },
            { "name": "word_or_keyword", "symbols": ["word"] },
            { "name": "word_or_keyword", "symbols": ["value_keyword"], "postprocess": x => lexer_2.box(x, toStr(x)) },
            { "name": "value_keyword", "symbols": [(lexer_1.lexerAny.has("kw_current_catalog") ? { type: "kw_current_catalog" } : kw_current_catalog)] },
            { "name": "value_keyword", "symbols": [(lexer_1.lexerAny.has("kw_current_date") ? { type: "kw_current_date" } : kw_current_date)] },
            { "name": "value_keyword", "symbols": [(lexer_1.lexerAny.has("kw_current_role") ? { type: "kw_current_role" } : kw_current_role)] },
            { "name": "value_keyword", "symbols": [(lexer_1.lexerAny.has("kw_current_schema") ? { type: "kw_current_schema" } : kw_current_schema)] },
            { "name": "value_keyword", "symbols": [(lexer_1.lexerAny.has("kw_current_timestamp") ? { type: "kw_current_timestamp" } : kw_current_timestamp)] },
            { "name": "value_keyword", "symbols": [(lexer_1.lexerAny.has("kw_current_time") ? { type: "kw_current_time" } : kw_current_time)] },
            { "name": "value_keyword", "symbols": [(lexer_1.lexerAny.has("kw_localtimestamp") ? { type: "kw_localtimestamp" } : kw_localtimestamp)] },
            { "name": "value_keyword", "symbols": [(lexer_1.lexerAny.has("kw_localtime") ? { type: "kw_localtime" } : kw_localtime)] },
            { "name": "value_keyword", "symbols": [(lexer_1.lexerAny.has("kw_session_user") ? { type: "kw_session_user" } : kw_session_user)] },
            { "name": "value_keyword", "symbols": [(lexer_1.lexerAny.has("kw_user") ? { type: "kw_user" } : kw_user)] },
            { "name": "value_keyword", "symbols": [(lexer_1.lexerAny.has("kw_current_user") ? { type: "kw_current_user" } : kw_current_user)] },
            { "name": "expr_special_calls", "symbols": ["spe_overlay"] },
            { "name": "expr_special_calls", "symbols": ["spe_substring"] },
            { "name": "spe_overlay$subexpression$1", "symbols": ["word"], "postprocess": kw('overlay') },
            { "name": "spe_overlay$subexpression$2", "symbols": [(lexer_1.lexerAny.has("lparen") ? { type: "lparen" } : lparen), "expr_nostar"] },
            { "name": "spe_overlay$subexpression$3", "symbols": [(lexer_1.lexerAny.has("kw_placing") ? { type: "kw_placing" } : kw_placing), "expr_nostar"] },
            { "name": "spe_overlay$subexpression$4", "symbols": [(lexer_1.lexerAny.has("kw_from") ? { type: "kw_from" } : kw_from), "expr_nostar"] },
            { "name": "spe_overlay$ebnf$1$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_for") ? { type: "kw_for" } : kw_for), "expr_nostar"] },
            { "name": "spe_overlay$ebnf$1", "symbols": ["spe_overlay$ebnf$1$subexpression$1"], "postprocess": id },
            { "name": "spe_overlay$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "spe_overlay", "symbols": ["spe_overlay$subexpression$1", "spe_overlay$subexpression$2", "spe_overlay$subexpression$3", "spe_overlay$subexpression$4", "spe_overlay$ebnf$1", (lexer_1.lexerAny.has("rparen") ? { type: "rparen" } : rparen)], "postprocess": x => lexer_2.track(x, {
                    type: 'overlay',
                    value: x[1][1],
                    placing: x[2][1],
                    from: x[3][1],
                    ...x[4] && { for: x[4][1] },
                }) },
            { "name": "spe_substring$subexpression$1", "symbols": ["word"], "postprocess": kw('substring') },
            { "name": "spe_substring$subexpression$2", "symbols": [(lexer_1.lexerAny.has("lparen") ? { type: "lparen" } : lparen), "expr_nostar"] },
            { "name": "spe_substring$ebnf$1$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_from") ? { type: "kw_from" } : kw_from), "expr_nostar"] },
            { "name": "spe_substring$ebnf$1", "symbols": ["spe_substring$ebnf$1$subexpression$1"], "postprocess": id },
            { "name": "spe_substring$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "spe_substring$ebnf$2$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_for") ? { type: "kw_for" } : kw_for), "expr_nostar"] },
            { "name": "spe_substring$ebnf$2", "symbols": ["spe_substring$ebnf$2$subexpression$1"], "postprocess": id },
            { "name": "spe_substring$ebnf$2", "symbols": [], "postprocess": () => null },
            { "name": "spe_substring", "symbols": ["spe_substring$subexpression$1", "spe_substring$subexpression$2", "spe_substring$ebnf$1", "spe_substring$ebnf$2", (lexer_1.lexerAny.has("rparen") ? { type: "rparen" } : rparen)], "postprocess": x => lexer_2.track(x, {
                    type: 'substring',
                    value: x[1][1],
                    ...x[2] && { from: x[2][1] },
                    ...x[3] && { for: x[3][1] },
                }) },
            { "name": "createtable_statement$ebnf$1", "symbols": ["createtable_modifiers"], "postprocess": id },
            { "name": "createtable_statement$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "createtable_statement$ebnf$2", "symbols": ["kw_ifnotexists"], "postprocess": id },
            { "name": "createtable_statement$ebnf$2", "symbols": [], "postprocess": () => null },
            { "name": "createtable_statement$ebnf$3", "symbols": ["createtable_opts"], "postprocess": id },
            { "name": "createtable_statement$ebnf$3", "symbols": [], "postprocess": () => null },
            { "name": "createtable_statement", "symbols": [(lexer_1.lexerAny.has("kw_create") ? { type: "kw_create" } : kw_create), "createtable_statement$ebnf$1", (lexer_1.lexerAny.has("kw_table") ? { type: "kw_table" } : kw_table), "createtable_statement$ebnf$2", "qname", "lparen", "createtable_declarationlist", "rparen", "createtable_statement$ebnf$3"], "postprocess": x => {
                    const cols = x[6].filter((v) => 'kind' in v);
                    const constraints = x[6].filter((v) => !('kind' in v));
                    return lexer_2.track(x, {
                        type: 'create table',
                        ...!!x[3] ? { ifNotExists: true } : {},
                        name: x[4],
                        columns: cols,
                        ...unwrap(x[1]),
                        ...constraints.length ? { constraints } : {},
                        ...last(x),
                    });
                } },
            { "name": "createtable_modifiers", "symbols": ["kw_unlogged"], "postprocess": x => x[0] ? { unlogged: true } : {} },
            { "name": "createtable_modifiers", "symbols": ["m_locglob"] },
            { "name": "createtable_modifiers", "symbols": ["m_tmp"] },
            { "name": "createtable_modifiers", "symbols": ["m_locglob", "m_tmp"], "postprocess": ([a, b]) => ({ ...a, ...b }) },
            { "name": "m_locglob$subexpression$1", "symbols": ["kw_local"] },
            { "name": "m_locglob$subexpression$1", "symbols": ["kw_global"] },
            { "name": "m_locglob", "symbols": ["m_locglob$subexpression$1"], "postprocess": x => ({ locality: toStr(x) }) },
            { "name": "m_tmp$subexpression$1", "symbols": ["kw_temp"] },
            { "name": "m_tmp$subexpression$1", "symbols": ["kw_temporary"] },
            { "name": "m_tmp", "symbols": ["m_tmp$subexpression$1"], "postprocess": x => ({ temporary: true }) },
            { "name": "createtable_declarationlist$ebnf$1", "symbols": [] },
            { "name": "createtable_declarationlist$ebnf$1$subexpression$1", "symbols": ["comma", "createtable_declaration"], "postprocess": last },
            { "name": "createtable_declarationlist$ebnf$1", "symbols": ["createtable_declarationlist$ebnf$1", "createtable_declarationlist$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "createtable_declarationlist", "symbols": ["createtable_declaration", "createtable_declarationlist$ebnf$1"], "postprocess": ([head, tail]) => {
                    return [head, ...(tail || [])];
                } },
            { "name": "createtable_declaration$subexpression$1", "symbols": ["createtable_constraint"] },
            { "name": "createtable_declaration$subexpression$1", "symbols": ["createtable_column"] },
            { "name": "createtable_declaration$subexpression$1", "symbols": ["createtable_like"] },
            { "name": "createtable_declaration", "symbols": ["createtable_declaration$subexpression$1"], "postprocess": unwrap },
            { "name": "createtable_constraint$macrocall$2", "symbols": ["createtable_constraint_def"] },
            { "name": "createtable_constraint$macrocall$1$ebnf$1$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_constraint") ? { type: "kw_constraint" } : kw_constraint), "word"] },
            { "name": "createtable_constraint$macrocall$1$ebnf$1", "symbols": ["createtable_constraint$macrocall$1$ebnf$1$subexpression$1"], "postprocess": id },
            { "name": "createtable_constraint$macrocall$1$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "createtable_constraint$macrocall$1", "symbols": ["createtable_constraint$macrocall$1$ebnf$1", "createtable_constraint$macrocall$2"], "postprocess": x => {
                    const name = x[0] && asName(x[0][1]);
                    if (!name) {
                        return lexer_2.track(x, unwrap(x[1]));
                    }
                    return lexer_2.track(x, {
                        constraintName: name,
                        ...unwrap(x[1]),
                    });
                } },
            { "name": "createtable_constraint", "symbols": ["createtable_constraint$macrocall$1"], "postprocess": unwrap },
            { "name": "createtable_constraint_def", "symbols": ["createtable_constraint_def_unique"] },
            { "name": "createtable_constraint_def", "symbols": ["createtable_constraint_def_check"] },
            { "name": "createtable_constraint_def", "symbols": ["createtable_constraint_foreignkey"] },
            { "name": "createtable_constraint_def_unique$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_unique") ? { type: "kw_unique" } : kw_unique)] },
            { "name": "createtable_constraint_def_unique$subexpression$1", "symbols": ["kw_primary_key"] },
            { "name": "createtable_constraint_def_unique", "symbols": ["createtable_constraint_def_unique$subexpression$1", "lparen", "createtable_collist", "rparen"], "postprocess": x => lexer_2.track(x, {
                    type: toStr(x[0], ' '),
                    columns: x[2].map(asName),
                }) },
            { "name": "createtable_constraint_def_check", "symbols": [(lexer_1.lexerAny.has("kw_check") ? { type: "kw_check" } : kw_check), "expr_paren"], "postprocess": x => lexer_2.track(x, {
                    type: 'check',
                    expr: unwrap(x[1]),
                }) },
            { "name": "createtable_constraint_foreignkey$ebnf$1", "symbols": [] },
            { "name": "createtable_constraint_foreignkey$ebnf$1", "symbols": ["createtable_constraint_foreignkey$ebnf$1", "createtable_constraint_foreignkey_onsometing"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "createtable_constraint_foreignkey", "symbols": [(lexer_1.lexerAny.has("kw_foreign") ? { type: "kw_foreign" } : kw_foreign), "kw_key", "collist_paren", (lexer_1.lexerAny.has("kw_references") ? { type: "kw_references" } : kw_references), "qualified_name", "collist_paren", "createtable_constraint_foreignkey$ebnf$1"], "postprocess": (x) => {
                    return lexer_2.track(x, {
                        type: 'foreign key',
                        localColumns: x[2].map(asName),
                        foreignTable: unwrap(x[4]),
                        foreignColumns: x[5].map(asName),
                        ...x[6].reduce((a, b) => ({ ...a, ...b }), {}),
                    });
                } },
            { "name": "createtable_constraint_foreignkey_onsometing", "symbols": [(lexer_1.lexerAny.has("kw_on") ? { type: "kw_on" } : kw_on), "kw_delete", "createtable_constraint_on_action"], "postprocess": x => lexer_2.track(x, { onDelete: last(x) }) },
            { "name": "createtable_constraint_foreignkey_onsometing", "symbols": [(lexer_1.lexerAny.has("kw_on") ? { type: "kw_on" } : kw_on), "kw_update", "createtable_constraint_on_action"], "postprocess": x => lexer_2.track(x, { onUpdate: last(x) }) },
            { "name": "createtable_constraint_foreignkey_onsometing$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_full") ? { type: "kw_full" } : kw_full)] },
            { "name": "createtable_constraint_foreignkey_onsometing$subexpression$1", "symbols": ["kw_partial"] },
            { "name": "createtable_constraint_foreignkey_onsometing$subexpression$1", "symbols": ["kw_simple"] },
            { "name": "createtable_constraint_foreignkey_onsometing", "symbols": ["kw_match", "createtable_constraint_foreignkey_onsometing$subexpression$1"], "postprocess": x => lexer_2.track(x, { match: toStr(last(x)) }) },
            { "name": "createtable_constraint_on_action$subexpression$1", "symbols": ["kw_cascade"] },
            { "name": "createtable_constraint_on_action$subexpression$1$subexpression$1", "symbols": ["kw_no", "kw_action"] },
            { "name": "createtable_constraint_on_action$subexpression$1", "symbols": ["createtable_constraint_on_action$subexpression$1$subexpression$1"] },
            { "name": "createtable_constraint_on_action$subexpression$1", "symbols": ["kw_restrict"] },
            { "name": "createtable_constraint_on_action$subexpression$1$subexpression$2", "symbols": [(lexer_1.lexerAny.has("kw_null") ? { type: "kw_null" } : kw_null)] },
            { "name": "createtable_constraint_on_action$subexpression$1$subexpression$2", "symbols": [(lexer_1.lexerAny.has("kw_default") ? { type: "kw_default" } : kw_default)] },
            { "name": "createtable_constraint_on_action$subexpression$1", "symbols": ["kw_set", "createtable_constraint_on_action$subexpression$1$subexpression$2"] },
            { "name": "createtable_constraint_on_action", "symbols": ["createtable_constraint_on_action$subexpression$1"], "postprocess": x => toStr(x, ' ') },
            { "name": "createtable_collist$ebnf$1", "symbols": [] },
            { "name": "createtable_collist$ebnf$1$subexpression$1", "symbols": ["comma", "ident"], "postprocess": last },
            { "name": "createtable_collist$ebnf$1", "symbols": ["createtable_collist$ebnf$1", "createtable_collist$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "createtable_collist", "symbols": ["ident", "createtable_collist$ebnf$1"], "postprocess": ([head, tail]) => {
                    return [head, ...(tail || [])];
                } },
            { "name": "createtable_column$ebnf$1", "symbols": ["createtable_collate"], "postprocess": id },
            { "name": "createtable_column$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "createtable_column$ebnf$2", "symbols": [] },
            { "name": "createtable_column$ebnf$2", "symbols": ["createtable_column$ebnf$2", "createtable_column_constraint"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "createtable_column", "symbols": ["word", "data_type", "createtable_column$ebnf$1", "createtable_column$ebnf$2"], "postprocess": x => {
                    return lexer_2.track(x, {
                        kind: 'column',
                        name: asName(x[0]),
                        dataType: x[1],
                        ...x[2] ? { collate: x[2][1] } : {},
                        ...x[3] && x[3].length ? { constraints: x[3] } : {},
                    });
                } },
            { "name": "createtable_like$ebnf$1", "symbols": [] },
            { "name": "createtable_like$ebnf$1", "symbols": ["createtable_like$ebnf$1", "createtable_like_opt"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "createtable_like", "symbols": [(lexer_1.lexerAny.has("kw_like") ? { type: "kw_like" } : kw_like), "qname", "createtable_like$ebnf$1"], "postprocess": x => lexer_2.track(x, {
                    kind: 'like table',
                    like: x[1],
                    options: x[2],
                }) },
            { "name": "createtable_like_opt$subexpression$1", "symbols": ["kw_including"] },
            { "name": "createtable_like_opt$subexpression$1", "symbols": ["kw_excluding"] },
            { "name": "createtable_like_opt", "symbols": ["createtable_like_opt$subexpression$1", "createtable_like_opt_val"], "postprocess": x => lexer_2.track(x, {
                    verb: toStr(x[0]),
                    option: toStr(x[1]),
                }) },
            { "name": "createtable_like_opt_val", "symbols": ["word"], "postprocess": anyKw('defaults', 'constraints', 'indexes', 'storage', 'comments') },
            { "name": "createtable_like_opt_val", "symbols": [(lexer_1.lexerAny.has("kw_all") ? { type: "kw_all" } : kw_all)] },
            { "name": "createtable_column_constraint$macrocall$2", "symbols": ["createtable_column_constraint_def"] },
            { "name": "createtable_column_constraint$macrocall$1$ebnf$1$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_constraint") ? { type: "kw_constraint" } : kw_constraint), "word"] },
            { "name": "createtable_column_constraint$macrocall$1$ebnf$1", "symbols": ["createtable_column_constraint$macrocall$1$ebnf$1$subexpression$1"], "postprocess": id },
            { "name": "createtable_column_constraint$macrocall$1$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "createtable_column_constraint$macrocall$1", "symbols": ["createtable_column_constraint$macrocall$1$ebnf$1", "createtable_column_constraint$macrocall$2"], "postprocess": x => {
                    const name = x[0] && asName(x[0][1]);
                    if (!name) {
                        return lexer_2.track(x, unwrap(x[1]));
                    }
                    return lexer_2.track(x, {
                        constraintName: name,
                        ...unwrap(x[1]),
                    });
                } },
            { "name": "createtable_column_constraint", "symbols": ["createtable_column_constraint$macrocall$1"], "postprocess": unwrap },
            { "name": "createtable_column_constraint_def", "symbols": [(lexer_1.lexerAny.has("kw_unique") ? { type: "kw_unique" } : kw_unique)], "postprocess": x => lexer_2.track(x, { type: 'unique' }) },
            { "name": "createtable_column_constraint_def", "symbols": ["kw_primary_key"], "postprocess": x => lexer_2.track(x, { type: 'primary key' }) },
            { "name": "createtable_column_constraint_def", "symbols": ["kw_not_null"], "postprocess": x => lexer_2.track(x, { type: 'not null' }) },
            { "name": "createtable_column_constraint_def", "symbols": [(lexer_1.lexerAny.has("kw_null") ? { type: "kw_null" } : kw_null)], "postprocess": x => lexer_2.track(x, { type: 'null' }) },
            { "name": "createtable_column_constraint_def", "symbols": [(lexer_1.lexerAny.has("kw_default") ? { type: "kw_default" } : kw_default), "expr"], "postprocess": x => lexer_2.track(x, { type: 'default', default: unwrap(x[1]) }) },
            { "name": "createtable_column_constraint_def", "symbols": [(lexer_1.lexerAny.has("kw_check") ? { type: "kw_check" } : kw_check), "expr_paren"], "postprocess": x => lexer_2.track(x, { type: 'check', expr: unwrap(x[1]) }) },
            { "name": "createtable_column_constraint_def", "symbols": ["altercol_generated"] },
            { "name": "createtable_collate", "symbols": [(lexer_1.lexerAny.has("kw_collate") ? { type: "kw_collate" } : kw_collate), "qualified_name"] },
            { "name": "createtable_opts$subexpression$1", "symbols": ["word"], "postprocess": kw('inherits') },
            { "name": "createtable_opts$macrocall$2", "symbols": ["qname"] },
            { "name": "createtable_opts$macrocall$1$ebnf$1", "symbols": [] },
            { "name": "createtable_opts$macrocall$1$ebnf$1$subexpression$1", "symbols": [(lexer_1.lexerAny.has("comma") ? { type: "comma" } : comma), "createtable_opts$macrocall$2"], "postprocess": last },
            { "name": "createtable_opts$macrocall$1$ebnf$1", "symbols": ["createtable_opts$macrocall$1$ebnf$1", "createtable_opts$macrocall$1$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "createtable_opts$macrocall$1", "symbols": ["createtable_opts$macrocall$2", "createtable_opts$macrocall$1$ebnf$1"], "postprocess": ([head, tail]) => {
                    return [unwrap(head), ...(tail.map(unwrap) || [])];
                } },
            { "name": "createtable_opts", "symbols": ["createtable_opts$subexpression$1", "lparen", "createtable_opts$macrocall$1", "rparen"], "postprocess": x => lexer_2.track(x, { inherits: x[2] }) },
            { "name": "createindex_statement$ebnf$1", "symbols": [(lexer_1.lexerAny.has("kw_unique") ? { type: "kw_unique" } : kw_unique)], "postprocess": id },
            { "name": "createindex_statement$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "createindex_statement$ebnf$2", "symbols": ["kw_ifnotexists"], "postprocess": id },
            { "name": "createindex_statement$ebnf$2", "symbols": [], "postprocess": () => null },
            { "name": "createindex_statement$ebnf$3", "symbols": ["word"], "postprocess": id },
            { "name": "createindex_statement$ebnf$3", "symbols": [], "postprocess": () => null },
            { "name": "createindex_statement$ebnf$4$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_using") ? { type: "kw_using" } : kw_using), "ident"], "postprocess": last },
            { "name": "createindex_statement$ebnf$4", "symbols": ["createindex_statement$ebnf$4$subexpression$1"], "postprocess": id },
            { "name": "createindex_statement$ebnf$4", "symbols": [], "postprocess": () => null },
            { "name": "createindex_statement", "symbols": [(lexer_1.lexerAny.has("kw_create") ? { type: "kw_create" } : kw_create), "createindex_statement$ebnf$1", "kw_index", "createindex_statement$ebnf$2", "createindex_statement$ebnf$3", (lexer_1.lexerAny.has("kw_on") ? { type: "kw_on" } : kw_on), "table_ref", "createindex_statement$ebnf$4", "lparen", "createindex_expressions", "rparen"], "postprocess": x => lexer_2.track(x, {
                    type: 'create index',
                    ...x[1] && { unique: true },
                    ...x[3] && { ifNotExists: true },
                    ...x[4] && { indexName: asName(x[4]) },
                    table: x[6],
                    ...x[7] && { using: asName(x[7]) },
                    expressions: x[9],
                }) },
            { "name": "createindex_expressions$ebnf$1", "symbols": [] },
            { "name": "createindex_expressions$ebnf$1$subexpression$1", "symbols": ["comma", "createindex_expression"], "postprocess": last },
            { "name": "createindex_expressions$ebnf$1", "symbols": ["createindex_expressions$ebnf$1", "createindex_expressions$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "createindex_expressions", "symbols": ["createindex_expression", "createindex_expressions$ebnf$1"], "postprocess": ([head, tail]) => {
                    return [head, ...(tail || [])];
                } },
            { "name": "createindex_expression$subexpression$1", "symbols": ["expr_basic"] },
            { "name": "createindex_expression$subexpression$1", "symbols": ["expr_paren"] },
            { "name": "createindex_expression$ebnf$1$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_collate") ? { type: "kw_collate" } : kw_collate), "qualified_name"], "postprocess": last },
            { "name": "createindex_expression$ebnf$1", "symbols": ["createindex_expression$ebnf$1$subexpression$1"], "postprocess": id },
            { "name": "createindex_expression$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "createindex_expression$ebnf$2", "symbols": ["qualified_name"], "postprocess": id },
            { "name": "createindex_expression$ebnf$2", "symbols": [], "postprocess": () => null },
            { "name": "createindex_expression$ebnf$3$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_asc") ? { type: "kw_asc" } : kw_asc)] },
            { "name": "createindex_expression$ebnf$3$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_desc") ? { type: "kw_desc" } : kw_desc)] },
            { "name": "createindex_expression$ebnf$3", "symbols": ["createindex_expression$ebnf$3$subexpression$1"], "postprocess": id },
            { "name": "createindex_expression$ebnf$3", "symbols": [], "postprocess": () => null },
            { "name": "createindex_expression$ebnf$4$subexpression$1$subexpression$1", "symbols": ["kw_first"] },
            { "name": "createindex_expression$ebnf$4$subexpression$1$subexpression$1", "symbols": ["kw_last"] },
            { "name": "createindex_expression$ebnf$4$subexpression$1", "symbols": ["kw_nulls", "createindex_expression$ebnf$4$subexpression$1$subexpression$1"], "postprocess": last },
            { "name": "createindex_expression$ebnf$4", "symbols": ["createindex_expression$ebnf$4$subexpression$1"], "postprocess": id },
            { "name": "createindex_expression$ebnf$4", "symbols": [], "postprocess": () => null },
            { "name": "createindex_expression", "symbols": ["createindex_expression$subexpression$1", "createindex_expression$ebnf$1", "createindex_expression$ebnf$2", "createindex_expression$ebnf$3", "createindex_expression$ebnf$4"], "postprocess": x => lexer_2.track(x, {
                    expression: unwrap(x[0]),
                    ...x[1] && { collate: unwrap(x[1]) },
                    ...x[2] && { opclass: unwrap(x[2]) },
                    ...x[3] && { order: unwrap(x[3]).value },
                    ...x[4] && { nulls: unwrap(x[4]) },
                }) },
            { "name": "createextension_statement$ebnf$1", "symbols": ["kw_ifnotexists"], "postprocess": id },
            { "name": "createextension_statement$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "createextension_statement$ebnf$2", "symbols": [(lexer_1.lexerAny.has("kw_with") ? { type: "kw_with" } : kw_with)], "postprocess": id },
            { "name": "createextension_statement$ebnf$2", "symbols": [], "postprocess": () => null },
            { "name": "createextension_statement$ebnf$3$subexpression$1", "symbols": ["kw_schema", "word"], "postprocess": last },
            { "name": "createextension_statement$ebnf$3", "symbols": ["createextension_statement$ebnf$3$subexpression$1"], "postprocess": id },
            { "name": "createextension_statement$ebnf$3", "symbols": [], "postprocess": () => null },
            { "name": "createextension_statement$ebnf$4$subexpression$1", "symbols": ["kw_version", "string"], "postprocess": last },
            { "name": "createextension_statement$ebnf$4", "symbols": ["createextension_statement$ebnf$4$subexpression$1"], "postprocess": id },
            { "name": "createextension_statement$ebnf$4", "symbols": [], "postprocess": () => null },
            { "name": "createextension_statement$ebnf$5$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_from") ? { type: "kw_from" } : kw_from), "string"], "postprocess": last },
            { "name": "createextension_statement$ebnf$5", "symbols": ["createextension_statement$ebnf$5$subexpression$1"], "postprocess": id },
            { "name": "createextension_statement$ebnf$5", "symbols": [], "postprocess": () => null },
            { "name": "createextension_statement", "symbols": [(lexer_1.lexerAny.has("kw_create") ? { type: "kw_create" } : kw_create), "kw_extension", "createextension_statement$ebnf$1", "word", "createextension_statement$ebnf$2", "createextension_statement$ebnf$3", "createextension_statement$ebnf$4", "createextension_statement$ebnf$5"], "postprocess": x => lexer_2.track(x, {
                    type: 'create extension',
                    ...!!x[2] ? { ifNotExists: true } : {},
                    extension: asName(x[3]),
                    ...!!x[5] ? { schema: asName(x[5]) } : {},
                    ...!!x[6] ? { version: asLit(x[6]) } : {},
                    ...!!x[7] ? { from: asLit(x[7]) } : {},
                }) },
            { "name": "simplestatements_all", "symbols": ["simplestatements_start_transaction"] },
            { "name": "simplestatements_all", "symbols": ["simplestatements_commit"] },
            { "name": "simplestatements_all", "symbols": ["simplestatements_rollback"] },
            { "name": "simplestatements_all", "symbols": ["simplestatements_tablespace"] },
            { "name": "simplestatements_all", "symbols": ["simplestatements_set"] },
            { "name": "simplestatements_all", "symbols": ["simplestatements_show"] },
            { "name": "simplestatements_all", "symbols": ["simplestatements_begin"] },
            { "name": "simplestatements_start_transaction$subexpression$1", "symbols": ["kw_start", "kw_transaction"] },
            { "name": "simplestatements_start_transaction", "symbols": ["simplestatements_start_transaction$subexpression$1"], "postprocess": x => lexer_2.track(x, { type: 'start transaction' }) },
            { "name": "simplestatements_commit", "symbols": ["kw_commit"], "postprocess": x => lexer_2.track(x, { type: 'commit' }) },
            { "name": "simplestatements_rollback", "symbols": ["kw_rollback"], "postprocess": x => lexer_2.track(x, { type: 'rollback' }) },
            { "name": "simplestatements_tablespace", "symbols": ["kw_tablespace", "word"], "postprocess": x => lexer_2.track(x, {
                    type: 'tablespace',
                    tablespace: asName(x[1]),
                }) },
            { "name": "simplestatements_set$subexpression$1", "symbols": ["simplestatements_set_simple"] },
            { "name": "simplestatements_set$subexpression$1", "symbols": ["simplestatements_set_timezone"] },
            { "name": "simplestatements_set", "symbols": ["kw_set", "simplestatements_set$subexpression$1"], "postprocess": last },
            { "name": "simplestatements_set_timezone", "symbols": ["kw_time", "kw_zone", "simplestatements_set_timezone_val"], "postprocess": x => lexer_2.track(x, { type: 'set timezone', to: x[2] }) },
            { "name": "simplestatements_set_timezone_val$subexpression$1", "symbols": ["string"] },
            { "name": "simplestatements_set_timezone_val$subexpression$1", "symbols": ["int"] },
            { "name": "simplestatements_set_timezone_val", "symbols": ["simplestatements_set_timezone_val$subexpression$1"], "postprocess": x => lexer_2.track(x, { type: 'value', value: unwrap(x[0]) }) },
            { "name": "simplestatements_set_timezone_val", "symbols": ["kw_local"], "postprocess": x => lexer_2.track(x, { type: 'local' }) },
            { "name": "simplestatements_set_timezone_val", "symbols": [(lexer_1.lexerAny.has("kw_default") ? { type: "kw_default" } : kw_default)], "postprocess": x => lexer_2.track(x, { type: 'default' }) },
            { "name": "simplestatements_set_timezone_val", "symbols": ["kw_interval", "string", "kw_hour", (lexer_1.lexerAny.has("kw_to") ? { type: "kw_to" } : kw_to), "kw_minute"], "postprocess": x => lexer_2.track(x, { type: 'interval', value: lexer_2.unbox(x[1]) }) },
            { "name": "simplestatements_set_simple$subexpression$1", "symbols": [(lexer_1.lexerAny.has("op_eq") ? { type: "op_eq" } : op_eq)] },
            { "name": "simplestatements_set_simple$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_to") ? { type: "kw_to" } : kw_to)] },
            { "name": "simplestatements_set_simple", "symbols": ["ident", "simplestatements_set_simple$subexpression$1", "simplestatements_set_val"], "postprocess": x => lexer_2.track(x, {
                    type: 'set',
                    variable: asName(x[0]),
                    set: lexer_2.unbox(x[2]),
                }) },
            { "name": "simplestatements_set_val", "symbols": ["simplestatements_set_val_raw"], "postprocess": unwrap },
            { "name": "simplestatements_set_val", "symbols": [(lexer_1.lexerAny.has("kw_default") ? { type: "kw_default" } : kw_default)], "postprocess": x => lexer_2.track(x, { type: 'default' }) },
            { "name": "simplestatements_set_val$ebnf$1$subexpression$1", "symbols": ["comma", "simplestatements_set_val_raw"] },
            { "name": "simplestatements_set_val$ebnf$1", "symbols": ["simplestatements_set_val$ebnf$1$subexpression$1"] },
            { "name": "simplestatements_set_val$ebnf$1$subexpression$2", "symbols": ["comma", "simplestatements_set_val_raw"] },
            { "name": "simplestatements_set_val$ebnf$1", "symbols": ["simplestatements_set_val$ebnf$1", "simplestatements_set_val$ebnf$1$subexpression$2"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "simplestatements_set_val", "symbols": ["simplestatements_set_val_raw", "simplestatements_set_val$ebnf$1"], "postprocess": x => lexer_2.track(x, {
                    type: 'list',
                    values: [x[0], ...(x[1] || [])]
                }) },
            { "name": "simplestatements_set_val_raw$subexpression$1", "symbols": ["string"] },
            { "name": "simplestatements_set_val_raw$subexpression$1", "symbols": ["int"] },
            { "name": "simplestatements_set_val_raw", "symbols": ["simplestatements_set_val_raw$subexpression$1"], "postprocess": x => lexer_2.track(x, { type: 'value', value: unwrap(x) }) },
            { "name": "simplestatements_set_val_raw$subexpression$2", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)] },
            { "name": "simplestatements_set_val_raw$subexpression$2", "symbols": [(lexer_1.lexerAny.has("kw_on") ? { type: "kw_on" } : kw_on)] },
            { "name": "simplestatements_set_val_raw$subexpression$2", "symbols": [(lexer_1.lexerAny.has("kw_true") ? { type: "kw_true" } : kw_true)] },
            { "name": "simplestatements_set_val_raw$subexpression$2", "symbols": [(lexer_1.lexerAny.has("kw_false") ? { type: "kw_false" } : kw_false)] },
            { "name": "simplestatements_set_val_raw", "symbols": ["simplestatements_set_val_raw$subexpression$2"], "postprocess": x => lexer_2.track(x, { type: 'identifier', name: unwrap(x).value }) },
            { "name": "simplestatements_show", "symbols": ["kw_show", "ident"], "postprocess": x => lexer_2.track(x, { type: 'show', variable: asName(x[1]) }) },
            { "name": "create_schema$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_create") ? { type: "kw_create" } : kw_create), "kw_schema"] },
            { "name": "create_schema$ebnf$1", "symbols": ["kw_ifnotexists"], "postprocess": id },
            { "name": "create_schema$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "create_schema", "symbols": ["create_schema$subexpression$1", "create_schema$ebnf$1", "ident"], "postprocess": x => lexer_2.track(x, {
                    type: 'create schema',
                    name: asName(x[2]),
                    ...!!x[1] ? { ifNotExists: true } : {},
                }) },
            { "name": "raise_statement$ebnf$1$subexpression$1", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": anyKw('debug', 'log', 'info', 'notice', 'warning', 'exception') },
            { "name": "raise_statement$ebnf$1", "symbols": ["raise_statement$ebnf$1$subexpression$1"], "postprocess": id },
            { "name": "raise_statement$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "raise_statement$ebnf$2$subexpression$1", "symbols": ["comma", "expr_list_raw"], "postprocess": last },
            { "name": "raise_statement$ebnf$2", "symbols": ["raise_statement$ebnf$2$subexpression$1"], "postprocess": id },
            { "name": "raise_statement$ebnf$2", "symbols": [], "postprocess": () => null },
            { "name": "raise_statement$ebnf$3", "symbols": ["raise_using"], "postprocess": id },
            { "name": "raise_statement$ebnf$3", "symbols": [], "postprocess": () => null },
            { "name": "raise_statement", "symbols": ["kw_raise", "raise_statement$ebnf$1", "string", "raise_statement$ebnf$2", "raise_statement$ebnf$3"], "postprocess": x => lexer_2.track(x, {
                    type: 'raise',
                    format: toStr(x[2]),
                    ...x[1] && { level: toStr(x[1]) },
                    ...x[3] && x[3].length && { formatExprs: x[3] },
                    ...x[4] && x[4].length && { using: x[4] },
                }) },
            { "name": "raise_using$macrocall$2", "symbols": ["raise_using_one"] },
            { "name": "raise_using$macrocall$1$ebnf$1", "symbols": [] },
            { "name": "raise_using$macrocall$1$ebnf$1$subexpression$1", "symbols": [(lexer_1.lexerAny.has("comma") ? { type: "comma" } : comma), "raise_using$macrocall$2"], "postprocess": last },
            { "name": "raise_using$macrocall$1$ebnf$1", "symbols": ["raise_using$macrocall$1$ebnf$1", "raise_using$macrocall$1$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "raise_using$macrocall$1", "symbols": ["raise_using$macrocall$2", "raise_using$macrocall$1$ebnf$1"], "postprocess": ([head, tail]) => {
                    return [unwrap(head), ...(tail.map(unwrap) || [])];
                } },
            { "name": "raise_using", "symbols": [(lexer_1.lexerAny.has("kw_using") ? { type: "kw_using" } : kw_using), "raise_using$macrocall$1"], "postprocess": last },
            { "name": "raise_using_one", "symbols": ["raise_using_what", (lexer_1.lexerAny.has("op_eq") ? { type: "op_eq" } : op_eq), "expr"], "postprocess": x => lexer_2.track(x, {
                    type: toStr(x[0]),
                    value: x[2],
                }) },
            { "name": "raise_using_what", "symbols": [(lexer_1.lexerAny.has("kw_table") ? { type: "kw_table" } : kw_table)] },
            { "name": "raise_using_what", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": anyKw('message', 'detail', 'hint', 'errcode', 'column', 'constraint', 'datatype', 'schema') },
            { "name": "comment_statement", "symbols": ["kw_comment", (lexer_1.lexerAny.has("kw_on") ? { type: "kw_on" } : kw_on), "comment_what", (lexer_1.lexerAny.has("kw_is") ? { type: "kw_is" } : kw_is), "string"], "postprocess": x => lexer_2.track(x, {
                    type: 'comment',
                    comment: lexer_2.unbox(last(x)),
                    on: unwrap(x[2]),
                }) },
            { "name": "comment_what", "symbols": ["comment_what_col"] },
            { "name": "comment_what", "symbols": ["comment_what_nm"] },
            { "name": "comment_what_nm$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_table") ? { type: "kw_table" } : kw_table)] },
            { "name": "comment_what_nm$subexpression$1", "symbols": ["kw_materialized", "kw_view"] },
            { "name": "comment_what_nm$subexpression$1", "symbols": [(lexer_1.lexerAny.has("word") ? { type: "word" } : word)], "postprocess": anyKw('database', 'index', 'trigger', 'type', 'view') },
            { "name": "comment_what_nm", "symbols": ["comment_what_nm$subexpression$1", "qualified_name"], "postprocess": x => lexer_2.track(x, {
                    type: toStr(x[0]),
                    name: x[1],
                }) },
            { "name": "comment_what_col", "symbols": [(lexer_1.lexerAny.has("kw_column") ? { type: "kw_column" } : kw_column), "qcolumn"], "postprocess": x => lexer_2.track(x, {
                    type: 'column',
                    column: last(x),
                }) },
            { "name": "simplestatements_begin$ebnf$1$subexpression$1", "symbols": ["kw_transaction"] },
            { "name": "simplestatements_begin$ebnf$1$subexpression$1", "symbols": ["kw_work"] },
            { "name": "simplestatements_begin$ebnf$1", "symbols": ["simplestatements_begin$ebnf$1$subexpression$1"], "postprocess": id },
            { "name": "simplestatements_begin$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "simplestatements_begin$ebnf$2", "symbols": [] },
            { "name": "simplestatements_begin$ebnf$2$subexpression$1", "symbols": ["simplestatements_begin_isol"] },
            { "name": "simplestatements_begin$ebnf$2$subexpression$1", "symbols": ["simplestatements_begin_writ"] },
            { "name": "simplestatements_begin$ebnf$2$subexpression$1", "symbols": ["simplestatements_begin_def"] },
            { "name": "simplestatements_begin$ebnf$2", "symbols": ["simplestatements_begin$ebnf$2", "simplestatements_begin$ebnf$2$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "simplestatements_begin", "symbols": ["kw_begin", "simplestatements_begin$ebnf$1", "simplestatements_begin$ebnf$2"], "postprocess": x => lexer_2.track(x, {
                    type: 'begin',
                    ...x[2].reduce((a, b) => ({ ...unwrap(a), ...unwrap(b) }), {}),
                })
            },
            { "name": "simplestatements_begin_isol$subexpression$1", "symbols": ["kw_isolation", "kw_level"] },
            { "name": "simplestatements_begin_isol$subexpression$2", "symbols": ["kw_serializable"] },
            { "name": "simplestatements_begin_isol$subexpression$2$subexpression$1", "symbols": ["word"], "postprocess": kw('repeatable') },
            { "name": "simplestatements_begin_isol$subexpression$2", "symbols": ["simplestatements_begin_isol$subexpression$2$subexpression$1", "kw_read"] },
            { "name": "simplestatements_begin_isol$subexpression$2$subexpression$2", "symbols": ["word"], "postprocess": kw('committed') },
            { "name": "simplestatements_begin_isol$subexpression$2", "symbols": ["kw_read", "simplestatements_begin_isol$subexpression$2$subexpression$2"] },
            { "name": "simplestatements_begin_isol$subexpression$2$subexpression$3", "symbols": ["word"], "postprocess": kw('uncommitted') },
            { "name": "simplestatements_begin_isol$subexpression$2", "symbols": ["kw_read", "simplestatements_begin_isol$subexpression$2$subexpression$3"] },
            { "name": "simplestatements_begin_isol", "symbols": ["simplestatements_begin_isol$subexpression$1", "simplestatements_begin_isol$subexpression$2"], "postprocess": x => lexer_2.track(x, {
                    isolationLevel: toStr(x[1], ' '),
                }) },
            { "name": "simplestatements_begin_writ$subexpression$1", "symbols": ["kw_read", "kw_write"] },
            { "name": "simplestatements_begin_writ$subexpression$1", "symbols": ["kw_read", (lexer_1.lexerAny.has("kw_only") ? { type: "kw_only" } : kw_only)] },
            { "name": "simplestatements_begin_writ", "symbols": ["simplestatements_begin_writ$subexpression$1"], "postprocess": x => lexer_2.track(x, {
                    writeable: toStr(x, ' '),
                }) },
            { "name": "simplestatements_begin_def$ebnf$1", "symbols": [(lexer_1.lexerAny.has("kw_not") ? { type: "kw_not" } : kw_not)], "postprocess": id },
            { "name": "simplestatements_begin_def$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "simplestatements_begin_def", "symbols": ["simplestatements_begin_def$ebnf$1", (lexer_1.lexerAny.has("kw_deferrable") ? { type: "kw_deferrable" } : kw_deferrable)], "postprocess": x => lexer_2.track(x, {
                    deferrable: !x[0]
                }) },
            { "name": "insert_statement$subexpression$1", "symbols": ["kw_insert", (lexer_1.lexerAny.has("kw_into") ? { type: "kw_into" } : kw_into)] },
            { "name": "insert_statement$ebnf$1", "symbols": ["collist_paren"], "postprocess": id },
            { "name": "insert_statement$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "insert_statement$ebnf$2$subexpression$1$subexpression$1", "symbols": ["kw_system"] },
            { "name": "insert_statement$ebnf$2$subexpression$1$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_user") ? { type: "kw_user" } : kw_user)] },
            { "name": "insert_statement$ebnf$2$subexpression$1", "symbols": ["kw_overriding", "insert_statement$ebnf$2$subexpression$1$subexpression$1", "kw_value"], "postprocess": get(1) },
            { "name": "insert_statement$ebnf$2", "symbols": ["insert_statement$ebnf$2$subexpression$1"], "postprocess": id },
            { "name": "insert_statement$ebnf$2", "symbols": [], "postprocess": () => null },
            { "name": "insert_statement$ebnf$3$subexpression$1", "symbols": ["selection"] },
            { "name": "insert_statement$ebnf$3$subexpression$1", "symbols": ["selection_paren"] },
            { "name": "insert_statement$ebnf$3", "symbols": ["insert_statement$ebnf$3$subexpression$1"], "postprocess": id },
            { "name": "insert_statement$ebnf$3", "symbols": [], "postprocess": () => null },
            { "name": "insert_statement$ebnf$4$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_on") ? { type: "kw_on" } : kw_on), "kw_conflict", "insert_on_conflict"], "postprocess": last },
            { "name": "insert_statement$ebnf$4", "symbols": ["insert_statement$ebnf$4$subexpression$1"], "postprocess": id },
            { "name": "insert_statement$ebnf$4", "symbols": [], "postprocess": () => null },
            { "name": "insert_statement$ebnf$5$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_returning") ? { type: "kw_returning" } : kw_returning), "select_expr_list_aliased"], "postprocess": last },
            { "name": "insert_statement$ebnf$5", "symbols": ["insert_statement$ebnf$5$subexpression$1"], "postprocess": id },
            { "name": "insert_statement$ebnf$5", "symbols": [], "postprocess": () => null },
            { "name": "insert_statement", "symbols": ["insert_statement$subexpression$1", "table_ref_aliased", "insert_statement$ebnf$1", "insert_statement$ebnf$2", "insert_statement$ebnf$3", "insert_statement$ebnf$4", "insert_statement$ebnf$5"], "postprocess": x => {
                    const columns = x[2] && x[2].map(asName);
                    const overriding = toStr(x[3]);
                    const insert = unwrap(x[4]);
                    const onConflict = x[5];
                    const returning = x[6];
                    return lexer_2.track(x, {
                        type: 'insert',
                        into: unwrap(x[1]),
                        insert,
                        ...overriding && { overriding },
                        ...columns && { columns },
                        ...returning && { returning },
                        ...onConflict && { onConflict },
                    });
                } },
            { "name": "insert_values$ebnf$1", "symbols": [] },
            { "name": "insert_values$ebnf$1$subexpression$1", "symbols": ["comma", "insert_value"], "postprocess": last },
            { "name": "insert_values$ebnf$1", "symbols": ["insert_values$ebnf$1", "insert_values$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "insert_values", "symbols": ["insert_value", "insert_values$ebnf$1"], "postprocess": ([head, tail]) => {
                    return [head, ...(tail || [])];
                } },
            { "name": "insert_value", "symbols": ["lparen", "insert_expr_list_raw", "rparen"], "postprocess": get(1) },
            { "name": "insert_expr_list_raw$ebnf$1", "symbols": [] },
            { "name": "insert_expr_list_raw$ebnf$1$subexpression$1", "symbols": ["comma", "expr_or_select"], "postprocess": last },
            { "name": "insert_expr_list_raw$ebnf$1", "symbols": ["insert_expr_list_raw$ebnf$1", "insert_expr_list_raw$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "insert_expr_list_raw", "symbols": ["expr_or_select", "insert_expr_list_raw$ebnf$1"], "postprocess": ([head, tail]) => {
                    return [head, ...(tail || [])];
                } },
            { "name": "insert_on_conflict$ebnf$1", "symbols": ["insert_on_conflict_what"], "postprocess": id },
            { "name": "insert_on_conflict$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "insert_on_conflict", "symbols": ["insert_on_conflict$ebnf$1", "insert_on_conflict_do"], "postprocess": x => lexer_2.track(x, {
                    ...x[0] ? { on: x[0][0] } : {},
                    do: lexer_2.unbox(x[1]),
                }) },
            { "name": "insert_on_conflict_what$subexpression$1", "symbols": ["lparen", "expr_list_raw", "rparen"], "postprocess": get(1) },
            { "name": "insert_on_conflict_what", "symbols": ["insert_on_conflict_what$subexpression$1"] },
            { "name": "insert_on_conflict_do", "symbols": [(lexer_1.lexerAny.has("kw_do") ? { type: "kw_do" } : kw_do), "kw_nothing"], "postprocess": x => lexer_2.box(x, 'do nothing') },
            { "name": "insert_on_conflict_do", "symbols": [(lexer_1.lexerAny.has("kw_do") ? { type: "kw_do" } : kw_do), "kw_update", "kw_set", "update_set_list"], "postprocess": x => lexer_2.box(x, { sets: last(x) }) },
            { "name": "update_statement$ebnf$1", "symbols": ["select_where"], "postprocess": id },
            { "name": "update_statement$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "update_statement$ebnf$2$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_returning") ? { type: "kw_returning" } : kw_returning), "select_expr_list_aliased"], "postprocess": last },
            { "name": "update_statement$ebnf$2", "symbols": ["update_statement$ebnf$2$subexpression$1"], "postprocess": id },
            { "name": "update_statement$ebnf$2", "symbols": [], "postprocess": () => null },
            { "name": "update_statement", "symbols": ["kw_update", "table_ref_aliased", "kw_set", "update_set_list", "update_statement$ebnf$1", "update_statement$ebnf$2"], "postprocess": x => {
                    const where = unwrap(x[4]);
                    const returning = x[5];
                    return lexer_2.track(x, {
                        type: 'update',
                        table: unwrap(x[1]),
                        sets: x[3],
                        ...where ? { where } : {},
                        ...returning ? { returning } : {},
                    });
                } },
            { "name": "update_set_list$ebnf$1", "symbols": [] },
            { "name": "update_set_list$ebnf$1$subexpression$1", "symbols": ["comma", "update_set"], "postprocess": last },
            { "name": "update_set_list$ebnf$1", "symbols": ["update_set_list$ebnf$1", "update_set_list$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "update_set_list", "symbols": ["update_set", "update_set_list$ebnf$1"], "postprocess": ([head, tail]) => {
                    const ret = [];
                    for (const _t of [head, ...(tail || [])]) {
                        const t = unwrap(_t);
                        if (Array.isArray(t)) {
                            ret.push(...t);
                        }
                        else {
                            ret.push(t);
                        }
                    }
                    return ret;
                } },
            { "name": "update_set", "symbols": ["update_set_one"] },
            { "name": "update_set", "symbols": ["update_set_multiple"] },
            { "name": "update_set_one$subexpression$1", "symbols": ["expr"] },
            { "name": "update_set_one$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_default") ? { type: "kw_default" } : kw_default)], "postprocess": value },
            { "name": "update_set_one", "symbols": ["ident", (lexer_1.lexerAny.has("op_eq") ? { type: "op_eq" } : op_eq), "update_set_one$subexpression$1"], "postprocess": x => lexer_2.box(x, {
                    column: asName(x[0]),
                    value: unwrap(x[2]),
                }) },
            { "name": "update_set_multiple$subexpression$1", "symbols": ["lparen", "expr_list_raw", "rparen"], "postprocess": get(1) },
            { "name": "update_set_multiple", "symbols": ["collist_paren", (lexer_1.lexerAny.has("op_eq") ? { type: "op_eq" } : op_eq), "update_set_multiple$subexpression$1"], "postprocess": x => {
                    const cols = x[0];
                    const exprs = x[2];
                    if (cols.length !== exprs.length) {
                        throw new Error('number of columns does not match number of values');
                    }
                    return lexer_2.box(x, cols.map((x, i) => ({
                        column: asName(x),
                        value: unwrap(exprs[i]),
                    })));
                } },
            { "name": "altertable_statement$ebnf$1", "symbols": ["kw_ifexists"], "postprocess": id },
            { "name": "altertable_statement$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "altertable_statement$ebnf$2", "symbols": [(lexer_1.lexerAny.has("kw_only") ? { type: "kw_only" } : kw_only)], "postprocess": id },
            { "name": "altertable_statement$ebnf$2", "symbols": [], "postprocess": () => null },
            { "name": "altertable_statement", "symbols": ["kw_alter", (lexer_1.lexerAny.has("kw_table") ? { type: "kw_table" } : kw_table), "altertable_statement$ebnf$1", "altertable_statement$ebnf$2", "table_ref", "altertable_action"], "postprocess": x => lexer_2.track(x, {
                    type: 'alter table',
                    ...x[2] ? { ifExists: true } : {},
                    ...x[3] ? { only: true } : {},
                    table: unwrap(x[4]),
                    change: unwrap(x[5]),
                }) },
            { "name": "altertable_action", "symbols": ["altertable_rename_table"] },
            { "name": "altertable_action", "symbols": ["altertable_rename_column"] },
            { "name": "altertable_action", "symbols": ["altertable_rename_constraint"] },
            { "name": "altertable_action", "symbols": ["altertable_add_column"] },
            { "name": "altertable_action", "symbols": ["altertable_drop_column"] },
            { "name": "altertable_action", "symbols": ["altertable_alter_column"] },
            { "name": "altertable_action", "symbols": ["altertable_add_constraint"] },
            { "name": "altertable_action", "symbols": ["altertable_owner"] },
            { "name": "altertable_rename_table", "symbols": ["kw_rename", (lexer_1.lexerAny.has("kw_to") ? { type: "kw_to" } : kw_to), "word"], "postprocess": x => lexer_2.track(x, {
                    type: 'rename',
                    to: asName(last(x)),
                }) },
            { "name": "altertable_rename_column$ebnf$1", "symbols": [(lexer_1.lexerAny.has("kw_column") ? { type: "kw_column" } : kw_column)], "postprocess": id },
            { "name": "altertable_rename_column$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "altertable_rename_column", "symbols": ["kw_rename", "altertable_rename_column$ebnf$1", "ident", (lexer_1.lexerAny.has("kw_to") ? { type: "kw_to" } : kw_to), "ident"], "postprocess": x => lexer_2.track(x, {
                    type: 'rename column',
                    column: asName(x[2]),
                    to: asName(last(x)),
                }) },
            { "name": "altertable_rename_constraint", "symbols": ["kw_rename", (lexer_1.lexerAny.has("kw_constraint") ? { type: "kw_constraint" } : kw_constraint), "ident", (lexer_1.lexerAny.has("kw_to") ? { type: "kw_to" } : kw_to), "ident"], "postprocess": x => lexer_2.track(x, {
                    type: 'rename constraint',
                    constraint: asName(x[2]),
                    to: asName(last(x)),
                }) },
            { "name": "altertable_add_column$ebnf$1", "symbols": [(lexer_1.lexerAny.has("kw_column") ? { type: "kw_column" } : kw_column)], "postprocess": id },
            { "name": "altertable_add_column$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "altertable_add_column$ebnf$2", "symbols": ["kw_ifnotexists"], "postprocess": id },
            { "name": "altertable_add_column$ebnf$2", "symbols": [], "postprocess": () => null },
            { "name": "altertable_add_column", "symbols": ["kw_add", "altertable_add_column$ebnf$1", "altertable_add_column$ebnf$2", "createtable_column"], "postprocess": x => lexer_2.track(x, {
                    type: 'add column',
                    ...x[2] ? { ifNotExists: true } : {},
                    column: unwrap(x[3]),
                }) },
            { "name": "altertable_drop_column$ebnf$1", "symbols": [(lexer_1.lexerAny.has("kw_column") ? { type: "kw_column" } : kw_column)], "postprocess": id },
            { "name": "altertable_drop_column$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "altertable_drop_column$ebnf$2", "symbols": ["kw_ifexists"], "postprocess": id },
            { "name": "altertable_drop_column$ebnf$2", "symbols": [], "postprocess": () => null },
            { "name": "altertable_drop_column", "symbols": ["kw_drop", "altertable_drop_column$ebnf$1", "altertable_drop_column$ebnf$2", "ident"], "postprocess": x => lexer_2.track(x, {
                    type: 'drop column',
                    ...x[2] ? { ifExists: true } : {},
                    column: asName(x[3]),
                }) },
            { "name": "altertable_alter_column$ebnf$1", "symbols": [(lexer_1.lexerAny.has("kw_column") ? { type: "kw_column" } : kw_column)], "postprocess": id },
            { "name": "altertable_alter_column$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "altertable_alter_column", "symbols": ["kw_alter", "altertable_alter_column$ebnf$1", "ident", "altercol"], "postprocess": x => lexer_2.track(x, {
                    type: 'alter column',
                    column: asName(x[2]),
                    alter: unwrap(x[3])
                }) },
            { "name": "altercol$ebnf$1$subexpression$1", "symbols": ["kw_set", "kw_data"] },
            { "name": "altercol$ebnf$1", "symbols": ["altercol$ebnf$1$subexpression$1"], "postprocess": id },
            { "name": "altercol$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "altercol", "symbols": ["altercol$ebnf$1", "kw_type", "data_type"], "postprocess": x => lexer_2.track(x, { type: 'set type', dataType: unwrap(last(x)) }) },
            { "name": "altercol", "symbols": ["kw_set", (lexer_1.lexerAny.has("kw_default") ? { type: "kw_default" } : kw_default), "expr"], "postprocess": x => lexer_2.track(x, { type: 'set default', default: unwrap(last(x)) }) },
            { "name": "altercol", "symbols": ["kw_drop", (lexer_1.lexerAny.has("kw_default") ? { type: "kw_default" } : kw_default)], "postprocess": x => lexer_2.track(x, { type: 'drop default' }) },
            { "name": "altercol$subexpression$1", "symbols": ["kw_set"] },
            { "name": "altercol$subexpression$1", "symbols": ["kw_drop"] },
            { "name": "altercol", "symbols": ["altercol$subexpression$1", "kw_not_null"], "postprocess": x => lexer_2.track(x, { type: toStr(x, ' ') }) },
            { "name": "altercol", "symbols": ["altercol_generated_add"], "postprocess": unwrap },
            { "name": "altertable_add_constraint", "symbols": ["kw_add", "createtable_constraint"], "postprocess": x => lexer_2.track(x, {
                    type: 'add constraint',
                    constraint: unwrap(last(x)),
                }) },
            { "name": "altertable_owner", "symbols": ["kw_owner", (lexer_1.lexerAny.has("kw_to") ? { type: "kw_to" } : kw_to), "ident"], "postprocess": x => lexer_2.track(x, {
                    type: 'owner',
                    to: asName(last(x)),
                }) },
            { "name": "altercol_generated_add", "symbols": ["kw_add", "altercol_generated"], "postprocess": last },
            { "name": "altercol_generated$ebnf$1$subexpression$1", "symbols": ["kw_always"] },
            { "name": "altercol_generated$ebnf$1$subexpression$1", "symbols": ["kw_by", (lexer_1.lexerAny.has("kw_default") ? { type: "kw_default" } : kw_default)] },
            { "name": "altercol_generated$ebnf$1", "symbols": ["altercol_generated$ebnf$1$subexpression$1"], "postprocess": id },
            { "name": "altercol_generated$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "altercol_generated$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_as") ? { type: "kw_as" } : kw_as), "kw_identity"] },
            { "name": "altercol_generated$ebnf$2$subexpression$1", "symbols": ["lparen", "altercol_generated_seq", "rparen"], "postprocess": get(1) },
            { "name": "altercol_generated$ebnf$2", "symbols": ["altercol_generated$ebnf$2$subexpression$1"], "postprocess": id },
            { "name": "altercol_generated$ebnf$2", "symbols": [], "postprocess": () => null },
            { "name": "altercol_generated", "symbols": ["kw_generated", "altercol_generated$ebnf$1", "altercol_generated$subexpression$1", "altercol_generated$ebnf$2"], "postprocess": x => lexer_2.track(x, {
                    type: 'add generated',
                    ...x[1] && { always: toStr(x[1], ' ') },
                    ...x[3] && { sequence: unwrap(x[3]) },
                }) },
            { "name": "altercol_generated_seq$ebnf$1$subexpression$1", "symbols": ["kw_sequence", "kw_name", "qualified_name"] },
            { "name": "altercol_generated_seq$ebnf$1", "symbols": ["altercol_generated_seq$ebnf$1$subexpression$1"], "postprocess": id },
            { "name": "altercol_generated_seq$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "altercol_generated_seq$ebnf$2", "symbols": [] },
            { "name": "altercol_generated_seq$ebnf$2", "symbols": ["altercol_generated_seq$ebnf$2", "create_sequence_option"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "altercol_generated_seq", "symbols": ["altercol_generated_seq$ebnf$1", "altercol_generated_seq$ebnf$2"], "postprocess": x => {
                    const ret = {
                        ...x[0] && { name: unwrap(last(x[0])) },
                    };
                    setSeqOpts(ret, x[1]);
                    return lexer_2.track(x, ret);
                } },
            { "name": "delete_statement", "symbols": ["delete_delete"] },
            { "name": "delete_statement", "symbols": ["delete_truncate"] },
            { "name": "delete_delete$subexpression$1", "symbols": ["kw_delete", (lexer_1.lexerAny.has("kw_from") ? { type: "kw_from" } : kw_from)] },
            { "name": "delete_delete$ebnf$1", "symbols": ["select_where"], "postprocess": id },
            { "name": "delete_delete$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "delete_delete$ebnf$2$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_returning") ? { type: "kw_returning" } : kw_returning), "select_expr_list_aliased"], "postprocess": last },
            { "name": "delete_delete$ebnf$2", "symbols": ["delete_delete$ebnf$2$subexpression$1"], "postprocess": id },
            { "name": "delete_delete$ebnf$2", "symbols": [], "postprocess": () => null },
            { "name": "delete_delete", "symbols": ["delete_delete$subexpression$1", "table_ref_aliased", "delete_delete$ebnf$1", "delete_delete$ebnf$2"], "postprocess": x => {
                    const where = x[2];
                    const returning = x[3];
                    return lexer_2.track(x, {
                        type: 'delete',
                        from: unwrap(x[1]),
                        ...where ? { where } : {},
                        ...returning ? { returning } : {},
                    });
                } },
            { "name": "delete_truncate$subexpression$1$ebnf$1", "symbols": [(lexer_1.lexerAny.has("kw_table") ? { type: "kw_table" } : kw_table)], "postprocess": id },
            { "name": "delete_truncate$subexpression$1$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "delete_truncate$subexpression$1", "symbols": ["kw_truncate", "delete_truncate$subexpression$1$ebnf$1"] },
            { "name": "delete_truncate$macrocall$2", "symbols": ["table_ref"] },
            { "name": "delete_truncate$macrocall$1$ebnf$1", "symbols": [] },
            { "name": "delete_truncate$macrocall$1$ebnf$1$subexpression$1", "symbols": [(lexer_1.lexerAny.has("comma") ? { type: "comma" } : comma), "delete_truncate$macrocall$2"], "postprocess": last },
            { "name": "delete_truncate$macrocall$1$ebnf$1", "symbols": ["delete_truncate$macrocall$1$ebnf$1", "delete_truncate$macrocall$1$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "delete_truncate$macrocall$1", "symbols": ["delete_truncate$macrocall$2", "delete_truncate$macrocall$1$ebnf$1"], "postprocess": ([head, tail]) => {
                    return [unwrap(head), ...(tail.map(unwrap) || [])];
                } },
            { "name": "delete_truncate$ebnf$1$subexpression$1$subexpression$1", "symbols": ["kw_restart"] },
            { "name": "delete_truncate$ebnf$1$subexpression$1$subexpression$1", "symbols": ["kw_continue"] },
            { "name": "delete_truncate$ebnf$1$subexpression$1", "symbols": ["delete_truncate$ebnf$1$subexpression$1$subexpression$1", "kw_identity"] },
            { "name": "delete_truncate$ebnf$1", "symbols": ["delete_truncate$ebnf$1$subexpression$1"], "postprocess": id },
            { "name": "delete_truncate$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "delete_truncate", "symbols": ["delete_truncate$subexpression$1", "delete_truncate$macrocall$1", "delete_truncate$ebnf$1"], "postprocess": x => lexer_2.track(x, {
                    type: 'truncate table',
                    tables: x[1],
                    ...x[2] && { identity: toStr(x[2][0]) }
                }) },
            { "name": "create_sequence_statement$ebnf$1$subexpression$1", "symbols": ["kw_temp"] },
            { "name": "create_sequence_statement$ebnf$1$subexpression$1", "symbols": ["kw_temporary"] },
            { "name": "create_sequence_statement$ebnf$1", "symbols": ["create_sequence_statement$ebnf$1$subexpression$1"], "postprocess": id },
            { "name": "create_sequence_statement$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "create_sequence_statement$ebnf$2", "symbols": ["kw_ifnotexists"], "postprocess": id },
            { "name": "create_sequence_statement$ebnf$2", "symbols": [], "postprocess": () => null },
            { "name": "create_sequence_statement$ebnf$3", "symbols": [] },
            { "name": "create_sequence_statement$ebnf$3", "symbols": ["create_sequence_statement$ebnf$3", "create_sequence_option"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "create_sequence_statement", "symbols": [(lexer_1.lexerAny.has("kw_create") ? { type: "kw_create" } : kw_create), "create_sequence_statement$ebnf$1", "kw_sequence", "create_sequence_statement$ebnf$2", "qualified_name", "create_sequence_statement$ebnf$3"], "postprocess": x => {
                    const ret = {
                        type: 'create sequence',
                        ...x[1] && { temp: true },
                        ...x[3] && { ifNotExists: true },
                        name: unwrap(x[4]),
                        options: {},
                    };
                    setSeqOpts(ret.options, x[5]);
                    return lexer_2.track(x, ret);
                } },
            { "name": "create_sequence_option", "symbols": [(lexer_1.lexerAny.has("kw_as") ? { type: "kw_as" } : kw_as), "data_type"], "postprocess": x => lexer_2.box(x, ['as', x[1]]) },
            { "name": "create_sequence_option$ebnf$1", "symbols": ["kw_by"], "postprocess": id },
            { "name": "create_sequence_option$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "create_sequence_option", "symbols": ["kw_increment", "create_sequence_option$ebnf$1", "int"], "postprocess": x => lexer_2.box(x, ['incrementBy', x[2]]) },
            { "name": "create_sequence_option", "symbols": ["create_sequence_minvalue"], "postprocess": x => lexer_2.box(x, ['minValue', x[0]]) },
            { "name": "create_sequence_option", "symbols": ["create_sequence_maxvalue"], "postprocess": x => lexer_2.box(x, ['maxValue', x[0]]) },
            { "name": "create_sequence_option$ebnf$2", "symbols": [(lexer_1.lexerAny.has("kw_with") ? { type: "kw_with" } : kw_with)], "postprocess": id },
            { "name": "create_sequence_option$ebnf$2", "symbols": [], "postprocess": () => null },
            { "name": "create_sequence_option", "symbols": ["kw_start", "create_sequence_option$ebnf$2", "int"], "postprocess": x => lexer_2.box(x, ['startWith', x[2]]) },
            { "name": "create_sequence_option", "symbols": ["kw_cache", "int"], "postprocess": x => lexer_2.box(x, ['cache', x[1]]) },
            { "name": "create_sequence_option$ebnf$3", "symbols": ["kw_no"], "postprocess": id },
            { "name": "create_sequence_option$ebnf$3", "symbols": [], "postprocess": () => null },
            { "name": "create_sequence_option", "symbols": ["create_sequence_option$ebnf$3", "kw_cycle"], "postprocess": x => lexer_2.box(x, ['cycle', toStr(x, ' ')]) },
            { "name": "create_sequence_option", "symbols": ["create_sequence_owned_by"], "postprocess": x => lexer_2.box(x, ['ownedBy', unwrap(x)]) },
            { "name": "create_sequence_minvalue", "symbols": ["kw_minvalue", "int"], "postprocess": last },
            { "name": "create_sequence_minvalue", "symbols": ["kw_no", "kw_minvalue"], "postprocess": x => lexer_2.box(x, 'no minvalue') },
            { "name": "create_sequence_maxvalue", "symbols": ["kw_maxvalue", "int"], "postprocess": last },
            { "name": "create_sequence_maxvalue", "symbols": ["kw_no", "kw_maxvalue"], "postprocess": x => lexer_2.box(x, 'no maxvalue') },
            { "name": "create_sequence_owned_by$subexpression$1", "symbols": ["kw_none"] },
            { "name": "create_sequence_owned_by$subexpression$1", "symbols": ["qcolumn"] },
            { "name": "create_sequence_owned_by", "symbols": ["kw_owned", "kw_by", "create_sequence_owned_by$subexpression$1"], "postprocess": x => lexer_2.box(x, unwrap(last(x))) },
            { "name": "alter_sequence_statement$ebnf$1", "symbols": ["kw_ifexists"], "postprocess": id },
            { "name": "alter_sequence_statement$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "alter_sequence_statement", "symbols": ["kw_alter", "kw_sequence", "alter_sequence_statement$ebnf$1", "qualified_name", "alter_sequence_statement_body"], "postprocess": x => {
                    const ret = {
                        type: 'alter sequence',
                        ...x[2] && { ifExists: true },
                        name: unwrap(x[3]),
                        change: x[4],
                    };
                    return lexer_2.track(x, ret);
                } },
            { "name": "alter_sequence_statement_body$ebnf$1", "symbols": ["alter_sequence_option"] },
            { "name": "alter_sequence_statement_body$ebnf$1", "symbols": ["alter_sequence_statement_body$ebnf$1", "alter_sequence_option"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "alter_sequence_statement_body", "symbols": ["alter_sequence_statement_body$ebnf$1"], "postprocess": x => {
                    const ret = {
                        type: 'set options',
                    };
                    setSeqOpts(ret, x[0]);
                    return lexer_2.track(x, ret);
                } },
            { "name": "alter_sequence_statement_body$subexpression$1", "symbols": ["ident"] },
            { "name": "alter_sequence_statement_body$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_session_user") ? { type: "kw_session_user" } : kw_session_user)] },
            { "name": "alter_sequence_statement_body$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_current_user") ? { type: "kw_current_user" } : kw_current_user)] },
            { "name": "alter_sequence_statement_body", "symbols": ["kw_owner", (lexer_1.lexerAny.has("kw_to") ? { type: "kw_to" } : kw_to), "alter_sequence_statement_body$subexpression$1"], "postprocess": x => lexer_2.track(x, { type: 'owner to', owner: asName(last(x)), }) },
            { "name": "alter_sequence_statement_body", "symbols": ["kw_rename", (lexer_1.lexerAny.has("kw_to") ? { type: "kw_to" } : kw_to), "ident"], "postprocess": x => lexer_2.track(x, { type: 'rename', newName: asName(last(x)) }) },
            { "name": "alter_sequence_statement_body", "symbols": ["kw_set", "kw_schema", "ident"], "postprocess": x => lexer_2.track(x, { type: 'set schema', newSchema: asName(last(x)) }) },
            { "name": "alter_sequence_option", "symbols": ["create_sequence_option"], "postprocess": unwrap },
            { "name": "alter_sequence_option$ebnf$1$subexpression$1$ebnf$1", "symbols": [(lexer_1.lexerAny.has("kw_with") ? { type: "kw_with" } : kw_with)], "postprocess": id },
            { "name": "alter_sequence_option$ebnf$1$subexpression$1$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "alter_sequence_option$ebnf$1$subexpression$1", "symbols": ["alter_sequence_option$ebnf$1$subexpression$1$ebnf$1", "int"], "postprocess": last },
            { "name": "alter_sequence_option$ebnf$1", "symbols": ["alter_sequence_option$ebnf$1$subexpression$1"], "postprocess": id },
            { "name": "alter_sequence_option$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "alter_sequence_option", "symbols": ["kw_restart", "alter_sequence_option$ebnf$1"], "postprocess": x => lexer_2.box(x, ['restart', typeof lexer_2.unbox(x[1]) === 'number' ? lexer_2.unbox(x[1]) : true]) },
            { "name": "drop_statement$ebnf$1", "symbols": ["kw_ifexists"], "postprocess": id },
            { "name": "drop_statement$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "drop_statement", "symbols": ["kw_drop", "drop_what", "drop_statement$ebnf$1", "qualified_name"], "postprocess": (x, rej) => {
                    const v = unwrap(x[1]);
                    return lexer_2.track(x, {
                        ...v,
                        ...x[2] && { ifExists: true },
                        name: unwrap(x[3]),
                    });
                } },
            { "name": "drop_what", "symbols": [(lexer_1.lexerAny.has("kw_table") ? { type: "kw_table" } : kw_table)], "postprocess": x => lexer_2.track(x, { type: 'drop table' }) },
            { "name": "drop_what", "symbols": ["kw_sequence"], "postprocess": x => lexer_2.track(x, { type: 'drop sequence' }) },
            { "name": "drop_what$ebnf$1", "symbols": [(lexer_1.lexerAny.has("kw_concurrently") ? { type: "kw_concurrently" } : kw_concurrently)], "postprocess": id },
            { "name": "drop_what$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "drop_what", "symbols": ["kw_index", "drop_what$ebnf$1"], "postprocess": x => lexer_2.track(x, {
                    type: 'drop index',
                    ...x[1] && { concurrently: true },
                }) },
            { "name": "with_statement", "symbols": [(lexer_1.lexerAny.has("kw_with") ? { type: "kw_with" } : kw_with), "with_statement_bindings", "with_statement_statement"], "postprocess": x => lexer_2.track(x, {
                    type: 'with',
                    bind: x[1],
                    in: unwrap(x[2]),
                }) },
            { "name": "with_recursive_statement$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_with") ? { type: "kw_with" } : kw_with), "kw_recursive"] },
            { "name": "with_recursive_statement", "symbols": ["with_recursive_statement$subexpression$1", "ident", "collist_paren", (lexer_1.lexerAny.has("kw_as") ? { type: "kw_as" } : kw_as), "lparen", "union_statement", "rparen", "with_statement_statement"], "postprocess": x => lexer_2.track(x, {
                    type: 'with recursive',
                    alias: asName(x[1]),
                    columnNames: x[2].map(asName),
                    bind: x[5],
                    in: unwrap(x[7]),
                }) },
            { "name": "with_statement_bindings$ebnf$1", "symbols": [] },
            { "name": "with_statement_bindings$ebnf$1$subexpression$1", "symbols": ["comma", "with_statement_binding"], "postprocess": last },
            { "name": "with_statement_bindings$ebnf$1", "symbols": ["with_statement_bindings$ebnf$1", "with_statement_bindings$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "with_statement_bindings", "symbols": ["with_statement_binding", "with_statement_bindings$ebnf$1"], "postprocess": ([head, tail]) => {
                    return [head, ...(tail || [])];
                } },
            { "name": "with_statement_binding", "symbols": ["word", (lexer_1.lexerAny.has("kw_as") ? { type: "kw_as" } : kw_as), "lparen", "with_statement_statement", "rparen"], "postprocess": x => lexer_2.track(x, {
                    alias: asName(x[0]),
                    statement: unwrap(x[3]),
                }) },
            { "name": "with_statement_statement", "symbols": ["selection"] },
            { "name": "with_statement_statement", "symbols": ["insert_statement"] },
            { "name": "with_statement_statement", "symbols": ["update_statement"] },
            { "name": "with_statement_statement", "symbols": ["delete_statement"] },
            { "name": "createtype_statement$subexpression$1", "symbols": ["createtype_enum"] },
            { "name": "createtype_statement", "symbols": [(lexer_1.lexerAny.has("kw_create") ? { type: "kw_create" } : kw_create), "kw_type", "qualified_name", "createtype_statement$subexpression$1"], "postprocess": x => lexer_2.track(x, {
                    name: x[2],
                    ...unwrap(x[3]),
                }) },
            { "name": "createtype_enum$macrocall$2", "symbols": ["enum_value"] },
            { "name": "createtype_enum$macrocall$1$ebnf$1", "symbols": [] },
            { "name": "createtype_enum$macrocall$1$ebnf$1$subexpression$1", "symbols": [(lexer_1.lexerAny.has("comma") ? { type: "comma" } : comma), "createtype_enum$macrocall$2"], "postprocess": last },
            { "name": "createtype_enum$macrocall$1$ebnf$1", "symbols": ["createtype_enum$macrocall$1$ebnf$1", "createtype_enum$macrocall$1$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "createtype_enum$macrocall$1", "symbols": ["createtype_enum$macrocall$2", "createtype_enum$macrocall$1$ebnf$1"], "postprocess": ([head, tail]) => {
                    return [unwrap(head), ...(tail.map(unwrap) || [])];
                } },
            { "name": "createtype_enum", "symbols": [(lexer_1.lexerAny.has("kw_as") ? { type: "kw_as" } : kw_as), "kw_enum", "lparen", "createtype_enum$macrocall$1", "rparen"], "postprocess": x => lexer_2.track(x, {
                    type: 'create enum',
                    values: x[3],
                }) },
            { "name": "enum_value", "symbols": ["string"], "postprocess": x => lexer_2.track(x, { value: toStr(x) }) },
            { "name": "union_left", "symbols": ["select_statement"] },
            { "name": "union_left", "symbols": ["select_values"] },
            { "name": "union_left", "symbols": ["selection_paren"] },
            { "name": "union_right", "symbols": ["selection"] },
            { "name": "union_right", "symbols": ["selection_paren"] },
            { "name": "union_statement$subexpression$1$ebnf$1", "symbols": [(lexer_1.lexerAny.has("kw_all") ? { type: "kw_all" } : kw_all)], "postprocess": id },
            { "name": "union_statement$subexpression$1$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "union_statement$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_union") ? { type: "kw_union" } : kw_union), "union_statement$subexpression$1$ebnf$1"] },
            { "name": "union_statement", "symbols": ["union_left", "union_statement$subexpression$1", "union_right"], "postprocess": x => {
                    return lexer_2.track(x, {
                        type: toStr(x[1], ' '),
                        left: unwrap(x[0]),
                        right: unwrap(x[2]),
                    });
                } },
            { "name": "prepare$ebnf$1$subexpression$1", "symbols": ["lparen", "data_type_list", "rparen"], "postprocess": get(1) },
            { "name": "prepare$ebnf$1", "symbols": ["prepare$ebnf$1$subexpression$1"], "postprocess": id },
            { "name": "prepare$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "prepare", "symbols": ["kw_prepare", "ident", "prepare$ebnf$1", (lexer_1.lexerAny.has("kw_as") ? { type: "kw_as" } : kw_as), "statement_noprep"], "postprocess": x => lexer_2.track(x, {
                    type: 'prepare',
                    name: asName(x[1]),
                    ...x[2] && { args: x[2] },
                    statement: unwrap(last(x)),
                }) },
            { "name": "create_view_statements", "symbols": ["create_view"] },
            { "name": "create_view_statements", "symbols": ["create_materialized_view"] },
            { "name": "create_view$ebnf$1$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_or") ? { type: "kw_or" } : kw_or), "kw_replace"] },
            { "name": "create_view$ebnf$1", "symbols": ["create_view$ebnf$1$subexpression$1"], "postprocess": id },
            { "name": "create_view$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "create_view$ebnf$2$subexpression$1", "symbols": ["kw_temp"] },
            { "name": "create_view$ebnf$2$subexpression$1", "symbols": ["kw_temporary"] },
            { "name": "create_view$ebnf$2", "symbols": ["create_view$ebnf$2$subexpression$1"], "postprocess": id },
            { "name": "create_view$ebnf$2", "symbols": [], "postprocess": () => null },
            { "name": "create_view$ebnf$3", "symbols": ["kw_recursive"], "postprocess": id },
            { "name": "create_view$ebnf$3", "symbols": [], "postprocess": () => null },
            { "name": "create_view$ebnf$4$subexpression$1$macrocall$2", "symbols": ["ident"] },
            { "name": "create_view$ebnf$4$subexpression$1$macrocall$1$ebnf$1", "symbols": [] },
            { "name": "create_view$ebnf$4$subexpression$1$macrocall$1$ebnf$1$subexpression$1", "symbols": [(lexer_1.lexerAny.has("comma") ? { type: "comma" } : comma), "create_view$ebnf$4$subexpression$1$macrocall$2"], "postprocess": last },
            { "name": "create_view$ebnf$4$subexpression$1$macrocall$1$ebnf$1", "symbols": ["create_view$ebnf$4$subexpression$1$macrocall$1$ebnf$1", "create_view$ebnf$4$subexpression$1$macrocall$1$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "create_view$ebnf$4$subexpression$1$macrocall$1", "symbols": ["create_view$ebnf$4$subexpression$1$macrocall$2", "create_view$ebnf$4$subexpression$1$macrocall$1$ebnf$1"], "postprocess": ([head, tail]) => {
                    return [unwrap(head), ...(tail.map(unwrap) || [])];
                } },
            { "name": "create_view$ebnf$4$subexpression$1", "symbols": ["lparen", "create_view$ebnf$4$subexpression$1$macrocall$1", "rparen"], "postprocess": get(1) },
            { "name": "create_view$ebnf$4", "symbols": ["create_view$ebnf$4$subexpression$1"], "postprocess": id },
            { "name": "create_view$ebnf$4", "symbols": [], "postprocess": () => null },
            { "name": "create_view$ebnf$5", "symbols": ["create_view_opts"], "postprocess": id },
            { "name": "create_view$ebnf$5", "symbols": [], "postprocess": () => null },
            { "name": "create_view$ebnf$6$subexpression$1$subexpression$1", "symbols": ["kw_local"] },
            { "name": "create_view$ebnf$6$subexpression$1$subexpression$1", "symbols": ["kw_cascaded"] },
            { "name": "create_view$ebnf$6$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_with") ? { type: "kw_with" } : kw_with), "create_view$ebnf$6$subexpression$1$subexpression$1", (lexer_1.lexerAny.has("kw_check") ? { type: "kw_check" } : kw_check), "kw_option"], "postprocess": get(1) },
            { "name": "create_view$ebnf$6", "symbols": ["create_view$ebnf$6$subexpression$1"], "postprocess": id },
            { "name": "create_view$ebnf$6", "symbols": [], "postprocess": () => null },
            { "name": "create_view", "symbols": [(lexer_1.lexerAny.has("kw_create") ? { type: "kw_create" } : kw_create), "create_view$ebnf$1", "create_view$ebnf$2", "create_view$ebnf$3", "kw_view", "qualified_name", "create_view$ebnf$4", "create_view$ebnf$5", (lexer_1.lexerAny.has("kw_as") ? { type: "kw_as" } : kw_as), "selection", "create_view$ebnf$6"], "postprocess": x => {
                    return lexer_2.track(x, {
                        type: 'create view',
                        ...x[1] && { orReplace: true },
                        ...x[2] && { temp: true },
                        ...x[3] && { recursive: true },
                        name: x[5],
                        ...x[6] && { columnNames: x[6].map(asName) },
                        ...x[7] && { parameters: fromEntries(x[7]) },
                        query: x[9],
                        ...x[10] && { checkOption: toStr(x[10]) },
                    });
                } },
            { "name": "create_view_opt", "symbols": ["ident", (lexer_1.lexerAny.has("op_eq") ? { type: "op_eq" } : op_eq), "ident"], "postprocess": ([a, _, b]) => [toStr(a), toStr(b)] },
            { "name": "create_view_opts$macrocall$2", "symbols": ["create_view_opt"] },
            { "name": "create_view_opts$macrocall$1$ebnf$1", "symbols": [] },
            { "name": "create_view_opts$macrocall$1$ebnf$1$subexpression$1", "symbols": [(lexer_1.lexerAny.has("comma") ? { type: "comma" } : comma), "create_view_opts$macrocall$2"], "postprocess": last },
            { "name": "create_view_opts$macrocall$1$ebnf$1", "symbols": ["create_view_opts$macrocall$1$ebnf$1", "create_view_opts$macrocall$1$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "create_view_opts$macrocall$1", "symbols": ["create_view_opts$macrocall$2", "create_view_opts$macrocall$1$ebnf$1"], "postprocess": ([head, tail]) => {
                    return [unwrap(head), ...(tail.map(unwrap) || [])];
                } },
            { "name": "create_view_opts", "symbols": [(lexer_1.lexerAny.has("kw_with") ? { type: "kw_with" } : kw_with), "create_view_opts$macrocall$1"], "postprocess": last },
            { "name": "create_materialized_view$ebnf$1", "symbols": ["kw_ifnotexists"], "postprocess": id },
            { "name": "create_materialized_view$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "create_materialized_view$ebnf$2$subexpression$1$macrocall$2", "symbols": ["ident"] },
            { "name": "create_materialized_view$ebnf$2$subexpression$1$macrocall$1$ebnf$1", "symbols": [] },
            { "name": "create_materialized_view$ebnf$2$subexpression$1$macrocall$1$ebnf$1$subexpression$1", "symbols": [(lexer_1.lexerAny.has("comma") ? { type: "comma" } : comma), "create_materialized_view$ebnf$2$subexpression$1$macrocall$2"], "postprocess": last },
            { "name": "create_materialized_view$ebnf$2$subexpression$1$macrocall$1$ebnf$1", "symbols": ["create_materialized_view$ebnf$2$subexpression$1$macrocall$1$ebnf$1", "create_materialized_view$ebnf$2$subexpression$1$macrocall$1$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "create_materialized_view$ebnf$2$subexpression$1$macrocall$1", "symbols": ["create_materialized_view$ebnf$2$subexpression$1$macrocall$2", "create_materialized_view$ebnf$2$subexpression$1$macrocall$1$ebnf$1"], "postprocess": ([head, tail]) => {
                    return [unwrap(head), ...(tail.map(unwrap) || [])];
                } },
            { "name": "create_materialized_view$ebnf$2$subexpression$1", "symbols": ["lparen", "create_materialized_view$ebnf$2$subexpression$1$macrocall$1", "rparen"], "postprocess": get(1) },
            { "name": "create_materialized_view$ebnf$2", "symbols": ["create_materialized_view$ebnf$2$subexpression$1"], "postprocess": id },
            { "name": "create_materialized_view$ebnf$2", "symbols": [], "postprocess": () => null },
            { "name": "create_materialized_view$ebnf$3", "symbols": ["create_view_opts"], "postprocess": id },
            { "name": "create_materialized_view$ebnf$3", "symbols": [], "postprocess": () => null },
            { "name": "create_materialized_view$ebnf$4$subexpression$1", "symbols": ["kw_tablespace", "ident"], "postprocess": last },
            { "name": "create_materialized_view$ebnf$4", "symbols": ["create_materialized_view$ebnf$4$subexpression$1"], "postprocess": id },
            { "name": "create_materialized_view$ebnf$4", "symbols": [], "postprocess": () => null },
            { "name": "create_materialized_view$ebnf$5$subexpression$1$ebnf$1", "symbols": ["kw_no"], "postprocess": id },
            { "name": "create_materialized_view$ebnf$5$subexpression$1$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "create_materialized_view$ebnf$5$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_with") ? { type: "kw_with" } : kw_with), "create_materialized_view$ebnf$5$subexpression$1$ebnf$1", "kw_data"] },
            { "name": "create_materialized_view$ebnf$5", "symbols": ["create_materialized_view$ebnf$5$subexpression$1"], "postprocess": id },
            { "name": "create_materialized_view$ebnf$5", "symbols": [], "postprocess": () => null },
            { "name": "create_materialized_view", "symbols": [(lexer_1.lexerAny.has("kw_create") ? { type: "kw_create" } : kw_create), "kw_materialized", "kw_view", "create_materialized_view$ebnf$1", "qualified_name", "create_materialized_view$ebnf$2", "create_materialized_view$ebnf$3", "create_materialized_view$ebnf$4", (lexer_1.lexerAny.has("kw_as") ? { type: "kw_as" } : kw_as), "selection", "create_materialized_view$ebnf$5"], "postprocess": x => {
                    return lexer_2.track(x, {
                        type: 'create materialized view',
                        ...x[3] && { ifNotExists: true },
                        name: x[4],
                        ...x[5] && { columnNames: x[6].map(asName) },
                        ...x[6] && { parameters: fromEntries(x[6]) },
                        ...x[7] && { tablespace: asName(x[7]) },
                        query: x[9],
                        ...x[10] && { withData: toStr(x[10][1]) !== 'no' },
                    });
                } },
            { "name": "functions_statements", "symbols": ["create_func"] },
            { "name": "functions_statements", "symbols": ["do_stm"] },
            { "name": "create_func$ebnf$1$subexpression$1", "symbols": [(lexer_1.lexerAny.has("kw_or") ? { type: "kw_or" } : kw_or), "kw_replace"] },
            { "name": "create_func$ebnf$1", "symbols": ["create_func$ebnf$1$subexpression$1"], "postprocess": id },
            { "name": "create_func$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "create_func$subexpression$1$ebnf$1$macrocall$2", "symbols": ["func_argdef"] },
            { "name": "create_func$subexpression$1$ebnf$1$macrocall$1$ebnf$1", "symbols": [] },
            { "name": "create_func$subexpression$1$ebnf$1$macrocall$1$ebnf$1$subexpression$1", "symbols": [(lexer_1.lexerAny.has("comma") ? { type: "comma" } : comma), "create_func$subexpression$1$ebnf$1$macrocall$2"], "postprocess": last },
            { "name": "create_func$subexpression$1$ebnf$1$macrocall$1$ebnf$1", "symbols": ["create_func$subexpression$1$ebnf$1$macrocall$1$ebnf$1", "create_func$subexpression$1$ebnf$1$macrocall$1$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "create_func$subexpression$1$ebnf$1$macrocall$1", "symbols": ["create_func$subexpression$1$ebnf$1$macrocall$2", "create_func$subexpression$1$ebnf$1$macrocall$1$ebnf$1"], "postprocess": ([head, tail]) => {
                    return [unwrap(head), ...(tail.map(unwrap) || [])];
                } },
            { "name": "create_func$subexpression$1$ebnf$1", "symbols": ["create_func$subexpression$1$ebnf$1$macrocall$1"], "postprocess": id },
            { "name": "create_func$subexpression$1$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "create_func$subexpression$1", "symbols": ["lparen", "create_func$subexpression$1$ebnf$1", "rparen"], "postprocess": get(1) },
            { "name": "create_func$ebnf$2", "symbols": ["func_returns"], "postprocess": id },
            { "name": "create_func$ebnf$2", "symbols": [], "postprocess": () => null },
            { "name": "create_func$subexpression$2", "symbols": [(lexer_1.lexerAny.has("codeblock") ? { type: "codeblock" } : codeblock)], "postprocess": x => unwrap(x).value },
            { "name": "create_func$subexpression$2", "symbols": ["string"] },
            { "name": "create_func$ebnf$3", "symbols": [] },
            { "name": "create_func$ebnf$3", "symbols": ["create_func$ebnf$3", "func_spec"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "create_func", "symbols": [(lexer_1.lexerAny.has("kw_create") ? { type: "kw_create" } : kw_create), "create_func$ebnf$1", "kw_function", "qname", "create_func$subexpression$1", "create_func$ebnf$2", (lexer_1.lexerAny.has("kw_as") ? { type: "kw_as" } : kw_as), "create_func$subexpression$2", "create_func$ebnf$3"], "postprocess": x => {
                    var _a;
                    const specs = {};
                    for (const s of x[8]) {
                        Object.assign(specs, s);
                    }
                    return lexer_2.track(x, {
                        type: 'create function',
                        ...x[1] && { orReplace: true },
                        name: x[3],
                        ...x[5] && { returns: unwrap(x[5]) },
                        arguments: (_a = x[4]) !== null && _a !== void 0 ? _a : [],
                        code: unwrap(x[7]),
                        ...specs,
                    });
                } },
            { "name": "func_argdef$ebnf$1", "symbols": ["func_argopts"], "postprocess": id },
            { "name": "func_argdef$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "func_argdef", "symbols": ["func_argdef$ebnf$1", "data_type"], "postprocess": x => lexer_2.track(x, {
                    type: x[1],
                    ...x[0],
                }) },
            { "name": "func_argopts$ebnf$1", "symbols": ["word"], "postprocess": id },
            { "name": "func_argopts$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "func_argopts", "symbols": ["func_argmod", "func_argopts$ebnf$1"], "postprocess": x => lexer_2.track(x, {
                    mode: toStr(x[0]),
                    ...x[1] && { name: asName(x[1]) },
                }) },
            { "name": "func_argopts", "symbols": ["word"], "postprocess": (x, rej) => {
                    const name = asName(x);
                    if (name === 'out' || name === 'inout' || name === 'variadic') {
                        return rej; // avoid ambiguous syntax
                    }
                    return lexer_2.track(x, { name });
                } },
            { "name": "func_argmod", "symbols": [(lexer_1.lexerAny.has("kw_in") ? { type: "kw_in" } : kw_in)] },
            { "name": "func_argmod", "symbols": ["kw_out"] },
            { "name": "func_argmod", "symbols": ["kw_inout"] },
            { "name": "func_argmod", "symbols": ["kw_variadic"] },
            { "name": "func_spec", "symbols": ["kw_language", "word"], "postprocess": x => lexer_2.track(x, { language: asName(last(x)) }) },
            { "name": "func_spec", "symbols": ["func_purity"], "postprocess": x => lexer_2.track(x, { purity: toStr(x) }) },
            { "name": "func_spec$ebnf$1", "symbols": [(lexer_1.lexerAny.has("kw_not") ? { type: "kw_not" } : kw_not)], "postprocess": id },
            { "name": "func_spec$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "func_spec$subexpression$1", "symbols": ["word"], "postprocess": kw('leakproof') },
            { "name": "func_spec", "symbols": ["func_spec$ebnf$1", "func_spec$subexpression$1"], "postprocess": x => lexer_2.track(x, { leakproof: !x[0] }) },
            { "name": "func_spec", "symbols": ["func_spec_nil"], "postprocess": unwrap },
            { "name": "func_spec_nil$subexpression$1", "symbols": ["word"], "postprocess": kw('called') },
            { "name": "func_spec_nil", "symbols": ["func_spec_nil$subexpression$1", "oninp"], "postprocess": () => ({ onNullInput: 'call' }) },
            { "name": "func_spec_nil$subexpression$2", "symbols": ["word"], "postprocess": kw('returns') },
            { "name": "func_spec_nil", "symbols": ["func_spec_nil$subexpression$2", (lexer_1.lexerAny.has("kw_null") ? { type: "kw_null" } : kw_null), "oninp"], "postprocess": () => ({ onNullInput: 'null' }) },
            { "name": "func_spec_nil$subexpression$3", "symbols": ["word"], "postprocess": kw('strict') },
            { "name": "func_spec_nil", "symbols": ["func_spec_nil$subexpression$3"], "postprocess": () => ({ onNullInput: 'strict' }) },
            { "name": "func_purity", "symbols": ["word"], "postprocess": kw('immutable') },
            { "name": "func_purity", "symbols": ["word"], "postprocess": kw('stable') },
            { "name": "func_purity", "symbols": ["word"], "postprocess": kw('volatile') },
            { "name": "oninp$subexpression$1", "symbols": ["word"], "postprocess": kw('input') },
            { "name": "oninp", "symbols": [(lexer_1.lexerAny.has("kw_on") ? { type: "kw_on" } : kw_on), (lexer_1.lexerAny.has("kw_null") ? { type: "kw_null" } : kw_null), "oninp$subexpression$1"] },
            { "name": "func_returns", "symbols": ["kw_returns", "data_type"], "postprocess": last },
            { "name": "func_returns$macrocall$2", "symbols": ["func_ret_table_col"] },
            { "name": "func_returns$macrocall$1$ebnf$1", "symbols": [] },
            { "name": "func_returns$macrocall$1$ebnf$1$subexpression$1", "symbols": [(lexer_1.lexerAny.has("comma") ? { type: "comma" } : comma), "func_returns$macrocall$2"], "postprocess": last },
            { "name": "func_returns$macrocall$1$ebnf$1", "symbols": ["func_returns$macrocall$1$ebnf$1", "func_returns$macrocall$1$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "func_returns$macrocall$1", "symbols": ["func_returns$macrocall$2", "func_returns$macrocall$1$ebnf$1"], "postprocess": ([head, tail]) => {
                    return [unwrap(head), ...(tail.map(unwrap) || [])];
                } },
            { "name": "func_returns", "symbols": ["kw_returns", (lexer_1.lexerAny.has("kw_table") ? { type: "kw_table" } : kw_table), "lparen", "func_returns$macrocall$1", "rparen"], "postprocess": x => lexer_2.track(x, {
                    kind: 'table',
                    columns: x[3],
                }) },
            { "name": "func_ret_table_col", "symbols": ["word", "data_type"], "postprocess": x => lexer_2.track(x, { name: asName(x[0]), type: x[1] }) },
            { "name": "do_stm$ebnf$1$subexpression$1", "symbols": ["kw_language", "word"], "postprocess": last },
            { "name": "do_stm$ebnf$1", "symbols": ["do_stm$ebnf$1$subexpression$1"], "postprocess": id },
            { "name": "do_stm$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "do_stm", "symbols": [(lexer_1.lexerAny.has("kw_do") ? { type: "kw_do" } : kw_do), "do_stm$ebnf$1", (lexer_1.lexerAny.has("codeblock") ? { type: "codeblock" } : codeblock)], "postprocess": x => lexer_2.track(x, {
                    type: 'do',
                    ...x[1] && { language: asName(x[1]) },
                    code: x[2].value,
                }) },
            { "name": "main$ebnf$1", "symbols": [] },
            { "name": "main$ebnf$1", "symbols": ["main$ebnf$1", "statement_separator"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "main$ebnf$2", "symbols": [] },
            { "name": "main$ebnf$2$subexpression$1$ebnf$1", "symbols": ["statement_separator"] },
            { "name": "main$ebnf$2$subexpression$1$ebnf$1", "symbols": ["main$ebnf$2$subexpression$1$ebnf$1", "statement_separator"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "main$ebnf$2$subexpression$1", "symbols": ["main$ebnf$2$subexpression$1$ebnf$1", "statement"] },
            { "name": "main$ebnf$2", "symbols": ["main$ebnf$2", "main$ebnf$2$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "main$ebnf$3", "symbols": [] },
            { "name": "main$ebnf$3", "symbols": ["main$ebnf$3", "statement_separator"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "main", "symbols": ["main$ebnf$1", "statement", "main$ebnf$2", "main$ebnf$3"], "postprocess": ([_, head, _tail]) => {
                    const tail = _tail;
                    const ret = [unwrap(head), ...tail.map((x) => unwrap(x[1]))];
                    return ret.length === 1
                        ? ret[0]
                        : ret;
                } },
            { "name": "statement_separator", "symbols": [(lexer_1.lexerAny.has("semicolon") ? { type: "semicolon" } : semicolon)] },
            { "name": "statement", "symbols": ["statement_noprep"] },
            { "name": "statement", "symbols": ["prepare"] },
            { "name": "statement_noprep", "symbols": ["selection"] },
            { "name": "statement_noprep", "symbols": ["createtable_statement"] },
            { "name": "statement_noprep", "symbols": ["createextension_statement"] },
            { "name": "statement_noprep", "symbols": ["createindex_statement"] },
            { "name": "statement_noprep", "symbols": ["simplestatements_all"] },
            { "name": "statement_noprep", "symbols": ["insert_statement"] },
            { "name": "statement_noprep", "symbols": ["update_statement"] },
            { "name": "statement_noprep", "symbols": ["altertable_statement"] },
            { "name": "statement_noprep", "symbols": ["delete_statement"] },
            { "name": "statement_noprep", "symbols": ["create_sequence_statement"] },
            { "name": "statement_noprep", "symbols": ["alter_sequence_statement"] },
            { "name": "statement_noprep", "symbols": ["drop_statement"] },
            { "name": "statement_noprep", "symbols": ["createtype_statement"] },
            { "name": "statement_noprep", "symbols": ["create_view_statements"] },
            { "name": "statement_noprep", "symbols": ["create_schema"] },
            { "name": "statement_noprep", "symbols": ["raise_statement"] },
            { "name": "statement_noprep", "symbols": ["comment_statement"] },
            { "name": "statement_noprep", "symbols": ["functions_statements"] },
            { "name": "selection", "symbols": ["select_statement"], "postprocess": unwrap },
            { "name": "selection", "symbols": ["select_values"], "postprocess": unwrap },
            { "name": "selection", "symbols": ["with_statement"], "postprocess": unwrap },
            { "name": "selection", "symbols": ["with_recursive_statement"], "postprocess": unwrap },
            { "name": "selection", "symbols": ["union_statement"], "postprocess": unwrap },
            { "name": "selection_paren", "symbols": ["lparen", "selection", "rparen"], "postprocess": get(1) }
        ],
        ParserStart: "main",
    };
    exports.default = grammar;


    /***/ }),
    /* 11 */
    /***/ (function(module, exports, __webpack_require__) {

    Object.defineProperty(exports, "__esModule", { value: true });
    // Generated automatically by nearley, version unknown
    // http://github.com/Hardmath123/nearley
    // Bypasses TS6133. Allow declared but unused functions.
    // @ts-ignore
    function id(d) { return d[0]; }
    const array_lexer_1 = __webpack_require__(12);
    const last = (x) => x && x[x.length - 1];
    const grammar = {
        Lexer: array_lexer_1.lexerAny,
        ParserRules: [
            { "name": "main$ebnf$1", "symbols": ["elements"], "postprocess": id },
            { "name": "main$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "main", "symbols": [(array_lexer_1.lexerAny.has("start_list") ? { type: "start_list" } : start_list), "main$ebnf$1", (array_lexer_1.lexerAny.has("end_list") ? { type: "end_list" } : end_list)], "postprocess": x => x[1] || [] },
            { "name": "elements$ebnf$1", "symbols": [] },
            { "name": "elements$ebnf$1$subexpression$1", "symbols": [(array_lexer_1.lexerAny.has("comma") ? { type: "comma" } : comma), "elt"], "postprocess": last },
            { "name": "elements$ebnf$1", "symbols": ["elements$ebnf$1", "elements$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "elements", "symbols": ["elt", "elements$ebnf$1"], "postprocess": ([head, tail]) => {
                    return [head, ...(tail || [])];
                } },
            { "name": "elt", "symbols": [(array_lexer_1.lexerAny.has("value") ? { type: "value" } : value)], "postprocess": x => x[0].value },
            { "name": "elt", "symbols": ["main"], "postprocess": x => x[0] }
        ],
        ParserStart: "main",
    };
    exports.default = grammar;


    /***/ }),
    /* 12 */
    /***/ (function(module, exports, __webpack_require__) {

    Object.defineProperty(exports, "__esModule", { value: true });
    exports.lexerAny = exports.lexer = void 0;
    const moo_1 = __webpack_require__(0);
    // build lexer
    exports.lexer = moo_1.compile({
        valueString: {
            match: /"(?:\\["\\]|[^\n"\\])*"/,
            value: x => JSON.parse(x),
            type: x => 'value',
        },
        valueRaw: {
            match: /[^\s,\{\}"](?:[^,\{\}"]*[^\s,\{\}"])?/,
            type: () => 'value',
        },
        comma: ',',
        space: { match: /[\s\t\n\v\f\r]+/, lineBreaks: true, },
        start_list: '{',
        end_list: '}',
    });
    exports.lexer.next = (next => () => {
        let tok;
        while ((tok = next.call(exports.lexer)) && (tok.type === 'space')) {
        }
        return tok;
    })(exports.lexer.next);
    exports.lexerAny = exports.lexer;


    /***/ }),
    /* 13 */
    /***/ (function(module, exports, __webpack_require__) {

    Object.defineProperty(exports, "__esModule", { value: true });
    // Generated automatically by nearley, version unknown
    // http://github.com/Hardmath123/nearley
    // Bypasses TS6133. Allow declared but unused functions.
    // @ts-ignore
    function id(d) { return d[0]; }
    const geometric_lexer_1 = __webpack_require__(14);
    const get = (i) => (x) => x[i];
    const last = (x) => x && x[x.length - 1];
    function unwrap(e) {
        if (Array.isArray(e) && e.length === 1) {
            e = unwrap(e[0]);
        }
        if (Array.isArray(e) && !e.length) {
            return null;
        }
        return e;
    }
    const grammar = {
        Lexer: geometric_lexer_1.lexerAny,
        ParserRules: [
            { "name": "number$subexpression$1", "symbols": ["float"] },
            { "name": "number$subexpression$1", "symbols": ["int"] },
            { "name": "number", "symbols": ["number$subexpression$1"], "postprocess": unwrap },
            { "name": "float", "symbols": [(geometric_lexer_1.lexerAny.has("float") ? { type: "float" } : float)], "postprocess": args => parseFloat(unwrap(args)) },
            { "name": "int", "symbols": [(geometric_lexer_1.lexerAny.has("int") ? { type: "int" } : int)], "postprocess": arg => parseInt(unwrap(arg), 10) },
            { "name": "comma", "symbols": [(geometric_lexer_1.lexerAny.has("comma") ? { type: "comma" } : comma)], "postprocess": id },
            { "name": "point$macrocall$2", "symbols": ["point_content"] },
            { "name": "point$macrocall$1$subexpression$1", "symbols": ["point$macrocall$2"] },
            { "name": "point$macrocall$1$subexpression$1", "symbols": [(geometric_lexer_1.lexerAny.has("lparen") ? { type: "lparen" } : lparen), "point$macrocall$2", (geometric_lexer_1.lexerAny.has("rparen") ? { type: "rparen" } : rparen)], "postprocess": get(1) },
            { "name": "point$macrocall$1", "symbols": ["point$macrocall$1$subexpression$1"], "postprocess": unwrap },
            { "name": "point", "symbols": ["point$macrocall$1"], "postprocess": unwrap },
            { "name": "point_content", "symbols": ["number", "comma", "number"], "postprocess": x => ({ x: x[0], y: x[2] }) },
            { "name": "line", "symbols": [(geometric_lexer_1.lexerAny.has("lcurl") ? { type: "lcurl" } : lcurl), "number", "comma", "number", "comma", "number", (geometric_lexer_1.lexerAny.has("rcurl") ? { type: "rcurl" } : rcurl)], "postprocess": x => ({
                    a: x[1],
                    b: x[3],
                    c: x[5],
                }) },
            { "name": "box", "symbols": ["closed_path"], "postprocess": ([x], rej) => {
                    if (x.length !== 2) {
                        return rej;
                    }
                    return x;
                } },
            { "name": "lseg", "symbols": ["path"], "postprocess": ([x], rej) => {
                    if (x.path.length !== 2) {
                        return rej;
                    }
                    return x.path;
                } },
            { "name": "path", "symbols": ["open_path"], "postprocess": ([path]) => ({ closed: false, path }) },
            { "name": "path", "symbols": ["closed_path"], "postprocess": ([path]) => ({ closed: true, path }) },
            { "name": "open_path$macrocall$2", "symbols": [(geometric_lexer_1.lexerAny.has("lbracket") ? { type: "lbracket" } : lbracket)] },
            { "name": "open_path$macrocall$3", "symbols": [(geometric_lexer_1.lexerAny.has("rbracket") ? { type: "rbracket" } : rbracket)] },
            { "name": "open_path$macrocall$1$macrocall$2", "symbols": ["point"] },
            { "name": "open_path$macrocall$1$macrocall$1$ebnf$1", "symbols": [] },
            { "name": "open_path$macrocall$1$macrocall$1$ebnf$1$subexpression$1", "symbols": [(geometric_lexer_1.lexerAny.has("comma") ? { type: "comma" } : comma), "open_path$macrocall$1$macrocall$2"], "postprocess": last },
            { "name": "open_path$macrocall$1$macrocall$1$ebnf$1", "symbols": ["open_path$macrocall$1$macrocall$1$ebnf$1", "open_path$macrocall$1$macrocall$1$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "open_path$macrocall$1$macrocall$1", "symbols": ["open_path$macrocall$1$macrocall$2", "open_path$macrocall$1$macrocall$1$ebnf$1"], "postprocess": ([head, tail]) => {
                    return [unwrap(head), ...(tail.map(unwrap) || [])];
                } },
            { "name": "open_path$macrocall$1", "symbols": ["open_path$macrocall$2", "open_path$macrocall$1$macrocall$1", "open_path$macrocall$3"], "postprocess": get(1) },
            { "name": "open_path", "symbols": ["open_path$macrocall$1"], "postprocess": last },
            { "name": "closed_path$subexpression$1$macrocall$2", "symbols": [(geometric_lexer_1.lexerAny.has("lparen") ? { type: "lparen" } : lparen)] },
            { "name": "closed_path$subexpression$1$macrocall$3", "symbols": [(geometric_lexer_1.lexerAny.has("rparen") ? { type: "rparen" } : rparen)] },
            { "name": "closed_path$subexpression$1$macrocall$1$macrocall$2", "symbols": ["point"] },
            { "name": "closed_path$subexpression$1$macrocall$1$macrocall$1$ebnf$1", "symbols": [] },
            { "name": "closed_path$subexpression$1$macrocall$1$macrocall$1$ebnf$1$subexpression$1", "symbols": [(geometric_lexer_1.lexerAny.has("comma") ? { type: "comma" } : comma), "closed_path$subexpression$1$macrocall$1$macrocall$2"], "postprocess": last },
            { "name": "closed_path$subexpression$1$macrocall$1$macrocall$1$ebnf$1", "symbols": ["closed_path$subexpression$1$macrocall$1$macrocall$1$ebnf$1", "closed_path$subexpression$1$macrocall$1$macrocall$1$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "closed_path$subexpression$1$macrocall$1$macrocall$1", "symbols": ["closed_path$subexpression$1$macrocall$1$macrocall$2", "closed_path$subexpression$1$macrocall$1$macrocall$1$ebnf$1"], "postprocess": ([head, tail]) => {
                    return [unwrap(head), ...(tail.map(unwrap) || [])];
                } },
            { "name": "closed_path$subexpression$1$macrocall$1", "symbols": ["closed_path$subexpression$1$macrocall$2", "closed_path$subexpression$1$macrocall$1$macrocall$1", "closed_path$subexpression$1$macrocall$3"], "postprocess": get(1) },
            { "name": "closed_path$subexpression$1", "symbols": ["closed_path$subexpression$1$macrocall$1"], "postprocess": last },
            { "name": "closed_path$subexpression$1$macrocall$5", "symbols": ["point"] },
            { "name": "closed_path$subexpression$1$macrocall$4$ebnf$1", "symbols": [] },
            { "name": "closed_path$subexpression$1$macrocall$4$ebnf$1$subexpression$1", "symbols": [(geometric_lexer_1.lexerAny.has("comma") ? { type: "comma" } : comma), "closed_path$subexpression$1$macrocall$5"], "postprocess": last },
            { "name": "closed_path$subexpression$1$macrocall$4$ebnf$1", "symbols": ["closed_path$subexpression$1$macrocall$4$ebnf$1", "closed_path$subexpression$1$macrocall$4$ebnf$1$subexpression$1"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "closed_path$subexpression$1$macrocall$4", "symbols": ["closed_path$subexpression$1$macrocall$5", "closed_path$subexpression$1$macrocall$4$ebnf$1"], "postprocess": ([head, tail]) => {
                    return [unwrap(head), ...(tail.map(unwrap) || [])];
                } },
            { "name": "closed_path$subexpression$1", "symbols": ["closed_path$subexpression$1$macrocall$4"], "postprocess": last },
            { "name": "closed_path", "symbols": ["closed_path$subexpression$1"], "postprocess": get(0) },
            { "name": "polygon", "symbols": ["closed_path"], "postprocess": get(0) },
            { "name": "circle_body", "symbols": ["point", "comma", "number"], "postprocess": x => ({ c: x[0], r: x[2] }) },
            { "name": "circle$subexpression$1$macrocall$2", "symbols": [(geometric_lexer_1.lexerAny.has("lcomp") ? { type: "lcomp" } : lcomp)] },
            { "name": "circle$subexpression$1$macrocall$3", "symbols": [(geometric_lexer_1.lexerAny.has("rcomp") ? { type: "rcomp" } : rcomp)] },
            { "name": "circle$subexpression$1$macrocall$1", "symbols": ["circle$subexpression$1$macrocall$2", "circle_body", "circle$subexpression$1$macrocall$3"], "postprocess": get(1) },
            { "name": "circle$subexpression$1", "symbols": ["circle$subexpression$1$macrocall$1"] },
            { "name": "circle$subexpression$1$macrocall$5", "symbols": [(geometric_lexer_1.lexerAny.has("lparen") ? { type: "lparen" } : lparen)] },
            { "name": "circle$subexpression$1$macrocall$6", "symbols": [(geometric_lexer_1.lexerAny.has("rparen") ? { type: "rparen" } : rparen)] },
            { "name": "circle$subexpression$1$macrocall$4", "symbols": ["circle$subexpression$1$macrocall$5", "circle_body", "circle$subexpression$1$macrocall$6"], "postprocess": get(1) },
            { "name": "circle$subexpression$1", "symbols": ["circle$subexpression$1$macrocall$4"] },
            { "name": "circle$subexpression$1", "symbols": ["circle_body"] },
            { "name": "circle", "symbols": ["circle$subexpression$1"], "postprocess": unwrap }
        ],
        ParserStart: "number",
    };
    exports.default = grammar;


    /***/ }),
    /* 14 */
    /***/ (function(module, exports, __webpack_require__) {

    Object.defineProperty(exports, "__esModule", { value: true });
    exports.lexerAny = exports.lexer = void 0;
    const moo_1 = __webpack_require__(0);
    // build lexer
    exports.lexer = moo_1.compile({
        comma: ',',
        space: { match: /[\s\t\n\v\f\r]+/, lineBreaks: true, },
        int: /\-?\d+(?![\.\d])/,
        float: /\-?(?:(?:\d*\.\d+)|(?:\d+\.\d*))/,
        lcurl: '{',
        rcurl: '}',
        lparen: '(',
        rparen: ')',
        lbracket: '[',
        rbracket: ']',
        lcomp: '<',
        rcomp: '>',
    });
    exports.lexer.next = (next => () => {
        let tok;
        while ((tok = next.call(exports.lexer)) && (tok.type === 'space')) {
        }
        return tok;
    })(exports.lexer.next);
    exports.lexerAny = exports.lexer;


    /***/ }),
    /* 15 */
    /***/ (function(module, exports, __webpack_require__) {

    Object.defineProperty(exports, "__esModule", { value: true });
    // Generated automatically by nearley, version unknown
    // http://github.com/Hardmath123/nearley
    // Bypasses TS6133. Allow declared but unused functions.
    // @ts-ignore
    function id(d) { return d[0]; }
    const interval_lexer_1 = __webpack_require__(16);
    const grammar = {
        Lexer: interval_lexer_1.lexerAny,
        ParserRules: [
            { "name": "main$ebnf$1", "symbols": ["elt"] },
            { "name": "main$ebnf$1", "symbols": ["main$ebnf$1", "elt"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "main", "symbols": ["main$ebnf$1"], "postprocess": ([elts]) => {
                    // check unicity
                    const s = new Set();
                    for (const e of elts) {
                        const k = typeof e[1] === 'number'
                            ? e[0]
                            : 'time';
                        if (s.has(k)) {
                            return 'invalid';
                        }
                        s.add(k);
                    }
                    return elts;
                } },
            { "name": "elt", "symbols": ["time"] },
            { "name": "elt", "symbols": ["num", "unit"], "postprocess": ([[n], u]) => {
                    u = u[0].type;
                    return [u, n];
                } },
            { "name": "unit", "symbols": [(interval_lexer_1.lexerAny.has("years") ? { type: "years" } : years)] },
            { "name": "unit", "symbols": [(interval_lexer_1.lexerAny.has("months") ? { type: "months" } : months)] },
            { "name": "unit", "symbols": [(interval_lexer_1.lexerAny.has("days") ? { type: "days" } : days)] },
            { "name": "unit", "symbols": [(interval_lexer_1.lexerAny.has("hours") ? { type: "hours" } : hours)] },
            { "name": "unit", "symbols": [(interval_lexer_1.lexerAny.has("minutes") ? { type: "minutes" } : minutes)] },
            { "name": "unit", "symbols": [(interval_lexer_1.lexerAny.has("seconds") ? { type: "seconds" } : seconds)] },
            { "name": "unit", "symbols": [(interval_lexer_1.lexerAny.has("milliseconds") ? { type: "milliseconds" } : milliseconds)] },
            { "name": "num", "symbols": ["int"] },
            { "name": "num", "symbols": ["float"] },
            { "name": "uint", "symbols": [(interval_lexer_1.lexerAny.has("int") ? { type: "int" } : int)], "postprocess": ([x]) => parseInt(x, 10) },
            { "name": "int$ebnf$1$subexpression$1", "symbols": [(interval_lexer_1.lexerAny.has("neg") ? { type: "neg" } : neg)] },
            { "name": "int$ebnf$1", "symbols": ["int$ebnf$1$subexpression$1"], "postprocess": id },
            { "name": "int$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "int", "symbols": ["int$ebnf$1", (interval_lexer_1.lexerAny.has("int") ? { type: "int" } : int)], "postprocess": ([neg, x]) => parseInt(x, 10) * (neg ? -1 : 1) },
            { "name": "float$ebnf$1$subexpression$1", "symbols": [(interval_lexer_1.lexerAny.has("neg") ? { type: "neg" } : neg)] },
            { "name": "float$ebnf$1", "symbols": ["float$ebnf$1$subexpression$1"], "postprocess": id },
            { "name": "float$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "float$ebnf$2", "symbols": [(interval_lexer_1.lexerAny.has("int") ? { type: "int" } : int)], "postprocess": id },
            { "name": "float$ebnf$2", "symbols": [], "postprocess": () => null },
            { "name": "float", "symbols": ["float$ebnf$1", "float$ebnf$2", (interval_lexer_1.lexerAny.has("dot") ? { type: "dot" } : dot), (interval_lexer_1.lexerAny.has("int") ? { type: "int" } : int)], "postprocess": ([neg, ...v]) => parseFloat(v.map(v => v ? v.text : '0').join('')) * (neg ? -1 : 1) },
            { "name": "time$ebnf$1$subexpression$1", "symbols": [(interval_lexer_1.lexerAny.has("colon") ? { type: "colon" } : colon), "uint"] },
            { "name": "time$ebnf$1", "symbols": ["time$ebnf$1$subexpression$1"], "postprocess": id },
            { "name": "time$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "time$ebnf$2$subexpression$1", "symbols": [(interval_lexer_1.lexerAny.has("dot") ? { type: "dot" } : dot), (interval_lexer_1.lexerAny.has("int") ? { type: "int" } : int)] },
            { "name": "time$ebnf$2", "symbols": ["time$ebnf$2$subexpression$1"], "postprocess": id },
            { "name": "time$ebnf$2", "symbols": [], "postprocess": () => null },
            { "name": "time", "symbols": ["uint", (interval_lexer_1.lexerAny.has("colon") ? { type: "colon" } : colon), "uint", "time$ebnf$1", "time$ebnf$2"], "postprocess": ([a, _, b, c, d]) => {
                    c = c && c[1];
                    d = d && d[1];
                    const ret = typeof c === 'number' ? [
                        ['hours', a],
                        ['minutes', b],
                        ['seconds', c],
                    ] : [
                        ['minutes', a],
                        ['seconds', b],
                    ];
                    if (d) {
                        ret.push(['milliseconds', parseFloat('0.' + d) * 1000]);
                    }
                    return ret;
                } }
        ],
        ParserStart: "main",
    };
    exports.default = grammar;


    /***/ }),
    /* 16 */
    /***/ (function(module, exports, __webpack_require__) {

    Object.defineProperty(exports, "__esModule", { value: true });
    exports.lexerAny = exports.lexer = void 0;
    const moo_1 = __webpack_require__(0);
    // build lexer
    exports.lexer = moo_1.compile({
        int: /\d+/,
        neg: '-',
        dot: '.',
        years: /(?:y|yrs?|years?)\b/,
        months: /(?:mon(?:th)?s?)\b/,
        days: /(?:d|days?)\b/,
        hours: /(?:h|hrs?|hours?)\b/,
        minutes: /(?:m|mins?|minutes?)\b/,
        seconds: /(?:s|secs?|seconds?)\b/,
        milliseconds: /(?:ms|milliseconds?)\b/,
        space: { match: /[\s\t\n\v\f\r]+/, lineBreaks: true, },
        colon: ':',
    });
    exports.lexer.next = (next => () => {
        let tok;
        while ((tok = next.call(exports.lexer)) && (tok.type === 'space')) {
        }
        return tok;
    })(exports.lexer.next);
    exports.lexerAny = exports.lexer;


    /***/ }),
    /* 17 */
    /***/ (function(module, exports, __webpack_require__) {

    Object.defineProperty(exports, "__esModule", { value: true });
    // Generated automatically by nearley, version unknown
    // http://github.com/Hardmath123/nearley
    // Bypasses TS6133. Allow declared but unused functions.
    // @ts-ignore
    function id(d) { return d[0]; }
    const interval_iso_lexer_1 = __webpack_require__(18);
    const grammar = {
        Lexer: interval_iso_lexer_1.lexerAny,
        ParserRules: [
            { "name": "num", "symbols": [(interval_iso_lexer_1.lexerAny.has("int") ? { type: "int" } : int)] },
            { "name": "num", "symbols": [(interval_iso_lexer_1.lexerAny.has("float") ? { type: "float" } : float)] },
            { "name": "main$ebnf$1", "symbols": [] },
            { "name": "main$ebnf$1", "symbols": ["main$ebnf$1", "long"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "main$ebnf$2$subexpression$1$ebnf$1", "symbols": ["short"] },
            { "name": "main$ebnf$2$subexpression$1$ebnf$1", "symbols": ["main$ebnf$2$subexpression$1$ebnf$1", "short"], "postprocess": (d) => d[0].concat([d[1]]) },
            { "name": "main$ebnf$2$subexpression$1", "symbols": [(interval_iso_lexer_1.lexerAny.has("T") ? { type: "T" } : T), "main$ebnf$2$subexpression$1$ebnf$1"] },
            { "name": "main$ebnf$2", "symbols": ["main$ebnf$2$subexpression$1"], "postprocess": id },
            { "name": "main$ebnf$2", "symbols": [], "postprocess": () => null },
            { "name": "main", "symbols": [(interval_iso_lexer_1.lexerAny.has("P") ? { type: "P" } : P), "main$ebnf$1", "main$ebnf$2"], "postprocess": ([_, a, b], rej) => {
                    b = !b ? [] : b[1];
                    if (!a.length && !b.length) {
                        return rej;
                    }
                    return !a.length ? b
                        : !b.length ? a
                            : [...a, ...b];
                } },
            { "name": "long$subexpression$1", "symbols": [(interval_iso_lexer_1.lexerAny.has("Y") ? { type: "Y" } : Y)] },
            { "name": "long$subexpression$1", "symbols": [(interval_iso_lexer_1.lexerAny.has("M") ? { type: "M" } : M)] },
            { "name": "long$subexpression$1", "symbols": [(interval_iso_lexer_1.lexerAny.has("W") ? { type: "W" } : W)] },
            { "name": "long$subexpression$1", "symbols": [(interval_iso_lexer_1.lexerAny.has("D") ? { type: "D" } : D)] },
            { "name": "long", "symbols": ["num", "long$subexpression$1"], "postprocess": ([n, u]) => {
                    n = parseFloat(n[0].value);
                    u = u[0].type;
                    switch (u) {
                        case 'Y':
                            return ['years', n];
                        case 'M':
                            return ['months', n];
                        case 'W':
                            return ['days', n * 7];
                        case 'D':
                            return ['days', n];
                        default:
                            throw new Error('Unexpected unit ' + u);
                    }
                } },
            { "name": "short$ebnf$1", "symbols": [(interval_iso_lexer_1.lexerAny.has("T") ? { type: "T" } : T)], "postprocess": id },
            { "name": "short$ebnf$1", "symbols": [], "postprocess": () => null },
            { "name": "short$subexpression$1", "symbols": [(interval_iso_lexer_1.lexerAny.has("H") ? { type: "H" } : H)] },
            { "name": "short$subexpression$1", "symbols": [(interval_iso_lexer_1.lexerAny.has("M") ? { type: "M" } : M)] },
            { "name": "short$subexpression$1", "symbols": [(interval_iso_lexer_1.lexerAny.has("S") ? { type: "S" } : S)] },
            { "name": "short", "symbols": ["short$ebnf$1", "num", "short$subexpression$1"], "postprocess": ([_, n, u]) => {
                    n = parseFloat(n[0].value);
                    u = u[0].type;
                    switch (u) {
                        case 'H':
                            return ['hours', n];
                        case 'M':
                            return ['minutes', n];
                        case 'S':
                            return ['seconds', n];
                        default:
                            throw new Error('Unexpected unit ' + u);
                    }
                } }
        ],
        ParserStart: "num",
    };
    exports.default = grammar;


    /***/ }),
    /* 18 */
    /***/ (function(module, exports, __webpack_require__) {

    Object.defineProperty(exports, "__esModule", { value: true });
    exports.lexerAny = exports.lexer = void 0;
    const moo_1 = __webpack_require__(0);
    // build lexer
    exports.lexer = moo_1.compile({
        int: /\-?\d+(?![\.\d])/,
        float: /\-?(?:(?:\d*\.\d+)|(?:\d+\.\d*))/,
        P: 'P',
        Y: 'Y',
        M: 'M',
        W: 'W',
        D: 'D',
        H: 'H',
        S: 'S',
        T: 'T',
    });
    exports.lexerAny = exports.lexer;


    /***/ }),
    /* 19 */
    /***/ (function(module, exports, __webpack_require__) {

    Object.defineProperty(exports, "__esModule", { value: true });
    exports.toSql = void 0;
    const ast_mapper_1 = __webpack_require__(2);
    const ast_visitor_1 = __webpack_require__(5);
    const utils_1 = __webpack_require__(6);
    const pg_escape_1 = __webpack_require__(20);
    const keywords_1 = __webpack_require__(3);
    const kwSet = new Set(keywords_1.sqlKeywords.map(x => x.toLowerCase()));
    let ret = [];
    function name(nm) {
        return ident(nm.name);
    }
    function ident(nm) {
        // only add quotes if has upper cases, or if it is a keyword.
        const low = nm.toLowerCase();
        if (low === nm && !kwSet.has(low) && /^[a-z][a-z0-9_]*$/.test(low)) {
            return nm;
        }
        return '"' + nm + '"';
    }
    function list(elems, act, addParen) {
        if (addParen) {
            ret.push('(');
        }
        let first = true;
        for (const e of elems) {
            if (!first) {
                ret.push(', ');
            }
            first = false;
            act(e);
        }
        if (addParen) {
            ret.push(')');
        }
    }
    function addConstraint(c, m) {
        ret.push(c.type);
        switch (c.type) {
            case 'foreign key':
                ret.push('(', ...c.localColumns.map(name).join(', '), ') REFERENCES ');
                m.tableRef(c.foreignTable);
                ret.push('(', ...c.foreignColumns.map(name).join(', '), ') ');
                if (c.match) {
                    ret.push(' MATCH ', c.match.toUpperCase());
                }
                if (c.onDelete) {
                    ret.push(' ON DELETE ', c.onDelete);
                }
                if (c.onUpdate) {
                    ret.push(' ON UPDATE ', c.onUpdate);
                }
                break;
            case 'primary key':
            case 'unique':
                if ('columns' in c) {
                    ret.push('(', ...c.columns.map(name).join(', '), ') ');
                }
                break;
            case 'check':
                m.expr(c.expr);
                break;
            case 'not null':
            case 'null':
                break;
            case 'default':
                ret.push(' DEFAULT ');
                m.expr(c.default);
                break;
            case 'add generated':
                ret.push(' GENERATED ');
                visitGenerated(m, c);
                break;
            default:
                throw utils_1.NotSupported.never(c);
        }
    }
    function visitQualifiedName(cs) {
        if (cs.schema) {
            ret.push(ident(cs.schema), '.');
        }
        ret.push(ident(cs.name), ' ');
    }
    function visitOrderBy(m, orderBy) {
        ret.push(' ORDER BY ');
        list(orderBy, e => {
            m.expr(e.by);
            if (e.order) {
                ret.push(' ', e.order);
            }
        }, false);
    }
    function visitSetVal(set) {
        switch (set.type) {
            case 'default':
                ret.push('DEFAULT ');
                break;
            case 'identifier':
                ret.push(set.name);
                break;
            case 'list':
                let first = true;
                for (const v of set.values) {
                    if (!first) {
                        ret.push(', ');
                    }
                    first = false;
                    visitSetVal(v);
                }
                break;
            case 'value':
                ret.push(typeof set.value === 'number' ? set.value.toString() : pg_escape_1.literal(set.value));
                break;
            default:
                throw utils_1.NotSupported.never(set);
        }
    }
    function visitGenerated(m, alter) {
        if (alter.always) {
            ret.push(alter.always.toUpperCase(), ' ');
        }
        ret.push('AS IDENTITY ');
        if (alter.sequence) {
            ret.push('(');
            if (alter.sequence.name) {
                ret.push('SEQUENCE NAME ');
                visitQualifiedName(alter.sequence.name);
                ret.push(' ');
            }
            visitSeqOpts(m, alter.sequence);
            ret.push(') ');
        }
    }
    function visitSeqOpts(m, cs) {
        if (cs.as) {
            ret.push('AS ');
            m.dataType(cs.as);
            ret.push(' ');
        }
        if (typeof cs.incrementBy === 'number') {
            ret.push('INCREMENT BY ', cs.incrementBy.toString(), ' ');
        }
        if (cs.minValue === 'no minvalue') {
            ret.push('NO MINVALUE ');
        }
        if (typeof cs.minValue === 'number') {
            ret.push('MINVALUE ', cs.minValue.toString(), ' ');
        }
        if (cs.maxValue === 'no maxvalue') {
            ret.push('NO MAXVALUE ');
        }
        if (typeof cs.maxValue === 'number') {
            ret.push('MAXVALUE ', cs.maxValue.toString(), ' ');
        }
        if (typeof cs.startWith === 'number') {
            ret.push('START WITH ', cs.startWith.toString(), ' ');
        }
        if (typeof cs.cache === 'number') {
            ret.push('CACHE ', cs.cache.toString(), ' ');
        }
        if (cs.cycle) {
            ret.push(cs.cycle, ' ');
        }
        if (cs.ownedBy === 'none') {
            ret.push('OWNED BY NONE ');
        }
        else if (cs.ownedBy) {
            ret.push('OWNED BY ');
            visitQColumn(cs.ownedBy);
        }
        if ('restart' in cs) {
            if (cs.restart === true) {
                ret.push('RESTART ');
            }
            else if (cs.restart) {
                ret.push('RESTART WITH ', cs.restart.toString(), ' ');
            }
        }
    }
    function visitQColumn(col) {
        if (col.schema) {
            ret.push(ident(col.schema), '.');
        }
        ret.push(ident(col.table), '.', ident(col.column), ' ');
    }
    function join(m, j, tbl) {
        if (!j) {
            tbl();
            return;
        }
        ret.push(j.type, ' ');
        tbl();
        if (j.on) {
            ret.push('ON ');
            m.expr(j.on);
        }
        if (j.using) {
            ret.push('USING (');
            list(j.using, x => ret.push(name(x)), false);
            ret.push(') ');
        }
        ret.push(' ');
    }
    function visitOp(v) {
        if (v.opSchema) {
            ret.push(' operator(', ident(v.opSchema), '.', v.op, ') ');
        }
        else {
            ret.push(' ', v.op, ' ');
        }
    }
    const visitor = ast_visitor_1.astVisitor(m => ({
        addColumn: (...args) => {
            ret.push(' ADD COLUMN ');
            if (args[0].ifNotExists) {
                ret.push('IF NOT EXISTS ');
            }
            m.super().addColumn(...args);
        },
        createExtension: e => {
            ret.push('CREATE EXTENSION ');
            if (e.ifNotExists) {
                ret.push(' IF NOT EXISTS ');
            }
            ret.push(name(e.extension));
            if (!e.from && !e.version && !e.schema) {
                return;
            }
            ret.push(' WITH');
            if (e.schema) {
                ret.push(' SCHEMA ', name(e.schema));
            }
            if (e.version) {
                ret.push(' VERSION ', pg_escape_1.literal(e.version.value));
            }
            if (e.from) {
                ret.push(' FROM ', pg_escape_1.literal(e.from.value));
            }
        },
        tablespace: t => {
            ret.push('TABLESPACE ', name(t.tablespace));
        },
        addConstraint: c => {
            ret.push(' ADD ');
            const cname = c.constraint.constraintName;
            if (cname) {
                ret.push(' CONSTRAINT ', name(cname), ' ');
            }
            addConstraint(c.constraint, m);
        },
        alterColumn: (c, t) => {
            ret.push(' ALTER COLUMN ', name(c.column), ' ');
            m.super().alterColumn(c, t);
        },
        setColumnDefault: (a, t, c) => {
            ret.push(' SET DEFAULT ');
            m.expr(a.default);
            if (a.updateExisting) {
                throw new Error('Not implemented: updateExisting on set column default');
            }
        },
        createEnum: t => {
            ret.push('CREATE TYPE ');
            visitQualifiedName(t.name);
            ret.push(' AS ENUM ');
            list(t.values, x => ret.push(pg_escape_1.literal(x.value)), true);
            ret.push(' ');
        },
        setTableOwner: o => {
            ret.push(' OWNER TO ', name(o.to));
        },
        alterColumnSimple: c => ret.push(c.type),
        alterColumnAddGenerated: (alter) => {
            ret.push(' ADD GENERATED ');
            visitGenerated(m, alter);
        },
        setColumnType: t => {
            ret.push(' SET DATA TYPE ');
            m.dataType(t.dataType);
            ret.push(' ');
        },
        alterTable: t => {
            ret.push('ALTER TABLE ');
            if (t.ifExists) {
                ret.push(' IF EXISTS ');
            }
            if (t.only) {
                ret.push(' ONLY ');
            }
            m.super().alterTable(t);
        },
        array: v => {
            ret.push(v.type === 'array' ? 'ARRAY[' : '(');
            list(v.expressions, e => m.expr(e), false);
            ret.push(v.type === 'array' ? ']' : ')');
        },
        arrayIndex: v => {
            m.expr(v.array);
            ret.push('[');
            m.expr(v.index);
            ret.push('] ');
        },
        expr: e => {
            if (e.type === 'ref') {
                m.ref(e);
                return;
            }
            // lists can become incorrect with an additional set of parentheses
            if (e.type === 'list') {
                m.super().expr(e);
                return;
            }
            // this forces to respect precedence
            // (however, it will introduce lots of unecessary parenthesis)
            ret.push('(');
            m.super().expr(e);
            ret.push(')');
        },
        callOverlay: o => {
            ret.push('OVERLAY(');
            m.expr(o.value);
            ret.push(' PLACING ');
            m.expr(o.placing);
            ret.push(' FROM ');
            m.expr(o.from);
            if (o.for) {
                ret.push(' FOR ');
                m.expr(o.for);
            }
            ret.push(')');
        },
        callSubstring: s => {
            ret.push('SUBSTRING(');
            m.expr(s.value);
            if (s.from) {
                ret.push(' FROM ');
                m.expr(s.from);
            }
            if (s.for) {
                ret.push(' FOR ');
                m.expr(s.for);
            }
            ret.push(')');
        },
        binary: v => {
            m.expr(v.left);
            visitOp(v);
            m.expr(v.right);
        },
        call: v => {
            visitQualifiedName(v.function);
            ret.push('(');
            if (v.distinct) {
                ret.push(v.distinct, ' ');
            }
            list(v.args, e => m.expr(e), false);
            if (v.orderBy) {
                visitOrderBy(m, v.orderBy);
            }
            ret.push(') ');
            if (v.filter) {
                ret.push('filter (where ');
                m.expr(v.filter);
                ret.push(') ');
            }
            if (v.over) {
                ret.push('over (');
                if (v.over.partitionBy) {
                    ret.push('PARTITION BY ');
                    list(v.over.partitionBy, x => m.expr(x), false);
                    ret.push(' ');
                }
                if (v.over.orderBy) {
                    visitOrderBy(m, v.over.orderBy);
                    ret.push(' ');
                }
                ret.push(') ');
            }
        },
        case: c => {
            ret.push('CASE ');
            if (c.value) {
                m.expr(c.value);
            }
            for (const e of c.whens) {
                ret.push(' WHEN ');
                m.expr(e.when);
                ret.push(' THEN ');
                m.expr(e.value);
            }
            if (c.else) {
                ret.push(' ELSE ');
                m.expr(c.else);
            }
            ret.push(' END ');
        },
        cast: c => {
            m.expr(c.operand);
            ret.push('::');
            m.dataType(c.to);
        },
        constant: c => {
            switch (c.type) {
                case 'boolean':
                    ret.push(c.value ? 'true' : 'false');
                    break;
                case 'integer':
                    ret.push(c.value.toString(10));
                    break;
                case 'numeric':
                    ret.push(c.value.toString());
                    if (Number.isInteger(c.value)) {
                        ret.push('.');
                    }
                    break;
                case 'null':
                    ret.push('null');
                    break;
                case 'constant':
                    break;
                case 'string':
                    ret.push(pg_escape_1.literal(c.value));
                    break;
                default:
                    throw utils_1.NotSupported.never(c);
            }
        },
        valueKeyword: v => {
            ret.push(v.keyword, ' ');
        },
        comment: c => {
            ret.push('COMMENT ON ', c.on.type.toUpperCase(), ' ');
            switch (c.on.type) {
                case 'column':
                    visitQColumn(c.on.column);
                    break;
                default:
                    visitQualifiedName(c.on.name);
                    break;
            }
            ret.push(' IS ', pg_escape_1.literal(c.comment), ' ');
        },
        extract: v => {
            ret.push('EXTRACT (', v.field.name.toUpperCase(), ' FROM ');
            m.expr(v.from);
            ret.push(') ');
        },
        createColumn: c => {
            var _a;
            ret.push(name(c.name), ' ');
            m.dataType(c.dataType);
            ret.push(' ');
            if (c.collate) {
                ret.push('COLLATE ');
                visitQualifiedName(c.collate);
            }
            for (const cst of (_a = c.constraints) !== null && _a !== void 0 ? _a : []) {
                m.constraint(cst);
            }
        },
        begin: beg => {
            ret.push('BEGIN ');
            if (beg.isolationLevel) {
                ret.push('ISOLATION LEVEL ', beg.isolationLevel.toUpperCase(), ' ');
            }
            if (beg.writeable) {
                ret.push(beg.writeable.toUpperCase(), ' ');
            }
            if (typeof beg.deferrable === 'boolean') {
                if (!beg.deferrable) {
                    ret.push('NOT ');
                }
                ret.push('DEFERRABLE ');
            }
        },
        alterSequence: cs => {
            ret.push('ALTER SEQUENCE ');
            if (cs.ifExists) {
                ret.push('IF EXISTS ');
            }
            visitQualifiedName(cs.name);
            switch (cs.change.type) {
                case 'set options':
                    visitSeqOpts(m, cs.change);
                    break;
                case 'rename':
                    ret.push('RENAME TO ', name(cs.change.newName), ' ');
                    break;
                case 'set schema':
                    ret.push('SET SCHEMA ', name(cs.change.newSchema), ' ');
                    break;
                case 'owner to':
                    cs.change.owner;
                    ret.push('OWNER TO ', name(cs.change.owner), ' ');
                    break;
                default:
                    throw utils_1.NotSupported.never(cs.change);
            }
        },
        createSequence: cs => {
            ret.push('CREATE ');
            if (cs.temp) {
                ret.push('TEMPORARY ');
            }
            ret.push('SEQUENCE ');
            if (cs.ifNotExists) {
                ret.push('IF NOT EXISTS ');
            }
            visitQualifiedName(cs.name);
            visitSeqOpts(m, cs.options);
        },
        dropTable: val => {
            ret.push('DROP TABLE ');
            if (val.ifExists) {
                ret.push('IF EXISTS ');
            }
            m.tableRef(val.name);
        },
        dropIndex: val => {
            ret.push('DROP INDEX ');
            if (val.concurrently) {
                ret.push('CONCURRENTLY ');
            }
            if (val.ifExists) {
                ret.push('IF EXISTS ');
            }
            m.tableRef(val.name);
        },
        dropSequence: val => {
            ret.push('DROP SEQUENCE ');
            if (val.ifExists) {
                ret.push('IF EXISTS ');
            }
            m.tableRef(val.name);
        },
        constraint: cst => {
            if (cst.constraintName) {
                ret.push(' CONSTRAINT ', name(cst.constraintName), ' ');
            }
            switch (cst.type) {
                case 'not null':
                case 'null':
                case 'primary key':
                case 'unique':
                    ret.push(' ', cst.type, ' ');
                    return;
                case 'default':
                    ret.push(' DEFAULT ');
                    m.expr(cst.default);
                    break;
                case 'check':
                    ret.push(' CHECK ');
                    m.expr(cst.expr);
                    break;
                case 'add generated':
                    ret.push(' GENERATED ');
                    visitGenerated(m, cst);
                    break;
                default:
                    throw utils_1.NotSupported.never(cst);
            }
        },
        do: d => {
            ret.push('DO');
            if (d.language) {
                ret.push(' LANGUAGE ', d.language.name);
            }
            ret.push(' $$', d.code, '$$');
        },
        createFunction: c => {
            ret.push(c.orReplace ? 'CREATE OR REPLACE FUNCTION ' : 'CREATE FUNCTION ');
            visitQualifiedName(c.name);
            // args
            list(c.arguments, a => {
                if (a.mode) {
                    ret.push(a.mode, ' ');
                }
                if (a.name) {
                    ret.push(name(a.name), ' ');
                }
                m.dataType(a.type);
            }, true);
            // ret type
            if (c.returns) {
                switch (c.returns.kind) {
                    case 'table':
                        ret.push(' RETURNS TABLE ');
                        list(c.returns.columns, t => {
                            ret.push(name(t.name), ' ');
                            m.dataType(t.type);
                        }, true);
                        break;
                    case undefined:
                    case null:
                    case 'array':
                        ret.push(' RETURNS ');
                        m.dataType(c.returns);
                        break;
                    default:
                        throw utils_1.NotSupported.never(c.returns);
                }
            }
            ret.push(' AS $$', c.code, '$$');
            // function settings
            if (c.language) {
                ret.push('LANGUAGE ', c.language.name, ' ');
            }
            if (c.purity) {
                ret.push(c.purity.toUpperCase(), ' ');
            }
            if (typeof c.leakproof === 'boolean') {
                ret.push(c.leakproof ? 'LEAKPROOF ' : 'NOT LEAKPROOF ');
            }
            switch (c.onNullInput) {
                case 'call':
                    ret.push('CALLED ON NULL INPUT ');
                    break;
                case 'null':
                    ret.push('RETURNS NULL ON NULL INPUT ');
                    break;
                case 'strict':
                    ret.push('STRICT ');
                    break;
                case null:
                case undefined:
                    break;
                default:
                    throw utils_1.NotSupported.never(c.onNullInput);
            }
        },
        with: w => {
            ret.push('WITH ');
            list(w.bind, b => {
                ret.push(name(b.alias), ' AS (');
                m.statement(b.statement);
                ret.push(') ');
            }, false);
            m.statement(w.in);
        },
        withRecursive: val => {
            ret.push('WITH RECURSIVE ', name(val.alias), '(', ...val.columnNames.map(name).join(', '), ') AS (');
            m.union(val.bind);
            ret.push(') ');
            m.statement(val.in);
        },
        setGlobal: g => {
            ret.push('SET ', name(g.variable), ' = ');
            visitSetVal(g.set);
        },
        setTimezone: g => {
            ret.push('SET TIME ZONE ');
            switch (g.to.type) {
                case 'default':
                case 'local':
                    ret.push(g.to.type.toUpperCase(), ' ');
                    break;
                case 'value':
                    ret.push(typeof g.to.value === 'string'
                        ? pg_escape_1.literal(g.to.value)
                        : g.to.value.toString(10));
                    break;
                case 'interval':
                    ret.push('INTERVAL ', pg_escape_1.literal(g.to.value), ' HOUR TO MINUTE');
                    break;
                default:
                    throw utils_1.NotSupported.never(g.to);
            }
        },
        dataType: d => {
            var _a;
            if ((d === null || d === void 0 ? void 0 : d.kind) === 'array') {
                m.dataType(d.arrayOf);
                ret.push('[]');
                return;
            }
            if (!(d === null || d === void 0 ? void 0 : d.name)) {
                ret.push('unkown');
                return;
            }
            if (d.schema) {
                visitQualifiedName(d);
            }
            else {
                // see https://www.postgresql.org/docs/13/datatype.html
                // & issue https://github.com/oguimbal/pgsql-ast-parser/issues/38
                switch (d.name) {
                    case 'double precision':
                    case 'character varying':
                    case 'bit varying':
                    case 'time without time zone':
                    case 'timestamp without time zone':
                    case 'time with time zone':
                    case 'timestamp with time zone':
                        ret.push(d.name, ' ');
                        break;
                    default:
                        visitQualifiedName(d);
                        break;
                }
            }
            if ((_a = d.config) === null || _a === void 0 ? void 0 : _a.length) {
                list(d.config, v => ret.push(v.toString(10)), true);
            }
        },
        createIndex: c => {
            ret.push(c.unique ? 'CREATE UNIQUE INDEX ' : 'CREATE INDEX ');
            if (c.ifNotExists) {
                ret.push(' IF NOT EXISTS ');
            }
            if (c.indexName) {
                ret.push(name(c.indexName), ' ');
            }
            ret.push('ON ');
            m.tableRef(c.table);
            if (c.using) {
                ret.push('USING ', name(c.using), ' ');
            }
            list(c.expressions, e => {
                m.expr(e.expression);
                ret.push(' ');
                if (e.collate) {
                    ret.push('COLLATE ');
                    visitQualifiedName(e.collate);
                }
                if (e.opclass) {
                    visitQualifiedName(e.opclass);
                }
                if (e.order) {
                    ret.push(e.order, ' ');
                }
                if (e.nulls) {
                    ret.push('nulls ', e.nulls, ' ');
                }
            }, true);
            ret.push(' ');
        },
        createTable: t => {
            var _a;
            ret.push('CREATE ');
            if (t.locality) {
                ret.push(t.locality.toUpperCase(), ' ');
            }
            if (t.temporary) {
                ret.push('TEMPORARY ');
            }
            if (t.unlogged) {
                ret.push('UNLOGGED ');
            }
            ret.push(t.ifNotExists ? 'TABLE IF NOT EXISTS ' : 'TABLE ');
            m.tableRef(t.name);
            ret.push('(');
            list(t.columns, c => {
                switch (c.kind) {
                    case 'column':
                        return m.createColumn(c);
                    case 'like table':
                        return m.likeTable(c);
                    default:
                        throw utils_1.NotSupported.never(c);
                }
            }, false);
            if (t.constraints) {
                ret.push(', ');
                list(t.constraints, c => {
                    const cname = c.constraintName;
                    if (cname) {
                        ret.push('CONSTRAINT ', name(cname), ' ');
                    }
                    addConstraint(c, m);
                }, false);
            }
            ret.push(') ');
            if ((_a = t.inherits) === null || _a === void 0 ? void 0 : _a.length) {
                ret.push(' INHERITS ');
                list(t.inherits, i => visitQualifiedName(i), true);
            }
        },
        likeTable: l => {
            ret.push(' LIKE ');
            m.tableRef(l.like);
            ret.push(' ');
            for (const { verb, option } of l.options) {
                ret.push(verb.toUpperCase(), ' ', option.toUpperCase(), ' ');
            }
        },
        createSchema: s => {
            ret.push(s.ifNotExists ? 'CREATE SCHEMA IF NOT EXISTS ' : 'CREATE SCHEMA ');
            ret.push(name(s.name));
        },
        truncateTable: t => {
            ret.push('TRUNCATE TABLE ');
            let first = true;
            for (const tbl of t.tables) {
                if (!first) {
                    ret.push(', ');
                }
                first = false;
                m.tableRef(tbl);
            }
            if (t.identity) {
                switch (t.identity) {
                    case 'restart':
                        ret.push(' RESTART IDENTITY ');
                        break;
                    case 'continue':
                        ret.push(' CONTINUE IDENTITY ');
                        break;
                }
            }
        },
        delete: t => {
            ret.push('DELETE FROM ');
            m.tableRef(t.from);
            if (t.where) {
                ret.push(' WHERE ');
                m.expr(t.where);
            }
            if (t.returning) {
                ret.push(' RETURNING ');
                list(t.returning, r => m.selectionColumn(r), false);
            }
            ret.push(' ');
        },
        dropColumn: t => {
            ret.push(' DROP COLUMN ');
            if (t.ifExists) {
                ret.push(' IF EXISTS ');
            }
            ret.push(name(t.column));
        },
        from: t => m.super().from(t),
        fromCall: s => {
            join(m, s.join, () => {
                m.call(s);
                if (s.alias) {
                    ret.push(' AS ', name(s.alias), ' ');
                }
            });
            ret.push(' ');
        },
        fromStatement: s => {
            // todo: use 's.db' if defined
            join(m, s.join, () => {
                ret.push('(');
                m.select(s.statement);
                ret.push(') ');
                if (s.alias) {
                    ret.push(' AS ', ident(s.alias));
                    if (s.columnNames) {
                        list(s.columnNames, c => ret.push(name(c)), true);
                    }
                    ret.push(' ');
                }
            });
            ret.push(' ');
        },
        values: s => {
            ret.push('VALUES ');
            list(s.values, vlist => {
                list(vlist, e => {
                    m.expr(e);
                }, true);
            }, false);
        },
        fromTable: s => {
            join(m, s.join, () => {
                m.tableRef(s.name);
                if (s.name.columnNames) {
                    if (!s.name.alias) {
                        throw new Error('Cannot specify aliased column names without an alias');
                    }
                    list(s.name.columnNames, c => ret.push(name(c)), true);
                }
            });
        },
        join: j => {
            throw new Error('Should not happen 💀');
        },
        insert: i => {
            ret.push('INSERT INTO ');
            m.tableRef(i.into);
            if (i.columns) {
                ret.push('(', i.columns.map(name).join(', '), ')');
            }
            ret.push(' ');
            if (i.overriding) {
                ret.push('OVERRIDING ', i.overriding.toUpperCase(), ' VALUE ');
            }
            m.select(i.insert);
            ret.push(' ');
            if (i.onConflict) {
                ret.push('ON CONFLICT ');
                if (i.onConflict.on) {
                    list(i.onConflict.on, e => m.expr(e), true);
                }
                if (i.onConflict.do === 'do nothing') {
                    ret.push(' DO NOTHING');
                }
                else {
                    ret.push(' DO UPDATE SET ');
                    list(i.onConflict.do.sets, s => m.set(s), false);
                }
                ret.push(' ');
            }
            if (i.returning) {
                ret.push(' RETURNING ');
                list(i.returning, r => m.selectionColumn(r), false);
            }
        },
        raise: r => {
            var _a, _b;
            ret.push('RAISE ');
            if (r.level) {
                ret.push(r.level.toUpperCase(), ' ');
            }
            ret.push(pg_escape_1.literal(r.format), ' ');
            if ((_a = r.formatExprs) === null || _a === void 0 ? void 0 : _a.length) {
                ret.push(', ');
                list(r.formatExprs, e => m.expr(e), false);
            }
            if ((_b = r.using) === null || _b === void 0 ? void 0 : _b.length) {
                ret.push(' USING ');
                list(r.using, ({ type, value }) => {
                    ret.push(type.toUpperCase(), '=');
                    m.expr(value);
                }, false);
            }
            ret.push(' ');
        },
        default: () => {
            ret.push(' DEFAULT ');
        },
        member: e => {
            m.expr(e.operand);
            ret.push(e.op);
            ret.push(typeof e.member === 'number'
                ? e.member.toString(10)
                : pg_escape_1.literal(e.member));
        },
        ref: r => {
            if (r.table) {
                visitQualifiedName(r.table);
                ret.push('.');
            }
            ret.push(r.name === '*' ? '*' : ident(r.name));
        },
        parameter: p => {
            ret.push(p.name);
        },
        renameColumn: r => {
            ret.push(' RENAME COLUMN ', name(r.column), ' TO ', name(r.to));
        },
        renameConstraint: r => {
            ret.push(' RENAME CONSTRAINT ', name(r.constraint), ' TO ', name(r.to));
        },
        renameTable: r => {
            ret.push(' RENAME TO ', name(r.to));
        },
        createView: c => {
            ret.push('CREATE ');
            if (c.orReplace) {
                ret.push('OR REPLACE ');
            }
            if (c.temp) {
                ret.push('TEMP ');
            }
            if (c.recursive) {
                ret.push('RECURSIVE ');
            }
            ret.push('VIEW ');
            m.tableRef(c.name);
            if (c.columnNames) {
                list(c.columnNames, c => ret.push(name(c)), true);
            }
            const opts = c.parameters && Object.entries(c.parameters);
            if (opts === null || opts === void 0 ? void 0 : opts.length) {
                ret.push(' WITH ');
                list(opts, ([k, v]) => ret.push(k, '=', v), false);
            }
            ret.push(' AS ');
            m.select(c.query);
            if (c.checkOption) {
                ret.push(' WITH ', c.checkOption.toUpperCase(), ' CHECK OPTION');
            }
        },
        createMaterializedView: c => {
            ret.push('CREATE MATERIALIZED VIEW ');
            if (c.ifNotExists) {
                ret.push('IF NOT EXISTS ');
            }
            m.tableRef(c.name);
            if (c.columnNames) {
                list(c.columnNames, c => ret.push(name(c)), true);
            }
            const opts = c.parameters && Object.entries(c.parameters);
            if (opts === null || opts === void 0 ? void 0 : opts.length) {
                ret.push(' WITH ');
                list(opts, ([k, v]) => ret.push(k, '=', v), false);
            }
            if (c.tablespace) {
                ret.push(' TABLESPACE ', name(c.tablespace));
            }
            ret.push(' AS ');
            m.select(c.query);
            if (typeof c.withData === 'boolean') {
                ret.push(c.withData ? ' WITH DATA' : ' WITH NO DATA');
            }
        },
        select: s => m.super().select(s),
        selection: s => {
            ret.push('SELECT ');
            if (s.distinct) {
                if (typeof s.distinct === 'string') {
                    ret.push(s.distinct.toUpperCase());
                }
                else {
                    ret.push(' DISTINCT ON ');
                    list(s.distinct, v => m.expr(v), true);
                }
                ret.push(' ');
            }
            if (s.columns) {
                list(s.columns, c => m.selectionColumn(c), false);
            }
            ret.push(' ');
            if (s.from) {
                ret.push('FROM ');
                for (const f of s.from) {
                    m.from(f);
                }
                ret.push(' ');
            }
            if (s.where) {
                ret.push('WHERE ');
                m.expr(s.where);
                ret.push(' ');
            }
            if (s.groupBy) {
                ret.push('GROUP BY ');
                list(s.groupBy, e => m.expr(e), false);
                ret.push(' ');
            }
            if (s.orderBy) {
                visitOrderBy(m, s.orderBy);
                ret.push(' ');
            }
            if (s.limit) {
                if (s.limit.offset) {
                    ret.push(`OFFSET `);
                    m.expr(s.limit.offset);
                    if (s.limit.limit) {
                        ret.push(`FETCH `);
                        m.expr(s.limit.limit);
                    }
                }
                else if (s.limit.limit) {
                    ret.push(`LIMIT `);
                    m.expr(s.limit.limit);
                }
            }
        },
        show: s => {
            ret.push('SHOW ', name(s.variable));
        },
        prepare: s => {
            var _a;
            ret.push('PREPARE ', name(s.name));
            if ((_a = s.args) === null || _a === void 0 ? void 0 : _a.length) {
                list(s.args, a => m.dataType(a), true);
            }
            ret.push(' AS ');
            m.statement(s.statement);
        },
        arraySelect: s => {
            ret.push('array(');
            m.select(s.select);
            ret.push(')');
        },
        union: s => {
            ret.push('(');
            m.statement(s.left);
            ret.push(') ', s.type.toUpperCase(), ' ');
            if (s.right.type === 'union' || s.right.type === 'union all') {
                m.union(s.right);
            }
            else {
                ret.push('(');
                m.statement(s.right);
                ret.push(')');
            }
        },
        selectionColumn: c => {
            m.expr(c.expr);
            if (c.alias) {
                ret.push(' AS ', name(c.alias));
            }
            ret.push(' ');
        },
        set: s => {
            ret.push(name(s.column), ' = ');
            if (s.value === 'default') {
                ret.push('default');
            }
            else {
                m.expr(s.value);
            }
            ret.push(' ');
        },
        statement: s => m.super().statement(s),
        tableRef: r => {
            visitQualifiedName(r);
            if (r.alias) {
                ret.push(' AS ', ident(r.alias));
            }
            ret.push(' ');
        },
        ternary: t => {
            m.expr(t.value);
            ret.push(' ', t.op, ' ');
            m.expr(t.lo);
            ret.push(' AND ');
            m.expr(t.hi);
            ret.push(' ');
        },
        transaction: t => {
            ret.push(t.type);
        },
        unary: t => {
            switch (t.op) {
                case '+':
                case '-':
                    // prefix ops
                    visitOp(t);
                    m.expr(t.operand);
                    break;
                case 'NOT':
                    // prefix ops
                    ret.push(t.op);
                    ret.push(' ');
                    m.expr(t.operand);
                    break;
                default:
                    // postfix ops
                    m.expr(t.operand);
                    ret.push(' ');
                    ret.push(t.op);
            }
        },
        update: u => {
            ret.push('UPDATE ');
            m.tableRef(u.table);
            ret.push(' SET ');
            list(u.sets, s => m.set(s), false);
            ret.push(' ');
            if (u.where) {
                ret.push('WHERE ');
                m.expr(u.where);
                ret.push(' ');
            }
            if (u.returning) {
                ret.push(' RETURNING ');
                list(u.returning, r => m.selectionColumn(r), false);
                ret.push(' ');
            }
        },
    }));
    exports.toSql = {};
    const proto = ast_mapper_1.AstDefaultMapper.prototype;
    for (const k of Object.getOwnPropertyNames(proto)) {
        const orig = proto[k];
        if (k === 'constructor' || k === 'super' || typeof orig !== 'function') {
            continue;
        }
        exports.toSql[k] = function (...args) {
            try {
                visitor[k].apply(visitor, args);
                return ret.join('').trim();
            }
            finally {
                ret = [];
            }
        };
    }


    /***/ }),
    /* 20 */
    /***/ (function(module, exports, __webpack_require__) {

    // stolen from https://github.com/segmentio/pg-escape/blob/master/index.js
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.literal = void 0;
    function literal(val) {
        if (null == val)
            return 'NULL';
        if (Array.isArray(val)) {
            var vals = val.map(literal);
            return "(" + vals.join(", ") + ")";
        }
        var backslash = ~val.indexOf('\\');
        var prefix = backslash ? 'E' : '';
        val = val.replace(/'/g, "''");
        val = val.replace(/\\/g, '\\\\');
        return prefix + "'" + val + "'";
    }
    exports.literal = literal;


    /***/ }),
    /* 21 */
    /***/ (function(module, exports, __webpack_require__) {

    Object.defineProperty(exports, "__esModule", { value: true });
    exports.locationOf = void 0;
    function locationOf(node) {
        const n = node._location;
        if (!n) {
            throw new Error('This statement has not been parsed using location tracking (which has a small performance hit). ');
        }
        return n;
    }
    exports.locationOf = locationOf;


    /***/ })
    /******/ ])));

    });

    var postgres = createCommonjsModule(function (module, exports) {
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.PostgreSQLParser = void 0;

    class PostgreSQLParser {
        constructor() { }
        // Auto Increment에 해당하는 타입인지 체크
        // postgres의 경우에는 시퀀스를 자동 생성해주는 타입
        checkAutoIncrement(typename) {
            return ["serial", "serial8", "bigserial"].includes(typename.toLowerCase());
        }
        // 데이터베이스 타입 일반화
        normalizeDbType(typename) {
            if (typename.toLowerCase() === "serial") {
                return "int";
            }
            else if (["serial8", "bigserial"].includes(typename.toLowerCase())) {
                return "int8";
            }
            else {
                return typename;
            }
        }
        // 데이터베이스의 컬럼타입을 타입스크립트 타입으로 변환
        convertDbTypeToTsType(typename) {
            if (["text", "varchar"].includes(typename.toLocaleLowerCase())) {
                return "string";
            }
            else if (["bool", "boolean"].includes(typename.toLocaleLowerCase())) {
                return "boolean";
            }
            else if (["int", "int2", "int4", "int8", "bigint"].includes(typename.toLocaleLowerCase())) {
                return "number";
            }
            else if (["timestamp", "timestamptz", "date"].includes(typename.toLocaleLowerCase())) {
                return "Date";
            }
            else if (typename[0] === "_") {
                return this.convertDbTypeToTsType(typename.slice(1)) + "[]";
            }
            else {
                return "string";
            }
        }
        // 파싱
        parse(sql) {
            var _a, _b;
            const parsedList = pgsqlAstParser.parse(sql);
            const tables = [];
            for (const node of parsedList) {
                switch (node.type) {
                    case "create table":
                        tables.push(this.parseTable(node));
                        break;
                    case "comment":
                        this.parseComment(node, tables);
                        break;
                    case "alter table":
                        if (((_b = (_a = node === null || node === void 0 ? void 0 : node.change) === null || _a === void 0 ? void 0 : _a.constraint) === null || _b === void 0 ? void 0 : _b.type) ===
                            "primary key") {
                            this.parsePrimaryKey(node, tables);
                        }
                        break;
                    default:
                        console.log("예외 케이스");
                        console.log(node);
                        break;
                }
            }
            return tables;
        }
        // 테이블 구성 분석
        parseTable(node) {
            var _a, _b, _c, _d;
            const table = {
                tableName: (_a = node === null || node === void 0 ? void 0 : node.name) === null || _a === void 0 ? void 0 : _a.name,
                columns: [],
            };
            for (const nodeOfTable of node.columns) {
                switch (nodeOfTable.kind) {
                    case "column":
                        const columnName = (_b = nodeOfTable === null || nodeOfTable === void 0 ? void 0 : nodeOfTable.name) === null || _b === void 0 ? void 0 : _b.name;
                        const dbType = (_c = nodeOfTable === null || nodeOfTable === void 0 ? void 0 : nodeOfTable.dataType) === null || _c === void 0 ? void 0 : _c.name;
                        const normalizedDbType = this.normalizeDbType(dbType);
                        const isAutoIncrement = this.checkAutoIncrement(dbType);
                        let isNotNull = false;
                        let isPrimaryKey = false;
                        let defaultValue = null;
                        for (const nodeOfConstraints of nodeOfTable === null || nodeOfTable === void 0 ? void 0 : nodeOfTable.constraints) {
                            switch (nodeOfConstraints.type) {
                                case "not null":
                                    isNotNull = true;
                                    break;
                                case "default":
                                    defaultValue = (_d = nodeOfConstraints === null || nodeOfConstraints === void 0 ? void 0 : nodeOfConstraints.default) === null || _d === void 0 ? void 0 : _d.keyword;
                            }
                        }
                        const column = {
                            name: columnName,
                            dbType: normalizedDbType,
                            tsType: this.convertDbTypeToTsType(normalizedDbType),
                            isNotNull,
                            isPrimaryKey,
                            default: defaultValue,
                            isAutoIncrement,
                            comment: "",
                        };
                        table.columns.push(column);
                        break;
                }
            }
            return table;
        }
        // 코멘트 분석
        parseComment(node, tables) {
            var _a, _b, _c, _d, _e, _f;
            const commentContents = node === null || node === void 0 ? void 0 : node.comment;
            const commentTargetTableName = (_b = (_a = node === null || node === void 0 ? void 0 : node.on) === null || _a === void 0 ? void 0 : _a.column) === null || _b === void 0 ? void 0 : _b.table;
            const commentTargetColumnName = (_d = (_c = node === null || node === void 0 ? void 0 : node.on) === null || _c === void 0 ? void 0 : _c.column) === null || _d === void 0 ? void 0 : _d.column;
            const commenttargetColumn = (_f = (_e = tables
                .find((e) => e.tableName === commentTargetTableName)) === null || _e === void 0 ? void 0 : _e.columns) === null || _f === void 0 ? void 0 : _f.find((e) => e.name === commentTargetColumnName);
            if (commenttargetColumn) {
                commenttargetColumn.comment = commentContents;
            }
        }
        // 기본키 분석
        parsePrimaryKey(node, tables) {
            var _a, _b, _c, _d, _e, _f, _g, _h, _j;
            const pkTargetColumnNames = (_c = (_b = (_a = node === null || node === void 0 ? void 0 : node.change) === null || _a === void 0 ? void 0 : _a.constraint) === null || _b === void 0 ? void 0 : _b.columns) === null || _c === void 0 ? void 0 : _c.map((e) => e === null || e === void 0 ? void 0 : e.name);
            const pkTargetTableName = (_d = node === null || node === void 0 ? void 0 : node.table) === null || _d === void 0 ? void 0 : _d.name;
            // not use
            (_g = (_f = (_e = node === null || node === void 0 ? void 0 : node.change) === null || _e === void 0 ? void 0 : _e.constraint) === null || _f === void 0 ? void 0 : _f.constraintName) === null || _g === void 0 ? void 0 : _g.name;
            (_j = (_h = tables
                .find((e) => e.tableName === pkTargetTableName)) === null || _h === void 0 ? void 0 : _h.columns) === null || _j === void 0 ? void 0 : _j.forEach((e) => {
                if (pkTargetColumnNames.includes(e.name)) {
                    e.isPrimaryKey = true;
                }
            });
        }
    }
    exports.PostgreSQLParser = PostgreSQLParser;

    });

    var strings = createCommonjsModule(function (module, exports) {
    /**
     * @license
     * Copyright Google LLC All Rights Reserved.
     *
     * Use of this source code is governed by an MIT-style license that can be
     * found in the LICENSE file at https://angular.io/license
     */
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.levenshtein = exports.capitalize = exports.underscore = exports.classify = exports.camelize = exports.dasherize = exports.decamelize = void 0;
    const STRING_DASHERIZE_REGEXP = /[ _]/g;
    const STRING_DECAMELIZE_REGEXP = /([a-z\d])([A-Z])/g;
    const STRING_CAMELIZE_REGEXP = /(-|_|\.|\s)+(.)?/g;
    const STRING_UNDERSCORE_REGEXP_1 = /([a-z\d])([A-Z]+)/g;
    const STRING_UNDERSCORE_REGEXP_2 = /-|\s+/g;
    /**
     * Converts a camelized string into all lower case separated by underscores.
     *
     ```javascript
     decamelize('innerHTML');         // 'inner_html'
     decamelize('action_name');       // 'action_name'
     decamelize('css-class-name');    // 'css-class-name'
     decamelize('my favorite items'); // 'my favorite items'
     ```

     @method decamelize
     @param {String} str The string to decamelize.
     @return {String} the decamelized string.
     */
    function decamelize(str) {
        return str.replace(STRING_DECAMELIZE_REGEXP, '$1_$2').toLowerCase();
    }
    exports.decamelize = decamelize;
    /**
     Replaces underscores, spaces, or camelCase with dashes.

     ```javascript
     dasherize('innerHTML');         // 'inner-html'
     dasherize('action_name');       // 'action-name'
     dasherize('css-class-name');    // 'css-class-name'
     dasherize('my favorite items'); // 'my-favorite-items'
     ```

     @method dasherize
     @param {String} str The string to dasherize.
     @return {String} the dasherized string.
     */
    function dasherize(str) {
        return decamelize(str).replace(STRING_DASHERIZE_REGEXP, '-');
    }
    exports.dasherize = dasherize;
    /**
     Returns the lowerCamelCase form of a string.

     ```javascript
     camelize('innerHTML');          // 'innerHTML'
     camelize('action_name');        // 'actionName'
     camelize('css-class-name');     // 'cssClassName'
     camelize('my favorite items');  // 'myFavoriteItems'
     camelize('My Favorite Items');  // 'myFavoriteItems'
     ```

     @method camelize
     @param {String} str The string to camelize.
     @return {String} the camelized string.
     */
    function camelize(str) {
        return str
            .replace(STRING_CAMELIZE_REGEXP, (_match, _separator, chr) => {
            return chr ? chr.toUpperCase() : '';
        })
            .replace(/^([A-Z])/, (match) => match.toLowerCase());
    }
    exports.camelize = camelize;
    /**
     Returns the UpperCamelCase form of a string.

     ```javascript
     'innerHTML'.classify();          // 'InnerHTML'
     'action_name'.classify();        // 'ActionName'
     'css-class-name'.classify();     // 'CssClassName'
     'my favorite items'.classify();  // 'MyFavoriteItems'
     ```

     @method classify
     @param {String} str the string to classify
     @return {String} the classified string
     */
    function classify(str) {
        return str
            .split('.')
            .map((part) => capitalize(camelize(part)))
            .join('.');
    }
    exports.classify = classify;
    /**
     More general than decamelize. Returns the lower\_case\_and\_underscored
     form of a string.

     ```javascript
     'innerHTML'.underscore();          // 'inner_html'
     'action_name'.underscore();        // 'action_name'
     'css-class-name'.underscore();     // 'css_class_name'
     'my favorite items'.underscore();  // 'my_favorite_items'
     ```

     @method underscore
     @param {String} str The string to underscore.
     @return {String} the underscored string.
     */
    function underscore(str) {
        return str
            .replace(STRING_UNDERSCORE_REGEXP_1, '$1_$2')
            .replace(STRING_UNDERSCORE_REGEXP_2, '_')
            .toLowerCase();
    }
    exports.underscore = underscore;
    /**
     Returns the Capitalized form of a string

     ```javascript
     'innerHTML'.capitalize()         // 'InnerHTML'
     'action_name'.capitalize()       // 'Action_name'
     'css-class-name'.capitalize()    // 'Css-class-name'
     'my favorite items'.capitalize() // 'My favorite items'
     ```

     @method capitalize
     @param {String} str The string to capitalize.
     @return {String} The capitalized string.
     */
    function capitalize(str) {
        return str.charAt(0).toUpperCase() + str.substr(1);
    }
    exports.capitalize = capitalize;
    /**
     * Calculate the levenshtein distance of two strings.
     * See https://en.wikipedia.org/wiki/Levenshtein_distance.
     * Based off https://gist.github.com/andrei-m/982927 (for using the faster dynamic programming
     * version).
     *
     * @param a String a.
     * @param b String b.
     * @returns A number that represents the distance between the two strings. The greater the number
     *   the more distant the strings are from each others.
     */
    function levenshtein(a, b) {
        if (a.length == 0) {
            return b.length;
        }
        if (b.length == 0) {
            return a.length;
        }
        const matrix = [];
        // increment along the first column of each row
        for (let i = 0; i <= b.length; i++) {
            matrix[i] = [i];
        }
        // increment each column in the first row
        for (let j = 0; j <= a.length; j++) {
            matrix[0][j] = j;
        }
        // Fill in the rest of the matrix
        for (let i = 1; i <= b.length; i++) {
            for (let j = 1; j <= a.length; j++) {
                if (b.charAt(i - 1) == a.charAt(j - 1)) {
                    matrix[i][j] = matrix[i - 1][j - 1];
                }
                else {
                    matrix[i][j] = Math.min(matrix[i - 1][j - 1] + 1, // substitution
                    matrix[i][j - 1] + 1, // insertion
                    matrix[i - 1][j] + 1);
                }
            }
        }
        return matrix[b.length][a.length];
    }
    exports.levenshtein = levenshtein;
    });

    const preserveCamelCase = (string, locale) => {
    	let isLastCharLower = false;
    	let isLastCharUpper = false;
    	let isLastLastCharUpper = false;

    	for (let i = 0; i < string.length; i++) {
    		const character = string[i];

    		if (isLastCharLower && /[\p{Lu}]/u.test(character)) {
    			string = string.slice(0, i) + '-' + string.slice(i);
    			isLastCharLower = false;
    			isLastLastCharUpper = isLastCharUpper;
    			isLastCharUpper = true;
    			i++;
    		} else if (isLastCharUpper && isLastLastCharUpper && /[\p{Ll}]/u.test(character)) {
    			string = string.slice(0, i - 1) + '-' + string.slice(i - 1);
    			isLastLastCharUpper = isLastCharUpper;
    			isLastCharUpper = false;
    			isLastCharLower = true;
    		} else {
    			isLastCharLower = character.toLocaleLowerCase(locale) === character && character.toLocaleUpperCase(locale) !== character;
    			isLastLastCharUpper = isLastCharUpper;
    			isLastCharUpper = character.toLocaleUpperCase(locale) === character && character.toLocaleLowerCase(locale) !== character;
    		}
    	}

    	return string;
    };

    const preserveConsecutiveUppercase = input => {
    	return input.replace(/^[\p{Lu}](?![\p{Lu}])/gu, m1 => m1.toLowerCase());
    };

    const postProcess = (input, options) => {
    	return input.replace(/[_.\- ]+([\p{Alpha}\p{N}_]|$)/gu, (_, p1) => p1.toLocaleUpperCase(options.locale))
    		.replace(/\d+([\p{Alpha}\p{N}_]|$)/gu, m => m.toLocaleUpperCase(options.locale));
    };

    const camelCase = (input, options) => {
    	if (!(typeof input === 'string' || Array.isArray(input))) {
    		throw new TypeError('Expected the input to be `string | string[]`');
    	}

    	options = {
    		pascalCase: false,
    		preserveConsecutiveUppercase: false,
    		...options
    	};

    	if (Array.isArray(input)) {
    		input = input.map(x => x.trim())
    			.filter(x => x.length)
    			.join('-');
    	} else {
    		input = input.trim();
    	}

    	if (input.length === 0) {
    		return '';
    	}

    	if (input.length === 1) {
    		return options.pascalCase ? input.toLocaleUpperCase(options.locale) : input.toLocaleLowerCase(options.locale);
    	}

    	const hasUpperCase = input !== input.toLocaleLowerCase(options.locale);

    	if (hasUpperCase) {
    		input = preserveCamelCase(input, options.locale);
    	}

    	input = input.replace(/^[_.\- ]+/, '');

    	if (options.preserveConsecutiveUppercase) {
    		input = preserveConsecutiveUppercase(input);
    	} else {
    		input = input.toLocaleLowerCase();
    	}

    	if (options.pascalCase) {
    		input = input.charAt(0).toLocaleUpperCase(options.locale) + input.slice(1);
    	}

    	return postProcess(input, options);
    };

    var camelcase = camelCase;
    // TODO: Remove this for the next major release
    var _default = camelCase;
    camelcase.default = _default;

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */

    var __assign = function() {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };

    /**
     * Source: ftp://ftp.unicode.org/Public/UCD/latest/ucd/SpecialCasing.txt
     */
    /**
     * Lower case as a function.
     */
    function lowerCase(str) {
        return str.toLowerCase();
    }

    // Support camel case ("camelCase" -> "camel Case" and "CAMELCase" -> "CAMEL Case").
    var DEFAULT_SPLIT_REGEXP = [/([a-z0-9])([A-Z])/g, /([A-Z])([A-Z][a-z])/g];
    // Remove all non-word characters.
    var DEFAULT_STRIP_REGEXP = /[^A-Z0-9]+/gi;
    /**
     * Normalize the string into something other libraries can manipulate easier.
     */
    function noCase(input, options) {
        if (options === void 0) { options = {}; }
        var _a = options.splitRegexp, splitRegexp = _a === void 0 ? DEFAULT_SPLIT_REGEXP : _a, _b = options.stripRegexp, stripRegexp = _b === void 0 ? DEFAULT_STRIP_REGEXP : _b, _c = options.transform, transform = _c === void 0 ? lowerCase : _c, _d = options.delimiter, delimiter = _d === void 0 ? " " : _d;
        var result = replace(replace(input, splitRegexp, "$1\0$2"), stripRegexp, "\0");
        var start = 0;
        var end = result.length;
        // Trim the delimiter from around the output string.
        while (result.charAt(start) === "\0")
            start++;
        while (result.charAt(end - 1) === "\0")
            end--;
        // Transform each token independently.
        return result.slice(start, end).split("\0").map(transform).join(delimiter);
    }
    /**
     * Replace `re` in the input string with the replacement value.
     */
    function replace(input, re, value) {
        if (re instanceof RegExp)
            return input.replace(re, value);
        return re.reduce(function (input, re) { return input.replace(re, value); }, input);
    }

    function dotCase(input, options) {
        if (options === void 0) { options = {}; }
        return noCase(input, __assign({ delimiter: "." }, options));
    }

    function snakeCase(input, options) {
        if (options === void 0) { options = {}; }
        return dotCase(input, __assign({ delimiter: "_" }, options));
    }

    var dist_es2015 = /*#__PURE__*/Object.freeze({
        __proto__: null,
        snakeCase: snakeCase
    });

    var snake_case_1 = /*@__PURE__*/getAugmentedNamespace(dist_es2015);

    var name = createCommonjsModule(function (module, exports) {
    var __importDefault = (commonjsGlobal && commonjsGlobal.__importDefault) || function (mod) {
        return (mod && mod.__esModule) ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.convertNameCaseByOption = exports.toSnakeCase = exports.toCamelCase = exports.toPascalCase = void 0;

    const camelcase_1 = __importDefault(camelcase);

    const lowercased = (name) => {
        const classifiedName = strings.classify(name);
        return classifiedName.charAt(0).toLowerCase() + classifiedName.slice(1);
    };
    // 식별자를 파스칼케이스로 변환
    function toPascalCase(name) {
        return camelcase_1.default(strings.classify(name), { pascalCase: true });
    }
    exports.toPascalCase = toPascalCase;
    // 식별자를 카멜케이스로 변환
    function toCamelCase(name) {
        return camelcase_1.default(lowercased(name));
    }
    exports.toCamelCase = toCamelCase;
    // 식별자를 스네이크케이스로 변환
    function toSnakeCase(name) {
        return snake_case_1.snakeCase(name);
    }
    exports.toSnakeCase = toSnakeCase;
    function convertNameCaseByOption(option, name) {
        switch (option) {
            case "CAMEL":
                return toCamelCase(name);
            case "SNAKE":
                return toSnakeCase(name);
            case "PASCAL":
                return toPascalCase(name);
            case "NONE":
                return name;
            default:
                return name;
        }
    }
    exports.convertNameCaseByOption = convertNameCaseByOption;

    });

    var tab = createCommonjsModule(function (module, exports) {
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.TAB = void 0;
    exports.TAB = "    ";

    });

    var sequelizeTypescript = createCommonjsModule(function (module, exports) {
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SequelizeTypescriptEmitter = void 0;


    const importTemplate = `
import { literal } from 'sequelize';
import {
  Model,
  Table,
  Column,
  HasMany,
  CreatedAt,
  UpdatedAt,
  DeletedAt,
  DataType,
  Sequelize,
  HasOne,
  DefaultScope,
  Scopes,
  Index,
  createIndexDecorator,
  ForeignKey,
  BelongsTo,
  PrimaryKey,
  AllowNull,
  Default,
  Comment,
} from 'sequelize-typescript';
`;
    class SequelizeTypescriptEmitter {
        dbTypeToDataType(dbtype) {
            if (["varchar", "text", "char"].includes(dbtype.toLowerCase())) {
                return "DataType.STRING";
            }
            else if (["bool", "boolean"].includes(dbtype.toLowerCase())) {
                return "DataType.BOOLEAN";
            }
            else if (["uuid"].includes(dbtype.toLowerCase())) {
                return "DataType.UUID";
            }
            else if (["int", "int2", "int4", "int8", "bigint"].includes(dbtype.toLowerCase())) {
                return "DataType.INTEGER";
            }
            else {
                return `'${dbtype}'`;
            }
        }
        // 컬럼 필드 코드 생성
        generateColumn(column) {
            var _a;
            const columnFieldName = name.convertNameCaseByOption(this.option.outputFieldNameCase, column.name);
            const primaryKey = column.isPrimaryKey
                ? `primaryKey: true, \n${tab.TAB}${tab.TAB}`
                : "";
            const autoIncrement = column.isAutoIncrement
                ? `autoIncrement: true, \n${tab.TAB}${tab.TAB}`
                : "";
            const defaultValue = column.default
                ? `\n${tab.TAB}${tab.TAB}default: literal("${column.default.replace('"', '\\"')}"),`
                : "";
            const dataType = this.dbTypeToDataType(column.dbType);
            return `    @Comment(\`${(_a = column.comment) !== null && _a !== void 0 ? _a : ""}\`)
    @Column({
        ${primaryKey}${autoIncrement}field: '${columnFieldName}',
        type: ${dataType}, 
        allowNull: ${!column.isNotNull},${defaultValue}
    })
    ${columnFieldName}: ${column.tsType};`;
        }
        // 테이블 클래스 코드 생성
        generateTableCode(table) {
            const tableClassName = name.convertNameCaseByOption(this.option.outputClassNameCase, table.tableName);
            return `@Table({
    tableName: '${table.tableName}',
    paranoid: false,
    freezeTableName: true,
    timestamps: false,
    createdAt: false,
    updatedAt: false,
    deletedAt: false,
    // schema: 'cp',
})
export class ${tableClassName} extends Model {
${table.columns.map((column) => this.generateColumn(column)).join("\n\n")}
}`;
        }
        emit(tables, option = {
            sourceSplit: true,
            outputClassNameCase: "PASCAL",
            outputFieldNameCase: "CAMEL",
        }) {
            this.option = option;
            if (option === null || option === void 0 ? void 0 : option.sourceSplit) {
                return tables.map((table) => ({
                    sourceName: table.tableName,
                    source: importTemplate + "\n" + this.generateTableCode(table),
                }));
            }
            else {
                return [
                    {
                        sourceName: "all",
                        source: importTemplate +
                            "\n" +
                            tables
                                .map((table) => this.generateTableCode(table))
                                .join("\n\n"),
                    },
                ];
            }
        }
    }
    exports.SequelizeTypescriptEmitter = SequelizeTypescriptEmitter;

    });

    var BigInteger = createCommonjsModule(function (module) {
    var bigInt = (function (undefined$1) {

        var BASE = 1e7,
            LOG_BASE = 7,
            MAX_INT = 9007199254740992,
            MAX_INT_ARR = smallToArray(MAX_INT),
            DEFAULT_ALPHABET = "0123456789abcdefghijklmnopqrstuvwxyz";

        var supportsNativeBigInt = typeof BigInt === "function";

        function Integer(v, radix, alphabet, caseSensitive) {
            if (typeof v === "undefined") return Integer[0];
            if (typeof radix !== "undefined") return +radix === 10 && !alphabet ? parseValue(v) : parseBase(v, radix, alphabet, caseSensitive);
            return parseValue(v);
        }

        function BigInteger(value, sign) {
            this.value = value;
            this.sign = sign;
            this.isSmall = false;
        }
        BigInteger.prototype = Object.create(Integer.prototype);

        function SmallInteger(value) {
            this.value = value;
            this.sign = value < 0;
            this.isSmall = true;
        }
        SmallInteger.prototype = Object.create(Integer.prototype);

        function NativeBigInt(value) {
            this.value = value;
        }
        NativeBigInt.prototype = Object.create(Integer.prototype);

        function isPrecise(n) {
            return -MAX_INT < n && n < MAX_INT;
        }

        function smallToArray(n) { // For performance reasons doesn't reference BASE, need to change this function if BASE changes
            if (n < 1e7)
                return [n];
            if (n < 1e14)
                return [n % 1e7, Math.floor(n / 1e7)];
            return [n % 1e7, Math.floor(n / 1e7) % 1e7, Math.floor(n / 1e14)];
        }

        function arrayToSmall(arr) { // If BASE changes this function may need to change
            trim(arr);
            var length = arr.length;
            if (length < 4 && compareAbs(arr, MAX_INT_ARR) < 0) {
                switch (length) {
                    case 0: return 0;
                    case 1: return arr[0];
                    case 2: return arr[0] + arr[1] * BASE;
                    default: return arr[0] + (arr[1] + arr[2] * BASE) * BASE;
                }
            }
            return arr;
        }

        function trim(v) {
            var i = v.length;
            while (v[--i] === 0);
            v.length = i + 1;
        }

        function createArray(length) { // function shamelessly stolen from Yaffle's library https://github.com/Yaffle/BigInteger
            var x = new Array(length);
            var i = -1;
            while (++i < length) {
                x[i] = 0;
            }
            return x;
        }

        function truncate(n) {
            if (n > 0) return Math.floor(n);
            return Math.ceil(n);
        }

        function add(a, b) { // assumes a and b are arrays with a.length >= b.length
            var l_a = a.length,
                l_b = b.length,
                r = new Array(l_a),
                carry = 0,
                base = BASE,
                sum, i;
            for (i = 0; i < l_b; i++) {
                sum = a[i] + b[i] + carry;
                carry = sum >= base ? 1 : 0;
                r[i] = sum - carry * base;
            }
            while (i < l_a) {
                sum = a[i] + carry;
                carry = sum === base ? 1 : 0;
                r[i++] = sum - carry * base;
            }
            if (carry > 0) r.push(carry);
            return r;
        }

        function addAny(a, b) {
            if (a.length >= b.length) return add(a, b);
            return add(b, a);
        }

        function addSmall(a, carry) { // assumes a is array, carry is number with 0 <= carry < MAX_INT
            var l = a.length,
                r = new Array(l),
                base = BASE,
                sum, i;
            for (i = 0; i < l; i++) {
                sum = a[i] - base + carry;
                carry = Math.floor(sum / base);
                r[i] = sum - carry * base;
                carry += 1;
            }
            while (carry > 0) {
                r[i++] = carry % base;
                carry = Math.floor(carry / base);
            }
            return r;
        }

        BigInteger.prototype.add = function (v) {
            var n = parseValue(v);
            if (this.sign !== n.sign) {
                return this.subtract(n.negate());
            }
            var a = this.value, b = n.value;
            if (n.isSmall) {
                return new BigInteger(addSmall(a, Math.abs(b)), this.sign);
            }
            return new BigInteger(addAny(a, b), this.sign);
        };
        BigInteger.prototype.plus = BigInteger.prototype.add;

        SmallInteger.prototype.add = function (v) {
            var n = parseValue(v);
            var a = this.value;
            if (a < 0 !== n.sign) {
                return this.subtract(n.negate());
            }
            var b = n.value;
            if (n.isSmall) {
                if (isPrecise(a + b)) return new SmallInteger(a + b);
                b = smallToArray(Math.abs(b));
            }
            return new BigInteger(addSmall(b, Math.abs(a)), a < 0);
        };
        SmallInteger.prototype.plus = SmallInteger.prototype.add;

        NativeBigInt.prototype.add = function (v) {
            return new NativeBigInt(this.value + parseValue(v).value);
        };
        NativeBigInt.prototype.plus = NativeBigInt.prototype.add;

        function subtract(a, b) { // assumes a and b are arrays with a >= b
            var a_l = a.length,
                b_l = b.length,
                r = new Array(a_l),
                borrow = 0,
                base = BASE,
                i, difference;
            for (i = 0; i < b_l; i++) {
                difference = a[i] - borrow - b[i];
                if (difference < 0) {
                    difference += base;
                    borrow = 1;
                } else borrow = 0;
                r[i] = difference;
            }
            for (i = b_l; i < a_l; i++) {
                difference = a[i] - borrow;
                if (difference < 0) difference += base;
                else {
                    r[i++] = difference;
                    break;
                }
                r[i] = difference;
            }
            for (; i < a_l; i++) {
                r[i] = a[i];
            }
            trim(r);
            return r;
        }

        function subtractAny(a, b, sign) {
            var value;
            if (compareAbs(a, b) >= 0) {
                value = subtract(a, b);
            } else {
                value = subtract(b, a);
                sign = !sign;
            }
            value = arrayToSmall(value);
            if (typeof value === "number") {
                if (sign) value = -value;
                return new SmallInteger(value);
            }
            return new BigInteger(value, sign);
        }

        function subtractSmall(a, b, sign) { // assumes a is array, b is number with 0 <= b < MAX_INT
            var l = a.length,
                r = new Array(l),
                carry = -b,
                base = BASE,
                i, difference;
            for (i = 0; i < l; i++) {
                difference = a[i] + carry;
                carry = Math.floor(difference / base);
                difference %= base;
                r[i] = difference < 0 ? difference + base : difference;
            }
            r = arrayToSmall(r);
            if (typeof r === "number") {
                if (sign) r = -r;
                return new SmallInteger(r);
            } return new BigInteger(r, sign);
        }

        BigInteger.prototype.subtract = function (v) {
            var n = parseValue(v);
            if (this.sign !== n.sign) {
                return this.add(n.negate());
            }
            var a = this.value, b = n.value;
            if (n.isSmall)
                return subtractSmall(a, Math.abs(b), this.sign);
            return subtractAny(a, b, this.sign);
        };
        BigInteger.prototype.minus = BigInteger.prototype.subtract;

        SmallInteger.prototype.subtract = function (v) {
            var n = parseValue(v);
            var a = this.value;
            if (a < 0 !== n.sign) {
                return this.add(n.negate());
            }
            var b = n.value;
            if (n.isSmall) {
                return new SmallInteger(a - b);
            }
            return subtractSmall(b, Math.abs(a), a >= 0);
        };
        SmallInteger.prototype.minus = SmallInteger.prototype.subtract;

        NativeBigInt.prototype.subtract = function (v) {
            return new NativeBigInt(this.value - parseValue(v).value);
        };
        NativeBigInt.prototype.minus = NativeBigInt.prototype.subtract;

        BigInteger.prototype.negate = function () {
            return new BigInteger(this.value, !this.sign);
        };
        SmallInteger.prototype.negate = function () {
            var sign = this.sign;
            var small = new SmallInteger(-this.value);
            small.sign = !sign;
            return small;
        };
        NativeBigInt.prototype.negate = function () {
            return new NativeBigInt(-this.value);
        };

        BigInteger.prototype.abs = function () {
            return new BigInteger(this.value, false);
        };
        SmallInteger.prototype.abs = function () {
            return new SmallInteger(Math.abs(this.value));
        };
        NativeBigInt.prototype.abs = function () {
            return new NativeBigInt(this.value >= 0 ? this.value : -this.value);
        };


        function multiplyLong(a, b) {
            var a_l = a.length,
                b_l = b.length,
                l = a_l + b_l,
                r = createArray(l),
                base = BASE,
                product, carry, i, a_i, b_j;
            for (i = 0; i < a_l; ++i) {
                a_i = a[i];
                for (var j = 0; j < b_l; ++j) {
                    b_j = b[j];
                    product = a_i * b_j + r[i + j];
                    carry = Math.floor(product / base);
                    r[i + j] = product - carry * base;
                    r[i + j + 1] += carry;
                }
            }
            trim(r);
            return r;
        }

        function multiplySmall(a, b) { // assumes a is array, b is number with |b| < BASE
            var l = a.length,
                r = new Array(l),
                base = BASE,
                carry = 0,
                product, i;
            for (i = 0; i < l; i++) {
                product = a[i] * b + carry;
                carry = Math.floor(product / base);
                r[i] = product - carry * base;
            }
            while (carry > 0) {
                r[i++] = carry % base;
                carry = Math.floor(carry / base);
            }
            return r;
        }

        function shiftLeft(x, n) {
            var r = [];
            while (n-- > 0) r.push(0);
            return r.concat(x);
        }

        function multiplyKaratsuba(x, y) {
            var n = Math.max(x.length, y.length);

            if (n <= 30) return multiplyLong(x, y);
            n = Math.ceil(n / 2);

            var b = x.slice(n),
                a = x.slice(0, n),
                d = y.slice(n),
                c = y.slice(0, n);

            var ac = multiplyKaratsuba(a, c),
                bd = multiplyKaratsuba(b, d),
                abcd = multiplyKaratsuba(addAny(a, b), addAny(c, d));

            var product = addAny(addAny(ac, shiftLeft(subtract(subtract(abcd, ac), bd), n)), shiftLeft(bd, 2 * n));
            trim(product);
            return product;
        }

        // The following function is derived from a surface fit of a graph plotting the performance difference
        // between long multiplication and karatsuba multiplication versus the lengths of the two arrays.
        function useKaratsuba(l1, l2) {
            return -0.012 * l1 - 0.012 * l2 + 0.000015 * l1 * l2 > 0;
        }

        BigInteger.prototype.multiply = function (v) {
            var n = parseValue(v),
                a = this.value, b = n.value,
                sign = this.sign !== n.sign,
                abs;
            if (n.isSmall) {
                if (b === 0) return Integer[0];
                if (b === 1) return this;
                if (b === -1) return this.negate();
                abs = Math.abs(b);
                if (abs < BASE) {
                    return new BigInteger(multiplySmall(a, abs), sign);
                }
                b = smallToArray(abs);
            }
            if (useKaratsuba(a.length, b.length)) // Karatsuba is only faster for certain array sizes
                return new BigInteger(multiplyKaratsuba(a, b), sign);
            return new BigInteger(multiplyLong(a, b), sign);
        };

        BigInteger.prototype.times = BigInteger.prototype.multiply;

        function multiplySmallAndArray(a, b, sign) { // a >= 0
            if (a < BASE) {
                return new BigInteger(multiplySmall(b, a), sign);
            }
            return new BigInteger(multiplyLong(b, smallToArray(a)), sign);
        }
        SmallInteger.prototype._multiplyBySmall = function (a) {
            if (isPrecise(a.value * this.value)) {
                return new SmallInteger(a.value * this.value);
            }
            return multiplySmallAndArray(Math.abs(a.value), smallToArray(Math.abs(this.value)), this.sign !== a.sign);
        };
        BigInteger.prototype._multiplyBySmall = function (a) {
            if (a.value === 0) return Integer[0];
            if (a.value === 1) return this;
            if (a.value === -1) return this.negate();
            return multiplySmallAndArray(Math.abs(a.value), this.value, this.sign !== a.sign);
        };
        SmallInteger.prototype.multiply = function (v) {
            return parseValue(v)._multiplyBySmall(this);
        };
        SmallInteger.prototype.times = SmallInteger.prototype.multiply;

        NativeBigInt.prototype.multiply = function (v) {
            return new NativeBigInt(this.value * parseValue(v).value);
        };
        NativeBigInt.prototype.times = NativeBigInt.prototype.multiply;

        function square(a) {
            //console.assert(2 * BASE * BASE < MAX_INT);
            var l = a.length,
                r = createArray(l + l),
                base = BASE,
                product, carry, i, a_i, a_j;
            for (i = 0; i < l; i++) {
                a_i = a[i];
                carry = 0 - a_i * a_i;
                for (var j = i; j < l; j++) {
                    a_j = a[j];
                    product = 2 * (a_i * a_j) + r[i + j] + carry;
                    carry = Math.floor(product / base);
                    r[i + j] = product - carry * base;
                }
                r[i + l] = carry;
            }
            trim(r);
            return r;
        }

        BigInteger.prototype.square = function () {
            return new BigInteger(square(this.value), false);
        };

        SmallInteger.prototype.square = function () {
            var value = this.value * this.value;
            if (isPrecise(value)) return new SmallInteger(value);
            return new BigInteger(square(smallToArray(Math.abs(this.value))), false);
        };

        NativeBigInt.prototype.square = function (v) {
            return new NativeBigInt(this.value * this.value);
        };

        function divMod1(a, b) { // Left over from previous version. Performs faster than divMod2 on smaller input sizes.
            var a_l = a.length,
                b_l = b.length,
                base = BASE,
                result = createArray(b.length),
                divisorMostSignificantDigit = b[b_l - 1],
                // normalization
                lambda = Math.ceil(base / (2 * divisorMostSignificantDigit)),
                remainder = multiplySmall(a, lambda),
                divisor = multiplySmall(b, lambda),
                quotientDigit, shift, carry, borrow, i, l, q;
            if (remainder.length <= a_l) remainder.push(0);
            divisor.push(0);
            divisorMostSignificantDigit = divisor[b_l - 1];
            for (shift = a_l - b_l; shift >= 0; shift--) {
                quotientDigit = base - 1;
                if (remainder[shift + b_l] !== divisorMostSignificantDigit) {
                    quotientDigit = Math.floor((remainder[shift + b_l] * base + remainder[shift + b_l - 1]) / divisorMostSignificantDigit);
                }
                // quotientDigit <= base - 1
                carry = 0;
                borrow = 0;
                l = divisor.length;
                for (i = 0; i < l; i++) {
                    carry += quotientDigit * divisor[i];
                    q = Math.floor(carry / base);
                    borrow += remainder[shift + i] - (carry - q * base);
                    carry = q;
                    if (borrow < 0) {
                        remainder[shift + i] = borrow + base;
                        borrow = -1;
                    } else {
                        remainder[shift + i] = borrow;
                        borrow = 0;
                    }
                }
                while (borrow !== 0) {
                    quotientDigit -= 1;
                    carry = 0;
                    for (i = 0; i < l; i++) {
                        carry += remainder[shift + i] - base + divisor[i];
                        if (carry < 0) {
                            remainder[shift + i] = carry + base;
                            carry = 0;
                        } else {
                            remainder[shift + i] = carry;
                            carry = 1;
                        }
                    }
                    borrow += carry;
                }
                result[shift] = quotientDigit;
            }
            // denormalization
            remainder = divModSmall(remainder, lambda)[0];
            return [arrayToSmall(result), arrayToSmall(remainder)];
        }

        function divMod2(a, b) { // Implementation idea shamelessly stolen from Silent Matt's library http://silentmatt.com/biginteger/
            // Performs faster than divMod1 on larger input sizes.
            var a_l = a.length,
                b_l = b.length,
                result = [],
                part = [],
                base = BASE,
                guess, xlen, highx, highy, check;
            while (a_l) {
                part.unshift(a[--a_l]);
                trim(part);
                if (compareAbs(part, b) < 0) {
                    result.push(0);
                    continue;
                }
                xlen = part.length;
                highx = part[xlen - 1] * base + part[xlen - 2];
                highy = b[b_l - 1] * base + b[b_l - 2];
                if (xlen > b_l) {
                    highx = (highx + 1) * base;
                }
                guess = Math.ceil(highx / highy);
                do {
                    check = multiplySmall(b, guess);
                    if (compareAbs(check, part) <= 0) break;
                    guess--;
                } while (guess);
                result.push(guess);
                part = subtract(part, check);
            }
            result.reverse();
            return [arrayToSmall(result), arrayToSmall(part)];
        }

        function divModSmall(value, lambda) {
            var length = value.length,
                quotient = createArray(length),
                base = BASE,
                i, q, remainder, divisor;
            remainder = 0;
            for (i = length - 1; i >= 0; --i) {
                divisor = remainder * base + value[i];
                q = truncate(divisor / lambda);
                remainder = divisor - q * lambda;
                quotient[i] = q | 0;
            }
            return [quotient, remainder | 0];
        }

        function divModAny(self, v) {
            var value, n = parseValue(v);
            if (supportsNativeBigInt) {
                return [new NativeBigInt(self.value / n.value), new NativeBigInt(self.value % n.value)];
            }
            var a = self.value, b = n.value;
            var quotient;
            if (b === 0) throw new Error("Cannot divide by zero");
            if (self.isSmall) {
                if (n.isSmall) {
                    return [new SmallInteger(truncate(a / b)), new SmallInteger(a % b)];
                }
                return [Integer[0], self];
            }
            if (n.isSmall) {
                if (b === 1) return [self, Integer[0]];
                if (b == -1) return [self.negate(), Integer[0]];
                var abs = Math.abs(b);
                if (abs < BASE) {
                    value = divModSmall(a, abs);
                    quotient = arrayToSmall(value[0]);
                    var remainder = value[1];
                    if (self.sign) remainder = -remainder;
                    if (typeof quotient === "number") {
                        if (self.sign !== n.sign) quotient = -quotient;
                        return [new SmallInteger(quotient), new SmallInteger(remainder)];
                    }
                    return [new BigInteger(quotient, self.sign !== n.sign), new SmallInteger(remainder)];
                }
                b = smallToArray(abs);
            }
            var comparison = compareAbs(a, b);
            if (comparison === -1) return [Integer[0], self];
            if (comparison === 0) return [Integer[self.sign === n.sign ? 1 : -1], Integer[0]];

            // divMod1 is faster on smaller input sizes
            if (a.length + b.length <= 200)
                value = divMod1(a, b);
            else value = divMod2(a, b);

            quotient = value[0];
            var qSign = self.sign !== n.sign,
                mod = value[1],
                mSign = self.sign;
            if (typeof quotient === "number") {
                if (qSign) quotient = -quotient;
                quotient = new SmallInteger(quotient);
            } else quotient = new BigInteger(quotient, qSign);
            if (typeof mod === "number") {
                if (mSign) mod = -mod;
                mod = new SmallInteger(mod);
            } else mod = new BigInteger(mod, mSign);
            return [quotient, mod];
        }

        BigInteger.prototype.divmod = function (v) {
            var result = divModAny(this, v);
            return {
                quotient: result[0],
                remainder: result[1]
            };
        };
        NativeBigInt.prototype.divmod = SmallInteger.prototype.divmod = BigInteger.prototype.divmod;


        BigInteger.prototype.divide = function (v) {
            return divModAny(this, v)[0];
        };
        NativeBigInt.prototype.over = NativeBigInt.prototype.divide = function (v) {
            return new NativeBigInt(this.value / parseValue(v).value);
        };
        SmallInteger.prototype.over = SmallInteger.prototype.divide = BigInteger.prototype.over = BigInteger.prototype.divide;

        BigInteger.prototype.mod = function (v) {
            return divModAny(this, v)[1];
        };
        NativeBigInt.prototype.mod = NativeBigInt.prototype.remainder = function (v) {
            return new NativeBigInt(this.value % parseValue(v).value);
        };
        SmallInteger.prototype.remainder = SmallInteger.prototype.mod = BigInteger.prototype.remainder = BigInteger.prototype.mod;

        BigInteger.prototype.pow = function (v) {
            var n = parseValue(v),
                a = this.value,
                b = n.value,
                value, x, y;
            if (b === 0) return Integer[1];
            if (a === 0) return Integer[0];
            if (a === 1) return Integer[1];
            if (a === -1) return n.isEven() ? Integer[1] : Integer[-1];
            if (n.sign) {
                return Integer[0];
            }
            if (!n.isSmall) throw new Error("The exponent " + n.toString() + " is too large.");
            if (this.isSmall) {
                if (isPrecise(value = Math.pow(a, b)))
                    return new SmallInteger(truncate(value));
            }
            x = this;
            y = Integer[1];
            while (true) {
                if (b & 1 === 1) {
                    y = y.times(x);
                    --b;
                }
                if (b === 0) break;
                b /= 2;
                x = x.square();
            }
            return y;
        };
        SmallInteger.prototype.pow = BigInteger.prototype.pow;

        NativeBigInt.prototype.pow = function (v) {
            var n = parseValue(v);
            var a = this.value, b = n.value;
            var _0 = BigInt(0), _1 = BigInt(1), _2 = BigInt(2);
            if (b === _0) return Integer[1];
            if (a === _0) return Integer[0];
            if (a === _1) return Integer[1];
            if (a === BigInt(-1)) return n.isEven() ? Integer[1] : Integer[-1];
            if (n.isNegative()) return new NativeBigInt(_0);
            var x = this;
            var y = Integer[1];
            while (true) {
                if ((b & _1) === _1) {
                    y = y.times(x);
                    --b;
                }
                if (b === _0) break;
                b /= _2;
                x = x.square();
            }
            return y;
        };

        BigInteger.prototype.modPow = function (exp, mod) {
            exp = parseValue(exp);
            mod = parseValue(mod);
            if (mod.isZero()) throw new Error("Cannot take modPow with modulus 0");
            var r = Integer[1],
                base = this.mod(mod);
            if (exp.isNegative()) {
                exp = exp.multiply(Integer[-1]);
                base = base.modInv(mod);
            }
            while (exp.isPositive()) {
                if (base.isZero()) return Integer[0];
                if (exp.isOdd()) r = r.multiply(base).mod(mod);
                exp = exp.divide(2);
                base = base.square().mod(mod);
            }
            return r;
        };
        NativeBigInt.prototype.modPow = SmallInteger.prototype.modPow = BigInteger.prototype.modPow;

        function compareAbs(a, b) {
            if (a.length !== b.length) {
                return a.length > b.length ? 1 : -1;
            }
            for (var i = a.length - 1; i >= 0; i--) {
                if (a[i] !== b[i]) return a[i] > b[i] ? 1 : -1;
            }
            return 0;
        }

        BigInteger.prototype.compareAbs = function (v) {
            var n = parseValue(v),
                a = this.value,
                b = n.value;
            if (n.isSmall) return 1;
            return compareAbs(a, b);
        };
        SmallInteger.prototype.compareAbs = function (v) {
            var n = parseValue(v),
                a = Math.abs(this.value),
                b = n.value;
            if (n.isSmall) {
                b = Math.abs(b);
                return a === b ? 0 : a > b ? 1 : -1;
            }
            return -1;
        };
        NativeBigInt.prototype.compareAbs = function (v) {
            var a = this.value;
            var b = parseValue(v).value;
            a = a >= 0 ? a : -a;
            b = b >= 0 ? b : -b;
            return a === b ? 0 : a > b ? 1 : -1;
        };

        BigInteger.prototype.compare = function (v) {
            // See discussion about comparison with Infinity:
            // https://github.com/peterolson/BigInteger.js/issues/61
            if (v === Infinity) {
                return -1;
            }
            if (v === -Infinity) {
                return 1;
            }

            var n = parseValue(v),
                a = this.value,
                b = n.value;
            if (this.sign !== n.sign) {
                return n.sign ? 1 : -1;
            }
            if (n.isSmall) {
                return this.sign ? -1 : 1;
            }
            return compareAbs(a, b) * (this.sign ? -1 : 1);
        };
        BigInteger.prototype.compareTo = BigInteger.prototype.compare;

        SmallInteger.prototype.compare = function (v) {
            if (v === Infinity) {
                return -1;
            }
            if (v === -Infinity) {
                return 1;
            }

            var n = parseValue(v),
                a = this.value,
                b = n.value;
            if (n.isSmall) {
                return a == b ? 0 : a > b ? 1 : -1;
            }
            if (a < 0 !== n.sign) {
                return a < 0 ? -1 : 1;
            }
            return a < 0 ? 1 : -1;
        };
        SmallInteger.prototype.compareTo = SmallInteger.prototype.compare;

        NativeBigInt.prototype.compare = function (v) {
            if (v === Infinity) {
                return -1;
            }
            if (v === -Infinity) {
                return 1;
            }
            var a = this.value;
            var b = parseValue(v).value;
            return a === b ? 0 : a > b ? 1 : -1;
        };
        NativeBigInt.prototype.compareTo = NativeBigInt.prototype.compare;

        BigInteger.prototype.equals = function (v) {
            return this.compare(v) === 0;
        };
        NativeBigInt.prototype.eq = NativeBigInt.prototype.equals = SmallInteger.prototype.eq = SmallInteger.prototype.equals = BigInteger.prototype.eq = BigInteger.prototype.equals;

        BigInteger.prototype.notEquals = function (v) {
            return this.compare(v) !== 0;
        };
        NativeBigInt.prototype.neq = NativeBigInt.prototype.notEquals = SmallInteger.prototype.neq = SmallInteger.prototype.notEquals = BigInteger.prototype.neq = BigInteger.prototype.notEquals;

        BigInteger.prototype.greater = function (v) {
            return this.compare(v) > 0;
        };
        NativeBigInt.prototype.gt = NativeBigInt.prototype.greater = SmallInteger.prototype.gt = SmallInteger.prototype.greater = BigInteger.prototype.gt = BigInteger.prototype.greater;

        BigInteger.prototype.lesser = function (v) {
            return this.compare(v) < 0;
        };
        NativeBigInt.prototype.lt = NativeBigInt.prototype.lesser = SmallInteger.prototype.lt = SmallInteger.prototype.lesser = BigInteger.prototype.lt = BigInteger.prototype.lesser;

        BigInteger.prototype.greaterOrEquals = function (v) {
            return this.compare(v) >= 0;
        };
        NativeBigInt.prototype.geq = NativeBigInt.prototype.greaterOrEquals = SmallInteger.prototype.geq = SmallInteger.prototype.greaterOrEquals = BigInteger.prototype.geq = BigInteger.prototype.greaterOrEquals;

        BigInteger.prototype.lesserOrEquals = function (v) {
            return this.compare(v) <= 0;
        };
        NativeBigInt.prototype.leq = NativeBigInt.prototype.lesserOrEquals = SmallInteger.prototype.leq = SmallInteger.prototype.lesserOrEquals = BigInteger.prototype.leq = BigInteger.prototype.lesserOrEquals;

        BigInteger.prototype.isEven = function () {
            return (this.value[0] & 1) === 0;
        };
        SmallInteger.prototype.isEven = function () {
            return (this.value & 1) === 0;
        };
        NativeBigInt.prototype.isEven = function () {
            return (this.value & BigInt(1)) === BigInt(0);
        };

        BigInteger.prototype.isOdd = function () {
            return (this.value[0] & 1) === 1;
        };
        SmallInteger.prototype.isOdd = function () {
            return (this.value & 1) === 1;
        };
        NativeBigInt.prototype.isOdd = function () {
            return (this.value & BigInt(1)) === BigInt(1);
        };

        BigInteger.prototype.isPositive = function () {
            return !this.sign;
        };
        SmallInteger.prototype.isPositive = function () {
            return this.value > 0;
        };
        NativeBigInt.prototype.isPositive = SmallInteger.prototype.isPositive;

        BigInteger.prototype.isNegative = function () {
            return this.sign;
        };
        SmallInteger.prototype.isNegative = function () {
            return this.value < 0;
        };
        NativeBigInt.prototype.isNegative = SmallInteger.prototype.isNegative;

        BigInteger.prototype.isUnit = function () {
            return false;
        };
        SmallInteger.prototype.isUnit = function () {
            return Math.abs(this.value) === 1;
        };
        NativeBigInt.prototype.isUnit = function () {
            return this.abs().value === BigInt(1);
        };

        BigInteger.prototype.isZero = function () {
            return false;
        };
        SmallInteger.prototype.isZero = function () {
            return this.value === 0;
        };
        NativeBigInt.prototype.isZero = function () {
            return this.value === BigInt(0);
        };

        BigInteger.prototype.isDivisibleBy = function (v) {
            var n = parseValue(v);
            if (n.isZero()) return false;
            if (n.isUnit()) return true;
            if (n.compareAbs(2) === 0) return this.isEven();
            return this.mod(n).isZero();
        };
        NativeBigInt.prototype.isDivisibleBy = SmallInteger.prototype.isDivisibleBy = BigInteger.prototype.isDivisibleBy;

        function isBasicPrime(v) {
            var n = v.abs();
            if (n.isUnit()) return false;
            if (n.equals(2) || n.equals(3) || n.equals(5)) return true;
            if (n.isEven() || n.isDivisibleBy(3) || n.isDivisibleBy(5)) return false;
            if (n.lesser(49)) return true;
            // we don't know if it's prime: let the other functions figure it out
        }

        function millerRabinTest(n, a) {
            var nPrev = n.prev(),
                b = nPrev,
                r = 0,
                d, i, x;
            while (b.isEven()) b = b.divide(2), r++;
            next: for (i = 0; i < a.length; i++) {
                if (n.lesser(a[i])) continue;
                x = bigInt(a[i]).modPow(b, n);
                if (x.isUnit() || x.equals(nPrev)) continue;
                for (d = r - 1; d != 0; d--) {
                    x = x.square().mod(n);
                    if (x.isUnit()) return false;
                    if (x.equals(nPrev)) continue next;
                }
                return false;
            }
            return true;
        }

        // Set "strict" to true to force GRH-supported lower bound of 2*log(N)^2
        BigInteger.prototype.isPrime = function (strict) {
            var isPrime = isBasicPrime(this);
            if (isPrime !== undefined$1) return isPrime;
            var n = this.abs();
            var bits = n.bitLength();
            if (bits <= 64)
                return millerRabinTest(n, [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37]);
            var logN = Math.log(2) * bits.toJSNumber();
            var t = Math.ceil((strict === true) ? (2 * Math.pow(logN, 2)) : logN);
            for (var a = [], i = 0; i < t; i++) {
                a.push(bigInt(i + 2));
            }
            return millerRabinTest(n, a);
        };
        NativeBigInt.prototype.isPrime = SmallInteger.prototype.isPrime = BigInteger.prototype.isPrime;

        BigInteger.prototype.isProbablePrime = function (iterations, rng) {
            var isPrime = isBasicPrime(this);
            if (isPrime !== undefined$1) return isPrime;
            var n = this.abs();
            var t = iterations === undefined$1 ? 5 : iterations;
            for (var a = [], i = 0; i < t; i++) {
                a.push(bigInt.randBetween(2, n.minus(2), rng));
            }
            return millerRabinTest(n, a);
        };
        NativeBigInt.prototype.isProbablePrime = SmallInteger.prototype.isProbablePrime = BigInteger.prototype.isProbablePrime;

        BigInteger.prototype.modInv = function (n) {
            var t = bigInt.zero, newT = bigInt.one, r = parseValue(n), newR = this.abs(), q, lastT, lastR;
            while (!newR.isZero()) {
                q = r.divide(newR);
                lastT = t;
                lastR = r;
                t = newT;
                r = newR;
                newT = lastT.subtract(q.multiply(newT));
                newR = lastR.subtract(q.multiply(newR));
            }
            if (!r.isUnit()) throw new Error(this.toString() + " and " + n.toString() + " are not co-prime");
            if (t.compare(0) === -1) {
                t = t.add(n);
            }
            if (this.isNegative()) {
                return t.negate();
            }
            return t;
        };

        NativeBigInt.prototype.modInv = SmallInteger.prototype.modInv = BigInteger.prototype.modInv;

        BigInteger.prototype.next = function () {
            var value = this.value;
            if (this.sign) {
                return subtractSmall(value, 1, this.sign);
            }
            return new BigInteger(addSmall(value, 1), this.sign);
        };
        SmallInteger.prototype.next = function () {
            var value = this.value;
            if (value + 1 < MAX_INT) return new SmallInteger(value + 1);
            return new BigInteger(MAX_INT_ARR, false);
        };
        NativeBigInt.prototype.next = function () {
            return new NativeBigInt(this.value + BigInt(1));
        };

        BigInteger.prototype.prev = function () {
            var value = this.value;
            if (this.sign) {
                return new BigInteger(addSmall(value, 1), true);
            }
            return subtractSmall(value, 1, this.sign);
        };
        SmallInteger.prototype.prev = function () {
            var value = this.value;
            if (value - 1 > -MAX_INT) return new SmallInteger(value - 1);
            return new BigInteger(MAX_INT_ARR, true);
        };
        NativeBigInt.prototype.prev = function () {
            return new NativeBigInt(this.value - BigInt(1));
        };

        var powersOfTwo = [1];
        while (2 * powersOfTwo[powersOfTwo.length - 1] <= BASE) powersOfTwo.push(2 * powersOfTwo[powersOfTwo.length - 1]);
        var powers2Length = powersOfTwo.length, highestPower2 = powersOfTwo[powers2Length - 1];

        function shift_isSmall(n) {
            return Math.abs(n) <= BASE;
        }

        BigInteger.prototype.shiftLeft = function (v) {
            var n = parseValue(v).toJSNumber();
            if (!shift_isSmall(n)) {
                throw new Error(String(n) + " is too large for shifting.");
            }
            if (n < 0) return this.shiftRight(-n);
            var result = this;
            if (result.isZero()) return result;
            while (n >= powers2Length) {
                result = result.multiply(highestPower2);
                n -= powers2Length - 1;
            }
            return result.multiply(powersOfTwo[n]);
        };
        NativeBigInt.prototype.shiftLeft = SmallInteger.prototype.shiftLeft = BigInteger.prototype.shiftLeft;

        BigInteger.prototype.shiftRight = function (v) {
            var remQuo;
            var n = parseValue(v).toJSNumber();
            if (!shift_isSmall(n)) {
                throw new Error(String(n) + " is too large for shifting.");
            }
            if (n < 0) return this.shiftLeft(-n);
            var result = this;
            while (n >= powers2Length) {
                if (result.isZero() || (result.isNegative() && result.isUnit())) return result;
                remQuo = divModAny(result, highestPower2);
                result = remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];
                n -= powers2Length - 1;
            }
            remQuo = divModAny(result, powersOfTwo[n]);
            return remQuo[1].isNegative() ? remQuo[0].prev() : remQuo[0];
        };
        NativeBigInt.prototype.shiftRight = SmallInteger.prototype.shiftRight = BigInteger.prototype.shiftRight;

        function bitwise(x, y, fn) {
            y = parseValue(y);
            var xSign = x.isNegative(), ySign = y.isNegative();
            var xRem = xSign ? x.not() : x,
                yRem = ySign ? y.not() : y;
            var xDigit = 0, yDigit = 0;
            var xDivMod = null, yDivMod = null;
            var result = [];
            while (!xRem.isZero() || !yRem.isZero()) {
                xDivMod = divModAny(xRem, highestPower2);
                xDigit = xDivMod[1].toJSNumber();
                if (xSign) {
                    xDigit = highestPower2 - 1 - xDigit; // two's complement for negative numbers
                }

                yDivMod = divModAny(yRem, highestPower2);
                yDigit = yDivMod[1].toJSNumber();
                if (ySign) {
                    yDigit = highestPower2 - 1 - yDigit; // two's complement for negative numbers
                }

                xRem = xDivMod[0];
                yRem = yDivMod[0];
                result.push(fn(xDigit, yDigit));
            }
            var sum = fn(xSign ? 1 : 0, ySign ? 1 : 0) !== 0 ? bigInt(-1) : bigInt(0);
            for (var i = result.length - 1; i >= 0; i -= 1) {
                sum = sum.multiply(highestPower2).add(bigInt(result[i]));
            }
            return sum;
        }

        BigInteger.prototype.not = function () {
            return this.negate().prev();
        };
        NativeBigInt.prototype.not = SmallInteger.prototype.not = BigInteger.prototype.not;

        BigInteger.prototype.and = function (n) {
            return bitwise(this, n, function (a, b) { return a & b; });
        };
        NativeBigInt.prototype.and = SmallInteger.prototype.and = BigInteger.prototype.and;

        BigInteger.prototype.or = function (n) {
            return bitwise(this, n, function (a, b) { return a | b; });
        };
        NativeBigInt.prototype.or = SmallInteger.prototype.or = BigInteger.prototype.or;

        BigInteger.prototype.xor = function (n) {
            return bitwise(this, n, function (a, b) { return a ^ b; });
        };
        NativeBigInt.prototype.xor = SmallInteger.prototype.xor = BigInteger.prototype.xor;

        var LOBMASK_I = 1 << 30, LOBMASK_BI = (BASE & -BASE) * (BASE & -BASE) | LOBMASK_I;
        function roughLOB(n) { // get lowestOneBit (rough)
            // SmallInteger: return Min(lowestOneBit(n), 1 << 30)
            // BigInteger: return Min(lowestOneBit(n), 1 << 14) [BASE=1e7]
            var v = n.value,
                x = typeof v === "number" ? v | LOBMASK_I :
                    typeof v === "bigint" ? v | BigInt(LOBMASK_I) :
                        v[0] + v[1] * BASE | LOBMASK_BI;
            return x & -x;
        }

        function integerLogarithm(value, base) {
            if (base.compareTo(value) <= 0) {
                var tmp = integerLogarithm(value, base.square(base));
                var p = tmp.p;
                var e = tmp.e;
                var t = p.multiply(base);
                return t.compareTo(value) <= 0 ? { p: t, e: e * 2 + 1 } : { p: p, e: e * 2 };
            }
            return { p: bigInt(1), e: 0 };
        }

        BigInteger.prototype.bitLength = function () {
            var n = this;
            if (n.compareTo(bigInt(0)) < 0) {
                n = n.negate().subtract(bigInt(1));
            }
            if (n.compareTo(bigInt(0)) === 0) {
                return bigInt(0);
            }
            return bigInt(integerLogarithm(n, bigInt(2)).e).add(bigInt(1));
        };
        NativeBigInt.prototype.bitLength = SmallInteger.prototype.bitLength = BigInteger.prototype.bitLength;

        function max(a, b) {
            a = parseValue(a);
            b = parseValue(b);
            return a.greater(b) ? a : b;
        }
        function min(a, b) {
            a = parseValue(a);
            b = parseValue(b);
            return a.lesser(b) ? a : b;
        }
        function gcd(a, b) {
            a = parseValue(a).abs();
            b = parseValue(b).abs();
            if (a.equals(b)) return a;
            if (a.isZero()) return b;
            if (b.isZero()) return a;
            var c = Integer[1], d, t;
            while (a.isEven() && b.isEven()) {
                d = min(roughLOB(a), roughLOB(b));
                a = a.divide(d);
                b = b.divide(d);
                c = c.multiply(d);
            }
            while (a.isEven()) {
                a = a.divide(roughLOB(a));
            }
            do {
                while (b.isEven()) {
                    b = b.divide(roughLOB(b));
                }
                if (a.greater(b)) {
                    t = b; b = a; a = t;
                }
                b = b.subtract(a);
            } while (!b.isZero());
            return c.isUnit() ? a : a.multiply(c);
        }
        function lcm(a, b) {
            a = parseValue(a).abs();
            b = parseValue(b).abs();
            return a.divide(gcd(a, b)).multiply(b);
        }
        function randBetween(a, b, rng) {
            a = parseValue(a);
            b = parseValue(b);
            var usedRNG = rng || Math.random;
            var low = min(a, b), high = max(a, b);
            var range = high.subtract(low).add(1);
            if (range.isSmall) return low.add(Math.floor(usedRNG() * range));
            var digits = toBase(range, BASE).value;
            var result = [], restricted = true;
            for (var i = 0; i < digits.length; i++) {
                var top = restricted ? digits[i] : BASE;
                var digit = truncate(usedRNG() * top);
                result.push(digit);
                if (digit < top) restricted = false;
            }
            return low.add(Integer.fromArray(result, BASE, false));
        }

        var parseBase = function (text, base, alphabet, caseSensitive) {
            alphabet = alphabet || DEFAULT_ALPHABET;
            text = String(text);
            if (!caseSensitive) {
                text = text.toLowerCase();
                alphabet = alphabet.toLowerCase();
            }
            var length = text.length;
            var i;
            var absBase = Math.abs(base);
            var alphabetValues = {};
            for (i = 0; i < alphabet.length; i++) {
                alphabetValues[alphabet[i]] = i;
            }
            for (i = 0; i < length; i++) {
                var c = text[i];
                if (c === "-") continue;
                if (c in alphabetValues) {
                    if (alphabetValues[c] >= absBase) {
                        if (c === "1" && absBase === 1) continue;
                        throw new Error(c + " is not a valid digit in base " + base + ".");
                    }
                }
            }
            base = parseValue(base);
            var digits = [];
            var isNegative = text[0] === "-";
            for (i = isNegative ? 1 : 0; i < text.length; i++) {
                var c = text[i];
                if (c in alphabetValues) digits.push(parseValue(alphabetValues[c]));
                else if (c === "<") {
                    var start = i;
                    do { i++; } while (text[i] !== ">" && i < text.length);
                    digits.push(parseValue(text.slice(start + 1, i)));
                }
                else throw new Error(c + " is not a valid character");
            }
            return parseBaseFromArray(digits, base, isNegative);
        };

        function parseBaseFromArray(digits, base, isNegative) {
            var val = Integer[0], pow = Integer[1], i;
            for (i = digits.length - 1; i >= 0; i--) {
                val = val.add(digits[i].times(pow));
                pow = pow.times(base);
            }
            return isNegative ? val.negate() : val;
        }

        function stringify(digit, alphabet) {
            alphabet = alphabet || DEFAULT_ALPHABET;
            if (digit < alphabet.length) {
                return alphabet[digit];
            }
            return "<" + digit + ">";
        }

        function toBase(n, base) {
            base = bigInt(base);
            if (base.isZero()) {
                if (n.isZero()) return { value: [0], isNegative: false };
                throw new Error("Cannot convert nonzero numbers to base 0.");
            }
            if (base.equals(-1)) {
                if (n.isZero()) return { value: [0], isNegative: false };
                if (n.isNegative())
                    return {
                        value: [].concat.apply([], Array.apply(null, Array(-n.toJSNumber()))
                            .map(Array.prototype.valueOf, [1, 0])
                        ),
                        isNegative: false
                    };

                var arr = Array.apply(null, Array(n.toJSNumber() - 1))
                    .map(Array.prototype.valueOf, [0, 1]);
                arr.unshift([1]);
                return {
                    value: [].concat.apply([], arr),
                    isNegative: false
                };
            }

            var neg = false;
            if (n.isNegative() && base.isPositive()) {
                neg = true;
                n = n.abs();
            }
            if (base.isUnit()) {
                if (n.isZero()) return { value: [0], isNegative: false };

                return {
                    value: Array.apply(null, Array(n.toJSNumber()))
                        .map(Number.prototype.valueOf, 1),
                    isNegative: neg
                };
            }
            var out = [];
            var left = n, divmod;
            while (left.isNegative() || left.compareAbs(base) >= 0) {
                divmod = left.divmod(base);
                left = divmod.quotient;
                var digit = divmod.remainder;
                if (digit.isNegative()) {
                    digit = base.minus(digit).abs();
                    left = left.next();
                }
                out.push(digit.toJSNumber());
            }
            out.push(left.toJSNumber());
            return { value: out.reverse(), isNegative: neg };
        }

        function toBaseString(n, base, alphabet) {
            var arr = toBase(n, base);
            return (arr.isNegative ? "-" : "") + arr.value.map(function (x) {
                return stringify(x, alphabet);
            }).join('');
        }

        BigInteger.prototype.toArray = function (radix) {
            return toBase(this, radix);
        };

        SmallInteger.prototype.toArray = function (radix) {
            return toBase(this, radix);
        };

        NativeBigInt.prototype.toArray = function (radix) {
            return toBase(this, radix);
        };

        BigInteger.prototype.toString = function (radix, alphabet) {
            if (radix === undefined$1) radix = 10;
            if (radix !== 10) return toBaseString(this, radix, alphabet);
            var v = this.value, l = v.length, str = String(v[--l]), zeros = "0000000", digit;
            while (--l >= 0) {
                digit = String(v[l]);
                str += zeros.slice(digit.length) + digit;
            }
            var sign = this.sign ? "-" : "";
            return sign + str;
        };

        SmallInteger.prototype.toString = function (radix, alphabet) {
            if (radix === undefined$1) radix = 10;
            if (radix != 10) return toBaseString(this, radix, alphabet);
            return String(this.value);
        };

        NativeBigInt.prototype.toString = SmallInteger.prototype.toString;

        NativeBigInt.prototype.toJSON = BigInteger.prototype.toJSON = SmallInteger.prototype.toJSON = function () { return this.toString(); };

        BigInteger.prototype.valueOf = function () {
            return parseInt(this.toString(), 10);
        };
        BigInteger.prototype.toJSNumber = BigInteger.prototype.valueOf;

        SmallInteger.prototype.valueOf = function () {
            return this.value;
        };
        SmallInteger.prototype.toJSNumber = SmallInteger.prototype.valueOf;
        NativeBigInt.prototype.valueOf = NativeBigInt.prototype.toJSNumber = function () {
            return parseInt(this.toString(), 10);
        };

        function parseStringValue(v) {
            if (isPrecise(+v)) {
                var x = +v;
                if (x === truncate(x))
                    return supportsNativeBigInt ? new NativeBigInt(BigInt(x)) : new SmallInteger(x);
                throw new Error("Invalid integer: " + v);
            }
            var sign = v[0] === "-";
            if (sign) v = v.slice(1);
            var split = v.split(/e/i);
            if (split.length > 2) throw new Error("Invalid integer: " + split.join("e"));
            if (split.length === 2) {
                var exp = split[1];
                if (exp[0] === "+") exp = exp.slice(1);
                exp = +exp;
                if (exp !== truncate(exp) || !isPrecise(exp)) throw new Error("Invalid integer: " + exp + " is not a valid exponent.");
                var text = split[0];
                var decimalPlace = text.indexOf(".");
                if (decimalPlace >= 0) {
                    exp -= text.length - decimalPlace - 1;
                    text = text.slice(0, decimalPlace) + text.slice(decimalPlace + 1);
                }
                if (exp < 0) throw new Error("Cannot include negative exponent part for integers");
                text += (new Array(exp + 1)).join("0");
                v = text;
            }
            var isValid = /^([0-9][0-9]*)$/.test(v);
            if (!isValid) throw new Error("Invalid integer: " + v);
            if (supportsNativeBigInt) {
                return new NativeBigInt(BigInt(sign ? "-" + v : v));
            }
            var r = [], max = v.length, l = LOG_BASE, min = max - l;
            while (max > 0) {
                r.push(+v.slice(min, max));
                min -= l;
                if (min < 0) min = 0;
                max -= l;
            }
            trim(r);
            return new BigInteger(r, sign);
        }

        function parseNumberValue(v) {
            if (supportsNativeBigInt) {
                return new NativeBigInt(BigInt(v));
            }
            if (isPrecise(v)) {
                if (v !== truncate(v)) throw new Error(v + " is not an integer.");
                return new SmallInteger(v);
            }
            return parseStringValue(v.toString());
        }

        function parseValue(v) {
            if (typeof v === "number") {
                return parseNumberValue(v);
            }
            if (typeof v === "string") {
                return parseStringValue(v);
            }
            if (typeof v === "bigint") {
                return new NativeBigInt(v);
            }
            return v;
        }
        // Pre-define numbers in range [-999,999]
        for (var i = 0; i < 1000; i++) {
            Integer[i] = parseValue(i);
            if (i > 0) Integer[-i] = parseValue(-i);
        }
        // Backwards compatibility
        Integer.one = Integer[1];
        Integer.zero = Integer[0];
        Integer.minusOne = Integer[-1];
        Integer.max = max;
        Integer.min = min;
        Integer.gcd = gcd;
        Integer.lcm = lcm;
        Integer.isInstance = function (x) { return x instanceof BigInteger || x instanceof SmallInteger || x instanceof NativeBigInt; };
        Integer.randBetween = randBetween;

        Integer.fromArray = function (digits, base, isNegative) {
            return parseBaseFromArray(digits.map(parseValue), parseValue(base || 10), isNegative);
        };

        return Integer;
    })();

    // Node.js check
    if (module.hasOwnProperty("exports")) {
        module.exports = bigInt;
    }
    });

    var nodeSqlParser = createCommonjsModule(function (module, exports) {
    !function(r,t){for(var e in t)r[e]=t[e];}(exports,function(r){var t={};function e(n){if(t[n])return t[n].exports;var u=t[n]={i:n,l:!1,exports:{}};return r[n].call(u.exports,u,u.exports,e),u.l=!0,u.exports}return e.m=r,e.c=t,e.d=function(r,t,n){e.o(r,t)||Object.defineProperty(r,t,{enumerable:!0,get:n});},e.r=function(r){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(r,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(r,"__esModule",{value:!0});},e.t=function(r,t){if(1&t&&(r=e(r)),8&t)return r;if(4&t&&"object"==typeof r&&r&&r.__esModule)return r;var n=Object.create(null);if(e.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:r}),2&t&&"string"!=typeof r)for(var u in r)e.d(n,u,function(t){return r[t]}.bind(null,u));return n},e.n=function(r){var t=r&&r.__esModule?function(){return r.default}:function(){return r};return e.d(t,"a",t),t},e.o=function(r,t){return Object.prototype.hasOwnProperty.call(r,t)},e.p="",e(e.s=10)}([function(r,t){r.exports=BigInteger;},function(r,t,e){var n=e(0);function u(r,t,e,n){this.message=r,this.expected=t,this.found=e,this.location=n,this.name="SyntaxError","function"==typeof Error.captureStackTrace&&Error.captureStackTrace(this,u);}!function(r,t){function e(){this.constructor=r;}e.prototype=t.prototype,r.prototype=new e;}(u,Error),u.buildMessage=function(r,t){var e={literal:function(r){return '"'+u(r.text)+'"'},class:function(r){var t,e="";for(t=0;t<r.parts.length;t++)e+=r.parts[t]instanceof Array?s(r.parts[t][0])+"-"+s(r.parts[t][1]):s(r.parts[t]);return "["+(r.inverted?"^":"")+e+"]"},any:function(r){return "any character"},end:function(r){return "end of input"},other:function(r){return r.description}};function n(r){return r.charCodeAt(0).toString(16).toUpperCase()}function u(r){return r.replace(/\\/g,"\\\\").replace(/"/g,'\\"').replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(r){return "\\x0"+n(r)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(r){return "\\x"+n(r)}))}function s(r){return r.replace(/\\/g,"\\\\").replace(/\]/g,"\\]").replace(/\^/g,"\\^").replace(/-/g,"\\-").replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(r){return "\\x0"+n(r)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(r){return "\\x"+n(r)}))}return "Expected "+function(r){var t,n,u,s=new Array(r.length);for(t=0;t<r.length;t++)s[t]=(u=r[t],e[u.type](u));if(s.sort(),s.length>0){for(t=1,n=1;t<s.length;t++)s[t-1]!==s[t]&&(s[n]=s[t],n++);s.length=n;}switch(s.length){case 1:return s[0];case 2:return s[0]+" or "+s[1];default:return s.slice(0,-1).join(", ")+", or "+s[s.length-1]}}(r)+" but "+function(r){return r?'"'+u(r)+'"':"end of input"}(t)+" found."},r.exports={SyntaxError:u,parse:function(r,t){t=void 0!==t?t:{};var e,s={},o={start:qe},a=qe,i=Ye("(",!1),c=Ye(")",!1),l=Ye("INTERSECT",!0),b=Ye("EXCEPT",!0),v=function(r,t){return ss(r,t)},d=Ye("FOR",!0),L=Ye("SYSTEM_TIME",!0),C=Ye("AS",!0),p=Ye("OF",!0),w=Ye("REPLACE",!0),E=Ye("UNNEST",!0),h=function(r,t){return t.unshift(r),t.forEach(r=>{const{table:t,as:e}=r;fs[t]=t,e&&(fs[e]=t),function(r){const t=is(r);r.clear(),t.forEach(t=>r.add(t));}(ls);}),t},A=Ye("RANGE",!0),y=Ye("UNBOUNDED",!0),T=Ye("PRECEDING",!0),m=Ye("CURRENT",!0),S=Ye("ROW",!1),I=Ye("ROWS",!0),N=Ye("FOLLOWING",!0),R=function(r,t){return os(r,t)},_=Ye("!",!1),g=Ye("=",!1),O=function(r){return r[0]+" "+r[2]},x=Ye(">=",!1),U=Ye(">",!1),M=Ye("<=",!1),D=Ye("<>",!1),k=Ye("<",!1),$=Ye("!=",!1),F=Ye("+",!1),P=Ye("-",!1),H=Ye("*",!1),G=Ye("/",!1),j=Ye("%",!1),Y=function(r){return !0===rs[r.toUpperCase()]},B=Ye('"',!1),X=/^[^"]/,W=Be(['"'],!0,!1),V=function(r){return r.join("")},K=Ye("'",!1),q=/^[^']/,Z=Be(["'"],!0,!1),z=Ye("`",!1),J=/^[^`]/,Q=Be(["`"],!0,!1),rr=function(r,t){return r+t.join("")},tr=/^[A-Za-z_]/,er=Be([["A","Z"],["a","z"],"_"],!1,!1),nr=/^[A-Za-z0-9_]/,ur=Be([["A","Z"],["a","z"],["0","9"],"_"],!1,!1),sr=/^[A-Za-z0-9_:]/,or=Be([["A","Z"],["a","z"],["0","9"],"_",":"],!1,!1),ar=Ye(":",!1),ir=function(r,t,e){return {type:"function",name:r,args:t||{type:"expr_list",value:[]},over:e}},cr=Ye("CENTURY",!0),lr=Ye("DAY",!0),fr=Ye("DECADE",!0),br=Ye("DOW",!0),vr=Ye("DOY",!0),dr=Ye("EPOCH",!0),Lr=Ye("HOUR",!0),Cr=Ye("ISODOW",!0),pr=Ye("ISOYEAR",!0),wr=Ye("MICROSECONDS",!0),Er=Ye("MILLENNIUM",!0),hr=Ye("MILLISECONDS",!0),Ar=Ye("MINUTE",!0),yr=Ye("MONTH",!0),Tr=Ye("QUARTER",!0),mr=Ye("SECOND",!0),Sr=Ye("TIMEZONE",!0),Ir=Ye("TIMEZONE_HOUR",!0),Nr=Ye("TIMEZONE_MINUTE",!0),Rr=Ye("WEEK",!0),_r=Ye("YEAR",!0),gr=Ye("R",!0),Or=function(r,t){return {type:r.toLowerCase(),value:t[1].join("")}},xr=Ye("ON UPDATE CURRENT_TIMESTAMP",!0),Ur=/^[^"\\\0-\x1F\x7F]/,Mr=Be(['"',"\\",["\0",""],""],!0,!1),Dr=/^[^'\\]/,kr=Be(["'","\\"],!0,!1),$r=Ye("\\'",!1),Fr=Ye('\\"',!1),Pr=Ye("\\\\",!1),Hr=Ye("\\/",!1),Gr=Ye("\\b",!1),jr=Ye("\\f",!1),Yr=Ye("\\n",!1),Br=Ye("\\r",!1),Xr=Ye("\\t",!1),Wr=Ye("\\u",!1),Vr=Ye("\\",!1),Kr=/^[\n\r]/,qr=Be(["\n","\r"],!1,!1),Zr=Ye(".",!1),zr=/^[0-9]/,Jr=Be([["0","9"]],!1,!1),Qr=/^[0-9a-fA-F]/,rt=Be([["0","9"],["a","f"],["A","F"]],!1,!1),tt=/^[eE]/,et=Be(["e","E"],!1,!1),nt=/^[+\-]/,ut=Be(["+","-"],!1,!1),st=Ye("NULL",!0),ot=(Ye("TRUE",!0)),at=(Ye("FALSE",!0)),it=(Ye("SELECT",!0)),ct=(Ye("PARTITION",!0)),lt=(Ye("FROM",!0)),ft=(Ye("ON",!0)),bt=Ye("LEFT",!0),vt=Ye("RIGHT",!0),dt=Ye("FULL",!0),Lt=Ye("INNER",!0),Ct=Ye("CROSS",!0),pt=Ye("JOIN",!0),wt=Ye("OUTER",!0),Et=Ye("OVER",!0),ht=Ye("UNION",!0),At=Ye("VALUE",!0),yt=(Ye("USING",!0)),Tt=Ye("WHERE",!0),mt=Ye("WITH",!0),St=Ye("GROUP",!0),It=Ye("BY",!0),Nt=Ye("ORDER",!0),Rt=Ye("HAVING",!0),_t=Ye("WINDOW",!0),gt=Ye("LIMIT",!0),Ot=Ye("OFFSET",!0),xt=Ye("ASC",!0),Ut=Ye("DESC",!0),Mt=Ye("ALL",!0),Dt=Ye("DISTINCT",!0),kt=Ye("BETWEEN",!0),$t=Ye("IN",!0),Ft=Ye("IS",!0),Pt=Ye("LIKE",!0),Ht=Ye("EXISTS",!0),Gt=Ye("NOT",!0),jt=Ye("AND",!0),Yt=Ye("OR",!0),Bt=Ye("COUNT",!0),Xt=Ye("MAX",!0),Wt=Ye("MIN",!0),Vt=Ye("SUM",!0),Kt=Ye("AVG",!0),qt=Ye("EXTRACT",!0),Zt=(Ye("CASE",!0)),zt=Ye("WHEN",!0),Jt=Ye("THEN",!0),Qt=Ye("ELSE",!0),re=Ye("END",!0),te=Ye("CAST",!0),ee=Ye("ARRAY",!0),ne=Ye("BYTES",!0),ue=Ye("BOOL",!0),se=(Ye("GEOGRAPHY",!0)),oe=(Ye("NUMERIC",!0)),ae=Ye("DECIMAL",!0),ie=Ye("SIGNED",!0),ce=Ye("UNSIGNED",!0),le=Ye("INT64",!0),fe=(Ye("INTEGER",!0)),be=(Ye("STRING",!0)),ve=Ye("STRUCT",!0),de=(Ye("FLOAT64",!0)),Le=(Ye("DATE",!0)),Ce=Ye("DATETIME",!0),pe=Ye("TIME",!0),we=Ye("TIMESTAMP",!0),Ee=(Ye("CURRENT_DATE",!0)),he=(Ye("INTERVAL",!0)),Ae=Ye("CURRENT_TIME",!0),ye=Ye("CURRENT_TIMESTAMP",!0),Te=(Ye(",",!1)),me=Ye("[",!1),Se=Ye("]",!1),Ie=Ye(";",!1),Ne=Ye("||",!1),Re=Ye("&&",!1),_e=Ye("/*",!1),ge=Ye("*/",!1),Oe=Ye("--",!1),xe=Ye("#",!1),Ue={type:"any"},Me=/^[ \t\n\r]/,De=Be([" ","\t","\n","\r"],!1,!1),ke=function(r){return {dataType:r}},$e=function(r,t){return {dataType:r,definition:t,anglebracket:!0}},Fe=0,Pe=[{line:1,column:1}],He=0,Ge=[],je=0;if("startRule"in t){if(!(t.startRule in o))throw new Error("Can't start parsing from rule \""+t.startRule+'".');a=o[t.startRule];}function Ye(r,t){return {type:"literal",text:r,ignoreCase:t}}function Be(r,t,e){return {type:"class",parts:r,inverted:t,ignoreCase:e}}function Xe(t){var e,n=Pe[t];if(n)return n;for(e=t-1;!Pe[e];)e--;for(n={line:(n=Pe[e]).line,column:n.column};e<t;)10===r.charCodeAt(e)?(n.line++,n.column=1):n.column++,e++;return Pe[t]=n,n}function We(r,t){var e=Xe(r),n=Xe(t);return {start:{offset:r,line:e.line,column:e.column},end:{offset:t,line:n.line,column:n.column}}}function Ve(r){Fe<He||(Fe>He&&(He=Fe,Ge=[]),Ge.push(r));}function Ke(r,t,e){return new u(u.buildMessage(r,t),r,t,e)}function qe(){var r,t;return r=Fe,Yu()!==s?((t=function(){var r,t,e,n,u,o,a,i;if(r=Fe,(t=Ze())!==s){if(e=[],n=Fe,(u=Yu())!==s&&(o=Gu())!==s&&(a=Yu())!==s&&(i=Ze())!==s?n=u=[u,o,a,i]:(Fe=n,n=s),n!==s)for(;n!==s;)e.push(n),n=Fe,(u=Yu())!==s&&(o=Gu())!==s&&(a=Yu())!==s&&(i=Ze())!==s?n=u=[u,o,a,i]:(Fe=n,n=s);else e=s;e!==s?(t=function(r,t){const e=[r&&r.ast||r];for(let r=0;r<t.length;r++)t[r][3]&&0!==t[r][3].length&&e.push(t[r][3]&&t[r][3].ast||t[r][3]);return {tableList:Array.from(cs),columnList:is(ls),ast:e}}(t,e),r=t):(Fe=r,r=s);}else Fe=r,r=s;return r}())===s&&(t=Ze()),t!==s?(r=t):(Fe=r,r=s)):(Fe=r,r=s),r}function Ze(){var t,e,n,u,o,a,l;return (t=function(){var t,e,n,u,o,a;t=Fe,(e=function(){var r,t,e,n,u,o,a,i,c;if(r=Fe,(t=iu())!==s)if(Yu()!==s)if((e=tn())!==s){for(n=[],u=Fe,(o=Yu())!==s&&(a=Uu())!==s&&(i=Yu())!==s&&(c=tn())!==s?u=o=[o,a,i,c]:(Fe=u,u=s);u!==s;)n.push(u),u=Fe,(o=Yu())!==s&&(a=Uu())!==s&&(i=Yu())!==s&&(c=tn())!==s?u=o=[o,a,i,c]:(Fe=u,u=s);n!==s?(t=v(e,n),r=t):(Fe=r,r=s);}else Fe=r,r=s;else Fe=r,r=s;else Fe=r,r=s;return r}())===s&&(e=null);e!==s&&Yu()!==s&&(n=Je())!==s&&Yu()!==s?((u=Ln())===s&&(u=null),u!==s&&Yu()!==s?((o=function(){var t,e,n,u,o,a,i;t=Fe,(e=function(){var t,e,n,u;t=Fe,"limit"===r.substr(Fe,5).toLowerCase()?(e=r.substr(Fe,5),Fe+=5):(e=s,0===je&&Ve(gt));e!==s?(n=Fe,je++,u=Hn(),je--,u===s?n=void 0:(Fe=n,n=s),n!==s?t=e=[e,n]:(Fe=t,t=s)):(Fe=t,t=s);return t}())!==s&&Yu()!==s&&(n=pn())!==s&&Yu()!==s?(u=Fe,(o=Uu())===s&&(o=lu()),o!==s&&(a=Yu())!==s&&(i=pn())!==s?u=o=[o,a,i]:(Fe=u,u=s),u===s&&(u=null),u!==s?(e=function(r,t){const e=[r];return t&&e.push(t[2]),{seperator:t&&t[0]&&t[0].toLowerCase()||"",value:e}}(n,u),t=e):(Fe=t,t=s)):(Fe=t,t=s);return t}())===s&&(o=null),o!==s&&Yu()!==s?((a=Gu())===s&&(a=null),a!==s?(i=e,c=n,l=u,f=o,e={tableList:Array.from(cs),columnList:is(ls),ast:{type:"bigquery",with:i,select:c&&c.ast,orderby:l,limit:f,parentheses:c&&c.parentheses||!1}},t=e):(Fe=t,t=s)):(Fe=t,t=s)):(Fe=t,t=s)):(Fe=t,t=s);var i,c,l,f;return t}())===s&&(t=Fe,e=Fe,40===r.charCodeAt(Fe)?(n="(",Fe++):(n=s,0===je&&Ve(i)),n!==s&&(u=Yu())!==s&&(o=rn())!==s&&(a=Yu())!==s?(41===r.charCodeAt(Fe)?(l=")",Fe++):(l=s,0===je&&Ve(c)),l!==s?e=n=[n,u,o,a,l]:(Fe=e,e=s)):(Fe=e,e=s),e!==s&&(e={...e[2],parentheses:!0}),t=e),t}function ze(){var t,e,n,u;return t=Fe,(e=function(){var t,e,n,u;t=Fe,"union"===r.substr(Fe,5).toLowerCase()?(e=r.substr(Fe,5),Fe+=5):(e=s,0===je&&Ve(ht));e!==s?(n=Fe,je++,u=Hn(),je--,u===s?n=void 0:(Fe=n,n=s),n!==s?t=e=[e,n]:(Fe=t,t=s)):(Fe=t,t=s);return t}())!==s&&Yu()!==s?((n=fu())===s&&(n=bu()),n===s&&(n=null),n!==s?(t=e=(u=n)?"union "+u.toLowerCase():"union"):(Fe=t,t=s)):(Fe=t,t=s),t===s&&(t=Fe,"intersect"===r.substr(Fe,9).toLowerCase()?(e=r.substr(Fe,9),Fe+=9):(e=s,0===je&&Ve(l)),e===s&&("except"===r.substr(Fe,6).toLowerCase()?(e=r.substr(Fe,6),Fe+=6):(e=s,0===je&&Ve(b))),e!==s&&Yu()!==s&&(n=bu())!==s?(t=e=function(r,t){return `${r.toLowerCase()} ${t.toLowerCase()}`}(e,n)):(Fe=t,t=s)),t}function Je(){var t,e,n,u,o,a,l;return (t=Qe())===s&&(t=Fe,e=Fe,40===r.charCodeAt(Fe)?(n="(",Fe++):(n=s,0===je&&Ve(i)),n!==s&&(u=Yu())!==s&&(o=Qe())!==s&&(a=Yu())!==s?(41===r.charCodeAt(Fe)?(l=")",Fe++):(l=s,0===je&&Ve(c)),l!==s?e=n=[n,u,o,a,l]:(Fe=e,e=s)):(Fe=e,e=s),e!==s&&(e={...e[2],parentheses:!0}),t=e),t}function Qe(){var r,t,e,n,u,o,a,i;if(r=Fe,(t=rn())!==s){for(e=[],n=Fe,(u=Yu())!==s?((o=ze())===s&&(o=null),o!==s&&(a=Yu())!==s&&(i=rn())!==s?n=u=[u,o,a,i]:(Fe=n,n=s)):(Fe=n,n=s);n!==s;)e.push(n),n=Fe,(u=Yu())!==s?((o=ze())===s&&(o=null),o!==s&&(a=Yu())!==s&&(i=rn())!==s?n=u=[u,o,a,i]:(Fe=n,n=s)):(Fe=n,n=s);e!==s?(r=t=function(r,t){let e=r;for(let r=0;r<t.length;r++)e._next=t[r][3],e.union=t[r][1],e=e._next;return {tableList:Array.from(cs),columnList:is(ls),ast:r}}(t,e)):(Fe=r,r=s);}else Fe=r,r=s;return r}function rn(){var t,e,n,u,o,a,l;return (t=function(){var t,e,n,u,o,a,i,c,l,f,b;t=Fe,(e=function(){var t,e,n,u;t=Fe,"select"===r.substr(Fe,6).toLowerCase()?(e=r.substr(Fe,6),Fe+=6):(e=s,0===je&&Ve(it));e!==s?(n=Fe,je++,u=Hn(),je--,u===s?n=void 0:(Fe=n,n=s),n!==s?t=e=[e,n]:(Fe=t,t=s)):(Fe=t,t=s);return t}())!==s&&Bu()!==s?((n=function(){var t,e,n;t=Fe,(e=uu())!==s&&Yu()!==s?((n=Su())===s&&(n=function(){var t,e,n,u;t=Fe,"value"===r.substr(Fe,5).toLowerCase()?(e=r.substr(Fe,5),Fe+=5):(e=s,0===je&&Ve(At));e!==s?(n=Fe,je++,u=Hn(),je--,u===s?n=void 0:(Fe=n,n=s),n!==s?(t=e="VALUE"):(Fe=t,t=s)):(Fe=t,t=s);return t}()),n!==s?(u=n,e=`${e[0].toLowerCase()} ${u.toLowerCase()}`,t=e):(Fe=t,t=s)):(Fe=t,t=s);var u;return t}())===s&&(n=null),n!==s&&Yu()!==s?((u=fu())===s&&(u=bu()),u===s&&(u=null),u!==s&&Yu()!==s&&(o=en())!==s&&Yu()!==s?((a=function(){var t,e,n,u,o;t=Fe,nu()!==s&&Yu()!==s?("unnest"===r.substr(Fe,6).toLowerCase()?(e=r.substr(Fe,6),Fe+=6):(e=s,0===je&&Ve(E)),e!==s&&Yu()!==s&&Du()!==s&&Yu()!==s?((n=En())===s&&(n=null),n!==s&&Yu()!==s&&ku()!==s&&Yu()!==s?((u=sn())===s&&(u=null),u!==s&&Yu()!==s?((o=function(){var r,t;r=Fe,iu()!==s&&Yu()!==s&&lu()!==s&&Yu()!==s?((t=sn())===s&&(t=null),t!==s?(r={keyword:"with offset as",as:t}):(Fe=r,r=s)):(Fe=r,r=s);return r}())===s&&(o=null),o!==s?(t={type:"unnest",expr:n,parentheses:!0,as:u,with_offset:o}):(Fe=t,t=s)):(Fe=t,t=s)):(Fe=t,t=s)):(Fe=t,t=s)):(Fe=t,t=s);t===s&&(t=Fe,nu()!==s&&Yu()!==s&&(e=function(){var r,t,e,n;if(r=Fe,(t=an())!==s){for(e=[],n=on();n!==s;)e.push(n),n=on();e!==s?(t=h(t,e),r=t):(Fe=r,r=s);}else Fe=r,r=s;return r}())!==s?(t=e):(Fe=t,t=s));return t}())===s&&(a=null),a!==s&&Yu()!==s?((i=function(){var t,e,n,u,o,a;t=Fe,"for"===r.substr(Fe,3).toLowerCase()?(e=r.substr(Fe,3),Fe+=3):(e=s,0===je&&Ve(d));e!==s&&Yu()!==s?("system_time"===r.substr(Fe,11).toLowerCase()?(n=r.substr(Fe,11),Fe+=11):(n=s,0===je&&Ve(L)),n!==s&&Yu()!==s?("as"===r.substr(Fe,2).toLowerCase()?(u=r.substr(Fe,2),Fe+=2):(u=s,0===je&&Ve(C)),u!==s&&Yu()!==s?("of"===r.substr(Fe,2).toLowerCase()?(o=r.substr(Fe,2),Fe+=2):(o=s,0===je&&Ve(p)),o!==s&&Yu()!==s&&(a=En())!==s?(t=e={keyword:"for system_time as of",expr:a}):(Fe=t,t=s)):(Fe=t,t=s)):(Fe=t,t=s)):(Fe=t,t=s);return t}())===s&&(i=null),i!==s&&Yu()!==s?((c=function(){var t,e;t=Fe,function(){var t,e,n,u;t=Fe,"where"===r.substr(Fe,5).toLowerCase()?(e=r.substr(Fe,5),Fe+=5):(e=s,0===je&&Ve(Tt));e!==s?(n=Fe,je++,u=Hn(),je--,u===s?n=void 0:(Fe=n,n=s),n!==s?t=e=[e,n]:(Fe=t,t=s)):(Fe=t,t=s);return t}()!==s&&Yu()!==s?((e=function(){var r,t,e,n,u,o,a,i;if(r=Fe,(t=An())!==s){for(e=[],n=Fe,(u=Yu())!==s?((o=Eu())===s&&(o=hu()),o!==s&&(a=Yu())!==s&&(i=An())!==s?n=u=[u,o,a,i]:(Fe=n,n=s)):(Fe=n,n=s);n!==s;)e.push(n),n=Fe,(u=Yu())!==s?((o=Eu())===s&&(o=hu()),o!==s&&(a=Yu())!==s&&(i=An())!==s?n=u=[u,o,a,i]:(Fe=n,n=s)):(Fe=n,n=s);e!==s?(t=os(t,e),r=t):(Fe=r,r=s);}else Fe=r,r=s;return r}())===s&&(e=En()),e!==s?(t=e):(Fe=t,t=s)):(Fe=t,t=s);return t}())===s&&(c=null),c!==s&&Yu()!==s?((l=function(){var t,e,n;t=Fe,(e=function(){var t,e,n,u;t=Fe,"group"===r.substr(Fe,5).toLowerCase()?(e=r.substr(Fe,5),Fe+=5):(e=s,0===je&&Ve(St));e!==s?(n=Fe,je++,u=Hn(),je--,u===s?n=void 0:(Fe=n,n=s),n!==s?t=e=[e,n]:(Fe=t,t=s)):(Fe=t,t=s);return t}())!==s&&Yu()!==s&&cu()!==s&&Yu()!==s&&(n=wn())!==s?(e=n.value,t=e):(Fe=t,t=s);return t}())===s&&(l=null),l!==s&&Yu()!==s?((f=function(){var t,e;t=Fe,function(){var t,e,n,u;t=Fe,"having"===r.substr(Fe,6).toLowerCase()?(e=r.substr(Fe,6),Fe+=6):(e=s,0===je&&Ve(Rt));e!==s?(n=Fe,je++,u=Hn(),je--,u===s?n=void 0:(Fe=n,n=s),n!==s?t=e=[e,n]:(Fe=t,t=s)):(Fe=t,t=s);return t}()!==s&&Yu()!==s&&(e=En())!==s?(t=e):(Fe=t,t=s);return t}())===s&&(f=null),f!==s&&Yu()!==s?((b=function(){var t,e;t=Fe,function(){var t,e,n,u;t=Fe,"window"===r.substr(Fe,6).toLowerCase()?(e=r.substr(Fe,6),Fe+=6):(e=s,0===je&&Ve(_t));e!==s?(n=Fe,je++,u=Hn(),je--,u===s?n=void 0:(Fe=n,n=s),n!==s?t=e=[e,n]:(Fe=t,t=s)):(Fe=t,t=s);return t}()!==s&&Yu()!==s&&(e=function(){var r,t,e,n,u,o,a,i;if(r=Fe,(t=bn())!==s){for(e=[],n=Fe,(u=Yu())!==s&&(o=Uu())!==s&&(a=Yu())!==s&&(i=bn())!==s?n=u=[u,o,a,i]:(Fe=n,n=s);n!==s;)e.push(n),n=Fe,(u=Yu())!==s&&(o=Uu())!==s&&(a=Yu())!==s&&(i=bn())!==s?n=u=[u,o,a,i]:(Fe=n,n=s);e!==s?(t=v(t,e),r=t):(Fe=r,r=s);}else Fe=r,r=s;return r}())!==s?(t={keyword:"window",type:"window",expr:e}):(Fe=t,t=s);return t}())===s&&(b=null),b!==s?(e=function(r,t,e,n,u,s,o,a,i){return Array.isArray(n)&&n.forEach(r=>r.table&&cs.add(`select::${r.db}::${r.table}`)),{type:"select",as_struct_val:r,distinct:t,columns:e,from:n,for_sys_time_as_of:u,where:s,groupby:o,having:a,window:i}}(n,u,o,a,i,c,l,f,b),t=e):(Fe=t,t=s)):(Fe=t,t=s)):(Fe=t,t=s)):(Fe=t,t=s)):(Fe=t,t=s)):(Fe=t,t=s)):(Fe=t,t=s)):(Fe=t,t=s)):(Fe=t,t=s);return t}())===s&&(t=Fe,e=Fe,40===r.charCodeAt(Fe)?(n="(",Fe++):(n=s,0===je&&Ve(i)),n!==s&&(u=Yu())!==s&&(o=rn())!==s&&(a=Yu())!==s?(41===r.charCodeAt(Fe)?(l=")",Fe++):(l=s,0===je&&Ve(c)),l!==s?e=n=[n,u,o,a,l]:(Fe=e,e=s)):(Fe=e,e=s),e!==s&&(e={...e[2],parentheses_symbol:!0}),t=e),t}function tn(){var r,t,e;return r=Fe,(t=Pn())!==s&&Yu()!==s&&uu()!==s&&Yu()!==s&&Du()!==s&&Yu()!==s&&(e=Je())!==s&&Yu()!==s&&ku()!==s?(r=t={name:t,stmt:e}):(Fe=r,r=s),r}function en(){var t,e,n,u,o,a,i,c,l,f,v,d;if(t=Fe,(e=Mu())!==s&&(n=Yu())!==s?("except"===r.substr(Fe,6).toLowerCase()?(u=r.substr(Fe,6),Fe+=6):(u=s,0===je&&Ve(b)),u===s&&("replace"===r.substr(Fe,7).toLowerCase()?(u=r.substr(Fe,7),Fe+=7):(u=s,0===je&&Ve(w))),u!==s&&(o=Yu())!==s&&(a=Du())!==s&&(i=Yu())!==s&&(c=nn())!==s&&Yu()!==s&&ku()!==s?(l=u,f=c,ls.add("select::null::(.*)"),t=e={expr_list:f,parentheses:!0,star:"*",type:l.toLowerCase()}):(Fe=t,t=s)):(Fe=t,t=s),t===s){if(t=Fe,(e=fu())===s&&(e=Fe,(n=Mu())!==s?(u=Fe,je++,o=Hn(),je--,o===s?u=void 0:(Fe=u,u=s),u!==s?e=n=[n,u]:(Fe=e,e=s)):(Fe=e,e=s),e===s&&(e=Mu())),e!==s){for(n=[],u=Fe,(o=Yu())!==s&&(a=Uu())!==s&&(i=Yu())!==s&&(c=un())!==s?u=o=[o,a,i,c]:(Fe=u,u=s);u!==s;)n.push(u),u=Fe,(o=Yu())!==s&&(a=Uu())!==s&&(i=Yu())!==s&&(c=un())!==s?u=o=[o,a,i,c]:(Fe=u,u=s);n!==s&&(u=Yu())!==s?((o=Uu())===s&&(o=null),o!==s?(v=e,d=n,ls.add("select::null::(.*)"),t=e=d&&d.length>0?(v[0]={expr:{type:"column_ref",table:null,column:"*"},as:null},ss(v[0],d)):v[0]):(Fe=t,t=s)):(Fe=t,t=s);}else Fe=t,t=s;t===s&&(t=Fe,(e=nn())!==s&&(n=Yu())!==s?((u=Uu())===s&&(u=null),u!==s?(t=e=e):(Fe=t,t=s)):(Fe=t,t=s));}return t}function nn(){var r,t,e,n,u,o,a,i;if(r=Fe,(t=un())!==s){for(e=[],n=Fe,(u=Yu())!==s&&(o=Uu())!==s&&(a=Yu())!==s&&(i=un())!==s?n=u=[u,o,a,i]:(Fe=n,n=s);n!==s;)e.push(n),n=Fe,(u=Yu())!==s&&(o=Uu())!==s&&(a=Yu())!==s&&(i=un())!==s?n=u=[u,o,a,i]:(Fe=n,n=s);e!==s?(r=t=v(t,e)):(Fe=r,r=s);}else Fe=r,r=s;return r}function un(){var r,t,e,n,u,o,a,i;return r=Fe,(t=Dn())!==s&&Yu()!==s&&xu()!==s?(e=Fe,(n=function(){var r,t,e;return r=Fe,(t=Dn())!==s&&Yu()!==s&&Pu()!==s&&Yu()!==s&&lu()!==s&&Yu()!==s&&Du()!==s&&Yu()!==s&&(e=Zn())!==s&&Yu()!==s&&ku()!==s&&Yu()!==s&&Hu()!==s?(r=t=`${t}[offset(${e.value})]`):(Fe=r,r=s),r===s&&(r=Dn()),r}())!==s&&(u=Yu())!==s&&(o=xu())!==s?e=n=[n,u,o]:(Fe=e,e=s),e===s&&(e=null),e!==s&&(n=Yu())!==s&&(u=Mu())!==s?(a=t,i=e,ls.add(`select::${a}::(.*)`),i&&(a=`${a}.${i[0]}`),r=t={expr:{type:"column_ref",table:a,column:"*"},as:null}):(Fe=r,r=s)):(Fe=r,r=s),r===s&&(r=function(){var r,t,e;return r=Fe,(t=En())!==s&&Yu()!==s?((e=sn())===s&&(e=null),e!==s?(r=t={expr:t,as:e}):(Fe=r,r=s)):(Fe=r,r=s),r}()),r}function sn(){var r,t,e;return r=Fe,(t=uu())!==s&&Yu()!==s&&(e=function(){var r,t;r=Fe,(t=Pn())!==s?((function(r){if(!0===rs[r.toUpperCase()])throw new Error("Error: "+JSON.stringify(r)+" is a reserved word, can not as alias clause");return !1}(t)?s:void 0)!==s?(r=t=t):(Fe=r,r=s)):(Fe=r,r=s);r===s&&(r=Fe,(t=kn())!==s&&(t=t),r=t);return r}())!==s?(r=t=e):(Fe=r,r=s),r===s&&(r=Fe,(t=uu())===s&&(t=null),t!==s&&Yu()!==s&&(e=Dn())!==s?(r=t=e):(Fe=r,r=s)),r}function on(){var t,e,n;return t=Fe,Yu()!==s&&(e=Uu())!==s&&Yu()!==s&&(n=an())!==s?(t=n):(Fe=t,t=s),t===s&&(t=Fe,Yu()!==s&&(e=function(){var t,e,n,u,o,a,i,c,l,f,b;if(t=Fe,(e=cn())!==s)if(Yu()!==s)if((n=an())!==s)if(Yu()!==s)if((u=function(){var t,e,n,u;t=Fe,"using"===r.substr(Fe,5).toLowerCase()?(e=r.substr(Fe,5),Fe+=5):(e=s,0===je&&Ve(yt));e!==s?(n=Fe,je++,u=Hn(),je--,u===s?n=void 0:(Fe=n,n=s),n!==s?t=e=[e,n]:(Fe=t,t=s)):(Fe=t,t=s);return t}())!==s)if(Yu()!==s)if(Du()!==s)if(Yu()!==s)if((o=Pn())!==s){for(a=[],i=Fe,(c=Yu())!==s&&(l=Uu())!==s&&(f=Yu())!==s&&(b=Pn())!==s?i=c=[c,l,f,b]:(Fe=i,i=s);i!==s;)a.push(i),i=Fe,(c=Yu())!==s&&(l=Uu())!==s&&(f=Yu())!==s&&(b=Pn())!==s?i=c=[c,l,f,b]:(Fe=i,i=s);a!==s&&(i=Yu())!==s&&(c=ku())!==s?(v=e,L=o,C=a,(d=n).join=v,d.using=ss(L,C),t=e=d):(Fe=t,t=s);}else Fe=t,t=s;else Fe=t,t=s;else Fe=t,t=s;else Fe=t,t=s;else Fe=t,t=s;else Fe=t,t=s;else Fe=t,t=s;else Fe=t,t=s;else Fe=t,t=s;var v,d,L,C;t===s&&(t=Fe,(e=cn())!==s&&Yu()!==s&&(n=an())!==s&&Yu()!==s?((u=fn())===s&&(u=null),u!==s?(e=function(r,t,e){return t.join=r,t.on=e,t}(e,n,u),t=e):(Fe=t,t=s)):(Fe=t,t=s),t===s&&(t=Fe,(e=cn())!==s&&Yu()!==s&&(n=Du())!==s&&Yu()!==s&&(u=Je())!==s&&Yu()!==s&&ku()!==s&&Yu()!==s?((o=sn())===s&&(o=null),o!==s&&(a=Yu())!==s?((i=fn())===s&&(i=null),i!==s?(e=function(r,t,e,n){return t.parentheses=!0,{expr:t,as:e,join:r,on:n}}(e,u,o,i),t=e):(Fe=t,t=s)):(Fe=t,t=s)):(Fe=t,t=s)));return t}())!==s?(t=e):(Fe=t,t=s)),t}function an(){var r,t,e,n,u,o;return r=Fe,(t=ln())!==s&&Yu()!==s?((e=sn())===s&&(e=null),e!==s?(o=e,r=t="var"===(u=t).type?(u.as=o,u):{db:u.db,table:u.table,as:o}):(Fe=r,r=s)):(Fe=r,r=s),r===s&&(r=Fe,(t=Du())!==s&&Yu()!==s&&(e=Je())!==s&&Yu()!==s&&ku()!==s&&Yu()!==s?((n=sn())===s&&(n=null),n!==s?(r=t=function(r,t){return r.parentheses=!0,{expr:r,as:t}}(e,n)):(Fe=r,r=s)):(Fe=r,r=s)),r}function cn(){var t,e,n;return t=Fe,(e=function(){var t,e,n,u;t=Fe,"left"===r.substr(Fe,4).toLowerCase()?(e=r.substr(Fe,4),Fe+=4):(e=s,0===je&&Ve(bt));e!==s?(n=Fe,je++,u=Hn(),je--,u===s?n=void 0:(Fe=n,n=s),n!==s?t=e=[e,n]:(Fe=t,t=s)):(Fe=t,t=s);return t}())!==s&&Yu()!==s?((n=ou())===s&&(n=null),n!==s&&Yu()!==s&&su()!==s?(t=e="LEFT JOIN"):(Fe=t,t=s)):(Fe=t,t=s),t===s&&(t=Fe,(e=function(){var t,e,n,u;t=Fe,"right"===r.substr(Fe,5).toLowerCase()?(e=r.substr(Fe,5),Fe+=5):(e=s,0===je&&Ve(vt));e!==s?(n=Fe,je++,u=Hn(),je--,u===s?n=void 0:(Fe=n,n=s),n!==s?t=e=[e,n]:(Fe=t,t=s)):(Fe=t,t=s);return t}())!==s&&Yu()!==s?((n=ou())===s&&(n=null),n!==s&&Yu()!==s&&su()!==s?(t=e="RIGHT JOIN"):(Fe=t,t=s)):(Fe=t,t=s),t===s&&(t=Fe,(e=function(){var t,e,n,u;t=Fe,"full"===r.substr(Fe,4).toLowerCase()?(e=r.substr(Fe,4),Fe+=4):(e=s,0===je&&Ve(dt));e!==s?(n=Fe,je++,u=Hn(),je--,u===s?n=void 0:(Fe=n,n=s),n!==s?t=e=[e,n]:(Fe=t,t=s)):(Fe=t,t=s);return t}())!==s&&Yu()!==s?((n=ou())===s&&(n=null),n!==s&&Yu()!==s&&su()!==s?(t=e="FULL JOIN"):(Fe=t,t=s)):(Fe=t,t=s),t===s&&(t=Fe,(e=function(){var t,e,n,u;t=Fe,"inner"===r.substr(Fe,5).toLowerCase()?(e=r.substr(Fe,5),Fe+=5):(e=s,0===je&&Ve(Lt));e!==s?(n=Fe,je++,u=Hn(),je--,u===s?n=void 0:(Fe=n,n=s),n!==s?t=e=[e,n]:(Fe=t,t=s)):(Fe=t,t=s);return t}())===s&&(e=function(){var t,e,n,u;t=Fe,"cross"===r.substr(Fe,5).toLowerCase()?(e=r.substr(Fe,5),Fe+=5):(e=s,0===je&&Ve(Ct));e!==s?(n=Fe,je++,u=Hn(),je--,u===s?n=void 0:(Fe=n,n=s),n!==s?t=e=[e,n]:(Fe=t,t=s)):(Fe=t,t=s);return t}()),e!==s&&Yu()!==s&&(n=su())!==s?(t=e=e[0].toUpperCase()+" JOIN"):(Fe=t,t=s)))),t}function ln(){var r,t,e,n,u,o,a,i;return r=Fe,(t=Dn())!==s?(e=Fe,(n=Yu())!==s&&(u=xu())!==s&&(o=Yu())!==s&&(a=Dn())!==s?e=n=[n,u,o,a]:(Fe=e,e=s),e!==s?(n=Fe,(u=Yu())!==s&&(o=xu())!==s&&(a=Yu())!==s&&(i=Dn())!==s?n=u=[u,o,a,i]:(Fe=n,n=s),n!==s?(r=t=function(r,t,e){const n={db:null,table:r};return null!==e&&(n.db=`${r}.${t[3]}`,n.table=e[3]),n}(t,e,n)):(Fe=r,r=s)):(Fe=r,r=s)):(Fe=r,r=s),r===s&&(r=Fe,(t=Dn())!==s?(e=Fe,(n=Yu())!==s&&(u=xu())!==s&&(o=Yu())!==s&&(a=Dn())!==s?e=n=[n,u,o,a]:(Fe=e,e=s),e===s&&(e=null),e!==s?(r=t=function(r,t){const e={db:null,table:r};return null!==t&&(e.db=r,e.table=t[3]),e}(t,e)):(Fe=r,r=s)):(Fe=r,r=s)),r}function fn(){var t,e;return t=Fe,function(){var t,e,n,u;t=Fe,"on"===r.substr(Fe,2).toLowerCase()?(e=r.substr(Fe,2),Fe+=2):(e=s,0===je&&Ve(ft));e!==s?(n=Fe,je++,u=Hn(),je--,u===s?n=void 0:(Fe=n,n=s),n!==s?t=e=[e,n]:(Fe=t,t=s)):(Fe=t,t=s);return t}()!==s&&Yu()!==s&&(e=En())!==s?(t=e):(Fe=t,t=s),t}function bn(){var r,t,e;return r=Fe,(t=Pn())!==s&&Yu()!==s&&uu()!==s&&Yu()!==s&&(e=vn())!==s?(r=t={name:t,as_window_specification:e}):(Fe=r,r=s),r}function vn(){var t,e,n;return t=Fe,(e=Pn())!==s&&(e=e),(t=e)===s&&(t=Fe,(e=Du())!==s&&Yu()!==s?((n=function(){var t,e,n,u,o;t=Fe,(e=Dn())===s&&(e=null);e!==s&&Yu()!==s?((n=dn())===s&&(n=null),n!==s&&Yu()!==s?((u=Ln())===s&&(u=null),u!==s&&Yu()!==s?((o=function(){var t,e,n,u,o,a,i,c,l,f;t=Fe,"range"===r.substr(Fe,5).toLowerCase()?(e=r.substr(Fe,5),Fe+=5):(e=s,0===je&&Ve(A));e!==s&&Yu()!==s&&vu()!==s?("unbounded"===r.substr(Fe,9).toLowerCase()?(n=r.substr(Fe,9),Fe+=9):(n=s,0===je&&Ve(y)),n!==s&&(u=Yu())!==s?("preceding"===r.substr(Fe,9).toLowerCase()?(o=r.substr(Fe,9),Fe+=9):(o=s,0===je&&Ve(T)),o!==s&&(a=Yu())!==s&&Eu()!==s&&Yu()!==s?("current"===r.substr(Fe,7).toLowerCase()?(i=r.substr(Fe,7),Fe+=7):(i=s,0===je&&Ve(m)),i!==s&&(c=Yu())!==s?("ROW"===r.substr(Fe,3)?(l="ROW",Fe+=3):(l=s,0===je&&Ve(S)),l!==s?(t=e="range between unbounded preceding and current row"):(Fe=t,t=s)):(Fe=t,t=s)):(Fe=t,t=s)):(Fe=t,t=s)):(Fe=t,t=s);t===s&&(t=Fe,"rows"===r.substr(Fe,4).toLowerCase()?(e=r.substr(Fe,4),Fe+=4):(e=s,0===je&&Ve(I)),e!==s&&Yu()!==s&&vu()!==s&&(n=Yu())!==s&&(u=Zn())!==s&&(o=Yu())!==s?("preceding"===r.substr(Fe,9).toLowerCase()?(a=r.substr(Fe,9),Fe+=9):(a=s,0===je&&Ve(T)),a!==s&&Yu()!==s&&Eu()!==s&&(i=Yu())!==s&&(c=Zn())!==s&&(l=Yu())!==s?("following"===r.substr(Fe,9).toLowerCase()?(f=r.substr(Fe,9),Fe+=9):(f=s,0===je&&Ve(N)),f!==s?(b=c,e=`rows between ${u.value} preceding and ${b.value} following`,t=e):(Fe=t,t=s)):(Fe=t,t=s)):(Fe=t,t=s));var b;return t}())===s&&(o=null),o!==s?(e=function(r,t,e,n){return {name:r,partitionby:t,orderby:e,window_frame_clause:n}}(e,n,u,o),t=e):(Fe=t,t=s)):(Fe=t,t=s)):(Fe=t,t=s)):(Fe=t,t=s);return t}())===s&&(n=null),n!==s&&Yu()!==s&&ku()!==s?(t=e={window_specification:n,parentheses:!0}):(Fe=t,t=s)):(Fe=t,t=s)),t}function dn(){var t,e;return t=Fe,function(){var t,e,n,u;t=Fe,"partition"===r.substr(Fe,9).toLowerCase()?(e=r.substr(Fe,9),Fe+=9):(e=s,0===je&&Ve(ct));e!==s?(n=Fe,je++,u=Hn(),je--,u===s?n=void 0:(Fe=n,n=s),n!==s?(t=e="PARTITION"):(Fe=t,t=s)):(Fe=t,t=s);return t}()!==s&&Yu()!==s&&cu()!==s&&Yu()!==s&&(e=en())!==s?(t=e):(Fe=t,t=s),t}function Ln(){var t,e;return t=Fe,function(){var t,e,n,u;t=Fe,"order"===r.substr(Fe,5).toLowerCase()?(e=r.substr(Fe,5),Fe+=5):(e=s,0===je&&Ve(Nt));e!==s?(n=Fe,je++,u=Hn(),je--,u===s?n=void 0:(Fe=n,n=s),n!==s?t=e=[e,n]:(Fe=t,t=s)):(Fe=t,t=s);return t}()!==s&&Yu()!==s&&cu()!==s&&Yu()!==s&&(e=function(){var r,t,e,n,u,o,a,i;if(r=Fe,(t=Cn())!==s){for(e=[],n=Fe,(u=Yu())!==s&&(o=Uu())!==s&&(a=Yu())!==s&&(i=Cn())!==s?n=u=[u,o,a,i]:(Fe=n,n=s);n!==s;)e.push(n),n=Fe,(u=Yu())!==s&&(o=Uu())!==s&&(a=Yu())!==s&&(i=Cn())!==s?n=u=[u,o,a,i]:(Fe=n,n=s);e!==s?(t=v(t,e),r=t):(Fe=r,r=s);}else Fe=r,r=s;return r}())!==s?(t=e):(Fe=t,t=s),t}function Cn(){var t,e,n;return t=Fe,(e=En())!==s&&Yu()!==s?((n=function(){var t,e,n,u;t=Fe,"desc"===r.substr(Fe,4).toLowerCase()?(e=r.substr(Fe,4),Fe+=4):(e=s,0===je&&Ve(Ut));e!==s?(n=Fe,je++,u=Hn(),je--,u===s?n=void 0:(Fe=n,n=s),n!==s?(t=e="DESC"):(Fe=t,t=s)):(Fe=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=Fe,"asc"===r.substr(Fe,3).toLowerCase()?(e=r.substr(Fe,3),Fe+=3):(e=s,0===je&&Ve(xt));e!==s?(n=Fe,je++,u=Hn(),je--,u===s?n=void 0:(Fe=n,n=s),n!==s?(t=e="ASC"):(Fe=t,t=s)):(Fe=t,t=s);return t}()),n===s&&(n=null),n!==s?(t=e=function(r,t){const e={expr:r,type:"ASC"};return "DESC"===t&&(e.type="DESC"),e}(e,n)):(Fe=t,t=s)):(Fe=t,t=s),t}function pn(){var r;return (r=Zn())===s&&(r=Yn()),r}function wn(){var r,t,e,n,u,o,a,i;if(r=Fe,(t=En())!==s){for(e=[],n=Fe,(u=Yu())!==s&&(o=Uu())!==s&&(a=Yu())!==s&&(i=En())!==s?n=u=[u,o,a,i]:(Fe=n,n=s);n!==s;)e.push(n),n=Fe,(u=Yu())!==s&&(o=Uu())!==s&&(a=Yu())!==s&&(i=En())!==s?n=u=[u,o,a,i]:(Fe=n,n=s);e!==s?(r=t=function(r,t){const e={type:"expr_list"};return e.value=ss(r,t),e}(t,e)):(Fe=r,r=s);}else Fe=r,r=s;return r}function En(){var r;return (r=function(){var r,t,e;r=Fe,(t=Qu())===s&&(t=Su());t!==s&&Yu()!==s&&Du()!==s&&Yu()!==s&&(e=en())!==s&&Yu()!==s&&ku()!==s?(r=t={definition:n=t,expr_list:e,type:"struct",keyword:n&&"struct",parentheses:!0}):(Fe=r,r=s);var n;return r}())===s&&(r=function(){var r,t,e,n,u,o,a,i;if(r=Fe,(t=xn())!==s){if(e=[],n=Fe,(u=Yu())!==s&&(o=ju())!==s&&(a=Yu())!==s&&(i=xn())!==s?n=u=[u,o,a,i]:(Fe=n,n=s),n!==s)for(;n!==s;)e.push(n),n=Fe,(u=Yu())!==s&&(o=ju())!==s&&(a=Yu())!==s&&(i=xn())!==s?n=u=[u,o,a,i]:(Fe=n,n=s);else e=s;e!==s?(t=os(t,e),r=t):(Fe=r,r=s);}else Fe=r,r=s;return r}())===s&&(r=function(){var r,t,e,n,u,o;if(r=Fe,(t=_n())!==s){if(e=[],n=Fe,(u=Yu())!==s&&(o=xn())!==s?n=u=[u,o]:(Fe=n,n=s),n!==s)for(;n!==s;)e.push(n),n=Fe,(u=Yu())!==s&&(o=xn())!==s?n=u=[u,o]:(Fe=n,n=s);else e=s;e!==s?(t=es(t,e[0][1]),r=t):(Fe=r,r=s);}else Fe=r,r=s;return r}())===s&&(r=yn())===s&&(r=rn())===s&&(r=function(){var r,t,e,n,u,o;r=Fe,(t=Pu())!==s&&Yu()!==s&&(e=en())!==s&&(n=Yu())!==s&&(u=Hu())!==s?(r=t={array_path:e,type:"array",keyword:"",parentheses:!0}):(Fe=r,r=s);r===s&&(r=Fe,(t=Ju())===s&&(t=Tu()),t===s&&(t=null),t!==s&&Pu()!==s&&(e=Yu())!==s&&(n=function(){var r,t,e,n,u,o,a,i;if(r=Fe,(t=Xn())!==s){for(e=[],n=Fe,(u=Yu())!==s&&(o=Uu())!==s&&(a=Yu())!==s&&(i=Xn())!==s?n=u=[u,o,a,i]:(Fe=n,n=s);n!==s;)e.push(n),n=Fe,(u=Yu())!==s&&(o=Uu())!==s&&(a=Yu())!==s&&(i=Xn())!==s?n=u=[u,o,a,i]:(Fe=n,n=s);e!==s?(t=v(t,e),r=t):(Fe=r,r=s);}else Fe=r,r=s;return r}())!==s&&(u=Yu())!==s&&Hu()!==s?(t=function(r,t){return {definition:r,array_path:t.map(r=>({expr:r,as:null})),type:"array",keyword:r&&"array",parentheses:!0}}(t,n),r=t):(Fe=r,r=s),r===s&&(r=Fe,(t=Ju())===s&&(t=Tu()),t===s&&(t=null),t!==s&&Yu()!==s?((e=Pu())===s&&(e=Du()),e!==s&&(n=Yu())!==s?((u=function(){var r,t,e,n,u,o,a,i;if(r=Fe,(t=hn())!==s){for(e=[],n=Fe,(u=Yu())!==s&&(o=Uu())!==s&&(a=Yu())!==s&&(i=hn())!==s?n=u=[u,o,a,i]:(Fe=n,n=s);n!==s;)e.push(n),n=Fe,(u=Yu())!==s&&(o=Uu())!==s&&(a=Yu())!==s&&(i=hn())!==s?n=u=[u,o,a,i]:(Fe=n,n=s);e!==s?(t=v(t,e),r=t):(Fe=r,r=s);}else Fe=r,r=s;return r}())===s&&(u=En()),u!==s&&Yu()!==s?((o=Hu())===s&&(o=ku()),o!==s?(t=function(r,t){return {definition:r,expr_list:t,type:"array",keyword:r&&"array",parentheses:!0}}(t,u),r=t):(Fe=r,r=s)):(Fe=r,r=s)):(Fe=r,r=s)):(Fe=r,r=s)));return r}()),r}function hn(){var r,t;return r=Fe,Du()!==s&&Yu()!==s&&(t=en())!==s&&Yu()!==s&&ku()!==s?(r=t):(Fe=r,r=s),r}function An(){var r,t,e,n,u,o;return r=Fe,(t=Du())===s&&(t=null),t!==s&&Yu()!==s&&(e=yn())!==s&&Yu()!==s?((n=ku())===s&&(n=null),n!==s?((function(r,t,e){if(r&&!e||!r&&e)return !0}(t,0,n)?s:void 0)!==s?(u=e,o=n,t&&o&&(u.parentheses=!0),r=t=u):(Fe=r,r=s)):(Fe=r,r=s)):(Fe=r,r=s),r}function yn(){var r,t,e,n,u,o,a,i;if(r=Fe,(t=Tn())!==s){for(e=[],n=Fe,(u=Bu())!==s&&(o=hu())!==s&&(a=Yu())!==s&&(i=Tn())!==s?n=u=[u,o,a,i]:(Fe=n,n=s);n!==s;)e.push(n),n=Fe,(u=Bu())!==s&&(o=hu())!==s&&(a=Yu())!==s&&(i=Tn())!==s?n=u=[u,o,a,i]:(Fe=n,n=s);e!==s?(r=t=R(t,e)):(Fe=r,r=s);}else Fe=r,r=s;return r}function Tn(){var r,t,e,n,u,o,a,i;if(r=Fe,(t=mn())!==s){for(e=[],n=Fe,(u=Bu())!==s&&(o=Eu())!==s&&(a=Yu())!==s&&(i=mn())!==s?n=u=[u,o,a,i]:(Fe=n,n=s);n!==s;)e.push(n),n=Fe,(u=Bu())!==s&&(o=Eu())!==s&&(a=Yu())!==s&&(i=mn())!==s?n=u=[u,o,a,i]:(Fe=n,n=s);e!==s?(r=t=R(t,e)):(Fe=r,r=s);}else Fe=r,r=s;return r}function mn(){var t,e,n,u,o;return (t=Sn())===s&&(t=function(){var r,t,e;r=Fe,(t=function(){var r,t,e,n,u;r=Fe,t=Fe,(e=wu())!==s&&(n=Yu())!==s&&(u=pu())!==s?t=e=[e,n,u]:(Fe=t,t=s);t!==s&&(t=O(t));(r=t)===s&&(r=pu());return r}())!==s&&Yu()!==s&&Du()!==s&&Yu()!==s&&(e=Je())!==s&&Yu()!==s&&ku()!==s?(n=t,(u=e).parentheses=!0,t=es(n,u),r=t):(Fe=r,r=s);var n,u;return r}())===s&&(t=Fe,(e=wu())===s&&(e=Fe,33===r.charCodeAt(Fe)?(n="!",Fe++):(n=s,0===je&&Ve(_)),n!==s?(u=Fe,je++,61===r.charCodeAt(Fe)?(o="=",Fe++):(o=s,0===je&&Ve(g)),je--,o===s?u=void 0:(Fe=u,u=s),u!==s?e=n=[n,u]:(Fe=e,e=s)):(Fe=e,e=s)),e!==s&&(n=Yu())!==s&&(u=mn())!==s?(t=e=es("NOT",u)):(Fe=t,t=s)),t}function Sn(){var r,t,e,n,u;return r=Fe,(t=Rn())!==s&&Yu()!==s?((e=function(){var r;(r=function(){var t,e,n,u,o,a;t=[],e=Fe,(n=Yu())!==s&&(u=In())!==s&&(o=Yu())!==s&&(a=Rn())!==s?e=n=[n,u,o,a]:(Fe=e,e=s);if(e!==s)for(;e!==s;)t.push(e),e=Fe,(n=Yu())!==s&&(u=In())!==s&&(o=Yu())!==s&&(a=Rn())!==s?e=n=[n,u,o,a]:(Fe=e,e=s);else t=s;t!==s&&(t={type:"arithmetic",tail:t});return t}())===s&&(r=function(){var r,t,e,n;r=Fe,(t=Nn())!==s&&Yu()!==s&&(e=Du())!==s&&Yu()!==s&&(n=wn())!==s&&Yu()!==s&&ku()!==s?(r=t={op:t,right:n}):(Fe=r,r=s);r===s&&(r=Fe,(t=Nn())!==s&&Yu()!==s&&(e=Wn())!==s?(t=function(r,t){return {op:r,right:t}}(t,e),r=t):(Fe=r,r=s));return r}())===s&&(r=function(){var r,t,e,n;r=Fe,(t=function(){var r,t,e,n,u;r=Fe,t=Fe,(e=wu())!==s&&(n=Yu())!==s&&(u=vu())!==s?t=e=[e,n,u]:(Fe=t,t=s);t!==s&&(t=O(t));(r=t)===s&&(r=vu());return r}())!==s&&Yu()!==s&&(e=Rn())!==s&&Yu()!==s&&Eu()!==s&&Yu()!==s&&(n=Rn())!==s?(r=t={op:t,right:{type:"expr_list",value:[e,n]}}):(Fe=r,r=s);return r}())===s&&(r=function(){var r,t,e,n,u;r=Fe,(t=Lu())!==s&&(e=Yu())!==s&&(n=Rn())!==s?(r=t={op:"IS",right:n}):(Fe=r,r=s);r===s&&(r=Fe,t=Fe,(e=Lu())!==s&&(n=Yu())!==s&&(u=wu())!==s?t=e=[e,n,u]:(Fe=t,t=s),t!==s&&(e=Yu())!==s&&(n=Rn())!==s?(t=function(r){return {op:"IS NOT",right:r}}(n),r=t):(Fe=r,r=s));return r}())===s&&(r=function(){var r,t,e;r=Fe,(t=function(){var r,t,e,n,u;r=Fe,t=Fe,(e=wu())!==s&&(n=Yu())!==s&&(u=Cu())!==s?t=e=[e,n,u]:(Fe=t,t=s);t!==s&&(t=O(t));(r=t)===s&&(r=Cu());return r}())!==s&&Yu()!==s?((e=Xn())===s&&(e=Sn()),e!==s?(r=t={op:t,right:e}):(Fe=r,r=s)):(Fe=r,r=s);return r}());return r}())===s&&(e=null),e!==s?(n=t,r=t=null===(u=e)?n:"arithmetic"===u.type?os(n,u.tail):ns(u.op,n,u.right)):(Fe=r,r=s)):(Fe=r,r=s),r===s&&(r=Wn())===s&&(r=Mn()),r}function In(){var t;return ">="===r.substr(Fe,2)?(t=">=",Fe+=2):(t=s,0===je&&Ve(x)),t===s&&(62===r.charCodeAt(Fe)?(t=">",Fe++):(t=s,0===je&&Ve(U)),t===s&&("<="===r.substr(Fe,2)?(t="<=",Fe+=2):(t=s,0===je&&Ve(M)),t===s&&("<>"===r.substr(Fe,2)?(t="<>",Fe+=2):(t=s,0===je&&Ve(D)),t===s&&(60===r.charCodeAt(Fe)?(t="<",Fe++):(t=s,0===je&&Ve(k)),t===s&&(61===r.charCodeAt(Fe)?(t="=",Fe++):(t=s,0===je&&Ve(g)),t===s&&("!="===r.substr(Fe,2)?(t="!=",Fe+=2):(t=s,0===je&&Ve($)))))))),t}function Nn(){var r,t,e,n,u;return r=Fe,t=Fe,(e=wu())!==s&&(n=Yu())!==s&&(u=du())!==s?t=e=[e,n,u]:(Fe=t,t=s),t!==s&&(t=O(t)),(r=t)===s&&(r=du()),r}function Rn(){var r,t,e,n,u,o,a,i;if(r=Fe,(t=gn())!==s){for(e=[],n=Fe,(u=Yu())!==s&&(o=_n())!==s&&(a=Yu())!==s&&(i=gn())!==s?n=u=[u,o,a,i]:(Fe=n,n=s);n!==s;)e.push(n),n=Fe,(u=Yu())!==s&&(o=_n())!==s&&(a=Yu())!==s&&(i=gn())!==s?n=u=[u,o,a,i]:(Fe=n,n=s);e!==s?(r=t=R(t,e)):(Fe=r,r=s);}else Fe=r,r=s;return r}function _n(){var t;return 43===r.charCodeAt(Fe)?(t="+",Fe++):(t=s,0===je&&Ve(F)),t===s&&(45===r.charCodeAt(Fe)?(t="-",Fe++):(t=s,0===je&&Ve(P))),t}function gn(){var r,t,e,n,u,o,a,i;if(r=Fe,(t=xn())!==s){for(e=[],n=Fe,(u=Yu())!==s&&(o=On())!==s&&(a=Yu())!==s&&(i=xn())!==s?n=u=[u,o,a,i]:(Fe=n,n=s);n!==s;)e.push(n),n=Fe,(u=Yu())!==s&&(o=On())!==s&&(a=Yu())!==s&&(i=xn())!==s?n=u=[u,o,a,i]:(Fe=n,n=s);e!==s?(r=t=os(t,e)):(Fe=r,r=s);}else Fe=r,r=s;return r}function On(){var t;return 42===r.charCodeAt(Fe)?(t="*",Fe++):(t=s,0===je&&Ve(H)),t===s&&(47===r.charCodeAt(Fe)?(t="/",Fe++):(t=s,0===je&&Ve(G)),t===s&&(37===r.charCodeAt(Fe)?(t="%",Fe++):(t=s,0===je&&Ve(j)))),t}function xn(){var t,e,n,u,o,a,i,c,l,b,v;if((t=function(){var t,e,n,u,o,a,i;t=Fe,(e=yu())!==s&&Yu()!==s&&Du()!==s&&Yu()!==s&&(n=En())!==s&&Yu()!==s&&uu()!==s&&Yu()!==s&&(u=zu())!==s&&Yu()!==s&&(o=ku())!==s?(t=e={type:"cast",expr:n,symbol:"as",target:u}):(Fe=t,t=s);t===s&&(t=Fe,(e=yu())!==s&&Yu()!==s&&Du()!==s&&Yu()!==s&&(n=En())!==s&&Yu()!==s&&uu()!==s&&Yu()!==s&&(u=mu())!==s&&Yu()!==s&&(o=Du())!==s&&Yu()!==s&&(a=zn())!==s&&Yu()!==s&&ku()!==s&&Yu()!==s&&(i=ku())!==s?(e=function(r,t){return {type:"cast",expr:r,symbol:"as",target:{dataType:"DECIMAL("+t+")"}}}(n,a),t=e):(Fe=t,t=s),t===s&&(t=Fe,(e=yu())!==s&&Yu()!==s&&Du()!==s&&Yu()!==s&&(n=En())!==s&&Yu()!==s&&uu()!==s&&Yu()!==s&&(u=mu())!==s&&Yu()!==s&&(o=Du())!==s&&Yu()!==s&&(a=zn())!==s&&Yu()!==s&&Uu()!==s&&Yu()!==s&&(i=zn())!==s&&Yu()!==s&&ku()!==s&&Yu()!==s&&ku()!==s?(e=function(r,t,e){return {type:"cast",expr:r,symbol:"as",target:{dataType:"DECIMAL("+t+", "+e+")"}}}(n,a,i),t=e):(Fe=t,t=s),t===s&&(t=Fe,(e=yu())!==s&&Yu()!==s&&Du()!==s&&Yu()!==s&&(n=En())!==s&&Yu()!==s&&uu()!==s&&Yu()!==s&&(u=function(){var t;(t=function(){var t,e,n,u;t=Fe,"signed"===r.substr(Fe,6).toLowerCase()?(e=r.substr(Fe,6),Fe+=6):(e=s,0===je&&Ve(ie));e!==s?(n=Fe,je++,u=Hn(),je--,u===s?n=void 0:(Fe=n,n=s),n!==s?(t=e="SIGNED"):(Fe=t,t=s)):(Fe=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Fe,"unsigned"===r.substr(Fe,8).toLowerCase()?(e=r.substr(Fe,8),Fe+=8):(e=s,0===je&&Ve(ce));e!==s?(n=Fe,je++,u=Hn(),je--,u===s?n=void 0:(Fe=n,n=s),n!==s?(t=e="UNSIGNED"):(Fe=t,t=s)):(Fe=t,t=s);return t}());return t}())!==s&&Yu()!==s?((o=function(){var t,e,n,u;t=Fe,"integer"===r.substr(Fe,7).toLowerCase()?(e=r.substr(Fe,7),Fe+=7):(e=s,0===je&&Ve(fe));e!==s?(n=Fe,je++,u=Hn(),je--,u===s?n=void 0:(Fe=n,n=s),n!==s?(t=e="INTEGER"):(Fe=t,t=s)):(Fe=t,t=s);return t}())===s&&(o=null),o!==s&&Yu()!==s&&(a=ku())!==s?(e=function(r,t,e){return {type:"cast",expr:r,symbol:"as",target:{dataType:t+(e?" "+e:"")}}}(n,u,o),t=e):(Fe=t,t=s)):(Fe=t,t=s))));return t}())===s&&(t=Xn())===s&&(t=function(){var t;(t=function(){var t,e,n,u;t=Fe,(e=function(){var t,e,n,u;t=Fe,"count"===r.substr(Fe,5).toLowerCase()?(e=r.substr(Fe,5),Fe+=5):(e=s,0===je&&Ve(Bt));e!==s?(n=Fe,je++,u=Hn(),je--,u===s?n=void 0:(Fe=n,n=s),n!==s?(t=e="COUNT"):(Fe=t,t=s)):(Fe=t,t=s);return t}())!==s&&Yu()!==s&&Du()!==s&&Yu()!==s&&(n=function(){var t,e,n;t=Fe,(e=function(){var e;42===r.charCodeAt(Fe)?(e="*",Fe++):(e=s,0===je&&Ve(H));e!==s&&(e={type:"star",value:"*"});return e}())!==s&&(e={expr:e});(t=e)===s&&(t=Fe,(e=bu())===s&&(e=null),e!==s&&Yu()!==s&&(n=Mn())!==s?(t=e={distinct:e,expr:n}):(Fe=t,t=s));return t}())!==s&&Yu()!==s&&ku()!==s&&Yu()!==s?((u=Bn())===s&&(u=null),u!==s?(e=function(r,t,e){return {type:"aggr_func",name:r,args:t,over:e}}(e,n,u),t=e):(Fe=t,t=s)):(Fe=t,t=s);return t}())===s&&(t=function(){var t,e,n;t=Fe,(e=function(){var t;(t=function(){var t,e,n,u;t=Fe,"sum"===r.substr(Fe,3).toLowerCase()?(e=r.substr(Fe,3),Fe+=3):(e=s,0===je&&Ve(Vt));e!==s?(n=Fe,je++,u=Hn(),je--,u===s?n=void 0:(Fe=n,n=s),n!==s?(t=e="SUM"):(Fe=t,t=s)):(Fe=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Fe,"max"===r.substr(Fe,3).toLowerCase()?(e=r.substr(Fe,3),Fe+=3):(e=s,0===je&&Ve(Xt));e!==s?(n=Fe,je++,u=Hn(),je--,u===s?n=void 0:(Fe=n,n=s),n!==s?(t=e="MAX"):(Fe=t,t=s)):(Fe=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Fe,"min"===r.substr(Fe,3).toLowerCase()?(e=r.substr(Fe,3),Fe+=3):(e=s,0===je&&Ve(Wt));e!==s?(n=Fe,je++,u=Hn(),je--,u===s?n=void 0:(Fe=n,n=s),n!==s?(t=e="MIN"):(Fe=t,t=s)):(Fe=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Fe,"avg"===r.substr(Fe,3).toLowerCase()?(e=r.substr(Fe,3),Fe+=3):(e=s,0===je&&Ve(Kt));e!==s?(n=Fe,je++,u=Hn(),je--,u===s?n=void 0:(Fe=n,n=s),n!==s?(t=e="AVG"):(Fe=t,t=s)):(Fe=t,t=s);return t}());return t}())!==s&&Yu()!==s&&Du()!==s&&Yu()!==s&&(n=Rn())!==s&&Yu()!==s&&ku()!==s?(t=e={type:"aggr_func",name:e,args:{expr:n}}):(Fe=t,t=s);return t}());return t}())===s&&(t=function(){var t,e,n,u;(t=function(){var t,e,n,u,o;t=Fe,(e=function(){var t,e,n,u;t=Fe,"extract"===r.substr(Fe,7).toLowerCase()?(e=r.substr(Fe,7),Fe+=7):(e=s,0===je&&Ve(qt));e!==s?(n=Fe,je++,u=Hn(),je--,u===s?n=void 0:(Fe=n,n=s),n!==s?(t=e="EXTRACT"):(Fe=t,t=s)):(Fe=t,t=s);return t}())!==s&&Yu()!==s&&Du()!==s&&Yu()!==s&&(n=function(){var t,e;"century"===r.substr(Fe,7).toLowerCase()?(t=r.substr(Fe,7),Fe+=7):(t=s,0===je&&Ve(cr));t===s&&("day"===r.substr(Fe,3).toLowerCase()?(t=r.substr(Fe,3),Fe+=3):(t=s,0===je&&Ve(lr)),t===s&&("decade"===r.substr(Fe,6).toLowerCase()?(t=r.substr(Fe,6),Fe+=6):(t=s,0===je&&Ve(fr)),t===s&&("dow"===r.substr(Fe,3).toLowerCase()?(t=r.substr(Fe,3),Fe+=3):(t=s,0===je&&Ve(br)),t===s&&("doy"===r.substr(Fe,3).toLowerCase()?(t=r.substr(Fe,3),Fe+=3):(t=s,0===je&&Ve(vr)),t===s&&("epoch"===r.substr(Fe,5).toLowerCase()?(t=r.substr(Fe,5),Fe+=5):(t=s,0===je&&Ve(dr)),t===s&&("hour"===r.substr(Fe,4).toLowerCase()?(t=r.substr(Fe,4),Fe+=4):(t=s,0===je&&Ve(Lr)),t===s&&("isodow"===r.substr(Fe,6).toLowerCase()?(t=r.substr(Fe,6),Fe+=6):(t=s,0===je&&Ve(Cr)),t===s&&("isoyear"===r.substr(Fe,7).toLowerCase()?(t=r.substr(Fe,7),Fe+=7):(t=s,0===je&&Ve(pr)),t===s&&("microseconds"===r.substr(Fe,12).toLowerCase()?(t=r.substr(Fe,12),Fe+=12):(t=s,0===je&&Ve(wr)),t===s&&("millennium"===r.substr(Fe,10).toLowerCase()?(t=r.substr(Fe,10),Fe+=10):(t=s,0===je&&Ve(Er)),t===s&&("milliseconds"===r.substr(Fe,12).toLowerCase()?(t=r.substr(Fe,12),Fe+=12):(t=s,0===je&&Ve(hr)),t===s&&("minute"===r.substr(Fe,6).toLowerCase()?(t=r.substr(Fe,6),Fe+=6):(t=s,0===je&&Ve(Ar)),t===s&&("month"===r.substr(Fe,5).toLowerCase()?(t=r.substr(Fe,5),Fe+=5):(t=s,0===je&&Ve(yr)),t===s&&("quarter"===r.substr(Fe,7).toLowerCase()?(t=r.substr(Fe,7),Fe+=7):(t=s,0===je&&Ve(Tr)),t===s&&("second"===r.substr(Fe,6).toLowerCase()?(t=r.substr(Fe,6),Fe+=6):(t=s,0===je&&Ve(mr)),t===s&&("timezone"===r.substr(Fe,8).toLowerCase()?(t=r.substr(Fe,8),Fe+=8):(t=s,0===je&&Ve(Sr)),t===s&&("timezone_hour"===r.substr(Fe,13).toLowerCase()?(t=r.substr(Fe,13),Fe+=13):(t=s,0===je&&Ve(Ir)),t===s&&("timezone_minute"===r.substr(Fe,15).toLowerCase()?(t=r.substr(Fe,15),Fe+=15):(t=s,0===je&&Ve(Nr)),t===s&&("week"===r.substr(Fe,4).toLowerCase()?(t=r.substr(Fe,4),Fe+=4):(t=s,0===je&&Ve(Rr)),t===s&&(t=Fe,"year"===r.substr(Fe,4).toLowerCase()?(e=r.substr(Fe,4),Fe+=4):(e=s,0===je&&Ve(_r)),e!==s&&(e=f),t=e))))))))))))))))))));return t}())!==s&&Yu()!==s&&nu()!==s&&Yu()!==s?((u=_u())===s&&(u=gu())===s&&(u=Ru())===s&&(u=Iu()),u===s&&(u=null),u!==s&&Yu()!==s&&(o=En())!==s&&Yu()!==s&&ku()!==s?(e=function(r,t,e,n){return {type:r.toLowerCase(),args:{field:t,cast_type:e,source:n}}}(e,n,u,o),t=e):(Fe=t,t=s)):(Fe=t,t=s);return t}())===s&&(t=Fe,(e=function(){var r,t,e,n,u,o,a;r=Fe,(t=Dn())!==s?(e=Fe,(n=Yu())!==s&&(u=xu())!==s&&(o=Yu())!==s&&(a=Dn())!==s?e=n=[n,u,o,a]:(Fe=e,e=s),e===s&&(e=null),e!==s?(t=function(r,t){let e=r;return null!==t&&(e=`${r}.${t[3]}`),e}(t,e),r=t):(Fe=r,r=s)):(Fe=r,r=s);return r}())!==s&&Yu()!==s&&Du()!==s&&Yu()!==s?((n=wn())===s&&(n=null),n!==s&&Yu()!==s&&ku()!==s&&Yu()!==s?((u=Bn())===s&&(u=null),u!==s?(e=ir(e,n,u),t=e):(Fe=t,t=s)):(Fe=t,t=s)):(Fe=t,t=s),t===s&&(t=Fe,(e=function(){var t;(t=function(){var t,e,n,u;t=Fe,"current_date"===r.substr(Fe,12).toLowerCase()?(e=r.substr(Fe,12),Fe+=12):(e=s,0===je&&Ve(Ee));e!==s?(n=Fe,je++,u=Hn(),je--,u===s?n=void 0:(Fe=n,n=s),n!==s?(t=e="CURRENT_DATE"):(Fe=t,t=s)):(Fe=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Fe,"current_time"===r.substr(Fe,12).toLowerCase()?(e=r.substr(Fe,12),Fe+=12):(e=s,0===je&&Ve(Ae));e!==s?(n=Fe,je++,u=Hn(),je--,u===s?n=void 0:(Fe=n,n=s),n!==s?(t=e="CURRENT_TIME"):(Fe=t,t=s)):(Fe=t,t=s);return t}())===s&&(t=Ou());return t}())!==s&&Yu()!==s&&Du()!==s&&Yu()!==s?((n=wn())===s&&(n=null),n!==s&&Yu()!==s&&ku()!==s&&Yu()!==s?((u=Bn())===s&&(u=null),u!==s?(e=ir(e,n,u),t=e):(Fe=t,t=s)):(Fe=t,t=s)):(Fe=t,t=s)));return t}())===s&&(t=function(){var t,e,n,u,o,a;if(t=Fe,Au()!==s)if(Yu()!==s)if((e=En())===s&&(e=null),e!==s)if(Yu()!==s){if(n=[],(u=Un())!==s)for(;u!==s;)n.push(u),u=Un();else n=s;n!==s&&(u=Yu())!==s?((o=function(){var t,e;t=Fe,function(){var t,e,n,u;t=Fe,"else"===r.substr(Fe,4).toLowerCase()?(e=r.substr(Fe,4),Fe+=4):(e=s,0===je&&Ve(Qt));e!==s?(n=Fe,je++,u=Hn(),je--,u===s?n=void 0:(Fe=n,n=s),n!==s?t=e=[e,n]:(Fe=t,t=s)):(Fe=t,t=s);return t}()!==s&&Yu()!==s&&(e=En())!==s?(t={type:"else",result:e}):(Fe=t,t=s);return t}())===s&&(o=null),o!==s&&Yu()!==s&&function(){var t,e,n,u;t=Fe,"end"===r.substr(Fe,3).toLowerCase()?(e=r.substr(Fe,3),Fe+=3):(e=s,0===je&&Ve(re));e!==s?(n=Fe,je++,u=Hn(),je--,u===s?n=void 0:(Fe=n,n=s),n!==s?t=e=[e,n]:(Fe=t,t=s)):(Fe=t,t=s);return t}()!==s&&Yu()!==s?((a=Au())===s&&(a=null),a!==s?(i=e,c=n,(l=o)&&c.push(l),t={type:"case",expr:i||null,args:c}):(Fe=t,t=s)):(Fe=t,t=s)):(Fe=t,t=s);}else Fe=t,t=s;else Fe=t,t=s;else Fe=t,t=s;else Fe=t,t=s;var i,c,l;return t}())===s&&(t=function(){var t,e,n,u;t=Fe,(e=gu())!==s&&Yu()!==s&&(n=En())!==s&&Yu()!==s&&(u=function(){var t;(t=function(){var t,e,n,u;t=Fe,"year"===r.substr(Fe,4).toLowerCase()?(e=r.substr(Fe,4),Fe+=4):(e=s,0===je&&Ve(_r));e!==s?(n=Fe,je++,u=Hn(),je--,u===s?n=void 0:(Fe=n,n=s),n!==s?(t=e="YEAR"):(Fe=t,t=s)):(Fe=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Fe,"month"===r.substr(Fe,5).toLowerCase()?(e=r.substr(Fe,5),Fe+=5):(e=s,0===je&&Ve(yr));e!==s?(n=Fe,je++,u=Hn(),je--,u===s?n=void 0:(Fe=n,n=s),n!==s?(t=e="MONTH"):(Fe=t,t=s)):(Fe=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Fe,"day"===r.substr(Fe,3).toLowerCase()?(e=r.substr(Fe,3),Fe+=3):(e=s,0===je&&Ve(lr));e!==s?(n=Fe,je++,u=Hn(),je--,u===s?n=void 0:(Fe=n,n=s),n!==s?(t=e="DAY"):(Fe=t,t=s)):(Fe=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Fe,"hour"===r.substr(Fe,4).toLowerCase()?(e=r.substr(Fe,4),Fe+=4):(e=s,0===je&&Ve(Lr));e!==s?(n=Fe,je++,u=Hn(),je--,u===s?n=void 0:(Fe=n,n=s),n!==s?(t=e="HOUR"):(Fe=t,t=s)):(Fe=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Fe,"minute"===r.substr(Fe,6).toLowerCase()?(e=r.substr(Fe,6),Fe+=6):(e=s,0===je&&Ve(Ar));e!==s?(n=Fe,je++,u=Hn(),je--,u===s?n=void 0:(Fe=n,n=s),n!==s?(t=e="MINUTE"):(Fe=t,t=s)):(Fe=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Fe,"second"===r.substr(Fe,6).toLowerCase()?(e=r.substr(Fe,6),Fe+=6):(e=s,0===je&&Ve(mr));e!==s?(n=Fe,je++,u=Hn(),je--,u===s?n=void 0:(Fe=n,n=s),n!==s?(t=e="SECOND"):(Fe=t,t=s)):(Fe=t,t=s);return t}());return t}())!==s?(e={type:"interval",expr:n,unit:u.toLowerCase()},t=e):(Fe=t,t=s);return t}())===s&&(t=Mn())===s&&(t=Yn())===s){if(t=Fe,Du()!==s)if(Yu()!==s)if((e=En())!==s)if(Yu()!==s)if(ku()!==s){for(n=[],u=Fe,(o=Bu())!==s?((a=Eu())===s&&(a=hu()),a!==s&&(i=Yu())!==s&&(c=yn())!==s?u=o=[o,a,i,c]:(Fe=u,u=s)):(Fe=u,u=s);u!==s;)n.push(u),u=Fe,(o=Bu())!==s?((a=Eu())===s&&(a=hu()),a!==s&&(i=Yu())!==s&&(c=yn())!==s?u=o=[o,a,i,c]:(Fe=u,u=s)):(Fe=u,u=s);n!==s?(v=n,(b=e).parentheses=!0,t=v&&0!==v.length?os(b,v):b):(Fe=t,t=s);}else Fe=t,t=s;else Fe=t,t=s;else Fe=t,t=s;else Fe=t,t=s;else Fe=t,t=s;t===s&&(t=Fe,Du()!==s&&Yu()!==s&&(e=wn())!==s&&Yu()!==s&&ku()!==s?((l=e).parentheses=!0,t=l):(Fe=t,t=s));}return t}function Un(){var t,e,n;return t=Fe,function(){var t,e,n,u;t=Fe,"when"===r.substr(Fe,4).toLowerCase()?(e=r.substr(Fe,4),Fe+=4):(e=s,0===je&&Ve(zt));e!==s?(n=Fe,je++,u=Hn(),je--,u===s?n=void 0:(Fe=n,n=s),n!==s?t=e=[e,n]:(Fe=t,t=s)):(Fe=t,t=s);return t}()!==s&&Yu()!==s&&(e=En())!==s&&Yu()!==s&&function(){var t,e,n,u;t=Fe,"then"===r.substr(Fe,4).toLowerCase()?(e=r.substr(Fe,4),Fe+=4):(e=s,0===je&&Ve(Jt));e!==s?(n=Fe,je++,u=Hn(),je--,u===s?n=void 0:(Fe=n,n=s),n!==s?t=e=[e,n]:(Fe=t,t=s)):(Fe=t,t=s);return t}()!==s&&Yu()!==s&&(n=En())!==s?(t={type:"when",cond:e,result:n}):(Fe=t,t=s),t}function Mn(){var r,t,e,n,u;return r=Fe,(t=Dn())!==s&&Yu()!==s&&xu()!==s&&Yu()!==s&&(e=function(){var r,t;r=Fe,(t=Fn())!==s&&(t=t);(r=t)===s&&(r=kn());return r}())!==s?(n=t,u=e,ls.add(`select::${n}::${u}`),r=t={type:"column_ref",table:n,column:u}):(Fe=r,r=s),r===s&&(r=Fe,(t=$n())!==s&&(t=function(r){return ls.add("select::null::"+r),{type:"column_ref",table:null,column:r}}(t)),r=t),r}function Dn(){var r,t;return r=Fe,(t=Pn())!==s?((Y(t)?s:void 0)!==s?(r=t=t):(Fe=r,r=s)):(Fe=r,r=s),r===s&&(r=Fe,(t=kn())!==s&&(t=t),r=t),r}function kn(){var t;return (t=function(){var t,e,n,u;t=Fe,34===r.charCodeAt(Fe)?(e='"',Fe++):(e=s,0===je&&Ve(B));if(e!==s){if(n=[],X.test(r.charAt(Fe))?(u=r.charAt(Fe),Fe++):(u=s,0===je&&Ve(W)),u!==s)for(;u!==s;)n.push(u),X.test(r.charAt(Fe))?(u=r.charAt(Fe),Fe++):(u=s,0===je&&Ve(W));else n=s;n!==s?(34===r.charCodeAt(Fe)?(u='"',Fe++):(u=s,0===je&&Ve(B)),u!==s?(e=V(n),t=e):(Fe=t,t=s)):(Fe=t,t=s);}else Fe=t,t=s;return t}())===s&&(t=function(){var t,e,n,u;t=Fe,39===r.charCodeAt(Fe)?(e="'",Fe++):(e=s,0===je&&Ve(K));if(e!==s){if(n=[],q.test(r.charAt(Fe))?(u=r.charAt(Fe),Fe++):(u=s,0===je&&Ve(Z)),u!==s)for(;u!==s;)n.push(u),q.test(r.charAt(Fe))?(u=r.charAt(Fe),Fe++):(u=s,0===je&&Ve(Z));else n=s;n!==s?(39===r.charCodeAt(Fe)?(u="'",Fe++):(u=s,0===je&&Ve(K)),u!==s?(e=V(n),t=e):(Fe=t,t=s)):(Fe=t,t=s);}else Fe=t,t=s;return t}())===s&&(t=function(){var t,e,n,u;t=Fe,96===r.charCodeAt(Fe)?(e="`",Fe++):(e=s,0===je&&Ve(z));if(e!==s){if(n=[],J.test(r.charAt(Fe))?(u=r.charAt(Fe),Fe++):(u=s,0===je&&Ve(Q)),u!==s)for(;u!==s;)n.push(u),J.test(r.charAt(Fe))?(u=r.charAt(Fe),Fe++):(u=s,0===je&&Ve(Q));else n=s;n!==s?(96===r.charCodeAt(Fe)?(u="`",Fe++):(u=s,0===je&&Ve(z)),u!==s?(e=V(n),t=e):(Fe=t,t=s)):(Fe=t,t=s);}else Fe=t,t=s;return t}()),t}function $n(){var r,t;return r=Fe,(t=Fn())!==s?((Y(t)?s:void 0)!==s?(r=t=t):(Fe=r,r=s)):(Fe=r,r=s),r===s&&(r=kn()),r}function Fn(){var r,t,e,n;if(r=Fe,(t=Hn())!==s){for(e=[],n=jn();n!==s;)e.push(n),n=jn();e!==s?(r=t=rr(t,e)):(Fe=r,r=s);}else Fe=r,r=s;return r}function Pn(){var r,t,e,n;if(r=Fe,(t=Hn())!==s){for(e=[],n=Gn();n!==s;)e.push(n),n=Gn();e!==s?(r=t=rr(t,e)):(Fe=r,r=s);}else Fe=r,r=s;return r}function Hn(){var t;return tr.test(r.charAt(Fe))?(t=r.charAt(Fe),Fe++):(t=s,0===je&&Ve(er)),t}function Gn(){var t;return nr.test(r.charAt(Fe))?(t=r.charAt(Fe),Fe++):(t=s,0===je&&Ve(ur)),t}function jn(){var t;return sr.test(r.charAt(Fe))?(t=r.charAt(Fe),Fe++):(t=s,0===je&&Ve(or)),t}function Yn(){var e,n,u;return e=Fe,58===r.charCodeAt(Fe)?(n=":",Fe++):(n=s,0===je&&Ve(ar)),n!==s&&(u=Pn())!==s?e=n=[n,u]:(Fe=e,e=s),e!==s&&(e={type:"param",value:e[1]}),e}function Bn(){var r,t,e,n;return r=Fe,au()!==s&&Yu()!==s&&(t=vn())!==s?(r={type:"window",as_window_specification:t}):(Fe=r,r=s),r===s&&(r=Fe,au()!==s&&Yu()!==s&&(t=Du())!==s&&Yu()!==s&&(e=dn())!==s&&Yu()!==s?((n=Ln())===s&&(n=null),n!==s&&Yu()!==s&&ku()!==s?(r=function(r,t){return {partitionby:r,orderby:t}}(e,n)):(Fe=r,r=s)):(Fe=r,r=s)),r}function Xn(){var t;return (t=Wn())===s&&(t=Zn())===s&&(t=function(){var t,e;t=Fe,(e=function(){var t,e,n,u;t=Fe,"true"===r.substr(Fe,4).toLowerCase()?(e=r.substr(Fe,4),Fe+=4):(e=s,0===je&&Ve(ot));e!==s?(n=Fe,je++,u=Hn(),je--,u===s?n=void 0:(Fe=n,n=s),n!==s?t=e=[e,n]:(Fe=t,t=s)):(Fe=t,t=s);return t}())!==s&&(e={type:"bool",value:!0});(t=e)===s&&(t=Fe,(e=function(){var t,e,n,u;t=Fe,"false"===r.substr(Fe,5).toLowerCase()?(e=r.substr(Fe,5),Fe+=5):(e=s,0===je&&Ve(at));e!==s?(n=Fe,je++,u=Hn(),je--,u===s?n=void 0:(Fe=n,n=s),n!==s?t=e=[e,n]:(Fe=t,t=s)):(Fe=t,t=s);return t}())!==s&&(e={type:"bool",value:!1}),t=e);return t}())===s&&(t=function(){var e;(e=function(){var t,e,n,u;t=Fe,"null"===r.substr(Fe,4).toLowerCase()?(e=r.substr(Fe,4),Fe+=4):(e=s,0===je&&Ve(st));e!==s?(n=Fe,je++,u=Hn(),je--,u===s?n=void 0:(Fe=n,n=s),n!==s?t=e=[e,n]:(Fe=t,t=s)):(Fe=t,t=s);return t}())!==s&&(e={type:"null",value:null});return e}())===s&&(t=function(){var t,e,n,u,o,a,i;t=Fe,(e=Ru())===s&&(e=Iu())===s&&(e=_u())===s&&(e=Nu());if(e!==s)if(Yu()!==s){if(n=Fe,39===r.charCodeAt(Fe)?(u="'",Fe++):(u=s,0===je&&Ve(K)),u!==s){for(o=[],a=Kn();a!==s;)o.push(a),a=Kn();o!==s?(39===r.charCodeAt(Fe)?(a="'",Fe++):(a=s,0===je&&Ve(K)),a!==s?n=u=[u,o,a]:(Fe=n,n=s)):(Fe=n,n=s);}else Fe=n,n=s;n!==s?(e=Or(e,n),t=e):(Fe=t,t=s);}else Fe=t,t=s;else Fe=t,t=s;if(t===s){if(t=Fe,(e=Ru())===s&&(e=Iu())===s&&(e=_u())===s&&(e=Nu()),e!==s)if(Yu()!==s){if(n=Fe,34===r.charCodeAt(Fe)?(u='"',Fe++):(u=s,0===je&&Ve(B)),u!==s){for(o=[],a=Vn();a!==s;)o.push(a),a=Vn();o!==s?(34===r.charCodeAt(Fe)?(a='"',Fe++):(a=s,0===je&&Ve(B)),a!==s?n=u=[u,o,a]:(Fe=n,n=s)):(Fe=n,n=s);}else Fe=n,n=s;n!==s?(e=Or(e,n),t=e):(Fe=t,t=s);}else Fe=t,t=s;else Fe=t,t=s;t===s&&(t=Fe,(e=Ou())!==s&&Yu()!==s?((n=Du())===s&&(n=null),n!==s&&(u=Yu())!==s?((o=ku())===s&&(o=null),o!==s?((a=(a=function(r,t,e){if(t&&e)return !0}(0,n,o))?s:void 0)!==s&&Yu()!==s?("on update current_timestamp"===r.substr(Fe,27).toLowerCase()?(i=r.substr(Fe,27),Fe+=27):(i=s,0===je&&Ve(xr)),i===s&&(i=null),i!==s?(c=e,e={type:"origin",value:((l=i)?`${c} ${l}`:c).toLowerCase()},t=e):(Fe=t,t=s)):(Fe=t,t=s)):(Fe=t,t=s)):(Fe=t,t=s)):(Fe=t,t=s));}var c,l;return t}()),t}function Wn(){var t,e,n,u,o,a;if(t=Fe,"r"===r.substr(Fe,1).toLowerCase()?(e=r.charAt(Fe),Fe++):(e=s,0===je&&Ve(gr)),e===s&&(e=null),e!==s)if(Yu()!==s){if(n=Fe,39===r.charCodeAt(Fe)?(u="'",Fe++):(u=s,0===je&&Ve(K)),u!==s){for(o=[],a=Kn();a!==s;)o.push(a),a=Kn();o!==s?(39===r.charCodeAt(Fe)?(a="'",Fe++):(a=s,0===je&&Ve(K)),a!==s?n=u=[u,o,a]:(Fe=n,n=s)):(Fe=n,n=s);}else Fe=n,n=s;n!==s?(t=e={type:e?"regex_string":"single_quote_string",value:n[1].join("")}):(Fe=t,t=s);}else Fe=t,t=s;else Fe=t,t=s;if(t===s)if(t=Fe,"r"===r.substr(Fe,1).toLowerCase()?(e=r.charAt(Fe),Fe++):(e=s,0===je&&Ve(gr)),e===s&&(e=null),e!==s)if(Yu()!==s){if(n=Fe,34===r.charCodeAt(Fe)?(u='"',Fe++):(u=s,0===je&&Ve(B)),u!==s){for(o=[],a=Vn();a!==s;)o.push(a),a=Vn();o!==s?(34===r.charCodeAt(Fe)?(a='"',Fe++):(a=s,0===je&&Ve(B)),a!==s?n=u=[u,o,a]:(Fe=n,n=s)):(Fe=n,n=s);}else Fe=n,n=s;n!==s?(t=e=function(r,t){return {type:r?"regex_string":"string",value:t[1].join("")}}(e,n)):(Fe=t,t=s);}else Fe=t,t=s;else Fe=t,t=s;return t}function Vn(){var t;return Ur.test(r.charAt(Fe))?(t=r.charAt(Fe),Fe++):(t=s,0===je&&Ve(Mr)),t===s&&(t=qn()),t}function Kn(){var t;return Dr.test(r.charAt(Fe))?(t=r.charAt(Fe),Fe++):(t=s,0===je&&Ve(kr)),t===s&&(t=qn()),t}function qn(){var t,e,n,u,o,a,i,c,l,f;return t=Fe,"\\'"===r.substr(Fe,2)?(e="\\'",Fe+=2):(e=s,0===je&&Ve($r)),e!==s&&(e="'"),(t=e)===s&&(t=Fe,'\\"'===r.substr(Fe,2)?(e='\\"',Fe+=2):(e=s,0===je&&Ve(Fr)),e!==s&&(e='"'),(t=e)===s&&(t=Fe,"\\\\"===r.substr(Fe,2)?(e="\\\\",Fe+=2):(e=s,0===je&&Ve(Pr)),e!==s&&(e="\\"),(t=e)===s&&(t=Fe,"\\/"===r.substr(Fe,2)?(e="\\/",Fe+=2):(e=s,0===je&&Ve(Hr)),e!==s&&(e="/"),(t=e)===s&&(t=Fe,"\\b"===r.substr(Fe,2)?(e="\\b",Fe+=2):(e=s,0===je&&Ve(Gr)),e!==s&&(e="\b"),(t=e)===s&&(t=Fe,"\\f"===r.substr(Fe,2)?(e="\\f",Fe+=2):(e=s,0===je&&Ve(jr)),e!==s&&(e="\f"),(t=e)===s&&(t=Fe,"\\n"===r.substr(Fe,2)?(e="\\n",Fe+=2):(e=s,0===je&&Ve(Yr)),e!==s&&(e="\n"),(t=e)===s&&(t=Fe,"\\r"===r.substr(Fe,2)?(e="\\r",Fe+=2):(e=s,0===je&&Ve(Br)),e!==s&&(e="\r"),(t=e)===s&&(t=Fe,"\\t"===r.substr(Fe,2)?(e="\\t",Fe+=2):(e=s,0===je&&Ve(Xr)),e!==s&&(e="\t"),(t=e)===s&&(t=Fe,"\\u"===r.substr(Fe,2)?(e="\\u",Fe+=2):(e=s,0===je&&Ve(Wr)),e!==s&&(n=eu())!==s&&(u=eu())!==s&&(o=eu())!==s&&(a=eu())!==s?(i=n,c=u,l=o,f=a,t=e=String.fromCharCode(parseInt("0x"+i+c+l+f))):(Fe=t,t=s),t===s&&(t=Fe,92===r.charCodeAt(Fe)?(e="\\",Fe++):(e=s,0===je&&Ve(Vr)),e!==s&&(e="\\"),t=e)))))))))),t}function Zn(){var t,e;return (t=function(){var r,t,e,n;r=Fe,(t=zn())!==s&&(e=Jn())!==s&&(n=Qn())!==s?(r=t={type:"bigint",value:t+e+n}):(Fe=r,r=s);r===s&&(r=Fe,(t=zn())!==s&&(e=Jn())!==s?(t=function(r,t){const e=r+t;return us(r)?{type:"bigint",value:e}:parseFloat(e)}(t,e),r=t):(Fe=r,r=s),r===s&&(r=Fe,(t=zn())!==s&&(e=Qn())!==s?(t=function(r,t){return {type:"bigint",value:r+t}}(t,e),r=t):(Fe=r,r=s),r===s&&(r=Fe,(t=zn())!==s&&(t=function(r){return us(r)?{type:"bigint",value:r}:parseFloat(r)}(t)),r=t)));return r}())!==s&&(t=(e=t)&&"bigint"===e.type?e:{type:"number",value:e}),t}function zn(){var t,e,n;return (t=ru())===s&&(t=tu())===s&&(t=Fe,45===r.charCodeAt(Fe)?(e="-",Fe++):(e=s,0===je&&Ve(P)),e===s&&(43===r.charCodeAt(Fe)?(e="+",Fe++):(e=s,0===je&&Ve(F))),e!==s&&(n=ru())!==s?(t=e="-"+n):(Fe=t,t=s),t===s&&(t=Fe,45===r.charCodeAt(Fe)?(e="-",Fe++):(e=s,0===je&&Ve(P)),e===s&&(43===r.charCodeAt(Fe)?(e="+",Fe++):(e=s,0===je&&Ve(F))),e!==s&&(n=tu())!==s?(t=e="-"+n):(Fe=t,t=s))),t}function Jn(){var t,e,n;return t=Fe,46===r.charCodeAt(Fe)?(e=".",Fe++):(e=s,0===je&&Ve(Zr)),e!==s&&(n=ru())!==s?(t=e="."+n):(Fe=t,t=s),t}function Qn(){var t,e,n;return t=Fe,(e=function(){var t,e,n;t=Fe,tt.test(r.charAt(Fe))?(e=r.charAt(Fe),Fe++):(e=s,0===je&&Ve(et));e!==s?(nt.test(r.charAt(Fe))?(n=r.charAt(Fe),Fe++):(n=s,0===je&&Ve(ut)),n===s&&(n=null),n!==s?(t=e=e+(null!==(u=n)?u:"")):(Fe=t,t=s)):(Fe=t,t=s);var u;return t}())!==s&&(n=ru())!==s?(t=e=e+n):(Fe=t,t=s),t}function ru(){var t,e;if(t=[],(e=tu())!==s)for(;e!==s;)t.push(e),e=tu();else t=s;return t!==s&&(t=t.join("")),t}function tu(){var t;return zr.test(r.charAt(Fe))?(t=r.charAt(Fe),Fe++):(t=s,0===je&&Ve(Jr)),t}function eu(){var t;return Qr.test(r.charAt(Fe))?(t=r.charAt(Fe),Fe++):(t=s,0===je&&Ve(rt)),t}function nu(){var t,e,n,u;return t=Fe,"from"===r.substr(Fe,4).toLowerCase()?(e=r.substr(Fe,4),Fe+=4):(e=s,0===je&&Ve(lt)),e!==s?(n=Fe,je++,u=Hn(),je--,u===s?n=void 0:(Fe=n,n=s),n!==s?t=e=[e,n]:(Fe=t,t=s)):(Fe=t,t=s),t}function uu(){var t,e,n,u;return t=Fe,"as"===r.substr(Fe,2).toLowerCase()?(e=r.substr(Fe,2),Fe+=2):(e=s,0===je&&Ve(C)),e!==s?(n=Fe,je++,u=Hn(),je--,u===s?n=void 0:(Fe=n,n=s),n!==s?t=e=[e,n]:(Fe=t,t=s)):(Fe=t,t=s),t}function su(){var t,e,n,u;return t=Fe,"join"===r.substr(Fe,4).toLowerCase()?(e=r.substr(Fe,4),Fe+=4):(e=s,0===je&&Ve(pt)),e!==s?(n=Fe,je++,u=Hn(),je--,u===s?n=void 0:(Fe=n,n=s),n!==s?t=e=[e,n]:(Fe=t,t=s)):(Fe=t,t=s),t}function ou(){var t,e,n,u;return t=Fe,"outer"===r.substr(Fe,5).toLowerCase()?(e=r.substr(Fe,5),Fe+=5):(e=s,0===je&&Ve(wt)),e!==s?(n=Fe,je++,u=Hn(),je--,u===s?n=void 0:(Fe=n,n=s),n!==s?t=e=[e,n]:(Fe=t,t=s)):(Fe=t,t=s),t}function au(){var t,e,n,u;return t=Fe,"over"===r.substr(Fe,4).toLowerCase()?(e=r.substr(Fe,4),Fe+=4):(e=s,0===je&&Ve(Et)),e!==s?(n=Fe,je++,u=Hn(),je--,u===s?n=void 0:(Fe=n,n=s),n!==s?t=e=[e,n]:(Fe=t,t=s)):(Fe=t,t=s),t}function iu(){var t,e,n,u;return t=Fe,"with"===r.substr(Fe,4).toLowerCase()?(e=r.substr(Fe,4),Fe+=4):(e=s,0===je&&Ve(mt)),e!==s?(n=Fe,je++,u=Hn(),je--,u===s?n=void 0:(Fe=n,n=s),n!==s?t=e=[e,n]:(Fe=t,t=s)):(Fe=t,t=s),t}function cu(){var t,e,n,u;return t=Fe,"by"===r.substr(Fe,2).toLowerCase()?(e=r.substr(Fe,2),Fe+=2):(e=s,0===je&&Ve(It)),e!==s?(n=Fe,je++,u=Hn(),je--,u===s?n=void 0:(Fe=n,n=s),n!==s?t=e=[e,n]:(Fe=t,t=s)):(Fe=t,t=s),t}function lu(){var t,e,n,u;return t=Fe,"offset"===r.substr(Fe,6).toLowerCase()?(e=r.substr(Fe,6),Fe+=6):(e=s,0===je&&Ve(Ot)),e!==s?(n=Fe,je++,u=Hn(),je--,u===s?n=void 0:(Fe=n,n=s),n!==s?(t=e="OFFSET"):(Fe=t,t=s)):(Fe=t,t=s),t}function fu(){var t,e,n,u;return t=Fe,"all"===r.substr(Fe,3).toLowerCase()?(e=r.substr(Fe,3),Fe+=3):(e=s,0===je&&Ve(Mt)),e!==s?(n=Fe,je++,u=Hn(),je--,u===s?n=void 0:(Fe=n,n=s),n!==s?(t=e="ALL"):(Fe=t,t=s)):(Fe=t,t=s),t}function bu(){var t,e,n,u;return t=Fe,"distinct"===r.substr(Fe,8).toLowerCase()?(e=r.substr(Fe,8),Fe+=8):(e=s,0===je&&Ve(Dt)),e!==s?(n=Fe,je++,u=Hn(),je--,u===s?n=void 0:(Fe=n,n=s),n!==s?(t=e="DISTINCT"):(Fe=t,t=s)):(Fe=t,t=s),t}function vu(){var t,e,n,u;return t=Fe,"between"===r.substr(Fe,7).toLowerCase()?(e=r.substr(Fe,7),Fe+=7):(e=s,0===je&&Ve(kt)),e!==s?(n=Fe,je++,u=Hn(),je--,u===s?n=void 0:(Fe=n,n=s),n!==s?(t=e="BETWEEN"):(Fe=t,t=s)):(Fe=t,t=s),t}function du(){var t,e,n,u;return t=Fe,"in"===r.substr(Fe,2).toLowerCase()?(e=r.substr(Fe,2),Fe+=2):(e=s,0===je&&Ve($t)),e!==s?(n=Fe,je++,u=Hn(),je--,u===s?n=void 0:(Fe=n,n=s),n!==s?(t=e="IN"):(Fe=t,t=s)):(Fe=t,t=s),t}function Lu(){var t,e,n,u;return t=Fe,"is"===r.substr(Fe,2).toLowerCase()?(e=r.substr(Fe,2),Fe+=2):(e=s,0===je&&Ve(Ft)),e!==s?(n=Fe,je++,u=Hn(),je--,u===s?n=void 0:(Fe=n,n=s),n!==s?(t=e="IS"):(Fe=t,t=s)):(Fe=t,t=s),t}function Cu(){var t,e,n,u;return t=Fe,"like"===r.substr(Fe,4).toLowerCase()?(e=r.substr(Fe,4),Fe+=4):(e=s,0===je&&Ve(Pt)),e!==s?(n=Fe,je++,u=Hn(),je--,u===s?n=void 0:(Fe=n,n=s),n!==s?(t=e="LIKE"):(Fe=t,t=s)):(Fe=t,t=s),t}function pu(){var t,e,n,u;return t=Fe,"exists"===r.substr(Fe,6).toLowerCase()?(e=r.substr(Fe,6),Fe+=6):(e=s,0===je&&Ve(Ht)),e!==s?(n=Fe,je++,u=Hn(),je--,u===s?n=void 0:(Fe=n,n=s),n!==s?(t=e="EXISTS"):(Fe=t,t=s)):(Fe=t,t=s),t}function wu(){var t,e,n,u;return t=Fe,"not"===r.substr(Fe,3).toLowerCase()?(e=r.substr(Fe,3),Fe+=3):(e=s,0===je&&Ve(Gt)),e!==s?(n=Fe,je++,u=Hn(),je--,u===s?n=void 0:(Fe=n,n=s),n!==s?(t=e="NOT"):(Fe=t,t=s)):(Fe=t,t=s),t}function Eu(){var t,e,n,u;return t=Fe,"and"===r.substr(Fe,3).toLowerCase()?(e=r.substr(Fe,3),Fe+=3):(e=s,0===je&&Ve(jt)),e!==s?(n=Fe,je++,u=Hn(),je--,u===s?n=void 0:(Fe=n,n=s),n!==s?(t=e="AND"):(Fe=t,t=s)):(Fe=t,t=s),t}function hu(){var t,e,n,u;return t=Fe,"or"===r.substr(Fe,2).toLowerCase()?(e=r.substr(Fe,2),Fe+=2):(e=s,0===je&&Ve(Yt)),e!==s?(n=Fe,je++,u=Hn(),je--,u===s?n=void 0:(Fe=n,n=s),n!==s?(t=e="OR"):(Fe=t,t=s)):(Fe=t,t=s),t}function Au(){var t,e,n,u;return t=Fe,"case"===r.substr(Fe,4).toLowerCase()?(e=r.substr(Fe,4),Fe+=4):(e=s,0===je&&Ve(Zt)),e!==s?(n=Fe,je++,u=Hn(),je--,u===s?n=void 0:(Fe=n,n=s),n!==s?t=e=[e,n]:(Fe=t,t=s)):(Fe=t,t=s),t}function yu(){var t,e,n,u;return t=Fe,"cast"===r.substr(Fe,4).toLowerCase()?(e=r.substr(Fe,4),Fe+=4):(e=s,0===je&&Ve(te)),e!==s?(n=Fe,je++,u=Hn(),je--,u===s?n=void 0:(Fe=n,n=s),n!==s?t=e=[e,n]:(Fe=t,t=s)):(Fe=t,t=s),t}function Tu(){var t,e,n,u;return t=Fe,"array"===r.substr(Fe,5).toLowerCase()?(e=r.substr(Fe,5),Fe+=5):(e=s,0===je&&Ve(ee)),e!==s?(n=Fe,je++,u=Hn(),je--,u===s?n=void 0:(Fe=n,n=s),n!==s?(t=e="ARRAY"):(Fe=t,t=s)):(Fe=t,t=s),t}function mu(){var t,e,n,u;return t=Fe,"decimal"===r.substr(Fe,7).toLowerCase()?(e=r.substr(Fe,7),Fe+=7):(e=s,0===je&&Ve(ae)),e!==s?(n=Fe,je++,u=Hn(),je--,u===s?n=void 0:(Fe=n,n=s),n!==s?(t=e="DECIMAL"):(Fe=t,t=s)):(Fe=t,t=s),t}function Su(){var t,e,n,u;return t=Fe,"struct"===r.substr(Fe,6).toLowerCase()?(e=r.substr(Fe,6),Fe+=6):(e=s,0===je&&Ve(ve)),e!==s?(n=Fe,je++,u=Hn(),je--,u===s?n=void 0:(Fe=n,n=s),n!==s?(t=e="STRUCT"):(Fe=t,t=s)):(Fe=t,t=s),t}function Iu(){var t,e,n,u;return t=Fe,"date"===r.substr(Fe,4).toLowerCase()?(e=r.substr(Fe,4),Fe+=4):(e=s,0===je&&Ve(Le)),e!==s?(n=Fe,je++,u=Hn(),je--,u===s?n=void 0:(Fe=n,n=s),n!==s?(t=e="DATE"):(Fe=t,t=s)):(Fe=t,t=s),t}function Nu(){var t,e,n,u;return t=Fe,"datetime"===r.substr(Fe,8).toLowerCase()?(e=r.substr(Fe,8),Fe+=8):(e=s,0===je&&Ve(Ce)),e!==s?(n=Fe,je++,u=Hn(),je--,u===s?n=void 0:(Fe=n,n=s),n!==s?(t=e="DATETIME"):(Fe=t,t=s)):(Fe=t,t=s),t}function Ru(){var t,e,n,u;return t=Fe,"time"===r.substr(Fe,4).toLowerCase()?(e=r.substr(Fe,4),Fe+=4):(e=s,0===je&&Ve(pe)),e!==s?(n=Fe,je++,u=Hn(),je--,u===s?n=void 0:(Fe=n,n=s),n!==s?(t=e="TIME"):(Fe=t,t=s)):(Fe=t,t=s),t}function _u(){var t,e,n,u;return t=Fe,"timestamp"===r.substr(Fe,9).toLowerCase()?(e=r.substr(Fe,9),Fe+=9):(e=s,0===je&&Ve(we)),e!==s?(n=Fe,je++,u=Hn(),je--,u===s?n=void 0:(Fe=n,n=s),n!==s?(t=e="TIMESTAMP"):(Fe=t,t=s)):(Fe=t,t=s),t}function gu(){var t,e,n,u;return t=Fe,"interval"===r.substr(Fe,8).toLowerCase()?(e=r.substr(Fe,8),Fe+=8):(e=s,0===je&&Ve(he)),e!==s?(n=Fe,je++,u=Hn(),je--,u===s?n=void 0:(Fe=n,n=s),n!==s?(t=e="INTERVAL"):(Fe=t,t=s)):(Fe=t,t=s),t}function Ou(){var t,e,n,u;return t=Fe,"current_timestamp"===r.substr(Fe,17).toLowerCase()?(e=r.substr(Fe,17),Fe+=17):(e=s,0===je&&Ve(ye)),e!==s?(n=Fe,je++,u=Hn(),je--,u===s?n=void 0:(Fe=n,n=s),n!==s?(t=e="CURRENT_TIMESTAMP"):(Fe=t,t=s)):(Fe=t,t=s),t}function xu(){var t;return 46===r.charCodeAt(Fe)?(t=".",Fe++):(t=s,0===je&&Ve(Zr)),t}function Uu(){var t;return 44===r.charCodeAt(Fe)?(t=",",Fe++):(t=s,0===je&&Ve(Te)),t}function Mu(){var t;return 42===r.charCodeAt(Fe)?(t="*",Fe++):(t=s,0===je&&Ve(H)),t}function Du(){var t;return 40===r.charCodeAt(Fe)?(t="(",Fe++):(t=s,0===je&&Ve(i)),t}function ku(){var t;return 41===r.charCodeAt(Fe)?(t=")",Fe++):(t=s,0===je&&Ve(c)),t}function $u(){var t;return 60===r.charCodeAt(Fe)?(t="<",Fe++):(t=s,0===je&&Ve(k)),t}function Fu(){var t;return 62===r.charCodeAt(Fe)?(t=">",Fe++):(t=s,0===je&&Ve(U)),t}function Pu(){var t;return 91===r.charCodeAt(Fe)?(t="[",Fe++):(t=s,0===je&&Ve(me)),t}function Hu(){var t;return 93===r.charCodeAt(Fe)?(t="]",Fe++):(t=s,0===je&&Ve(Se)),t}function Gu(){var t;return 59===r.charCodeAt(Fe)?(t=";",Fe++):(t=s,0===je&&Ve(Ie)),t}function ju(){var t;return (t=function(){var t;return "||"===r.substr(Fe,2)?(t="||",Fe+=2):(t=s,0===je&&Ve(Ne)),t}())===s&&(t=function(){var t;return "&&"===r.substr(Fe,2)?(t="&&",Fe+=2):(t=s,0===je&&Ve(Re)),t}()),t}function Yu(){var r,t;for(r=[],(t=Vu())===s&&(t=Xu());t!==s;)r.push(t),(t=Vu())===s&&(t=Xu());return r}function Bu(){var r,t;if(r=[],(t=Vu())===s&&(t=Xu()),t!==s)for(;t!==s;)r.push(t),(t=Vu())===s&&(t=Xu());else r=s;return r}function Xu(){var t;return (t=function(){var t,e,n,u,o,a;t=Fe,"/*"===r.substr(Fe,2)?(e="/*",Fe+=2):(e=s,0===je&&Ve(_e));if(e!==s){for(n=[],u=Fe,o=Fe,je++,"*/"===r.substr(Fe,2)?(a="*/",Fe+=2):(a=s,0===je&&Ve(ge)),je--,a===s?o=void 0:(Fe=o,o=s),o!==s&&(a=Wu())!==s?u=o=[o,a]:(Fe=u,u=s);u!==s;)n.push(u),u=Fe,o=Fe,je++,"*/"===r.substr(Fe,2)?(a="*/",Fe+=2):(a=s,0===je&&Ve(ge)),je--,a===s?o=void 0:(Fe=o,o=s),o!==s&&(a=Wu())!==s?u=o=[o,a]:(Fe=u,u=s);n!==s?("*/"===r.substr(Fe,2)?(u="*/",Fe+=2):(u=s,0===je&&Ve(ge)),u!==s?t=e=[e,n,u]:(Fe=t,t=s)):(Fe=t,t=s);}else Fe=t,t=s;return t}())===s&&(t=function(){var t,e,n,u,o,a;t=Fe,"--"===r.substr(Fe,2)?(e="--",Fe+=2):(e=s,0===je&&Ve(Oe));if(e!==s){for(n=[],u=Fe,o=Fe,je++,a=Ku(),je--,a===s?o=void 0:(Fe=o,o=s),o!==s&&(a=Wu())!==s?u=o=[o,a]:(Fe=u,u=s);u!==s;)n.push(u),u=Fe,o=Fe,je++,a=Ku(),je--,a===s?o=void 0:(Fe=o,o=s),o!==s&&(a=Wu())!==s?u=o=[o,a]:(Fe=u,u=s);n!==s?t=e=[e,n]:(Fe=t,t=s);}else Fe=t,t=s;return t}())===s&&(t=function(){var t,e,n,u,o,a;t=Fe,35===r.charCodeAt(Fe)?(e="#",Fe++):(e=s,0===je&&Ve(xe));if(e!==s){for(n=[],u=Fe,o=Fe,je++,a=Ku(),je--,a===s?o=void 0:(Fe=o,o=s),o!==s&&(a=Wu())!==s?u=o=[o,a]:(Fe=u,u=s);u!==s;)n.push(u),u=Fe,o=Fe,je++,a=Ku(),je--,a===s?o=void 0:(Fe=o,o=s),o!==s&&(a=Wu())!==s?u=o=[o,a]:(Fe=u,u=s);n!==s?t=e=[e,n]:(Fe=t,t=s);}else Fe=t,t=s;return t}()),t}function Wu(){var t;return r.length>Fe?(t=r.charAt(Fe),Fe++):(t=s,0===je&&Ve(Ue)),t}function Vu(){var t;return Me.test(r.charAt(Fe))?(t=r.charAt(Fe),Fe++):(t=s,0===je&&Ve(De)),t}function Ku(){var t,e;if((t=function(){var t,e;t=Fe,je++,r.length>Fe?(e=r.charAt(Fe),Fe++):(e=s,0===je&&Ve(Ue));je--,e===s?t=void 0:(Fe=t,t=s);return t}())===s)if(t=[],Kr.test(r.charAt(Fe))?(e=r.charAt(Fe),Fe++):(e=s,0===je&&Ve(qr)),e!==s)for(;e!==s;)t.push(e),Kr.test(r.charAt(Fe))?(e=r.charAt(Fe),Fe++):(e=s,0===je&&Ve(qr));else t=s;return t}function qu(){var r,t,e,n,u,o,a,i;if(r=Fe,(t=Zu())!==s){for(e=[],n=Fe,(u=Yu())!==s&&(o=Uu())!==s&&(a=Yu())!==s&&(i=Zu())!==s?n=u=[u,o,a,i]:(Fe=n,n=s);n!==s;)e.push(n),n=Fe,(u=Yu())!==s&&(o=Uu())!==s&&(a=Yu())!==s&&(i=Zu())!==s?n=u=[u,o,a,i]:(Fe=n,n=s);e!==s?(r=t=v(t,e)):(Fe=r,r=s);}else Fe=r,r=s;return r}function Zu(){var r,t,e,n;return r=Fe,t=Fe,(e=Pn())!==s?((n=(n=!0===ts[e.toUpperCase()])?s:void 0)!==s?(t=e=e):(Fe=t,t=s)):(Fe=t,t=s),t===s&&(t=null),t!==s&&(e=Yu())!==s&&(n=zu())!==s?(r=t=function(r,t){return {field_name:r,field_type:t}}(t,n)):(Fe=r,r=s),r}function zu(){var t;return (t=Qu())===s&&(t=Ju())===s&&(t=function(){var e;(e=function(){var t,e,n,u;return t=Fe,"string"===r.substr(Fe,6).toLowerCase()?(e=r.substr(Fe,6),Fe+=6):(e=s,0===je&&Ve(be)),e!==s?(n=Fe,je++,u=Hn(),je--,u===s?n=void 0:(Fe=n,n=s),n!==s?(t=e="STRING"):(Fe=t,t=s)):(Fe=t,t=s),t}())!==s&&(e=ke(e));return e}())===s&&(t=function(){var e;(e=function(){var t,e,n,u;return t=Fe,"numeric"===r.substr(Fe,7).toLowerCase()?(e=r.substr(Fe,7),Fe+=7):(e=s,0===je&&Ve(oe)),e!==s?(n=Fe,je++,u=Hn(),je--,u===s?n=void 0:(Fe=n,n=s),n!==s?(t=e="NUMERIC"):(Fe=t,t=s)):(Fe=t,t=s),t}())===s&&(e=function(){var t,e,n,u;return t=Fe,"int64"===r.substr(Fe,5).toLowerCase()?(e=r.substr(Fe,5),Fe+=5):(e=s,0===je&&Ve(le)),e!==s?(n=Fe,je++,u=Hn(),je--,u===s?n=void 0:(Fe=n,n=s),n!==s?(t=e="INT64"):(Fe=t,t=s)):(Fe=t,t=s),t}())===s&&(e=function(){var t,e,n,u;return t=Fe,"float64"===r.substr(Fe,7).toLowerCase()?(e=r.substr(Fe,7),Fe+=7):(e=s,0===je&&Ve(de)),e!==s?(n=Fe,je++,u=Hn(),je--,u===s?n=void 0:(Fe=n,n=s),n!==s?(t=e="FLOAT64"):(Fe=t,t=s)):(Fe=t,t=s),t}());e!==s&&(e=ke(e));return e}())===s&&(t=function(){var t,e,n,u;t=Fe,(e=Iu())===s&&(e=Nu())===s&&(e=Ru())===s&&(e=_u());if(e!==s)if(Yu()!==s)if(Du()!==s)if(Yu()!==s){if(n=[],zr.test(r.charAt(Fe))?(u=r.charAt(Fe),Fe++):(u=s,0===je&&Ve(Jr)),u!==s)for(;u!==s;)n.push(u),zr.test(r.charAt(Fe))?(u=r.charAt(Fe),Fe++):(u=s,0===je&&Ve(Jr));else n=s;n!==s&&(u=Yu())!==s&&ku()!==s?(e={dataType:e,length:parseInt(n.join(""),10)},t=e):(Fe=t,t=s);}else Fe=t,t=s;else Fe=t,t=s;else Fe=t,t=s;else Fe=t,t=s;t===s&&(t=Fe,(e=Iu())===s&&(e=Nu())===s&&(e=Ru())===s&&(e=_u()),e!==s&&(e=ke(e)),t=e);return t}())===s&&(t=function(){var e;(e=function(){var t,e,n,u;return t=Fe,"bytes"===r.substr(Fe,5).toLowerCase()?(e=r.substr(Fe,5),Fe+=5):(e=s,0===je&&Ve(ne)),e!==s?(n=Fe,je++,u=Hn(),je--,u===s?n=void 0:(Fe=n,n=s),n!==s?(t=e="BYTES"):(Fe=t,t=s)):(Fe=t,t=s),t}())===s&&(e=function(){var t,e,n,u;return t=Fe,"bool"===r.substr(Fe,4).toLowerCase()?(e=r.substr(Fe,4),Fe+=4):(e=s,0===je&&Ve(ue)),e!==s?(n=Fe,je++,u=Hn(),je--,u===s?n=void 0:(Fe=n,n=s),n!==s?(t=e="BOOL"):(Fe=t,t=s)):(Fe=t,t=s),t}())===s&&(e=function(){var t,e,n,u;return t=Fe,"geography"===r.substr(Fe,9).toLowerCase()?(e=r.substr(Fe,9),Fe+=9):(e=s,0===je&&Ve(se)),e!==s?(n=Fe,je++,u=Hn(),je--,u===s?n=void 0:(Fe=n,n=s),n!==s?(t=e="GEOGRAPHY"):(Fe=t,t=s)):(Fe=t,t=s),t}());e!==s&&(e=ke(e));return e}()),t}function Ju(){var r,t,e;return r=Fe,(t=Tu())!==s&&Yu()!==s&&$u()!==s&&Yu()!==s&&(e=qu())!==s&&Yu()!==s&&Fu()!==s?(r=t=$e(t,e)):(Fe=r,r=s),r}function Qu(){var r,t,e;return r=Fe,(t=Su())!==s&&Yu()!==s&&$u()!==s&&Yu()!==s&&(e=qu())!==s&&Yu()!==s&&Fu()!==s?(r=t=$e(t,e)):(Fe=r,r=s),r}const rs={ARRAY:!0,ALTER:!0,ALL:!0,ADD:!0,AND:!0,AS:!0,ASC:!0,BETWEEN:!0,BY:!0,CALL:!0,CASE:!0,CREATE:!0,CROSS:!0,CONTAINS:!0,CURRENT_DATE:!0,CURRENT_TIME:!0,CURRENT_TIMESTAMP:!0,CURRENT_USER:!0,DELETE:!0,DESC:!0,DISTINCT:!0,DROP:!0,ELSE:!0,END:!0,EXISTS:!0,EXPLAIN:!0,FALSE:!0,FROM:!0,FULL:!0,FOR:!0,GROUP:!0,HAVING:!0,IN:!0,INNER:!0,INSERT:!0,INTO:!0,IS:!0,JOIN:!0,JSON:!0,KEY:!0,LEFT:!0,LIKE:!0,LIMIT:!0,LOW_PRIORITY:!0,NOT:!0,NULL:!0,ON:!0,OR:!0,ORDER:!0,OUTER:!0,PARTITION:!0,RECURSIVE:!0,RENAME:!0,READ:!0,RIGHT:!0,SELECT:!0,SESSION_USER:!0,SET:!0,SHOW:!0,SYSTEM_USER:!0,TABLE:!0,THEN:!0,TRUE:!0,TRUNCATE:!0,TYPE:!0,UNION:!0,UPDATE:!0,USING:!0,VALUES:!0,WINDOW:!0,WITH:!0,WHEN:!0,WHERE:!0,WRITE:!0,GLOBAL:!0,SESSION:!0,LOCAL:!0,PERSIST:!0,PERSIST_ONLY:!0},ts={BOOL:!0,BYTE:!0,DATE:!0,DATETIME:!0,FLOAT64:!0,INT64:!0,NUMERIC:!0,STRING:!0,TIME:!0,TIMESTAMP:!0,ARRAY:!0,STRUCT:!0};function es(r,t){return {type:"unary_expr",operator:r,expr:t}}function ns(r,t,e){return {type:"binary_expr",operator:r,left:t,right:e}}function us(r){const t=n(Number.MAX_SAFE_INTEGER);return !(n(r)<t)}function ss(r,t,e=3){const n=[r];for(let r=0;r<t.length;r++)n.push(t[r][e]);return n}function os(r,t){let e=r;for(let r=0;r<t.length;r++)e=ns(t[r][1],e,t[r][3]);return e}function as(r){const t=fs[r];return t||(r||null)}function is(r){const t=new Set;for(let e of r.keys()){const r=e.split("::");if(!r){t.add(e);break}r&&r[1]&&(r[1]=as(r[1])),t.add(r.join("::"));}return Array.from(t)}const cs=new Set,ls=new Set,fs={};if((e=a())!==s&&Fe===r.length)return e;throw e!==s&&Fe<r.length&&Ve({type:"end"}),Ke(Ge,He<r.length?r.charAt(He):null,He<r.length?We(He,He+1):We(He,He))}};},function(r,t,e){var n=e(0);function u(r,t,e,n){this.message=r,this.expected=t,this.found=e,this.location=n,this.name="SyntaxError","function"==typeof Error.captureStackTrace&&Error.captureStackTrace(this,u);}!function(r,t){function e(){this.constructor=r;}e.prototype=t.prototype,r.prototype=new e;}(u,Error),u.buildMessage=function(r,t){var e={literal:function(r){return '"'+u(r.text)+'"'},class:function(r){var t,e="";for(t=0;t<r.parts.length;t++)e+=r.parts[t]instanceof Array?s(r.parts[t][0])+"-"+s(r.parts[t][1]):s(r.parts[t]);return "["+(r.inverted?"^":"")+e+"]"},any:function(r){return "any character"},end:function(r){return "end of input"},other:function(r){return r.description}};function n(r){return r.charCodeAt(0).toString(16).toUpperCase()}function u(r){return r.replace(/\\/g,"\\\\").replace(/"/g,'\\"').replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(r){return "\\x0"+n(r)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(r){return "\\x"+n(r)}))}function s(r){return r.replace(/\\/g,"\\\\").replace(/\]/g,"\\]").replace(/\^/g,"\\^").replace(/-/g,"\\-").replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(r){return "\\x0"+n(r)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(r){return "\\x"+n(r)}))}return "Expected "+function(r){var t,n,u,s=new Array(r.length);for(t=0;t<r.length;t++)s[t]=(u=r[t],e[u.type](u));if(s.sort(),s.length>0){for(t=1,n=1;t<s.length;t++)s[t-1]!==s[t]&&(s[n]=s[t],n++);s.length=n;}switch(s.length){case 1:return s[0];case 2:return s[0]+" or "+s[1];default:return s.slice(0,-1).join(", ")+", or "+s[s.length-1]}}(r)+" but "+function(r){return r?'"'+u(r)+'"':"end of input"}(t)+" found."},r.exports={SyntaxError:u,parse:function(r,t){t=void 0!==t?t:{};var e,s={},o={start:Ru},a=Ru,i=function(r,t){return za(r,t,1)},c=function(r,t){return za(r,t)},l=yu("AUTO_INCREMENT",!0),f=yu("UNIQUE",!0),b=yu("PRIMARY",!0),v=yu("KEY",!0),d=yu("COLUMN_FORMAT",!0),L=yu("FIXED",!0),C=yu("DYNAMIC",!0),p=yu("DEFAULT",!0),w=yu("STORAGE",!0),E=yu("DISK",!0),h=yu("MEMORY",!0),A=yu("ALGORITHM",!0),y=yu("INSTANT",!0),T=yu("INPLACE",!0),m=yu("COPY",!0),S=yu("LOCK",!0),I=yu("NONE",!0),N=yu("SHARED",!0),R=yu("EXCLUSIVE",!0),_=yu("CHECK",!0),g=yu("NOCHECK",!0),O=yu("PRIMARY KEY",!0),x=yu("NOT",!0),U=yu("FOR",!0),M=yu("REPLICATION",!0),D=yu("FOREIGN KEY",!0),k=yu("MATCH FULL",!0),$=yu("MATCH PARTIAL",!0),F=yu("MATCH SIMPLE",!0),P=yu("ON",!0),H=yu("DELETE",!0),G=yu("UPDATE",!0),j=yu("RESTRICT",!0),Y=yu("CASCADE",!0),B=yu("SET NULL",!0),X=yu("NO ACTION",!0),W=yu("SET DEFAULT",!0),V=yu("CHARACTER",!0),K=yu("SET",!0),q=yu("CHARSET",!0),Z=yu("COLLATE",!0),z=yu("AVG_ROW_LENGTH",!0),J=yu("KEY_BLOCK_SIZE",!0),Q=yu("MAX_ROWS",!0),rr=yu("MIN_ROWS",!0),tr=yu("STATS_SAMPLE_PAGES",!0),er=yu("CONNECTION",!0),nr=yu("COMPRESSION",!0),ur=yu("'",!1),sr=yu("ZLIB",!0),or=yu("LZ4",!0),ar=yu("ENGINE",!0),ir=yu("READ",!0),cr=yu("LOCAL",!0),lr=yu("LOW_PRIORITY",!0),fr=yu("WRITE",!0),br=yu("(",!1),vr=yu(")",!1),dr=yu("BTREE",!0),Lr=yu("HASH",!0),Cr=yu("WITH",!0),pr=yu("PARSER",!0),wr=yu("VISIBLE",!0),Er=yu("INVISIBLE",!0),hr=function(r,t){return t.unshift(r),t.forEach(r=>{const{table:t,as:e}=r;ui[t]=t,e&&(ui[e]=t),function(r){const t=ri(r);r.clear(),t.forEach(t=>r.add(t));}(ni);}),t},Ar=yu("FIRST",!0),yr=yu("ROWS",!0),Tr=yu("ONLY",!0),mr=yu("NEXT",!0),Sr=yu("=",!1),Ir=yu("DUPLICATE",!0),Nr=function(r,t){return Ja(r,t)},Rr=yu("!",!1),_r=function(r){return r[0]+" "+r[2]},gr=yu(">=",!1),Or=yu(">",!1),xr=yu("<=",!1),Ur=yu("<>",!1),Mr=yu("<",!1),Dr=yu("!=",!1),kr=yu("+",!1),$r=yu("-",!1),Fr=yu("*",!1),Pr=yu("/",!1),Hr=yu("%",!1),Gr=function(r){return !0===Va[r.toUpperCase()]},jr=yu('"',!1),Yr=/^[^"]/,Br=Tu(['"'],!0,!1),Xr=function(r){return r.join("")},Wr=/^[^']/,Vr=Tu(["'"],!0,!1),Kr=yu("`",!1),qr=/^[^`]/,Zr=Tu(["`"],!0,!1),zr=function(r,t){return r+t.join("")},Jr=/^[A-Za-z_]/,Qr=Tu([["A","Z"],["a","z"],"_"],!1,!1),rt=/^[A-Za-z0-9_]/,tt=Tu([["A","Z"],["a","z"],["0","9"],"_"],!1,!1),et=/^[A-Za-z0-9_:]/,nt=Tu([["A","Z"],["a","z"],["0","9"],"_",":"],!1,!1),ut=yu(":",!1),st=function(r){return {type:"string",value:r[1].join("")}},ot=function(r,t){return {type:r.toLowerCase(),value:t[1].join("")}},at=yu("ON UPDATE CURRENT_TIMESTAMP",!0),it=/^[^"\\\0-\x1F\x7F]/,ct=Tu(['"',"\\",["\0",""],""],!0,!1),lt=/^[^'\\]/,ft=Tu(["'","\\"],!0,!1),bt=yu("\\'",!1),vt=yu('\\"',!1),dt=yu("\\\\",!1),Lt=yu("\\/",!1),Ct=yu("\\b",!1),pt=yu("\\f",!1),wt=yu("\\n",!1),Et=yu("\\r",!1),ht=yu("\\t",!1),At=yu("\\u",!1),yt=yu("\\",!1),Tt=/^[\n\r]/,mt=Tu(["\n","\r"],!1,!1),St=yu(".",!1),It=/^[0-9]/,Nt=Tu([["0","9"]],!1,!1),Rt=/^[0-9a-fA-F]/,_t=Tu([["0","9"],["a","f"],["A","F"]],!1,!1),gt=/^[eE]/,Ot=Tu(["e","E"],!1,!1),xt=/^[+\-]/,Ut=Tu(["+","-"],!1,!1),Mt=yu("NULL",!0),Dt=yu("NOT NULL",!0),kt=yu("TRUE",!0),$t=yu("TO",!0),Ft=yu("FALSE",!0),Pt=(yu("DROP",!0)),Ht=yu("USE",!0),Gt=yu("ALTER",!0),jt=yu("SELECT",!0),Yt=yu("CREATE",!0),Bt=yu("TEMPORARY",!0),Xt=yu("IF NOT EXISTS",!0),Wt=yu("INSERT",!0),Vt=yu("RECURSIVE",!1),Kt=yu("REPLACE",!0),qt=yu("RENAME",!0),Zt=yu("IGNORE",!0),zt=(yu("PARTITION",!0)),Jt=yu("INTO",!0),Qt=yu("FROM",!0),re=yu("UNLOCK",!0),te=yu("AS",!0),ee=yu("TABLE",!0),ne=yu("TABLES",!0),ue=yu("DATABASE",!0),se=yu("SCHEME",!0),oe=yu("LEFT",!0),ae=yu("RIGHT",!0),ie=yu("FULL",!0),ce=yu("INNER",!0),le=yu("JOIN",!0),fe=yu("OUTER",!0),be=yu("OVER",!0),ve=yu("UNION",!0),de=yu("VALUES",!0),Le=yu("USING",!0),Ce=yu("WHERE",!0),pe=yu("GROUP",!0),we=yu("BY",!0),Ee=yu("ORDER",!0),he=yu("HAVING",!0),Ae=yu("FETCH",!0),ye=yu("OFFSET",!0),Te=yu("ASC",!0),me=yu("DESC",!0),Se=yu("ALL",!0),Ie=yu("DISTINCT",!0),Ne=yu("BETWEEN",!0),Re=yu("IN",!0),_e=yu("IS",!0),ge=yu("LIKE",!0),Oe=yu("EXISTS",!0),xe=yu("AND",!0),Ue=yu("OR",!0),Me=yu("COUNT",!0),De=yu("MAX",!0),ke=yu("MIN",!0),$e=yu("SUM",!0),Fe=yu("AVG",!0),Pe=yu("CALL",!0),He=yu("CASE",!0),Ge=yu("WHEN",!0),je=yu("THEN",!0),Ye=yu("ELSE",!0),Be=yu("END",!0),Xe=yu("CAST",!0),We=yu("CHAR",!0),Ve=yu("VARCHAR",!0),Ke=yu("NUMERIC",!0),qe=yu("DECIMAL",!0),Ze=yu("SIGNED",!0),ze=yu("UNSIGNED",!0),Je=yu("INT",!0),Qe=yu("ZEROFILL",!0),rn=yu("INTEGER",!0),tn=yu("JSON",!0),en=yu("SMALLINT",!0),nn=yu("TINYINT",!0),un=yu("TINYTEXT",!0),sn=yu("TEXT",!0),on=yu("MEDIUMTEXT",!0),an=yu("LONGTEXT",!0),cn=yu("BIGINT",!0),ln=yu("FLOAT",!0),fn=yu("DOUBLE",!0),bn=yu("DATE",!0),vn=yu("DATETIME",!0),dn=yu("TIME",!0),Ln=yu("TIMESTAMP",!0),Cn=yu("TRUNCATE",!0),pn=yu("USER",!0),wn=yu("CURRENT_DATE",!0),En=(yu("INTERVAL",!0)),hn=yu("YEAR",!0),An=yu("MONTH",!0),yn=yu("DAY",!0),Tn=yu("HOUR",!0),mn=yu("MINUTE",!0),Sn=yu("SECOND",!0),In=yu("CURRENT_TIME",!0),Nn=yu("CURRENT_TIMESTAMP",!0),Rn=yu("CURRENT_USER",!0),_n=yu("SESSION_USER",!0),gn=yu("SYSTEM_USER",!0),On=yu("GLOBAL",!0),xn=yu("SESSION",!0),Un=yu("PERSIST",!0),Mn=yu("PERSIST_ONLY",!0),Dn=yu("@",!1),kn=yu("@@",!1),$n=yu("$",!1),Fn=yu("return",!0),Pn=yu(":=",!1),Hn=yu("DUAL",!0),Gn=yu("ADD",!0),jn=yu("COLUMN",!0),Yn=yu("INDEX",!0),Bn=yu("FULLTEXT",!0),Xn=yu("SPATIAL",!0),Wn=yu("COMMENT",!0),Vn=yu("CONSTRAINT",!0),Kn=yu("REFERENCES",!0),qn=yu("SQL_CALC_FOUND_ROWS",!0),Zn=yu("SQL_CACHE",!0),zn=yu("SQL_NO_CACHE",!0),Jn=yu("SQL_SMALL_RESULT",!0),Qn=yu("SQL_BIG_RESULT",!0),ru=yu("SQL_BUFFER_RESULT",!0),tu=yu(",",!1),eu=yu("[",!1),nu=yu("]",!1),uu=yu(";",!1),su=yu("->",!1),ou=yu("->>",!1),au=yu("||",!1),iu=yu("&&",!1),cu=yu("/*",!1),lu=yu("*/",!1),fu=yu("--",!1),bu=yu("#",!1),vu={type:"any"},du=/^[ \t\n\r]/,Lu=Tu([" ","\t","\n","\r"],!1,!1),Cu=function(r){return {dataType:r}},pu=0,wu=[{line:1,column:1}],Eu=0,hu=[],Au=0;if("startRule"in t){if(!(t.startRule in o))throw new Error("Can't start parsing from rule \""+t.startRule+'".');a=o[t.startRule];}function yu(r,t){return {type:"literal",text:r,ignoreCase:t}}function Tu(r,t,e){return {type:"class",parts:r,inverted:t,ignoreCase:e}}function mu(t){var e,n=wu[t];if(n)return n;for(e=t-1;!wu[e];)e--;for(n={line:(n=wu[e]).line,column:n.column};e<t;)10===r.charCodeAt(e)?(n.line++,n.column=1):n.column++,e++;return wu[t]=n,n}function Su(r,t){var e=mu(r),n=mu(t);return {start:{offset:r,line:e.line,column:e.column},end:{offset:t,line:n.line,column:n.column}}}function Iu(r){pu<Eu||(pu>Eu&&(Eu=pu,hu=[]),hu.push(r));}function Nu(r,t,e){return new u(u.buildMessage(r,t),r,t,e)}function Ru(){var r,t;return r=pu,Na()!==s?((t=function(){var r,t,e,n,u,o,a,i;if(r=pu,(t=gu())!==s){if(e=[],n=pu,(u=Na())!==s&&(o=Sa())!==s&&(a=Na())!==s&&(i=gu())!==s?n=u=[u,o,a,i]:(pu=n,n=s),n!==s)for(;n!==s;)e.push(n),n=pu,(u=Na())!==s&&(o=Sa())!==s&&(a=Na())!==s&&(i=gu())!==s?n=u=[u,o,a,i]:(pu=n,n=s);else e=s;e!==s?(t=function(r,t){const e=[r&&r.ast||r];for(let r=0;r<t.length;r++)t[r][3]&&0!==t[r][3].length&&e.push(t[r][3]&&t[r][3].ast||t[r][3]);return {tableList:Array.from(ei),columnList:ri(ni),ast:e}}(t,e),r=t):(pu=r,r=s);}else pu=r,r=s;return r}())===s&&(t=_u())===s&&(t=gu()),t!==s?(r=t):(pu=r,r=s)):(pu=r,r=s),r}function _u(){var t;return (t=function(){var r,t,e,n,u,o;r=pu,(t=Lo())!==s&&Na()!==s&&(e=Io())!==s&&Na()!==s&&(n=as())!==s?(a=t,c=e,(l=n)&&l.forEach(r=>ei.add(`${a}::${r.db}::${r.table}`)),t={tableList:Array.from(ei),columnList:ri(ni),ast:{type:a.toLowerCase(),keyword:c.toLowerCase(),name:l}},r=t):(pu=r,r=s);var a,c,l;r===s&&(r=pu,(t=Lo())!==s&&Na()!==s&&(e=Ca())!==s&&Na()!==s&&(n=js())!==s&&Na()!==s&&Ro()!==s&&Na()!==s&&(u=fs())!==s&&Na()!==s?((o=function(){var r,t,e,n,u,o;r=pu,(t=ku())===s&&(t=$u());if(t!==s){for(e=[],n=pu,(u=Na())!==s?((o=ku())===s&&(o=$u()),o!==s?n=u=[u,o]:(pu=n,n=s)):(pu=n,n=s);n!==s;)e.push(n),n=pu,(u=Na())!==s?((o=ku())===s&&(o=$u()),o!==s?n=u=[u,o]:(pu=n,n=s)):(pu=n,n=s);e!==s?(t=i(t,e),r=t):(pu=r,r=s);}else pu=r,r=s;return r}())===s&&(o=null),o!==s&&Na()!==s?(t=function(r,t,e,n,u){return {tableList:Array.from(ei),columnList:ri(ni),ast:{type:r.toLowerCase(),keyword:t.toLowerCase(),name:e,table:n,options:u}}}(t,e,n,u,o),r=t):(pu=r,r=s)):(pu=r,r=s));return r}())===s&&(t=function(){var t;(t=function(){var t,e,n,u,o,a,i,l,f,b;t=pu,(e=po())!==s&&Na()!==s?((n=wo())===s&&(n=null),n!==s&&Na()!==s&&Io()!==s&&Na()!==s?((u=Eo())===s&&(u=null),u!==s&&Na()!==s&&(o=as())!==s&&Na()!==s&&(a=function(){var r,t,e,n,u,o,a,i,l;if(r=pu,(t=Ta())!==s)if(Na()!==s)if((e=xu())!==s){for(n=[],u=pu,(o=Na())!==s&&(a=Aa())!==s&&(i=Na())!==s&&(l=xu())!==s?u=o=[o,a,i,l]:(pu=u,u=s);u!==s;)n.push(u),u=pu,(o=Na())!==s&&(a=Aa())!==s&&(i=Na())!==s&&(l=xu())!==s?u=o=[o,a,i,l]:(pu=u,u=s);n!==s&&(u=Na())!==s&&(o=ma())!==s?(t=c(e,n),r=t):(pu=r,r=s);}else pu=r,r=s;else pu=r,r=s;else pu=r,r=s;return r}())!==s&&Na()!==s?((i=function(){var r,t,e,n,u,o,a,i;if(r=pu,(t=Xu())!==s){for(e=[],n=pu,(u=Na())!==s?((o=Aa())===s&&(o=null),o!==s&&(a=Na())!==s&&(i=Xu())!==s?n=u=[u,o,a,i]:(pu=n,n=s)):(pu=n,n=s);n!==s;)e.push(n),n=pu,(u=Na())!==s?((o=Aa())===s&&(o=null),o!==s&&(a=Na())!==s&&(i=Xu())!==s?n=u=[u,o,a,i]:(pu=n,n=s)):(pu=n,n=s);e!==s?(t=za(t,e),r=t):(pu=r,r=s);}else pu=r,r=s;return r}())===s&&(i=null),i!==s&&Na()!==s?((l=function(){var t,e,n,u;t=pu,"ignore"===r.substr(pu,6).toLowerCase()?(e=r.substr(pu,6),pu+=6):(e=s,0===Au&&Iu(Zt));e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?t=e=[e,n]:(pu=t,t=s)):(pu=t,t=s);return t}())===s&&(l=ho()),l===s&&(l=null),l!==s&&Na()!==s?((f=So())===s&&(f=null),f!==s&&Na()!==s?((b=Ou())===s&&(b=null),b!==s?(v=e,d=n,L=u,p=a,w=i,E=l,h=f,A=b,(C=o)&&C.forEach(r=>ei.add(`create::${r.db}::${r.table}`)),e={tableList:Array.from(ei),columnList:ri(ni),ast:{type:v[0].toLowerCase(),keyword:"table",temporary:d&&d[0].toLowerCase(),if_not_exists:L&&L[0].toLowerCase(),table:C,ignore_replace:E&&E[0].toLowerCase(),as:h&&h[0].toLowerCase(),query_expr:A&&A.ast,create_definitions:p,table_options:w}},t=e):(pu=t,t=s)):(pu=t,t=s)):(pu=t,t=s)):(pu=t,t=s)):(pu=t,t=s)):(pu=t,t=s)):(pu=t,t=s);var v,d,L,C,p,w,E,h,A;t===s&&(t=pu,(e=po())!==s&&Na()!==s?((n=wo())===s&&(n=null),n!==s&&Na()!==s&&Io()!==s&&Na()!==s?((u=Eo())===s&&(u=null),u!==s&&Na()!==s&&(o=as())!==s&&Na()!==s&&(a=function r(){var t,e;(t=function(){var r,t;r=pu,jo()!==s&&Na()!==s&&(t=as())!==s?(r={type:"like",table:t}):(pu=r,r=s);return r}())===s&&(t=pu,Ta()!==s&&Na()!==s&&(e=r())!==s&&Na()!==s&&ma()!==s?((n=e).parentheses=!0,t=n):(pu=t,t=s));var n;return t}())!==s?(e=function(r,t,e,n,u){return n&&n.forEach(r=>ei.add(`create::${r.db}::${r.table}`)),{tableList:Array.from(ei),columnList:ri(ni),ast:{type:r[0].toLowerCase(),keyword:"table",temporary:t&&t[0].toLowerCase(),if_not_exists:e&&e[0].toLowerCase(),table:n,like:u}}}(e,n,u,o,a),t=e):(pu=t,t=s)):(pu=t,t=s)):(pu=t,t=s));return t}())===s&&(t=function(){var t,e,n,u,o,a;t=pu,(e=po())!==s&&Na()!==s?((n=function(){var t,e,n,u;t=pu,"database"===r.substr(pu,8).toLowerCase()?(e=r.substr(pu,8),pu+=8):(e=s,0===Au&&Iu(ue));e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?(t=e="DATABASE"):(pu=t,t=s)):(pu=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=pu,"scheme"===r.substr(pu,6).toLowerCase()?(e=r.substr(pu,6),pu+=6):(e=s,0===Au&&Iu(se));e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?(t=e="SCHEME"):(pu=t,t=s)):(pu=t,t=s);return t}()),n!==s&&Na()!==s?((u=Eo())===s&&(u=null),u!==s&&Na()!==s&&(o=Vs())!==s&&Na()!==s?((a=function(){var r,t,e,n,u,o;if(r=pu,(t=Bu())!==s){for(e=[],n=pu,(u=Na())!==s&&(o=Bu())!==s?n=u=[u,o]:(pu=n,n=s);n!==s;)e.push(n),n=pu,(u=Na())!==s&&(o=Bu())!==s?n=u=[u,o]:(pu=n,n=s);e!==s?(t=i(t,e),r=t):(pu=r,r=s);}else pu=r,r=s;return r}())===s&&(a=null),a!==s?(c=e,l=u,f=o,b=a,e={tableList:Array.from(ei),columnList:ri(ni),ast:{type:c[0].toLowerCase(),keyword:"database",if_not_exists:l&&l[0].toLowerCase(),database:f,create_definitions:b}},t=e):(pu=t,t=s)):(pu=t,t=s)):(pu=t,t=s)):(pu=t,t=s);var c,l,f,b;return t}());return t}())===s&&(t=function(){var t,e,n,u;t=pu,(e=function(){var t,e,n,u;t=pu,"truncate"===r.substr(pu,8).toLowerCase()?(e=r.substr(pu,8),pu+=8):(e=s,0===Au&&Iu(Cn));e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?(t=e="TRUNCATE"):(pu=t,t=s)):(pu=t,t=s);return t}())!==s&&Na()!==s?((n=Io())===s&&(n=null),n!==s&&Na()!==s&&(u=as())!==s?(o=e,a=n,(i=u)&&i.forEach(r=>ei.add(`${o}::${r.db}::${r.table}`)),e={tableList:Array.from(ei),columnList:ri(ni),ast:{type:o.toLowerCase(),keyword:a&&a.toLowerCase()||"table",name:i}},t=e):(pu=t,t=s)):(pu=t,t=s);var o,a,i;return t}())===s&&(t=function(){var r,t,e;r=pu,(t=Ao())!==s&&Na()!==s&&Io()!==s&&Na()!==s&&(e=function(){var r,t,e,n,u,o,a,i;if(r=pu,(t=ns())!==s){for(e=[],n=pu,(u=Na())!==s&&(o=Aa())!==s&&(a=Na())!==s&&(i=ns())!==s?n=u=[u,o,a,i]:(pu=n,n=s);n!==s;)e.push(n),n=pu,(u=Na())!==s&&(o=Aa())!==s&&(a=Na())!==s&&(i=ns())!==s?n=u=[u,o,a,i]:(pu=n,n=s);e!==s?(t=c(t,e),r=t):(pu=r,r=s);}else pu=r,r=s;return r}())!==s?((n=e).forEach(r=>r.forEach(r=>r.table&&ei.add(`rename::${r.db}::${r.table}`))),t={tableList:Array.from(ei),columnList:ri(ni),ast:{type:"rename",table:n}},r=t):(pu=r,r=s);var n;return r}())===s&&(t=function(){var t,e,n;t=pu,(e=function(){var t,e,n,u;t=pu,"call"===r.substr(pu,4).toLowerCase()?(e=r.substr(pu,4),pu+=4):(e=s,0===Au&&Iu(Pe));e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?(t=e="CALL"):(pu=t,t=s)):(pu=t,t=s);return t}())!==s&&Na()!==s&&(n=Ga())!==s?(u=n,e={tableList:Array.from(ei),columnList:ri(ni),ast:{type:"call",expr:u}},t=e):(pu=t,t=s);var u;return t}())===s&&(t=function(){var t,e,n;t=pu,(e=function(){var t,e,n,u;t=pu,"use"===r.substr(pu,3).toLowerCase()?(e=r.substr(pu,3),pu+=3):(e=s,0===Au&&Iu(Ht));e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?t=e=[e,n]:(pu=t,t=s)):(pu=t,t=s);return t}())!==s&&Na()!==s&&(n=Ys())!==s?(u=n,ei.add(`use::${u}::null`),e={tableList:Array.from(ei),columnList:ri(ni),ast:{type:"use",db:u}},t=e):(pu=t,t=s);var u;return t}())===s&&(t=function(){var t,e,n,u;t=pu,(e=function(){var t,e,n,u;t=pu,"alter"===r.substr(pu,5).toLowerCase()?(e=r.substr(pu,5),pu+=5):(e=s,0===Au&&Iu(Gt));e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?t=e=[e,n]:(pu=t,t=s)):(pu=t,t=s);return t}())!==s&&Na()!==s&&Io()!==s&&Na()!==s&&(n=as())!==s&&Na()!==s&&(u=function(){var r,t,e,n,u,o,a,i;if(r=pu,(t=Du())!==s){for(e=[],n=pu,(u=Na())!==s&&(o=Aa())!==s&&(a=Na())!==s&&(i=Du())!==s?n=u=[u,o,a,i]:(pu=n,n=s);n!==s;)e.push(n),n=pu,(u=Na())!==s&&(o=Aa())!==s&&(a=Na())!==s&&(i=Du())!==s?n=u=[u,o,a,i]:(pu=n,n=s);e!==s?(t=c(t,e),r=t):(pu=r,r=s);}else pu=r,r=s;return r}())!==s?(a=u,(o=n)&&o.length>0&&o.forEach(r=>ei.add(`alter::${r.db}::${r.table}`)),e={tableList:Array.from(ei),columnList:ri(ni),ast:{type:"alter",table:o,expr:a}},t=e):(pu=t,t=s);var o,a;return t}())===s&&(t=function(){var t,e,n,u;t=pu,(e=mo())!==s&&Na()!==s?((n=function(){var t,e,n,u;t=pu,"global"===r.substr(pu,6).toLowerCase()?(e=r.substr(pu,6),pu+=6):(e=s,0===Au&&Iu(On));e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?(t=e="GLOBAL"):(pu=t,t=s)):(pu=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=pu,"session"===r.substr(pu,7).toLowerCase()?(e=r.substr(pu,7),pu+=7):(e=s,0===Au&&Iu(xn));e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?(t=e="SESSION"):(pu=t,t=s)):(pu=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=pu,"local"===r.substr(pu,5).toLowerCase()?(e=r.substr(pu,5),pu+=5):(e=s,0===Au&&Iu(cr));e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?(t=e="LOCAL"):(pu=t,t=s)):(pu=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=pu,"persist"===r.substr(pu,7).toLowerCase()?(e=r.substr(pu,7),pu+=7):(e=s,0===Au&&Iu(Un));e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?(t=e="PERSIST"):(pu=t,t=s)):(pu=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=pu,"persist_only"===r.substr(pu,12).toLowerCase()?(e=r.substr(pu,12),pu+=12):(e=s,0===Au&&Iu(Mn));e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?(t=e="PERSIST_ONLY"):(pu=t,t=s)):(pu=t,t=s);return t}()),n===s&&(n=null),n!==s&&Na()!==s&&(u=Da())!==s?(o=n,(a=u).keyword=o,e={tableList:Array.from(ei),columnList:ri(ni),ast:{type:"set",expr:a}},t=e):(pu=t,t=s)):(pu=t,t=s);var o,a;return t}())===s&&(t=function(){var t,e,n;t=pu,(e=function(){var t,e,n,u;t=pu,"lock"===r.substr(pu,4).toLowerCase()?(e=r.substr(pu,4),pu+=4):(e=s,0===Au&&Iu(S));e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?t=e=[e,n]:(pu=t,t=s)):(pu=t,t=s);return t}())!==s&&Na()!==s&&No()!==s&&Na()!==s&&(n=function(){var r,t,e,n,u,o,a,i;if(r=pu,(t=Wu())!==s){for(e=[],n=pu,(u=Na())!==s&&(o=Aa())!==s&&(a=Na())!==s&&(i=Wu())!==s?n=u=[u,o,a,i]:(pu=n,n=s);n!==s;)e.push(n),n=pu,(u=Na())!==s&&(o=Aa())!==s&&(a=Na())!==s&&(i=Wu())!==s?n=u=[u,o,a,i]:(pu=n,n=s);e!==s?(t=za(t,e),r=t):(pu=r,r=s);}else pu=r,r=s;return r}())!==s?(u=n,e={tableList:Array.from(ei),columnList:ri(ni),ast:{type:"lock",keyword:"tables",tables:u}},t=e):(pu=t,t=s);var u;return t}())===s&&(t=function(){var t,e;t=pu,(e=function(){var t,e,n,u;t=pu,"unlock"===r.substr(pu,6).toLowerCase()?(e=r.substr(pu,6),pu+=6):(e=s,0===Au&&Iu(re));e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?t=e=[e,n]:(pu=t,t=s)):(pu=t,t=s);return t}())!==s&&Na()!==s&&No()!==s?(e={tableList:Array.from(ei),columnList:ri(ni),ast:{type:"unlock",keyword:"tables"}},t=e):(pu=t,t=s);return t}()),t}function gu(){var t;return (t=Ou())===s&&(t=function(){var r,t,e,n,u;r=pu,(t=Co())!==s&&Na()!==s&&(e=as())!==s&&Na()!==s&&mo()!==s&&Na()!==s&&(n=ws())!==s&&Na()!==s?((u=vs())===s&&(u=null),u!==s?(a=n,i=u,(o=e)&&o.forEach(r=>{const{db:t,as:e,table:n}=r;ei.add(`update::${t}::${n}`);}),a&&a.forEach(r=>ni.add(`update::${r.table}::${r.column}`)),t={tableList:Array.from(ei),columnList:ri(ni),ast:{type:"update",table:o,set:a,where:i}},r=t):(pu=r,r=s)):(pu=r,r=s);var o,a,i;return r}())===s&&(t=function(){var r,t,e,n,u,o,a,i;r=pu,(t=Ts())!==s&&Na()!==s?((e=To())===s&&(e=null),e!==s&&Na()!==s&&(n=fs())!==s&&Na()!==s?((u=As())===s&&(u=null),u!==s&&Na()!==s&&Ta()!==s&&Na()!==s&&(o=function(){var r,t,e,n,u,o,a,i;if(r=pu,(t=Xs())!==s){for(e=[],n=pu,(u=Na())!==s&&(o=Aa())!==s&&(a=Na())!==s&&(i=Xs())!==s?n=u=[u,o,a,i]:(pu=n,n=s);n!==s;)e.push(n),n=pu,(u=Na())!==s&&(o=Aa())!==s&&(a=Na())!==s&&(i=Xs())!==s?n=u=[u,o,a,i]:(pu=n,n=s);e!==s?(t=c(t,e),r=t):(pu=r,r=s);}else pu=r,r=s;return r}())!==s&&Na()!==s&&ma()!==s&&Na()!==s&&(a=hs())!==s&&Na()!==s?((i=ys())===s&&(i=null),i!==s?(t=function(r,t,e,n,u,s){if(t&&(ei.add(`insert::${t.db}::${t.table}`),t.as=null),n){let r=t&&t.table||null;Array.isArray(u)&&u.forEach((r,t)=>{if(r.value.length!=n.length)throw new Error("Error: column count doesn't match value count at row "+(t+1))}),n.forEach(t=>ni.add(`insert::${r}::${t}`));}return {tableList:Array.from(ei),columnList:ri(ni),ast:{type:r,table:[t],columns:n,values:u,partition:e,on_duplicate_update:s}}}(t,n,u,o,a,i),r=t):(pu=r,r=s)):(pu=r,r=s)):(pu=r,r=s)):(pu=r,r=s);return r}())===s&&(t=function(){var r,t,e,n,u,o;r=pu,(t=Ts())!==s&&Na()!==s&&To()!==s&&Na()!==s&&(e=fs())!==s&&Na()!==s?((n=As())===s&&(n=null),n!==s&&Na()!==s&&(u=hs())!==s&&Na()!==s?((o=ys())===s&&(o=null),o!==s?(a=t,c=n,l=u,f=o,(i=e)&&(ei.add(`insert::${i.db}::${i.table}`),ni.add(`insert::${i.table}::(.*)`),i.as=null),t={tableList:Array.from(ei),columnList:ri(ni),ast:{type:a,table:[i],columns:null,values:l,partition:c,on_duplicate_update:f}},r=t):(pu=r,r=s)):(pu=r,r=s)):(pu=r,r=s);var a,i,c,l,f;return r}())===s&&(t=function(){var r,t,e,n,u,o;r=pu,(t=Ts())!==s&&Na()!==s&&To()!==s&&Na()!==s&&(e=fs())!==s&&Na()!==s?((n=As())===s&&(n=null),n!==s&&Na()!==s&&mo()!==s&&Na()!==s&&(u=ws())!==s&&Na()!==s?((o=ys())===s&&(o=null),o!==s?(a=t,c=n,l=u,f=o,(i=e)&&(ei.add(`insert::${i.db}::${i.table}`),ni.add(`insert::${i.table}::(.*)`),i.as=null),t={tableList:Array.from(ei),columnList:ri(ni),ast:{type:a,table:[i],columns:null,partition:c,set:l,on_duplicate_update:f}},r=t):(pu=r,r=s)):(pu=r,r=s)):(pu=r,r=s);var a,i,c,l,f;return r}())===s&&(t=function(){var t,e,n,u,o;t=pu,(e=function(){var t,e,n,u;t=pu,"delete"===r.substr(pu,6).toLowerCase()?(e=r.substr(pu,6),pu+=6):(e=s,0===Au&&Iu(H));e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?t=e=[e,n]:(pu=t,t=s)):(pu=t,t=s);return t}())!==s&&Na()!==s?((n=as())===s&&(n=null),n!==s&&Na()!==s&&(u=es())!==s&&Na()!==s?((o=vs())===s&&(o=null),o!==s?(e=function(r,t,e){if(t&&t.forEach(r=>{r.table&&ei.add(`delete::${r.db}::${r.table}`),ni.add(`delete::${r.table}::(.*)`);}),null===r&&1===t.length){const e=t[0];r=[{db:e.db,table:e.table,as:e.as,addition:!0}];}return {tableList:Array.from(ei),columnList:ri(ni),ast:{type:"delete",table:r,from:t,where:e}}}(n,u,o),t=e):(pu=t,t=s)):(pu=t,t=s)):(pu=t,t=s);return t}())===s&&(t=_u())===s&&(t=function(){var r,t;r=[],t=Ma();for(;t!==s;)r.push(t),t=Ma();return r}()),t}function Ou(){var r,t,e,n,u,o,a,i,c,l;if(r=pu,(t=Vu())!==s){for(e=[],n=pu,(u=Na())!==s&&(o=Oo())!==s&&(a=Na())!==s?((i=$o())===s&&(i=null),i!==s&&(c=Na())!==s&&(l=Vu())!==s?n=u=[u,o,a,i,c,l]:(pu=n,n=s)):(pu=n,n=s);n!==s;)e.push(n),n=pu,(u=Na())!==s&&(o=Oo())!==s&&(a=Na())!==s?((i=$o())===s&&(i=null),i!==s&&(c=Na())!==s&&(l=Vu())!==s?n=u=[u,o,a,i,c,l]:(pu=n,n=s)):(pu=n,n=s);e!==s&&(n=Na())!==s?((u=ds())===s&&(u=null),u!==s&&(o=Na())!==s?((a=ps())===s&&(a=null),a!==s?(r=t=function(r,t,e,n){let u=r;for(let r=0;r<t.length;r++)u._next=t[r][5],u.union=t[r][3]?"union all":"union",u=u._next;return e&&(r._orderby=e),n&&(r._limit=n),{tableList:Array.from(ei),columnList:ri(ni),ast:r}}(t,e,u,a)):(pu=r,r=s)):(pu=r,r=s)):(pu=r,r=s);}else pu=r,r=s;return r}function xu(){var r;return (r=Hu())===s&&(r=Uu())===s&&(r=Fu())===s&&(r=Pu()),r}function Uu(){var t,e,n,u,o,a,i,c,A,y,T,m,S,I,N,R,_,g,O,x,U,M,D,k,$;return t=pu,(e=js())!==s&&Na()!==s&&(n=Xa())!==s&&Na()!==s?((u=function(){var e;(e=function(){var t,e,n,u;t=pu,"not null"===r.substr(pu,8).toLowerCase()?(e=r.substr(pu,8),pu+=8):(e=s,0===Au&&Iu(Dt));e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?t=e=[e,n]:(pu=t,t=s)):(pu=t,t=s);return t}())!==s&&(e={type:"not null",value:"not null"});return e}())===s&&(u=ro()),u===s&&(u=null),u!==s&&Na()!==s?((o=function(){var r,t;r=pu,bo()!==s&&Na()!==s?((t=Qs())===s&&(t=_s()),t!==s?(r={type:"default",value:t}):(pu=r,r=s)):(pu=r,r=s);return r}())===s&&(o=null),o!==s&&Na()!==s?("auto_increment"===r.substr(pu,14).toLowerCase()?(a=r.substr(pu,14),pu+=14):(a=s,0===Au&&Iu(l)),a===s&&(a=null),a!==s&&Na()!==s?(i=pu,"unique"===r.substr(pu,6).toLowerCase()?(c=r.substr(pu,6),pu+=6):(c=s,0===Au&&Iu(f)),c===s&&("primary"===r.substr(pu,7).toLowerCase()?(c=r.substr(pu,7),pu+=7):(c=s,0===Au&&Iu(b))),c===s&&(c=null),c!==s&&(A=Na())!==s?("key"===r.substr(pu,3).toLowerCase()?(y=r.substr(pu,3),pu+=3):(y=s,0===Au&&Iu(v)),y!==s?i=c=[c,A,y]:(pu=i,i=s)):(pu=i,i=s),i===s&&(i=null),i!==s&&(c=Na())!==s?((A=ga())===s&&(A=null),A!==s&&(y=Na())!==s?((T=Mu())===s&&(T=null),T!==s&&Na()!==s?((m=function(){var t,e,n;t=pu,"column_format"===r.substr(pu,13).toLowerCase()?(e=r.substr(pu,13),pu+=13):(e=s,0===Au&&Iu(d));e!==s&&Na()!==s?("fixed"===r.substr(pu,5).toLowerCase()?(n=r.substr(pu,5),pu+=5):(n=s,0===Au&&Iu(L)),n===s&&("dynamic"===r.substr(pu,7).toLowerCase()?(n=r.substr(pu,7),pu+=7):(n=s,0===Au&&Iu(C)),n===s&&("default"===r.substr(pu,7).toLowerCase()?(n=r.substr(pu,7),pu+=7):(n=s,0===Au&&Iu(p)))),n!==s?(e=function(r,t){return {type:"column_format",value:t.toLowerCase()}}(0,n),t=e):(pu=t,t=s)):(pu=t,t=s);return t}())===s&&(m=null),m!==s&&Na()!==s?((S=function(){var t,e,n;t=pu,"storage"===r.substr(pu,7).toLowerCase()?(e=r.substr(pu,7),pu+=7):(e=s,0===Au&&Iu(w));e!==s&&Na()!==s?("disk"===r.substr(pu,4).toLowerCase()?(n=r.substr(pu,4),pu+=4):(n=s,0===Au&&Iu(E)),n===s&&("memory"===r.substr(pu,6).toLowerCase()?(n=r.substr(pu,6),pu+=6):(n=s,0===Au&&Iu(h))),n!==s?(e={type:"storage",value:n.toLowerCase()},t=e):(pu=t,t=s)):(pu=t,t=s);return t}())===s&&(S=null),S!==s&&Na()!==s?((I=ju())===s&&(I=null),I!==s?(N=e,R=n,_=u,g=o,O=a,x=i,U=A,M=T,D=m,k=S,$=I,ni.add(`create::${N.table}::${N.column}`),_&&!_.value&&(_.value="null"),t=e={column:N,definition:R,nullable:_,default_val:g,auto_increment:O&&O.toLowerCase(),unique_or_primary:x&&`${x[0].toLowerCase()} ${x[2].toLowerCase()}`,comment:U,collate:M,column_format:D,storage:k,reference_definition:$,resource:"column"}):(pu=t,t=s)):(pu=t,t=s)):(pu=t,t=s)):(pu=t,t=s)):(pu=t,t=s)):(pu=t,t=s)):(pu=t,t=s)):(pu=t,t=s)):(pu=t,t=s)):(pu=t,t=s),t}function Mu(){var t,e;return t=pu,function(){var t,e,n,u;t=pu,"collate"===r.substr(pu,7).toLowerCase()?(e=r.substr(pu,7),pu+=7):(e=s,0===Au&&Iu(Z));e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?(t=e="COLLATE"):(pu=t,t=s)):(pu=t,t=s);return t}()!==s&&Na()!==s&&(e=Vs())!==s?(t={type:"collate",value:e}):(pu=t,t=s),t}function Du(){var t;return (t=function(){var r,t;r=pu,da()!==s&&Na()!==s&&(t=Hu())!==s?(r={action:"add",create_definitions:t,resource:"constraint",type:"alter"}):(pu=r,r=s);return r}())===s&&(t=function(){var t,e,n,u;t=pu,(e=Lo())!==s&&Na()!==s?("check"===r.substr(pu,5).toLowerCase()?(n=r.substr(pu,5),pu+=5):(n=s,0===Au&&Iu(_)),n!==s&&Na()!==s&&(u=Vs())!==s?(e={action:"drop",constraint:u,keyword:n.toLowerCase(),resource:"constraint",type:"alter"},t=e):(pu=t,t=s)):(pu=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=pu,Mo()!==s&&Na()!==s?("check"===r.substr(pu,5).toLowerCase()?(e=r.substr(pu,5),pu+=5):(e=s,0===Au&&Iu(_)),e!==s&&Na()!==s?("check"===r.substr(pu,5).toLowerCase()?(n=r.substr(pu,5),pu+=5):(n=s,0===Au&&Iu(_)),n!==s&&Na()!==s&&Ea()!==s&&Na()!==s&&(u=Vs())!==s?(t={action:"with",constraint:u,keyword:"check check",resource:"constraint",type:"alter"}):(pu=t,t=s)):(pu=t,t=s)):(pu=t,t=s);return t}())===s&&(t=function(){var t,e,n;t=pu,"nocheck"===r.substr(pu,7).toLowerCase()?(e=r.substr(pu,7),pu+=7):(e=s,0===Au&&Iu(g));e!==s&&Na()!==s&&Ea()!==s&&Na()!==s&&(n=Vs())!==s?(t=e={action:"nocheck",constraint:n,resource:"constraint",type:"alter"}):(pu=t,t=s);return t}())===s&&(t=function(){var r,t,e,n;r=pu,(t=da())!==s&&Na()!==s?((e=La())===s&&(e=null),e!==s&&Na()!==s&&(n=Uu())!==s?(u=e,o=n,t={action:"add",...o,keyword:u,resource:"column",type:"alter"},r=t):(pu=r,r=s)):(pu=r,r=s);var u,o;return r}())===s&&(t=function(){var r,t,e;r=pu,Lo()!==s&&Na()!==s?((t=La())===s&&(t=null),t!==s&&Na()!==s&&(e=js())!==s?(r={action:"drop",column:e,keyword:t,resource:"column",type:"alter"}):(pu=r,r=s)):(pu=r,r=s);return r}())===s&&(t=function(){var r,t,e;r=pu,(t=da())!==s&&Na()!==s&&(e=Fu())!==s?(n=e,t={action:"add",type:"alter",...n},r=t):(pu=r,r=s);var n;return r}())===s&&(t=function(){var r,t,e;r=pu,(t=da())!==s&&Na()!==s&&(e=Pu())!==s?(n=e,t={action:"add",type:"alter",...n},r=t):(pu=r,r=s);var n;return r}())===s&&(t=function(){var r,t,e,n;r=pu,(t=Ao())!==s&&Na()!==s?((e=vo())===s&&(e=So()),e===s&&(e=null),e!==s&&Na()!==s&&(n=Ys())!==s?(o=n,t={action:"rename",type:"alter",resource:"table",keyword:(u=e)&&u[0].toLowerCase(),table:o},r=t):(pu=r,r=s)):(pu=r,r=s);var u,o;return r}())===s&&(t=ku())===s&&(t=$u()),t}function ku(){var t,e,n,u;return t=pu,"algorithm"===r.substr(pu,9).toLowerCase()?(e=r.substr(pu,9),pu+=9):(e=s,0===Au&&Iu(A)),e!==s&&Na()!==s?((n=va())===s&&(n=null),n!==s&&Na()!==s?("default"===r.substr(pu,7).toLowerCase()?(u=r.substr(pu,7),pu+=7):(u=s,0===Au&&Iu(p)),u===s&&("instant"===r.substr(pu,7).toLowerCase()?(u=r.substr(pu,7),pu+=7):(u=s,0===Au&&Iu(y)),u===s&&("inplace"===r.substr(pu,7).toLowerCase()?(u=r.substr(pu,7),pu+=7):(u=s,0===Au&&Iu(T)),u===s&&("copy"===r.substr(pu,4).toLowerCase()?(u=r.substr(pu,4),pu+=4):(u=s,0===Au&&Iu(m))))),u!==s?(t=e={type:"alter",keyword:"algorithm",resource:"algorithm",symbol:n,algorithm:u}):(pu=t,t=s)):(pu=t,t=s)):(pu=t,t=s),t}function $u(){var t,e,n,u;return t=pu,"lock"===r.substr(pu,4).toLowerCase()?(e=r.substr(pu,4),pu+=4):(e=s,0===Au&&Iu(S)),e!==s&&Na()!==s?((n=va())===s&&(n=null),n!==s&&Na()!==s?("default"===r.substr(pu,7).toLowerCase()?(u=r.substr(pu,7),pu+=7):(u=s,0===Au&&Iu(p)),u===s&&("none"===r.substr(pu,4).toLowerCase()?(u=r.substr(pu,4),pu+=4):(u=s,0===Au&&Iu(I)),u===s&&("shared"===r.substr(pu,6).toLowerCase()?(u=r.substr(pu,6),pu+=6):(u=s,0===Au&&Iu(N)),u===s&&("exclusive"===r.substr(pu,9).toLowerCase()?(u=r.substr(pu,9),pu+=9):(u=s,0===Au&&Iu(R))))),u!==s?(t=e={type:"alter",keyword:"lock",resource:"lock",symbol:n,lock:u}):(pu=t,t=s)):(pu=t,t=s)):(pu=t,t=s),t}function Fu(){var r,t,e,n,u,o,a,i;return r=pu,(t=Ca())===s&&(t=pa()),t!==s&&Na()!==s?((e=Xs())===s&&(e=null),e!==s&&Na()!==s?((n=us())===s&&(n=null),n!==s&&Na()!==s&&(u=Zu())!==s&&Na()!==s?((o=ss())===s&&(o=null),o!==s&&Na()!==s?(a=n,i=o,r=t={index:e,definition:u,keyword:t.toLowerCase(),index_type:a,resource:"index",index_options:i}):(pu=r,r=s)):(pu=r,r=s)):(pu=r,r=s)):(pu=r,r=s),r}function Pu(){var t,e,n,u,o,a,i,c,l;return t=pu,(e=function(){var t,e,n,u;t=pu,"fulltext"===r.substr(pu,8).toLowerCase()?(e=r.substr(pu,8),pu+=8):(e=s,0===Au&&Iu(Bn));e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?(t=e="FULLTEXT"):(pu=t,t=s)):(pu=t,t=s);return t}())===s&&(e=function(){var t,e,n,u;t=pu,"spatial"===r.substr(pu,7).toLowerCase()?(e=r.substr(pu,7),pu+=7):(e=s,0===Au&&Iu(Xn));e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?(t=e="SPATIAL"):(pu=t,t=s)):(pu=t,t=s);return t}()),e!==s&&Na()!==s?((n=Ca())===s&&(n=pa()),n===s&&(n=null),n!==s&&Na()!==s?((u=Xs())===s&&(u=null),u!==s&&Na()!==s&&(o=Zu())!==s&&Na()!==s?((a=ss())===s&&(a=null),a!==s&&Na()!==s?(i=e,l=a,t=e={index:u,definition:o,keyword:(c=n)&&`${i.toLowerCase()} ${c.toLowerCase()}`||i.toLowerCase(),index_options:l,resource:"index"}):(pu=t,t=s)):(pu=t,t=s)):(pu=t,t=s)):(pu=t,t=s),t}function Hu(){var t;return (t=function(){var t,e,n,u,o,a;t=pu,(e=Gu())===s&&(e=null);e!==s&&Na()!==s?("primary key"===r.substr(pu,11).toLowerCase()?(n=r.substr(pu,11),pu+=11):(n=s,0===Au&&Iu(O)),n!==s&&Na()!==s?((u=us())===s&&(u=null),u!==s&&Na()!==s&&(o=Zu())!==s&&Na()!==s?((a=ss())===s&&(a=null),a!==s?(c=n,l=u,f=o,b=a,e={constraint:(i=e)&&i.constraint,definition:f,constraint_type:c.toLowerCase(),keyword:i&&i.keyword,index_type:l,resource:"constraint",index_options:b},t=e):(pu=t,t=s)):(pu=t,t=s)):(pu=t,t=s)):(pu=t,t=s);var i,c,l,f,b;return t}())===s&&(t=function(){var t,e,n,u,o,a,i,c;t=pu,(e=Gu())===s&&(e=null);e!==s&&Na()!==s&&(n=function(){var t,e,n,u;t=pu,"unique"===r.substr(pu,6).toLowerCase()?(e=r.substr(pu,6),pu+=6):(e=s,0===Au&&Iu(f));e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?(t=e="UNIQUE"):(pu=t,t=s)):(pu=t,t=s);return t}())!==s&&Na()!==s?((u=Ca())===s&&(u=pa()),u===s&&(u=null),u!==s&&Na()!==s?((o=Xs())===s&&(o=null),o!==s&&Na()!==s?((a=us())===s&&(a=null),a!==s&&Na()!==s&&(i=Zu())!==s&&Na()!==s?((c=ss())===s&&(c=null),c!==s?(b=n,v=u,d=o,L=a,C=i,p=c,e={constraint:(l=e)&&l.constraint,definition:C,constraint_type:v&&`${b.toLowerCase()} ${v.toLowerCase()}`||b.toLowerCase(),keyword:l&&l.keyword,index_type:L,index:d,resource:"constraint",index_options:p},t=e):(pu=t,t=s)):(pu=t,t=s)):(pu=t,t=s)):(pu=t,t=s)):(pu=t,t=s);var l,b,v,d,L,C,p;return t}())===s&&(t=function(){var t,e,n,u,o,a;t=pu,(e=Gu())===s&&(e=null);e!==s&&Na()!==s?("foreign key"===r.substr(pu,11).toLowerCase()?(n=r.substr(pu,11),pu+=11):(n=s,0===Au&&Iu(D)),n!==s&&Na()!==s?((u=Xs())===s&&(u=null),u!==s&&Na()!==s&&(o=Zu())!==s&&Na()!==s?((a=ju())===s&&(a=null),a!==s?(c=n,l=u,f=o,b=a,e={constraint:(i=e)&&i.constraint,definition:f,constraint_type:c,keyword:i&&i.keyword,index:l,resource:"constraint",reference_definition:b},t=e):(pu=t,t=s)):(pu=t,t=s)):(pu=t,t=s)):(pu=t,t=s);var i,c,l,f,b;return t}())===s&&(t=function(){var t,e,n,u,o,a,i,c,l,f;t=pu,(e=Gu())===s&&(e=null);e!==s&&Na()!==s?("check"===r.substr(pu,5).toLowerCase()?(n=r.substr(pu,5),pu+=5):(n=s,0===Au&&Iu(_)),n!==s&&Na()!==s?(u=pu,"not"===r.substr(pu,3).toLowerCase()?(o=r.substr(pu,3),pu+=3):(o=s,0===Au&&Iu(x)),o!==s&&(a=Na())!==s?("for"===r.substr(pu,3).toLowerCase()?(i=r.substr(pu,3),pu+=3):(i=s,0===Au&&Iu(U)),i!==s&&(c=Na())!==s?("replication"===r.substr(pu,11).toLowerCase()?(l=r.substr(pu,11),pu+=11):(l=s,0===Au&&Iu(M)),l!==s&&(f=Na())!==s?u=o=[o,a,i,c,l,f]:(pu=u,u=s)):(pu=u,u=s)):(pu=u,u=s),u===s&&(u=null),u!==s&&(o=Ta())!==s&&(a=Na())!==s&&(i=_s())!==s&&(c=Na())!==s&&(l=ma())!==s?(b=e,v=u,d=i,e={constraint_type:n.toLowerCase(),keyword:b&&b.keyword,constraint:b&&b.constraint,index_type:v&&{keyword:"not for replication"},definition:[d],resource:"constraint"},t=e):(pu=t,t=s)):(pu=t,t=s)):(pu=t,t=s);var b,v,d;return t}()),t}function Gu(){var r,t,e,n;return r=pu,(t=Ea())!==s&&Na()!==s?((e=Ys())===s&&(e=null),e!==s?(n=e,r=t={keyword:t.toLowerCase(),constraint:n}):(pu=r,r=s)):(pu=r,r=s),r}function ju(){var t,e,n,u,o,a,i,c,l,f;return t=pu,(e=function(){var t,e,n,u;t=pu,"references"===r.substr(pu,10).toLowerCase()?(e=r.substr(pu,10),pu+=10):(e=s,0===Au&&Iu(Kn));e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?(t=e="REFERENCES"):(pu=t,t=s)):(pu=t,t=s);return t}())!==s&&Na()!==s&&(n=as())!==s&&Na()!==s&&(u=Zu())!==s&&Na()!==s?("match full"===r.substr(pu,10).toLowerCase()?(o=r.substr(pu,10),pu+=10):(o=s,0===Au&&Iu(k)),o===s&&("match partial"===r.substr(pu,13).toLowerCase()?(o=r.substr(pu,13),pu+=13):(o=s,0===Au&&Iu($)),o===s&&("match simple"===r.substr(pu,12).toLowerCase()?(o=r.substr(pu,12),pu+=12):(o=s,0===Au&&Iu(F)))),o===s&&(o=null),o!==s&&Na()!==s?((a=Yu())===s&&(a=null),a!==s&&Na()!==s?((i=Yu())===s&&(i=null),i!==s?(c=o,l=a,f=i,t=e={definition:u,table:n,keyword:e.toLowerCase(),match:c&&c.toLowerCase(),on_delete:l,on_update:f}):(pu=t,t=s)):(pu=t,t=s)):(pu=t,t=s)):(pu=t,t=s),t}function Yu(){var t,e,n,u,o,a;return t=pu,"on"===r.substr(pu,2).toLowerCase()?(e=r.substr(pu,2),pu+=2):(e=s,0===Au&&Iu(P)),e!==s&&Na()!==s?("delete"===r.substr(pu,6).toLowerCase()?(n=r.substr(pu,6),pu+=6):(n=s,0===Au&&Iu(H)),n===s&&("update"===r.substr(pu,6).toLowerCase()?(n=r.substr(pu,6),pu+=6):(n=s,0===Au&&Iu(G))),n!==s&&Na()!==s&&(u=function(){var e;"restrict"===r.substr(pu,8).toLowerCase()?(e=r.substr(pu,8),pu+=8):(e=s,0===Au&&Iu(j));e===s&&("cascade"===r.substr(pu,7).toLowerCase()?(e=r.substr(pu,7),pu+=7):(e=s,0===Au&&Iu(Y)),e===s&&("set null"===r.substr(pu,8).toLowerCase()?(e=r.substr(pu,8),pu+=8):(e=s,0===Au&&Iu(B)),e===s&&("no action"===r.substr(pu,9).toLowerCase()?(e=r.substr(pu,9),pu+=9):(e=s,0===Au&&Iu(X)),e===s&&("set default"===r.substr(pu,11).toLowerCase()?(e=r.substr(pu,11),pu+=11):(e=s,0===Au&&Iu(W))))));e!==s&&(e=e.toLowerCase());return e}())!==s?(o=n,a=u,t=e={type:`${e.toLowerCase()} ${o.toLowerCase()}`,value:a}):(pu=t,t=s)):(pu=t,t=s),t}function Bu(){var t,e,n,u,o,a,i,c,l;return t=pu,(e=bo())===s&&(e=null),e!==s&&Na()!==s?((n=function(){var t,e,n;return t=pu,"character"===r.substr(pu,9).toLowerCase()?(e=r.substr(pu,9),pu+=9):(e=s,0===Au&&Iu(V)),e!==s&&Na()!==s?("set"===r.substr(pu,3).toLowerCase()?(n=r.substr(pu,3),pu+=3):(n=s,0===Au&&Iu(K)),n!==s?(t=e="CHARACTER SET"):(pu=t,t=s)):(pu=t,t=s),t}())===s&&("charset"===r.substr(pu,7).toLowerCase()?(n=r.substr(pu,7),pu+=7):(n=s,0===Au&&Iu(q)),n===s&&("collate"===r.substr(pu,7).toLowerCase()?(n=r.substr(pu,7),pu+=7):(n=s,0===Au&&Iu(Z)))),n!==s&&Na()!==s?((u=va())===s&&(u=null),u!==s&&Na()!==s&&(o=Vs())!==s?(i=n,c=u,l=o,t=e={keyword:(a=e)&&`${a[0].toLowerCase()} ${i.toLowerCase()}`||i.toLowerCase(),symbol:c,value:l}):(pu=t,t=s)):(pu=t,t=s)):(pu=t,t=s),t}function Xu(){var t,e,n,u,o,a,i,c,f;return t=pu,"auto_increment"===r.substr(pu,14).toLowerCase()?(e=r.substr(pu,14),pu+=14):(e=s,0===Au&&Iu(l)),e===s&&("avg_row_length"===r.substr(pu,14).toLowerCase()?(e=r.substr(pu,14),pu+=14):(e=s,0===Au&&Iu(z)),e===s&&("key_block_size"===r.substr(pu,14).toLowerCase()?(e=r.substr(pu,14),pu+=14):(e=s,0===Au&&Iu(J)),e===s&&("max_rows"===r.substr(pu,8).toLowerCase()?(e=r.substr(pu,8),pu+=8):(e=s,0===Au&&Iu(Q)),e===s&&("min_rows"===r.substr(pu,8).toLowerCase()?(e=r.substr(pu,8),pu+=8):(e=s,0===Au&&Iu(rr)),e===s&&("stats_sample_pages"===r.substr(pu,18).toLowerCase()?(e=r.substr(pu,18),pu+=18):(e=s,0===Au&&Iu(tr))))))),e!==s&&Na()!==s?((n=va())===s&&(n=null),n!==s&&Na()!==s&&(u=so())!==s?(c=n,f=u,t=e={keyword:e.toLowerCase(),symbol:c,value:f.value}):(pu=t,t=s)):(pu=t,t=s),t===s&&(t=Bu())===s&&(t=pu,(e=wa())===s&&("connection"===r.substr(pu,10).toLowerCase()?(e=r.substr(pu,10),pu+=10):(e=s,0===Au&&Iu(er))),e!==s&&Na()!==s?((n=va())===s&&(n=null),n!==s&&Na()!==s&&(u=to())!==s?(t=e=function(r,t,e){return {keyword:r.toLowerCase(),symbol:t,value:`'${e.value}'`}}(e,n,u)):(pu=t,t=s)):(pu=t,t=s),t===s&&(t=pu,"compression"===r.substr(pu,11).toLowerCase()?(e=r.substr(pu,11),pu+=11):(e=s,0===Au&&Iu(nr)),e!==s&&Na()!==s?((n=va())===s&&(n=null),n!==s&&Na()!==s?(u=pu,39===r.charCodeAt(pu)?(o="'",pu++):(o=s,0===Au&&Iu(ur)),o!==s?("zlib"===r.substr(pu,4).toLowerCase()?(a=r.substr(pu,4),pu+=4):(a=s,0===Au&&Iu(sr)),a===s&&("lz4"===r.substr(pu,3).toLowerCase()?(a=r.substr(pu,3),pu+=3):(a=s,0===Au&&Iu(or)),a===s&&("none"===r.substr(pu,4).toLowerCase()?(a=r.substr(pu,4),pu+=4):(a=s,0===Au&&Iu(I)))),a!==s?(39===r.charCodeAt(pu)?(i="'",pu++):(i=s,0===Au&&Iu(ur)),i!==s?u=o=[o,a,i]:(pu=u,u=s)):(pu=u,u=s)):(pu=u,u=s),u!==s?(t=e=function(r,t,e){return {keyword:r.toLowerCase(),symbol:t,value:e.join("").toUpperCase()}}(e,n,u)):(pu=t,t=s)):(pu=t,t=s)):(pu=t,t=s),t===s&&(t=pu,"engine"===r.substr(pu,6).toLowerCase()?(e=r.substr(pu,6),pu+=6):(e=s,0===Au&&Iu(ar)),e!==s&&Na()!==s?((n=va())===s&&(n=null),n!==s&&Na()!==s&&(u=Vs())!==s?(t=e=function(r,t,e){return {keyword:r.toLowerCase(),symbol:t,value:e.toUpperCase()}}(e,n,u)):(pu=t,t=s)):(pu=t,t=s)))),t}function Wu(){var t,e,n,u,o;return t=pu,(e=cs())!==s&&Na()!==s&&(n=function(){var t,e,n;return t=pu,"read"===r.substr(pu,4).toLowerCase()?(e=r.substr(pu,4),pu+=4):(e=s,0===Au&&Iu(ir)),e!==s&&Na()!==s?("local"===r.substr(pu,5).toLowerCase()?(n=r.substr(pu,5),pu+=5):(n=s,0===Au&&Iu(cr)),n===s&&(n=null),n!==s?(t=e={type:"read",suffix:n&&"local"}):(pu=t,t=s)):(pu=t,t=s),t===s&&(t=pu,"low_priority"===r.substr(pu,12).toLowerCase()?(e=r.substr(pu,12),pu+=12):(e=s,0===Au&&Iu(lr)),e===s&&(e=null),e!==s&&Na()!==s?("write"===r.substr(pu,5).toLowerCase()?(n=r.substr(pu,5),pu+=5):(n=s,0===Au&&Iu(fr)),n!==s?(t=e={type:"write",prefix:e&&"low_priority"}):(pu=t,t=s)):(pu=t,t=s)),t}())!==s?(u=e,o=n,ei.add(`lock::${u.db}::${u.table}`),t=e={table:u,lock_type:o}):(pu=t,t=s),t}function Vu(){var t,e,n,u,o,a,i;return (t=zu())===s&&(t=pu,e=pu,40===r.charCodeAt(pu)?(n="(",pu++):(n=s,0===Au&&Iu(br)),n!==s&&(u=Na())!==s&&(o=Vu())!==s&&(a=Na())!==s?(41===r.charCodeAt(pu)?(i=")",pu++):(i=s,0===Au&&Iu(vr)),i!==s?e=n=[n,u,o,a,i]:(pu=e,e=s)):(pu=e,e=s),e!==s&&(e={...e[2],parentheses_symbol:!0}),t=e),t}function Ku(){var t,e,n,u,o,a,i,l,f;if(t=pu,Mo()!==s)if(Na()!==s)if((e=qu())!==s){for(n=[],u=pu,(o=Na())!==s&&(a=Aa())!==s&&(i=Na())!==s&&(l=qu())!==s?u=o=[o,a,i,l]:(pu=u,u=s);u!==s;)n.push(u),u=pu,(o=Na())!==s&&(a=Aa())!==s&&(i=Na())!==s&&(l=qu())!==s?u=o=[o,a,i,l]:(pu=u,u=s);n!==s?(t=c(e,n)):(pu=t,t=s);}else pu=t,t=s;else pu=t,t=s;else pu=t,t=s;return t===s&&(t=pu,Na()!==s&&Mo()!==s&&(e=Na())!==s&&(n=function(){var t,e,n,u;t=pu,"RECURSIVE"===r.substr(pu,9)?(e="RECURSIVE",pu+=9):(e=s,0===Au&&Iu(Vt));e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?t=e=[e,n]:(pu=t,t=s)):(pu=t,t=s);return t}())!==s&&(u=Na())!==s&&(o=qu())!==s?((f=o).recursive=!0,t=[f]):(pu=t,t=s)),t}function qu(){var r,t,e,n;return r=pu,(t=Vs())!==s&&Na()!==s?((e=Zu())===s&&(e=null),e!==s&&Na()!==s&&So()!==s&&Na()!==s&&Ta()!==s&&Na()!==s&&(n=Ou())!==s&&Na()!==s&&ma()!==s?(r=t={name:t,stmt:n,columns:e}):(pu=r,r=s)):(pu=r,r=s),r}function Zu(){var r,t,e,n,u,o,a,i;if(r=pu,Ta()!==s)if(Na()!==s)if((t=Xs())!==s){for(e=[],n=pu,(u=Na())!==s&&(o=Aa())!==s&&(a=Na())!==s&&(i=Xs())!==s?n=u=[u,o,a,i]:(pu=n,n=s);n!==s;)e.push(n),n=pu,(u=Na())!==s&&(o=Aa())!==s&&(a=Na())!==s&&(i=Xs())!==s?n=u=[u,o,a,i]:(pu=n,n=s);e!==s&&(n=Na())!==s&&(u=ma())!==s?(r=c(t,e)):(pu=r,r=s);}else pu=r,r=s;else pu=r,r=s;else pu=r,r=s;return r}function zu(){var t,e,n,u,o,a,i,c,l,f,b;return t=pu,Na()!==s?((e=Ku())===s&&(e=null),e!==s&&Na()!==s&&function(){var t,e,n,u;t=pu,"select"===r.substr(pu,6).toLowerCase()?(e=r.substr(pu,6),pu+=6):(e=s,0===Au&&Iu(jt));e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?t=e=[e,n]:(pu=t,t=s)):(pu=t,t=s);return t}()!==s&&Ra()!==s?((n=function(){var r,t,e,n,u,o;if(r=pu,(t=Ju())!==s){for(e=[],n=pu,(u=Na())!==s&&(o=Ju())!==s?n=u=[u,o]:(pu=n,n=s);n!==s;)e.push(n),n=pu,(u=Na())!==s&&(o=Ju())!==s?n=u=[u,o]:(pu=n,n=s);e!==s?(t=function(r,t){const e=[r];for(let r=0,n=t.length;r<n;++r)e.push(t[r][1]);return e}(t,e),r=t):(pu=r,r=s);}else pu=r,r=s;return r}())===s&&(n=null),n!==s&&Na()!==s?((u=Fo())===s&&(u=null),u!==s&&Na()!==s&&(o=Qu())!==s&&Na()!==s?((a=es())===s&&(a=null),a!==s&&Na()!==s?((i=vs())===s&&(i=null),i!==s&&Na()!==s?((c=function(){var t,e,n;t=pu,(e=function(){var t,e,n,u;t=pu,"group"===r.substr(pu,5).toLowerCase()?(e=r.substr(pu,5),pu+=5):(e=s,0===Au&&Iu(pe));e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?t=e=[e,n]:(pu=t,t=s)):(pu=t,t=s);return t}())!==s&&Na()!==s&&Do()!==s&&Na()!==s&&(n=Ss())!==s?(e=n.value,t=e):(pu=t,t=s);return t}())===s&&(c=null),c!==s&&Na()!==s?((l=function(){var t,e;t=pu,function(){var t,e,n,u;t=pu,"having"===r.substr(pu,6).toLowerCase()?(e=r.substr(pu,6),pu+=6):(e=s,0===Au&&Iu(he));e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?t=e=[e,n]:(pu=t,t=s)):(pu=t,t=s);return t}()!==s&&Na()!==s&&(e=_s())!==s?(t=e):(pu=t,t=s);return t}())===s&&(l=null),l!==s&&Na()!==s?((f=ds())===s&&(f=null),f!==s&&Na()!==s?((b=ps())===s&&(b=null),b!==s?(t=function(r,t,e,n,u,s,o,a,i,c){return u&&u.forEach(r=>r.table&&ei.add(`select::${r.db}::${r.table}`)),{with:r,type:"select",options:t,distinct:e,columns:n,from:u,where:s,groupby:o,having:a,orderby:i,limit:c}}(e,n,u,o,a,i,c,l,f,b)):(pu=t,t=s)):(pu=t,t=s)):(pu=t,t=s)):(pu=t,t=s)):(pu=t,t=s)):(pu=t,t=s)):(pu=t,t=s)):(pu=t,t=s)):(pu=t,t=s)):(pu=t,t=s),t}function Ju(){var e;return (e=function(){var t;"sql_calc_found_rows"===r.substr(pu,19).toLowerCase()?(t=r.substr(pu,19),pu+=19):(t=s,0===Au&&Iu(qn));return t}())===s&&((e=function(){var t;"sql_cache"===r.substr(pu,9).toLowerCase()?(t=r.substr(pu,9),pu+=9):(t=s,0===Au&&Iu(Zn));return t}())===s&&(e=function(){var t;"sql_no_cache"===r.substr(pu,12).toLowerCase()?(t=r.substr(pu,12),pu+=12):(t=s,0===Au&&Iu(zn));return t}()),e===s&&(e=function(){var t;"sql_big_result"===r.substr(pu,14).toLowerCase()?(t=r.substr(pu,14),pu+=14):(t=s,0===Au&&Iu(Qn));return t}())===s&&(e=function(){var t;"sql_small_result"===r.substr(pu,16).toLowerCase()?(t=r.substr(pu,16),pu+=16):(t=s,0===Au&&Iu(Jn));return t}())===s&&(e=function(){var t;"sql_buffer_result"===r.substr(pu,17).toLowerCase()?(t=r.substr(pu,17),pu+=17):(t=s,0===Au&&Iu(ru));return t}())),e!==s&&(e=e),e}function Qu(){var r,t,e,n,u,o,a,i,l,f;if(r=pu,(t=$o())===s&&(t=pu,(e=ya())!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?t=e=[e,n]:(pu=t,t=s)):(pu=t,t=s),t===s&&(t=ya())),t!==s){for(e=[],n=pu,(u=Na())!==s&&(o=Aa())!==s&&(a=Na())!==s&&(i=rs())!==s?n=u=[u,o,a,i]:(pu=n,n=s);n!==s;)e.push(n),n=pu,(u=Na())!==s&&(o=Aa())!==s&&(a=Na())!==s&&(i=rs())!==s?n=u=[u,o,a,i]:(pu=n,n=s);e!==s?(l=t,f=e,ni.add("select::null::(.*)"),r=t=f&&f.length>0?(l[0]={expr:{type:"column_ref",table:null,column:"*"},as:null},za(l[0],f)):l[0]):(pu=r,r=s);}else pu=r,r=s;if(r===s)if(r=pu,(t=rs())!==s){for(e=[],n=pu,(u=Na())!==s&&(o=Aa())!==s&&(a=Na())!==s&&(i=rs())!==s?n=u=[u,o,a,i]:(pu=n,n=s);n!==s;)e.push(n),n=pu,(u=Na())!==s&&(o=Aa())!==s&&(a=Na())!==s&&(i=rs())!==s?n=u=[u,o,a,i]:(pu=n,n=s);e!==s?(r=t=c(t,e)):(pu=r,r=s);}else pu=r,r=s;return r}function rs(){var r,t,e,n;return r=pu,(t=Ys())!==s&&Na()!==s&&(e=ha())!==s&&Na()!==s&&ya()!==s?(n=t,ni.add(`select::${n}::(.*)`),r=t={expr:{type:"column_ref",table:n,column:"*"},as:null}):(pu=r,r=s),r===s&&(r=pu,(t=_s())!==s&&Na()!==s?((e=ts())===s&&(e=null),e!==s?(r=t={expr:t,as:e}):(pu=r,r=s)):(pu=r,r=s)),r}function ts(){var r,t,e;return r=pu,(t=So())!==s&&Na()!==s&&(e=function(){var r,t;r=pu,(t=Vs())!==s?((function(r){if(!0===Va[r.toUpperCase()])throw new Error("Error: "+JSON.stringify(r)+" is a reserved word, can not as alias clause");return !1}(t)?s:void 0)!==s?(r=t=t):(pu=r,r=s)):(pu=r,r=s);r===s&&(r=pu,(t=Bs())!==s&&(t=t),r=t);return r}())!==s?(r=t=e):(pu=r,r=s),r===s&&(r=pu,(t=So())===s&&(t=null),t!==s&&Na()!==s&&(e=Ys())!==s?(r=t=e):(pu=r,r=s)),r}function es(){var t,e;return t=pu,function(){var t,e,n,u;t=pu,"from"===r.substr(pu,4).toLowerCase()?(e=r.substr(pu,4),pu+=4):(e=s,0===Au&&Iu(Qt));e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?t=e=[e,n]:(pu=t,t=s)):(pu=t,t=s);return t}()!==s&&Na()!==s&&(e=as())!==s?(t=e):(pu=t,t=s),t}function ns(){var r,t,e;return r=pu,(t=fs())!==s&&Na()!==s&&vo()!==s&&Na()!==s&&(e=fs())!==s?(r=t=[t,e]):(pu=r,r=s),r}function us(){var t,e;return t=pu,Uo()!==s&&Na()!==s?("btree"===r.substr(pu,5).toLowerCase()?(e=r.substr(pu,5),pu+=5):(e=s,0===Au&&Iu(dr)),e===s&&("hash"===r.substr(pu,4).toLowerCase()?(e=r.substr(pu,4),pu+=4):(e=s,0===Au&&Iu(Lr))),e!==s?(t={keyword:"using",type:e.toLowerCase()}):(pu=t,t=s)):(pu=t,t=s),t}function ss(){var r,t,e,n,u,o;if(r=pu,(t=os())!==s){for(e=[],n=pu,(u=Na())!==s&&(o=os())!==s?n=u=[u,o]:(pu=n,n=s);n!==s;)e.push(n),n=pu,(u=Na())!==s&&(o=os())!==s?n=u=[u,o]:(pu=n,n=s);e!==s?(r=t=function(r,t){const e=[r];for(let r=0;r<t.length;r++)e.push(t[r][1]);return e}(t,e)):(pu=r,r=s);}else pu=r,r=s;return r}function os(){var t,e,n,u,o,a;return t=pu,(e=function(){var t,e,n,u;t=pu,"key_block_size"===r.substr(pu,14).toLowerCase()?(e=r.substr(pu,14),pu+=14):(e=s,0===Au&&Iu(J));e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?(t=e="KEY_BLOCK_SIZE"):(pu=t,t=s)):(pu=t,t=s);return t}())!==s&&Na()!==s?((n=va())===s&&(n=null),n!==s&&Na()!==s&&(u=so())!==s?(o=n,a=u,t=e={type:e.toLowerCase(),symbol:o,expr:a}):(pu=t,t=s)):(pu=t,t=s),t===s&&(t=us())===s&&(t=pu,"with"===r.substr(pu,4).toLowerCase()?(e=r.substr(pu,4),pu+=4):(e=s,0===Au&&Iu(Cr)),e!==s&&Na()!==s?("parser"===r.substr(pu,6).toLowerCase()?(n=r.substr(pu,6),pu+=6):(n=s,0===Au&&Iu(pr)),n!==s&&Na()!==s&&(u=Vs())!==s?(t=e={type:"with parser",expr:u}):(pu=t,t=s)):(pu=t,t=s),t===s&&(t=pu,"visible"===r.substr(pu,7).toLowerCase()?(e=r.substr(pu,7),pu+=7):(e=s,0===Au&&Iu(wr)),e===s&&("invisible"===r.substr(pu,9).toLowerCase()?(e=r.substr(pu,9),pu+=9):(e=s,0===Au&&Iu(Er))),e!==s&&(e=function(r){return {type:r.toLowerCase(),expr:r.toLowerCase()}}(e)),(t=e)===s&&(t=ga()))),t}function as(){var r,t,e,n;if(r=pu,(t=cs())!==s){for(e=[],n=is();n!==s;)e.push(n),n=is();e!==s?(r=t=hr(t,e)):(pu=r,r=s);}else pu=r,r=s;return r}function is(){var r,t,e;return r=pu,Na()!==s&&(t=Aa())!==s&&Na()!==s&&(e=cs())!==s?(r=e):(pu=r,r=s),r===s&&(r=pu,Na()!==s&&(t=function(){var r,t,e,n,u,o,a,i,c,l,f;if(r=pu,(t=ls())!==s)if(Na()!==s)if((e=cs())!==s)if(Na()!==s)if((n=Uo())!==s)if(Na()!==s)if(Ta()!==s)if(Na()!==s)if((u=Vs())!==s){for(o=[],a=pu,(i=Na())!==s&&(c=Aa())!==s&&(l=Na())!==s&&(f=Vs())!==s?a=i=[i,c,l,f]:(pu=a,a=s);a!==s;)o.push(a),a=pu,(i=Na())!==s&&(c=Aa())!==s&&(l=Na())!==s&&(f=Vs())!==s?a=i=[i,c,l,f]:(pu=a,a=s);o!==s&&(a=Na())!==s&&(i=ma())!==s?(b=t,d=u,L=o,(v=e).join=b,v.using=za(d,L),r=t=v):(pu=r,r=s);}else pu=r,r=s;else pu=r,r=s;else pu=r,r=s;else pu=r,r=s;else pu=r,r=s;else pu=r,r=s;else pu=r,r=s;else pu=r,r=s;else pu=r,r=s;var b,v,d,L;r===s&&(r=pu,(t=ls())!==s&&Na()!==s&&(e=cs())!==s&&Na()!==s?((n=bs())===s&&(n=null),n!==s?(t=function(r,t,e){return t.join=r,t.on=e,t}(t,e,n),r=t):(pu=r,r=s)):(pu=r,r=s),r===s&&(r=pu,(t=ls())!==s&&Na()!==s&&(e=Ta())!==s&&Na()!==s&&(n=Ou())!==s&&Na()!==s&&ma()!==s&&Na()!==s?((u=ts())===s&&(u=null),u!==s&&(o=Na())!==s?((a=bs())===s&&(a=null),a!==s?(t=function(r,t,e,n){return t.parentheses=!0,{expr:t,as:e,join:r,on:n}}(t,n,u,a),r=t):(pu=r,r=s)):(pu=r,r=s)):(pu=r,r=s)));return r}())!==s?(r=t):(pu=r,r=s)),r}function cs(){var t,e,n,u,o,a;return t=pu,(e=function(){var t;"dual"===r.substr(pu,4).toLowerCase()?(t=r.substr(pu,4),pu+=4):(t=s,0===Au&&Iu(Hn));return t}())!==s&&(e={type:"dual"}),(t=e)===s&&(t=pu,(e=fs())!==s&&Na()!==s?((n=ts())===s&&(n=null),n!==s?(a=n,t=e="var"===(o=e).type?(o.as=a,o):{db:o.db,table:o.table,as:a}):(pu=t,t=s)):(pu=t,t=s),t===s&&(t=pu,(e=Ta())!==s&&Na()!==s&&(n=Ou())!==s&&Na()!==s&&ma()!==s&&Na()!==s?((u=ts())===s&&(u=null),u!==s?(t=e=function(r,t){return r.parentheses=!0,{expr:r,as:t}}(n,u)):(pu=t,t=s)):(pu=t,t=s))),t}function ls(){var t,e,n,u;return t=pu,(e=function(){var t,e,n,u;t=pu,"left"===r.substr(pu,4).toLowerCase()?(e=r.substr(pu,4),pu+=4):(e=s,0===Au&&Iu(oe));e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?t=e=[e,n]:(pu=t,t=s)):(pu=t,t=s);return t}())!==s&&(n=Na())!==s?((u=go())===s&&(u=null),u!==s&&Na()!==s&&_o()!==s?(t=e="LEFT JOIN"):(pu=t,t=s)):(pu=t,t=s),t===s&&(t=pu,(e=function(){var t,e,n,u;t=pu,"right"===r.substr(pu,5).toLowerCase()?(e=r.substr(pu,5),pu+=5):(e=s,0===Au&&Iu(ae));e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?t=e=[e,n]:(pu=t,t=s)):(pu=t,t=s);return t}())!==s&&(n=Na())!==s?((u=go())===s&&(u=null),u!==s&&Na()!==s&&_o()!==s?(t=e="RIGHT JOIN"):(pu=t,t=s)):(pu=t,t=s),t===s&&(t=pu,(e=function(){var t,e,n,u;t=pu,"full"===r.substr(pu,4).toLowerCase()?(e=r.substr(pu,4),pu+=4):(e=s,0===Au&&Iu(ie));e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?t=e=[e,n]:(pu=t,t=s)):(pu=t,t=s);return t}())!==s&&(n=Na())!==s?((u=go())===s&&(u=null),u!==s&&Na()!==s&&_o()!==s?(t=e="FULL JOIN"):(pu=t,t=s)):(pu=t,t=s),t===s&&(t=pu,e=pu,(n=function(){var t,e,n,u;t=pu,"inner"===r.substr(pu,5).toLowerCase()?(e=r.substr(pu,5),pu+=5):(e=s,0===Au&&Iu(ce));e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?t=e=[e,n]:(pu=t,t=s)):(pu=t,t=s);return t}())!==s&&(u=Na())!==s?e=n=[n,u]:(pu=e,e=s),e===s&&(e=null),e!==s&&(n=_o())!==s?(t=e="INNER JOIN"):(pu=t,t=s)))),t}function fs(){var r,t,e,n,u,o,a,i;return r=pu,(t=Ys())!==s?(e=pu,(n=Na())!==s&&(u=ha())!==s&&(o=Na())!==s&&(a=Ys())!==s?e=n=[n,u,o,a]:(pu=e,e=s),e===s&&(e=null),e!==s?(r=t=function(r,t){const e={db:null,table:r};return null!==t&&(e.db=r,e.table=t[3]),e}(t,e)):(pu=r,r=s)):(pu=r,r=s),r===s&&(r=pu,(t=Ya())!==s&&((i=t).db=null,i.table=i.name,t=i),r=t),r}function bs(){var r,t;return r=pu,Ro()!==s&&Na()!==s&&(t=_s())!==s?(r=t):(pu=r,r=s),r}function vs(){var t,e;return t=pu,function(){var t,e,n,u;t=pu,"where"===r.substr(pu,5).toLowerCase()?(e=r.substr(pu,5),pu+=5):(e=s,0===Au&&Iu(Ce));e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?t=e=[e,n]:(pu=t,t=s)):(pu=t,t=s);return t}()!==s&&Na()!==s?((e=function(){var r,t,e,n,u,o,a,i;if(r=pu,(t=gs())!==s){for(e=[],n=pu,(u=Na())!==s?((o=Xo())===s&&(o=Wo()),o!==s&&(a=Na())!==s&&(i=gs())!==s?n=u=[u,o,a,i]:(pu=n,n=s)):(pu=n,n=s);n!==s;)e.push(n),n=pu,(u=Na())!==s?((o=Xo())===s&&(o=Wo()),o!==s&&(a=Na())!==s&&(i=gs())!==s?n=u=[u,o,a,i]:(pu=n,n=s)):(pu=n,n=s);e!==s?(t=Ja(t,e),r=t):(pu=r,r=s);}else pu=r,r=s;return r}())===s&&(e=_s()),e!==s?(t=e):(pu=t,t=s)):(pu=t,t=s),t}function ds(){var t,e;return t=pu,function(){var t,e,n,u;t=pu,"order"===r.substr(pu,5).toLowerCase()?(e=r.substr(pu,5),pu+=5):(e=s,0===Au&&Iu(Ee));e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?t=e=[e,n]:(pu=t,t=s)):(pu=t,t=s);return t}()!==s&&Na()!==s&&Do()!==s&&Na()!==s&&(e=function(){var r,t,e,n,u,o,a,i;if(r=pu,(t=Ls())!==s){for(e=[],n=pu,(u=Na())!==s&&(o=Aa())!==s&&(a=Na())!==s&&(i=Ls())!==s?n=u=[u,o,a,i]:(pu=n,n=s);n!==s;)e.push(n),n=pu,(u=Na())!==s&&(o=Aa())!==s&&(a=Na())!==s&&(i=Ls())!==s?n=u=[u,o,a,i]:(pu=n,n=s);e!==s?(t=c(t,e),r=t):(pu=r,r=s);}else pu=r,r=s;return r}())!==s?(t=e):(pu=t,t=s),t}function Ls(){var t,e,n;return t=pu,(e=_s())!==s&&Na()!==s?((n=function(){var t,e,n,u;t=pu,"desc"===r.substr(pu,4).toLowerCase()?(e=r.substr(pu,4),pu+=4):(e=s,0===Au&&Iu(me));e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?(t=e="DESC"):(pu=t,t=s)):(pu=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=pu,"asc"===r.substr(pu,3).toLowerCase()?(e=r.substr(pu,3),pu+=3):(e=s,0===Au&&Iu(Te));e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?(t=e="ASC"):(pu=t,t=s)):(pu=t,t=s);return t}()),n===s&&(n=null),n!==s?(t=e=function(r,t){const e={expr:r,type:"ASC"};return "DESC"===t&&(e.type="DESC"),e}(e,n)):(pu=t,t=s)):(pu=t,t=s),t}function Cs(){var r;return (r=so())===s&&(r=zs()),r}function ps(){var t,e,n,u,o,a,i,c;return t=pu,ko()!==s&&Na()!==s?("first"===r.substr(pu,5).toLowerCase()?(e=r.substr(pu,5),pu+=5):(e=s,0===Au&&Iu(Ar)),e!==s&&Na()!==s&&(n=Cs())!==s&&Na()!==s?("rows"===r.substr(pu,4).toLowerCase()?(u=r.substr(pu,4),pu+=4):(u=s,0===Au&&Iu(yr)),u!==s&&Na()!==s?("only"===r.substr(pu,4).toLowerCase()?(o=r.substr(pu,4),pu+=4):(o=s,0===Au&&Iu(Tr)),o!==s?(t={fetch:{prefix:"fetch first",value:n,suffix:"rows only"}}):(pu=t,t=s)):(pu=t,t=s)):(pu=t,t=s)):(pu=t,t=s),t===s&&(t=pu,function(){var t,e,n,u;t=pu,"offset"===r.substr(pu,6).toLowerCase()?(e=r.substr(pu,6),pu+=6):(e=s,0===Au&&Iu(ye));e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?(t=e="OFFSET"):(pu=t,t=s)):(pu=t,t=s);return t}()!==s&&Na()!==s&&(e=Cs())!==s&&Na()!==s?("rows"===r.substr(pu,4).toLowerCase()?(n=r.substr(pu,4),pu+=4):(n=s,0===Au&&Iu(yr)),n!==s&&Na()!==s&&(u=ko())!==s&&Na()!==s?("next"===r.substr(pu,4).toLowerCase()?(o=r.substr(pu,4),pu+=4):(o=s,0===Au&&Iu(mr)),o!==s&&Na()!==s&&(a=Cs())!==s&&Na()!==s?("rows"===r.substr(pu,4).toLowerCase()?(i=r.substr(pu,4),pu+=4):(i=s,0===Au&&Iu(yr)),i!==s&&Na()!==s?("only"===r.substr(pu,4).toLowerCase()?(c=r.substr(pu,4),pu+=4):(c=s,0===Au&&Iu(Tr)),c!==s?(t=function(r,t){return {offset:{prefix:"offset",value:r,suffix:"rows"},fetch:{prefix:"fetch next",value:t,suffix:"rows only"}}}(e,a)):(pu=t,t=s)):(pu=t,t=s)):(pu=t,t=s)):(pu=t,t=s)):(pu=t,t=s)),t}function ws(){var r,t,e,n,u,o,a,i;if(r=pu,(t=Es())!==s){for(e=[],n=pu,(u=Na())!==s&&(o=Aa())!==s&&(a=Na())!==s&&(i=Es())!==s?n=u=[u,o,a,i]:(pu=n,n=s);n!==s;)e.push(n),n=pu,(u=Na())!==s&&(o=Aa())!==s&&(a=Na())!==s&&(i=Es())!==s?n=u=[u,o,a,i]:(pu=n,n=s);e!==s?(r=t=c(t,e)):(pu=r,r=s);}else pu=r,r=s;return r}function Es(){var t,e,n,u,o,a,i,c,l;return t=pu,e=pu,(n=Ys())!==s&&(u=Na())!==s&&(o=ha())!==s?e=n=[n,u,o]:(pu=e,e=s),e===s&&(e=null),e!==s&&(n=Na())!==s&&(u=Xs())!==s&&(o=Na())!==s?(61===r.charCodeAt(pu)?(a="=",pu++):(a=s,0===Au&&Iu(Sr)),a!==s&&Na()!==s&&(i=$s())!==s?(t=e={column:u,value:i,table:(l=e)&&l[0]}):(pu=t,t=s)):(pu=t,t=s),t===s&&(t=pu,e=pu,(n=Ys())!==s&&(u=Na())!==s&&(o=ha())!==s?e=n=[n,u,o]:(pu=e,e=s),e===s&&(e=null),e!==s&&(n=Na())!==s&&(u=Xs())!==s&&(o=Na())!==s?(61===r.charCodeAt(pu)?(a="=",pu++):(a=s,0===Au&&Iu(Sr)),a!==s&&Na()!==s&&(i=xo())!==s&&Na()!==s&&Ta()!==s&&Na()!==s&&(c=js())!==s&&Na()!==s&&ma()!==s?(t=e=function(r,t,e){return {column:t,value:e,table:r&&r[0],keyword:"values"}}(e,u,c)):(pu=t,t=s)):(pu=t,t=s)),t}function hs(){var r;return (r=function(){var r,t;r=pu,xo()!==s&&Na()!==s&&(t=function(){var r,t,e,n,u,o,a,i;if(r=pu,(t=ms())!==s){for(e=[],n=pu,(u=Na())!==s&&(o=Aa())!==s&&(a=Na())!==s&&(i=ms())!==s?n=u=[u,o,a,i]:(pu=n,n=s);n!==s;)e.push(n),n=pu,(u=Na())!==s&&(o=Aa())!==s&&(a=Na())!==s&&(i=ms())!==s?n=u=[u,o,a,i]:(pu=n,n=s);e!==s?(t=c(t,e),r=t):(pu=r,r=s);}else pu=r,r=s;return r}())!==s?(r=t):(pu=r,r=s);return r}())===s&&(r=zu()),r}function As(){var r,t,e,n,u,o,a,i,c;if(r=pu,yo()!==s)if(Na()!==s)if((t=Ta())!==s)if(Na()!==s)if((e=Vs())!==s){for(n=[],u=pu,(o=Na())!==s&&(a=Aa())!==s&&(i=Na())!==s&&(c=Vs())!==s?u=o=[o,a,i,c]:(pu=u,u=s);u!==s;)n.push(u),u=pu,(o=Na())!==s&&(a=Aa())!==s&&(i=Na())!==s&&(c=Vs())!==s?u=o=[o,a,i,c]:(pu=u,u=s);n!==s&&(u=Na())!==s&&(o=ma())!==s?(r=za(e,n)):(pu=r,r=s);}else pu=r,r=s;else pu=r,r=s;else pu=r,r=s;else pu=r,r=s;else pu=r,r=s;return r===s&&(r=pu,yo()!==s&&Na()!==s&&(t=ms())!==s?(r=t):(pu=r,r=s)),r}function ys(){var t,e,n;return t=pu,Ro()!==s&&Na()!==s?("duplicate"===r.substr(pu,9).toLowerCase()?(e=r.substr(pu,9),pu+=9):(e=s,0===Au&&Iu(Ir)),e!==s&&Na()!==s&&pa()!==s&&Na()!==s&&Co()!==s&&Na()!==s&&(n=ws())!==s?(t={keyword:"on duplicate key update",set:n}):(pu=t,t=s)):(pu=t,t=s),t}function Ts(){var t,e;return t=pu,(e=function(){var t,e,n,u;t=pu,"insert"===r.substr(pu,6).toLowerCase()?(e=r.substr(pu,6),pu+=6):(e=s,0===Au&&Iu(Wt));e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?t=e=[e,n]:(pu=t,t=s)):(pu=t,t=s);return t}())!==s&&(e="insert"),(t=e)===s&&(t=pu,(e=ho())!==s&&(e="replace"),t=e),t}function ms(){var r,t;return r=pu,Ta()!==s&&Na()!==s&&(t=Ss())!==s&&Na()!==s&&ma()!==s?(r=t):(pu=r,r=s),r}function Ss(){var r,t,e,n,u,o,a,i;if(r=pu,(t=_s())!==s){for(e=[],n=pu,(u=Na())!==s&&(o=Aa())!==s&&(a=Na())!==s&&(i=_s())!==s?n=u=[u,o,a,i]:(pu=n,n=s);n!==s;)e.push(n),n=pu,(u=Na())!==s&&(o=Aa())!==s&&(a=Na())!==s&&(i=_s())!==s?n=u=[u,o,a,i]:(pu=n,n=s);e!==s?(r=t=function(r,t){const e={type:"expr_list"};return e.value=za(r,t),e}(t,e)):(pu=r,r=s);}else pu=r,r=s;return r}function Is(){var t,e,n;return t=pu,function(){var t,e,n,u;t=pu,"interval"===r.substr(pu,8).toLowerCase()?(e=r.substr(pu,8),pu+=8):(e=s,0===Au&&Iu(En));e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?(t=e="INTERVAL"):(pu=t,t=s)):(pu=t,t=s);return t}()!==s&&Na()!==s&&(e=_s())!==s&&Na()!==s&&(n=function(){var t;(t=function(){var t,e,n,u;t=pu,"year"===r.substr(pu,4).toLowerCase()?(e=r.substr(pu,4),pu+=4):(e=s,0===Au&&Iu(hn));e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?(t=e="YEAR"):(pu=t,t=s)):(pu=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=pu,"month"===r.substr(pu,5).toLowerCase()?(e=r.substr(pu,5),pu+=5):(e=s,0===Au&&Iu(An));e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?(t=e="MONTH"):(pu=t,t=s)):(pu=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=pu,"day"===r.substr(pu,3).toLowerCase()?(e=r.substr(pu,3),pu+=3):(e=s,0===Au&&Iu(yn));e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?(t=e="DAY"):(pu=t,t=s)):(pu=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=pu,"hour"===r.substr(pu,4).toLowerCase()?(e=r.substr(pu,4),pu+=4):(e=s,0===Au&&Iu(Tn));e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?(t=e="HOUR"):(pu=t,t=s)):(pu=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=pu,"minute"===r.substr(pu,6).toLowerCase()?(e=r.substr(pu,6),pu+=6):(e=s,0===Au&&Iu(mn));e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?(t=e="MINUTE"):(pu=t,t=s)):(pu=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=pu,"second"===r.substr(pu,6).toLowerCase()?(e=r.substr(pu,6),pu+=6):(e=s,0===Au&&Iu(Sn));e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?(t=e="SECOND"):(pu=t,t=s)):(pu=t,t=s);return t}());return t}())!==s?(t={type:"interval",expr:e,unit:n.toLowerCase()}):(pu=t,t=s),t}function Ns(){var t,e,n,u,o,a,i,c,l;if(t=pu,Vo()!==s)if(Na()!==s)if((e=_s())===s&&(e=null),e!==s)if(Na()!==s){if(n=[],(u=Rs())!==s)for(;u!==s;)n.push(u),u=Rs();else n=s;n!==s&&(u=Na())!==s?((o=function(){var t,e;t=pu,function(){var t,e,n,u;t=pu,"else"===r.substr(pu,4).toLowerCase()?(e=r.substr(pu,4),pu+=4):(e=s,0===Au&&Iu(Ye));e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?t=e=[e,n]:(pu=t,t=s)):(pu=t,t=s);return t}()!==s&&Na()!==s&&(e=_s())!==s?(t={type:"else",result:e}):(pu=t,t=s);return t}())===s&&(o=null),o!==s&&Na()!==s&&function(){var t,e,n,u;t=pu,"end"===r.substr(pu,3).toLowerCase()?(e=r.substr(pu,3),pu+=3):(e=s,0===Au&&Iu(Be));e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?t=e=[e,n]:(pu=t,t=s)):(pu=t,t=s);return t}()!==s&&Na()!==s?((a=Vo())===s&&(a=null),a!==s?(i=e,c=n,(l=o)&&c.push(l),t={type:"case",expr:i||null,args:c}):(pu=t,t=s)):(pu=t,t=s)):(pu=t,t=s);}else pu=t,t=s;else pu=t,t=s;else pu=t,t=s;else pu=t,t=s;return t}function Rs(){var t,e,n;return t=pu,function(){var t,e,n,u;t=pu,"when"===r.substr(pu,4).toLowerCase()?(e=r.substr(pu,4),pu+=4):(e=s,0===Au&&Iu(Ge));e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?t=e=[e,n]:(pu=t,t=s)):(pu=t,t=s);return t}()!==s&&Na()!==s&&(e=_s())!==s&&Na()!==s&&function(){var t,e,n,u;t=pu,"then"===r.substr(pu,4).toLowerCase()?(e=r.substr(pu,4),pu+=4):(e=s,0===Au&&Iu(je));e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?t=e=[e,n]:(pu=t,t=s)):(pu=t,t=s);return t}()!==s&&Na()!==s&&(n=_s())!==s?(t={type:"when",cond:e,result:n}):(pu=t,t=s),t}function _s(){var r;return (r=function(){var r,t,e,n,u,o,a,i;if(r=pu,(t=Gs())!==s){if(e=[],n=pu,(u=Na())!==s&&(o=Ia())!==s&&(a=Na())!==s&&(i=Gs())!==s?n=u=[u,o,a,i]:(pu=n,n=s),n!==s)for(;n!==s;)e.push(n),n=pu,(u=Na())!==s&&(o=Ia())!==s&&(a=Na())!==s&&(i=Gs())!==s?n=u=[u,o,a,i]:(pu=n,n=s);else e=s;e!==s?(t=Ja(t,e),r=t):(pu=r,r=s);}else pu=r,r=s;return r}())===s&&(r=function(){var r,t,e,n,u,o;if(r=pu,(t=Fs())!==s){if(e=[],n=pu,(u=Na())!==s&&(o=Gs())!==s?n=u=[u,o]:(pu=n,n=s),n!==s)for(;n!==s;)e.push(n),n=pu,(u=Na())!==s&&(o=Gs())!==s?n=u=[u,o]:(pu=n,n=s);else e=s;e!==s?(t=Ka(t,e[0][1]),r=t):(pu=r,r=s);}else pu=r,r=s;return r}())===s&&(r=Os())===s&&(r=Vu()),r}function gs(){var r,t,e,n,u,o;return r=pu,(t=Ta())===s&&(t=null),t!==s&&Na()!==s&&(e=Os())!==s&&Na()!==s?((n=ma())===s&&(n=null),n!==s?((function(r,t,e){if(r&&!e||!r&&e)return !0}(t,0,n)?s:void 0)!==s?(u=e,o=n,t&&o&&(u.parentheses=!0),r=t=u):(pu=r,r=s)):(pu=r,r=s)):(pu=r,r=s),r}function Os(){var r,t,e,n,u,o,a,i;if(r=pu,(t=xs())!==s){for(e=[],n=pu,(u=Ra())!==s&&(o=Wo())!==s&&(a=Na())!==s&&(i=xs())!==s?n=u=[u,o,a,i]:(pu=n,n=s);n!==s;)e.push(n),n=pu,(u=Ra())!==s&&(o=Wo())!==s&&(a=Na())!==s&&(i=xs())!==s?n=u=[u,o,a,i]:(pu=n,n=s);e!==s?(r=t=Nr(t,e)):(pu=r,r=s);}else pu=r,r=s;return r}function xs(){var r,t,e,n,u,o,a,i;if(r=pu,(t=Us())!==s){for(e=[],n=pu,(u=Ra())!==s&&(o=Xo())!==s&&(a=Na())!==s&&(i=Us())!==s?n=u=[u,o,a,i]:(pu=n,n=s);n!==s;)e.push(n),n=pu,(u=Ra())!==s&&(o=Xo())!==s&&(a=Na())!==s&&(i=Us())!==s?n=u=[u,o,a,i]:(pu=n,n=s);e!==s?(r=t=Nr(t,e)):(pu=r,r=s);}else pu=r,r=s;return r}function Us(){var t,e,n,u,o;return (t=Ms())===s&&(t=function(){var r,t,e;r=pu,(t=function(){var r,t,e,n,u;r=pu,t=pu,(e=Bo())!==s&&(n=Na())!==s&&(u=Yo())!==s?t=e=[e,n,u]:(pu=t,t=s);t!==s&&(t=_r(t));(r=t)===s&&(r=Yo());return r}())!==s&&Na()!==s&&Ta()!==s&&Na()!==s&&(e=Ou())!==s&&Na()!==s&&ma()!==s?(n=t,(u=e).parentheses=!0,t=Ka(n,u),r=t):(pu=r,r=s);var n,u;return r}())===s&&(t=pu,(e=Bo())===s&&(e=pu,33===r.charCodeAt(pu)?(n="!",pu++):(n=s,0===Au&&Iu(Rr)),n!==s?(u=pu,Au++,61===r.charCodeAt(pu)?(o="=",pu++):(o=s,0===Au&&Iu(Sr)),Au--,o===s?u=void 0:(pu=u,u=s),u!==s?e=n=[n,u]:(pu=e,e=s)):(pu=e,e=s)),e!==s&&(n=Na())!==s&&(u=Us())!==s?(t=e=Ka("NOT",u)):(pu=t,t=s)),t}function Ms(){var r,t,e,n,u;return r=pu,(t=$s())!==s&&Na()!==s?((e=function(){var r;(r=function(){var t,e,n,u,o,a;t=[],e=pu,(n=Na())!==s&&(u=Ds())!==s&&(o=Na())!==s&&(a=$s())!==s?e=n=[n,u,o,a]:(pu=e,e=s);if(e!==s)for(;e!==s;)t.push(e),e=pu,(n=Na())!==s&&(u=Ds())!==s&&(o=Na())!==s&&(a=$s())!==s?e=n=[n,u,o,a]:(pu=e,e=s);else t=s;t!==s&&(t={type:"arithmetic",tail:t});return t}())===s&&(r=function(){var r,t,e,n;r=pu,(t=ks())!==s&&Na()!==s&&(e=Ta())!==s&&Na()!==s&&(n=Ss())!==s&&Na()!==s&&ma()!==s?(r=t={op:t,right:n}):(pu=r,r=s);r===s&&(r=pu,(t=ks())!==s&&Na()!==s?((e=Ya())===s&&(e=to()),e!==s?(t=function(r,t){return {op:r,right:t}}(t,e),r=t):(pu=r,r=s)):(pu=r,r=s));return r}())===s&&(r=function(){var r,t,e,n;r=pu,(t=function(){var r,t,e,n,u;r=pu,t=pu,(e=Bo())!==s&&(n=Na())!==s&&(u=Po())!==s?t=e=[e,n,u]:(pu=t,t=s);t!==s&&(t=_r(t));(r=t)===s&&(r=Po());return r}())!==s&&Na()!==s&&(e=$s())!==s&&Na()!==s&&Xo()!==s&&Na()!==s&&(n=$s())!==s?(r=t={op:t,right:{type:"expr_list",value:[e,n]}}):(pu=r,r=s);return r}())===s&&(r=function(){var r,t,e,n,u;r=pu,(t=Go())!==s&&(e=Na())!==s&&(n=$s())!==s?(r=t={op:"IS",right:n}):(pu=r,r=s);r===s&&(r=pu,t=pu,(e=Go())!==s&&(n=Na())!==s&&(u=Bo())!==s?t=e=[e,n,u]:(pu=t,t=s),t!==s&&(e=Na())!==s&&(n=$s())!==s?(t=function(r){return {op:"IS NOT",right:r}}(n),r=t):(pu=r,r=s));return r}())===s&&(r=function(){var r,t,e;r=pu,(t=function(){var r,t,e,n,u;r=pu,t=pu,(e=Bo())!==s&&(n=Na())!==s&&(u=jo())!==s?t=e=[e,n,u]:(pu=t,t=s);t!==s&&(t=_r(t));(r=t)===s&&(r=jo());return r}())!==s&&Na()!==s?((e=Qs())===s&&(e=Ms()),e!==s?(r=t={op:t,right:e}):(pu=r,r=s)):(pu=r,r=s);return r}());return r}())===s&&(e=null),e!==s?(n=t,r=t=null===(u=e)?n:"arithmetic"===u.type?Ja(n,u.tail):qa(u.op,n,u.right)):(pu=r,r=s)):(pu=r,r=s),r===s&&(r=to())===s&&(r=js()),r}function Ds(){var t;return ">="===r.substr(pu,2)?(t=">=",pu+=2):(t=s,0===Au&&Iu(gr)),t===s&&(62===r.charCodeAt(pu)?(t=">",pu++):(t=s,0===Au&&Iu(Or)),t===s&&("<="===r.substr(pu,2)?(t="<=",pu+=2):(t=s,0===Au&&Iu(xr)),t===s&&("<>"===r.substr(pu,2)?(t="<>",pu+=2):(t=s,0===Au&&Iu(Ur)),t===s&&(60===r.charCodeAt(pu)?(t="<",pu++):(t=s,0===Au&&Iu(Mr)),t===s&&(61===r.charCodeAt(pu)?(t="=",pu++):(t=s,0===Au&&Iu(Sr)),t===s&&("!="===r.substr(pu,2)?(t="!=",pu+=2):(t=s,0===Au&&Iu(Dr)))))))),t}function ks(){var r,t,e,n,u;return r=pu,t=pu,(e=Bo())!==s&&(n=Na())!==s&&(u=Ho())!==s?t=e=[e,n,u]:(pu=t,t=s),t!==s&&(t=_r(t)),(r=t)===s&&(r=Ho()),r}function $s(){var r,t,e,n,u,o,a,i;if(r=pu,(t=Ps())!==s){for(e=[],n=pu,(u=Na())!==s&&(o=Fs())!==s&&(a=Na())!==s&&(i=Ps())!==s?n=u=[u,o,a,i]:(pu=n,n=s);n!==s;)e.push(n),n=pu,(u=Na())!==s&&(o=Fs())!==s&&(a=Na())!==s&&(i=Ps())!==s?n=u=[u,o,a,i]:(pu=n,n=s);e!==s?(r=t=Nr(t,e)):(pu=r,r=s);}else pu=r,r=s;return r}function Fs(){var t;return 43===r.charCodeAt(pu)?(t="+",pu++):(t=s,0===Au&&Iu(kr)),t===s&&(45===r.charCodeAt(pu)?(t="-",pu++):(t=s,0===Au&&Iu($r))),t}function Ps(){var r,t,e,n,u,o,a,i;if(r=pu,(t=Gs())!==s){for(e=[],n=pu,(u=Na())!==s&&(o=Hs())!==s&&(a=Na())!==s&&(i=Gs())!==s?n=u=[u,o,a,i]:(pu=n,n=s);n!==s;)e.push(n),n=pu,(u=Na())!==s&&(o=Hs())!==s&&(a=Na())!==s&&(i=Gs())!==s?n=u=[u,o,a,i]:(pu=n,n=s);e!==s?(r=t=Ja(t,e)):(pu=r,r=s);}else pu=r,r=s;return r}function Hs(){var t;return 42===r.charCodeAt(pu)?(t="*",pu++):(t=s,0===Au&&Iu(Fr)),t===s&&(47===r.charCodeAt(pu)?(t="/",pu++):(t=s,0===Au&&Iu(Pr)),t===s&&(37===r.charCodeAt(pu)?(t="%",pu++):(t=s,0===Au&&Iu(Hr)))),t}function Gs(){var t,e,n,u,o,a,i,c,l,f,b;if((t=function(){var t,e,n,u,o,a,i;t=pu,(e=Ko())!==s&&Na()!==s&&Ta()!==s&&Na()!==s&&(n=_s())!==s&&Na()!==s&&So()!==s&&Na()!==s&&(u=Xa())!==s&&Na()!==s&&(o=ma())!==s?(t=e={type:"cast",expr:n,symbol:"as",target:u}):(pu=t,t=s);t===s&&(t=pu,(e=Ko())!==s&&Na()!==s&&Ta()!==s&&Na()!==s&&(n=_s())!==s&&Na()!==s&&So()!==s&&Na()!==s&&(u=Jo())!==s&&Na()!==s&&(o=Ta())!==s&&Na()!==s&&(a=oo())!==s&&Na()!==s&&ma()!==s&&Na()!==s&&(i=ma())!==s?(e=function(r,t){return {type:"cast",expr:r,symbol:"as",target:{dataType:"DECIMAL("+t+")"}}}(n,a),t=e):(pu=t,t=s),t===s&&(t=pu,(e=Ko())!==s&&Na()!==s&&Ta()!==s&&Na()!==s&&(n=_s())!==s&&Na()!==s&&So()!==s&&Na()!==s&&(u=Jo())!==s&&Na()!==s&&(o=Ta())!==s&&Na()!==s&&(a=oo())!==s&&Na()!==s&&Aa()!==s&&Na()!==s&&(i=oo())!==s&&Na()!==s&&ma()!==s&&Na()!==s&&ma()!==s?(e=function(r,t,e){return {type:"cast",expr:r,symbol:"as",target:{dataType:"DECIMAL("+t+", "+e+")"}}}(n,a,i),t=e):(pu=t,t=s),t===s&&(t=pu,(e=Ko())!==s&&Na()!==s&&Ta()!==s&&Na()!==s&&(n=_s())!==s&&Na()!==s&&So()!==s&&Na()!==s&&(u=function(){var t;(t=function(){var t,e,n,u;t=pu,"signed"===r.substr(pu,6).toLowerCase()?(e=r.substr(pu,6),pu+=6):(e=s,0===Au&&Iu(Ze));e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?(t=e="SIGNED"):(pu=t,t=s)):(pu=t,t=s);return t}())===s&&(t=Qo());return t}())!==s&&Na()!==s?((o=ta())===s&&(o=null),o!==s&&Na()!==s&&(a=ma())!==s?(e=function(r,t,e){return {type:"cast",expr:r,symbol:"as",target:{dataType:t+(e?" "+e:"")}}}(n,u,o),t=e):(pu=t,t=s)):(pu=t,t=s))));return t}())===s&&(t=Qs())===s&&(t=function(){var t;(t=function(){var t,e,n,u;t=pu,(e=function(){var t,e,n,u;t=pu,"count"===r.substr(pu,5).toLowerCase()?(e=r.substr(pu,5),pu+=5):(e=s,0===Au&&Iu(Me));e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?(t=e="COUNT"):(pu=t,t=s)):(pu=t,t=s);return t}())!==s&&Na()!==s&&Ta()!==s&&Na()!==s&&(n=function(){var t,e,n;t=pu,(e=function(){var e;42===r.charCodeAt(pu)?(e="*",pu++):(e=s,0===Au&&Iu(Fr));e!==s&&(e={type:"star",value:"*"});return e}())!==s&&(e={expr:e});(t=e)===s&&(t=pu,(e=Fo())===s&&(e=null),e!==s&&Na()!==s&&(n=js())!==s?(t=e={distinct:e,expr:n}):(pu=t,t=s));return t}())!==s&&Na()!==s&&ma()!==s&&Na()!==s?((u=Js())===s&&(u=null),u!==s?(e=function(r,t,e){return {type:"aggr_func",name:r,args:t,over:e}}(e,n,u),t=e):(pu=t,t=s)):(pu=t,t=s);return t}())===s&&(t=function(){var t,e,n;t=pu,(e=function(){var t;(t=function(){var t,e,n,u;t=pu,"sum"===r.substr(pu,3).toLowerCase()?(e=r.substr(pu,3),pu+=3):(e=s,0===Au&&Iu($e));e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?(t=e="SUM"):(pu=t,t=s)):(pu=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=pu,"max"===r.substr(pu,3).toLowerCase()?(e=r.substr(pu,3),pu+=3):(e=s,0===Au&&Iu(De));e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?(t=e="MAX"):(pu=t,t=s)):(pu=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=pu,"min"===r.substr(pu,3).toLowerCase()?(e=r.substr(pu,3),pu+=3):(e=s,0===Au&&Iu(ke));e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?(t=e="MIN"):(pu=t,t=s)):(pu=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=pu,"avg"===r.substr(pu,3).toLowerCase()?(e=r.substr(pu,3),pu+=3):(e=s,0===Au&&Iu(Fe));e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?(t=e="AVG"):(pu=t,t=s)):(pu=t,t=s);return t}());return t}())!==s&&Na()!==s&&Ta()!==s&&Na()!==s&&(n=$s())!==s&&Na()!==s&&ma()!==s?(t=e={type:"aggr_func",name:e,args:{expr:n}}):(pu=t,t=s);return t}());return t}())===s&&(t=function(){var t,e,n,u;t=pu,(e=Ha())!==s&&Na()!==s&&Ta()!==s&&Na()!==s?((n=Ss())===s&&(n=null),n!==s&&Na()!==s&&ma()!==s&&Na()!==s?((u=Js())===s&&(u=null),u!==s?(e=function(r,t,e){return {type:"function",name:r,args:t||{type:"expr_list",value:[]},over:e}}(e,n,u),t=e):(pu=t,t=s)):(pu=t,t=s)):(pu=t,t=s);t===s&&(t=pu,(e=function(){var t;(t=function(){var t,e,n,u;t=pu,"current_date"===r.substr(pu,12).toLowerCase()?(e=r.substr(pu,12),pu+=12):(e=s,0===Au&&Iu(wn));e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?(t=e="CURRENT_DATE"):(pu=t,t=s)):(pu=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=pu,"current_time"===r.substr(pu,12).toLowerCase()?(e=r.substr(pu,12),pu+=12):(e=s,0===Au&&Iu(In));e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?(t=e="CURRENT_TIME"):(pu=t,t=s)):(pu=t,t=s);return t}())===s&&(t=fa())===s&&(t=function(){var t,e,n,u;t=pu,"current_user"===r.substr(pu,12).toLowerCase()?(e=r.substr(pu,12),pu+=12):(e=s,0===Au&&Iu(Rn));e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?(t=e="CURRENT_USER"):(pu=t,t=s)):(pu=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=pu,"user"===r.substr(pu,4).toLowerCase()?(e=r.substr(pu,4),pu+=4):(e=s,0===Au&&Iu(pn));e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?(t=e="USER"):(pu=t,t=s)):(pu=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=pu,"session_user"===r.substr(pu,12).toLowerCase()?(e=r.substr(pu,12),pu+=12):(e=s,0===Au&&Iu(_n));e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?(t=e="SESSION_USER"):(pu=t,t=s)):(pu=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=pu,"system_user"===r.substr(pu,11).toLowerCase()?(e=r.substr(pu,11),pu+=11):(e=s,0===Au&&Iu(gn));e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?(t=e="SYSTEM_USER"):(pu=t,t=s)):(pu=t,t=s);return t}());return t}())!==s&&Na()!==s&&Ta()!==s&&Na()!==s?((n=Ss())===s&&(n=null),n!==s&&Na()!==s&&ma()!==s&&Na()!==s?((u=Js())===s&&(u=null),u!==s?(e=function(r,t,e){return {type:"function",name:r,args:t||{type:"expr_list",value:[]},over:e}}(e,n,u),t=e):(pu=t,t=s)):(pu=t,t=s)):(pu=t,t=s));return t}())===s&&(t=Ns())===s&&(t=Is())===s&&(t=js())===s&&(t=zs())===s){if(t=pu,Ta()!==s)if(Na()!==s)if((e=_s())!==s)if(Na()!==s)if(ma()!==s){for(n=[],u=pu,(o=Ra())!==s?((a=Xo())===s&&(a=Wo()),a!==s&&(i=Na())!==s&&(c=Os())!==s?u=o=[o,a,i,c]:(pu=u,u=s)):(pu=u,u=s);u!==s;)n.push(u),u=pu,(o=Ra())!==s?((a=Xo())===s&&(a=Wo()),a!==s&&(i=Na())!==s&&(c=Os())!==s?u=o=[o,a,i,c]:(pu=u,u=s)):(pu=u,u=s);n!==s?(b=n,(f=e).parentheses=!0,t=b&&0!==b.length?Ja(f,b):f):(pu=t,t=s);}else pu=t,t=s;else pu=t,t=s;else pu=t,t=s;else pu=t,t=s;else pu=t,t=s;t===s&&(t=pu,Ta()!==s&&Na()!==s&&(e=Ss())!==s&&Na()!==s&&ma()!==s?((l=e).parentheses=!0,t=l):(pu=t,t=s),t===s&&(t=Ya()));}return t}function js(){var t,e,n,u,o,a,i,c,l,f;return t=pu,e=pu,(n=Ys())!==s&&(u=Na())!==s&&(o=ha())!==s&&(a=Na())!==s?e=n=[n,u,o,a]:(pu=e,e=s),e===s&&(e=null),e!==s&&(n=Xs())!==s&&(u=Na())!==s?((o=function(){var t;"->>"===r.substr(pu,3)?(t="->>",pu+=3):(t=s,0===Au&&Iu(ou));return t}())===s&&(o=function(){var t;"->"===r.substr(pu,2)?(t="->",pu+=2):(t=s,0===Au&&Iu(su));return t}()),o!==s&&(a=Na())!==s?((i=to())===s&&(i=so()),i!==s&&Na()!==s?((c=Mu())===s&&(c=null),c!==s?(t=e=function(r,t,e,n,u){const s=r&&r[0]||null;return ni.add(`select::${s}::${t}`),{type:"column_ref",table:s,column:t,collate:u,arrow:e,property:n}}(e,n,o,i,c)):(pu=t,t=s)):(pu=t,t=s)):(pu=t,t=s)):(pu=t,t=s),t===s&&(t=pu,(e=Ys())!==s&&(n=Na())!==s&&(u=ha())!==s&&(o=Na())!==s&&(a=function(){var r,t;r=pu,(t=Ws())!==s&&(t=t);(r=t)===s&&(r=Bs());return r}())!==s?(l=e,f=a,ni.add(`select::${l}::${f}`),t=e={type:"column_ref",table:l,column:f}):(pu=t,t=s),t===s&&(t=pu,(e=Xs())!==s&&(e=function(r){return ni.add("select::null::"+r),{type:"column_ref",table:null,column:r}}(e)),t=e)),t}function Ys(){var r,t;return r=pu,(t=Vs())!==s?((Gr(t)?s:void 0)!==s?(r=t=t):(pu=r,r=s)):(pu=r,r=s),r===s&&(r=pu,(t=Bs())!==s&&(t=t),r=t),r}function Bs(){var t;return (t=function(){var t,e,n,u;t=pu,34===r.charCodeAt(pu)?(e='"',pu++):(e=s,0===Au&&Iu(jr));if(e!==s){if(n=[],Yr.test(r.charAt(pu))?(u=r.charAt(pu),pu++):(u=s,0===Au&&Iu(Br)),u!==s)for(;u!==s;)n.push(u),Yr.test(r.charAt(pu))?(u=r.charAt(pu),pu++):(u=s,0===Au&&Iu(Br));else n=s;n!==s?(34===r.charCodeAt(pu)?(u='"',pu++):(u=s,0===Au&&Iu(jr)),u!==s?(e=Xr(n),t=e):(pu=t,t=s)):(pu=t,t=s);}else pu=t,t=s;return t}())===s&&(t=function(){var t,e,n,u;t=pu,39===r.charCodeAt(pu)?(e="'",pu++):(e=s,0===Au&&Iu(ur));if(e!==s){if(n=[],Wr.test(r.charAt(pu))?(u=r.charAt(pu),pu++):(u=s,0===Au&&Iu(Vr)),u!==s)for(;u!==s;)n.push(u),Wr.test(r.charAt(pu))?(u=r.charAt(pu),pu++):(u=s,0===Au&&Iu(Vr));else n=s;n!==s?(39===r.charCodeAt(pu)?(u="'",pu++):(u=s,0===Au&&Iu(ur)),u!==s?(e=Xr(n),t=e):(pu=t,t=s)):(pu=t,t=s);}else pu=t,t=s;return t}())===s&&(t=function(){var t,e,n,u;t=pu,96===r.charCodeAt(pu)?(e="`",pu++):(e=s,0===Au&&Iu(Kr));if(e!==s){if(n=[],qr.test(r.charAt(pu))?(u=r.charAt(pu),pu++):(u=s,0===Au&&Iu(Zr)),u!==s)for(;u!==s;)n.push(u),qr.test(r.charAt(pu))?(u=r.charAt(pu),pu++):(u=s,0===Au&&Iu(Zr));else n=s;n!==s?(96===r.charCodeAt(pu)?(u="`",pu++):(u=s,0===Au&&Iu(Kr)),u!==s?(e=Xr(n),t=e):(pu=t,t=s)):(pu=t,t=s);}else pu=t,t=s;return t}()),t}function Xs(){var r,t;return r=pu,(t=Ws())!==s?((Gr(t)?s:void 0)!==s?(r=t=t):(pu=r,r=s)):(pu=r,r=s),r===s&&(r=Bs()),r}function Ws(){var r,t,e,n;if(r=pu,(t=Ks())!==s){for(e=[],n=Zs();n!==s;)e.push(n),n=Zs();e!==s?(r=t=zr(t,e)):(pu=r,r=s);}else pu=r,r=s;return r}function Vs(){var r,t,e,n;if(r=pu,(t=Ks())!==s){for(e=[],n=qs();n!==s;)e.push(n),n=qs();e!==s?(r=t=zr(t,e)):(pu=r,r=s);}else pu=r,r=s;return r}function Ks(){var t;return Jr.test(r.charAt(pu))?(t=r.charAt(pu),pu++):(t=s,0===Au&&Iu(Qr)),t}function qs(){var t;return rt.test(r.charAt(pu))?(t=r.charAt(pu),pu++):(t=s,0===Au&&Iu(tt)),t}function Zs(){var t;return et.test(r.charAt(pu))?(t=r.charAt(pu),pu++):(t=s,0===Au&&Iu(nt)),t}function zs(){var e,n,u;return e=pu,58===r.charCodeAt(pu)?(n=":",pu++):(n=s,0===Au&&Iu(ut)),n!==s&&(u=Vs())!==s?e=n=[n,u]:(pu=e,e=s),e!==s&&(e={type:"param",value:e[1]}),e}function Js(){var t,e,n;return t=pu,function(){var t,e,n,u;t=pu,"over"===r.substr(pu,4).toLowerCase()?(e=r.substr(pu,4),pu+=4):(e=s,0===Au&&Iu(be));e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?t=e=[e,n]:(pu=t,t=s)):(pu=t,t=s);return t}()!==s&&Na()!==s&&Ta()!==s&&Na()!==s&&yo()!==s&&Na()!==s&&Do()!==s&&Na()!==s&&(e=Qu())!==s&&Na()!==s?((n=ds())===s&&(n=null),n!==s&&Na()!==s&&ma()!==s?(t=function(r,t){return {partitionby:r,orderby:t}}(e,n)):(pu=t,t=s)):(pu=t,t=s),t}function Qs(){var t;return (t=to())===s&&(t=so())===s&&(t=function(){var t,e;t=pu,(e=function(){var t,e,n,u;t=pu,"true"===r.substr(pu,4).toLowerCase()?(e=r.substr(pu,4),pu+=4):(e=s,0===Au&&Iu(kt));e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?t=e=[e,n]:(pu=t,t=s)):(pu=t,t=s);return t}())!==s&&(e={type:"bool",value:!0});(t=e)===s&&(t=pu,(e=function(){var t,e,n,u;t=pu,"false"===r.substr(pu,5).toLowerCase()?(e=r.substr(pu,5),pu+=5):(e=s,0===Au&&Iu(Ft));e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?t=e=[e,n]:(pu=t,t=s)):(pu=t,t=s);return t}())!==s&&(e={type:"bool",value:!1}),t=e);return t}())===s&&(t=ro())===s&&(t=function(){var t,e,n,u,o,a,i;t=pu,(e=ca())===s&&(e=aa())===s&&(e=la())===s&&(e=ia());if(e!==s)if(Na()!==s){if(n=pu,39===r.charCodeAt(pu)?(u="'",pu++):(u=s,0===Au&&Iu(ur)),u!==s){for(o=[],a=no();a!==s;)o.push(a),a=no();o!==s?(39===r.charCodeAt(pu)?(a="'",pu++):(a=s,0===Au&&Iu(ur)),a!==s?n=u=[u,o,a]:(pu=n,n=s)):(pu=n,n=s);}else pu=n,n=s;n!==s?(e=ot(e,n),t=e):(pu=t,t=s);}else pu=t,t=s;else pu=t,t=s;if(t===s){if(t=pu,(e=ca())===s&&(e=aa())===s&&(e=la())===s&&(e=ia()),e!==s)if(Na()!==s){if(n=pu,34===r.charCodeAt(pu)?(u='"',pu++):(u=s,0===Au&&Iu(jr)),u!==s){for(o=[],a=eo();a!==s;)o.push(a),a=eo();o!==s?(34===r.charCodeAt(pu)?(a='"',pu++):(a=s,0===Au&&Iu(jr)),a!==s?n=u=[u,o,a]:(pu=n,n=s)):(pu=n,n=s);}else pu=n,n=s;n!==s?(e=ot(e,n),t=e):(pu=t,t=s);}else pu=t,t=s;else pu=t,t=s;t===s&&(t=pu,(e=fa())!==s&&Na()!==s?((n=Ta())===s&&(n=null),n!==s&&(u=Na())!==s?((o=ma())===s&&(o=null),o!==s?((a=(a=function(r,t,e){if(t&&e)return !0}(0,n,o))?s:void 0)!==s&&Na()!==s?("on update current_timestamp"===r.substr(pu,27).toLowerCase()?(i=r.substr(pu,27),pu+=27):(i=s,0===Au&&Iu(at)),i===s&&(i=null),i!==s?(c=e,e={type:"origin",value:((l=i)?`${c} ${l}`:c).toLowerCase()},t=e):(pu=t,t=s)):(pu=t,t=s)):(pu=t,t=s)):(pu=t,t=s)):(pu=t,t=s));}var c,l;return t}()),t}function ro(){var e;return (e=function(){var t,e,n,u;t=pu,"null"===r.substr(pu,4).toLowerCase()?(e=r.substr(pu,4),pu+=4):(e=s,0===Au&&Iu(Mt));e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?t=e=[e,n]:(pu=t,t=s)):(pu=t,t=s);return t}())!==s&&(e={type:"null",value:null}),e}function to(){var t,e,n,u,o;if(t=pu,e=pu,39===r.charCodeAt(pu)?(n="'",pu++):(n=s,0===Au&&Iu(ur)),n!==s){for(u=[],o=no();o!==s;)u.push(o),o=no();u!==s?(39===r.charCodeAt(pu)?(o="'",pu++):(o=s,0===Au&&Iu(ur)),o!==s?e=n=[n,u,o]:(pu=e,e=s)):(pu=e,e=s);}else pu=e,e=s;if(e!==s&&(e=st(e)),(t=e)===s){if(t=pu,e=pu,34===r.charCodeAt(pu)?(n='"',pu++):(n=s,0===Au&&Iu(jr)),n!==s){for(u=[],o=eo();o!==s;)u.push(o),o=eo();u!==s?(34===r.charCodeAt(pu)?(o='"',pu++):(o=s,0===Au&&Iu(jr)),o!==s?e=n=[n,u,o]:(pu=e,e=s)):(pu=e,e=s);}else pu=e,e=s;e!==s&&(e=st(e)),t=e;}return t}function eo(){var t;return it.test(r.charAt(pu))?(t=r.charAt(pu),pu++):(t=s,0===Au&&Iu(ct)),t===s&&(t=uo()),t}function no(){var t;return lt.test(r.charAt(pu))?(t=r.charAt(pu),pu++):(t=s,0===Au&&Iu(ft)),t===s&&(t=uo()),t}function uo(){var t,e,n,u,o,a,i,c,l,f;return t=pu,"\\'"===r.substr(pu,2)?(e="\\'",pu+=2):(e=s,0===Au&&Iu(bt)),e!==s&&(e="'"),(t=e)===s&&(t=pu,'\\"'===r.substr(pu,2)?(e='\\"',pu+=2):(e=s,0===Au&&Iu(vt)),e!==s&&(e='"'),(t=e)===s&&(t=pu,"\\\\"===r.substr(pu,2)?(e="\\\\",pu+=2):(e=s,0===Au&&Iu(dt)),e!==s&&(e="\\"),(t=e)===s&&(t=pu,"\\/"===r.substr(pu,2)?(e="\\/",pu+=2):(e=s,0===Au&&Iu(Lt)),e!==s&&(e="/"),(t=e)===s&&(t=pu,"\\b"===r.substr(pu,2)?(e="\\b",pu+=2):(e=s,0===Au&&Iu(Ct)),e!==s&&(e="\b"),(t=e)===s&&(t=pu,"\\f"===r.substr(pu,2)?(e="\\f",pu+=2):(e=s,0===Au&&Iu(pt)),e!==s&&(e="\f"),(t=e)===s&&(t=pu,"\\n"===r.substr(pu,2)?(e="\\n",pu+=2):(e=s,0===Au&&Iu(wt)),e!==s&&(e="\n"),(t=e)===s&&(t=pu,"\\r"===r.substr(pu,2)?(e="\\r",pu+=2):(e=s,0===Au&&Iu(Et)),e!==s&&(e="\r"),(t=e)===s&&(t=pu,"\\t"===r.substr(pu,2)?(e="\\t",pu+=2):(e=s,0===Au&&Iu(ht)),e!==s&&(e="\t"),(t=e)===s&&(t=pu,"\\u"===r.substr(pu,2)?(e="\\u",pu+=2):(e=s,0===Au&&Iu(At)),e!==s&&(n=fo())!==s&&(u=fo())!==s&&(o=fo())!==s&&(a=fo())!==s?(i=n,c=u,l=o,f=a,t=e=String.fromCharCode(parseInt("0x"+i+c+l+f))):(pu=t,t=s),t===s&&(t=pu,92===r.charCodeAt(pu)?(e="\\",pu++):(e=s,0===Au&&Iu(yt)),e!==s&&(e="\\"),t=e)))))))))),t}function so(){var t,e;return (t=function(){var r,t,e,n;r=pu,(t=oo())!==s&&(e=ao())!==s&&(n=io())!==s?(r=t={type:"bigint",value:t+e+n}):(pu=r,r=s);r===s&&(r=pu,(t=oo())!==s&&(e=ao())!==s?(t=function(r,t){const e=r+t;return Za(r)?{type:"bigint",value:e}:parseFloat(e)}(t,e),r=t):(pu=r,r=s),r===s&&(r=pu,(t=oo())!==s&&(e=io())!==s?(t=function(r,t){return {type:"bigint",value:r+t}}(t,e),r=t):(pu=r,r=s),r===s&&(r=pu,(t=oo())!==s&&(t=function(r){return Za(r)?{type:"bigint",value:r}:parseFloat(r)}(t)),r=t)));return r}())!==s&&(t=(e=t)&&"bigint"===e.type?e:{type:"number",value:e}),t}function oo(){var t,e,n;return (t=co())===s&&(t=lo())===s&&(t=pu,45===r.charCodeAt(pu)?(e="-",pu++):(e=s,0===Au&&Iu($r)),e===s&&(43===r.charCodeAt(pu)?(e="+",pu++):(e=s,0===Au&&Iu(kr))),e!==s&&(n=co())!==s?(t=e="-"+n):(pu=t,t=s),t===s&&(t=pu,45===r.charCodeAt(pu)?(e="-",pu++):(e=s,0===Au&&Iu($r)),e===s&&(43===r.charCodeAt(pu)?(e="+",pu++):(e=s,0===Au&&Iu(kr))),e!==s&&(n=lo())!==s?(t=e="-"+n):(pu=t,t=s))),t}function ao(){var t,e,n;return t=pu,46===r.charCodeAt(pu)?(e=".",pu++):(e=s,0===Au&&Iu(St)),e!==s&&(n=co())!==s?(t=e="."+n):(pu=t,t=s),t}function io(){var t,e,n;return t=pu,(e=function(){var t,e,n;t=pu,gt.test(r.charAt(pu))?(e=r.charAt(pu),pu++):(e=s,0===Au&&Iu(Ot));e!==s?(xt.test(r.charAt(pu))?(n=r.charAt(pu),pu++):(n=s,0===Au&&Iu(Ut)),n===s&&(n=null),n!==s?(t=e=e+(null!==(u=n)?u:"")):(pu=t,t=s)):(pu=t,t=s);var u;return t}())!==s&&(n=co())!==s?(t=e=e+n):(pu=t,t=s),t}function co(){var t,e;if(t=[],(e=lo())!==s)for(;e!==s;)t.push(e),e=lo();else t=s;return t!==s&&(t=t.join("")),t}function lo(){var t;return It.test(r.charAt(pu))?(t=r.charAt(pu),pu++):(t=s,0===Au&&Iu(Nt)),t}function fo(){var t;return Rt.test(r.charAt(pu))?(t=r.charAt(pu),pu++):(t=s,0===Au&&Iu(_t)),t}function bo(){var t,e,n,u;return t=pu,"default"===r.substr(pu,7).toLowerCase()?(e=r.substr(pu,7),pu+=7):(e=s,0===Au&&Iu(p)),e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?t=e=[e,n]:(pu=t,t=s)):(pu=t,t=s),t}function vo(){var t,e,n,u;return t=pu,"to"===r.substr(pu,2).toLowerCase()?(e=r.substr(pu,2),pu+=2):(e=s,0===Au&&Iu($t)),e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?t=e=[e,n]:(pu=t,t=s)):(pu=t,t=s),t}function Lo(){var t,e,n,u;return t=pu,"drop"===r.substr(pu,4).toLowerCase()?(e=r.substr(pu,4),pu+=4):(e=s,0===Au&&Iu(Pt)),e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?(t=e="DROP"):(pu=t,t=s)):(pu=t,t=s),t}function Co(){var t,e,n,u;return t=pu,"update"===r.substr(pu,6).toLowerCase()?(e=r.substr(pu,6),pu+=6):(e=s,0===Au&&Iu(G)),e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?t=e=[e,n]:(pu=t,t=s)):(pu=t,t=s),t}function po(){var t,e,n,u;return t=pu,"create"===r.substr(pu,6).toLowerCase()?(e=r.substr(pu,6),pu+=6):(e=s,0===Au&&Iu(Yt)),e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?t=e=[e,n]:(pu=t,t=s)):(pu=t,t=s),t}function wo(){var t,e,n,u;return t=pu,"temporary"===r.substr(pu,9).toLowerCase()?(e=r.substr(pu,9),pu+=9):(e=s,0===Au&&Iu(Bt)),e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?t=e=[e,n]:(pu=t,t=s)):(pu=t,t=s),t}function Eo(){var t,e,n,u;return t=pu,"if not exists"===r.substr(pu,13).toLowerCase()?(e=r.substr(pu,13),pu+=13):(e=s,0===Au&&Iu(Xt)),e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?t=e=[e,n]:(pu=t,t=s)):(pu=t,t=s),t}function ho(){var t,e,n,u;return t=pu,"replace"===r.substr(pu,7).toLowerCase()?(e=r.substr(pu,7),pu+=7):(e=s,0===Au&&Iu(Kt)),e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?t=e=[e,n]:(pu=t,t=s)):(pu=t,t=s),t}function Ao(){var t,e,n,u;return t=pu,"rename"===r.substr(pu,6).toLowerCase()?(e=r.substr(pu,6),pu+=6):(e=s,0===Au&&Iu(qt)),e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?t=e=[e,n]:(pu=t,t=s)):(pu=t,t=s),t}function yo(){var t,e,n,u;return t=pu,"partition"===r.substr(pu,9).toLowerCase()?(e=r.substr(pu,9),pu+=9):(e=s,0===Au&&Iu(zt)),e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?(t=e="PARTITION"):(pu=t,t=s)):(pu=t,t=s),t}function To(){var t,e,n,u;return t=pu,"into"===r.substr(pu,4).toLowerCase()?(e=r.substr(pu,4),pu+=4):(e=s,0===Au&&Iu(Jt)),e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?t=e=[e,n]:(pu=t,t=s)):(pu=t,t=s),t}function mo(){var t,e,n,u;return t=pu,"set"===r.substr(pu,3).toLowerCase()?(e=r.substr(pu,3),pu+=3):(e=s,0===Au&&Iu(K)),e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?t=e=[e,n]:(pu=t,t=s)):(pu=t,t=s),t}function So(){var t,e,n,u;return t=pu,"as"===r.substr(pu,2).toLowerCase()?(e=r.substr(pu,2),pu+=2):(e=s,0===Au&&Iu(te)),e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?t=e=[e,n]:(pu=t,t=s)):(pu=t,t=s),t}function Io(){var t,e,n,u;return t=pu,"table"===r.substr(pu,5).toLowerCase()?(e=r.substr(pu,5),pu+=5):(e=s,0===Au&&Iu(ee)),e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?(t=e="TABLE"):(pu=t,t=s)):(pu=t,t=s),t}function No(){var t,e,n,u;return t=pu,"tables"===r.substr(pu,6).toLowerCase()?(e=r.substr(pu,6),pu+=6):(e=s,0===Au&&Iu(ne)),e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?(t=e="TABLES"):(pu=t,t=s)):(pu=t,t=s),t}function Ro(){var t,e,n,u;return t=pu,"on"===r.substr(pu,2).toLowerCase()?(e=r.substr(pu,2),pu+=2):(e=s,0===Au&&Iu(P)),e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?t=e=[e,n]:(pu=t,t=s)):(pu=t,t=s),t}function _o(){var t,e,n,u;return t=pu,"join"===r.substr(pu,4).toLowerCase()?(e=r.substr(pu,4),pu+=4):(e=s,0===Au&&Iu(le)),e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?t=e=[e,n]:(pu=t,t=s)):(pu=t,t=s),t}function go(){var t,e,n,u;return t=pu,"outer"===r.substr(pu,5).toLowerCase()?(e=r.substr(pu,5),pu+=5):(e=s,0===Au&&Iu(fe)),e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?t=e=[e,n]:(pu=t,t=s)):(pu=t,t=s),t}function Oo(){var t,e,n,u;return t=pu,"union"===r.substr(pu,5).toLowerCase()?(e=r.substr(pu,5),pu+=5):(e=s,0===Au&&Iu(ve)),e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?t=e=[e,n]:(pu=t,t=s)):(pu=t,t=s),t}function xo(){var t,e,n,u;return t=pu,"values"===r.substr(pu,6).toLowerCase()?(e=r.substr(pu,6),pu+=6):(e=s,0===Au&&Iu(de)),e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?t=e=[e,n]:(pu=t,t=s)):(pu=t,t=s),t}function Uo(){var t,e,n,u;return t=pu,"using"===r.substr(pu,5).toLowerCase()?(e=r.substr(pu,5),pu+=5):(e=s,0===Au&&Iu(Le)),e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?t=e=[e,n]:(pu=t,t=s)):(pu=t,t=s),t}function Mo(){var t,e,n,u;return t=pu,"with"===r.substr(pu,4).toLowerCase()?(e=r.substr(pu,4),pu+=4):(e=s,0===Au&&Iu(Cr)),e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?t=e=[e,n]:(pu=t,t=s)):(pu=t,t=s),t}function Do(){var t,e,n,u;return t=pu,"by"===r.substr(pu,2).toLowerCase()?(e=r.substr(pu,2),pu+=2):(e=s,0===Au&&Iu(we)),e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?t=e=[e,n]:(pu=t,t=s)):(pu=t,t=s),t}function ko(){var t,e,n,u;return t=pu,"fetch"===r.substr(pu,5).toLowerCase()?(e=r.substr(pu,5),pu+=5):(e=s,0===Au&&Iu(Ae)),e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?(t=e="FETCH"):(pu=t,t=s)):(pu=t,t=s),t}function $o(){var t,e,n,u;return t=pu,"all"===r.substr(pu,3).toLowerCase()?(e=r.substr(pu,3),pu+=3):(e=s,0===Au&&Iu(Se)),e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?(t=e="ALL"):(pu=t,t=s)):(pu=t,t=s),t}function Fo(){var t,e,n,u;return t=pu,"distinct"===r.substr(pu,8).toLowerCase()?(e=r.substr(pu,8),pu+=8):(e=s,0===Au&&Iu(Ie)),e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?(t=e="DISTINCT"):(pu=t,t=s)):(pu=t,t=s),t}function Po(){var t,e,n,u;return t=pu,"between"===r.substr(pu,7).toLowerCase()?(e=r.substr(pu,7),pu+=7):(e=s,0===Au&&Iu(Ne)),e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?(t=e="BETWEEN"):(pu=t,t=s)):(pu=t,t=s),t}function Ho(){var t,e,n,u;return t=pu,"in"===r.substr(pu,2).toLowerCase()?(e=r.substr(pu,2),pu+=2):(e=s,0===Au&&Iu(Re)),e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?(t=e="IN"):(pu=t,t=s)):(pu=t,t=s),t}function Go(){var t,e,n,u;return t=pu,"is"===r.substr(pu,2).toLowerCase()?(e=r.substr(pu,2),pu+=2):(e=s,0===Au&&Iu(_e)),e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?(t=e="IS"):(pu=t,t=s)):(pu=t,t=s),t}function jo(){var t,e,n,u;return t=pu,"like"===r.substr(pu,4).toLowerCase()?(e=r.substr(pu,4),pu+=4):(e=s,0===Au&&Iu(ge)),e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?(t=e="LIKE"):(pu=t,t=s)):(pu=t,t=s),t}function Yo(){var t,e,n,u;return t=pu,"exists"===r.substr(pu,6).toLowerCase()?(e=r.substr(pu,6),pu+=6):(e=s,0===Au&&Iu(Oe)),e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?(t=e="EXISTS"):(pu=t,t=s)):(pu=t,t=s),t}function Bo(){var t,e,n,u;return t=pu,"not"===r.substr(pu,3).toLowerCase()?(e=r.substr(pu,3),pu+=3):(e=s,0===Au&&Iu(x)),e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?(t=e="NOT"):(pu=t,t=s)):(pu=t,t=s),t}function Xo(){var t,e,n,u;return t=pu,"and"===r.substr(pu,3).toLowerCase()?(e=r.substr(pu,3),pu+=3):(e=s,0===Au&&Iu(xe)),e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?(t=e="AND"):(pu=t,t=s)):(pu=t,t=s),t}function Wo(){var t,e,n,u;return t=pu,"or"===r.substr(pu,2).toLowerCase()?(e=r.substr(pu,2),pu+=2):(e=s,0===Au&&Iu(Ue)),e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?(t=e="OR"):(pu=t,t=s)):(pu=t,t=s),t}function Vo(){var t,e,n,u;return t=pu,"case"===r.substr(pu,4).toLowerCase()?(e=r.substr(pu,4),pu+=4):(e=s,0===Au&&Iu(He)),e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?t=e=[e,n]:(pu=t,t=s)):(pu=t,t=s),t}function Ko(){var t,e,n,u;return t=pu,"cast"===r.substr(pu,4).toLowerCase()?(e=r.substr(pu,4),pu+=4):(e=s,0===Au&&Iu(Xe)),e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?t=e=[e,n]:(pu=t,t=s)):(pu=t,t=s),t}function qo(){var t,e,n,u;return t=pu,"char"===r.substr(pu,4).toLowerCase()?(e=r.substr(pu,4),pu+=4):(e=s,0===Au&&Iu(We)),e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?(t=e="CHAR"):(pu=t,t=s)):(pu=t,t=s),t}function Zo(){var t,e,n,u;return t=pu,"varchar"===r.substr(pu,7).toLowerCase()?(e=r.substr(pu,7),pu+=7):(e=s,0===Au&&Iu(Ve)),e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?(t=e="VARCHAR"):(pu=t,t=s)):(pu=t,t=s),t}function zo(){var t,e,n,u;return t=pu,"numeric"===r.substr(pu,7).toLowerCase()?(e=r.substr(pu,7),pu+=7):(e=s,0===Au&&Iu(Ke)),e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?(t=e="NUMERIC"):(pu=t,t=s)):(pu=t,t=s),t}function Jo(){var t,e,n,u;return t=pu,"decimal"===r.substr(pu,7).toLowerCase()?(e=r.substr(pu,7),pu+=7):(e=s,0===Au&&Iu(qe)),e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?(t=e="DECIMAL"):(pu=t,t=s)):(pu=t,t=s),t}function Qo(){var t,e,n,u;return t=pu,"unsigned"===r.substr(pu,8).toLowerCase()?(e=r.substr(pu,8),pu+=8):(e=s,0===Au&&Iu(ze)),e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?(t=e="UNSIGNED"):(pu=t,t=s)):(pu=t,t=s),t}function ra(){var t,e,n,u;return t=pu,"int"===r.substr(pu,3).toLowerCase()?(e=r.substr(pu,3),pu+=3):(e=s,0===Au&&Iu(Je)),e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?(t=e="INT"):(pu=t,t=s)):(pu=t,t=s),t}function ta(){var t,e,n,u;return t=pu,"integer"===r.substr(pu,7).toLowerCase()?(e=r.substr(pu,7),pu+=7):(e=s,0===Au&&Iu(rn)),e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?(t=e="INTEGER"):(pu=t,t=s)):(pu=t,t=s),t}function ea(){var t,e,n,u;return t=pu,"smallint"===r.substr(pu,8).toLowerCase()?(e=r.substr(pu,8),pu+=8):(e=s,0===Au&&Iu(en)),e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?(t=e="SMALLINT"):(pu=t,t=s)):(pu=t,t=s),t}function na(){var t,e,n,u;return t=pu,"tinyint"===r.substr(pu,7).toLowerCase()?(e=r.substr(pu,7),pu+=7):(e=s,0===Au&&Iu(nn)),e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?(t=e="TINYINT"):(pu=t,t=s)):(pu=t,t=s),t}function ua(){var t,e,n,u;return t=pu,"bigint"===r.substr(pu,6).toLowerCase()?(e=r.substr(pu,6),pu+=6):(e=s,0===Au&&Iu(cn)),e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?(t=e="BIGINT"):(pu=t,t=s)):(pu=t,t=s),t}function sa(){var t,e,n,u;return t=pu,"float"===r.substr(pu,5).toLowerCase()?(e=r.substr(pu,5),pu+=5):(e=s,0===Au&&Iu(ln)),e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?(t=e="FLOAT"):(pu=t,t=s)):(pu=t,t=s),t}function oa(){var t,e,n,u;return t=pu,"double"===r.substr(pu,6).toLowerCase()?(e=r.substr(pu,6),pu+=6):(e=s,0===Au&&Iu(fn)),e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?(t=e="DOUBLE"):(pu=t,t=s)):(pu=t,t=s),t}function aa(){var t,e,n,u;return t=pu,"date"===r.substr(pu,4).toLowerCase()?(e=r.substr(pu,4),pu+=4):(e=s,0===Au&&Iu(bn)),e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?(t=e="DATE"):(pu=t,t=s)):(pu=t,t=s),t}function ia(){var t,e,n,u;return t=pu,"datetime"===r.substr(pu,8).toLowerCase()?(e=r.substr(pu,8),pu+=8):(e=s,0===Au&&Iu(vn)),e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?(t=e="DATETIME"):(pu=t,t=s)):(pu=t,t=s),t}function ca(){var t,e,n,u;return t=pu,"time"===r.substr(pu,4).toLowerCase()?(e=r.substr(pu,4),pu+=4):(e=s,0===Au&&Iu(dn)),e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?(t=e="TIME"):(pu=t,t=s)):(pu=t,t=s),t}function la(){var t,e,n,u;return t=pu,"timestamp"===r.substr(pu,9).toLowerCase()?(e=r.substr(pu,9),pu+=9):(e=s,0===Au&&Iu(Ln)),e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?(t=e="TIMESTAMP"):(pu=t,t=s)):(pu=t,t=s),t}function fa(){var t,e,n,u;return t=pu,"current_timestamp"===r.substr(pu,17).toLowerCase()?(e=r.substr(pu,17),pu+=17):(e=s,0===Au&&Iu(Nn)),e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?(t=e="CURRENT_TIMESTAMP"):(pu=t,t=s)):(pu=t,t=s),t}function ba(){var t;return (t=function(){var t;return "@@"===r.substr(pu,2)?(t="@@",pu+=2):(t=s,0===Au&&Iu(kn)),t}())===s&&(t=function(){var t;return 64===r.charCodeAt(pu)?(t="@",pu++):(t=s,0===Au&&Iu(Dn)),t}())===s&&(t=function(){var t;return 36===r.charCodeAt(pu)?(t="$",pu++):(t=s,0===Au&&Iu($n)),t}()),t}function va(){var t;return 61===r.charCodeAt(pu)?(t="=",pu++):(t=s,0===Au&&Iu(Sr)),t}function da(){var t,e,n,u;return t=pu,"add"===r.substr(pu,3).toLowerCase()?(e=r.substr(pu,3),pu+=3):(e=s,0===Au&&Iu(Gn)),e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?(t=e="ADD"):(pu=t,t=s)):(pu=t,t=s),t}function La(){var t,e,n,u;return t=pu,"column"===r.substr(pu,6).toLowerCase()?(e=r.substr(pu,6),pu+=6):(e=s,0===Au&&Iu(jn)),e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?(t=e="COLUMN"):(pu=t,t=s)):(pu=t,t=s),t}function Ca(){var t,e,n,u;return t=pu,"index"===r.substr(pu,5).toLowerCase()?(e=r.substr(pu,5),pu+=5):(e=s,0===Au&&Iu(Yn)),e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?(t=e="INDEX"):(pu=t,t=s)):(pu=t,t=s),t}function pa(){var t,e,n,u;return t=pu,"key"===r.substr(pu,3).toLowerCase()?(e=r.substr(pu,3),pu+=3):(e=s,0===Au&&Iu(v)),e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?(t=e="KEY"):(pu=t,t=s)):(pu=t,t=s),t}function wa(){var t,e,n,u;return t=pu,"comment"===r.substr(pu,7).toLowerCase()?(e=r.substr(pu,7),pu+=7):(e=s,0===Au&&Iu(Wn)),e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?(t=e="COMMENT"):(pu=t,t=s)):(pu=t,t=s),t}function Ea(){var t,e,n,u;return t=pu,"constraint"===r.substr(pu,10).toLowerCase()?(e=r.substr(pu,10),pu+=10):(e=s,0===Au&&Iu(Vn)),e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?(t=e="CONSTRAINT"):(pu=t,t=s)):(pu=t,t=s),t}function ha(){var t;return 46===r.charCodeAt(pu)?(t=".",pu++):(t=s,0===Au&&Iu(St)),t}function Aa(){var t;return 44===r.charCodeAt(pu)?(t=",",pu++):(t=s,0===Au&&Iu(tu)),t}function ya(){var t;return 42===r.charCodeAt(pu)?(t="*",pu++):(t=s,0===Au&&Iu(Fr)),t}function Ta(){var t;return 40===r.charCodeAt(pu)?(t="(",pu++):(t=s,0===Au&&Iu(br)),t}function ma(){var t;return 41===r.charCodeAt(pu)?(t=")",pu++):(t=s,0===Au&&Iu(vr)),t}function Sa(){var t;return 59===r.charCodeAt(pu)?(t=";",pu++):(t=s,0===Au&&Iu(uu)),t}function Ia(){var t;return (t=function(){var t;return "||"===r.substr(pu,2)?(t="||",pu+=2):(t=s,0===Au&&Iu(au)),t}())===s&&(t=function(){var t;return "&&"===r.substr(pu,2)?(t="&&",pu+=2):(t=s,0===Au&&Iu(iu)),t}()),t}function Na(){var r,t;for(r=[],(t=xa())===s&&(t=_a());t!==s;)r.push(t),(t=xa())===s&&(t=_a());return r}function Ra(){var r,t;if(r=[],(t=xa())===s&&(t=_a()),t!==s)for(;t!==s;)r.push(t),(t=xa())===s&&(t=_a());else r=s;return r}function _a(){var t;return (t=function(){var t,e,n,u,o,a;t=pu,"/*"===r.substr(pu,2)?(e="/*",pu+=2):(e=s,0===Au&&Iu(cu));if(e!==s){for(n=[],u=pu,o=pu,Au++,"*/"===r.substr(pu,2)?(a="*/",pu+=2):(a=s,0===Au&&Iu(lu)),Au--,a===s?o=void 0:(pu=o,o=s),o!==s&&(a=Oa())!==s?u=o=[o,a]:(pu=u,u=s);u!==s;)n.push(u),u=pu,o=pu,Au++,"*/"===r.substr(pu,2)?(a="*/",pu+=2):(a=s,0===Au&&Iu(lu)),Au--,a===s?o=void 0:(pu=o,o=s),o!==s&&(a=Oa())!==s?u=o=[o,a]:(pu=u,u=s);n!==s?("*/"===r.substr(pu,2)?(u="*/",pu+=2):(u=s,0===Au&&Iu(lu)),u!==s?t=e=[e,n,u]:(pu=t,t=s)):(pu=t,t=s);}else pu=t,t=s;return t}())===s&&(t=function(){var t,e,n,u,o,a;t=pu,"--"===r.substr(pu,2)?(e="--",pu+=2):(e=s,0===Au&&Iu(fu));if(e!==s){for(n=[],u=pu,o=pu,Au++,a=Ua(),Au--,a===s?o=void 0:(pu=o,o=s),o!==s&&(a=Oa())!==s?u=o=[o,a]:(pu=u,u=s);u!==s;)n.push(u),u=pu,o=pu,Au++,a=Ua(),Au--,a===s?o=void 0:(pu=o,o=s),o!==s&&(a=Oa())!==s?u=o=[o,a]:(pu=u,u=s);n!==s?t=e=[e,n]:(pu=t,t=s);}else pu=t,t=s;return t}())===s&&(t=function(){var t,e,n,u,o,a;t=pu,35===r.charCodeAt(pu)?(e="#",pu++):(e=s,0===Au&&Iu(bu));if(e!==s){for(n=[],u=pu,o=pu,Au++,a=Ua(),Au--,a===s?o=void 0:(pu=o,o=s),o!==s&&(a=Oa())!==s?u=o=[o,a]:(pu=u,u=s);u!==s;)n.push(u),u=pu,o=pu,Au++,a=Ua(),Au--,a===s?o=void 0:(pu=o,o=s),o!==s&&(a=Oa())!==s?u=o=[o,a]:(pu=u,u=s);n!==s?t=e=[e,n]:(pu=t,t=s);}else pu=t,t=s;return t}()),t}function ga(){var r,t,e,n,u,o,a;return r=pu,(t=wa())!==s&&Na()!==s?((e=va())===s&&(e=null),e!==s&&Na()!==s&&(n=to())!==s?(o=e,a=n,r=t={type:(u=t).toLowerCase(),keyword:u.toLowerCase(),symbol:o,value:a}):(pu=r,r=s)):(pu=r,r=s),r}function Oa(){var t;return r.length>pu?(t=r.charAt(pu),pu++):(t=s,0===Au&&Iu(vu)),t}function xa(){var t;return du.test(r.charAt(pu))?(t=r.charAt(pu),pu++):(t=s,0===Au&&Iu(Lu)),t}function Ua(){var t,e;if((t=function(){var t,e;t=pu,Au++,r.length>pu?(e=r.charAt(pu),pu++):(e=s,0===Au&&Iu(vu));Au--,e===s?t=void 0:(pu=t,t=s);return t}())===s)if(t=[],Tt.test(r.charAt(pu))?(e=r.charAt(pu),pu++):(e=s,0===Au&&Iu(mt)),e!==s)for(;e!==s;)t.push(e),Tt.test(r.charAt(pu))?(e=r.charAt(pu),pu++):(e=s,0===Au&&Iu(mt));else t=s;return t}function Ma(){var t,e;return t=pu,ti=[],(void 0)!==s&&Na()!==s?((e=Da())===s&&(e=function(){var t,e;t=pu,function(){var t;return "return"===r.substr(pu,6).toLowerCase()?(t=r.substr(pu,6),pu+=6):(t=s,0===Au&&Iu(Fn)),t}()!==s&&Na()!==s&&(e=ka())!==s?(t={type:"return",expr:e}):(pu=t,t=s);return t}()),e!==s?(t={stmt:e,vars:ti}):(pu=t,t=s)):(pu=t,t=s),t}function Da(){var t,e,n,u;return t=pu,(e=Ya())===s&&(e=Ba()),e!==s&&Na()!==s?((n=function(){var t;return ":="===r.substr(pu,2)?(t=":=",pu+=2):(t=s,0===Au&&Iu(Pn)),t}())===s&&(n=va()),n!==s&&Na()!==s&&(u=ka())!==s?(t=e={type:"assign",left:e,symbol:n,right:u}):(pu=t,t=s)):(pu=t,t=s),t}function ka(){var t;return (t=Vu())===s&&(t=function(){var r,t,e,n,u;r=pu,(t=Ya())!==s&&Na()!==s&&(e=ls())!==s&&Na()!==s&&(n=Ya())!==s&&Na()!==s&&(u=bs())!==s?(r=t={type:"join",ltable:t,rtable:n,op:e,on:u}):(pu=r,r=s);return r}())===s&&(t=$a())===s&&(t=function(){var t,e;t=pu,function(){var t;return 91===r.charCodeAt(pu)?(t="[",pu++):(t=s,0===Au&&Iu(eu)),t}()!==s&&Na()!==s&&(e=ja())!==s&&Na()!==s&&function(){var t;return 93===r.charCodeAt(pu)?(t="]",pu++):(t=s,0===Au&&Iu(nu)),t}()!==s?(t={type:"array",value:e}):(pu=t,t=s);return t}()),t}function $a(){var r,t,e,n,u,o,a,i;if(r=pu,(t=Fa())!==s){for(e=[],n=pu,(u=Na())!==s&&(o=Fs())!==s&&(a=Na())!==s&&(i=Fa())!==s?n=u=[u,o,a,i]:(pu=n,n=s);n!==s;)e.push(n),n=pu,(u=Na())!==s&&(o=Fs())!==s&&(a=Na())!==s&&(i=Fa())!==s?n=u=[u,o,a,i]:(pu=n,n=s);e!==s?(r=t=Nr(t,e)):(pu=r,r=s);}else pu=r,r=s;return r}function Fa(){var r,t,e,n,u,o,a,i;if(r=pu,(t=Pa())!==s){for(e=[],n=pu,(u=Na())!==s&&(o=Hs())!==s&&(a=Na())!==s&&(i=Pa())!==s?n=u=[u,o,a,i]:(pu=n,n=s);n!==s;)e.push(n),n=pu,(u=Na())!==s&&(o=Hs())!==s&&(a=Na())!==s&&(i=Pa())!==s?n=u=[u,o,a,i]:(pu=n,n=s);e!==s?(r=t=Nr(t,e)):(pu=r,r=s);}else pu=r,r=s;return r}function Pa(){var r,t,e;return (r=Qs())===s&&(r=Ya())===s&&(r=Ga())===s&&(r=zs())===s&&(r=pu,Ta()!==s&&Na()!==s&&(t=$a())!==s&&Na()!==s&&ma()!==s?((e=t).parentheses=!0,r=e):(pu=r,r=s)),r}function Ha(){var r,t,e,n,u,o,a;return r=pu,(t=Ys())!==s?(e=pu,(n=Na())!==s&&(u=ha())!==s&&(o=Na())!==s&&(a=Ys())!==s?e=n=[n,u,o,a]:(pu=e,e=s),e===s&&(e=null),e!==s?(r=t=function(r,t){let e=r;return null!==t&&(e=`${r}.${t[3]}`),e}(t,e)):(pu=r,r=s)):(pu=r,r=s),r}function Ga(){var r,t,e;return r=pu,(t=Ha())!==s&&Na()!==s&&Ta()!==s&&Na()!==s?((e=ja())===s&&(e=null),e!==s&&Na()!==s&&ma()!==s?(r=t={type:"function",name:t,args:{type:"expr_list",value:e}}):(pu=r,r=s)):(pu=r,r=s),r===s&&(r=pu,(t=Ha())!==s&&(t=function(r){return {type:"function",name:r,args:null}}(t)),r=t),r}function ja(){var r,t,e,n,u,o,a,i;if(r=pu,(t=Pa())!==s){for(e=[],n=pu,(u=Na())!==s&&(o=Aa())!==s&&(a=Na())!==s&&(i=Pa())!==s?n=u=[u,o,a,i]:(pu=n,n=s);n!==s;)e.push(n),n=pu,(u=Na())!==s&&(o=Aa())!==s&&(a=Na())!==s&&(i=Pa())!==s?n=u=[u,o,a,i]:(pu=n,n=s);e!==s?(r=t=c(t,e)):(pu=r,r=s);}else pu=r,r=s;return r}function Ya(){var r,t,e,n,u;return r=pu,(t=ba())!==s&&(e=Ba())!==s?(n=t,u=e,r=t={type:"var",...u,prefix:n}):(pu=r,r=s),r}function Ba(){var t,e,n,u,o;return t=pu,(e=Vs())!==s&&(n=function(){var e,n,u,o;e=[],n=pu,46===r.charCodeAt(pu)?(u=".",pu++):(u=s,0===Au&&Iu(St));u!==s&&(o=Vs())!==s?n=u=[u,o]:(pu=n,n=s);for(;n!==s;)e.push(n),n=pu,46===r.charCodeAt(pu)?(u=".",pu++):(u=s,0===Au&&Iu(St)),u!==s&&(o=Vs())!==s?n=u=[u,o]:(pu=n,n=s);e!==s&&(e=function(r){const t=[];for(let e=0;e<r.length;e++)t.push(r[e][1]);return t}(e));return e}())!==s?(u=e,o=n,ti.push(u),t=e={type:"var",name:u,members:o,prefix:null}):(pu=t,t=s),t}function Xa(){var t;return (t=function(){var t,e,n,u;t=pu,(e=qo())===s&&(e=Zo());if(e!==s)if(Na()!==s)if(Ta()!==s)if(Na()!==s){if(n=[],It.test(r.charAt(pu))?(u=r.charAt(pu),pu++):(u=s,0===Au&&Iu(Nt)),u!==s)for(;u!==s;)n.push(u),It.test(r.charAt(pu))?(u=r.charAt(pu),pu++):(u=s,0===Au&&Iu(Nt));else n=s;n!==s&&(u=Na())!==s&&ma()!==s?(e={dataType:e,length:parseInt(n.join(""),10)},t=e):(pu=t,t=s);}else pu=t,t=s;else pu=t,t=s;else pu=t,t=s;else pu=t,t=s;t===s&&(t=pu,(e=qo())!==s&&(e=Cu(e)),(t=e)===s&&(t=pu,(e=Zo())!==s&&(e=Cu(e)),t=e));return t}())===s&&(t=function(){var t,e,n,u,o,a,i,c,l,f,b,v;t=pu,(e=zo())===s&&(e=Jo())===s&&(e=ra())===s&&(e=ta())===s&&(e=ea())===s&&(e=na())===s&&(e=ua())===s&&(e=sa())===s&&(e=oa());if(e!==s)if((n=Na())!==s)if((u=Ta())!==s)if((o=Na())!==s){if(a=[],It.test(r.charAt(pu))?(i=r.charAt(pu),pu++):(i=s,0===Au&&Iu(Nt)),i!==s)for(;i!==s;)a.push(i),It.test(r.charAt(pu))?(i=r.charAt(pu),pu++):(i=s,0===Au&&Iu(Nt));else a=s;if(a!==s)if((i=Na())!==s){if(c=pu,(l=Aa())!==s)if((f=Na())!==s){if(b=[],It.test(r.charAt(pu))?(v=r.charAt(pu),pu++):(v=s,0===Au&&Iu(Nt)),v!==s)for(;v!==s;)b.push(v),It.test(r.charAt(pu))?(v=r.charAt(pu),pu++):(v=s,0===Au&&Iu(Nt));else b=s;b!==s?c=l=[l,f,b]:(pu=c,c=s);}else pu=c,c=s;else pu=c,c=s;c===s&&(c=null),c!==s&&(l=Na())!==s&&(f=ma())!==s&&(b=Na())!==s?((v=Wa())===s&&(v=null),v!==s?(d=c,L=v,e={dataType:e,length:parseInt(a.join(""),10),scale:d&&parseInt(d[2].join(""),10),parentheses:!0,suffix:L},t=e):(pu=t,t=s)):(pu=t,t=s);}else pu=t,t=s;else pu=t,t=s;}else pu=t,t=s;else pu=t,t=s;else pu=t,t=s;else pu=t,t=s;var d,L;if(t===s){if(t=pu,(e=zo())===s&&(e=Jo())===s&&(e=ra())===s&&(e=ta())===s&&(e=ea())===s&&(e=na())===s&&(e=ua())===s&&(e=sa())===s&&(e=oa()),e!==s){if(n=[],It.test(r.charAt(pu))?(u=r.charAt(pu),pu++):(u=s,0===Au&&Iu(Nt)),u!==s)for(;u!==s;)n.push(u),It.test(r.charAt(pu))?(u=r.charAt(pu),pu++):(u=s,0===Au&&Iu(Nt));else n=s;n!==s&&(u=Na())!==s?((o=Wa())===s&&(o=null),o!==s?(e=function(r,t,e){return {dataType:r,length:parseInt(t.join(""),10),suffix:e}}(e,n,o),t=e):(pu=t,t=s)):(pu=t,t=s);}else pu=t,t=s;t===s&&(t=pu,(e=zo())===s&&(e=Jo())===s&&(e=ra())===s&&(e=ta())===s&&(e=ea())===s&&(e=na())===s&&(e=ua())===s&&(e=sa())===s&&(e=oa()),e!==s&&(n=Na())!==s?((u=Wa())===s&&(u=null),u!==s&&(o=Na())!==s?(e=function(r,t){return {dataType:r,suffix:t}}(e,u),t=e):(pu=t,t=s)):(pu=t,t=s));}return t}())===s&&(t=function(){var t,e,n,u;t=pu,(e=aa())===s&&(e=ia())===s&&(e=ca())===s&&(e=la());if(e!==s)if(Na()!==s)if(Ta()!==s)if(Na()!==s){if(n=[],It.test(r.charAt(pu))?(u=r.charAt(pu),pu++):(u=s,0===Au&&Iu(Nt)),u!==s)for(;u!==s;)n.push(u),It.test(r.charAt(pu))?(u=r.charAt(pu),pu++):(u=s,0===Au&&Iu(Nt));else n=s;n!==s&&(u=Na())!==s&&ma()!==s?(e={dataType:e,length:parseInt(n.join(""),10)},t=e):(pu=t,t=s);}else pu=t,t=s;else pu=t,t=s;else pu=t,t=s;else pu=t,t=s;t===s&&(t=pu,(e=aa())===s&&(e=ia())===s&&(e=ca())===s&&(e=la()),e!==s&&(e=Cu(e)),t=e);return t}())===s&&(t=function(){var e;(e=function(){var t,e,n,u;return t=pu,"json"===r.substr(pu,4).toLowerCase()?(e=r.substr(pu,4),pu+=4):(e=s,0===Au&&Iu(tn)),e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?(t=e="JSON"):(pu=t,t=s)):(pu=t,t=s),t}())!==s&&(e=Cu(e));return e}())===s&&(t=function(){var e;(e=function(){var t,e,n,u;return t=pu,"tinytext"===r.substr(pu,8).toLowerCase()?(e=r.substr(pu,8),pu+=8):(e=s,0===Au&&Iu(un)),e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?(t=e="TINYTEXT"):(pu=t,t=s)):(pu=t,t=s),t}())===s&&(e=function(){var t,e,n,u;return t=pu,"text"===r.substr(pu,4).toLowerCase()?(e=r.substr(pu,4),pu+=4):(e=s,0===Au&&Iu(sn)),e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?(t=e="TEXT"):(pu=t,t=s)):(pu=t,t=s),t}())===s&&(e=function(){var t,e,n,u;return t=pu,"mediumtext"===r.substr(pu,10).toLowerCase()?(e=r.substr(pu,10),pu+=10):(e=s,0===Au&&Iu(on)),e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?(t=e="MEDIUMTEXT"):(pu=t,t=s)):(pu=t,t=s),t}())===s&&(e=function(){var t,e,n,u;return t=pu,"longtext"===r.substr(pu,8).toLowerCase()?(e=r.substr(pu,8),pu+=8):(e=s,0===Au&&Iu(an)),e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?(t=e="LONGTEXT"):(pu=t,t=s)):(pu=t,t=s),t}());e!==s&&(e={dataType:e});return e}()),t}function Wa(){var t,e,n;return t=pu,(e=Qo())===s&&(e=null),e!==s&&Na()!==s?((n=function(){var t,e,n,u;return t=pu,"zerofill"===r.substr(pu,8).toLowerCase()?(e=r.substr(pu,8),pu+=8):(e=s,0===Au&&Iu(Qe)),e!==s?(n=pu,Au++,u=Ks(),Au--,u===s?n=void 0:(pu=n,n=s),n!==s?(t=e="ZEROFILL"):(pu=t,t=s)):(pu=t,t=s),t}())===s&&(n=null),n!==s?(t=e=function(r,t){const e=[];return r&&e.push(r),t&&e.push(t),e}(e,n)):(pu=t,t=s)):(pu=t,t=s),t}const Va={ALTER:!0,ALL:!0,ADD:!0,AND:!0,AS:!0,ASC:!0,BETWEEN:!0,BY:!0,CALL:!0,CASE:!0,CREATE:!0,CONTAINS:!0,CURRENT_DATE:!0,CURRENT_TIME:!0,CURRENT_TIMESTAMP:!0,CURRENT_USER:!0,DELETE:!0,DESC:!0,DISTINCT:!0,DROP:!0,ELSE:!0,END:!0,EXISTS:!0,EXPLAIN:!0,FALSE:!0,FROM:!0,FULL:!0,GROUP:!0,HAVING:!0,IN:!0,INNER:!0,INSERT:!0,INTO:!0,IS:!0,JOIN:!0,JSON:!0,KEY:!0,LEFT:!0,LIKE:!0,LIMIT:!0,LOW_PRIORITY:!0,NOT:!0,NULL:!0,ON:!0,OR:!0,ORDER:!0,OUTER:!0,RECURSIVE:!0,RENAME:!0,READ:!0,RIGHT:!0,SELECT:!0,SESSION_USER:!0,SET:!0,SHOW:!0,SYSTEM_USER:!0,TABLE:!0,THEN:!0,TRUE:!0,TRUNCATE:!0,TYPE:!0,UNION:!0,UPDATE:!0,USING:!0,VALUES:!0,WITH:!0,WHEN:!0,WHERE:!0,WRITE:!0,GLOBAL:!0,SESSION:!0,LOCAL:!0,PERSIST:!0,PERSIST_ONLY:!0};function Ka(r,t){return {type:"unary_expr",operator:r,expr:t}}function qa(r,t,e){return {type:"binary_expr",operator:r,left:t,right:e}}function Za(r){const t=n(Number.MAX_SAFE_INTEGER);return !(n(r)<t)}function za(r,t,e=3){const n=[r];for(let r=0;r<t.length;r++)n.push(t[r][e]);return n}function Ja(r,t){let e=r;for(let r=0;r<t.length;r++)e=qa(t[r][1],e,t[r][3]);return e}function Qa(r){const t=ui[r];return t||(r||null)}function ri(r){const t=new Set;for(let e of r.keys()){const r=e.split("::");if(!r){t.add(e);break}r&&r[1]&&(r[1]=Qa(r[1])),t.add(r.join("::"));}return Array.from(t)}let ti=[];const ei=new Set,ni=new Set,ui={};if((e=a())!==s&&pu===r.length)return e;throw e!==s&&pu<r.length&&Iu({type:"end"}),Nu(hu,Eu<r.length?r.charAt(Eu):null,Eu<r.length?Su(Eu,Eu+1):Su(Eu,Eu))}};},function(r,t,e){var n=e(0);function u(r,t,e,n){this.message=r,this.expected=t,this.found=e,this.location=n,this.name="SyntaxError","function"==typeof Error.captureStackTrace&&Error.captureStackTrace(this,u);}!function(r,t){function e(){this.constructor=r;}e.prototype=t.prototype,r.prototype=new e;}(u,Error),u.buildMessage=function(r,t){var e={literal:function(r){return '"'+u(r.text)+'"'},class:function(r){var t,e="";for(t=0;t<r.parts.length;t++)e+=r.parts[t]instanceof Array?s(r.parts[t][0])+"-"+s(r.parts[t][1]):s(r.parts[t]);return "["+(r.inverted?"^":"")+e+"]"},any:function(r){return "any character"},end:function(r){return "end of input"},other:function(r){return r.description}};function n(r){return r.charCodeAt(0).toString(16).toUpperCase()}function u(r){return r.replace(/\\/g,"\\\\").replace(/"/g,'\\"').replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(r){return "\\x0"+n(r)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(r){return "\\x"+n(r)}))}function s(r){return r.replace(/\\/g,"\\\\").replace(/\]/g,"\\]").replace(/\^/g,"\\^").replace(/-/g,"\\-").replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(r){return "\\x0"+n(r)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(r){return "\\x"+n(r)}))}return "Expected "+function(r){var t,n,u,s=new Array(r.length);for(t=0;t<r.length;t++)s[t]=(u=r[t],e[u.type](u));if(s.sort(),s.length>0){for(t=1,n=1;t<s.length;t++)s[t-1]!==s[t]&&(s[n]=s[t],n++);s.length=n;}switch(s.length){case 1:return s[0];case 2:return s[0]+" or "+s[1];default:return s.slice(0,-1).join(", ")+", or "+s[s.length-1]}}(r)+" but "+function(r){return r?'"'+u(r)+'"':"end of input"}(t)+" found."},r.exports={SyntaxError:u,parse:function(r,t){t=void 0!==t?t:{};var e,s={},o={start:Au},a=Au,i=function(r,t){return $a(r,t,1)},c=function(r,t){return $a(r,t)},l=Lu("AUTO_INCREMENT",!0),f=Lu("UNIQUE",!0),b=Lu("KEY",!0),v=Lu("PRIMARY",!0),d=Lu("COLUMN_FORMAT",!0),L=Lu("FIXED",!0),C=Lu("DYNAMIC",!0),p=Lu("DEFAULT",!0),w=Lu("STORAGE",!0),E=Lu("DISK",!0),h=Lu("MEMORY",!0),A=Lu("ALGORITHM",!0),y=Lu("INSTANT",!0),T=Lu("INPLACE",!0),m=Lu("COPY",!0),S=Lu("LOCK",!0),I=Lu("NONE",!0),N=Lu("SHARED",!0),R=Lu("EXCLUSIVE",!0),_=Lu("PRIMARY KEY",!0),g=Lu("FOREIGN KEY",!0),O=Lu("MATCH FULL",!0),x=Lu("MATCH PARTIAL",!0),U=Lu("MATCH SIMPLE",!0),M=Lu("ON",!0),D=Lu("DELETE",!0),k=Lu("UPDATE",!0),$=Lu("RESTRICT",!0),F=Lu("CASCADE",!0),P=Lu("SET NULL",!0),H=Lu("NO ACTION",!0),G=Lu("SET DEFAULT",!0),j=Lu("CHARACTER",!0),Y=Lu("SET",!0),B=Lu("CHARSET",!0),X=Lu("COLLATE",!0),W=Lu("AVG_ROW_LENGTH",!0),V=Lu("KEY_BLOCK_SIZE",!0),K=Lu("MAX_ROWS",!0),q=Lu("MIN_ROWS",!0),Z=Lu("STATS_SAMPLE_PAGES",!0),z=Lu("CONNECTION",!0),J=Lu("COMPRESSION",!0),Q=Lu("'",!1),rr=Lu("ZLIB",!0),tr=Lu("LZ4",!0),er=Lu("ENGINE",!0),nr=Lu("READ",!0),ur=Lu("LOCAL",!0),sr=Lu("LOW_PRIORITY",!0),or=Lu("WRITE",!0),ar=Lu("(",!1),ir=Lu(")",!1),cr=Lu("BTREE",!0),lr=Lu("HASH",!0),fr=Lu("WITH",!0),br=Lu("PARSER",!0),vr=Lu("VISIBLE",!0),dr=Lu("INVISIBLE",!0),Lr=function(r,t){return t.unshift(r),t.forEach(r=>{const{table:t,as:e}=r;Ba[t]=t,e&&(Ba[e]=t),function(r){const t=Ha(r);r.clear(),t.forEach(t=>r.add(t));}(Ya);}),t},Cr=Lu("=",!1),pr=function(r,t){return Fa(r,t)},wr=function(r,t){return Fa(r,t)},Er=Lu("!",!1),hr=function(r){return r[0]+" "+r[2]},Ar=Lu(">=",!1),yr=Lu(">",!1),Tr=Lu("<=",!1),mr=Lu("<>",!1),Sr=Lu("<",!1),Ir=Lu("!=",!1),Nr=Lu("+",!1),Rr=Lu("-",!1),_r=Lu("*",!1),gr=Lu("/",!1),Or=Lu("%",!1),xr=function(r){return !0===Ua[r.toUpperCase()]},Ur=Lu('"',!1),Mr=/^[^"]/,Dr=Cu(['"'],!0,!1),kr=function(r){return r.join("")},$r=/^[^']/,Fr=Cu(["'"],!0,!1),Pr=Lu("`",!1),Hr=/^[^`]/,Gr=Cu(["`"],!0,!1),jr=function(r,t){return r+t.join("")},Yr=/^[A-Za-z_]/,Br=Cu([["A","Z"],["a","z"],"_"],!1,!1),Xr=/^[A-Za-z0-9_]/,Wr=Cu([["A","Z"],["a","z"],["0","9"],"_"],!1,!1),Vr=/^[A-Za-z0-9_:]/,Kr=Cu([["A","Z"],["a","z"],["0","9"],"_",":"],!1,!1),qr=Lu(":",!1),Zr=function(r,t,e){return {type:"function",name:r,args:t||{type:"expr_list",value:[]},over:e}},zr=function(r){return {type:"string",value:r[1].join("")}},Jr=function(r,t){return {type:r.toLowerCase(),value:t[1].join("")}},Qr=Lu("ON UPDATE CURRENT_TIMESTAMP",!0),rt=/^[^"\\\0-\x1F\x7F]/,tt=Cu(['"',"\\",["\0",""],""],!0,!1),et=/^[^'\\]/,nt=Cu(["'","\\"],!0,!1),ut=Lu("\\'",!1),st=Lu('\\"',!1),ot=Lu("\\\\",!1),at=Lu("\\/",!1),it=Lu("\\b",!1),ct=Lu("\\f",!1),lt=Lu("\\n",!1),ft=Lu("\\r",!1),bt=Lu("\\t",!1),vt=Lu("\\u",!1),dt=Lu("\\",!1),Lt=/^[\n\r]/,Ct=Cu(["\n","\r"],!1,!1),pt=Lu(".",!1),wt=/^[0-9]/,Et=Cu([["0","9"]],!1,!1),ht=/^[0-9a-fA-F]/,At=Cu([["0","9"],["a","f"],["A","F"]],!1,!1),yt=/^[eE]/,Tt=Cu(["e","E"],!1,!1),mt=/^[+\-]/,St=Cu(["+","-"],!1,!1),It=Lu("NULL",!0),Nt=Lu("NOT NULL",!0),Rt=Lu("TRUE",!0),_t=Lu("TO",!0),gt=Lu("FALSE",!0),Ot=(Lu("DROP",!0)),xt=Lu("USE",!0),Ut=Lu("ALTER",!0),Mt=Lu("SELECT",!0),Dt=Lu("CREATE",!0),kt=Lu("TEMPORARY",!0),$t=Lu("IF NOT EXISTS",!0),Ft=Lu("INSERT",!0),Pt=Lu("RECURSIVE",!1),Ht=Lu("REPLACE",!0),Gt=Lu("RENAME",!0),jt=Lu("IGNORE",!0),Yt=(Lu("PARTITION",!0)),Bt=Lu("INTO",!0),Xt=Lu("OVERWRITE",!0),Wt=Lu("FROM",!0),Vt=Lu("UNLOCK",!0),Kt=Lu("AS",!0),qt=Lu("TABLE",!0),Zt=Lu("TABLES",!0),zt=Lu("DATABASE",!0),Jt=Lu("SCHEME",!0),Qt=Lu("LEFT",!0),re=Lu("RIGHT",!0),te=Lu("FULL",!0),ee=Lu("INNER",!0),ne=Lu("JOIN",!0),ue=Lu("OUTER",!0),se=Lu("OVER",!0),oe=Lu("UNION",!0),ae=Lu("VALUES",!0),ie=Lu("USING",!0),ce=Lu("WHERE",!0),le=Lu("GROUP",!0),fe=Lu("BY",!0),be=Lu("ORDER",!0),ve=Lu("HAVING",!0),de=Lu("LIMIT",!0),Le=Lu("OFFSET",!0),Ce=Lu("ASC",!0),pe=Lu("DESC",!0),we=Lu("ALL",!0),Ee=Lu("DISTINCT",!0),he=Lu("BETWEEN",!0),Ae=Lu("IN",!0),ye=Lu("IS",!0),Te=Lu("LIKE",!0),me=Lu("EXISTS",!0),Se=Lu("NOT",!0),Ie=Lu("AND",!0),Ne=Lu("OR",!0),Re=Lu("COUNT",!0),_e=Lu("MAX",!0),ge=Lu("MIN",!0),Oe=Lu("SUM",!0),xe=Lu("AVG",!0),Ue=Lu("CALL",!0),Me=Lu("CASE",!0),De=Lu("WHEN",!0),ke=Lu("THEN",!0),$e=Lu("ELSE",!0),Fe=Lu("END",!0),Pe=Lu("CAST",!0),He=Lu("CHAR",!0),Ge=Lu("VARCHAR",!0),je=Lu("NUMERIC",!0),Ye=Lu("DECIMAL",!0),Be=Lu("SIGNED",!0),Xe=Lu("STRING",!0),We=Lu("UNSIGNED",!0),Ve=Lu("INT",!0),Ke=Lu("ZEROFILL",!0),qe=Lu("INTEGER",!0),Ze=Lu("JSON",!0),ze=Lu("SMALLINT",!0),Je=Lu("TINYINT",!0),Qe=Lu("TINYTEXT",!0),rn=Lu("TEXT",!0),tn=Lu("MEDIUMTEXT",!0),en=Lu("LONGTEXT",!0),nn=Lu("BIGINT",!0),un=Lu("FLOAT",!0),sn=Lu("DOUBLE",!0),on=Lu("DATE",!0),an=Lu("DATETIME",!0),cn=Lu("TIME",!0),ln=Lu("TIMESTAMP",!0),fn=Lu("TRUNCATE",!0),bn=Lu("USER",!0),vn=Lu("CURRENT_DATE",!0),dn=(Lu("INTERVAL",!0)),Ln=Lu("YEAR",!0),Cn=Lu("MONTH",!0),pn=Lu("DAY",!0),wn=Lu("HOUR",!0),En=Lu("MINUTE",!0),hn=Lu("SECOND",!0),An=Lu("CURRENT_TIME",!0),yn=Lu("CURRENT_TIMESTAMP",!0),Tn=Lu("CURRENT_USER",!0),mn=Lu("SESSION_USER",!0),Sn=Lu("SYSTEM_USER",!0),In=Lu("GLOBAL",!0),Nn=Lu("SESSION",!0),Rn=Lu("PERSIST",!0),_n=Lu("PERSIST_ONLY",!0),gn=Lu("@",!1),On=Lu("@@",!1),xn=Lu("$",!1),Un=Lu("return",!0),Mn=Lu(":=",!1),Dn=Lu("DUAL",!0),kn=Lu("ADD",!0),$n=Lu("COLUMN",!0),Fn=Lu("INDEX",!0),Pn=Lu("FULLTEXT",!0),Hn=Lu("SPATIAL",!0),Gn=Lu("COMMENT",!0),jn=Lu("CONSTRAINT",!0),Yn=Lu("REFERENCES",!0),Bn=Lu("SQL_CALC_FOUND_ROWS",!0),Xn=Lu("SQL_CACHE",!0),Wn=Lu("SQL_NO_CACHE",!0),Vn=Lu("SQL_SMALL_RESULT",!0),Kn=Lu("SQL_BIG_RESULT",!0),qn=Lu("SQL_BUFFER_RESULT",!0),Zn=Lu(",",!1),zn=Lu("[",!1),Jn=Lu("]",!1),Qn=Lu(";",!1),ru=Lu("||",!1),tu=Lu("&&",!1),eu=Lu("/*",!1),nu=Lu("*/",!1),uu=Lu("--",!1),su=Lu("#",!1),ou={type:"any"},au=/^[ \t\n\r]/,iu=Cu([" ","\t","\n","\r"],!1,!1),cu=function(r){return {dataType:r}},lu=0,fu=[{line:1,column:1}],bu=0,vu=[],du=0;if("startRule"in t){if(!(t.startRule in o))throw new Error("Can't start parsing from rule \""+t.startRule+'".');a=o[t.startRule];}function Lu(r,t){return {type:"literal",text:r,ignoreCase:t}}function Cu(r,t,e){return {type:"class",parts:r,inverted:t,ignoreCase:e}}function pu(t){var e,n=fu[t];if(n)return n;for(e=t-1;!fu[e];)e--;for(n={line:(n=fu[e]).line,column:n.column};e<t;)10===r.charCodeAt(e)?(n.line++,n.column=1):n.column++,e++;return fu[t]=n,n}function wu(r,t){var e=pu(r),n=pu(t);return {start:{offset:r,line:e.line,column:e.column},end:{offset:t,line:n.line,column:n.column}}}function Eu(r){lu<bu||(lu>bu&&(bu=lu,vu=[]),vu.push(r));}function hu(r,t,e){return new u(u.buildMessage(r,t),r,t,e)}function Au(){var r,t;return r=lu,va()!==s?((t=function(){var r,t,e,n,u,o,a,i;if(r=lu,(t=Tu())!==s){if(e=[],n=lu,(u=va())!==s&&(o=fa())!==s&&(a=va())!==s&&(i=Tu())!==s?n=u=[u,o,a,i]:(lu=n,n=s),n!==s)for(;n!==s;)e.push(n),n=lu,(u=va())!==s&&(o=fa())!==s&&(a=va())!==s&&(i=Tu())!==s?n=u=[u,o,a,i]:(lu=n,n=s);else e=s;e!==s?(t=function(r,t){const e=[r&&r.ast||r];for(let r=0;r<t.length;r++)t[r][3]&&0!==t[r][3].length&&e.push(t[r][3]&&t[r][3].ast||t[r][3]);return {tableList:Array.from(ja),columnList:Ha(Ya),ast:e}}(t,e),r=t):(lu=r,r=s);}else lu=r,r=s;return r}())===s&&(t=yu())===s&&(t=Tu()),t!==s?(r=t):(lu=r,r=s)):(lu=r,r=s),r}function yu(){var t;return (t=function(){var r,t,e,n,u,o;r=lu,(t=no())!==s&&va()!==s&&(e=vo())!==s&&va()!==s&&(n=Qu())!==s?(a=t,c=e,(l=n)&&l.forEach(r=>ja.add(`${a}::${r.db}::${r.table}`)),t={tableList:Array.from(ja),columnList:Ha(Ya),ast:{type:a.toLowerCase(),keyword:c.toLowerCase(),name:l}},r=t):(lu=r,r=s);var a,c,l;r===s&&(r=lu,(t=no())!==s&&va()!==s&&(e=na())!==s&&va()!==s&&(n=xs())!==s&&va()!==s&&Co()!==s&&va()!==s&&(u=ns())!==s&&va()!==s?((o=function(){var r,t,e,n,u,o;r=lu,(t=_u())===s&&(t=gu());if(t!==s){for(e=[],n=lu,(u=va())!==s?((o=_u())===s&&(o=gu()),o!==s?n=u=[u,o]:(lu=n,n=s)):(lu=n,n=s);n!==s;)e.push(n),n=lu,(u=va())!==s?((o=_u())===s&&(o=gu()),o!==s?n=u=[u,o]:(lu=n,n=s)):(lu=n,n=s);e!==s?(t=i(t,e),r=t):(lu=r,r=s);}else lu=r,r=s;return r}())===s&&(o=null),o!==s&&va()!==s?(t=function(r,t,e,n,u){return {tableList:Array.from(ja),columnList:Ha(Ya),ast:{type:r.toLowerCase(),keyword:t.toLowerCase(),name:e,table:n,options:u}}}(t,e,n,u,o),r=t):(lu=r,r=s)):(lu=r,r=s));return r}())===s&&(t=function(){var t;(t=function(){var t,e,n,u,o,a,i,l,f,b;t=lu,(e=uo())!==s&&va()!==s?((n=so())===s&&(n=null),n!==s&&va()!==s&&vo()!==s&&va()!==s?((u=oo())===s&&(u=null),u!==s&&va()!==s&&(o=Qu())!==s&&va()!==s&&(a=function(){var r,t,e,n,u,o,a,i,l;if(r=lu,(t=ca())!==s)if(va()!==s)if((e=Su())!==s){for(n=[],u=lu,(o=va())!==s&&(a=aa())!==s&&(i=va())!==s&&(l=Su())!==s?u=o=[o,a,i,l]:(lu=u,u=s);u!==s;)n.push(u),u=lu,(o=va())!==s&&(a=aa())!==s&&(i=va())!==s&&(l=Su())!==s?u=o=[o,a,i,l]:(lu=u,u=s);n!==s&&(u=va())!==s&&(o=la())!==s?(t=c(e,n),r=t):(lu=r,r=s);}else lu=r,r=s;else lu=r,r=s;else lu=r,r=s;return r}())!==s&&va()!==s?((i=function(){var r,t,e,n,u,o,a,i;if(r=lu,(t=$u())!==s){for(e=[],n=lu,(u=va())!==s?((o=aa())===s&&(o=null),o!==s&&(a=va())!==s&&(i=$u())!==s?n=u=[u,o,a,i]:(lu=n,n=s)):(lu=n,n=s);n!==s;)e.push(n),n=lu,(u=va())!==s?((o=aa())===s&&(o=null),o!==s&&(a=va())!==s&&(i=$u())!==s?n=u=[u,o,a,i]:(lu=n,n=s)):(lu=n,n=s);e!==s?(t=$a(t,e),r=t):(lu=r,r=s);}else lu=r,r=s;return r}())===s&&(i=null),i!==s&&va()!==s?((l=function(){var t,e,n,u;t=lu,"ignore"===r.substr(lu,6).toLowerCase()?(e=r.substr(lu,6),lu+=6):(e=s,0===du&&Eu(jt));e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?t=e=[e,n]:(lu=t,t=s)):(lu=t,t=s);return t}())===s&&(l=ao()),l===s&&(l=null),l!==s&&va()!==s?((f=bo())===s&&(f=null),f!==s&&va()!==s?((b=mu())===s&&(b=null),b!==s?(v=e,d=n,L=u,p=a,w=i,E=l,h=f,A=b,(C=o)&&C.forEach(r=>ja.add(`create::${r.db}::${r.table}`)),e={tableList:Array.from(ja),columnList:Ha(Ya),ast:{type:v[0].toLowerCase(),keyword:"table",temporary:d&&d[0].toLowerCase(),if_not_exists:L&&L[0].toLowerCase(),table:C,ignore_replace:E&&E[0].toLowerCase(),as:h&&h[0].toLowerCase(),query_expr:A&&A.ast,create_definitions:p,table_options:w}},t=e):(lu=t,t=s)):(lu=t,t=s)):(lu=t,t=s)):(lu=t,t=s)):(lu=t,t=s)):(lu=t,t=s)):(lu=t,t=s);var v,d,L,C,p,w,E,h,A;t===s&&(t=lu,(e=uo())!==s&&va()!==s?((n=so())===s&&(n=null),n!==s&&va()!==s&&vo()!==s&&va()!==s?((u=oo())===s&&(u=null),u!==s&&va()!==s&&(o=Qu())!==s&&va()!==s&&(a=function r(){var t,e;(t=function(){var r,t;r=lu,_o()!==s&&va()!==s&&(t=Qu())!==s?(r={type:"like",table:t}):(lu=r,r=s);return r}())===s&&(t=lu,ca()!==s&&va()!==s&&(e=r())!==s&&va()!==s&&la()!==s?((n=e).parentheses=!0,t=n):(lu=t,t=s));var n;return t}())!==s?(e=function(r,t,e,n,u){return n&&n.forEach(r=>ja.add(`create::${r.db}::${r.table}`)),{tableList:Array.from(ja),columnList:Ha(Ya),ast:{type:r[0].toLowerCase(),keyword:"table",temporary:t&&t[0].toLowerCase(),if_not_exists:e&&e[0].toLowerCase(),table:n,like:u}}}(e,n,u,o,a),t=e):(lu=t,t=s)):(lu=t,t=s)):(lu=t,t=s));return t}())===s&&(t=function(){var t,e,n,u,o,a;t=lu,(e=uo())!==s&&va()!==s?((n=function(){var t,e,n,u;t=lu,"database"===r.substr(lu,8).toLowerCase()?(e=r.substr(lu,8),lu+=8):(e=s,0===du&&Eu(zt));e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?(t=e="DATABASE"):(lu=t,t=s)):(lu=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=lu,"scheme"===r.substr(lu,6).toLowerCase()?(e=r.substr(lu,6),lu+=6):(e=s,0===du&&Eu(Jt));e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?(t=e="SCHEME"):(lu=t,t=s)):(lu=t,t=s);return t}()),n!==s&&va()!==s?((u=oo())===s&&(u=null),u!==s&&va()!==s&&(o=ks())!==s&&va()!==s?((a=function(){var r,t,e,n,u,o;if(r=lu,(t=ku())!==s){for(e=[],n=lu,(u=va())!==s&&(o=ku())!==s?n=u=[u,o]:(lu=n,n=s);n!==s;)e.push(n),n=lu,(u=va())!==s&&(o=ku())!==s?n=u=[u,o]:(lu=n,n=s);e!==s?(t=i(t,e),r=t):(lu=r,r=s);}else lu=r,r=s;return r}())===s&&(a=null),a!==s?(c=e,l=u,f=o,b=a,e={tableList:Array.from(ja),columnList:Ha(Ya),ast:{type:c[0].toLowerCase(),keyword:"database",if_not_exists:l&&l[0].toLowerCase(),database:f,create_definitions:b}},t=e):(lu=t,t=s)):(lu=t,t=s)):(lu=t,t=s)):(lu=t,t=s);var c,l,f,b;return t}());return t}())===s&&(t=function(){var t,e,n,u;t=lu,(e=function(){var t,e,n,u;t=lu,"truncate"===r.substr(lu,8).toLowerCase()?(e=r.substr(lu,8),lu+=8):(e=s,0===du&&Eu(fn));e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?(t=e="TRUNCATE"):(lu=t,t=s)):(lu=t,t=s);return t}())!==s&&va()!==s?((n=vo())===s&&(n=null),n!==s&&va()!==s&&(u=Qu())!==s?(o=e,a=n,(i=u)&&i.forEach(r=>ja.add(`${o}::${r.db}::${r.table}`)),e={tableList:Array.from(ja),columnList:Ha(Ya),ast:{type:o.toLowerCase(),keyword:a&&a.toLowerCase()||"table",name:i}},t=e):(lu=t,t=s)):(lu=t,t=s);var o,a,i;return t}())===s&&(t=function(){var r,t,e;r=lu,(t=io())!==s&&va()!==s&&vo()!==s&&va()!==s&&(e=function(){var r,t,e,n,u,o,a,i;if(r=lu,(t=qu())!==s){for(e=[],n=lu,(u=va())!==s&&(o=aa())!==s&&(a=va())!==s&&(i=qu())!==s?n=u=[u,o,a,i]:(lu=n,n=s);n!==s;)e.push(n),n=lu,(u=va())!==s&&(o=aa())!==s&&(a=va())!==s&&(i=qu())!==s?n=u=[u,o,a,i]:(lu=n,n=s);e!==s?(t=c(t,e),r=t):(lu=r,r=s);}else lu=r,r=s;return r}())!==s?((n=e).forEach(r=>r.forEach(r=>r.table&&ja.add(`rename::${r.db}::${r.table}`))),t={tableList:Array.from(ja),columnList:Ha(Ya),ast:{type:"rename",table:n}},r=t):(lu=r,r=s);var n;return r}())===s&&(t=function(){var t,e,n;t=lu,(e=function(){var t,e,n,u;t=lu,"call"===r.substr(lu,4).toLowerCase()?(e=r.substr(lu,4),lu+=4):(e=s,0===du&&Eu(Ue));e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?(t=e="CALL"):(lu=t,t=s)):(lu=t,t=s);return t}())!==s&&va()!==s&&(n=Na())!==s?(u=n,e={tableList:Array.from(ja),columnList:Ha(Ya),ast:{type:"call",expr:u}},t=e):(lu=t,t=s);var u;return t}())===s&&(t=function(){var t,e,n;t=lu,(e=function(){var t,e,n,u;t=lu,"use"===r.substr(lu,3).toLowerCase()?(e=r.substr(lu,3),lu+=3):(e=s,0===du&&Eu(xt));e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?t=e=[e,n]:(lu=t,t=s)):(lu=t,t=s);return t}())!==s&&va()!==s&&(n=Us())!==s?(u=n,ja.add(`use::${u}::null`),e={tableList:Array.from(ja),columnList:Ha(Ya),ast:{type:"use",db:u}},t=e):(lu=t,t=s);var u;return t}())===s&&(t=function(){var t,e,n,u;t=lu,(e=function(){var t,e,n,u;t=lu,"alter"===r.substr(lu,5).toLowerCase()?(e=r.substr(lu,5),lu+=5):(e=s,0===du&&Eu(Ut));e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?t=e=[e,n]:(lu=t,t=s)):(lu=t,t=s);return t}())!==s&&va()!==s&&vo()!==s&&va()!==s&&(n=Qu())!==s&&va()!==s&&(u=function(){var r,t,e,n,u,o,a,i;if(r=lu,(t=Ru())!==s){for(e=[],n=lu,(u=va())!==s&&(o=aa())!==s&&(a=va())!==s&&(i=Ru())!==s?n=u=[u,o,a,i]:(lu=n,n=s);n!==s;)e.push(n),n=lu,(u=va())!==s&&(o=aa())!==s&&(a=va())!==s&&(i=Ru())!==s?n=u=[u,o,a,i]:(lu=n,n=s);e!==s?(t=c(t,e),r=t):(lu=r,r=s);}else lu=r,r=s;return r}())!==s?(a=u,(o=n)&&o.length>0&&o.forEach(r=>ja.add(`alter::${r.db}::${r.table}`)),e={tableList:Array.from(ja),columnList:Ha(Ya),ast:{type:"alter",table:o,expr:a}},t=e):(lu=t,t=s);var o,a;return t}())===s&&(t=function(){var t,e,n,u;t=lu,(e=fo())!==s&&va()!==s?((n=function(){var t,e,n,u;t=lu,"global"===r.substr(lu,6).toLowerCase()?(e=r.substr(lu,6),lu+=6):(e=s,0===du&&Eu(In));e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?(t=e="GLOBAL"):(lu=t,t=s)):(lu=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=lu,"session"===r.substr(lu,7).toLowerCase()?(e=r.substr(lu,7),lu+=7):(e=s,0===du&&Eu(Nn));e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?(t=e="SESSION"):(lu=t,t=s)):(lu=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=lu,"local"===r.substr(lu,5).toLowerCase()?(e=r.substr(lu,5),lu+=5):(e=s,0===du&&Eu(ur));e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?(t=e="LOCAL"):(lu=t,t=s)):(lu=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=lu,"persist"===r.substr(lu,7).toLowerCase()?(e=r.substr(lu,7),lu+=7):(e=s,0===du&&Eu(Rn));e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?(t=e="PERSIST"):(lu=t,t=s)):(lu=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=lu,"persist_only"===r.substr(lu,12).toLowerCase()?(e=r.substr(lu,12),lu+=12):(e=s,0===du&&Eu(_n));e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?(t=e="PERSIST_ONLY"):(lu=t,t=s)):(lu=t,t=s);return t}()),n===s&&(n=null),n!==s&&va()!==s&&(u=Aa())!==s?(o=n,(a=u).keyword=o,e={tableList:Array.from(ja),columnList:Ha(Ya),ast:{type:"set",expr:a}},t=e):(lu=t,t=s)):(lu=t,t=s);var o,a;return t}())===s&&(t=function(){var t,e,n;t=lu,(e=function(){var t,e,n,u;t=lu,"lock"===r.substr(lu,4).toLowerCase()?(e=r.substr(lu,4),lu+=4):(e=s,0===du&&Eu(S));e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?t=e=[e,n]:(lu=t,t=s)):(lu=t,t=s);return t}())!==s&&va()!==s&&Lo()!==s&&va()!==s&&(n=function(){var r,t,e,n,u,o,a,i;if(r=lu,(t=Fu())!==s){for(e=[],n=lu,(u=va())!==s&&(o=aa())!==s&&(a=va())!==s&&(i=Fu())!==s?n=u=[u,o,a,i]:(lu=n,n=s);n!==s;)e.push(n),n=lu,(u=va())!==s&&(o=aa())!==s&&(a=va())!==s&&(i=Fu())!==s?n=u=[u,o,a,i]:(lu=n,n=s);e!==s?(t=$a(t,e),r=t):(lu=r,r=s);}else lu=r,r=s;return r}())!==s?(u=n,e={tableList:Array.from(ja),columnList:Ha(Ya),ast:{type:"lock",keyword:"tables",tables:u}},t=e):(lu=t,t=s);var u;return t}())===s&&(t=function(){var t,e;t=lu,(e=function(){var t,e,n,u;t=lu,"unlock"===r.substr(lu,6).toLowerCase()?(e=r.substr(lu,6),lu+=6):(e=s,0===du&&Eu(Vt));e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?t=e=[e,n]:(lu=t,t=s)):(lu=t,t=s);return t}())!==s&&va()!==s&&Lo()!==s?(e={tableList:Array.from(ja),columnList:Ha(Ya),ast:{type:"unlock",keyword:"tables"}},t=e):(lu=t,t=s);return t}()),t}function Tu(){var t;return (t=mu())===s&&(t=function(){var t,e,n,u,o;t=lu,(e=function(){var t,e,n,u;t=lu,"update"===r.substr(lu,6).toLowerCase()?(e=r.substr(lu,6),lu+=6):(e=s,0===du&&Eu(k));e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?t=e=[e,n]:(lu=t,t=s)):(lu=t,t=s);return t}())!==s&&va()!==s&&(n=Qu())!==s&&va()!==s&&fo()!==s&&va()!==s&&(u=function(){var r,t,e,n,u,o,a,i;if(r=lu,(t=ls())!==s){for(e=[],n=lu,(u=va())!==s&&(o=aa())!==s&&(a=va())!==s&&(i=ls())!==s?n=u=[u,o,a,i]:(lu=n,n=s);n!==s;)e.push(n),n=lu,(u=va())!==s&&(o=aa())!==s&&(a=va())!==s&&(i=ls())!==s?n=u=[u,o,a,i]:(lu=n,n=s);e!==s?(t=c(t,e),r=t):(lu=r,r=s);}else lu=r,r=s;return r}())!==s&&va()!==s?((o=ss())===s&&(o=null),o!==s?(i=u,l=o,(a=n)&&a.forEach(r=>{const{db:t,as:e,table:n}=r;ja.add(`update::${t}::${n}`);}),i&&i.forEach(r=>Ya.add(`update::${r.table}::${r.column}`)),e={tableList:Array.from(ja),columnList:Ha(Ya),ast:{type:"update",table:a,set:i,where:l}},t=e):(lu=t,t=s)):(lu=t,t=s);var a,i,l;return t}())===s&&(t=function(){var r,t,e,n,u,o,a,i;r=lu,(t=vs())!==s&&va()!==s&&(e=lo())!==s&&va()!==s?((n=vo())===s&&(n=null),n!==s&&va()!==s&&(u=ns())!==s?((o=bs())===s&&(o=null),o!==s&&va()!==s&&ca()!==s&&va()!==s&&(a=function(){var r,t,e,n,u,o,a,i;if(r=lu,(t=Ds())!==s){for(e=[],n=lu,(u=va())!==s&&(o=aa())!==s&&(a=va())!==s&&(i=Ds())!==s?n=u=[u,o,a,i]:(lu=n,n=s);n!==s;)e.push(n),n=lu,(u=va())!==s&&(o=aa())!==s&&(a=va())!==s&&(i=Ds())!==s?n=u=[u,o,a,i]:(lu=n,n=s);e!==s?(t=c(t,e),r=t):(lu=r,r=s);}else lu=r,r=s;return r}())!==s&&va()!==s&&la()!==s&&va()!==s&&(i=fs())!==s?(t=function(r,t,e,n,u,s,o){if(n&&(ja.add(`insert::${n.db}::${n.table}`),n.as=null),s){let r=n&&n.table||null;Array.isArray(o)&&o.forEach((r,t)=>{if(r.value.length!=s.length)throw new Error("Error: column count doesn't match value count at row "+(t+1))}),s.forEach(t=>Ya.add(`insert::${r}::${t}`));}const a=e?" "+e.toLowerCase():"";return {tableList:Array.from(ja),columnList:Ha(Ya),ast:{type:r,prefix:`${t.toLowerCase()}${a}`,table:[n],columns:s,values:o,partition:u}}}(t,e,n,u,o,a,i),r=t):(lu=r,r=s)):(lu=r,r=s)):(lu=r,r=s);return r}())===s&&(t=function(){var t,e,n,u,o,a,i;t=lu,(e=vs())!==s&&va()!==s?((n=lo())===s&&(n=function(){var t,e,n,u;t=lu,"overwrite"===r.substr(lu,9).toLowerCase()?(e=r.substr(lu,9),lu+=9):(e=s,0===du&&Eu(Xt));e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?(t=e="OVERWRITE"):(lu=t,t=s)):(lu=t,t=s);return t}()),n!==s&&va()!==s?((u=vo())===s&&(u=null),u!==s&&va()!==s&&(o=ns())!==s&&va()!==s?((a=bs())===s&&(a=null),a!==s&&va()!==s&&(i=fs())!==s?(e=function(r,t,e,n,u,s){n&&(ja.add(`insert::${n.db}::${n.table}`),Ya.add(`insert::${n.table}::(.*)`),n.as=null);const o=e?" "+e.toLowerCase():"";return {tableList:Array.from(ja),columnList:Ha(Ya),ast:{type:r,prefix:`${t.toLowerCase()}${o}`,table:[n],columns:null,values:s,partition:u}}}(e,n,u,o,a,i),t=e):(lu=t,t=s)):(lu=t,t=s)):(lu=t,t=s)):(lu=t,t=s);return t}())===s&&(t=function(){var t,e,n,u,o;t=lu,(e=function(){var t,e,n,u;t=lu,"delete"===r.substr(lu,6).toLowerCase()?(e=r.substr(lu,6),lu+=6):(e=s,0===du&&Eu(D));e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?t=e=[e,n]:(lu=t,t=s)):(lu=t,t=s);return t}())!==s&&va()!==s?((n=Qu())===s&&(n=null),n!==s&&va()!==s&&(u=Ku())!==s&&va()!==s?((o=ss())===s&&(o=null),o!==s?(e=function(r,t,e){if(t&&t.forEach(r=>{r.table&&ja.add(`delete::${r.db}::${r.table}`),Ya.add(`delete::${r.table}::(.*)`);}),null===r&&1===t.length){const e=t[0];r=[{db:e.db,table:e.table,as:e.as,addition:!0}];}return {tableList:Array.from(ja),columnList:Ha(Ya),ast:{type:"delete",table:r,from:t,where:e}}}(n,u,o),t=e):(lu=t,t=s)):(lu=t,t=s)):(lu=t,t=s);return t}())===s&&(t=yu())===s&&(t=function(){var r,t;r=[],t=ha();for(;t!==s;)r.push(t),t=ha();return r}()),t}function mu(){var r,t,e,n,u,o,a,i,c,l;if(r=lu,(t=Pu())!==s){for(e=[],n=lu,(u=va())!==s&&(o=Eo())!==s&&(a=va())!==s?((i=mo())===s&&(i=null),i!==s&&(c=va())!==s&&(l=Pu())!==s?n=u=[u,o,a,i,c,l]:(lu=n,n=s)):(lu=n,n=s);n!==s;)e.push(n),n=lu,(u=va())!==s&&(o=Eo())!==s&&(a=va())!==s?((i=mo())===s&&(i=null),i!==s&&(c=va())!==s&&(l=Pu())!==s?n=u=[u,o,a,i,c,l]:(lu=n,n=s)):(lu=n,n=s);e!==s&&(n=va())!==s?((u=os())===s&&(u=null),u!==s&&(o=va())!==s?((a=cs())===s&&(a=null),a!==s?(r=t=function(r,t,e,n){t.forEach(r=>r.slice(1,1));let u=r;for(let r=0;r<t.length;r++)u._next=t[r][5],u.union=t[r][3]?"union all":"union",u=u._next;return e&&(r._orderby=e),n&&(r._limit=n),{tableList:Array.from(ja),columnList:Ha(Ya),ast:r}}(t,e,u,a)):(lu=r,r=s)):(lu=r,r=s)):(lu=r,r=s);}else lu=r,r=s;return r}function Su(){var t;return (t=Nu())===s&&(t=Ou())===s&&(t=xu())===s&&(t=function(){var t;(t=function(){var t,e,n,u,o,a;t=lu,(e=Uu())===s&&(e=null);e!==s&&va()!==s?("primary key"===r.substr(lu,11).toLowerCase()?(n=r.substr(lu,11),lu+=11):(n=s,0===du&&Eu(_)),n!==s&&va()!==s?((u=Zu())===s&&(u=null),u!==s&&va()!==s&&(o=ju())!==s&&va()!==s?((a=zu())===s&&(a=null),a!==s?(c=n,l=u,f=o,b=a,e={constraint:(i=e)&&i.constraint,definition:f,constraint_type:c.toLowerCase(),keyword:i&&i.keyword,index_type:l,resource:"constraint",index_options:b},t=e):(lu=t,t=s)):(lu=t,t=s)):(lu=t,t=s)):(lu=t,t=s);var i,c,l,f,b;return t}())===s&&(t=function(){var t,e,n,u,o,a,i,c;t=lu,(e=Uu())===s&&(e=null);e!==s&&va()!==s&&(n=function(){var t,e,n,u;t=lu,"unique"===r.substr(lu,6).toLowerCase()?(e=r.substr(lu,6),lu+=6):(e=s,0===du&&Eu(f));e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?(t=e="UNIQUE"):(lu=t,t=s)):(lu=t,t=s);return t}())!==s&&va()!==s?((u=na())===s&&(u=ua()),u===s&&(u=null),u!==s&&va()!==s?((o=Ds())===s&&(o=null),o!==s&&va()!==s?((a=Zu())===s&&(a=null),a!==s&&va()!==s&&(i=ju())!==s&&va()!==s?((c=zu())===s&&(c=null),c!==s?(b=n,v=u,d=o,L=a,C=i,p=c,e={constraint:(l=e)&&l.constraint,definition:C,constraint_type:v&&`${b.toLowerCase()} ${v.toLowerCase()}`||b.toLowerCase(),keyword:l&&l.keyword,index_type:L,index:d,resource:"constraint",index_options:p},t=e):(lu=t,t=s)):(lu=t,t=s)):(lu=t,t=s)):(lu=t,t=s)):(lu=t,t=s);var l,b,v,d,L,C,p;return t}())===s&&(t=function(){var t,e,n,u,o,a;t=lu,(e=Uu())===s&&(e=null);e!==s&&va()!==s?("foreign key"===r.substr(lu,11).toLowerCase()?(n=r.substr(lu,11),lu+=11):(n=s,0===du&&Eu(g)),n!==s&&va()!==s?((u=Ds())===s&&(u=null),u!==s&&va()!==s&&(o=ju())!==s&&va()!==s?((a=Mu())===s&&(a=null),a!==s?(c=n,l=u,f=o,b=a,e={constraint:(i=e)&&i.constraint,definition:f,constraint_type:c,keyword:i&&i.keyword,index:l,resource:"constraint",reference_definition:b},t=e):(lu=t,t=s)):(lu=t,t=s)):(lu=t,t=s)):(lu=t,t=s);var i,c,l,f,b;return t}());return t}()),t}function Iu(){var t,e,n,u,o,a;return t=lu,(e=function(){var e;(e=function(){var t,e,n,u;t=lu,"not null"===r.substr(lu,8).toLowerCase()?(e=r.substr(lu,8),lu+=8):(e=s,0===du&&Eu(Nt));e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?t=e=[e,n]:(lu=t,t=s)):(lu=t,t=s);return t}())!==s&&(e={type:"not null",value:"not null"});return e}())===s&&(e=Ys()),e!==s&&((a=e)&&!a.value&&(a.value="null"),e={nullable:a}),(t=e)===s&&(t=lu,(e=function(){var r,t;r=lu,to()!==s&&va()!==s?((t=js())===s&&(t=Es()),t!==s?(r={type:"default",value:t}):(lu=r,r=s)):(lu=r,r=s);return r}())!==s&&(e={default_val:e}),(t=e)===s&&(t=lu,"auto_increment"===r.substr(lu,14).toLowerCase()?(e=r.substr(lu,14),lu+=14):(e=s,0===du&&Eu(l)),e!==s&&(e={auto_increment:e.toLowerCase()}),(t=e)===s&&(t=lu,e=lu,"unique"===r.substr(lu,6).toLowerCase()?(n=r.substr(lu,6),lu+=6):(n=s,0===du&&Eu(f)),n!==s&&(u=va())!==s?("key"===r.substr(lu,3).toLowerCase()?(o=r.substr(lu,3),lu+=3):(o=s,0===du&&Eu(b)),o===s&&(o=null),o!==s?e=n=[n,u,o]:(lu=e,e=s)):(lu=e,e=s),e===s&&(e=lu,"primary"===r.substr(lu,7).toLowerCase()?(n=r.substr(lu,7),lu+=7):(n=s,0===du&&Eu(v)),n===s&&(n=null),n!==s&&(u=va())!==s?("key"===r.substr(lu,3).toLowerCase()?(o=r.substr(lu,3),lu+=3):(o=s,0===du&&Eu(b)),o!==s?e=n=[n,u,o]:(lu=e,e=s)):(lu=e,e=s)),e!==s&&(e=function(r){const t=[];return r&&t.push(r[0],r[2]),{unique_or_primary:t.filter(r=>r).join(" ").toLowerCase("")}}(e)),(t=e)===s&&(t=lu,(e=Ca())!==s&&(e={comment:e}),(t=e)===s&&(t=lu,(e=function(){var t,e;t=lu,function(){var t,e,n,u;t=lu,"collate"===r.substr(lu,7).toLowerCase()?(e=r.substr(lu,7),lu+=7):(e=s,0===du&&Eu(X));e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?(t=e="COLLATE"):(lu=t,t=s)):(lu=t,t=s);return t}()!==s&&va()!==s&&(e=ks())!==s?(t={type:"collate",value:e}):(lu=t,t=s);return t}())!==s&&(e={collate:e}),(t=e)===s&&(t=lu,(e=function(){var t,e,n;t=lu,"column_format"===r.substr(lu,13).toLowerCase()?(e=r.substr(lu,13),lu+=13):(e=s,0===du&&Eu(d));e!==s&&va()!==s?("fixed"===r.substr(lu,5).toLowerCase()?(n=r.substr(lu,5),lu+=5):(n=s,0===du&&Eu(L)),n===s&&("dynamic"===r.substr(lu,7).toLowerCase()?(n=r.substr(lu,7),lu+=7):(n=s,0===du&&Eu(C)),n===s&&("default"===r.substr(lu,7).toLowerCase()?(n=r.substr(lu,7),lu+=7):(n=s,0===du&&Eu(p)))),n!==s?(e=function(r,t){return {type:"column_format",value:t.toLowerCase()}}(0,n),t=e):(lu=t,t=s)):(lu=t,t=s);return t}())!==s&&(e={column_format:e}),(t=e)===s&&(t=lu,(e=function(){var t,e,n;t=lu,"storage"===r.substr(lu,7).toLowerCase()?(e=r.substr(lu,7),lu+=7):(e=s,0===du&&Eu(w));e!==s&&va()!==s?("disk"===r.substr(lu,4).toLowerCase()?(n=r.substr(lu,4),lu+=4):(n=s,0===du&&Eu(E)),n===s&&("memory"===r.substr(lu,6).toLowerCase()?(n=r.substr(lu,6),lu+=6):(n=s,0===du&&Eu(h))),n!==s?(e={type:"storage",value:n.toLowerCase()},t=e):(lu=t,t=s)):(lu=t,t=s);return t}())!==s&&(e={storage:e}),(t=e)===s&&(t=lu,(e=Mu())!==s&&(e={reference_definition:e}),t=e)))))))),t}function Nu(){var r,t,e,n,u,o,a;return r=lu,(t=xs())!==s&&va()!==s&&(e=Oa())!==s&&va()!==s?((n=function(){var r,t,e,n,u,o;if(r=lu,(t=Iu())!==s)if(va()!==s){for(e=[],n=lu,(u=va())!==s&&(o=Iu())!==s?n=u=[u,o]:(lu=n,n=s);n!==s;)e.push(n),n=lu,(u=va())!==s&&(o=Iu())!==s?n=u=[u,o]:(lu=n,n=s);e!==s?(r=t=function(r,t){let e=r;for(let r=0;r<t.length;r++)e={...e,...t[r][1]};return e}(t,e)):(lu=r,r=s);}else lu=r,r=s;else lu=r,r=s;return r}())===s&&(n=null),n!==s?(u=t,o=e,a=n,Ya.add(`create::${u.table}::${u.column}`),r=t={column:u,definition:o,resource:"column",...a||{}}):(lu=r,r=s)):(lu=r,r=s),r}function Ru(){var r;return (r=function(){var r,t,e,n;r=lu,(t=ta())!==s&&va()!==s?((e=ea())===s&&(e=null),e!==s&&va()!==s&&(n=Nu())!==s?(u=e,o=n,t={action:"add",...o,keyword:u,resource:"column",type:"alter"},r=t):(lu=r,r=s)):(lu=r,r=s);var u,o;return r}())===s&&(r=function(){var r,t,e;r=lu,no()!==s&&va()!==s?((t=ea())===s&&(t=null),t!==s&&va()!==s&&(e=xs())!==s?(r={action:"drop",column:e,keyword:t,resource:"column",type:"alter"}):(lu=r,r=s)):(lu=r,r=s);return r}())===s&&(r=function(){var r,t,e;r=lu,(t=ta())!==s&&va()!==s&&(e=Ou())!==s?(n=e,t={action:"add",type:"alter",...n},r=t):(lu=r,r=s);var n;return r}())===s&&(r=function(){var r,t,e;r=lu,(t=ta())!==s&&va()!==s&&(e=xu())!==s?(n=e,t={action:"add",type:"alter",...n},r=t):(lu=r,r=s);var n;return r}())===s&&(r=function(){var r,t,e,n;r=lu,(t=io())!==s&&va()!==s?((e=eo())===s&&(e=bo()),e===s&&(e=null),e!==s&&va()!==s&&(n=Us())!==s?(o=n,t={action:"rename",type:"alter",resource:"table",keyword:(u=e)&&u[0].toLowerCase(),table:o},r=t):(lu=r,r=s)):(lu=r,r=s);var u,o;return r}())===s&&(r=_u())===s&&(r=gu()),r}function _u(){var t,e,n,u;return t=lu,"algorithm"===r.substr(lu,9).toLowerCase()?(e=r.substr(lu,9),lu+=9):(e=s,0===du&&Eu(A)),e!==s&&va()!==s?((n=ra())===s&&(n=null),n!==s&&va()!==s?("default"===r.substr(lu,7).toLowerCase()?(u=r.substr(lu,7),lu+=7):(u=s,0===du&&Eu(p)),u===s&&("instant"===r.substr(lu,7).toLowerCase()?(u=r.substr(lu,7),lu+=7):(u=s,0===du&&Eu(y)),u===s&&("inplace"===r.substr(lu,7).toLowerCase()?(u=r.substr(lu,7),lu+=7):(u=s,0===du&&Eu(T)),u===s&&("copy"===r.substr(lu,4).toLowerCase()?(u=r.substr(lu,4),lu+=4):(u=s,0===du&&Eu(m))))),u!==s?(t=e={type:"alter",keyword:"algorithm",resource:"algorithm",symbol:n,algorithm:u}):(lu=t,t=s)):(lu=t,t=s)):(lu=t,t=s),t}function gu(){var t,e,n,u;return t=lu,"lock"===r.substr(lu,4).toLowerCase()?(e=r.substr(lu,4),lu+=4):(e=s,0===du&&Eu(S)),e!==s&&va()!==s?((n=ra())===s&&(n=null),n!==s&&va()!==s?("default"===r.substr(lu,7).toLowerCase()?(u=r.substr(lu,7),lu+=7):(u=s,0===du&&Eu(p)),u===s&&("none"===r.substr(lu,4).toLowerCase()?(u=r.substr(lu,4),lu+=4):(u=s,0===du&&Eu(I)),u===s&&("shared"===r.substr(lu,6).toLowerCase()?(u=r.substr(lu,6),lu+=6):(u=s,0===du&&Eu(N)),u===s&&("exclusive"===r.substr(lu,9).toLowerCase()?(u=r.substr(lu,9),lu+=9):(u=s,0===du&&Eu(R))))),u!==s?(t=e={type:"alter",keyword:"lock",resource:"lock",symbol:n,lock:u}):(lu=t,t=s)):(lu=t,t=s)):(lu=t,t=s),t}function Ou(){var r,t,e,n,u,o,a,i;return r=lu,(t=na())===s&&(t=ua()),t!==s&&va()!==s?((e=Ds())===s&&(e=null),e!==s&&va()!==s?((n=Zu())===s&&(n=null),n!==s&&va()!==s&&(u=ju())!==s&&va()!==s?((o=zu())===s&&(o=null),o!==s&&va()!==s?(a=n,i=o,r=t={index:e,definition:u,keyword:t.toLowerCase(),index_type:a,resource:"index",index_options:i}):(lu=r,r=s)):(lu=r,r=s)):(lu=r,r=s)):(lu=r,r=s),r}function xu(){var t,e,n,u,o,a,i,c,l;return t=lu,(e=function(){var t,e,n,u;t=lu,"fulltext"===r.substr(lu,8).toLowerCase()?(e=r.substr(lu,8),lu+=8):(e=s,0===du&&Eu(Pn));e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?(t=e="FULLTEXT"):(lu=t,t=s)):(lu=t,t=s);return t}())===s&&(e=function(){var t,e,n,u;t=lu,"spatial"===r.substr(lu,7).toLowerCase()?(e=r.substr(lu,7),lu+=7):(e=s,0===du&&Eu(Hn));e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?(t=e="SPATIAL"):(lu=t,t=s)):(lu=t,t=s);return t}()),e!==s&&va()!==s?((n=na())===s&&(n=ua()),n===s&&(n=null),n!==s&&va()!==s?((u=Ds())===s&&(u=null),u!==s&&va()!==s&&(o=ju())!==s&&va()!==s?((a=zu())===s&&(a=null),a!==s&&va()!==s?(i=e,l=a,t=e={index:u,definition:o,keyword:(c=n)&&`${i.toLowerCase()} ${c.toLowerCase()}`||i.toLowerCase(),index_options:l,resource:"index"}):(lu=t,t=s)):(lu=t,t=s)):(lu=t,t=s)):(lu=t,t=s),t}function Uu(){var t,e,n,u;return t=lu,(e=function(){var t,e,n,u;t=lu,"constraint"===r.substr(lu,10).toLowerCase()?(e=r.substr(lu,10),lu+=10):(e=s,0===du&&Eu(jn));e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?(t=e="CONSTRAINT"):(lu=t,t=s)):(lu=t,t=s);return t}())!==s&&va()!==s?((n=Us())===s&&(n=null),n!==s?(u=n,t=e={keyword:e.toLowerCase(),constraint:u}):(lu=t,t=s)):(lu=t,t=s),t}function Mu(){var t,e,n,u,o,a,i,c,l,f;return t=lu,(e=function(){var t,e,n,u;t=lu,"references"===r.substr(lu,10).toLowerCase()?(e=r.substr(lu,10),lu+=10):(e=s,0===du&&Eu(Yn));e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?(t=e="REFERENCES"):(lu=t,t=s)):(lu=t,t=s);return t}())!==s&&va()!==s&&(n=Qu())!==s&&va()!==s&&(u=ju())!==s&&va()!==s?("match full"===r.substr(lu,10).toLowerCase()?(o=r.substr(lu,10),lu+=10):(o=s,0===du&&Eu(O)),o===s&&("match partial"===r.substr(lu,13).toLowerCase()?(o=r.substr(lu,13),lu+=13):(o=s,0===du&&Eu(x)),o===s&&("match simple"===r.substr(lu,12).toLowerCase()?(o=r.substr(lu,12),lu+=12):(o=s,0===du&&Eu(U)))),o===s&&(o=null),o!==s&&va()!==s?((a=Du())===s&&(a=null),a!==s&&va()!==s?((i=Du())===s&&(i=null),i!==s?(c=o,l=a,f=i,t=e={definition:u,table:n,keyword:e.toLowerCase(),match:c&&c.toLowerCase(),on_delete:l,on_update:f}):(lu=t,t=s)):(lu=t,t=s)):(lu=t,t=s)):(lu=t,t=s),t}function Du(){var t,e,n,u,o,a;return t=lu,"on"===r.substr(lu,2).toLowerCase()?(e=r.substr(lu,2),lu+=2):(e=s,0===du&&Eu(M)),e!==s&&va()!==s?("delete"===r.substr(lu,6).toLowerCase()?(n=r.substr(lu,6),lu+=6):(n=s,0===du&&Eu(D)),n===s&&("update"===r.substr(lu,6).toLowerCase()?(n=r.substr(lu,6),lu+=6):(n=s,0===du&&Eu(k))),n!==s&&va()!==s&&(u=function(){var e;"restrict"===r.substr(lu,8).toLowerCase()?(e=r.substr(lu,8),lu+=8):(e=s,0===du&&Eu($));e===s&&("cascade"===r.substr(lu,7).toLowerCase()?(e=r.substr(lu,7),lu+=7):(e=s,0===du&&Eu(F)),e===s&&("set null"===r.substr(lu,8).toLowerCase()?(e=r.substr(lu,8),lu+=8):(e=s,0===du&&Eu(P)),e===s&&("no action"===r.substr(lu,9).toLowerCase()?(e=r.substr(lu,9),lu+=9):(e=s,0===du&&Eu(H)),e===s&&("set default"===r.substr(lu,11).toLowerCase()?(e=r.substr(lu,11),lu+=11):(e=s,0===du&&Eu(G))))));e!==s&&(e=e.toLowerCase());return e}())!==s?(o=n,a=u,t=e={type:`${e.toLowerCase()} ${o.toLowerCase()}`,value:a}):(lu=t,t=s)):(lu=t,t=s),t}function ku(){var t,e,n,u,o,a,i,c,l;return t=lu,(e=to())===s&&(e=null),e!==s&&va()!==s?((n=function(){var t,e,n;return t=lu,"character"===r.substr(lu,9).toLowerCase()?(e=r.substr(lu,9),lu+=9):(e=s,0===du&&Eu(j)),e!==s&&va()!==s?("set"===r.substr(lu,3).toLowerCase()?(n=r.substr(lu,3),lu+=3):(n=s,0===du&&Eu(Y)),n!==s?(t=e="CHARACTER SET"):(lu=t,t=s)):(lu=t,t=s),t}())===s&&("charset"===r.substr(lu,7).toLowerCase()?(n=r.substr(lu,7),lu+=7):(n=s,0===du&&Eu(B)),n===s&&("collate"===r.substr(lu,7).toLowerCase()?(n=r.substr(lu,7),lu+=7):(n=s,0===du&&Eu(X)))),n!==s&&va()!==s?((u=ra())===s&&(u=null),u!==s&&va()!==s&&(o=ks())!==s?(i=n,c=u,l=o,t=e={keyword:(a=e)&&`${a[0].toLowerCase()} ${i.toLowerCase()}`||i.toLowerCase(),symbol:c,value:l}):(lu=t,t=s)):(lu=t,t=s)):(lu=t,t=s),t}function $u(){var t,e,n,u,o,a,i,c,f;return t=lu,"auto_increment"===r.substr(lu,14).toLowerCase()?(e=r.substr(lu,14),lu+=14):(e=s,0===du&&Eu(l)),e===s&&("avg_row_length"===r.substr(lu,14).toLowerCase()?(e=r.substr(lu,14),lu+=14):(e=s,0===du&&Eu(W)),e===s&&("key_block_size"===r.substr(lu,14).toLowerCase()?(e=r.substr(lu,14),lu+=14):(e=s,0===du&&Eu(V)),e===s&&("max_rows"===r.substr(lu,8).toLowerCase()?(e=r.substr(lu,8),lu+=8):(e=s,0===du&&Eu(K)),e===s&&("min_rows"===r.substr(lu,8).toLowerCase()?(e=r.substr(lu,8),lu+=8):(e=s,0===du&&Eu(q)),e===s&&("stats_sample_pages"===r.substr(lu,18).toLowerCase()?(e=r.substr(lu,18),lu+=18):(e=s,0===du&&Eu(Z))))))),e!==s&&va()!==s?((n=ra())===s&&(n=null),n!==s&&va()!==s&&(u=Ks())!==s?(c=n,f=u,t=e={keyword:e.toLowerCase(),symbol:c,value:f.value}):(lu=t,t=s)):(lu=t,t=s),t===s&&(t=ku())===s&&(t=lu,(e=sa())===s&&("connection"===r.substr(lu,10).toLowerCase()?(e=r.substr(lu,10),lu+=10):(e=s,0===du&&Eu(z))),e!==s&&va()!==s?((n=ra())===s&&(n=null),n!==s&&va()!==s&&(u=Bs())!==s?(t=e=function(r,t,e){return {keyword:r.toLowerCase(),symbol:t,value:`'${e.value}'`}}(e,n,u)):(lu=t,t=s)):(lu=t,t=s),t===s&&(t=lu,"compression"===r.substr(lu,11).toLowerCase()?(e=r.substr(lu,11),lu+=11):(e=s,0===du&&Eu(J)),e!==s&&va()!==s?((n=ra())===s&&(n=null),n!==s&&va()!==s?(u=lu,39===r.charCodeAt(lu)?(o="'",lu++):(o=s,0===du&&Eu(Q)),o!==s?("zlib"===r.substr(lu,4).toLowerCase()?(a=r.substr(lu,4),lu+=4):(a=s,0===du&&Eu(rr)),a===s&&("lz4"===r.substr(lu,3).toLowerCase()?(a=r.substr(lu,3),lu+=3):(a=s,0===du&&Eu(tr)),a===s&&("none"===r.substr(lu,4).toLowerCase()?(a=r.substr(lu,4),lu+=4):(a=s,0===du&&Eu(I)))),a!==s?(39===r.charCodeAt(lu)?(i="'",lu++):(i=s,0===du&&Eu(Q)),i!==s?u=o=[o,a,i]:(lu=u,u=s)):(lu=u,u=s)):(lu=u,u=s),u!==s?(t=e=function(r,t,e){return {keyword:r.toLowerCase(),symbol:t,value:e.join("").toUpperCase()}}(e,n,u)):(lu=t,t=s)):(lu=t,t=s)):(lu=t,t=s),t===s&&(t=lu,"engine"===r.substr(lu,6).toLowerCase()?(e=r.substr(lu,6),lu+=6):(e=s,0===du&&Eu(er)),e!==s&&va()!==s?((n=ra())===s&&(n=null),n!==s&&va()!==s&&(u=ks())!==s?(t=e=function(r,t,e){return {keyword:r.toLowerCase(),symbol:t,value:e.toUpperCase()}}(e,n,u)):(lu=t,t=s)):(lu=t,t=s)))),t}function Fu(){var t,e,n,u,o;return t=lu,(e=ts())!==s&&va()!==s&&(n=function(){var t,e,n;return t=lu,"read"===r.substr(lu,4).toLowerCase()?(e=r.substr(lu,4),lu+=4):(e=s,0===du&&Eu(nr)),e!==s&&va()!==s?("local"===r.substr(lu,5).toLowerCase()?(n=r.substr(lu,5),lu+=5):(n=s,0===du&&Eu(ur)),n===s&&(n=null),n!==s?(t=e={type:"read",suffix:n&&"local"}):(lu=t,t=s)):(lu=t,t=s),t===s&&(t=lu,"low_priority"===r.substr(lu,12).toLowerCase()?(e=r.substr(lu,12),lu+=12):(e=s,0===du&&Eu(sr)),e===s&&(e=null),e!==s&&va()!==s?("write"===r.substr(lu,5).toLowerCase()?(n=r.substr(lu,5),lu+=5):(n=s,0===du&&Eu(or)),n!==s?(t=e={type:"write",prefix:e&&"low_priority"}):(lu=t,t=s)):(lu=t,t=s)),t}())!==s?(u=e,o=n,ja.add(`lock::${u.db}::${u.table}`),t=e={table:u,lock_type:o}):(lu=t,t=s),t}function Pu(){var t,e,n,u,o,a,i;return (t=Yu())===s&&(t=lu,e=lu,40===r.charCodeAt(lu)?(n="(",lu++):(n=s,0===du&&Eu(ar)),n!==s&&(u=va())!==s&&(o=Pu())!==s&&(a=va())!==s?(41===r.charCodeAt(lu)?(i=")",lu++):(i=s,0===du&&Eu(ir)),i!==s?e=n=[n,u,o,a,i]:(lu=e,e=s)):(lu=e,e=s),e!==s&&(e={...e[2],parentheses_symbol:!0}),t=e),t}function Hu(){var t,e,n,u,o,a,i,l,f;if(t=lu,yo()!==s)if(va()!==s)if((e=Gu())!==s){for(n=[],u=lu,(o=va())!==s&&(a=aa())!==s&&(i=va())!==s&&(l=Gu())!==s?u=o=[o,a,i,l]:(lu=u,u=s);u!==s;)n.push(u),u=lu,(o=va())!==s&&(a=aa())!==s&&(i=va())!==s&&(l=Gu())!==s?u=o=[o,a,i,l]:(lu=u,u=s);n!==s?(t=c(e,n)):(lu=t,t=s);}else lu=t,t=s;else lu=t,t=s;else lu=t,t=s;return t===s&&(t=lu,va()!==s&&yo()!==s&&(e=va())!==s&&(n=function(){var t,e,n,u;t=lu,"RECURSIVE"===r.substr(lu,9)?(e="RECURSIVE",lu+=9):(e=s,0===du&&Eu(Pt));e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?t=e=[e,n]:(lu=t,t=s)):(lu=t,t=s);return t}())!==s&&(u=va())!==s&&(o=Gu())!==s?((f=o).recursive=!0,t=[f]):(lu=t,t=s)),t}function Gu(){var r,t,e,n;return r=lu,(t=ks())!==s&&va()!==s?((e=ju())===s&&(e=null),e!==s&&va()!==s&&bo()!==s&&va()!==s&&ca()!==s&&va()!==s&&(n=mu())!==s&&va()!==s&&la()!==s?(r=t={name:t,stmt:n,columns:e}):(lu=r,r=s)):(lu=r,r=s),r}function ju(){var r,t,e,n,u,o,a,i;if(r=lu,ca()!==s)if(va()!==s)if((t=Ds())!==s){for(e=[],n=lu,(u=va())!==s&&(o=aa())!==s&&(a=va())!==s&&(i=Ds())!==s?n=u=[u,o,a,i]:(lu=n,n=s);n!==s;)e.push(n),n=lu,(u=va())!==s&&(o=aa())!==s&&(a=va())!==s&&(i=Ds())!==s?n=u=[u,o,a,i]:(lu=n,n=s);e!==s&&(n=va())!==s&&(u=la())!==s?(r=c(t,e)):(lu=r,r=s);}else lu=r,r=s;else lu=r,r=s;else lu=r,r=s;return r}function Yu(){var t,e,n,u,o,a,i,c,l,f,b;return t=lu,va()!==s?((e=Hu())===s&&(e=null),e!==s&&va()!==s&&function(){var t,e,n,u;t=lu,"select"===r.substr(lu,6).toLowerCase()?(e=r.substr(lu,6),lu+=6):(e=s,0===du&&Eu(Mt));e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?t=e=[e,n]:(lu=t,t=s)):(lu=t,t=s);return t}()!==s&&da()!==s?((n=function(){var r,t,e,n,u,o;if(r=lu,(t=Bu())!==s){for(e=[],n=lu,(u=va())!==s&&(o=Bu())!==s?n=u=[u,o]:(lu=n,n=s);n!==s;)e.push(n),n=lu,(u=va())!==s&&(o=Bu())!==s?n=u=[u,o]:(lu=n,n=s);e!==s?(t=function(r,t){const e=[r];for(let r=0,n=t.length;r<n;++r)e.push(t[r][1]);return e}(t,e),r=t):(lu=r,r=s);}else lu=r,r=s;return r}())===s&&(n=null),n!==s&&va()!==s?((u=So())===s&&(u=null),u!==s&&va()!==s&&(o=Xu())!==s&&va()!==s?((a=Ku())===s&&(a=null),a!==s&&va()!==s?((i=ss())===s&&(i=null),i!==s&&va()!==s?((c=function(){var t,e,n;t=lu,(e=function(){var t,e,n,u;t=lu,"group"===r.substr(lu,5).toLowerCase()?(e=r.substr(lu,5),lu+=5):(e=s,0===du&&Eu(le));e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?t=e=[e,n]:(lu=t,t=s)):(lu=t,t=s);return t}())!==s&&va()!==s&&To()!==s&&va()!==s&&(n=Ls())!==s?(e=n.value,t=e):(lu=t,t=s);return t}())===s&&(c=null),c!==s&&va()!==s?((l=function(){var t,e;t=lu,function(){var t,e,n,u;t=lu,"having"===r.substr(lu,6).toLowerCase()?(e=r.substr(lu,6),lu+=6):(e=s,0===du&&Eu(ve));e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?t=e=[e,n]:(lu=t,t=s)):(lu=t,t=s);return t}()!==s&&va()!==s&&(e=Es())!==s?(t=e):(lu=t,t=s);return t}())===s&&(l=null),l!==s&&va()!==s?((f=os())===s&&(f=null),f!==s&&va()!==s?((b=cs())===s&&(b=null),b!==s?(t=function(r,t,e,n,u,s,o,a,i,c){return u&&u.forEach(r=>r.table&&ja.add(`select::${r.db}::${r.table}`)),{with:r,type:"select",options:t,distinct:e,columns:n,from:u,where:s,groupby:o,having:a,orderby:i,limit:c}}(e,n,u,o,a,i,c,l,f,b)):(lu=t,t=s)):(lu=t,t=s)):(lu=t,t=s)):(lu=t,t=s)):(lu=t,t=s)):(lu=t,t=s)):(lu=t,t=s)):(lu=t,t=s)):(lu=t,t=s)):(lu=t,t=s),t}function Bu(){var e;return (e=function(){var t;"sql_calc_found_rows"===r.substr(lu,19).toLowerCase()?(t=r.substr(lu,19),lu+=19):(t=s,0===du&&Eu(Bn));return t}())===s&&((e=function(){var t;"sql_cache"===r.substr(lu,9).toLowerCase()?(t=r.substr(lu,9),lu+=9):(t=s,0===du&&Eu(Xn));return t}())===s&&(e=function(){var t;"sql_no_cache"===r.substr(lu,12).toLowerCase()?(t=r.substr(lu,12),lu+=12):(t=s,0===du&&Eu(Wn));return t}()),e===s&&(e=function(){var t;"sql_big_result"===r.substr(lu,14).toLowerCase()?(t=r.substr(lu,14),lu+=14):(t=s,0===du&&Eu(Kn));return t}())===s&&(e=function(){var t;"sql_small_result"===r.substr(lu,16).toLowerCase()?(t=r.substr(lu,16),lu+=16):(t=s,0===du&&Eu(Vn));return t}())===s&&(e=function(){var t;"sql_buffer_result"===r.substr(lu,17).toLowerCase()?(t=r.substr(lu,17),lu+=17):(t=s,0===du&&Eu(qn));return t}())),e!==s&&(e=e),e}function Xu(){var r,t,e,n,u,o,a,i,l,f;if(r=lu,(t=mo())===s&&(t=lu,(e=ia())!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?t=e=[e,n]:(lu=t,t=s)):(lu=t,t=s),t===s&&(t=ia())),t!==s){for(e=[],n=lu,(u=va())!==s&&(o=aa())!==s&&(a=va())!==s&&(i=Wu())!==s?n=u=[u,o,a,i]:(lu=n,n=s);n!==s;)e.push(n),n=lu,(u=va())!==s&&(o=aa())!==s&&(a=va())!==s&&(i=Wu())!==s?n=u=[u,o,a,i]:(lu=n,n=s);e!==s?(l=t,f=e,Ya.add("select::null::(.*)"),r=t=f&&f.length>0?(l[0]={expr:{type:"column_ref",table:null,column:"*"},as:null},$a(l[0],f)):l[0]):(lu=r,r=s);}else lu=r,r=s;if(r===s)if(r=lu,(t=Wu())!==s){for(e=[],n=lu,(u=va())!==s&&(o=aa())!==s&&(a=va())!==s&&(i=Wu())!==s?n=u=[u,o,a,i]:(lu=n,n=s);n!==s;)e.push(n),n=lu,(u=va())!==s&&(o=aa())!==s&&(a=va())!==s&&(i=Wu())!==s?n=u=[u,o,a,i]:(lu=n,n=s);e!==s?(r=t=c(t,e)):(lu=r,r=s);}else lu=r,r=s;return r}function Wu(){var r,t,e,n;return r=lu,(t=Us())!==s&&va()!==s&&(e=oa())!==s&&va()!==s&&ia()!==s?(n=t,Ya.add(`select::${n}::(.*)`),r=t={expr:{type:"column_ref",table:n,column:"*"},as:null}):(lu=r,r=s),r===s&&(r=lu,(t=Es())!==s&&va()!==s?((e=Vu())===s&&(e=null),e!==s?(r=t={expr:t,as:e}):(lu=r,r=s)):(lu=r,r=s)),r}function Vu(){var r,t,e;return r=lu,(t=bo())!==s&&va()!==s&&(e=function(){var r,t;r=lu,(t=ks())!==s?((function(r){if(!0===Ua[r.toUpperCase()])throw new Error("Error: "+JSON.stringify(r)+" is a reserved word, can not as alias clause");return !1}(t)?s:void 0)!==s?(r=t=t):(lu=r,r=s)):(lu=r,r=s);r===s&&(r=lu,(t=Ms())!==s&&(t=t),r=t);return r}())!==s?(r=t=e):(lu=r,r=s),r===s&&(r=lu,(t=bo())===s&&(t=null),t!==s&&va()!==s&&(e=Us())!==s?(r=t=e):(lu=r,r=s)),r}function Ku(){var t,e;return t=lu,function(){var t,e,n,u;t=lu,"from"===r.substr(lu,4).toLowerCase()?(e=r.substr(lu,4),lu+=4):(e=s,0===du&&Eu(Wt));e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?t=e=[e,n]:(lu=t,t=s)):(lu=t,t=s);return t}()!==s&&va()!==s&&(e=Qu())!==s?(t=e):(lu=t,t=s),t}function qu(){var r,t,e;return r=lu,(t=ns())!==s&&va()!==s&&eo()!==s&&va()!==s&&(e=ns())!==s?(r=t=[t,e]):(lu=r,r=s),r}function Zu(){var t,e;return t=lu,Ao()!==s&&va()!==s?("btree"===r.substr(lu,5).toLowerCase()?(e=r.substr(lu,5),lu+=5):(e=s,0===du&&Eu(cr)),e===s&&("hash"===r.substr(lu,4).toLowerCase()?(e=r.substr(lu,4),lu+=4):(e=s,0===du&&Eu(lr))),e!==s?(t={keyword:"using",type:e.toLowerCase()}):(lu=t,t=s)):(lu=t,t=s),t}function zu(){var r,t,e,n,u,o;if(r=lu,(t=Ju())!==s){for(e=[],n=lu,(u=va())!==s&&(o=Ju())!==s?n=u=[u,o]:(lu=n,n=s);n!==s;)e.push(n),n=lu,(u=va())!==s&&(o=Ju())!==s?n=u=[u,o]:(lu=n,n=s);e!==s?(r=t=function(r,t){const e=[r];for(let r=0;r<t.length;r++)e.push(t[r][1]);return e}(t,e)):(lu=r,r=s);}else lu=r,r=s;return r}function Ju(){var t,e,n,u,o,a;return t=lu,(e=function(){var t,e,n,u;t=lu,"key_block_size"===r.substr(lu,14).toLowerCase()?(e=r.substr(lu,14),lu+=14):(e=s,0===du&&Eu(V));e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?(t=e="KEY_BLOCK_SIZE"):(lu=t,t=s)):(lu=t,t=s);return t}())!==s&&va()!==s?((n=ra())===s&&(n=null),n!==s&&va()!==s&&(u=Ks())!==s?(o=n,a=u,t=e={type:e.toLowerCase(),symbol:o,expr:a}):(lu=t,t=s)):(lu=t,t=s),t===s&&(t=Zu())===s&&(t=lu,"with"===r.substr(lu,4).toLowerCase()?(e=r.substr(lu,4),lu+=4):(e=s,0===du&&Eu(fr)),e!==s&&va()!==s?("parser"===r.substr(lu,6).toLowerCase()?(n=r.substr(lu,6),lu+=6):(n=s,0===du&&Eu(br)),n!==s&&va()!==s&&(u=ks())!==s?(t=e={type:"with parser",expr:u}):(lu=t,t=s)):(lu=t,t=s),t===s&&(t=lu,"visible"===r.substr(lu,7).toLowerCase()?(e=r.substr(lu,7),lu+=7):(e=s,0===du&&Eu(vr)),e===s&&("invisible"===r.substr(lu,9).toLowerCase()?(e=r.substr(lu,9),lu+=9):(e=s,0===du&&Eu(dr))),e!==s&&(e=function(r){return {type:r.toLowerCase(),expr:r.toLowerCase()}}(e)),(t=e)===s&&(t=Ca()))),t}function Qu(){var r,t,e,n;if(r=lu,(t=ts())!==s){for(e=[],n=rs();n!==s;)e.push(n),n=rs();e!==s?(r=t=Lr(t,e)):(lu=r,r=s);}else lu=r,r=s;return r}function rs(){var r,t,e;return r=lu,va()!==s&&(t=aa())!==s&&va()!==s&&(e=ts())!==s?(r=e):(lu=r,r=s),r===s&&(r=lu,va()!==s&&(t=function(){var r,t,e,n,u,o,a,i,c,l,f;if(r=lu,(t=es())!==s)if(va()!==s)if((e=ts())!==s)if(va()!==s)if((n=Ao())!==s)if(va()!==s)if(ca()!==s)if(va()!==s)if((u=ks())!==s){for(o=[],a=lu,(i=va())!==s&&(c=aa())!==s&&(l=va())!==s&&(f=ks())!==s?a=i=[i,c,l,f]:(lu=a,a=s);a!==s;)o.push(a),a=lu,(i=va())!==s&&(c=aa())!==s&&(l=va())!==s&&(f=ks())!==s?a=i=[i,c,l,f]:(lu=a,a=s);o!==s&&(a=va())!==s&&(i=la())!==s?(b=t,d=u,L=o,(v=e).join=b,v.using=$a(d,L),r=t=v):(lu=r,r=s);}else lu=r,r=s;else lu=r,r=s;else lu=r,r=s;else lu=r,r=s;else lu=r,r=s;else lu=r,r=s;else lu=r,r=s;else lu=r,r=s;else lu=r,r=s;var b,v,d,L;r===s&&(r=lu,(t=es())!==s&&va()!==s&&(e=ts())!==s&&va()!==s?((n=us())===s&&(n=null),n!==s?(t=function(r,t,e){return t.join=r,t.on=e,t}(t,e,n),r=t):(lu=r,r=s)):(lu=r,r=s),r===s&&(r=lu,(t=es())!==s&&va()!==s&&(e=ca())!==s&&va()!==s&&(n=mu())!==s&&va()!==s&&la()!==s&&va()!==s?((u=Vu())===s&&(u=null),u!==s&&(o=va())!==s?((a=us())===s&&(a=null),a!==s?(t=function(r,t,e,n){return t.parentheses=!0,{expr:t,as:e,join:r,on:n}}(t,n,u,a),r=t):(lu=r,r=s)):(lu=r,r=s)):(lu=r,r=s)));return r}())!==s?(r=t):(lu=r,r=s)),r}function ts(){var t,e,n,u,o,a;return t=lu,(e=function(){var t;"dual"===r.substr(lu,4).toLowerCase()?(t=r.substr(lu,4),lu+=4):(t=s,0===du&&Eu(Dn));return t}())!==s&&(e={type:"dual"}),(t=e)===s&&(t=lu,(e=ns())!==s&&va()!==s?((n=Vu())===s&&(n=null),n!==s?(a=n,t=e="var"===(o=e).type?(o.as=a,o):{db:o.db,table:o.table,as:a}):(lu=t,t=s)):(lu=t,t=s),t===s&&(t=lu,(e=ca())!==s&&va()!==s&&(n=mu())!==s&&va()!==s&&la()!==s&&va()!==s?((u=Vu())===s&&(u=null),u!==s?(t=e=function(r,t){return r.parentheses=!0,{expr:r,as:t}}(n,u)):(lu=t,t=s)):(lu=t,t=s))),t}function es(){var t,e,n,u;return t=lu,(e=function(){var t,e,n,u;t=lu,"left"===r.substr(lu,4).toLowerCase()?(e=r.substr(lu,4),lu+=4):(e=s,0===du&&Eu(Qt));e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?t=e=[e,n]:(lu=t,t=s)):(lu=t,t=s);return t}())!==s&&(n=va())!==s?((u=wo())===s&&(u=null),u!==s&&va()!==s&&po()!==s?(t=e="LEFT JOIN"):(lu=t,t=s)):(lu=t,t=s),t===s&&(t=lu,(e=function(){var t,e,n,u;t=lu,"right"===r.substr(lu,5).toLowerCase()?(e=r.substr(lu,5),lu+=5):(e=s,0===du&&Eu(re));e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?t=e=[e,n]:(lu=t,t=s)):(lu=t,t=s);return t}())!==s&&(n=va())!==s?((u=wo())===s&&(u=null),u!==s&&va()!==s&&po()!==s?(t=e="RIGHT JOIN"):(lu=t,t=s)):(lu=t,t=s),t===s&&(t=lu,(e=function(){var t,e,n,u;t=lu,"full"===r.substr(lu,4).toLowerCase()?(e=r.substr(lu,4),lu+=4):(e=s,0===du&&Eu(te));e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?t=e=[e,n]:(lu=t,t=s)):(lu=t,t=s);return t}())!==s&&(n=va())!==s?((u=wo())===s&&(u=null),u!==s&&va()!==s&&po()!==s?(t=e="FULL JOIN"):(lu=t,t=s)):(lu=t,t=s),t===s&&(t=lu,e=lu,(n=function(){var t,e,n,u;t=lu,"inner"===r.substr(lu,5).toLowerCase()?(e=r.substr(lu,5),lu+=5):(e=s,0===du&&Eu(ee));e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?t=e=[e,n]:(lu=t,t=s)):(lu=t,t=s);return t}())!==s&&(u=va())!==s?e=n=[n,u]:(lu=e,e=s),e===s&&(e=null),e!==s&&(n=po())!==s?(t=e="INNER JOIN"):(lu=t,t=s)))),t}function ns(){var r,t,e,n,u,o,a,i;return r=lu,(t=Us())!==s?(e=lu,(n=va())!==s&&(u=oa())!==s&&(o=va())!==s&&(a=Us())!==s?e=n=[n,u,o,a]:(lu=e,e=s),e===s&&(e=null),e!==s?(r=t=function(r,t){const e={db:null,table:r};return null!==t&&(e.db=r,e.table=t[3]),e}(t,e)):(lu=r,r=s)):(lu=r,r=s),r===s&&(r=lu,(t=_a())!==s&&((i=t).db=null,i.table=i.name,t=i),r=t),r}function us(){var r,t;return r=lu,Co()!==s&&va()!==s&&(t=Es())!==s?(r=t):(lu=r,r=s),r}function ss(){var t,e;return t=lu,function(){var t,e,n,u;t=lu,"where"===r.substr(lu,5).toLowerCase()?(e=r.substr(lu,5),lu+=5):(e=s,0===du&&Eu(ce));e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?t=e=[e,n]:(lu=t,t=s)):(lu=t,t=s);return t}()!==s&&va()!==s?((e=function(){var r,t,e,n,u,o,a,i;if(r=lu,(t=hs())!==s){for(e=[],n=lu,(u=va())!==s?((o=xo())===s&&(o=Uo()),o!==s&&(a=va())!==s&&(i=hs())!==s?n=u=[u,o,a,i]:(lu=n,n=s)):(lu=n,n=s);n!==s;)e.push(n),n=lu,(u=va())!==s?((o=xo())===s&&(o=Uo()),o!==s&&(a=va())!==s&&(i=hs())!==s?n=u=[u,o,a,i]:(lu=n,n=s)):(lu=n,n=s);e!==s?(t=Fa(t,e),r=t):(lu=r,r=s);}else lu=r,r=s;return r}())===s&&(e=Es()),e!==s?(t=e):(lu=t,t=s)):(lu=t,t=s),t}function os(){var t,e;return t=lu,function(){var t,e,n,u;t=lu,"order"===r.substr(lu,5).toLowerCase()?(e=r.substr(lu,5),lu+=5):(e=s,0===du&&Eu(be));e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?t=e=[e,n]:(lu=t,t=s)):(lu=t,t=s);return t}()!==s&&va()!==s&&To()!==s&&va()!==s&&(e=function(){var r,t,e,n,u,o,a,i;if(r=lu,(t=as())!==s){for(e=[],n=lu,(u=va())!==s&&(o=aa())!==s&&(a=va())!==s&&(i=as())!==s?n=u=[u,o,a,i]:(lu=n,n=s);n!==s;)e.push(n),n=lu,(u=va())!==s&&(o=aa())!==s&&(a=va())!==s&&(i=as())!==s?n=u=[u,o,a,i]:(lu=n,n=s);e!==s?(t=c(t,e),r=t):(lu=r,r=s);}else lu=r,r=s;return r}())!==s?(t=e):(lu=t,t=s),t}function as(){var t,e,n;return t=lu,(e=Es())!==s&&va()!==s?((n=function(){var t,e,n,u;t=lu,"desc"===r.substr(lu,4).toLowerCase()?(e=r.substr(lu,4),lu+=4):(e=s,0===du&&Eu(pe));e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?(t=e="DESC"):(lu=t,t=s)):(lu=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=lu,"asc"===r.substr(lu,3).toLowerCase()?(e=r.substr(lu,3),lu+=3):(e=s,0===du&&Eu(Ce));e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?(t=e="ASC"):(lu=t,t=s)):(lu=t,t=s);return t}()),n===s&&(n=null),n!==s?(t=e=function(r,t){const e={expr:r,type:"ASC"};return "DESC"===t&&(e.type="DESC"),e}(e,n)):(lu=t,t=s)):(lu=t,t=s),t}function is(){var r;return (r=Ks())===s&&(r=Hs()),r}function cs(){var t,e,n,u,o,a;return t=lu,function(){var t,e,n,u;t=lu,"limit"===r.substr(lu,5).toLowerCase()?(e=r.substr(lu,5),lu+=5):(e=s,0===du&&Eu(de));e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?t=e=[e,n]:(lu=t,t=s)):(lu=t,t=s);return t}()!==s&&va()!==s&&(e=is())!==s&&va()!==s?(n=lu,(u=aa())===s&&(u=function(){var t,e,n,u;t=lu,"offset"===r.substr(lu,6).toLowerCase()?(e=r.substr(lu,6),lu+=6):(e=s,0===du&&Eu(Le));e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?(t=e="OFFSET"):(lu=t,t=s)):(lu=t,t=s);return t}()),u!==s&&(o=va())!==s&&(a=is())!==s?n=u=[u,o,a]:(lu=n,n=s),n===s&&(n=null),n!==s?(t=function(r,t){const e=[r];return t&&e.push(t[2]),{seperator:t&&t[0]&&t[0].toLowerCase()||"",value:e}}(e,n)):(lu=t,t=s)):(lu=t,t=s),t}function ls(){var t,e,n,u,o,a,i,c,l;return t=lu,e=lu,(n=Us())!==s&&(u=va())!==s&&(o=oa())!==s?e=n=[n,u,o]:(lu=e,e=s),e===s&&(e=null),e!==s&&(n=va())!==s&&(u=Ds())!==s&&(o=va())!==s?(61===r.charCodeAt(lu)?(a="=",lu++):(a=s,0===du&&Eu(Cr)),a!==s&&va()!==s&&(i=Ns())!==s?(t=e={column:u,value:i,table:(l=e)&&l[0]}):(lu=t,t=s)):(lu=t,t=s),t===s&&(t=lu,e=lu,(n=Us())!==s&&(u=va())!==s&&(o=oa())!==s?e=n=[n,u,o]:(lu=e,e=s),e===s&&(e=null),e!==s&&(n=va())!==s&&(u=Ds())!==s&&(o=va())!==s?(61===r.charCodeAt(lu)?(a="=",lu++):(a=s,0===du&&Eu(Cr)),a!==s&&va()!==s&&(i=ho())!==s&&va()!==s&&ca()!==s&&va()!==s&&(c=xs())!==s&&va()!==s&&la()!==s?(t=e=function(r,t,e){return {column:t,value:e,table:r&&r[0],keyword:"values"}}(e,u,c)):(lu=t,t=s)):(lu=t,t=s)),t}function fs(){var r;return (r=function(){var r,t;r=lu,ho()!==s&&va()!==s&&(t=function(){var r,t,e,n,u,o,a,i;if(r=lu,(t=ds())!==s){for(e=[],n=lu,(u=va())!==s&&(o=aa())!==s&&(a=va())!==s&&(i=ds())!==s?n=u=[u,o,a,i]:(lu=n,n=s);n!==s;)e.push(n),n=lu,(u=va())!==s&&(o=aa())!==s&&(a=va())!==s&&(i=ds())!==s?n=u=[u,o,a,i]:(lu=n,n=s);e!==s?(t=c(t,e),r=t):(lu=r,r=s);}else lu=r,r=s;return r}())!==s?(r=t):(lu=r,r=s);return r}())===s&&(r=Yu()),r}function bs(){var r,t,e,n,u,o,a,i,c;if(r=lu,co()!==s)if(va()!==s)if((t=ca())!==s)if(va()!==s)if((e=ks())!==s){for(n=[],u=lu,(o=va())!==s&&(a=aa())!==s&&(i=va())!==s&&(c=ks())!==s?u=o=[o,a,i,c]:(lu=u,u=s);u!==s;)n.push(u),u=lu,(o=va())!==s&&(a=aa())!==s&&(i=va())!==s&&(c=ks())!==s?u=o=[o,a,i,c]:(lu=u,u=s);n!==s&&(u=va())!==s&&(o=la())!==s?(r=$a(e,n)):(lu=r,r=s);}else lu=r,r=s;else lu=r,r=s;else lu=r,r=s;else lu=r,r=s;else lu=r,r=s;return r===s&&(r=lu,co()!==s&&va()!==s&&(t=ds())!==s?(r=t):(lu=r,r=s)),r}function vs(){var t,e;return t=lu,(e=function(){var t,e,n,u;t=lu,"insert"===r.substr(lu,6).toLowerCase()?(e=r.substr(lu,6),lu+=6):(e=s,0===du&&Eu(Ft));e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?t=e=[e,n]:(lu=t,t=s)):(lu=t,t=s);return t}())!==s&&(e="insert"),(t=e)===s&&(t=lu,(e=ao())!==s&&(e="replace"),t=e),t}function ds(){var r,t;return r=lu,ca()!==s&&va()!==s&&(t=Ls())!==s&&va()!==s&&la()!==s?(r=t):(lu=r,r=s),r}function Ls(){var r,t,e,n,u,o,a,i;if(r=lu,(t=Es())!==s){for(e=[],n=lu,(u=va())!==s&&(o=aa())!==s&&(a=va())!==s&&(i=Es())!==s?n=u=[u,o,a,i]:(lu=n,n=s);n!==s;)e.push(n),n=lu,(u=va())!==s&&(o=aa())!==s&&(a=va())!==s&&(i=Es())!==s?n=u=[u,o,a,i]:(lu=n,n=s);e!==s?(r=t=function(r,t){const e={type:"expr_list"};return e.value=$a(r,t),e}(t,e)):(lu=r,r=s);}else lu=r,r=s;return r}function Cs(){var t,e,n;return t=lu,function(){var t,e,n,u;t=lu,"interval"===r.substr(lu,8).toLowerCase()?(e=r.substr(lu,8),lu+=8):(e=s,0===du&&Eu(dn));e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?(t=e="INTERVAL"):(lu=t,t=s)):(lu=t,t=s);return t}()!==s&&va()!==s&&(e=Es())!==s&&va()!==s&&(n=function(){var t;(t=function(){var t,e,n,u;t=lu,"year"===r.substr(lu,4).toLowerCase()?(e=r.substr(lu,4),lu+=4):(e=s,0===du&&Eu(Ln));e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?(t=e="YEAR"):(lu=t,t=s)):(lu=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=lu,"month"===r.substr(lu,5).toLowerCase()?(e=r.substr(lu,5),lu+=5):(e=s,0===du&&Eu(Cn));e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?(t=e="MONTH"):(lu=t,t=s)):(lu=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=lu,"day"===r.substr(lu,3).toLowerCase()?(e=r.substr(lu,3),lu+=3):(e=s,0===du&&Eu(pn));e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?(t=e="DAY"):(lu=t,t=s)):(lu=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=lu,"hour"===r.substr(lu,4).toLowerCase()?(e=r.substr(lu,4),lu+=4):(e=s,0===du&&Eu(wn));e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?(t=e="HOUR"):(lu=t,t=s)):(lu=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=lu,"minute"===r.substr(lu,6).toLowerCase()?(e=r.substr(lu,6),lu+=6):(e=s,0===du&&Eu(En));e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?(t=e="MINUTE"):(lu=t,t=s)):(lu=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=lu,"second"===r.substr(lu,6).toLowerCase()?(e=r.substr(lu,6),lu+=6):(e=s,0===du&&Eu(hn));e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?(t=e="SECOND"):(lu=t,t=s)):(lu=t,t=s);return t}());return t}())!==s?(t={type:"interval",expr:e,unit:n.toLowerCase()}):(lu=t,t=s),t}function ps(){var t,e,n,u,o,a,i,c,l;if(t=lu,Mo()!==s)if(va()!==s)if((e=Es())===s&&(e=null),e!==s)if(va()!==s){if(n=[],(u=ws())!==s)for(;u!==s;)n.push(u),u=ws();else n=s;n!==s&&(u=va())!==s?((o=function(){var t,e;t=lu,function(){var t,e,n,u;t=lu,"else"===r.substr(lu,4).toLowerCase()?(e=r.substr(lu,4),lu+=4):(e=s,0===du&&Eu($e));e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?t=e=[e,n]:(lu=t,t=s)):(lu=t,t=s);return t}()!==s&&va()!==s&&(e=Es())!==s?(t={type:"else",result:e}):(lu=t,t=s);return t}())===s&&(o=null),o!==s&&va()!==s&&function(){var t,e,n,u;t=lu,"end"===r.substr(lu,3).toLowerCase()?(e=r.substr(lu,3),lu+=3):(e=s,0===du&&Eu(Fe));e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?t=e=[e,n]:(lu=t,t=s)):(lu=t,t=s);return t}()!==s&&va()!==s?((a=Mo())===s&&(a=null),a!==s?(i=e,c=n,(l=o)&&c.push(l),t={type:"case",expr:i||null,args:c}):(lu=t,t=s)):(lu=t,t=s)):(lu=t,t=s);}else lu=t,t=s;else lu=t,t=s;else lu=t,t=s;else lu=t,t=s;return t}function ws(){var t,e,n;return t=lu,function(){var t,e,n,u;t=lu,"when"===r.substr(lu,4).toLowerCase()?(e=r.substr(lu,4),lu+=4):(e=s,0===du&&Eu(De));e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?t=e=[e,n]:(lu=t,t=s)):(lu=t,t=s);return t}()!==s&&va()!==s&&(e=Es())!==s&&va()!==s&&function(){var t,e,n,u;t=lu,"then"===r.substr(lu,4).toLowerCase()?(e=r.substr(lu,4),lu+=4):(e=s,0===du&&Eu(ke));e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?t=e=[e,n]:(lu=t,t=s)):(lu=t,t=s);return t}()!==s&&va()!==s&&(n=Es())!==s?(t={type:"when",cond:e,result:n}):(lu=t,t=s),t}function Es(){var r;return (r=function(){var r,t,e,n,u,o,a,i;if(r=lu,(t=Os())!==s){if(e=[],n=lu,(u=va())!==s&&(o=ba())!==s&&(a=va())!==s&&(i=Os())!==s?n=u=[u,o,a,i]:(lu=n,n=s),n!==s)for(;n!==s;)e.push(n),n=lu,(u=va())!==s&&(o=ba())!==s&&(a=va())!==s&&(i=Os())!==s?n=u=[u,o,a,i]:(lu=n,n=s);else e=s;e!==s?(t=pr(t,e),r=t):(lu=r,r=s);}else lu=r,r=s;return r}())===s&&(r=function(){var r,t,e,n,u,o;if(r=lu,(t=Rs())!==s){if(e=[],n=lu,(u=va())!==s&&(o=Os())!==s?n=u=[u,o]:(lu=n,n=s),n!==s)for(;n!==s;)e.push(n),n=lu,(u=va())!==s&&(o=Os())!==s?n=u=[u,o]:(lu=n,n=s);else e=s;e!==s?(t=Ma(t,e[0][1]),r=t):(lu=r,r=s);}else lu=r,r=s;return r}())===s&&(r=As())===s&&(r=Pu()),r}function hs(){var r,t,e,n,u,o;return r=lu,(t=ca())===s&&(t=null),t!==s&&va()!==s&&(e=As())!==s&&va()!==s?((n=la())===s&&(n=null),n!==s?((function(r,t,e){if(r&&!e||!r&&e)return !0}(t,0,n)?s:void 0)!==s?(u=e,o=n,t&&o&&(u.parentheses=!0),r=t=u):(lu=r,r=s)):(lu=r,r=s)):(lu=r,r=s),r}function As(){var r,t,e,n,u,o,a,i;if(r=lu,(t=ys())!==s){for(e=[],n=lu,(u=da())!==s&&(o=Uo())!==s&&(a=va())!==s&&(i=ys())!==s?n=u=[u,o,a,i]:(lu=n,n=s);n!==s;)e.push(n),n=lu,(u=da())!==s&&(o=Uo())!==s&&(a=va())!==s&&(i=ys())!==s?n=u=[u,o,a,i]:(lu=n,n=s);e!==s?(r=t=wr(t,e)):(lu=r,r=s);}else lu=r,r=s;return r}function ys(){var r,t,e,n,u,o,a,i;if(r=lu,(t=Ts())!==s){for(e=[],n=lu,(u=da())!==s&&(o=xo())!==s&&(a=va())!==s&&(i=Ts())!==s?n=u=[u,o,a,i]:(lu=n,n=s);n!==s;)e.push(n),n=lu,(u=da())!==s&&(o=xo())!==s&&(a=va())!==s&&(i=Ts())!==s?n=u=[u,o,a,i]:(lu=n,n=s);e!==s?(r=t=pr(t,e)):(lu=r,r=s);}else lu=r,r=s;return r}function Ts(){var t,e,n,u,o;return (t=ms())===s&&(t=function(){var r,t,e;r=lu,(t=function(){var r,t,e,n,u;r=lu,t=lu,(e=Oo())!==s&&(n=va())!==s&&(u=go())!==s?t=e=[e,n,u]:(lu=t,t=s);t!==s&&(t=hr(t));(r=t)===s&&(r=go());return r}())!==s&&va()!==s&&ca()!==s&&va()!==s&&(e=mu())!==s&&va()!==s&&la()!==s?(n=t,(u=e).parentheses=!0,t=Ma(n,u),r=t):(lu=r,r=s);var n,u;return r}())===s&&(t=lu,(e=Oo())===s&&(e=lu,33===r.charCodeAt(lu)?(n="!",lu++):(n=s,0===du&&Eu(Er)),n!==s?(u=lu,du++,61===r.charCodeAt(lu)?(o="=",lu++):(o=s,0===du&&Eu(Cr)),du--,o===s?u=void 0:(lu=u,u=s),u!==s?e=n=[n,u]:(lu=e,e=s)):(lu=e,e=s)),e!==s&&(n=va())!==s&&(u=Ts())!==s?(t=e=Ma("NOT",u)):(lu=t,t=s)),t}function ms(){var r,t,e,n,u;return r=lu,(t=Ns())!==s&&va()!==s?((e=function(){var r;(r=function(){var t,e,n,u,o,a;t=[],e=lu,(n=va())!==s&&(u=Ss())!==s&&(o=va())!==s&&(a=Ns())!==s?e=n=[n,u,o,a]:(lu=e,e=s);if(e!==s)for(;e!==s;)t.push(e),e=lu,(n=va())!==s&&(u=Ss())!==s&&(o=va())!==s&&(a=Ns())!==s?e=n=[n,u,o,a]:(lu=e,e=s);else t=s;t!==s&&(t={type:"arithmetic",tail:t});return t}())===s&&(r=function(){var r,t,e,n;r=lu,(t=Is())!==s&&va()!==s&&(e=ca())!==s&&va()!==s&&(n=Ls())!==s&&va()!==s&&la()!==s?(r=t={op:t,right:n}):(lu=r,r=s);r===s&&(r=lu,(t=Is())!==s&&va()!==s?((e=_a())===s&&(e=Bs()),e!==s?(t=function(r,t){return {op:r,right:t}}(t,e),r=t):(lu=r,r=s)):(lu=r,r=s));return r}())===s&&(r=function(){var r,t,e,n;r=lu,(t=function(){var r,t,e,n,u;r=lu,t=lu,(e=Oo())!==s&&(n=va())!==s&&(u=Io())!==s?t=e=[e,n,u]:(lu=t,t=s);t!==s&&(t=hr(t));(r=t)===s&&(r=Io());return r}())!==s&&va()!==s&&(e=Ns())!==s&&va()!==s&&xo()!==s&&va()!==s&&(n=Ns())!==s?(r=t={op:t,right:{type:"expr_list",value:[e,n]}}):(lu=r,r=s);return r}())===s&&(r=function(){var r,t,e,n,u;r=lu,(t=Ro())!==s&&(e=va())!==s&&(n=Ns())!==s?(r=t={op:"IS",right:n}):(lu=r,r=s);r===s&&(r=lu,t=lu,(e=Ro())!==s&&(n=va())!==s&&(u=Oo())!==s?t=e=[e,n,u]:(lu=t,t=s),t!==s&&(e=va())!==s&&(n=Ns())!==s?(t=function(r){return {op:"IS NOT",right:r}}(n),r=t):(lu=r,r=s));return r}())===s&&(r=function(){var r,t,e;r=lu,(t=function(){var r,t,e,n,u;r=lu,t=lu,(e=Oo())!==s&&(n=va())!==s&&(u=_o())!==s?t=e=[e,n,u]:(lu=t,t=s);t!==s&&(t=hr(t));(r=t)===s&&(r=_o());return r}())!==s&&va()!==s?((e=js())===s&&(e=ms()),e!==s?(r=t={op:t,right:e}):(lu=r,r=s)):(lu=r,r=s);return r}());return r}())===s&&(e=null),e!==s?(n=t,r=t=null===(u=e)?n:"arithmetic"===u.type?Fa(n,u.tail):Da(u.op,n,u.right)):(lu=r,r=s)):(lu=r,r=s),r===s&&(r=Bs())===s&&(r=xs()),r}function Ss(){var t;return ">="===r.substr(lu,2)?(t=">=",lu+=2):(t=s,0===du&&Eu(Ar)),t===s&&(62===r.charCodeAt(lu)?(t=">",lu++):(t=s,0===du&&Eu(yr)),t===s&&("<="===r.substr(lu,2)?(t="<=",lu+=2):(t=s,0===du&&Eu(Tr)),t===s&&("<>"===r.substr(lu,2)?(t="<>",lu+=2):(t=s,0===du&&Eu(mr)),t===s&&(60===r.charCodeAt(lu)?(t="<",lu++):(t=s,0===du&&Eu(Sr)),t===s&&(61===r.charCodeAt(lu)?(t="=",lu++):(t=s,0===du&&Eu(Cr)),t===s&&("!="===r.substr(lu,2)?(t="!=",lu+=2):(t=s,0===du&&Eu(Ir)))))))),t}function Is(){var r,t,e,n,u;return r=lu,t=lu,(e=Oo())!==s&&(n=va())!==s&&(u=No())!==s?t=e=[e,n,u]:(lu=t,t=s),t!==s&&(t=hr(t)),(r=t)===s&&(r=No()),r}function Ns(){var r,t,e,n,u,o,a,i;if(r=lu,(t=_s())!==s){for(e=[],n=lu,(u=va())!==s&&(o=Rs())!==s&&(a=va())!==s&&(i=_s())!==s?n=u=[u,o,a,i]:(lu=n,n=s);n!==s;)e.push(n),n=lu,(u=va())!==s&&(o=Rs())!==s&&(a=va())!==s&&(i=_s())!==s?n=u=[u,o,a,i]:(lu=n,n=s);e!==s?(r=t=wr(t,e)):(lu=r,r=s);}else lu=r,r=s;return r}function Rs(){var t;return 43===r.charCodeAt(lu)?(t="+",lu++):(t=s,0===du&&Eu(Nr)),t===s&&(45===r.charCodeAt(lu)?(t="-",lu++):(t=s,0===du&&Eu(Rr))),t}function _s(){var r,t,e,n,u,o,a,i;if(r=lu,(t=Os())!==s){for(e=[],n=lu,(u=va())!==s&&(o=gs())!==s&&(a=va())!==s&&(i=Os())!==s?n=u=[u,o,a,i]:(lu=n,n=s);n!==s;)e.push(n),n=lu,(u=va())!==s&&(o=gs())!==s&&(a=va())!==s&&(i=Os())!==s?n=u=[u,o,a,i]:(lu=n,n=s);e!==s?(r=t=Fa(t,e)):(lu=r,r=s);}else lu=r,r=s;return r}function gs(){var t;return 42===r.charCodeAt(lu)?(t="*",lu++):(t=s,0===du&&Eu(_r)),t===s&&(47===r.charCodeAt(lu)?(t="/",lu++):(t=s,0===du&&Eu(gr)),t===s&&(37===r.charCodeAt(lu)?(t="%",lu++):(t=s,0===du&&Eu(Or)))),t}function Os(){var t,e,n,u,o,a,i,c,l,f,b;if((t=function(){var t,e,n,u,o,a,i;t=lu,(e=Do())!==s&&va()!==s&&ca()!==s&&va()!==s&&(n=Es())!==s&&va()!==s&&bo()!==s&&va()!==s&&(u=Oa())!==s&&va()!==s&&(o=la())!==s?(t=e={type:"cast",expr:n,symbol:"as",target:u}):(lu=t,t=s);t===s&&(t=lu,(e=Do())!==s&&va()!==s&&ca()!==s&&va()!==s&&(n=Es())!==s&&va()!==s&&bo()!==s&&va()!==s&&(u=Po())!==s&&va()!==s&&(o=ca())!==s&&va()!==s&&(a=qs())!==s&&va()!==s&&la()!==s&&va()!==s&&(i=la())!==s?(e=function(r,t){return {type:"cast",expr:r,symbol:"as",target:{dataType:"DECIMAL("+t+")"}}}(n,a),t=e):(lu=t,t=s),t===s&&(t=lu,(e=Do())!==s&&va()!==s&&ca()!==s&&va()!==s&&(n=Es())!==s&&va()!==s&&bo()!==s&&va()!==s&&(u=Po())!==s&&va()!==s&&(o=ca())!==s&&va()!==s&&(a=qs())!==s&&va()!==s&&aa()!==s&&va()!==s&&(i=qs())!==s&&va()!==s&&la()!==s&&va()!==s&&la()!==s?(e=function(r,t,e){return {type:"cast",expr:r,symbol:"as",target:{dataType:"DECIMAL("+t+", "+e+")"}}}(n,a,i),t=e):(lu=t,t=s),t===s&&(t=lu,(e=Do())!==s&&va()!==s&&ca()!==s&&va()!==s&&(n=Es())!==s&&va()!==s&&bo()!==s&&va()!==s&&(u=function(){var t;(t=function(){var t,e,n,u;t=lu,"signed"===r.substr(lu,6).toLowerCase()?(e=r.substr(lu,6),lu+=6):(e=s,0===du&&Eu(Be));e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?(t=e="SIGNED"):(lu=t,t=s)):(lu=t,t=s);return t}())===s&&(t=Ho());return t}())!==s&&va()!==s?((o=jo())===s&&(o=null),o!==s&&va()!==s&&(a=la())!==s?(e=function(r,t,e){return {type:"cast",expr:r,symbol:"as",target:{dataType:t+(e?" "+e:"")}}}(n,u,o),t=e):(lu=t,t=s)):(lu=t,t=s))));return t}())===s&&(t=js())===s&&(t=function(){var t;(t=function(){var t,e,n,u;t=lu,(e=function(){var t,e,n,u;t=lu,"count"===r.substr(lu,5).toLowerCase()?(e=r.substr(lu,5),lu+=5):(e=s,0===du&&Eu(Re));e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?(t=e="COUNT"):(lu=t,t=s)):(lu=t,t=s);return t}())!==s&&va()!==s&&ca()!==s&&va()!==s&&(n=function(){var t,e,n;t=lu,(e=function(){var e;42===r.charCodeAt(lu)?(e="*",lu++):(e=s,0===du&&Eu(_r));e!==s&&(e={type:"star",value:"*"});return e}())!==s&&(e={expr:e});(t=e)===s&&(t=lu,(e=So())===s&&(e=null),e!==s&&va()!==s&&(n=xs())!==s?(t=e={distinct:e,expr:n}):(lu=t,t=s));return t}())!==s&&va()!==s&&la()!==s&&va()!==s?((u=Gs())===s&&(u=null),u!==s?(e=function(r,t,e){return {type:"aggr_func",name:r,args:t,over:e}}(e,n,u),t=e):(lu=t,t=s)):(lu=t,t=s);return t}())===s&&(t=function(){var t,e,n;t=lu,(e=function(){var t;(t=function(){var t,e,n,u;t=lu,"sum"===r.substr(lu,3).toLowerCase()?(e=r.substr(lu,3),lu+=3):(e=s,0===du&&Eu(Oe));e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?(t=e="SUM"):(lu=t,t=s)):(lu=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=lu,"max"===r.substr(lu,3).toLowerCase()?(e=r.substr(lu,3),lu+=3):(e=s,0===du&&Eu(_e));e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?(t=e="MAX"):(lu=t,t=s)):(lu=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=lu,"min"===r.substr(lu,3).toLowerCase()?(e=r.substr(lu,3),lu+=3):(e=s,0===du&&Eu(ge));e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?(t=e="MIN"):(lu=t,t=s)):(lu=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=lu,"avg"===r.substr(lu,3).toLowerCase()?(e=r.substr(lu,3),lu+=3):(e=s,0===du&&Eu(xe));e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?(t=e="AVG"):(lu=t,t=s)):(lu=t,t=s);return t}());return t}())!==s&&va()!==s&&ca()!==s&&va()!==s&&(n=Ns())!==s&&va()!==s&&la()!==s?(t=e={type:"aggr_func",name:e,args:{expr:n}}):(lu=t,t=s);return t}());return t}())===s&&(t=function(){var t,e,n,u;t=lu,(e=Ia())!==s&&va()!==s&&ca()!==s&&va()!==s?((n=Ls())===s&&(n=null),n!==s&&va()!==s&&la()!==s&&va()!==s?((u=Gs())===s&&(u=null),u!==s?(e=Zr(e,n,u),t=e):(lu=t,t=s)):(lu=t,t=s)):(lu=t,t=s);t===s&&(t=lu,(e=function(){var t;(t=function(){var t,e,n,u;t=lu,"current_date"===r.substr(lu,12).toLowerCase()?(e=r.substr(lu,12),lu+=12):(e=s,0===du&&Eu(vn));e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?(t=e="CURRENT_DATE"):(lu=t,t=s)):(lu=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=lu,"current_time"===r.substr(lu,12).toLowerCase()?(e=r.substr(lu,12),lu+=12):(e=s,0===du&&Eu(An));e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?(t=e="CURRENT_TIME"):(lu=t,t=s)):(lu=t,t=s);return t}())===s&&(t=Jo())===s&&(t=function(){var t,e,n,u;t=lu,"current_user"===r.substr(lu,12).toLowerCase()?(e=r.substr(lu,12),lu+=12):(e=s,0===du&&Eu(Tn));e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?(t=e="CURRENT_USER"):(lu=t,t=s)):(lu=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=lu,"user"===r.substr(lu,4).toLowerCase()?(e=r.substr(lu,4),lu+=4):(e=s,0===du&&Eu(bn));e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?(t=e="USER"):(lu=t,t=s)):(lu=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=lu,"session_user"===r.substr(lu,12).toLowerCase()?(e=r.substr(lu,12),lu+=12):(e=s,0===du&&Eu(mn));e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?(t=e="SESSION_USER"):(lu=t,t=s)):(lu=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=lu,"system_user"===r.substr(lu,11).toLowerCase()?(e=r.substr(lu,11),lu+=11):(e=s,0===du&&Eu(Sn));e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?(t=e="SYSTEM_USER"):(lu=t,t=s)):(lu=t,t=s);return t}());return t}())!==s&&va()!==s&&ca()!==s&&va()!==s?((n=Ls())===s&&(n=null),n!==s&&va()!==s&&la()!==s&&va()!==s?((u=Gs())===s&&(u=null),u!==s?(e=Zr(e,n,u),t=e):(lu=t,t=s)):(lu=t,t=s)):(lu=t,t=s));return t}())===s&&(t=ps())===s&&(t=Cs())===s&&(t=xs())===s&&(t=Hs())===s){if(t=lu,ca()!==s)if(va()!==s)if((e=Es())!==s)if(va()!==s)if(la()!==s){for(n=[],u=lu,(o=da())!==s?((a=xo())===s&&(a=Uo()),a!==s&&(i=va())!==s&&(c=As())!==s?u=o=[o,a,i,c]:(lu=u,u=s)):(lu=u,u=s);u!==s;)n.push(u),u=lu,(o=da())!==s?((a=xo())===s&&(a=Uo()),a!==s&&(i=va())!==s&&(c=As())!==s?u=o=[o,a,i,c]:(lu=u,u=s)):(lu=u,u=s);n!==s?(b=n,(f=e).parentheses=!0,t=b&&0!==b.length?Fa(f,b):f):(lu=t,t=s);}else lu=t,t=s;else lu=t,t=s;else lu=t,t=s;else lu=t,t=s;else lu=t,t=s;t===s&&(t=lu,ca()!==s&&va()!==s&&(e=Ls())!==s&&va()!==s&&la()!==s?((l=e).parentheses=!0,t=l):(lu=t,t=s),t===s&&(t=_a()));}return t}function xs(){var r,t,e,n,u;return r=lu,(t=Us())!==s&&va()!==s&&oa()!==s&&va()!==s&&(e=Ds())!==s?(n=t,u=e,Ya.add(`select::${n}::${u}`),r=t={type:"column_ref",table:n,column:u}):(lu=r,r=s),r===s&&(r=lu,(t=Ds())!==s&&(t=function(r){return Ya.add("select::null::"+r),{type:"column_ref",table:null,column:r}}(t)),r=t),r}function Us(){var r,t;return r=lu,(t=ks())!==s?((xr(t)?s:void 0)!==s?(r=t=t):(lu=r,r=s)):(lu=r,r=s),r===s&&(r=lu,(t=Ms())!==s&&(t=t),r=t),r}function Ms(){var t;return (t=function(){var t,e,n,u;t=lu,34===r.charCodeAt(lu)?(e='"',lu++):(e=s,0===du&&Eu(Ur));if(e!==s){if(n=[],Mr.test(r.charAt(lu))?(u=r.charAt(lu),lu++):(u=s,0===du&&Eu(Dr)),u!==s)for(;u!==s;)n.push(u),Mr.test(r.charAt(lu))?(u=r.charAt(lu),lu++):(u=s,0===du&&Eu(Dr));else n=s;n!==s?(34===r.charCodeAt(lu)?(u='"',lu++):(u=s,0===du&&Eu(Ur)),u!==s?(e=kr(n),t=e):(lu=t,t=s)):(lu=t,t=s);}else lu=t,t=s;return t}())===s&&(t=function(){var t,e,n,u;t=lu,39===r.charCodeAt(lu)?(e="'",lu++):(e=s,0===du&&Eu(Q));if(e!==s){if(n=[],$r.test(r.charAt(lu))?(u=r.charAt(lu),lu++):(u=s,0===du&&Eu(Fr)),u!==s)for(;u!==s;)n.push(u),$r.test(r.charAt(lu))?(u=r.charAt(lu),lu++):(u=s,0===du&&Eu(Fr));else n=s;n!==s?(39===r.charCodeAt(lu)?(u="'",lu++):(u=s,0===du&&Eu(Q)),u!==s?(e=kr(n),t=e):(lu=t,t=s)):(lu=t,t=s);}else lu=t,t=s;return t}())===s&&(t=function(){var t,e,n,u;t=lu,96===r.charCodeAt(lu)?(e="`",lu++):(e=s,0===du&&Eu(Pr));if(e!==s){if(n=[],Hr.test(r.charAt(lu))?(u=r.charAt(lu),lu++):(u=s,0===du&&Eu(Gr)),u!==s)for(;u!==s;)n.push(u),Hr.test(r.charAt(lu))?(u=r.charAt(lu),lu++):(u=s,0===du&&Eu(Gr));else n=s;n!==s?(96===r.charCodeAt(lu)?(u="`",lu++):(u=s,0===du&&Eu(Pr)),u!==s?(e=kr(n),t=e):(lu=t,t=s)):(lu=t,t=s);}else lu=t,t=s;return t}()),t}function Ds(){var r,t;return r=lu,(t=function(){var r,t,e,n;if(r=lu,(t=Fs())!==s){for(e=[],n=Ps();n!==s;)e.push(n),n=Ps();e!==s?(t=jr(t,e),r=t):(lu=r,r=s);}else lu=r,r=s;return r}())!==s?((xr(t)?s:void 0)!==s?(r=t=t):(lu=r,r=s)):(lu=r,r=s),r===s&&(r=Ms()),r}function ks(){var r,t,e,n;if(r=lu,(t=$s())!==s){for(e=[],n=Fs();n!==s;)e.push(n),n=Fs();e!==s?(r=t=jr(t,e)):(lu=r,r=s);}else lu=r,r=s;return r}function $s(){var t;return Yr.test(r.charAt(lu))?(t=r.charAt(lu),lu++):(t=s,0===du&&Eu(Br)),t}function Fs(){var t;return Xr.test(r.charAt(lu))?(t=r.charAt(lu),lu++):(t=s,0===du&&Eu(Wr)),t}function Ps(){var t;return Vr.test(r.charAt(lu))?(t=r.charAt(lu),lu++):(t=s,0===du&&Eu(Kr)),t}function Hs(){var e,n,u;return e=lu,58===r.charCodeAt(lu)?(n=":",lu++):(n=s,0===du&&Eu(qr)),n!==s&&(u=ks())!==s?e=n=[n,u]:(lu=e,e=s),e!==s&&(e={type:"param",value:e[1]}),e}function Gs(){var t,e,n;return t=lu,function(){var t,e,n,u;t=lu,"over"===r.substr(lu,4).toLowerCase()?(e=r.substr(lu,4),lu+=4):(e=s,0===du&&Eu(se));e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?t=e=[e,n]:(lu=t,t=s)):(lu=t,t=s);return t}()!==s&&va()!==s&&ca()!==s&&va()!==s&&co()!==s&&va()!==s&&To()!==s&&va()!==s&&(e=Xu())!==s&&va()!==s?((n=os())===s&&(n=null),n!==s&&va()!==s&&la()!==s?(t=function(r,t){return {partitionby:r,orderby:t}}(e,n)):(lu=t,t=s)):(lu=t,t=s),t}function js(){var t;return (t=Bs())===s&&(t=Ks())===s&&(t=function(){var t,e;t=lu,(e=function(){var t,e,n,u;t=lu,"true"===r.substr(lu,4).toLowerCase()?(e=r.substr(lu,4),lu+=4):(e=s,0===du&&Eu(Rt));e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?t=e=[e,n]:(lu=t,t=s)):(lu=t,t=s);return t}())!==s&&(e={type:"bool",value:!0});(t=e)===s&&(t=lu,(e=function(){var t,e,n,u;t=lu,"false"===r.substr(lu,5).toLowerCase()?(e=r.substr(lu,5),lu+=5):(e=s,0===du&&Eu(gt));e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?t=e=[e,n]:(lu=t,t=s)):(lu=t,t=s);return t}())!==s&&(e={type:"bool",value:!1}),t=e);return t}())===s&&(t=Ys())===s&&(t=function(){var t,e,n,u,o,a,i;t=lu,(e=Zo())===s&&(e=Ko())===s&&(e=zo())===s&&(e=qo());if(e!==s)if(va()!==s){if(n=lu,39===r.charCodeAt(lu)?(u="'",lu++):(u=s,0===du&&Eu(Q)),u!==s){for(o=[],a=Ws();a!==s;)o.push(a),a=Ws();o!==s?(39===r.charCodeAt(lu)?(a="'",lu++):(a=s,0===du&&Eu(Q)),a!==s?n=u=[u,o,a]:(lu=n,n=s)):(lu=n,n=s);}else lu=n,n=s;n!==s?(e=Jr(e,n),t=e):(lu=t,t=s);}else lu=t,t=s;else lu=t,t=s;if(t===s){if(t=lu,(e=Zo())===s&&(e=Ko())===s&&(e=zo())===s&&(e=qo()),e!==s)if(va()!==s){if(n=lu,34===r.charCodeAt(lu)?(u='"',lu++):(u=s,0===du&&Eu(Ur)),u!==s){for(o=[],a=Xs();a!==s;)o.push(a),a=Xs();o!==s?(34===r.charCodeAt(lu)?(a='"',lu++):(a=s,0===du&&Eu(Ur)),a!==s?n=u=[u,o,a]:(lu=n,n=s)):(lu=n,n=s);}else lu=n,n=s;n!==s?(e=Jr(e,n),t=e):(lu=t,t=s);}else lu=t,t=s;else lu=t,t=s;t===s&&(t=lu,(e=Jo())!==s&&va()!==s?((n=ca())===s&&(n=null),n!==s&&(u=va())!==s?((o=la())===s&&(o=null),o!==s?((a=(a=function(r,t,e){if(t&&e)return !0}(0,n,o))?s:void 0)!==s&&va()!==s?("on update current_timestamp"===r.substr(lu,27).toLowerCase()?(i=r.substr(lu,27),lu+=27):(i=s,0===du&&Eu(Qr)),i===s&&(i=null),i!==s?(c=e,e={type:"origin",value:((l=i)?`${c} ${l}`:c).toLowerCase()},t=e):(lu=t,t=s)):(lu=t,t=s)):(lu=t,t=s)):(lu=t,t=s)):(lu=t,t=s));}var c,l;return t}()),t}function Ys(){var e;return (e=function(){var t,e,n,u;t=lu,"null"===r.substr(lu,4).toLowerCase()?(e=r.substr(lu,4),lu+=4):(e=s,0===du&&Eu(It));e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?t=e=[e,n]:(lu=t,t=s)):(lu=t,t=s);return t}())!==s&&(e={type:"null",value:null}),e}function Bs(){var t,e,n,u,o;if(t=lu,e=lu,39===r.charCodeAt(lu)?(n="'",lu++):(n=s,0===du&&Eu(Q)),n!==s){for(u=[],o=Ws();o!==s;)u.push(o),o=Ws();u!==s?(39===r.charCodeAt(lu)?(o="'",lu++):(o=s,0===du&&Eu(Q)),o!==s?e=n=[n,u,o]:(lu=e,e=s)):(lu=e,e=s);}else lu=e,e=s;if(e!==s&&(e=zr(e)),(t=e)===s){if(t=lu,e=lu,34===r.charCodeAt(lu)?(n='"',lu++):(n=s,0===du&&Eu(Ur)),n!==s){for(u=[],o=Xs();o!==s;)u.push(o),o=Xs();u!==s?(34===r.charCodeAt(lu)?(o='"',lu++):(o=s,0===du&&Eu(Ur)),o!==s?e=n=[n,u,o]:(lu=e,e=s)):(lu=e,e=s);}else lu=e,e=s;e!==s&&(e=zr(e)),t=e;}return t}function Xs(){var t;return rt.test(r.charAt(lu))?(t=r.charAt(lu),lu++):(t=s,0===du&&Eu(tt)),t===s&&(t=Vs()),t}function Ws(){var t;return et.test(r.charAt(lu))?(t=r.charAt(lu),lu++):(t=s,0===du&&Eu(nt)),t===s&&(t=Vs()),t}function Vs(){var t,e,n,u,o,a,i,c,l,f;return t=lu,"\\'"===r.substr(lu,2)?(e="\\'",lu+=2):(e=s,0===du&&Eu(ut)),e!==s&&(e="'"),(t=e)===s&&(t=lu,'\\"'===r.substr(lu,2)?(e='\\"',lu+=2):(e=s,0===du&&Eu(st)),e!==s&&(e='"'),(t=e)===s&&(t=lu,"\\\\"===r.substr(lu,2)?(e="\\\\",lu+=2):(e=s,0===du&&Eu(ot)),e!==s&&(e="\\"),(t=e)===s&&(t=lu,"\\/"===r.substr(lu,2)?(e="\\/",lu+=2):(e=s,0===du&&Eu(at)),e!==s&&(e="/"),(t=e)===s&&(t=lu,"\\b"===r.substr(lu,2)?(e="\\b",lu+=2):(e=s,0===du&&Eu(it)),e!==s&&(e="\b"),(t=e)===s&&(t=lu,"\\f"===r.substr(lu,2)?(e="\\f",lu+=2):(e=s,0===du&&Eu(ct)),e!==s&&(e="\f"),(t=e)===s&&(t=lu,"\\n"===r.substr(lu,2)?(e="\\n",lu+=2):(e=s,0===du&&Eu(lt)),e!==s&&(e="\n"),(t=e)===s&&(t=lu,"\\r"===r.substr(lu,2)?(e="\\r",lu+=2):(e=s,0===du&&Eu(ft)),e!==s&&(e="\r"),(t=e)===s&&(t=lu,"\\t"===r.substr(lu,2)?(e="\\t",lu+=2):(e=s,0===du&&Eu(bt)),e!==s&&(e="\t"),(t=e)===s&&(t=lu,"\\u"===r.substr(lu,2)?(e="\\u",lu+=2):(e=s,0===du&&Eu(vt)),e!==s&&(n=ro())!==s&&(u=ro())!==s&&(o=ro())!==s&&(a=ro())!==s?(i=n,c=u,l=o,f=a,t=e=String.fromCharCode(parseInt("0x"+i+c+l+f))):(lu=t,t=s),t===s&&(t=lu,92===r.charCodeAt(lu)?(e="\\",lu++):(e=s,0===du&&Eu(dt)),e!==s&&(e="\\"),t=e)))))))))),t}function Ks(){var t,e;return (t=function(){var r,t,e,n;r=lu,(t=qs())!==s&&(e=Zs())!==s&&(n=zs())!==s?(r=t={type:"bigint",value:t+e+n}):(lu=r,r=s);r===s&&(r=lu,(t=qs())!==s&&(e=Zs())!==s?(t=function(r,t){const e=r+t;return ka(r)?{type:"bigint",value:e}:parseFloat(e)}(t,e),r=t):(lu=r,r=s),r===s&&(r=lu,(t=qs())!==s&&(e=zs())!==s?(t=function(r,t){return {type:"bigint",value:r+t}}(t,e),r=t):(lu=r,r=s),r===s&&(r=lu,(t=qs())!==s&&(t=function(r){return ka(r)?{type:"bigint",value:r}:parseFloat(r)}(t)),r=t)));return r}())!==s&&(t=(e=t)&&"bigint"===e.type?e:{type:"number",value:e}),t}function qs(){var t,e,n;return (t=Js())===s&&(t=Qs())===s&&(t=lu,45===r.charCodeAt(lu)?(e="-",lu++):(e=s,0===du&&Eu(Rr)),e===s&&(43===r.charCodeAt(lu)?(e="+",lu++):(e=s,0===du&&Eu(Nr))),e!==s&&(n=Js())!==s?(t=e="-"+n):(lu=t,t=s),t===s&&(t=lu,45===r.charCodeAt(lu)?(e="-",lu++):(e=s,0===du&&Eu(Rr)),e===s&&(43===r.charCodeAt(lu)?(e="+",lu++):(e=s,0===du&&Eu(Nr))),e!==s&&(n=Qs())!==s?(t=e="-"+n):(lu=t,t=s))),t}function Zs(){var t,e,n;return t=lu,46===r.charCodeAt(lu)?(e=".",lu++):(e=s,0===du&&Eu(pt)),e!==s&&(n=Js())!==s?(t=e="."+n):(lu=t,t=s),t}function zs(){var t,e,n;return t=lu,(e=function(){var t,e,n;t=lu,yt.test(r.charAt(lu))?(e=r.charAt(lu),lu++):(e=s,0===du&&Eu(Tt));e!==s?(mt.test(r.charAt(lu))?(n=r.charAt(lu),lu++):(n=s,0===du&&Eu(St)),n===s&&(n=null),n!==s?(t=e=e+(null!==(u=n)?u:"")):(lu=t,t=s)):(lu=t,t=s);var u;return t}())!==s&&(n=Js())!==s?(t=e=e+n):(lu=t,t=s),t}function Js(){var t,e;if(t=[],(e=Qs())!==s)for(;e!==s;)t.push(e),e=Qs();else t=s;return t!==s&&(t=t.join("")),t}function Qs(){var t;return wt.test(r.charAt(lu))?(t=r.charAt(lu),lu++):(t=s,0===du&&Eu(Et)),t}function ro(){var t;return ht.test(r.charAt(lu))?(t=r.charAt(lu),lu++):(t=s,0===du&&Eu(At)),t}function to(){var t,e,n,u;return t=lu,"default"===r.substr(lu,7).toLowerCase()?(e=r.substr(lu,7),lu+=7):(e=s,0===du&&Eu(p)),e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?t=e=[e,n]:(lu=t,t=s)):(lu=t,t=s),t}function eo(){var t,e,n,u;return t=lu,"to"===r.substr(lu,2).toLowerCase()?(e=r.substr(lu,2),lu+=2):(e=s,0===du&&Eu(_t)),e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?t=e=[e,n]:(lu=t,t=s)):(lu=t,t=s),t}function no(){var t,e,n,u;return t=lu,"drop"===r.substr(lu,4).toLowerCase()?(e=r.substr(lu,4),lu+=4):(e=s,0===du&&Eu(Ot)),e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?(t=e="DROP"):(lu=t,t=s)):(lu=t,t=s),t}function uo(){var t,e,n,u;return t=lu,"create"===r.substr(lu,6).toLowerCase()?(e=r.substr(lu,6),lu+=6):(e=s,0===du&&Eu(Dt)),e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?t=e=[e,n]:(lu=t,t=s)):(lu=t,t=s),t}function so(){var t,e,n,u;return t=lu,"temporary"===r.substr(lu,9).toLowerCase()?(e=r.substr(lu,9),lu+=9):(e=s,0===du&&Eu(kt)),e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?t=e=[e,n]:(lu=t,t=s)):(lu=t,t=s),t}function oo(){var t,e,n,u;return t=lu,"if not exists"===r.substr(lu,13).toLowerCase()?(e=r.substr(lu,13),lu+=13):(e=s,0===du&&Eu($t)),e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?t=e=[e,n]:(lu=t,t=s)):(lu=t,t=s),t}function ao(){var t,e,n,u;return t=lu,"replace"===r.substr(lu,7).toLowerCase()?(e=r.substr(lu,7),lu+=7):(e=s,0===du&&Eu(Ht)),e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?t=e=[e,n]:(lu=t,t=s)):(lu=t,t=s),t}function io(){var t,e,n,u;return t=lu,"rename"===r.substr(lu,6).toLowerCase()?(e=r.substr(lu,6),lu+=6):(e=s,0===du&&Eu(Gt)),e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?t=e=[e,n]:(lu=t,t=s)):(lu=t,t=s),t}function co(){var t,e,n,u;return t=lu,"partition"===r.substr(lu,9).toLowerCase()?(e=r.substr(lu,9),lu+=9):(e=s,0===du&&Eu(Yt)),e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?(t=e="PARTITION"):(lu=t,t=s)):(lu=t,t=s),t}function lo(){var t,e,n,u;return t=lu,"into"===r.substr(lu,4).toLowerCase()?(e=r.substr(lu,4),lu+=4):(e=s,0===du&&Eu(Bt)),e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?(t=e="INTO"):(lu=t,t=s)):(lu=t,t=s),t}function fo(){var t,e,n,u;return t=lu,"set"===r.substr(lu,3).toLowerCase()?(e=r.substr(lu,3),lu+=3):(e=s,0===du&&Eu(Y)),e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?t=e=[e,n]:(lu=t,t=s)):(lu=t,t=s),t}function bo(){var t,e,n,u;return t=lu,"as"===r.substr(lu,2).toLowerCase()?(e=r.substr(lu,2),lu+=2):(e=s,0===du&&Eu(Kt)),e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?t=e=[e,n]:(lu=t,t=s)):(lu=t,t=s),t}function vo(){var t,e,n,u;return t=lu,"table"===r.substr(lu,5).toLowerCase()?(e=r.substr(lu,5),lu+=5):(e=s,0===du&&Eu(qt)),e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?(t=e="TABLE"):(lu=t,t=s)):(lu=t,t=s),t}function Lo(){var t,e,n,u;return t=lu,"tables"===r.substr(lu,6).toLowerCase()?(e=r.substr(lu,6),lu+=6):(e=s,0===du&&Eu(Zt)),e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?(t=e="TABLES"):(lu=t,t=s)):(lu=t,t=s),t}function Co(){var t,e,n,u;return t=lu,"on"===r.substr(lu,2).toLowerCase()?(e=r.substr(lu,2),lu+=2):(e=s,0===du&&Eu(M)),e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?t=e=[e,n]:(lu=t,t=s)):(lu=t,t=s),t}function po(){var t,e,n,u;return t=lu,"join"===r.substr(lu,4).toLowerCase()?(e=r.substr(lu,4),lu+=4):(e=s,0===du&&Eu(ne)),e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?t=e=[e,n]:(lu=t,t=s)):(lu=t,t=s),t}function wo(){var t,e,n,u;return t=lu,"outer"===r.substr(lu,5).toLowerCase()?(e=r.substr(lu,5),lu+=5):(e=s,0===du&&Eu(ue)),e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?t=e=[e,n]:(lu=t,t=s)):(lu=t,t=s),t}function Eo(){var t,e,n,u;return t=lu,"union"===r.substr(lu,5).toLowerCase()?(e=r.substr(lu,5),lu+=5):(e=s,0===du&&Eu(oe)),e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?t=e=[e,n]:(lu=t,t=s)):(lu=t,t=s),t}function ho(){var t,e,n,u;return t=lu,"values"===r.substr(lu,6).toLowerCase()?(e=r.substr(lu,6),lu+=6):(e=s,0===du&&Eu(ae)),e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?t=e=[e,n]:(lu=t,t=s)):(lu=t,t=s),t}function Ao(){var t,e,n,u;return t=lu,"using"===r.substr(lu,5).toLowerCase()?(e=r.substr(lu,5),lu+=5):(e=s,0===du&&Eu(ie)),e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?t=e=[e,n]:(lu=t,t=s)):(lu=t,t=s),t}function yo(){var t,e,n,u;return t=lu,"with"===r.substr(lu,4).toLowerCase()?(e=r.substr(lu,4),lu+=4):(e=s,0===du&&Eu(fr)),e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?t=e=[e,n]:(lu=t,t=s)):(lu=t,t=s),t}function To(){var t,e,n,u;return t=lu,"by"===r.substr(lu,2).toLowerCase()?(e=r.substr(lu,2),lu+=2):(e=s,0===du&&Eu(fe)),e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?t=e=[e,n]:(lu=t,t=s)):(lu=t,t=s),t}function mo(){var t,e,n,u;return t=lu,"all"===r.substr(lu,3).toLowerCase()?(e=r.substr(lu,3),lu+=3):(e=s,0===du&&Eu(we)),e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?(t=e="ALL"):(lu=t,t=s)):(lu=t,t=s),t}function So(){var t,e,n,u;return t=lu,"distinct"===r.substr(lu,8).toLowerCase()?(e=r.substr(lu,8),lu+=8):(e=s,0===du&&Eu(Ee)),e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?(t=e="DISTINCT"):(lu=t,t=s)):(lu=t,t=s),t}function Io(){var t,e,n,u;return t=lu,"between"===r.substr(lu,7).toLowerCase()?(e=r.substr(lu,7),lu+=7):(e=s,0===du&&Eu(he)),e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?(t=e="BETWEEN"):(lu=t,t=s)):(lu=t,t=s),t}function No(){var t,e,n,u;return t=lu,"in"===r.substr(lu,2).toLowerCase()?(e=r.substr(lu,2),lu+=2):(e=s,0===du&&Eu(Ae)),e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?(t=e="IN"):(lu=t,t=s)):(lu=t,t=s),t}function Ro(){var t,e,n,u;return t=lu,"is"===r.substr(lu,2).toLowerCase()?(e=r.substr(lu,2),lu+=2):(e=s,0===du&&Eu(ye)),e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?(t=e="IS"):(lu=t,t=s)):(lu=t,t=s),t}function _o(){var t,e,n,u;return t=lu,"like"===r.substr(lu,4).toLowerCase()?(e=r.substr(lu,4),lu+=4):(e=s,0===du&&Eu(Te)),e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?(t=e="LIKE"):(lu=t,t=s)):(lu=t,t=s),t}function go(){var t,e,n,u;return t=lu,"exists"===r.substr(lu,6).toLowerCase()?(e=r.substr(lu,6),lu+=6):(e=s,0===du&&Eu(me)),e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?(t=e="EXISTS"):(lu=t,t=s)):(lu=t,t=s),t}function Oo(){var t,e,n,u;return t=lu,"not"===r.substr(lu,3).toLowerCase()?(e=r.substr(lu,3),lu+=3):(e=s,0===du&&Eu(Se)),e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?(t=e="NOT"):(lu=t,t=s)):(lu=t,t=s),t}function xo(){var t,e,n,u;return t=lu,"and"===r.substr(lu,3).toLowerCase()?(e=r.substr(lu,3),lu+=3):(e=s,0===du&&Eu(Ie)),e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?(t=e="AND"):(lu=t,t=s)):(lu=t,t=s),t}function Uo(){var t,e,n,u;return t=lu,"or"===r.substr(lu,2).toLowerCase()?(e=r.substr(lu,2),lu+=2):(e=s,0===du&&Eu(Ne)),e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?(t=e="OR"):(lu=t,t=s)):(lu=t,t=s),t}function Mo(){var t,e,n,u;return t=lu,"case"===r.substr(lu,4).toLowerCase()?(e=r.substr(lu,4),lu+=4):(e=s,0===du&&Eu(Me)),e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?t=e=[e,n]:(lu=t,t=s)):(lu=t,t=s),t}function Do(){var t,e,n,u;return t=lu,"cast"===r.substr(lu,4).toLowerCase()?(e=r.substr(lu,4),lu+=4):(e=s,0===du&&Eu(Pe)),e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?t=e=[e,n]:(lu=t,t=s)):(lu=t,t=s),t}function ko(){var t,e,n,u;return t=lu,"char"===r.substr(lu,4).toLowerCase()?(e=r.substr(lu,4),lu+=4):(e=s,0===du&&Eu(He)),e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?(t=e="CHAR"):(lu=t,t=s)):(lu=t,t=s),t}function $o(){var t,e,n,u;return t=lu,"varchar"===r.substr(lu,7).toLowerCase()?(e=r.substr(lu,7),lu+=7):(e=s,0===du&&Eu(Ge)),e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?(t=e="VARCHAR"):(lu=t,t=s)):(lu=t,t=s),t}function Fo(){var t,e,n,u;return t=lu,"numeric"===r.substr(lu,7).toLowerCase()?(e=r.substr(lu,7),lu+=7):(e=s,0===du&&Eu(je)),e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?(t=e="NUMERIC"):(lu=t,t=s)):(lu=t,t=s),t}function Po(){var t,e,n,u;return t=lu,"decimal"===r.substr(lu,7).toLowerCase()?(e=r.substr(lu,7),lu+=7):(e=s,0===du&&Eu(Ye)),e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?(t=e="DECIMAL"):(lu=t,t=s)):(lu=t,t=s),t}function Ho(){var t,e,n,u;return t=lu,"unsigned"===r.substr(lu,8).toLowerCase()?(e=r.substr(lu,8),lu+=8):(e=s,0===du&&Eu(We)),e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?(t=e="UNSIGNED"):(lu=t,t=s)):(lu=t,t=s),t}function Go(){var t,e,n,u;return t=lu,"int"===r.substr(lu,3).toLowerCase()?(e=r.substr(lu,3),lu+=3):(e=s,0===du&&Eu(Ve)),e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?(t=e="INT"):(lu=t,t=s)):(lu=t,t=s),t}function jo(){var t,e,n,u;return t=lu,"integer"===r.substr(lu,7).toLowerCase()?(e=r.substr(lu,7),lu+=7):(e=s,0===du&&Eu(qe)),e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?(t=e="INTEGER"):(lu=t,t=s)):(lu=t,t=s),t}function Yo(){var t,e,n,u;return t=lu,"smallint"===r.substr(lu,8).toLowerCase()?(e=r.substr(lu,8),lu+=8):(e=s,0===du&&Eu(ze)),e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?(t=e="SMALLINT"):(lu=t,t=s)):(lu=t,t=s),t}function Bo(){var t,e,n,u;return t=lu,"tinyint"===r.substr(lu,7).toLowerCase()?(e=r.substr(lu,7),lu+=7):(e=s,0===du&&Eu(Je)),e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?(t=e="TINYINT"):(lu=t,t=s)):(lu=t,t=s),t}function Xo(){var t,e,n,u;return t=lu,"bigint"===r.substr(lu,6).toLowerCase()?(e=r.substr(lu,6),lu+=6):(e=s,0===du&&Eu(nn)),e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?(t=e="BIGINT"):(lu=t,t=s)):(lu=t,t=s),t}function Wo(){var t,e,n,u;return t=lu,"float"===r.substr(lu,5).toLowerCase()?(e=r.substr(lu,5),lu+=5):(e=s,0===du&&Eu(un)),e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?(t=e="FLOAT"):(lu=t,t=s)):(lu=t,t=s),t}function Vo(){var t,e,n,u;return t=lu,"double"===r.substr(lu,6).toLowerCase()?(e=r.substr(lu,6),lu+=6):(e=s,0===du&&Eu(sn)),e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?(t=e="DOUBLE"):(lu=t,t=s)):(lu=t,t=s),t}function Ko(){var t,e,n,u;return t=lu,"date"===r.substr(lu,4).toLowerCase()?(e=r.substr(lu,4),lu+=4):(e=s,0===du&&Eu(on)),e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?(t=e="DATE"):(lu=t,t=s)):(lu=t,t=s),t}function qo(){var t,e,n,u;return t=lu,"datetime"===r.substr(lu,8).toLowerCase()?(e=r.substr(lu,8),lu+=8):(e=s,0===du&&Eu(an)),e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?(t=e="DATETIME"):(lu=t,t=s)):(lu=t,t=s),t}function Zo(){var t,e,n,u;return t=lu,"time"===r.substr(lu,4).toLowerCase()?(e=r.substr(lu,4),lu+=4):(e=s,0===du&&Eu(cn)),e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?(t=e="TIME"):(lu=t,t=s)):(lu=t,t=s),t}function zo(){var t,e,n,u;return t=lu,"timestamp"===r.substr(lu,9).toLowerCase()?(e=r.substr(lu,9),lu+=9):(e=s,0===du&&Eu(ln)),e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?(t=e="TIMESTAMP"):(lu=t,t=s)):(lu=t,t=s),t}function Jo(){var t,e,n,u;return t=lu,"current_timestamp"===r.substr(lu,17).toLowerCase()?(e=r.substr(lu,17),lu+=17):(e=s,0===du&&Eu(yn)),e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?(t=e="CURRENT_TIMESTAMP"):(lu=t,t=s)):(lu=t,t=s),t}function Qo(){var t;return (t=function(){var t;return "@@"===r.substr(lu,2)?(t="@@",lu+=2):(t=s,0===du&&Eu(On)),t}())===s&&(t=function(){var t;return 64===r.charCodeAt(lu)?(t="@",lu++):(t=s,0===du&&Eu(gn)),t}())===s&&(t=function(){var t;return 36===r.charCodeAt(lu)?(t="$",lu++):(t=s,0===du&&Eu(xn)),t}()),t}function ra(){var t;return 61===r.charCodeAt(lu)?(t="=",lu++):(t=s,0===du&&Eu(Cr)),t}function ta(){var t,e,n,u;return t=lu,"add"===r.substr(lu,3).toLowerCase()?(e=r.substr(lu,3),lu+=3):(e=s,0===du&&Eu(kn)),e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?(t=e="ADD"):(lu=t,t=s)):(lu=t,t=s),t}function ea(){var t,e,n,u;return t=lu,"column"===r.substr(lu,6).toLowerCase()?(e=r.substr(lu,6),lu+=6):(e=s,0===du&&Eu($n)),e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?(t=e="COLUMN"):(lu=t,t=s)):(lu=t,t=s),t}function na(){var t,e,n,u;return t=lu,"index"===r.substr(lu,5).toLowerCase()?(e=r.substr(lu,5),lu+=5):(e=s,0===du&&Eu(Fn)),e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?(t=e="INDEX"):(lu=t,t=s)):(lu=t,t=s),t}function ua(){var t,e,n,u;return t=lu,"key"===r.substr(lu,3).toLowerCase()?(e=r.substr(lu,3),lu+=3):(e=s,0===du&&Eu(b)),e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?(t=e="KEY"):(lu=t,t=s)):(lu=t,t=s),t}function sa(){var t,e,n,u;return t=lu,"comment"===r.substr(lu,7).toLowerCase()?(e=r.substr(lu,7),lu+=7):(e=s,0===du&&Eu(Gn)),e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?(t=e="COMMENT"):(lu=t,t=s)):(lu=t,t=s),t}function oa(){var t;return 46===r.charCodeAt(lu)?(t=".",lu++):(t=s,0===du&&Eu(pt)),t}function aa(){var t;return 44===r.charCodeAt(lu)?(t=",",lu++):(t=s,0===du&&Eu(Zn)),t}function ia(){var t;return 42===r.charCodeAt(lu)?(t="*",lu++):(t=s,0===du&&Eu(_r)),t}function ca(){var t;return 40===r.charCodeAt(lu)?(t="(",lu++):(t=s,0===du&&Eu(ar)),t}function la(){var t;return 41===r.charCodeAt(lu)?(t=")",lu++):(t=s,0===du&&Eu(ir)),t}function fa(){var t;return 59===r.charCodeAt(lu)?(t=";",lu++):(t=s,0===du&&Eu(Qn)),t}function ba(){var t;return (t=function(){var t;return "||"===r.substr(lu,2)?(t="||",lu+=2):(t=s,0===du&&Eu(ru)),t}())===s&&(t=function(){var t;return "&&"===r.substr(lu,2)?(t="&&",lu+=2):(t=s,0===du&&Eu(tu)),t}()),t}function va(){var r,t;for(r=[],(t=wa())===s&&(t=La());t!==s;)r.push(t),(t=wa())===s&&(t=La());return r}function da(){var r,t;if(r=[],(t=wa())===s&&(t=La()),t!==s)for(;t!==s;)r.push(t),(t=wa())===s&&(t=La());else r=s;return r}function La(){var t;return (t=function(){var t,e,n,u,o,a;t=lu,"/*"===r.substr(lu,2)?(e="/*",lu+=2):(e=s,0===du&&Eu(eu));if(e!==s){for(n=[],u=lu,o=lu,du++,"*/"===r.substr(lu,2)?(a="*/",lu+=2):(a=s,0===du&&Eu(nu)),du--,a===s?o=void 0:(lu=o,o=s),o!==s&&(a=pa())!==s?u=o=[o,a]:(lu=u,u=s);u!==s;)n.push(u),u=lu,o=lu,du++,"*/"===r.substr(lu,2)?(a="*/",lu+=2):(a=s,0===du&&Eu(nu)),du--,a===s?o=void 0:(lu=o,o=s),o!==s&&(a=pa())!==s?u=o=[o,a]:(lu=u,u=s);n!==s?("*/"===r.substr(lu,2)?(u="*/",lu+=2):(u=s,0===du&&Eu(nu)),u!==s?t=e=[e,n,u]:(lu=t,t=s)):(lu=t,t=s);}else lu=t,t=s;return t}())===s&&(t=function(){var t,e,n,u,o,a;t=lu,"--"===r.substr(lu,2)?(e="--",lu+=2):(e=s,0===du&&Eu(uu));if(e!==s){for(n=[],u=lu,o=lu,du++,a=Ea(),du--,a===s?o=void 0:(lu=o,o=s),o!==s&&(a=pa())!==s?u=o=[o,a]:(lu=u,u=s);u!==s;)n.push(u),u=lu,o=lu,du++,a=Ea(),du--,a===s?o=void 0:(lu=o,o=s),o!==s&&(a=pa())!==s?u=o=[o,a]:(lu=u,u=s);n!==s?t=e=[e,n]:(lu=t,t=s);}else lu=t,t=s;return t}())===s&&(t=function(){var t,e,n,u,o,a;t=lu,35===r.charCodeAt(lu)?(e="#",lu++):(e=s,0===du&&Eu(su));if(e!==s){for(n=[],u=lu,o=lu,du++,a=Ea(),du--,a===s?o=void 0:(lu=o,o=s),o!==s&&(a=pa())!==s?u=o=[o,a]:(lu=u,u=s);u!==s;)n.push(u),u=lu,o=lu,du++,a=Ea(),du--,a===s?o=void 0:(lu=o,o=s),o!==s&&(a=pa())!==s?u=o=[o,a]:(lu=u,u=s);n!==s?t=e=[e,n]:(lu=t,t=s);}else lu=t,t=s;return t}()),t}function Ca(){var r,t,e,n,u,o,a;return r=lu,(t=sa())!==s&&va()!==s?((e=ra())===s&&(e=null),e!==s&&va()!==s&&(n=Bs())!==s?(o=e,a=n,r=t={type:(u=t).toLowerCase(),keyword:u.toLowerCase(),symbol:o,value:a}):(lu=r,r=s)):(lu=r,r=s),r}function pa(){var t;return r.length>lu?(t=r.charAt(lu),lu++):(t=s,0===du&&Eu(ou)),t}function wa(){var t;return au.test(r.charAt(lu))?(t=r.charAt(lu),lu++):(t=s,0===du&&Eu(iu)),t}function Ea(){var t,e;if((t=function(){var t,e;t=lu,du++,r.length>lu?(e=r.charAt(lu),lu++):(e=s,0===du&&Eu(ou));du--,e===s?t=void 0:(lu=t,t=s);return t}())===s)if(t=[],Lt.test(r.charAt(lu))?(e=r.charAt(lu),lu++):(e=s,0===du&&Eu(Ct)),e!==s)for(;e!==s;)t.push(e),Lt.test(r.charAt(lu))?(e=r.charAt(lu),lu++):(e=s,0===du&&Eu(Ct));else t=s;return t}function ha(){var t,e;return t=lu,Ga=[],(void 0)!==s&&va()!==s?((e=Aa())===s&&(e=function(){var t,e;t=lu,function(){var t;return "return"===r.substr(lu,6).toLowerCase()?(t=r.substr(lu,6),lu+=6):(t=s,0===du&&Eu(Un)),t}()!==s&&va()!==s&&(e=ya())!==s?(t={type:"return",expr:e}):(lu=t,t=s);return t}()),e!==s?(t={stmt:e,vars:Ga}):(lu=t,t=s)):(lu=t,t=s),t}function Aa(){var t,e,n,u;return t=lu,(e=_a())===s&&(e=ga()),e!==s&&va()!==s?((n=function(){var t;return ":="===r.substr(lu,2)?(t=":=",lu+=2):(t=s,0===du&&Eu(Mn)),t}())===s&&(n=ra()),n!==s&&va()!==s&&(u=ya())!==s?(t=e={type:"assign",left:e,symbol:n,right:u}):(lu=t,t=s)):(lu=t,t=s),t}function ya(){var t;return (t=Pu())===s&&(t=function(){var r,t,e,n,u;r=lu,(t=_a())!==s&&va()!==s&&(e=es())!==s&&va()!==s&&(n=_a())!==s&&va()!==s&&(u=us())!==s?(r=t={type:"join",ltable:t,rtable:n,op:e,on:u}):(lu=r,r=s);return r}())===s&&(t=Ta())===s&&(t=function(){var t,e;t=lu,function(){var t;return 91===r.charCodeAt(lu)?(t="[",lu++):(t=s,0===du&&Eu(zn)),t}()!==s&&va()!==s&&(e=Ra())!==s&&va()!==s&&function(){var t;return 93===r.charCodeAt(lu)?(t="]",lu++):(t=s,0===du&&Eu(Jn)),t}()!==s?(t={type:"array",value:e}):(lu=t,t=s);return t}()),t}function Ta(){var r,t,e,n,u,o,a,i;if(r=lu,(t=ma())!==s){for(e=[],n=lu,(u=va())!==s&&(o=Rs())!==s&&(a=va())!==s&&(i=ma())!==s?n=u=[u,o,a,i]:(lu=n,n=s);n!==s;)e.push(n),n=lu,(u=va())!==s&&(o=Rs())!==s&&(a=va())!==s&&(i=ma())!==s?n=u=[u,o,a,i]:(lu=n,n=s);e!==s?(r=t=wr(t,e)):(lu=r,r=s);}else lu=r,r=s;return r}function ma(){var r,t,e,n,u,o,a,i;if(r=lu,(t=Sa())!==s){for(e=[],n=lu,(u=va())!==s&&(o=gs())!==s&&(a=va())!==s&&(i=Sa())!==s?n=u=[u,o,a,i]:(lu=n,n=s);n!==s;)e.push(n),n=lu,(u=va())!==s&&(o=gs())!==s&&(a=va())!==s&&(i=Sa())!==s?n=u=[u,o,a,i]:(lu=n,n=s);e!==s?(r=t=wr(t,e)):(lu=r,r=s);}else lu=r,r=s;return r}function Sa(){var r,t,e;return (r=js())===s&&(r=_a())===s&&(r=Na())===s&&(r=Hs())===s&&(r=lu,ca()!==s&&va()!==s&&(t=Ta())!==s&&va()!==s&&la()!==s?((e=t).parentheses=!0,r=e):(lu=r,r=s)),r}function Ia(){var r,t,e,n,u,o,a;return r=lu,(t=Us())!==s?(e=lu,(n=va())!==s&&(u=oa())!==s&&(o=va())!==s&&(a=Us())!==s?e=n=[n,u,o,a]:(lu=e,e=s),e===s&&(e=null),e!==s?(r=t=function(r,t){let e=r;return null!==t&&(e=`${r}.${t[3]}`),e}(t,e)):(lu=r,r=s)):(lu=r,r=s),r}function Na(){var r,t,e;return r=lu,(t=Ia())!==s&&va()!==s&&ca()!==s&&va()!==s?((e=Ra())===s&&(e=null),e!==s&&va()!==s&&la()!==s?(r=t={type:"function",name:t,args:{type:"expr_list",value:e}}):(lu=r,r=s)):(lu=r,r=s),r===s&&(r=lu,(t=Ia())!==s&&(t=function(r){return {type:"function",name:r,args:null}}(t)),r=t),r}function Ra(){var r,t,e,n,u,o,a,i;if(r=lu,(t=Sa())!==s){for(e=[],n=lu,(u=va())!==s&&(o=aa())!==s&&(a=va())!==s&&(i=Sa())!==s?n=u=[u,o,a,i]:(lu=n,n=s);n!==s;)e.push(n),n=lu,(u=va())!==s&&(o=aa())!==s&&(a=va())!==s&&(i=Sa())!==s?n=u=[u,o,a,i]:(lu=n,n=s);e!==s?(r=t=c(t,e)):(lu=r,r=s);}else lu=r,r=s;return r}function _a(){var r,t,e,n,u;return r=lu,(t=Qo())!==s&&(e=ga())!==s?(n=t,u=e,r=t={type:"var",...u,prefix:n}):(lu=r,r=s),r}function ga(){var t,e,n,u,o;return t=lu,(e=ks())!==s&&(n=function(){var e,n,u,o;e=[],n=lu,46===r.charCodeAt(lu)?(u=".",lu++):(u=s,0===du&&Eu(pt));u!==s&&(o=ks())!==s?n=u=[u,o]:(lu=n,n=s);for(;n!==s;)e.push(n),n=lu,46===r.charCodeAt(lu)?(u=".",lu++):(u=s,0===du&&Eu(pt)),u!==s&&(o=ks())!==s?n=u=[u,o]:(lu=n,n=s);e!==s&&(e=function(r){const t=[];for(let e=0;e<r.length;e++)t.push(r[e][1]);return t}(e));return e}())!==s?(u=e,o=n,Ga.push(u),t=e={type:"var",name:u,members:o,prefix:null}):(lu=t,t=s),t}function Oa(){var t;return (t=function(){var t,e,n,u;t=lu,(e=ko())===s&&(e=$o());if(e!==s)if(va()!==s)if(ca()!==s)if(va()!==s){if(n=[],wt.test(r.charAt(lu))?(u=r.charAt(lu),lu++):(u=s,0===du&&Eu(Et)),u!==s)for(;u!==s;)n.push(u),wt.test(r.charAt(lu))?(u=r.charAt(lu),lu++):(u=s,0===du&&Eu(Et));else n=s;n!==s&&(u=va())!==s&&la()!==s?(e={dataType:e,length:parseInt(n.join(""),10)},t=e):(lu=t,t=s);}else lu=t,t=s;else lu=t,t=s;else lu=t,t=s;else lu=t,t=s;t===s&&(t=lu,(e=ko())===s&&(e=$o())===s&&(e=function(){var t,e,n,u;return t=lu,"string"===r.substr(lu,6).toLowerCase()?(e=r.substr(lu,6),lu+=6):(e=s,0===du&&Eu(Xe)),e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?(t=e="STRING"):(lu=t,t=s)):(lu=t,t=s),t}()),e!==s&&(e=cu(e)),t=e);return t}())===s&&(t=function(){var t,e,n,u,o,a,i,c,l,f,b,v;t=lu,(e=Fo())===s&&(e=Po())===s&&(e=Go())===s&&(e=jo())===s&&(e=Yo())===s&&(e=Bo())===s&&(e=Xo())===s&&(e=Wo())===s&&(e=Vo());if(e!==s)if((n=va())!==s)if((u=ca())!==s)if((o=va())!==s){if(a=[],wt.test(r.charAt(lu))?(i=r.charAt(lu),lu++):(i=s,0===du&&Eu(Et)),i!==s)for(;i!==s;)a.push(i),wt.test(r.charAt(lu))?(i=r.charAt(lu),lu++):(i=s,0===du&&Eu(Et));else a=s;if(a!==s)if((i=va())!==s){if(c=lu,(l=aa())!==s)if((f=va())!==s){if(b=[],wt.test(r.charAt(lu))?(v=r.charAt(lu),lu++):(v=s,0===du&&Eu(Et)),v!==s)for(;v!==s;)b.push(v),wt.test(r.charAt(lu))?(v=r.charAt(lu),lu++):(v=s,0===du&&Eu(Et));else b=s;b!==s?c=l=[l,f,b]:(lu=c,c=s);}else lu=c,c=s;else lu=c,c=s;c===s&&(c=null),c!==s&&(l=va())!==s&&(f=la())!==s&&(b=va())!==s?((v=xa())===s&&(v=null),v!==s?(d=c,L=v,e={dataType:e,length:parseInt(a.join(""),10),scale:d&&parseInt(d[2].join(""),10),parentheses:!0,suffix:L},t=e):(lu=t,t=s)):(lu=t,t=s);}else lu=t,t=s;else lu=t,t=s;}else lu=t,t=s;else lu=t,t=s;else lu=t,t=s;else lu=t,t=s;var d,L;if(t===s){if(t=lu,(e=Fo())===s&&(e=Po())===s&&(e=Go())===s&&(e=jo())===s&&(e=Yo())===s&&(e=Bo())===s&&(e=Xo())===s&&(e=Wo())===s&&(e=Vo()),e!==s){if(n=[],wt.test(r.charAt(lu))?(u=r.charAt(lu),lu++):(u=s,0===du&&Eu(Et)),u!==s)for(;u!==s;)n.push(u),wt.test(r.charAt(lu))?(u=r.charAt(lu),lu++):(u=s,0===du&&Eu(Et));else n=s;n!==s&&(u=va())!==s?((o=xa())===s&&(o=null),o!==s?(e=function(r,t,e){return {dataType:r,length:parseInt(t.join(""),10),suffix:e}}(e,n,o),t=e):(lu=t,t=s)):(lu=t,t=s);}else lu=t,t=s;t===s&&(t=lu,(e=Fo())===s&&(e=Po())===s&&(e=Go())===s&&(e=jo())===s&&(e=Yo())===s&&(e=Bo())===s&&(e=Xo())===s&&(e=Wo())===s&&(e=Vo()),e!==s&&(n=va())!==s?((u=xa())===s&&(u=null),u!==s&&(o=va())!==s?(e=function(r,t){return {dataType:r,suffix:t}}(e,u),t=e):(lu=t,t=s)):(lu=t,t=s));}return t}())===s&&(t=function(){var t,e,n,u;t=lu,(e=Ko())===s&&(e=qo())===s&&(e=Zo())===s&&(e=zo());if(e!==s)if(va()!==s)if(ca()!==s)if(va()!==s){if(n=[],wt.test(r.charAt(lu))?(u=r.charAt(lu),lu++):(u=s,0===du&&Eu(Et)),u!==s)for(;u!==s;)n.push(u),wt.test(r.charAt(lu))?(u=r.charAt(lu),lu++):(u=s,0===du&&Eu(Et));else n=s;n!==s&&(u=va())!==s&&la()!==s?(e={dataType:e,length:parseInt(n.join(""),10)},t=e):(lu=t,t=s);}else lu=t,t=s;else lu=t,t=s;else lu=t,t=s;else lu=t,t=s;t===s&&(t=lu,(e=Ko())===s&&(e=qo())===s&&(e=Zo())===s&&(e=zo()),e!==s&&(e=function(r){return {dataType:r}}(e)),t=e);return t}())===s&&(t=function(){var e;(e=function(){var t,e,n,u;return t=lu,"json"===r.substr(lu,4).toLowerCase()?(e=r.substr(lu,4),lu+=4):(e=s,0===du&&Eu(Ze)),e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?(t=e="JSON"):(lu=t,t=s)):(lu=t,t=s),t}())!==s&&(e=cu(e));return e}())===s&&(t=function(){var e;(e=function(){var t,e,n,u;return t=lu,"tinytext"===r.substr(lu,8).toLowerCase()?(e=r.substr(lu,8),lu+=8):(e=s,0===du&&Eu(Qe)),e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?(t=e="TINYTEXT"):(lu=t,t=s)):(lu=t,t=s),t}())===s&&(e=function(){var t,e,n,u;return t=lu,"text"===r.substr(lu,4).toLowerCase()?(e=r.substr(lu,4),lu+=4):(e=s,0===du&&Eu(rn)),e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?(t=e="TEXT"):(lu=t,t=s)):(lu=t,t=s),t}())===s&&(e=function(){var t,e,n,u;return t=lu,"mediumtext"===r.substr(lu,10).toLowerCase()?(e=r.substr(lu,10),lu+=10):(e=s,0===du&&Eu(tn)),e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?(t=e="MEDIUMTEXT"):(lu=t,t=s)):(lu=t,t=s),t}())===s&&(e=function(){var t,e,n,u;return t=lu,"longtext"===r.substr(lu,8).toLowerCase()?(e=r.substr(lu,8),lu+=8):(e=s,0===du&&Eu(en)),e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?(t=e="LONGTEXT"):(lu=t,t=s)):(lu=t,t=s),t}());e!==s&&(e={dataType:e});return e}()),t}function xa(){var t,e,n;return t=lu,(e=Ho())===s&&(e=null),e!==s&&va()!==s?((n=function(){var t,e,n,u;return t=lu,"zerofill"===r.substr(lu,8).toLowerCase()?(e=r.substr(lu,8),lu+=8):(e=s,0===du&&Eu(Ke)),e!==s?(n=lu,du++,u=$s(),du--,u===s?n=void 0:(lu=n,n=s),n!==s?(t=e="ZEROFILL"):(lu=t,t=s)):(lu=t,t=s),t}())===s&&(n=null),n!==s?(t=e=function(r,t){const e=[];return r&&e.push(r),t&&e.push(t),e}(e,n)):(lu=t,t=s)):(lu=t,t=s),t}const Ua={ALTER:!0,ALL:!0,ADD:!0,AND:!0,AS:!0,ASC:!0,BETWEEN:!0,BY:!0,CALL:!0,CASE:!0,CREATE:!0,CONTAINS:!0,CURRENT_DATE:!0,CURRENT_TIME:!0,CURRENT_TIMESTAMP:!0,CURRENT_USER:!0,DELETE:!0,DESC:!0,DISTINCT:!0,DROP:!0,ELSE:!0,END:!0,EXISTS:!0,EXPLAIN:!0,FALSE:!0,FROM:!0,FULL:!0,GROUP:!0,HAVING:!0,IN:!0,INNER:!0,INSERT:!0,INTO:!0,IS:!0,JOIN:!0,JSON:!0,KEY:!0,LEFT:!0,LIKE:!0,LIMIT:!0,LOW_PRIORITY:!0,NOT:!0,NULL:!0,ON:!0,OR:!0,ORDER:!0,OUTER:!0,RECURSIVE:!0,RENAME:!0,READ:!0,RIGHT:!0,SELECT:!0,SESSION_USER:!0,SET:!0,SHOW:!0,STATUS:!0,SYSTEM_USER:!0,TABLE:!0,THEN:!0,TRUE:!0,TRUNCATE:!0,TYPE:!0,UNION:!0,UPDATE:!0,USING:!0,VALUES:!0,WITH:!0,WHEN:!0,WHERE:!0,WRITE:!0,GLOBAL:!0,SESSION:!0,LOCAL:!0,PERSIST:!0,PERSIST_ONLY:!0};function Ma(r,t){return {type:"unary_expr",operator:r,expr:t}}function Da(r,t,e){return {type:"binary_expr",operator:r,left:t,right:e}}function ka(r){const t=n(Number.MAX_SAFE_INTEGER);return !(n(r)<t)}function $a(r,t,e=3){const n=[r];for(let r=0;r<t.length;r++)n.push(t[r][e]);return n}function Fa(r,t){let e=r;for(let r=0;r<t.length;r++)e=Da(t[r][1],e,t[r][3]);return e}function Pa(r){const t=Ba[r];return t||(r||null)}function Ha(r){const t=new Set;for(let e of r.keys()){const r=e.split("::");if(!r){t.add(e);break}r&&r[1]&&(r[1]=Pa(r[1])),t.add(r.join("::"));}return Array.from(t)}let Ga=[];const ja=new Set,Ya=new Set,Ba={};if((e=a())!==s&&lu===r.length)return e;throw e!==s&&lu<r.length&&Eu({type:"end"}),hu(vu,bu<r.length?r.charAt(bu):null,bu<r.length?wu(bu,bu+1):wu(bu,bu))}};},function(r,t,e){var n=e(0);function u(r,t,e,n){this.message=r,this.expected=t,this.found=e,this.location=n,this.name="SyntaxError","function"==typeof Error.captureStackTrace&&Error.captureStackTrace(this,u);}!function(r,t){function e(){this.constructor=r;}e.prototype=t.prototype,r.prototype=new e;}(u,Error),u.buildMessage=function(r,t){var e={literal:function(r){return '"'+u(r.text)+'"'},class:function(r){var t,e="";for(t=0;t<r.parts.length;t++)e+=r.parts[t]instanceof Array?s(r.parts[t][0])+"-"+s(r.parts[t][1]):s(r.parts[t]);return "["+(r.inverted?"^":"")+e+"]"},any:function(r){return "any character"},end:function(r){return "end of input"},other:function(r){return r.description}};function n(r){return r.charCodeAt(0).toString(16).toUpperCase()}function u(r){return r.replace(/\\/g,"\\\\").replace(/"/g,'\\"').replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(r){return "\\x0"+n(r)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(r){return "\\x"+n(r)}))}function s(r){return r.replace(/\\/g,"\\\\").replace(/\]/g,"\\]").replace(/\^/g,"\\^").replace(/-/g,"\\-").replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(r){return "\\x0"+n(r)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(r){return "\\x"+n(r)}))}return "Expected "+function(r){var t,n,u,s=new Array(r.length);for(t=0;t<r.length;t++)s[t]=(u=r[t],e[u.type](u));if(s.sort(),s.length>0){for(t=1,n=1;t<s.length;t++)s[t-1]!==s[t]&&(s[n]=s[t],n++);s.length=n;}switch(s.length){case 1:return s[0];case 2:return s[0]+" or "+s[1];default:return s.slice(0,-1).join(", ")+", or "+s[s.length-1]}}(r)+" but "+function(r){return r?'"'+u(r)+'"':"end of input"}(t)+" found."},r.exports={SyntaxError:u,parse:function(r,t){t=void 0!==t?t:{};var e,s={},o={start:Bu},a=Bu,i=function(r,t){return wi(r,t,1)},c=function(r,t){return wi(r,t)},l=Fu("AUTO_INCREMENT",!0),f=Fu("UNIQUE",!0),b=Fu("KEY",!0),v=Fu("PRIMARY",!0),d=Fu("COLUMN_FORMAT",!0),L=Fu("FIXED",!0),C=Fu("DYNAMIC",!0),p=Fu("DEFAULT",!0),w=Fu("STORAGE",!0),E=Fu("DISK",!0),h=Fu("MEMORY",!0),A=Fu("ALGORITHM",!0),y=Fu("INSTANT",!0),T=Fu("INPLACE",!0),m=Fu("COPY",!0),S=Fu("LOCK",!0),I=Fu("NONE",!0),N=Fu("SHARED",!0),R=Fu("EXCLUSIVE",!0),_=Fu("CHECK",!0),g=Fu("NOCHECK",!0),O=Fu("NOT",!0),x=Fu("FOR",!0),U=Fu("REPLICATION",!0),M=Fu("FOREIGN KEY",!0),D=Fu("ENFORCED",!0),k=Fu("MATCH FULL",!0),$=Fu("MATCH PARTIAL",!0),F=Fu("MATCH SIMPLE",!0),P=Fu("ON",!0),H=Fu("DELETE",!0),G=Fu("UPDATE",!0),j=Fu("RESTRICT",!0),Y=Fu("CASCADE",!0),B=Fu("SET NULL",!0),X=Fu("NO ACTION",!0),W=Fu("SET DEFAULT",!0),V=Fu("CHARACTER",!0),K=Fu("SET",!0),q=Fu("CHARSET",!0),Z=Fu("COLLATE",!0),z=Fu("AVG_ROW_LENGTH",!0),J=Fu("KEY_BLOCK_SIZE",!0),Q=Fu("MAX_ROWS",!0),rr=Fu("MIN_ROWS",!0),tr=Fu("STATS_SAMPLE_PAGES",!0),er=Fu("CONNECTION",!0),nr=Fu("COMPRESSION",!0),ur=Fu("'",!1),sr=Fu("ZLIB",!0),or=Fu("LZ4",!0),ar=Fu("ENGINE",!0),ir=Fu("READ",!0),cr=Fu("LOCAL",!0),lr=Fu("LOW_PRIORITY",!0),fr=Fu("WRITE",!0),br=function(r,t){return wi(r,t)},vr=Fu("BINARY",!0),dr=Fu("MASTER",!0),Lr=Fu("LOGS",!0),Cr=Fu("BINLOG",!0),pr=Fu("EVENTS",!0),wr=Fu("COLLATION",!0),Er=Fu("GRANTS",!0),hr=Fu("(",!1),Ar=Fu(")",!1),yr=Fu("BTREE",!0),Tr=Fu("HASH",!0),mr=Fu("WITH",!0),Sr=Fu("PARSER",!0),Ir=Fu("VISIBLE",!0),Nr=Fu("INVISIBLE",!0),Rr=function(r,t){return t.unshift(r),t.forEach(r=>{const{table:t,as:e}=r;Si[t]=t,e&&(Si[e]=t),function(r){const t=Ai(r);r.clear(),t.forEach(t=>r.add(t));}(mi);}),t},_r=Fu("=",!1),gr=Fu("DUPLICATE",!0),Or=function(r,t){return Ei(r,t)},xr=Fu("!",!1),Ur=function(r){return r[0]+" "+r[2]},Mr=Fu(">=",!1),Dr=Fu(">",!1),kr=Fu("<=",!1),$r=Fu("<>",!1),Fr=Fu("<",!1),Pr=Fu("!=",!1),Hr=Fu("+",!1),Gr=Fu("-",!1),jr=Fu("*",!1),Yr=Fu("/",!1),Br=Fu("%",!1),Xr=Fu("?",!1),Wr=function(r){return !0===di[r.toUpperCase()]},Vr=Fu('"',!1),Kr=/^[^"]/,qr=Pu(['"'],!0,!1),Zr=function(r){return r.join("")},zr=/^[^']/,Jr=Pu(["'"],!0,!1),Qr=Fu("`",!1),rt=/^[^`]/,tt=Pu(["`"],!0,!1),et=function(r,t){return r+t.join("")},nt=/^[A-Za-z_]/,ut=Pu([["A","Z"],["a","z"],"_"],!1,!1),st=/^[A-Za-z0-9_]/,ot=Pu([["A","Z"],["a","z"],["0","9"],"_"],!1,!1),at=/^[A-Za-z0-9_:]/,it=Pu([["A","Z"],["a","z"],["0","9"],"_",":"],!1,!1),ct=Fu(":",!1),lt=function(r,t,e){return {type:"function",name:r,args:t||{type:"expr_list",value:[]},over:e}},ft=Fu("X",!0),bt=function(r,t){return {type:r.toLowerCase(),value:t[1].join("")}},vt=Fu("ON UPDATE CURRENT_TIMESTAMP",!0),dt=/^[^"\\\0-\x1F\x7F]/,Lt=Pu(['"',"\\",["\0",""],""],!0,!1),Ct=/^[^'\\]/,pt=Pu(["'","\\"],!0,!1),wt=Fu("\\'",!1),Et=Fu('\\"',!1),ht=Fu("\\\\",!1),At=Fu("\\/",!1),yt=Fu("\\b",!1),Tt=Fu("\\f",!1),mt=Fu("\\n",!1),St=Fu("\\r",!1),It=Fu("\\t",!1),Nt=Fu("\\u",!1),Rt=Fu("\\",!1),_t=/^[\n\r]/,gt=Pu(["\n","\r"],!1,!1),Ot=Fu(".",!1),xt=/^[0-9]/,Ut=Pu([["0","9"]],!1,!1),Mt=/^[0-9a-fA-F]/,Dt=Pu([["0","9"],["a","f"],["A","F"]],!1,!1),kt=/^[eE]/,$t=Pu(["e","E"],!1,!1),Ft=/^[+\-]/,Pt=Pu(["+","-"],!1,!1),Ht=Fu("NULL",!0),Gt=Fu("NOT NULL",!0),jt=Fu("TRUE",!0),Yt=Fu("TO",!0),Bt=Fu("FALSE",!0),Xt=Fu("SHOW",!0),Wt=Fu("DROP",!0),Vt=Fu("USE",!0),Kt=Fu("ALTER",!0),qt=Fu("SELECT",!0),Zt=Fu("CREATE",!0),zt=Fu("TEMPORARY",!0),Jt=Fu("IF NOT EXISTS",!0),Qt=Fu("INSERT",!0),re=Fu("RECURSIVE",!1),te=Fu("REPLACE",!0),ee=Fu("RENAME",!0),ne=Fu("IGNORE",!0),ue=(Fu("PARTITION",!0)),se=Fu("INTO",!0),oe=Fu("FROM",!0),ae=Fu("UNLOCK",!0),ie=Fu("AS",!0),ce=Fu("TABLE",!0),le=Fu("TABLES",!0),fe=Fu("DATABASE",!0),be=Fu("SCHEME",!0),ve=Fu("LEFT",!0),de=Fu("RIGHT",!0),Le=Fu("FULL",!0),Ce=Fu("INNER",!0),pe=Fu("JOIN",!0),we=Fu("OUTER",!0),Ee=Fu("OVER",!0),he=Fu("UNION",!0),Ae=Fu("VALUES",!0),ye=Fu("USING",!0),Te=Fu("WHERE",!0),me=Fu("GROUP",!0),Se=Fu("BY",!0),Ie=Fu("ORDER",!0),Ne=Fu("HAVING",!0),Re=Fu("LIMIT",!0),_e=Fu("OFFSET",!0),ge=Fu("ASC",!0),Oe=Fu("DESC",!0),xe=Fu("DESCRIBE",!0),Ue=Fu("ALL",!0),Me=Fu("DISTINCT",!0),De=Fu("BETWEEN",!0),ke=Fu("IN",!0),$e=Fu("IS",!0),Fe=Fu("LIKE",!0),Pe=Fu("RLIKE",!0),He=Fu("REGEXP",!0),Ge=Fu("EXISTS",!0),je=Fu("AND",!0),Ye=Fu("OR",!0),Be=Fu("COUNT",!0),Xe=Fu("GROUP_CONCAT",!0),We=Fu("MAX",!0),Ve=Fu("MIN",!0),Ke=Fu("SUM",!0),qe=Fu("AVG",!0),Ze=Fu("CALL",!0),ze=Fu("CASE",!0),Je=Fu("WHEN",!0),Qe=Fu("THEN",!0),rn=Fu("ELSE",!0),tn=Fu("END",!0),en=Fu("CAST",!0),nn=Fu("BIT",!0),un=Fu("CHAR",!0),sn=Fu("VARCHAR",!0),on=Fu("NUMERIC",!0),an=Fu("DECIMAL",!0),cn=Fu("SIGNED",!0),ln=Fu("UNSIGNED",!0),fn=Fu("INT",!0),bn=Fu("ZEROFILL",!0),vn=Fu("INTEGER",!0),dn=Fu("JSON",!0),Ln=Fu("SMALLINT",!0),Cn=Fu("TINYINT",!0),pn=Fu("TINYTEXT",!0),wn=Fu("TEXT",!0),En=Fu("MEDIUMTEXT",!0),hn=Fu("LONGTEXT",!0),An=Fu("BIGINT",!0),yn=Fu("ENUM",!0),Tn=Fu("FLOAT",!0),mn=Fu("DOUBLE",!0),Sn=Fu("DATE",!0),In=Fu("DATETIME",!0),Nn=Fu("TIME",!0),Rn=Fu("TIMESTAMP",!0),_n=Fu("TRUNCATE",!0),gn=Fu("USER",!0),On=Fu("CURRENT_DATE",!0),xn=(Fu("INTERVAL",!0)),Un=Fu("YEAR",!0),Mn=Fu("MONTH",!0),Dn=Fu("DAY",!0),kn=Fu("HOUR",!0),$n=Fu("MINUTE",!0),Fn=Fu("SECOND",!0),Pn=Fu("CURRENT_TIME",!0),Hn=Fu("CURRENT_TIMESTAMP",!0),Gn=Fu("CURRENT_USER",!0),jn=Fu("SESSION_USER",!0),Yn=Fu("SYSTEM_USER",!0),Bn=Fu("GLOBAL",!0),Xn=Fu("SESSION",!0),Wn=Fu("PERSIST",!0),Vn=Fu("PERSIST_ONLY",!0),Kn=Fu("@",!1),qn=Fu("@@",!1),Zn=Fu("$",!1),zn=Fu("return",!0),Jn=Fu(":=",!1),Qn=Fu("DUAL",!0),ru=Fu("ADD",!0),tu=Fu("COLUMN",!0),eu=Fu("INDEX",!0),nu=Fu("FULLTEXT",!0),uu=Fu("SPATIAL",!0),su=Fu("COMMENT",!0),ou=Fu("CONSTRAINT",!0),au=Fu("REFERENCES",!0),iu=Fu("SQL_CALC_FOUND_ROWS",!0),cu=Fu("SQL_CACHE",!0),lu=Fu("SQL_NO_CACHE",!0),fu=Fu("SQL_SMALL_RESULT",!0),bu=Fu("SQL_BIG_RESULT",!0),vu=Fu("SQL_BUFFER_RESULT",!0),du=Fu(",",!1),Lu=Fu("[",!1),Cu=Fu("]",!1),pu=Fu(";",!1),wu=Fu("->",!1),Eu=Fu("->>",!1),hu=Fu("||",!1),Au=Fu("&&",!1),yu=Fu("/*",!1),Tu=Fu("*/",!1),mu=Fu("--",!1),Su=Fu("#",!1),Iu={type:"any"},Nu=/^[ \t\n\r]/,Ru=Pu([" ","\t","\n","\r"],!1,!1),_u=Fu("boolean",!0),gu=function(r){return {dataType:r}},Ou=/^[0-6]/,xu=Pu([["0","6"]],!1,!1),Uu=0,Mu=[{line:1,column:1}],Du=0,ku=[],$u=0;if("startRule"in t){if(!(t.startRule in o))throw new Error("Can't start parsing from rule \""+t.startRule+'".');a=o[t.startRule];}function Fu(r,t){return {type:"literal",text:r,ignoreCase:t}}function Pu(r,t,e){return {type:"class",parts:r,inverted:t,ignoreCase:e}}function Hu(t){var e,n=Mu[t];if(n)return n;for(e=t-1;!Mu[e];)e--;for(n={line:(n=Mu[e]).line,column:n.column};e<t;)10===r.charCodeAt(e)?(n.line++,n.column=1):n.column++,e++;return Mu[t]=n,n}function Gu(r,t){var e=Hu(r),n=Hu(t);return {start:{offset:r,line:e.line,column:e.column},end:{offset:t,line:n.line,column:n.column}}}function ju(r){Uu<Du||(Uu>Du&&(Du=Uu,ku=[]),ku.push(r));}function Yu(r,t,e){return new u(u.buildMessage(r,t),r,t,e)}function Bu(){var r,t;return r=Uu,Ka()!==s?((t=function(){var r,t,e,n,u,o,a,i;if(r=Uu,(t=Wu())!==s){if(e=[],n=Uu,(u=Ka())!==s&&(o=Wa())!==s&&(a=Ka())!==s&&(i=Wu())!==s?n=u=[u,o,a,i]:(Uu=n,n=s),n!==s)for(;n!==s;)e.push(n),n=Uu,(u=Ka())!==s&&(o=Wa())!==s&&(a=Ka())!==s&&(i=Wu())!==s?n=u=[u,o,a,i]:(Uu=n,n=s);else e=s;e!==s?(t=function(r,t){const e=[r&&r.ast||r];for(let r=0;r<t.length;r++)t[r][3]&&0!==t[r][3].length&&e.push(t[r][3]&&t[r][3].ast||t[r][3]);return {tableList:Array.from(Ti),columnList:Ai(mi),ast:e}}(t,e),r=t):(Uu=r,r=s);}else Uu=r,r=s;return r}())===s&&(t=Xu())===s&&(t=Wu()),t!==s?(r=t):(Uu=r,r=s)):(Uu=r,r=s),r}function Xu(){var t;return (t=function(){var r,t,e,n,u,o;r=Uu,(t=Do())!==s&&Ka()!==s&&(e=Wo())!==s&&Ka()!==s&&(n=ms())!==s?(a=t,c=e,(l=n)&&l.forEach(r=>Ti.add(`${a}::${r.db}::${r.table}`)),t={tableList:Array.from(Ti),columnList:Ai(mi),ast:{type:a.toLowerCase(),keyword:c.toLowerCase(),name:l}},r=t):(Uu=r,r=s);var a,c,l;r===s&&(r=Uu,(t=Do())!==s&&Ka()!==s&&(e=$a())!==s&&Ka()!==s&&(n=ao())!==s&&Ka()!==s&&Ko()!==s&&Ka()!==s&&(u=Rs())!==s&&Ka()!==s?((o=function(){var r,t,e,n,u,o;r=Uu,(t=Qu())===s&&(t=rs());if(t!==s){for(e=[],n=Uu,(u=Ka())!==s?((o=Qu())===s&&(o=rs()),o!==s?n=u=[u,o]:(Uu=n,n=s)):(Uu=n,n=s);n!==s;)e.push(n),n=Uu,(u=Ka())!==s?((o=Qu())===s&&(o=rs()),o!==s?n=u=[u,o]:(Uu=n,n=s)):(Uu=n,n=s);e!==s?(t=i(t,e),r=t):(Uu=r,r=s);}else Uu=r,r=s;return r}())===s&&(o=null),o!==s&&Ka()!==s?(t=function(r,t,e,n,u){return {tableList:Array.from(Ti),columnList:Ai(mi),ast:{type:r.toLowerCase(),keyword:t.toLowerCase(),name:e,table:n,options:u}}}(t,e,n,u,o),r=t):(Uu=r,r=s)):(Uu=r,r=s));return r}())===s&&(t=function(){var t;(t=function(){var t,e,n,u,o,a,i,l,f,b;t=Uu,(e=$o())!==s&&Ka()!==s?((n=Fo())===s&&(n=null),n!==s&&Ka()!==s&&Wo()!==s&&Ka()!==s?((u=Po())===s&&(u=null),u!==s&&Ka()!==s&&(o=ms())!==s&&Ka()!==s&&(a=function(){var r,t,e,n,u,o,a,i,l;if(r=Uu,(t=Ba())!==s)if(Ka()!==s)if((e=Ku())!==s){for(n=[],u=Uu,(o=Ka())!==s&&(a=ja())!==s&&(i=Ka())!==s&&(l=Ku())!==s?u=o=[o,a,i,l]:(Uu=u,u=s);u!==s;)n.push(u),u=Uu,(o=Ka())!==s&&(a=ja())!==s&&(i=Ka())!==s&&(l=Ku())!==s?u=o=[o,a,i,l]:(Uu=u,u=s);n!==s&&(u=Ka())!==s&&(o=Xa())!==s?(t=c(e,n),r=t):(Uu=r,r=s);}else Uu=r,r=s;else Uu=r,r=s;else Uu=r,r=s;return r}())!==s&&Ka()!==s?((i=function(){var r,t,e,n,u,o,a,i;if(r=Uu,(t=is())!==s){for(e=[],n=Uu,(u=Ka())!==s?((o=ja())===s&&(o=null),o!==s&&(a=Ka())!==s&&(i=is())!==s?n=u=[u,o,a,i]:(Uu=n,n=s)):(Uu=n,n=s);n!==s;)e.push(n),n=Uu,(u=Ka())!==s?((o=ja())===s&&(o=null),o!==s&&(a=Ka())!==s&&(i=is())!==s?n=u=[u,o,a,i]:(Uu=n,n=s)):(Uu=n,n=s);e!==s?(t=wi(t,e),r=t):(Uu=r,r=s);}else Uu=r,r=s;return r}())===s&&(i=null),i!==s&&Ka()!==s?((l=function(){var t,e,n,u;t=Uu,"ignore"===r.substr(Uu,6).toLowerCase()?(e=r.substr(Uu,6),Uu+=6):(e=s,0===$u&&ju(ne));e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?t=e=[e,n]:(Uu=t,t=s)):(Uu=t,t=s);return t}())===s&&(l=Ho()),l===s&&(l=null),l!==s&&Ka()!==s?((f=Xo())===s&&(f=null),f!==s&&Ka()!==s?((b=Vu())===s&&(b=null),b!==s?(v=e,d=n,L=u,p=a,w=i,E=l,h=f,A=b,(C=o)&&C.forEach(r=>Ti.add(`create::${r.db}::${r.table}`)),e={tableList:Array.from(Ti),columnList:Ai(mi),ast:{type:v[0].toLowerCase(),keyword:"table",temporary:d&&d[0].toLowerCase(),if_not_exists:L&&L[0].toLowerCase(),table:C,ignore_replace:E&&E[0].toLowerCase(),as:h&&h[0].toLowerCase(),query_expr:A&&A.ast,create_definitions:p,table_options:w}},t=e):(Uu=t,t=s)):(Uu=t,t=s)):(Uu=t,t=s)):(Uu=t,t=s)):(Uu=t,t=s)):(Uu=t,t=s)):(Uu=t,t=s);var v,d,L,C,p,w,E,h,A;t===s&&(t=Uu,(e=$o())!==s&&Ka()!==s?((n=Fo())===s&&(n=null),n!==s&&Ka()!==s&&Wo()!==s&&Ka()!==s?((u=Po())===s&&(u=null),u!==s&&Ka()!==s&&(o=ms())!==s&&Ka()!==s&&(a=function r(){var t,e;(t=function(){var r,t;r=Uu,ia()!==s&&Ka()!==s&&(t=ms())!==s?(r={type:"like",table:t}):(Uu=r,r=s);return r}())===s&&(t=Uu,Ba()!==s&&Ka()!==s&&(e=r())!==s&&Ka()!==s&&Xa()!==s?((n=e).parentheses=!0,t=n):(Uu=t,t=s));var n;return t}())!==s?(e=function(r,t,e,n,u){return n&&n.forEach(r=>Ti.add(`create::${r.db}::${r.table}`)),{tableList:Array.from(Ti),columnList:Ai(mi),ast:{type:r[0].toLowerCase(),keyword:"table",temporary:t&&t[0].toLowerCase(),if_not_exists:e&&e[0].toLowerCase(),table:n,like:u}}}(e,n,u,o,a),t=e):(Uu=t,t=s)):(Uu=t,t=s)):(Uu=t,t=s));return t}())===s&&(t=function(){var t,e,n,u,o,a;t=Uu,(e=$o())!==s&&Ka()!==s?((n=function(){var t,e,n,u;t=Uu,"database"===r.substr(Uu,8).toLowerCase()?(e=r.substr(Uu,8),Uu+=8):(e=s,0===$u&&ju(fe));e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="DATABASE"):(Uu=t,t=s)):(Uu=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=Uu,"scheme"===r.substr(Uu,6).toLowerCase()?(e=r.substr(Uu,6),Uu+=6):(e=s,0===$u&&ju(be));e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="SCHEME"):(Uu=t,t=s)):(Uu=t,t=s);return t}()),n!==s&&Ka()!==s?((u=Po())===s&&(u=null),u!==s&&Ka()!==s&&(o=bo())!==s&&Ka()!==s?((a=function(){var r,t,e,n,u,o;if(r=Uu,(t=as())!==s){for(e=[],n=Uu,(u=Ka())!==s&&(o=as())!==s?n=u=[u,o]:(Uu=n,n=s);n!==s;)e.push(n),n=Uu,(u=Ka())!==s&&(o=as())!==s?n=u=[u,o]:(Uu=n,n=s);e!==s?(t=i(t,e),r=t):(Uu=r,r=s);}else Uu=r,r=s;return r}())===s&&(a=null),a!==s?(c=e,l=u,f=o,b=a,e={tableList:Array.from(Ti),columnList:Ai(mi),ast:{type:c[0].toLowerCase(),keyword:"database",if_not_exists:l&&l[0].toLowerCase(),database:f,create_definitions:b}},t=e):(Uu=t,t=s)):(Uu=t,t=s)):(Uu=t,t=s)):(Uu=t,t=s);var c,l,f,b;return t}());return t}())===s&&(t=function(){var t,e,n,u;t=Uu,(e=function(){var t,e,n,u;t=Uu,"truncate"===r.substr(Uu,8).toLowerCase()?(e=r.substr(Uu,8),Uu+=8):(e=s,0===$u&&ju(_n));e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="TRUNCATE"):(Uu=t,t=s)):(Uu=t,t=s);return t}())!==s&&Ka()!==s?((n=Wo())===s&&(n=null),n!==s&&Ka()!==s&&(u=ms())!==s?(o=e,a=n,(i=u)&&i.forEach(r=>Ti.add(`${o}::${r.db}::${r.table}`)),e={tableList:Array.from(Ti),columnList:Ai(mi),ast:{type:o.toLowerCase(),keyword:a&&a.toLowerCase()||"table",name:i}},t=e):(Uu=t,t=s)):(Uu=t,t=s);var o,a,i;return t}())===s&&(t=function(){var r,t,e;r=Uu,(t=Go())!==s&&Ka()!==s&&Wo()!==s&&Ka()!==s&&(e=function(){var r,t,e,n,u,o,a,i;if(r=Uu,(t=hs())!==s){for(e=[],n=Uu,(u=Ka())!==s&&(o=ja())!==s&&(a=Ka())!==s&&(i=hs())!==s?n=u=[u,o,a,i]:(Uu=n,n=s);n!==s;)e.push(n),n=Uu,(u=Ka())!==s&&(o=ja())!==s&&(a=Ka())!==s&&(i=hs())!==s?n=u=[u,o,a,i]:(Uu=n,n=s);e!==s?(t=c(t,e),r=t):(Uu=r,r=s);}else Uu=r,r=s;return r}())!==s?((n=e).forEach(r=>r.forEach(r=>r.table&&Ti.add(`rename::${r.db}::${r.table}`))),t={tableList:Array.from(Ti),columnList:Ai(mi),ast:{type:"rename",table:n}},r=t):(Uu=r,r=s);var n;return r}())===s&&(t=function(){var t,e,n;t=Uu,(e=function(){var t,e,n,u;t=Uu,"call"===r.substr(Uu,4).toLowerCase()?(e=r.substr(Uu,4),Uu+=4):(e=s,0===$u&&ju(Ze));e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="CALL"):(Uu=t,t=s)):(Uu=t,t=s);return t}())!==s&&Ka()!==s&&(n=ii())!==s?(u=n,e={tableList:Array.from(Ti),columnList:Ai(mi),ast:{type:"call",expr:u}},t=e):(Uu=t,t=s);var u;return t}())===s&&(t=function(){var t,e,n;t=Uu,(e=function(){var t,e,n,u;t=Uu,"use"===r.substr(Uu,3).toLowerCase()?(e=r.substr(Uu,3),Uu+=3):(e=s,0===$u&&ju(Vt));e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?t=e=[e,n]:(Uu=t,t=s)):(Uu=t,t=s);return t}())!==s&&Ka()!==s&&(n=io())!==s?(u=n,Ti.add(`use::${u}::null`),e={tableList:Array.from(Ti),columnList:Ai(mi),ast:{type:"use",db:u}},t=e):(Uu=t,t=s);var u;return t}())===s&&(t=function(){var t,e,n,u;t=Uu,(e=function(){var t,e,n,u;t=Uu,"alter"===r.substr(Uu,5).toLowerCase()?(e=r.substr(Uu,5),Uu+=5):(e=s,0===$u&&ju(Kt));e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?t=e=[e,n]:(Uu=t,t=s)):(Uu=t,t=s);return t}())!==s&&Ka()!==s&&Wo()!==s&&Ka()!==s&&(n=ms())!==s&&Ka()!==s&&(u=function(){var r,t,e,n,u,o,a,i;if(r=Uu,(t=Ju())!==s){for(e=[],n=Uu,(u=Ka())!==s&&(o=ja())!==s&&(a=Ka())!==s&&(i=Ju())!==s?n=u=[u,o,a,i]:(Uu=n,n=s);n!==s;)e.push(n),n=Uu,(u=Ka())!==s&&(o=ja())!==s&&(a=Ka())!==s&&(i=Ju())!==s?n=u=[u,o,a,i]:(Uu=n,n=s);e!==s?(t=c(t,e),r=t):(Uu=r,r=s);}else Uu=r,r=s;return r}())!==s?(a=u,(o=n)&&o.length>0&&o.forEach(r=>Ti.add(`alter::${r.db}::${r.table}`)),e={tableList:Array.from(Ti),columnList:Ai(mi),ast:{type:"alter",table:o,expr:a}},t=e):(Uu=t,t=s);var o,a;return t}())===s&&(t=function(){var t,e,n,u;t=Uu,(e=Bo())!==s&&Ka()!==s?((n=function(){var t,e,n,u;t=Uu,"global"===r.substr(Uu,6).toLowerCase()?(e=r.substr(Uu,6),Uu+=6):(e=s,0===$u&&ju(Bn));e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="GLOBAL"):(Uu=t,t=s)):(Uu=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=Uu,"session"===r.substr(Uu,7).toLowerCase()?(e=r.substr(Uu,7),Uu+=7):(e=s,0===$u&&ju(Xn));e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="SESSION"):(Uu=t,t=s)):(Uu=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=Uu,"local"===r.substr(Uu,5).toLowerCase()?(e=r.substr(Uu,5),Uu+=5):(e=s,0===$u&&ju(cr));e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="LOCAL"):(Uu=t,t=s)):(Uu=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=Uu,"persist"===r.substr(Uu,7).toLowerCase()?(e=r.substr(Uu,7),Uu+=7):(e=s,0===$u&&ju(Wn));e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="PERSIST"):(Uu=t,t=s)):(Uu=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=Uu,"persist_only"===r.substr(Uu,12).toLowerCase()?(e=r.substr(Uu,12),Uu+=12):(e=s,0===$u&&ju(Vn));e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="PERSIST_ONLY"):(Uu=t,t=s)):(Uu=t,t=s);return t}()),n===s&&(n=null),n!==s&&Ka()!==s&&(u=ei())!==s?(o=n,(a=u).keyword=o,e={tableList:Array.from(Ti),columnList:Ai(mi),ast:{type:"set",expr:a}},t=e):(Uu=t,t=s)):(Uu=t,t=s);var o,a;return t}())===s&&(t=function(){var t,e,n;t=Uu,(e=function(){var t,e,n,u;t=Uu,"lock"===r.substr(Uu,4).toLowerCase()?(e=r.substr(Uu,4),Uu+=4):(e=s,0===$u&&ju(S));e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?t=e=[e,n]:(Uu=t,t=s)):(Uu=t,t=s);return t}())!==s&&Ka()!==s&&Vo()!==s&&Ka()!==s&&(n=function(){var r,t,e,n,u,o,a,i;if(r=Uu,(t=cs())!==s){for(e=[],n=Uu,(u=Ka())!==s&&(o=ja())!==s&&(a=Ka())!==s&&(i=cs())!==s?n=u=[u,o,a,i]:(Uu=n,n=s);n!==s;)e.push(n),n=Uu,(u=Ka())!==s&&(o=ja())!==s&&(a=Ka())!==s&&(i=cs())!==s?n=u=[u,o,a,i]:(Uu=n,n=s);e!==s?(t=br(t,e),r=t):(Uu=r,r=s);}else Uu=r,r=s;return r}())!==s?(u=n,e={tableList:Array.from(Ti),columnList:Ai(mi),ast:{type:"lock",keyword:"tables",tables:u}},t=e):(Uu=t,t=s);var u;return t}())===s&&(t=function(){var t,e;t=Uu,(e=function(){var t,e,n,u;t=Uu,"unlock"===r.substr(Uu,6).toLowerCase()?(e=r.substr(Uu,6),Uu+=6):(e=s,0===$u&&ju(ae));e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?t=e=[e,n]:(Uu=t,t=s)):(Uu=t,t=s);return t}())!==s&&Ka()!==s&&Vo()!==s?(e={tableList:Array.from(Ti),columnList:Ai(mi),ast:{type:"unlock",keyword:"tables"}},t=e):(Uu=t,t=s);return t}())===s&&(t=function(){var t,e,n,u,o,a,i,c,l;t=Uu,(e=Mo())!==s&&Ka()!==s?("binary"===r.substr(Uu,6).toLowerCase()?(n=r.substr(Uu,6),Uu+=6):(n=s,0===$u&&ju(vr)),n===s&&("master"===r.substr(Uu,6).toLowerCase()?(n=r.substr(Uu,6),Uu+=6):(n=s,0===$u&&ju(dr))),n!==s&&(u=Ka())!==s?("logs"===r.substr(Uu,4).toLowerCase()?(o=r.substr(Uu,4),Uu+=4):(o=s,0===$u&&ju(Lr)),o!==s?(f=n,e={tableList:Array.from(Ti),columnList:Ai(mi),ast:{type:"show",suffix:"logs",keyword:f.toLowerCase()}},t=e):(Uu=t,t=s)):(Uu=t,t=s)):(Uu=t,t=s);var f;t===s&&(t=Uu,(e=Mo())!==s&&Ka()!==s?("binlog"===r.substr(Uu,6).toLowerCase()?(n=r.substr(Uu,6),Uu+=6):(n=s,0===$u&&ju(Cr)),n!==s&&(u=Ka())!==s?("events"===r.substr(Uu,6).toLowerCase()?(o=r.substr(Uu,6),Uu+=6):(o=s,0===$u&&ju(pr)),o!==s&&(a=Ka())!==s?((i=to())===s&&(i=null),i!==s&&Ka()!==s?((c=Es())===s&&(c=null),c!==s&&Ka()!==s?((l=Ms())===s&&(l=null),l!==s?(b=i,v=c,d=l,e={tableList:Array.from(Ti),columnList:Ai(mi),ast:{type:"show",suffix:"events",keyword:"binlog",in:b,from:v,limit:d}},t=e):(Uu=t,t=s)):(Uu=t,t=s)):(Uu=t,t=s)):(Uu=t,t=s)):(Uu=t,t=s)):(Uu=t,t=s),t===s&&(t=Uu,(e=Mo())!==s&&Ka()!==s?(n=Uu,"character"===r.substr(Uu,9).toLowerCase()?(u=r.substr(Uu,9),Uu+=9):(u=s,0===$u&&ju(V)),u!==s&&(o=Ka())!==s?("set"===r.substr(Uu,3).toLowerCase()?(a=r.substr(Uu,3),Uu+=3):(a=s,0===$u&&ju(K)),a!==s?n=u=[u,o,a]:(Uu=n,n=s)):(Uu=n,n=s),n===s&&("collation"===r.substr(Uu,9).toLowerCase()?(n=r.substr(Uu,9),Uu+=9):(n=s,0===$u&&ju(wr))),n!==s&&(u=Ka())!==s?((o=ro())===s&&(o=gs()),o===s&&(o=null),o!==s?(e=function(r,t){let e=Array.isArray(r)&&r||[r];return {tableList:Array.from(Ti),columnList:Ai(mi),ast:{type:"show",suffix:e[2]&&e[2].toLowerCase(),keyword:e[0].toLowerCase(),expr:t}}}(n,o),t=e):(Uu=t,t=s)):(Uu=t,t=s)):(Uu=t,t=s),t===s&&(t=function(){var t,e,n,u;t=Uu,(e=Mo())!==s&&Ka()!==s?("grants"===r.substr(Uu,6).toLowerCase()?(n=r.substr(Uu,6),Uu+=6):(n=s,0===$u&&ju(Er)),n!==s&&Ka()!==s?((u=function(){var t,e,n,u,o,a,i;t=Uu,"for"===r.substr(Uu,3).toLowerCase()?(e=r.substr(Uu,3),Uu+=3):(e=s,0===$u&&ju(x));e!==s&&Ka()!==s&&(n=io())!==s&&Ka()!==s?(u=Uu,(o=xa())!==s&&(a=Ka())!==s&&(i=io())!==s?u=o=[o,a,i]:(Uu=u,u=s),u===s&&(u=null),u!==s&&(o=Ka())!==s?((a=function(){var r,t;r=Uu,Qo()!==s&&Ka()!==s&&(t=function(){var r,t,e,n,u,o,a,i;if(r=Uu,(t=io())!==s){for(e=[],n=Uu,(u=Ka())!==s&&(o=ja())!==s&&(a=Ka())!==s&&(i=io())!==s?n=u=[u,o,a,i]:(Uu=n,n=s);n!==s;)e.push(n),n=Uu,(u=Ka())!==s&&(o=ja())!==s&&(a=Ka())!==s&&(i=io())!==s?n=u=[u,o,a,i]:(Uu=n,n=s);e!==s?(t=br(t,e),r=t):(Uu=r,r=s);}else Uu=r,r=s;return r}())!==s?(r=t):(Uu=r,r=s);return r}())===s&&(a=null),a!==s?(l=a,e={user:n,host:(c=u)&&c[2],role_list:l},t=e):(Uu=t,t=s)):(Uu=t,t=s)):(Uu=t,t=s);var c,l;return t}())===s&&(u=null),u!==s?(e=function(r){return {tableList:Array.from(Ti),columnList:Ai(mi),ast:{type:"show",keyword:"grants",for:r}}}(u),t=e):(Uu=t,t=s)):(Uu=t,t=s)):(Uu=t,t=s);return t}())));var b,v,d;return t}())===s&&(t=function(){var t,e,n;t=Uu,(e=ea())===s&&(e=function(){var t,e,n,u;t=Uu,"describe"===r.substr(Uu,8).toLowerCase()?(e=r.substr(Uu,8),Uu+=8):(e=s,0===$u&&ju(xe));e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="DESCRIBE"):(Uu=t,t=s)):(Uu=t,t=s);return t}());e!==s&&Ka()!==s&&(n=io())!==s?(u=n,e={tableList:Array.from(Ti),columnList:Ai(mi),ast:{type:"desc",table:u}},t=e):(Uu=t,t=s);var u;return t}()),t}function Wu(){var t;return (t=Vu())===s&&(t=function(){var r,t,e,n,u,o,a;r=Uu,(t=ko())!==s&&Ka()!==s&&(e=ms())!==s&&Ka()!==s&&Bo()!==s&&Ka()!==s&&(n=Ds())!==s&&Ka()!==s?((u=gs())===s&&(u=null),u!==s&&Ka()!==s?((o=Os())===s&&(o=null),o!==s&&Ka()!==s?((a=Ms())===s&&(a=null),a!==s?(c=n,l=u,f=o,b=a,(i=e)&&i.forEach(r=>{const{db:t,as:e,table:n}=r;Ti.add(`update::${t}::${n}`);}),c&&c.forEach(r=>mi.add(`update::${r.table}::${r.column}`)),t={tableList:Array.from(Ti),columnList:Ai(mi),ast:{type:"update",table:i,set:c,where:l,orderby:f,limit:b}},r=t):(Uu=r,r=s)):(Uu=r,r=s)):(Uu=r,r=s)):(Uu=r,r=s);var i,c,l,f,b;return r}())===s&&(t=function(){var r,t,e,n,u,o,a,i;r=Uu,(t=Hs())!==s&&Ka()!==s?((e=Yo())===s&&(e=null),e!==s&&Ka()!==s&&(n=Rs())!==s&&Ka()!==s?((u=Fs())===s&&(u=null),u!==s&&Ka()!==s&&Ba()!==s&&Ka()!==s&&(o=function(){var r,t,e,n,u,o,a,i;if(r=Uu,(t=lo())!==s){for(e=[],n=Uu,(u=Ka())!==s&&(o=ja())!==s&&(a=Ka())!==s&&(i=lo())!==s?n=u=[u,o,a,i]:(Uu=n,n=s);n!==s;)e.push(n),n=Uu,(u=Ka())!==s&&(o=ja())!==s&&(a=Ka())!==s&&(i=lo())!==s?n=u=[u,o,a,i]:(Uu=n,n=s);e!==s?(t=c(t,e),r=t):(Uu=r,r=s);}else Uu=r,r=s;return r}())!==s&&Ka()!==s&&Xa()!==s&&Ka()!==s&&(a=$s())!==s&&Ka()!==s?((i=Ps())===s&&(i=null),i!==s?(t=function(r,t,e,n,u,s){if(t&&(Ti.add(`insert::${t.db}::${t.table}`),t.as=null),n){let r=t&&t.table||null;Array.isArray(u)&&u.forEach((r,t)=>{if(r.value.length!=n.length)throw new Error("Error: column count doesn't match value count at row "+(t+1))}),n.forEach(t=>mi.add(`insert::${r}::${t}`));}return {tableList:Array.from(Ti),columnList:Ai(mi),ast:{type:r,table:[t],columns:n,values:u,partition:e,on_duplicate_update:s}}}(t,n,u,o,a,i),r=t):(Uu=r,r=s)):(Uu=r,r=s)):(Uu=r,r=s)):(Uu=r,r=s);return r}())===s&&(t=function(){var r,t,e,n,u,o;r=Uu,(t=Hs())!==s&&Ka()!==s&&Yo()!==s&&Ka()!==s&&(e=Rs())!==s&&Ka()!==s?((n=Fs())===s&&(n=null),n!==s&&Ka()!==s&&(u=$s())!==s&&Ka()!==s?((o=Ps())===s&&(o=null),o!==s?(a=t,c=n,l=u,f=o,(i=e)&&(Ti.add(`insert::${i.db}::${i.table}`),mi.add(`insert::${i.table}::(.*)`),i.as=null),t={tableList:Array.from(Ti),columnList:Ai(mi),ast:{type:a,table:[i],columns:null,values:l,partition:c,on_duplicate_update:f}},r=t):(Uu=r,r=s)):(Uu=r,r=s)):(Uu=r,r=s);var a,i,c,l,f;return r}())===s&&(t=function(){var r,t,e,n,u,o;r=Uu,(t=Hs())!==s&&Ka()!==s&&Yo()!==s&&Ka()!==s&&(e=Rs())!==s&&Ka()!==s?((n=Fs())===s&&(n=null),n!==s&&Ka()!==s&&Bo()!==s&&Ka()!==s&&(u=Ds())!==s&&Ka()!==s?((o=Ps())===s&&(o=null),o!==s?(a=t,c=n,l=u,f=o,(i=e)&&(Ti.add(`insert::${i.db}::${i.table}`),mi.add(`insert::${i.table}::(.*)`),i.as=null),t={tableList:Array.from(Ti),columnList:Ai(mi),ast:{type:a,table:[i],columns:null,partition:c,set:l,on_duplicate_update:f}},r=t):(Uu=r,r=s)):(Uu=r,r=s)):(Uu=r,r=s);var a,i,c,l,f;return r}())===s&&(t=function(){var t,e,n,u,o,a,i;t=Uu,(e=function(){var t,e,n,u;t=Uu,"delete"===r.substr(Uu,6).toLowerCase()?(e=r.substr(Uu,6),Uu+=6):(e=s,0===$u&&ju(H));e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?t=e=[e,n]:(Uu=t,t=s)):(Uu=t,t=s);return t}())!==s&&Ka()!==s?((n=ms())===s&&(n=null),n!==s&&Ka()!==s&&(u=Es())!==s&&Ka()!==s?((o=gs())===s&&(o=null),o!==s&&Ka()!==s?((a=Os())===s&&(a=null),a!==s&&Ka()!==s?((i=Ms())===s&&(i=null),i!==s?(e=function(r,t,e,n,u){if(t&&t.forEach(r=>{r.table&&Ti.add(`delete::${r.db}::${r.table}`),mi.add(`delete::${r.table}::(.*)`);}),null===r&&1===t.length){const e=t[0];r=[{db:e.db,table:e.table,as:e.as,addition:!0}];}return {tableList:Array.from(Ti),columnList:Ai(mi),ast:{type:"delete",table:r,from:t,where:e,orderby:n,limit:u}}}(n,u,o,a,i),t=e):(Uu=t,t=s)):(Uu=t,t=s)):(Uu=t,t=s)):(Uu=t,t=s)):(Uu=t,t=s);return t}())===s&&(t=Xu())===s&&(t=function(){var r,t;r=[],t=ti();for(;t!==s;)r.push(t),t=ti();return r}()),t}function Vu(){var r,t,e,n,u,o,a,i,c,l;if(r=Uu,(t=ls())!==s){for(e=[],n=Uu,(u=Ka())!==s&&(o=zo())!==s&&(a=Ka())!==s?((i=na())===s&&(i=null),i!==s&&(c=Ka())!==s&&(l=ls())!==s?n=u=[u,o,a,i,c,l]:(Uu=n,n=s)):(Uu=n,n=s);n!==s;)e.push(n),n=Uu,(u=Ka())!==s&&(o=zo())!==s&&(a=Ka())!==s?((i=na())===s&&(i=null),i!==s&&(c=Ka())!==s&&(l=ls())!==s?n=u=[u,o,a,i,c,l]:(Uu=n,n=s)):(Uu=n,n=s);e!==s&&(n=Ka())!==s?((u=Os())===s&&(u=null),u!==s&&(o=Ka())!==s?((a=Ms())===s&&(a=null),a!==s?(r=t=function(r,t,e,n){let u=r;for(let r=0;r<t.length;r++)u._next=t[r][5],u.union=t[r][3]?"union all":"union",u=u._next;return e&&(r._orderby=e),n&&(r._limit=n),{tableList:Array.from(Ti),columnList:Ai(mi),ast:r}}(t,e,u,a)):(Uu=r,r=s)):(Uu=r,r=s)):(Uu=r,r=s);}else Uu=r,r=s;return r}function Ku(){var r;return (r=ns())===s&&(r=Zu())===s&&(r=ts())===s&&(r=es()),r}function qu(){var t,e,n,u,o,a;return t=Uu,(e=function(){var e;(e=function(){var t,e,n,u;t=Uu,"not null"===r.substr(Uu,8).toLowerCase()?(e=r.substr(Uu,8),Uu+=8):(e=s,0===$u&&ju(Gt));e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?t=e=[e,n]:(Uu=t,t=s)):(Uu=t,t=s);return t}())!==s&&(e={type:"not null",value:"not null"});return e}())===s&&(e=ho()),e!==s&&((a=e)&&!a.value&&(a.value="null"),e={nullable:a}),(t=e)===s&&(t=Uu,(e=function(){var r,t;r=Uu,xo()!==s&&Ka()!==s?((t=Eo())===s&&(t=Ws()),t!==s?(r={type:"default",value:t}):(Uu=r,r=s)):(Uu=r,r=s);return r}())!==s&&(e={default_val:e}),(t=e)===s&&(t=Uu,"auto_increment"===r.substr(Uu,14).toLowerCase()?(e=r.substr(Uu,14),Uu+=14):(e=s,0===$u&&ju(l)),e!==s&&(e={auto_increment:e.toLowerCase()}),(t=e)===s&&(t=Uu,e=Uu,"unique"===r.substr(Uu,6).toLowerCase()?(n=r.substr(Uu,6),Uu+=6):(n=s,0===$u&&ju(f)),n!==s&&(u=Ka())!==s?("key"===r.substr(Uu,3).toLowerCase()?(o=r.substr(Uu,3),Uu+=3):(o=s,0===$u&&ju(b)),o===s&&(o=null),o!==s?e=n=[n,u,o]:(Uu=e,e=s)):(Uu=e,e=s),e===s&&(e=Uu,"primary"===r.substr(Uu,7).toLowerCase()?(n=r.substr(Uu,7),Uu+=7):(n=s,0===$u&&ju(v)),n===s&&(n=null),n!==s&&(u=Ka())!==s?("key"===r.substr(Uu,3).toLowerCase()?(o=r.substr(Uu,3),Uu+=3):(o=s,0===$u&&ju(b)),o!==s?e=n=[n,u,o]:(Uu=e,e=s)):(Uu=e,e=s)),e!==s&&(e=function(r){const t=[];return r&&t.push(r[0],r[2]),{unique_or_primary:t.filter(r=>r).join(" ").toLowerCase("")}}(e)),(t=e)===s&&(t=Uu,(e=za())!==s&&(e={comment:e}),(t=e)===s&&(t=Uu,(e=zu())!==s&&(e={collate:e}),(t=e)===s&&(t=Uu,(e=function(){var t,e,n;t=Uu,"column_format"===r.substr(Uu,13).toLowerCase()?(e=r.substr(Uu,13),Uu+=13):(e=s,0===$u&&ju(d));e!==s&&Ka()!==s?("fixed"===r.substr(Uu,5).toLowerCase()?(n=r.substr(Uu,5),Uu+=5):(n=s,0===$u&&ju(L)),n===s&&("dynamic"===r.substr(Uu,7).toLowerCase()?(n=r.substr(Uu,7),Uu+=7):(n=s,0===$u&&ju(C)),n===s&&("default"===r.substr(Uu,7).toLowerCase()?(n=r.substr(Uu,7),Uu+=7):(n=s,0===$u&&ju(p)))),n!==s?(e=function(r,t){return {type:"column_format",value:t.toLowerCase()}}(0,n),t=e):(Uu=t,t=s)):(Uu=t,t=s);return t}())!==s&&(e={column_format:e}),(t=e)===s&&(t=Uu,(e=function(){var t,e,n;t=Uu,"storage"===r.substr(Uu,7).toLowerCase()?(e=r.substr(Uu,7),Uu+=7):(e=s,0===$u&&ju(w));e!==s&&Ka()!==s?("disk"===r.substr(Uu,4).toLowerCase()?(n=r.substr(Uu,4),Uu+=4):(n=s,0===$u&&ju(E)),n===s&&("memory"===r.substr(Uu,6).toLowerCase()?(n=r.substr(Uu,6),Uu+=6):(n=s,0===$u&&ju(h))),n!==s?(e={type:"storage",value:n.toLowerCase()},t=e):(Uu=t,t=s)):(Uu=t,t=s);return t}())!==s&&(e={storage:e}),(t=e)===s&&(t=Uu,(e=ss())!==s&&(e={reference_definition:e}),(t=e)===s&&(t=Uu,(e=function(){var t,e,n,u,o,a,i,c;t=Uu,(e=us())===s&&(e=null);e!==s&&Ka()!==s?("check"===r.substr(Uu,5).toLowerCase()?(n=r.substr(Uu,5),Uu+=5):(n=s,0===$u&&ju(_)),n!==s&&Ka()!==s&&Ba()!==s&&Ka()!==s&&(u=Ws())!==s&&Ka()!==s&&Xa()!==s&&Ka()!==s?(o=Uu,(a=la())===s&&(a=null),a!==s&&(i=Ka())!==s?("enforced"===r.substr(Uu,8).toLowerCase()?(c=r.substr(Uu,8),Uu+=8):(c=s,0===$u&&ju(D)),c!==s?o=a=[a,i,c]:(Uu=o,o=s)):(Uu=o,o=s),o===s&&(o=null),o!==s?(e=function(r,t,e,n){const u=[];return n&&u.push(n[0],n[2]),{constraint_type:t.toLowerCase(),keyword:r&&r.keyword,constraint:r&&r.constraint,definition:[e],enforced:u.filter(r=>r).join(" ").toLowerCase(),resource:"constraint"}}(e,n,u,o),t=e):(Uu=t,t=s)):(Uu=t,t=s)):(Uu=t,t=s);return t}())!==s&&(e={check:e}),t=e))))))))),t}function Zu(){var r,t,e,n,u,o,a;return r=Uu,(t=ao())!==s&&Ka()!==s&&(e=bi())!==s&&Ka()!==s?((n=function(){var r,t,e,n,u,o;if(r=Uu,(t=qu())!==s)if(Ka()!==s){for(e=[],n=Uu,(u=Ka())!==s&&(o=qu())!==s?n=u=[u,o]:(Uu=n,n=s);n!==s;)e.push(n),n=Uu,(u=Ka())!==s&&(o=qu())!==s?n=u=[u,o]:(Uu=n,n=s);e!==s?(r=t=function(r,t){let e=r;for(let r=0;r<t.length;r++)e={...e,...t[r][1]};return e}(t,e)):(Uu=r,r=s);}else Uu=r,r=s;else Uu=r,r=s;return r}())===s&&(n=null),n!==s?(u=t,o=e,a=n,mi.add(`create::${u.table}::${u.column}`),r=t={column:u,definition:o,resource:"column",...a||{}}):(Uu=r,r=s)):(Uu=r,r=s),r}function zu(){var t,e;return t=Uu,function(){var t,e,n,u;t=Uu,"collate"===r.substr(Uu,7).toLowerCase()?(e=r.substr(Uu,7),Uu+=7):(e=s,0===$u&&ju(Z));e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="COLLATE"):(Uu=t,t=s)):(Uu=t,t=s);return t}()!==s&&Ka()!==s&&(e=bo())!==s?(t={type:"collate",value:e}):(Uu=t,t=s),t}function Ju(){var t;return (t=function(){var r,t;r=Uu,Da()!==s&&Ka()!==s&&(t=ns())!==s?(r={action:"add",create_definitions:t,resource:"constraint",type:"alter"}):(Uu=r,r=s);return r}())===s&&(t=function(){var t,e,n,u;t=Uu,(e=Do())!==s&&Ka()!==s?("check"===r.substr(Uu,5).toLowerCase()?(n=r.substr(Uu,5),Uu+=5):(n=s,0===$u&&ju(_)),n!==s&&Ka()!==s&&(u=bo())!==s?(e={action:"drop",constraint:u,keyword:n.toLowerCase(),resource:"constraint",type:"alter"},t=e):(Uu=t,t=s)):(Uu=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Uu,ra()!==s&&Ka()!==s?("check"===r.substr(Uu,5).toLowerCase()?(e=r.substr(Uu,5),Uu+=5):(e=s,0===$u&&ju(_)),e!==s&&Ka()!==s?("check"===r.substr(Uu,5).toLowerCase()?(n=r.substr(Uu,5),Uu+=5):(n=s,0===$u&&ju(_)),n!==s&&Ka()!==s&&Ha()!==s&&Ka()!==s&&(u=bo())!==s?(t={action:"with",constraint:u,keyword:"check check",resource:"constraint",type:"alter"}):(Uu=t,t=s)):(Uu=t,t=s)):(Uu=t,t=s);return t}())===s&&(t=function(){var t,e,n;t=Uu,"nocheck"===r.substr(Uu,7).toLowerCase()?(e=r.substr(Uu,7),Uu+=7):(e=s,0===$u&&ju(g));e!==s&&Ka()!==s&&Ha()!==s&&Ka()!==s&&(n=bo())!==s?(t=e={action:"nocheck",constraint:n,resource:"constraint",type:"alter"}):(Uu=t,t=s);return t}())===s&&(t=function(){var r,t,e,n;r=Uu,(t=Da())!==s&&Ka()!==s?((e=ka())===s&&(e=null),e!==s&&Ka()!==s&&(n=Zu())!==s?(u=e,o=n,t={action:"add",...o,keyword:u,resource:"column",type:"alter"},r=t):(Uu=r,r=s)):(Uu=r,r=s);var u,o;return r}())===s&&(t=function(){var r,t,e;r=Uu,Do()!==s&&Ka()!==s?((t=ka())===s&&(t=null),t!==s&&Ka()!==s&&(e=ao())!==s?(r={action:"drop",column:e,keyword:t,resource:"column",type:"alter"}):(Uu=r,r=s)):(Uu=r,r=s);return r}())===s&&(t=function(){var r,t,e;r=Uu,(t=Da())!==s&&Ka()!==s&&(e=ts())!==s?(n=e,t={action:"add",type:"alter",...n},r=t):(Uu=r,r=s);var n;return r}())===s&&(t=function(){var r,t,e;r=Uu,(t=Da())!==s&&Ka()!==s&&(e=es())!==s?(n=e,t={action:"add",type:"alter",...n},r=t):(Uu=r,r=s);var n;return r}())===s&&(t=function(){var r,t,e,n;r=Uu,(t=Go())!==s&&Ka()!==s?((e=Uo())===s&&(e=Xo()),e===s&&(e=null),e!==s&&Ka()!==s&&(n=io())!==s?(o=n,t={action:"rename",type:"alter",resource:"table",keyword:(u=e)&&u[0].toLowerCase(),table:o},r=t):(Uu=r,r=s)):(Uu=r,r=s);var u,o;return r}())===s&&(t=Qu())===s&&(t=rs()),t}function Qu(){var t,e,n,u;return t=Uu,"algorithm"===r.substr(Uu,9).toLowerCase()?(e=r.substr(Uu,9),Uu+=9):(e=s,0===$u&&ju(A)),e!==s&&Ka()!==s?((n=Ma())===s&&(n=null),n!==s&&Ka()!==s?("default"===r.substr(Uu,7).toLowerCase()?(u=r.substr(Uu,7),Uu+=7):(u=s,0===$u&&ju(p)),u===s&&("instant"===r.substr(Uu,7).toLowerCase()?(u=r.substr(Uu,7),Uu+=7):(u=s,0===$u&&ju(y)),u===s&&("inplace"===r.substr(Uu,7).toLowerCase()?(u=r.substr(Uu,7),Uu+=7):(u=s,0===$u&&ju(T)),u===s&&("copy"===r.substr(Uu,4).toLowerCase()?(u=r.substr(Uu,4),Uu+=4):(u=s,0===$u&&ju(m))))),u!==s?(t=e={type:"alter",keyword:"algorithm",resource:"algorithm",symbol:n,algorithm:u}):(Uu=t,t=s)):(Uu=t,t=s)):(Uu=t,t=s),t}function rs(){var t,e,n,u;return t=Uu,"lock"===r.substr(Uu,4).toLowerCase()?(e=r.substr(Uu,4),Uu+=4):(e=s,0===$u&&ju(S)),e!==s&&Ka()!==s?((n=Ma())===s&&(n=null),n!==s&&Ka()!==s?("default"===r.substr(Uu,7).toLowerCase()?(u=r.substr(Uu,7),Uu+=7):(u=s,0===$u&&ju(p)),u===s&&("none"===r.substr(Uu,4).toLowerCase()?(u=r.substr(Uu,4),Uu+=4):(u=s,0===$u&&ju(I)),u===s&&("shared"===r.substr(Uu,6).toLowerCase()?(u=r.substr(Uu,6),Uu+=6):(u=s,0===$u&&ju(N)),u===s&&("exclusive"===r.substr(Uu,9).toLowerCase()?(u=r.substr(Uu,9),Uu+=9):(u=s,0===$u&&ju(R))))),u!==s?(t=e={type:"alter",keyword:"lock",resource:"lock",symbol:n,lock:u}):(Uu=t,t=s)):(Uu=t,t=s)):(Uu=t,t=s),t}function ts(){var r,t,e,n,u,o,a,i;return r=Uu,(t=$a())===s&&(t=Fa()),t!==s&&Ka()!==s?((e=lo())===s&&(e=null),e!==s&&Ka()!==s?((n=As())===s&&(n=null),n!==s&&Ka()!==s&&(u=vs())!==s&&Ka()!==s?((o=ys())===s&&(o=null),o!==s&&Ka()!==s?(a=n,i=o,r=t={index:e,definition:u,keyword:t.toLowerCase(),index_type:a,resource:"index",index_options:i}):(Uu=r,r=s)):(Uu=r,r=s)):(Uu=r,r=s)):(Uu=r,r=s),r}function es(){var t,e,n,u,o,a,i,c,l;return t=Uu,(e=function(){var t,e,n,u;t=Uu,"fulltext"===r.substr(Uu,8).toLowerCase()?(e=r.substr(Uu,8),Uu+=8):(e=s,0===$u&&ju(nu));e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="FULLTEXT"):(Uu=t,t=s)):(Uu=t,t=s);return t}())===s&&(e=function(){var t,e,n,u;t=Uu,"spatial"===r.substr(Uu,7).toLowerCase()?(e=r.substr(Uu,7),Uu+=7):(e=s,0===$u&&ju(uu));e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="SPATIAL"):(Uu=t,t=s)):(Uu=t,t=s);return t}()),e!==s&&Ka()!==s?((n=$a())===s&&(n=Fa()),n===s&&(n=null),n!==s&&Ka()!==s?((u=lo())===s&&(u=null),u!==s&&Ka()!==s&&(o=vs())!==s&&Ka()!==s?((a=ys())===s&&(a=null),a!==s&&Ka()!==s?(i=e,l=a,t=e={index:u,definition:o,keyword:(c=n)&&`${i.toLowerCase()} ${c.toLowerCase()}`||i.toLowerCase(),index_options:l,resource:"index"}):(Uu=t,t=s)):(Uu=t,t=s)):(Uu=t,t=s)):(Uu=t,t=s),t}function ns(){var t;return (t=function(){var t,e,n,u,o,a,i,c;t=Uu,(e=us())===s&&(e=null);e!==s&&Ka()!==s?(n=Uu,"primary"===r.substr(Uu,7).toLowerCase()?(u=r.substr(Uu,7),Uu+=7):(u=s,0===$u&&ju(v)),u!==s&&(o=Ka())!==s?("key"===r.substr(Uu,3).toLowerCase()?(a=r.substr(Uu,3),Uu+=3):(a=s,0===$u&&ju(b)),a!==s?n=u=[u,o,a]:(Uu=n,n=s)):(Uu=n,n=s),n!==s&&(u=Ka())!==s?((o=As())===s&&(o=null),o!==s&&(a=Ka())!==s&&(i=vs())!==s&&Ka()!==s?((c=ys())===s&&(c=null),c!==s?(f=n,d=o,L=i,C=c,e={constraint:(l=e)&&l.constraint,definition:L,constraint_type:`${f[0].toLowerCase()} ${f[2].toLowerCase()}`,keyword:l&&l.keyword,index_type:d,resource:"constraint",index_options:C},t=e):(Uu=t,t=s)):(Uu=t,t=s)):(Uu=t,t=s)):(Uu=t,t=s);var l,f,d,L,C;return t}())===s&&(t=function(){var t,e,n,u,o,a,i,c;t=Uu,(e=us())===s&&(e=null);e!==s&&Ka()!==s&&(n=function(){var t,e,n,u;t=Uu,"unique"===r.substr(Uu,6).toLowerCase()?(e=r.substr(Uu,6),Uu+=6):(e=s,0===$u&&ju(f));e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="UNIQUE"):(Uu=t,t=s)):(Uu=t,t=s);return t}())!==s&&Ka()!==s?((u=$a())===s&&(u=Fa()),u===s&&(u=null),u!==s&&Ka()!==s?((o=lo())===s&&(o=null),o!==s&&Ka()!==s?((a=As())===s&&(a=null),a!==s&&Ka()!==s&&(i=vs())!==s&&Ka()!==s?((c=ys())===s&&(c=null),c!==s?(b=n,v=u,d=o,L=a,C=i,p=c,e={constraint:(l=e)&&l.constraint,definition:C,constraint_type:v&&`${b.toLowerCase()} ${v.toLowerCase()}`||b.toLowerCase(),keyword:l&&l.keyword,index_type:L,index:d,resource:"constraint",index_options:p},t=e):(Uu=t,t=s)):(Uu=t,t=s)):(Uu=t,t=s)):(Uu=t,t=s)):(Uu=t,t=s);var l,b,v,d,L,C,p;return t}())===s&&(t=function(){var t,e,n,u,o,a;t=Uu,(e=us())===s&&(e=null);e!==s&&Ka()!==s?("foreign key"===r.substr(Uu,11).toLowerCase()?(n=r.substr(Uu,11),Uu+=11):(n=s,0===$u&&ju(M)),n!==s&&Ka()!==s?((u=lo())===s&&(u=null),u!==s&&Ka()!==s&&(o=vs())!==s&&Ka()!==s?((a=ss())===s&&(a=null),a!==s?(c=n,l=u,f=o,b=a,e={constraint:(i=e)&&i.constraint,definition:f,constraint_type:c,keyword:i&&i.keyword,index:l,resource:"constraint",reference_definition:b},t=e):(Uu=t,t=s)):(Uu=t,t=s)):(Uu=t,t=s)):(Uu=t,t=s);var i,c,l,f,b;return t}())===s&&(t=function(){var t,e,n,u,o,a,i,c,l,f;t=Uu,(e=us())===s&&(e=null);e!==s&&Ka()!==s?("check"===r.substr(Uu,5).toLowerCase()?(n=r.substr(Uu,5),Uu+=5):(n=s,0===$u&&ju(_)),n!==s&&Ka()!==s?(u=Uu,"not"===r.substr(Uu,3).toLowerCase()?(o=r.substr(Uu,3),Uu+=3):(o=s,0===$u&&ju(O)),o!==s&&(a=Ka())!==s?("for"===r.substr(Uu,3).toLowerCase()?(i=r.substr(Uu,3),Uu+=3):(i=s,0===$u&&ju(x)),i!==s&&(c=Ka())!==s?("replication"===r.substr(Uu,11).toLowerCase()?(l=r.substr(Uu,11),Uu+=11):(l=s,0===$u&&ju(U)),l!==s&&(f=Ka())!==s?u=o=[o,a,i,c,l,f]:(Uu=u,u=s)):(Uu=u,u=s)):(Uu=u,u=s),u===s&&(u=null),u!==s&&(o=Ba())!==s&&(a=Ka())!==s&&(i=Ws())!==s&&(c=Ka())!==s&&(l=Xa())!==s?(b=e,v=u,d=i,e={constraint_type:n.toLowerCase(),keyword:b&&b.keyword,constraint:b&&b.constraint,index_type:v&&{keyword:"not for replication"},definition:[d],resource:"constraint"},t=e):(Uu=t,t=s)):(Uu=t,t=s)):(Uu=t,t=s);var b,v,d;return t}()),t}function us(){var r,t,e,n;return r=Uu,(t=Ha())!==s&&Ka()!==s?((e=io())===s&&(e=null),e!==s?(n=e,r=t={keyword:t.toLowerCase(),constraint:n}):(Uu=r,r=s)):(Uu=r,r=s),r}function ss(){var t,e,n,u,o,a,i,c,l,f;return t=Uu,(e=function(){var t,e,n,u;t=Uu,"references"===r.substr(Uu,10).toLowerCase()?(e=r.substr(Uu,10),Uu+=10):(e=s,0===$u&&ju(au));e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="REFERENCES"):(Uu=t,t=s)):(Uu=t,t=s);return t}())!==s&&Ka()!==s&&(n=ms())!==s&&Ka()!==s&&(u=vs())!==s&&Ka()!==s?("match full"===r.substr(Uu,10).toLowerCase()?(o=r.substr(Uu,10),Uu+=10):(o=s,0===$u&&ju(k)),o===s&&("match partial"===r.substr(Uu,13).toLowerCase()?(o=r.substr(Uu,13),Uu+=13):(o=s,0===$u&&ju($)),o===s&&("match simple"===r.substr(Uu,12).toLowerCase()?(o=r.substr(Uu,12),Uu+=12):(o=s,0===$u&&ju(F)))),o===s&&(o=null),o!==s&&Ka()!==s?((a=os())===s&&(a=null),a!==s&&Ka()!==s?((i=os())===s&&(i=null),i!==s?(c=o,l=a,f=i,t=e={definition:u,table:n,keyword:e.toLowerCase(),match:c&&c.toLowerCase(),on_delete:l,on_update:f}):(Uu=t,t=s)):(Uu=t,t=s)):(Uu=t,t=s)):(Uu=t,t=s),t}function os(){var t,e,n,u,o,a;return t=Uu,"on"===r.substr(Uu,2).toLowerCase()?(e=r.substr(Uu,2),Uu+=2):(e=s,0===$u&&ju(P)),e!==s&&Ka()!==s?("delete"===r.substr(Uu,6).toLowerCase()?(n=r.substr(Uu,6),Uu+=6):(n=s,0===$u&&ju(H)),n===s&&("update"===r.substr(Uu,6).toLowerCase()?(n=r.substr(Uu,6),Uu+=6):(n=s,0===$u&&ju(G))),n!==s&&Ka()!==s&&(u=function(){var e;"restrict"===r.substr(Uu,8).toLowerCase()?(e=r.substr(Uu,8),Uu+=8):(e=s,0===$u&&ju(j));e===s&&("cascade"===r.substr(Uu,7).toLowerCase()?(e=r.substr(Uu,7),Uu+=7):(e=s,0===$u&&ju(Y)),e===s&&("set null"===r.substr(Uu,8).toLowerCase()?(e=r.substr(Uu,8),Uu+=8):(e=s,0===$u&&ju(B)),e===s&&("no action"===r.substr(Uu,9).toLowerCase()?(e=r.substr(Uu,9),Uu+=9):(e=s,0===$u&&ju(X)),e===s&&("set default"===r.substr(Uu,11).toLowerCase()?(e=r.substr(Uu,11),Uu+=11):(e=s,0===$u&&ju(W))))));e!==s&&(e=e.toLowerCase());return e}())!==s?(o=n,a=u,t=e={type:`${e.toLowerCase()} ${o.toLowerCase()}`,value:a}):(Uu=t,t=s)):(Uu=t,t=s),t}function as(){var t,e,n,u,o,a,i,c,l;return t=Uu,(e=xo())===s&&(e=null),e!==s&&Ka()!==s?((n=function(){var t,e,n;return t=Uu,"character"===r.substr(Uu,9).toLowerCase()?(e=r.substr(Uu,9),Uu+=9):(e=s,0===$u&&ju(V)),e!==s&&Ka()!==s?("set"===r.substr(Uu,3).toLowerCase()?(n=r.substr(Uu,3),Uu+=3):(n=s,0===$u&&ju(K)),n!==s?(t=e="CHARACTER SET"):(Uu=t,t=s)):(Uu=t,t=s),t}())===s&&("charset"===r.substr(Uu,7).toLowerCase()?(n=r.substr(Uu,7),Uu+=7):(n=s,0===$u&&ju(q)),n===s&&("collate"===r.substr(Uu,7).toLowerCase()?(n=r.substr(Uu,7),Uu+=7):(n=s,0===$u&&ju(Z)))),n!==s&&Ka()!==s?((u=Ma())===s&&(u=null),u!==s&&Ka()!==s&&(o=bo())!==s?(i=n,c=u,l=o,t=e={keyword:(a=e)&&`${a[0].toLowerCase()} ${i.toLowerCase()}`||i.toLowerCase(),symbol:c,value:l}):(Uu=t,t=s)):(Uu=t,t=s)):(Uu=t,t=s),t}function is(){var t,e,n,u,o,a,i,c,f;return t=Uu,"auto_increment"===r.substr(Uu,14).toLowerCase()?(e=r.substr(Uu,14),Uu+=14):(e=s,0===$u&&ju(l)),e===s&&("avg_row_length"===r.substr(Uu,14).toLowerCase()?(e=r.substr(Uu,14),Uu+=14):(e=s,0===$u&&ju(z)),e===s&&("key_block_size"===r.substr(Uu,14).toLowerCase()?(e=r.substr(Uu,14),Uu+=14):(e=s,0===$u&&ju(J)),e===s&&("max_rows"===r.substr(Uu,8).toLowerCase()?(e=r.substr(Uu,8),Uu+=8):(e=s,0===$u&&ju(Q)),e===s&&("min_rows"===r.substr(Uu,8).toLowerCase()?(e=r.substr(Uu,8),Uu+=8):(e=s,0===$u&&ju(rr)),e===s&&("stats_sample_pages"===r.substr(Uu,18).toLowerCase()?(e=r.substr(Uu,18),Uu+=18):(e=s,0===$u&&ju(tr))))))),e!==s&&Ka()!==s?((n=Ma())===s&&(n=null),n!==s&&Ka()!==s&&(u=So())!==s?(c=n,f=u,t=e={keyword:e.toLowerCase(),symbol:c,value:f.value}):(Uu=t,t=s)):(Uu=t,t=s),t===s&&(t=as())===s&&(t=Uu,(e=Pa())===s&&("connection"===r.substr(Uu,10).toLowerCase()?(e=r.substr(Uu,10),Uu+=10):(e=s,0===$u&&ju(er))),e!==s&&Ka()!==s?((n=Ma())===s&&(n=null),n!==s&&Ka()!==s&&(u=Ao())!==s?(t=e=function(r,t,e){return {keyword:r.toLowerCase(),symbol:t,value:`'${e.value}'`}}(e,n,u)):(Uu=t,t=s)):(Uu=t,t=s),t===s&&(t=Uu,"compression"===r.substr(Uu,11).toLowerCase()?(e=r.substr(Uu,11),Uu+=11):(e=s,0===$u&&ju(nr)),e!==s&&Ka()!==s?((n=Ma())===s&&(n=null),n!==s&&Ka()!==s?(u=Uu,39===r.charCodeAt(Uu)?(o="'",Uu++):(o=s,0===$u&&ju(ur)),o!==s?("zlib"===r.substr(Uu,4).toLowerCase()?(a=r.substr(Uu,4),Uu+=4):(a=s,0===$u&&ju(sr)),a===s&&("lz4"===r.substr(Uu,3).toLowerCase()?(a=r.substr(Uu,3),Uu+=3):(a=s,0===$u&&ju(or)),a===s&&("none"===r.substr(Uu,4).toLowerCase()?(a=r.substr(Uu,4),Uu+=4):(a=s,0===$u&&ju(I)))),a!==s?(39===r.charCodeAt(Uu)?(i="'",Uu++):(i=s,0===$u&&ju(ur)),i!==s?u=o=[o,a,i]:(Uu=u,u=s)):(Uu=u,u=s)):(Uu=u,u=s),u!==s?(t=e=function(r,t,e){return {keyword:r.toLowerCase(),symbol:t,value:e.join("").toUpperCase()}}(e,n,u)):(Uu=t,t=s)):(Uu=t,t=s)):(Uu=t,t=s),t===s&&(t=Uu,"engine"===r.substr(Uu,6).toLowerCase()?(e=r.substr(Uu,6),Uu+=6):(e=s,0===$u&&ju(ar)),e!==s&&Ka()!==s?((n=Ma())===s&&(n=null),n!==s&&Ka()!==s&&(u=bo())!==s?(t=e=function(r,t,e){return {keyword:r.toLowerCase(),symbol:t,value:e.toUpperCase()}}(e,n,u)):(Uu=t,t=s)):(Uu=t,t=s)))),t}function cs(){var t,e,n,u,o;return t=Uu,(e=Is())!==s&&Ka()!==s&&(n=function(){var t,e,n;return t=Uu,"read"===r.substr(Uu,4).toLowerCase()?(e=r.substr(Uu,4),Uu+=4):(e=s,0===$u&&ju(ir)),e!==s&&Ka()!==s?("local"===r.substr(Uu,5).toLowerCase()?(n=r.substr(Uu,5),Uu+=5):(n=s,0===$u&&ju(cr)),n===s&&(n=null),n!==s?(t=e={type:"read",suffix:n&&"local"}):(Uu=t,t=s)):(Uu=t,t=s),t===s&&(t=Uu,"low_priority"===r.substr(Uu,12).toLowerCase()?(e=r.substr(Uu,12),Uu+=12):(e=s,0===$u&&ju(lr)),e===s&&(e=null),e!==s&&Ka()!==s?("write"===r.substr(Uu,5).toLowerCase()?(n=r.substr(Uu,5),Uu+=5):(n=s,0===$u&&ju(fr)),n!==s?(t=e={type:"write",prefix:e&&"low_priority"}):(Uu=t,t=s)):(Uu=t,t=s)),t}())!==s?(u=e,o=n,Ti.add(`lock::${u.db}::${u.table}`),t=e={table:u,lock_type:o}):(Uu=t,t=s),t}function ls(){var t,e,n,u,o,a,i;return (t=ds())===s&&(t=Uu,e=Uu,40===r.charCodeAt(Uu)?(n="(",Uu++):(n=s,0===$u&&ju(hr)),n!==s&&(u=Ka())!==s&&(o=ls())!==s&&(a=Ka())!==s?(41===r.charCodeAt(Uu)?(i=")",Uu++):(i=s,0===$u&&ju(Ar)),i!==s?e=n=[n,u,o,a,i]:(Uu=e,e=s)):(Uu=e,e=s),e!==s&&(e={...e[2],parentheses_symbol:!0}),t=e),t}function fs(){var t,e,n,u,o,a,i,l,f;if(t=Uu,ra()!==s)if(Ka()!==s)if((e=bs())!==s){for(n=[],u=Uu,(o=Ka())!==s&&(a=ja())!==s&&(i=Ka())!==s&&(l=bs())!==s?u=o=[o,a,i,l]:(Uu=u,u=s);u!==s;)n.push(u),u=Uu,(o=Ka())!==s&&(a=ja())!==s&&(i=Ka())!==s&&(l=bs())!==s?u=o=[o,a,i,l]:(Uu=u,u=s);n!==s?(t=c(e,n)):(Uu=t,t=s);}else Uu=t,t=s;else Uu=t,t=s;else Uu=t,t=s;return t===s&&(t=Uu,Ka()!==s&&ra()!==s&&(e=Ka())!==s&&(n=function(){var t,e,n,u;t=Uu,"RECURSIVE"===r.substr(Uu,9)?(e="RECURSIVE",Uu+=9):(e=s,0===$u&&ju(re));e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?t=e=[e,n]:(Uu=t,t=s)):(Uu=t,t=s);return t}())!==s&&(u=Ka())!==s&&(o=bs())!==s?((f=o).recursive=!0,t=[f]):(Uu=t,t=s)),t}function bs(){var r,t,e,n;return r=Uu,(t=bo())!==s&&Ka()!==s?((e=vs())===s&&(e=null),e!==s&&Ka()!==s&&Xo()!==s&&Ka()!==s&&Ba()!==s&&Ka()!==s&&(n=Vu())!==s&&Ka()!==s&&Xa()!==s?(r=t={name:t,stmt:n,columns:e}):(Uu=r,r=s)):(Uu=r,r=s),r}function vs(){var r,t,e,n,u,o,a,i;if(r=Uu,Ba()!==s)if(Ka()!==s)if((t=lo())!==s){for(e=[],n=Uu,(u=Ka())!==s&&(o=ja())!==s&&(a=Ka())!==s&&(i=lo())!==s?n=u=[u,o,a,i]:(Uu=n,n=s);n!==s;)e.push(n),n=Uu,(u=Ka())!==s&&(o=ja())!==s&&(a=Ka())!==s&&(i=lo())!==s?n=u=[u,o,a,i]:(Uu=n,n=s);e!==s&&(n=Ka())!==s&&(u=Xa())!==s?(r=c(t,e)):(Uu=r,r=s);}else Uu=r,r=s;else Uu=r,r=s;else Uu=r,r=s;return r}function ds(){var t,e,n,u,o,a,i,c,l,f,b,v,d,L,C;return t=Uu,Ka()!==s?((e=fs())===s&&(e=null),e!==s&&Ka()!==s&&function(){var t,e,n,u;t=Uu,"select"===r.substr(Uu,6).toLowerCase()?(e=r.substr(Uu,6),Uu+=6):(e=s,0===$u&&ju(qt));e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?t=e=[e,n]:(Uu=t,t=s)):(Uu=t,t=s);return t}()!==s&&qa()!==s?((n=function(){var r,t,e,n,u,o;if(r=Uu,(t=Ls())!==s){for(e=[],n=Uu,(u=Ka())!==s&&(o=Ls())!==s?n=u=[u,o]:(Uu=n,n=s);n!==s;)e.push(n),n=Uu,(u=Ka())!==s&&(o=Ls())!==s?n=u=[u,o]:(Uu=n,n=s);e!==s?(t=function(r,t){const e=[r];for(let r=0,n=t.length;r<n;++r)e.push(t[r][1]);return e}(t,e),r=t):(Uu=r,r=s);}else Uu=r,r=s;return r}())===s&&(n=null),n!==s&&Ka()!==s?((u=ua())===s&&(u=null),u!==s&&Ka()!==s&&(o=Cs())!==s&&Ka()!==s?((a=Es())===s&&(a=null),a!==s&&Ka()!==s?((i=gs())===s&&(i=null),i!==s&&Ka()!==s?((c=function(){var t,e,n;t=Uu,(e=function(){var t,e,n,u;t=Uu,"group"===r.substr(Uu,5).toLowerCase()?(e=r.substr(Uu,5),Uu+=5):(e=s,0===$u&&ju(me));e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?t=e=[e,n]:(Uu=t,t=s)):(Uu=t,t=s);return t}())!==s&&Ka()!==s&&ta()!==s&&Ka()!==s&&(n=js())!==s?(e=n.value,t=e):(Uu=t,t=s);return t}())===s&&(c=null),c!==s&&Ka()!==s?((l=function(){var t,e;t=Uu,function(){var t,e,n,u;t=Uu,"having"===r.substr(Uu,6).toLowerCase()?(e=r.substr(Uu,6),Uu+=6):(e=s,0===$u&&ju(Ne));e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?t=e=[e,n]:(Uu=t,t=s)):(Uu=t,t=s);return t}()!==s&&Ka()!==s&&(e=Ws())!==s?(t=e):(Uu=t,t=s);return t}())===s&&(l=null),l!==s&&Ka()!==s?((f=Os())===s&&(f=null),f!==s&&Ka()!==s?((b=Ms())===s&&(b=null),b!==s?(v=Uu,"for"===r.substr(Uu,3).toLowerCase()?(d=r.substr(Uu,3),Uu+=3):(d=s,0===$u&&ju(x)),d!==s&&(L=Ka())!==s&&(C=ko())!==s?v=d=[d,L,C]:(Uu=v,v=s),v===s&&(v=null),v!==s?(t=function(r,t,e,n,u,s,o,a,i,c,l){return u&&u.forEach(r=>r.table&&Ti.add(`select::${r.db}::${r.table}`)),{with:r,type:"select",options:t,distinct:e,columns:n,from:u,where:s,groupby:o,having:a,orderby:i,limit:c,for_update:l&&`${l[0]} ${l[2][0]}`}}(e,n,u,o,a,i,c,l,f,b,v)):(Uu=t,t=s)):(Uu=t,t=s)):(Uu=t,t=s)):(Uu=t,t=s)):(Uu=t,t=s)):(Uu=t,t=s)):(Uu=t,t=s)):(Uu=t,t=s)):(Uu=t,t=s)):(Uu=t,t=s)):(Uu=t,t=s),t}function Ls(){var e;return (e=function(){var t;"sql_calc_found_rows"===r.substr(Uu,19).toLowerCase()?(t=r.substr(Uu,19),Uu+=19):(t=s,0===$u&&ju(iu));return t}())===s&&((e=function(){var t;"sql_cache"===r.substr(Uu,9).toLowerCase()?(t=r.substr(Uu,9),Uu+=9):(t=s,0===$u&&ju(cu));return t}())===s&&(e=function(){var t;"sql_no_cache"===r.substr(Uu,12).toLowerCase()?(t=r.substr(Uu,12),Uu+=12):(t=s,0===$u&&ju(lu));return t}()),e===s&&(e=function(){var t;"sql_big_result"===r.substr(Uu,14).toLowerCase()?(t=r.substr(Uu,14),Uu+=14):(t=s,0===$u&&ju(bu));return t}())===s&&(e=function(){var t;"sql_small_result"===r.substr(Uu,16).toLowerCase()?(t=r.substr(Uu,16),Uu+=16):(t=s,0===$u&&ju(fu));return t}())===s&&(e=function(){var t;"sql_buffer_result"===r.substr(Uu,17).toLowerCase()?(t=r.substr(Uu,17),Uu+=17):(t=s,0===$u&&ju(vu));return t}())),e!==s&&(e=e),e}function Cs(){var r,t,e,n,u,o,a,i,l,f;if(r=Uu,(t=na())===s&&(t=Uu,(e=Ya())!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?t=e=[e,n]:(Uu=t,t=s)):(Uu=t,t=s),t===s&&(t=Ya())),t!==s){for(e=[],n=Uu,(u=Ka())!==s&&(o=ja())!==s&&(a=Ka())!==s&&(i=ps())!==s?n=u=[u,o,a,i]:(Uu=n,n=s);n!==s;)e.push(n),n=Uu,(u=Ka())!==s&&(o=ja())!==s&&(a=Ka())!==s&&(i=ps())!==s?n=u=[u,o,a,i]:(Uu=n,n=s);e!==s?(l=t,f=e,mi.add("select::null::(.*)"),r=t=f&&f.length>0?(l[0]={expr:{type:"column_ref",table:null,column:"*"},as:null},wi(l[0],f)):l[0]):(Uu=r,r=s);}else Uu=r,r=s;if(r===s)if(r=Uu,(t=ps())!==s){for(e=[],n=Uu,(u=Ka())!==s&&(o=ja())!==s&&(a=Ka())!==s&&(i=ps())!==s?n=u=[u,o,a,i]:(Uu=n,n=s);n!==s;)e.push(n),n=Uu,(u=Ka())!==s&&(o=ja())!==s&&(a=Ka())!==s&&(i=ps())!==s?n=u=[u,o,a,i]:(Uu=n,n=s);e!==s?(r=t=c(t,e)):(Uu=r,r=s);}else Uu=r,r=s;return r}function ps(){var r,t,e,n;return r=Uu,(t=io())!==s&&Ka()!==s&&(e=Ga())!==s&&Ka()!==s&&Ya()!==s?(n=t,mi.add(`select::${n}::(.*)`),r=t={expr:{type:"column_ref",table:n,column:"*"},as:null}):(Uu=r,r=s),r===s&&(r=Uu,(t=Ws())!==s&&Ka()!==s?((e=ws())===s&&(e=null),e!==s?(r=t={expr:t,as:e}):(Uu=r,r=s)):(Uu=r,r=s)),r}function ws(){var r,t,e;return r=Uu,(t=Xo())!==s&&Ka()!==s&&(e=function(){var r,t;r=Uu,(t=bo())!==s?((function(r){if(!0===di[r.toUpperCase()])throw new Error("Error: "+JSON.stringify(r)+" is a reserved word, can not as alias clause");return !1}(t)?s:void 0)!==s?(r=t=t):(Uu=r,r=s)):(Uu=r,r=s);r===s&&(r=Uu,(t=co())!==s&&(t=t),r=t);return r}())!==s?(r=t=e):(Uu=r,r=s),r===s&&(r=Uu,(t=Xo())===s&&(t=null),t!==s&&Ka()!==s&&(e=io())!==s?(r=t=e):(Uu=r,r=s)),r}function Es(){var t,e;return t=Uu,function(){var t,e,n,u;t=Uu,"from"===r.substr(Uu,4).toLowerCase()?(e=r.substr(Uu,4),Uu+=4):(e=s,0===$u&&ju(oe));e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?t=e=[e,n]:(Uu=t,t=s)):(Uu=t,t=s);return t}()!==s&&Ka()!==s&&(e=ms())!==s?(t=e):(Uu=t,t=s),t}function hs(){var r,t,e;return r=Uu,(t=Rs())!==s&&Ka()!==s&&Uo()!==s&&Ka()!==s&&(e=Rs())!==s?(r=t=[t,e]):(Uu=r,r=s),r}function As(){var t,e;return t=Uu,Qo()!==s&&Ka()!==s?("btree"===r.substr(Uu,5).toLowerCase()?(e=r.substr(Uu,5),Uu+=5):(e=s,0===$u&&ju(yr)),e===s&&("hash"===r.substr(Uu,4).toLowerCase()?(e=r.substr(Uu,4),Uu+=4):(e=s,0===$u&&ju(Tr))),e!==s?(t={keyword:"using",type:e.toLowerCase()}):(Uu=t,t=s)):(Uu=t,t=s),t}function ys(){var r,t,e,n,u,o;if(r=Uu,(t=Ts())!==s){for(e=[],n=Uu,(u=Ka())!==s&&(o=Ts())!==s?n=u=[u,o]:(Uu=n,n=s);n!==s;)e.push(n),n=Uu,(u=Ka())!==s&&(o=Ts())!==s?n=u=[u,o]:(Uu=n,n=s);e!==s?(r=t=function(r,t){const e=[r];for(let r=0;r<t.length;r++)e.push(t[r][1]);return e}(t,e)):(Uu=r,r=s);}else Uu=r,r=s;return r}function Ts(){var t,e,n,u,o,a;return t=Uu,(e=function(){var t,e,n,u;t=Uu,"key_block_size"===r.substr(Uu,14).toLowerCase()?(e=r.substr(Uu,14),Uu+=14):(e=s,0===$u&&ju(J));e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="KEY_BLOCK_SIZE"):(Uu=t,t=s)):(Uu=t,t=s);return t}())!==s&&Ka()!==s?((n=Ma())===s&&(n=null),n!==s&&Ka()!==s&&(u=So())!==s?(o=n,a=u,t=e={type:e.toLowerCase(),symbol:o,expr:a}):(Uu=t,t=s)):(Uu=t,t=s),t===s&&(t=As())===s&&(t=Uu,"with"===r.substr(Uu,4).toLowerCase()?(e=r.substr(Uu,4),Uu+=4):(e=s,0===$u&&ju(mr)),e!==s&&Ka()!==s?("parser"===r.substr(Uu,6).toLowerCase()?(n=r.substr(Uu,6),Uu+=6):(n=s,0===$u&&ju(Sr)),n!==s&&Ka()!==s&&(u=bo())!==s?(t=e={type:"with parser",expr:u}):(Uu=t,t=s)):(Uu=t,t=s),t===s&&(t=Uu,"visible"===r.substr(Uu,7).toLowerCase()?(e=r.substr(Uu,7),Uu+=7):(e=s,0===$u&&ju(Ir)),e===s&&("invisible"===r.substr(Uu,9).toLowerCase()?(e=r.substr(Uu,9),Uu+=9):(e=s,0===$u&&ju(Nr))),e!==s&&(e=function(r){return {type:r.toLowerCase(),expr:r.toLowerCase()}}(e)),(t=e)===s&&(t=za()))),t}function ms(){var r,t,e,n;if(r=Uu,(t=Is())!==s){for(e=[],n=Ss();n!==s;)e.push(n),n=Ss();e!==s?(r=t=Rr(t,e)):(Uu=r,r=s);}else Uu=r,r=s;return r}function Ss(){var r,t,e;return r=Uu,Ka()!==s&&(t=ja())!==s&&Ka()!==s&&(e=Is())!==s?(r=e):(Uu=r,r=s),r===s&&(r=Uu,Ka()!==s&&(t=function(){var r,t,e,n,u,o,a,i,c,l,f;if(r=Uu,(t=Ns())!==s)if(Ka()!==s)if((e=Is())!==s)if(Ka()!==s)if((n=Qo())!==s)if(Ka()!==s)if(Ba()!==s)if(Ka()!==s)if((u=bo())!==s){for(o=[],a=Uu,(i=Ka())!==s&&(c=ja())!==s&&(l=Ka())!==s&&(f=bo())!==s?a=i=[i,c,l,f]:(Uu=a,a=s);a!==s;)o.push(a),a=Uu,(i=Ka())!==s&&(c=ja())!==s&&(l=Ka())!==s&&(f=bo())!==s?a=i=[i,c,l,f]:(Uu=a,a=s);o!==s&&(a=Ka())!==s&&(i=Xa())!==s?(b=t,d=u,L=o,(v=e).join=b,v.using=wi(d,L),r=t=v):(Uu=r,r=s);}else Uu=r,r=s;else Uu=r,r=s;else Uu=r,r=s;else Uu=r,r=s;else Uu=r,r=s;else Uu=r,r=s;else Uu=r,r=s;else Uu=r,r=s;else Uu=r,r=s;var b,v,d,L;r===s&&(r=Uu,(t=Ns())!==s&&Ka()!==s&&(e=Is())!==s&&Ka()!==s?((n=_s())===s&&(n=null),n!==s?(t=function(r,t,e){return t.join=r,t.on=e,t}(t,e,n),r=t):(Uu=r,r=s)):(Uu=r,r=s),r===s&&(r=Uu,(t=Ns())!==s&&Ka()!==s&&(e=Ba())!==s&&Ka()!==s&&(n=Vu())!==s&&Ka()!==s&&Xa()!==s&&Ka()!==s?((u=ws())===s&&(u=null),u!==s&&(o=Ka())!==s?((a=_s())===s&&(a=null),a!==s?(t=function(r,t,e,n){return t.parentheses=!0,{expr:t,as:e,join:r,on:n}}(t,n,u,a),r=t):(Uu=r,r=s)):(Uu=r,r=s)):(Uu=r,r=s)));return r}())!==s?(r=t):(Uu=r,r=s)),r}function Is(){var t,e,n,u,o,a;return t=Uu,(e=function(){var t;"dual"===r.substr(Uu,4).toLowerCase()?(t=r.substr(Uu,4),Uu+=4):(t=s,0===$u&&ju(Qn));return t}())!==s&&(e={type:"dual"}),(t=e)===s&&(t=Uu,(e=Rs())!==s&&Ka()!==s?((n=ws())===s&&(n=null),n!==s?(a=n,t=e="var"===(o=e).type?(o.as=a,o):{db:o.db,table:o.table,as:a}):(Uu=t,t=s)):(Uu=t,t=s),t===s&&(t=Uu,(e=Ba())!==s&&Ka()!==s&&(n=Vu())!==s&&Ka()!==s&&Xa()!==s&&Ka()!==s?((u=ws())===s&&(u=null),u!==s?(t=e=function(r,t){return r.parentheses=!0,{expr:r,as:t}}(n,u)):(Uu=t,t=s)):(Uu=t,t=s))),t}function Ns(){var t,e,n,u;return t=Uu,(e=function(){var t,e,n,u;t=Uu,"left"===r.substr(Uu,4).toLowerCase()?(e=r.substr(Uu,4),Uu+=4):(e=s,0===$u&&ju(ve));e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?t=e=[e,n]:(Uu=t,t=s)):(Uu=t,t=s);return t}())!==s&&(n=Ka())!==s?((u=Zo())===s&&(u=null),u!==s&&Ka()!==s&&qo()!==s?(t=e="LEFT JOIN"):(Uu=t,t=s)):(Uu=t,t=s),t===s&&(t=Uu,(e=function(){var t,e,n,u;t=Uu,"right"===r.substr(Uu,5).toLowerCase()?(e=r.substr(Uu,5),Uu+=5):(e=s,0===$u&&ju(de));e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?t=e=[e,n]:(Uu=t,t=s)):(Uu=t,t=s);return t}())!==s&&(n=Ka())!==s?((u=Zo())===s&&(u=null),u!==s&&Ka()!==s&&qo()!==s?(t=e="RIGHT JOIN"):(Uu=t,t=s)):(Uu=t,t=s),t===s&&(t=Uu,(e=function(){var t,e,n,u;t=Uu,"full"===r.substr(Uu,4).toLowerCase()?(e=r.substr(Uu,4),Uu+=4):(e=s,0===$u&&ju(Le));e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?t=e=[e,n]:(Uu=t,t=s)):(Uu=t,t=s);return t}())!==s&&(n=Ka())!==s?((u=Zo())===s&&(u=null),u!==s&&Ka()!==s&&qo()!==s?(t=e="FULL JOIN"):(Uu=t,t=s)):(Uu=t,t=s),t===s&&(t=Uu,e=Uu,(n=function(){var t,e,n,u;t=Uu,"inner"===r.substr(Uu,5).toLowerCase()?(e=r.substr(Uu,5),Uu+=5):(e=s,0===$u&&ju(Ce));e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?t=e=[e,n]:(Uu=t,t=s)):(Uu=t,t=s);return t}())!==s&&(u=Ka())!==s?e=n=[n,u]:(Uu=e,e=s),e===s&&(e=null),e!==s&&(n=qo())!==s?(t=e="INNER JOIN"):(Uu=t,t=s)))),t}function Rs(){var r,t,e,n,u,o,a,i;return r=Uu,(t=io())!==s?(e=Uu,(n=Ka())!==s&&(u=Ga())!==s&&(o=Ka())!==s&&(a=io())!==s?e=n=[n,u,o,a]:(Uu=e,e=s),e===s&&(e=null),e!==s?(r=t=function(r,t){const e={db:null,table:r};return null!==t&&(e.db=r,e.table=t[3]),e}(t,e)):(Uu=r,r=s)):(Uu=r,r=s),r===s&&(r=Uu,(t=li())!==s&&((i=t).db=null,i.table=i.name,t=i),r=t),r}function _s(){var r,t;return r=Uu,Ko()!==s&&Ka()!==s&&(t=Ws())!==s?(r=t):(Uu=r,r=s),r}function gs(){var t,e;return t=Uu,function(){var t,e,n,u;t=Uu,"where"===r.substr(Uu,5).toLowerCase()?(e=r.substr(Uu,5),Uu+=5):(e=s,0===$u&&ju(Te));e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?t=e=[e,n]:(Uu=t,t=s)):(Uu=t,t=s);return t}()!==s&&Ka()!==s?((e=function(){var r,t,e,n,u,o,a,i;if(r=Uu,(t=qs())!==s){for(e=[],n=Uu,(u=Ka())!==s?((o=fa())===s&&(o=ba()),o!==s&&(a=Ka())!==s&&(i=qs())!==s?n=u=[u,o,a,i]:(Uu=n,n=s)):(Uu=n,n=s);n!==s;)e.push(n),n=Uu,(u=Ka())!==s?((o=fa())===s&&(o=ba()),o!==s&&(a=Ka())!==s&&(i=qs())!==s?n=u=[u,o,a,i]:(Uu=n,n=s)):(Uu=n,n=s);e!==s?(t=Ei(t,e),r=t):(Uu=r,r=s);}else Uu=r,r=s;return r}())===s&&(e=Ws()),e!==s?(t=e):(Uu=t,t=s)):(Uu=t,t=s),t}function Os(){var t,e;return t=Uu,function(){var t,e,n,u;t=Uu,"order"===r.substr(Uu,5).toLowerCase()?(e=r.substr(Uu,5),Uu+=5):(e=s,0===$u&&ju(Ie));e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?t=e=[e,n]:(Uu=t,t=s)):(Uu=t,t=s);return t}()!==s&&Ka()!==s&&ta()!==s&&Ka()!==s&&(e=function(){var r,t,e,n,u,o,a,i;if(r=Uu,(t=xs())!==s){for(e=[],n=Uu,(u=Ka())!==s&&(o=ja())!==s&&(a=Ka())!==s&&(i=xs())!==s?n=u=[u,o,a,i]:(Uu=n,n=s);n!==s;)e.push(n),n=Uu,(u=Ka())!==s&&(o=ja())!==s&&(a=Ka())!==s&&(i=xs())!==s?n=u=[u,o,a,i]:(Uu=n,n=s);e!==s?(t=c(t,e),r=t):(Uu=r,r=s);}else Uu=r,r=s;return r}())!==s?(t=e):(Uu=t,t=s),t}function xs(){var t,e,n;return t=Uu,(e=Ws())!==s&&Ka()!==s?((n=ea())===s&&(n=function(){var t,e,n,u;t=Uu,"asc"===r.substr(Uu,3).toLowerCase()?(e=r.substr(Uu,3),Uu+=3):(e=s,0===$u&&ju(ge));e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="ASC"):(Uu=t,t=s)):(Uu=t,t=s);return t}()),n===s&&(n=null),n!==s?(t=e=function(r,t){const e={expr:r,type:"ASC"};return "DESC"===t&&(e.type="DESC"),e}(e,n)):(Uu=t,t=s)):(Uu=t,t=s),t}function Us(){var r;return (r=So())===s&&(r=po()),r}function Ms(){var t,e,n,u,o,a;return t=Uu,function(){var t,e,n,u;t=Uu,"limit"===r.substr(Uu,5).toLowerCase()?(e=r.substr(Uu,5),Uu+=5):(e=s,0===$u&&ju(Re));e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?t=e=[e,n]:(Uu=t,t=s)):(Uu=t,t=s);return t}()!==s&&Ka()!==s&&(e=Us())!==s&&Ka()!==s?(n=Uu,(u=ja())===s&&(u=function(){var t,e,n,u;t=Uu,"offset"===r.substr(Uu,6).toLowerCase()?(e=r.substr(Uu,6),Uu+=6):(e=s,0===$u&&ju(_e));e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="OFFSET"):(Uu=t,t=s)):(Uu=t,t=s);return t}()),u!==s&&(o=Ka())!==s&&(a=Us())!==s?n=u=[u,o,a]:(Uu=n,n=s),n===s&&(n=null),n!==s?(t=function(r,t){const e=[r];return t&&e.push(t[2]),{seperator:t&&t[0]&&t[0].toLowerCase()||"",value:e}}(e,n)):(Uu=t,t=s)):(Uu=t,t=s),t}function Ds(){var r,t,e,n,u,o,a,i;if(r=Uu,(t=ks())!==s){for(e=[],n=Uu,(u=Ka())!==s&&(o=ja())!==s&&(a=Ka())!==s&&(i=ks())!==s?n=u=[u,o,a,i]:(Uu=n,n=s);n!==s;)e.push(n),n=Uu,(u=Ka())!==s&&(o=ja())!==s&&(a=Ka())!==s&&(i=ks())!==s?n=u=[u,o,a,i]:(Uu=n,n=s);e!==s?(r=t=c(t,e)):(Uu=r,r=s);}else Uu=r,r=s;return r}function ks(){var t,e,n,u,o,a,i,c,l;return t=Uu,e=Uu,(n=io())!==s&&(u=Ka())!==s&&(o=Ga())!==s?e=n=[n,u,o]:(Uu=e,e=s),e===s&&(e=null),e!==s&&(n=Ka())!==s&&(u=lo())!==s&&(o=Ka())!==s?(61===r.charCodeAt(Uu)?(a="=",Uu++):(a=s,0===$u&&ju(_r)),a!==s&&Ka()!==s&&(i=eo())!==s?(t=e={column:u,value:i,table:(l=e)&&l[0]}):(Uu=t,t=s)):(Uu=t,t=s),t===s&&(t=Uu,e=Uu,(n=io())!==s&&(u=Ka())!==s&&(o=Ga())!==s?e=n=[n,u,o]:(Uu=e,e=s),e===s&&(e=null),e!==s&&(n=Ka())!==s&&(u=lo())!==s&&(o=Ka())!==s?(61===r.charCodeAt(Uu)?(a="=",Uu++):(a=s,0===$u&&ju(_r)),a!==s&&Ka()!==s&&(i=Jo())!==s&&Ka()!==s&&Ba()!==s&&Ka()!==s&&(c=ao())!==s&&Ka()!==s&&Xa()!==s?(t=e=function(r,t,e){return {column:t,value:e,table:r&&r[0],keyword:"values"}}(e,u,c)):(Uu=t,t=s)):(Uu=t,t=s)),t}function $s(){var r;return (r=function(){var r,t;r=Uu,Jo()!==s&&Ka()!==s&&(t=function(){var r,t,e,n,u,o,a,i;if(r=Uu,(t=Gs())!==s){for(e=[],n=Uu,(u=Ka())!==s&&(o=ja())!==s&&(a=Ka())!==s&&(i=Gs())!==s?n=u=[u,o,a,i]:(Uu=n,n=s);n!==s;)e.push(n),n=Uu,(u=Ka())!==s&&(o=ja())!==s&&(a=Ka())!==s&&(i=Gs())!==s?n=u=[u,o,a,i]:(Uu=n,n=s);e!==s?(t=c(t,e),r=t):(Uu=r,r=s);}else Uu=r,r=s;return r}())!==s?(r=t):(Uu=r,r=s);return r}())===s&&(r=ds()),r}function Fs(){var r,t,e,n,u,o,a,i,c;if(r=Uu,jo()!==s)if(Ka()!==s)if((t=Ba())!==s)if(Ka()!==s)if((e=bo())!==s){for(n=[],u=Uu,(o=Ka())!==s&&(a=ja())!==s&&(i=Ka())!==s&&(c=bo())!==s?u=o=[o,a,i,c]:(Uu=u,u=s);u!==s;)n.push(u),u=Uu,(o=Ka())!==s&&(a=ja())!==s&&(i=Ka())!==s&&(c=bo())!==s?u=o=[o,a,i,c]:(Uu=u,u=s);n!==s&&(u=Ka())!==s&&(o=Xa())!==s?(r=wi(e,n)):(Uu=r,r=s);}else Uu=r,r=s;else Uu=r,r=s;else Uu=r,r=s;else Uu=r,r=s;else Uu=r,r=s;return r===s&&(r=Uu,jo()!==s&&Ka()!==s&&(t=Gs())!==s?(r=t):(Uu=r,r=s)),r}function Ps(){var t,e,n;return t=Uu,Ko()!==s&&Ka()!==s?("duplicate"===r.substr(Uu,9).toLowerCase()?(e=r.substr(Uu,9),Uu+=9):(e=s,0===$u&&ju(gr)),e!==s&&Ka()!==s&&Fa()!==s&&Ka()!==s&&ko()!==s&&Ka()!==s&&(n=Ds())!==s?(t={keyword:"on duplicate key update",set:n}):(Uu=t,t=s)):(Uu=t,t=s),t}function Hs(){var t,e;return t=Uu,(e=function(){var t,e,n,u;t=Uu,"insert"===r.substr(Uu,6).toLowerCase()?(e=r.substr(Uu,6),Uu+=6):(e=s,0===$u&&ju(Qt));e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?t=e=[e,n]:(Uu=t,t=s)):(Uu=t,t=s);return t}())!==s&&(e="insert"),(t=e)===s&&(t=Uu,(e=Ho())!==s&&(e="replace"),t=e),t}function Gs(){var r,t;return r=Uu,Ba()!==s&&Ka()!==s&&(t=js())!==s&&Ka()!==s&&Xa()!==s?(r=t):(Uu=r,r=s),r}function js(){var r,t,e,n,u,o,a,i;if(r=Uu,(t=Ws())!==s){for(e=[],n=Uu,(u=Ka())!==s&&(o=ja())!==s&&(a=Ka())!==s&&(i=Ws())!==s?n=u=[u,o,a,i]:(Uu=n,n=s);n!==s;)e.push(n),n=Uu,(u=Ka())!==s&&(o=ja())!==s&&(a=Ka())!==s&&(i=Ws())!==s?n=u=[u,o,a,i]:(Uu=n,n=s);e!==s?(r=t=function(r,t){const e={type:"expr_list"};return e.value=wi(r,t),e}(t,e)):(Uu=r,r=s);}else Uu=r,r=s;return r}function Ys(){var t,e,n;return t=Uu,function(){var t,e,n,u;t=Uu,"interval"===r.substr(Uu,8).toLowerCase()?(e=r.substr(Uu,8),Uu+=8):(e=s,0===$u&&ju(xn));e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="INTERVAL"):(Uu=t,t=s)):(Uu=t,t=s);return t}()!==s&&Ka()!==s&&(e=Ws())!==s&&Ka()!==s&&(n=function(){var t;(t=function(){var t,e,n,u;t=Uu,"year"===r.substr(Uu,4).toLowerCase()?(e=r.substr(Uu,4),Uu+=4):(e=s,0===$u&&ju(Un));e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="YEAR"):(Uu=t,t=s)):(Uu=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Uu,"month"===r.substr(Uu,5).toLowerCase()?(e=r.substr(Uu,5),Uu+=5):(e=s,0===$u&&ju(Mn));e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="MONTH"):(Uu=t,t=s)):(Uu=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Uu,"day"===r.substr(Uu,3).toLowerCase()?(e=r.substr(Uu,3),Uu+=3):(e=s,0===$u&&ju(Dn));e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="DAY"):(Uu=t,t=s)):(Uu=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Uu,"hour"===r.substr(Uu,4).toLowerCase()?(e=r.substr(Uu,4),Uu+=4):(e=s,0===$u&&ju(kn));e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="HOUR"):(Uu=t,t=s)):(Uu=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Uu,"minute"===r.substr(Uu,6).toLowerCase()?(e=r.substr(Uu,6),Uu+=6):(e=s,0===$u&&ju($n));e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="MINUTE"):(Uu=t,t=s)):(Uu=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Uu,"second"===r.substr(Uu,6).toLowerCase()?(e=r.substr(Uu,6),Uu+=6):(e=s,0===$u&&ju(Fn));e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="SECOND"):(Uu=t,t=s)):(Uu=t,t=s);return t}());return t}())!==s?(t={type:"interval",expr:e,unit:n.toLowerCase()}):(Uu=t,t=s),t}function Bs(){var t,e,n,u,o,a,i,c,l;if(t=Uu,va()!==s)if(Ka()!==s)if((e=Ws())===s&&(e=null),e!==s)if(Ka()!==s){if(n=[],(u=Xs())!==s)for(;u!==s;)n.push(u),u=Xs();else n=s;n!==s&&(u=Ka())!==s?((o=function(){var t,e;t=Uu,function(){var t,e,n,u;t=Uu,"else"===r.substr(Uu,4).toLowerCase()?(e=r.substr(Uu,4),Uu+=4):(e=s,0===$u&&ju(rn));e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?t=e=[e,n]:(Uu=t,t=s)):(Uu=t,t=s);return t}()!==s&&Ka()!==s&&(e=Ws())!==s?(t={type:"else",result:e}):(Uu=t,t=s);return t}())===s&&(o=null),o!==s&&Ka()!==s&&function(){var t,e,n,u;t=Uu,"end"===r.substr(Uu,3).toLowerCase()?(e=r.substr(Uu,3),Uu+=3):(e=s,0===$u&&ju(tn));e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?t=e=[e,n]:(Uu=t,t=s)):(Uu=t,t=s);return t}()!==s&&Ka()!==s?((a=va())===s&&(a=null),a!==s?(i=e,c=n,(l=o)&&c.push(l),t={type:"case",expr:i||null,args:c}):(Uu=t,t=s)):(Uu=t,t=s)):(Uu=t,t=s);}else Uu=t,t=s;else Uu=t,t=s;else Uu=t,t=s;else Uu=t,t=s;return t}function Xs(){var t,e,n;return t=Uu,function(){var t,e,n,u;t=Uu,"when"===r.substr(Uu,4).toLowerCase()?(e=r.substr(Uu,4),Uu+=4):(e=s,0===$u&&ju(Je));e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?t=e=[e,n]:(Uu=t,t=s)):(Uu=t,t=s);return t}()!==s&&Ka()!==s&&(e=Ws())!==s&&Ka()!==s&&function(){var t,e,n,u;t=Uu,"then"===r.substr(Uu,4).toLowerCase()?(e=r.substr(Uu,4),Uu+=4):(e=s,0===$u&&ju(Qe));e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?t=e=[e,n]:(Uu=t,t=s)):(Uu=t,t=s);return t}()!==s&&Ka()!==s&&(n=Ws())!==s?(t={type:"when",cond:e,result:n}):(Uu=t,t=s),t}function Ws(){var r;return (r=function(){var r,t,e,n,u,o,a,i;if(r=Uu,(t=oo())!==s){if(e=[],n=Uu,(u=Ka())!==s&&(o=Va())!==s&&(a=Ka())!==s&&(i=oo())!==s?n=u=[u,o,a,i]:(Uu=n,n=s),n!==s)for(;n!==s;)e.push(n),n=Uu,(u=Ka())!==s&&(o=Va())!==s&&(a=Ka())!==s&&(i=oo())!==s?n=u=[u,o,a,i]:(Uu=n,n=s);else e=s;e!==s?(t=Ei(t,e),r=t):(Uu=r,r=s);}else Uu=r,r=s;return r}())===s&&(r=function(){var r,t,e,n,u,o;if(r=Uu,(t=no())!==s){if(e=[],n=Uu,(u=Ka())!==s&&(o=oo())!==s?n=u=[u,o]:(Uu=n,n=s),n!==s)for(;n!==s;)e.push(n),n=Uu,(u=Ka())!==s&&(o=oo())!==s?n=u=[u,o]:(Uu=n,n=s);else e=s;e!==s?(t=Li(t,e[0][1]),r=t):(Uu=r,r=s);}else Uu=r,r=s;return r}())===s&&(r=Vs())===s&&(r=ls()),r}function Vs(){var r,t,e,n,u,o,a,i;if(r=Uu,(t=Ks())!==s){for(e=[],n=Uu,(u=qa())!==s&&(o=ba())!==s&&(a=Ka())!==s&&(i=Ks())!==s?n=u=[u,o,a,i]:(Uu=n,n=s);n!==s;)e.push(n),n=Uu,(u=qa())!==s&&(o=ba())!==s&&(a=Ka())!==s&&(i=Ks())!==s?n=u=[u,o,a,i]:(Uu=n,n=s);e!==s?(r=t=Or(t,e)):(Uu=r,r=s);}else Uu=r,r=s;return r}function Ks(){var r,t,e,n,u,o,a,i;if(r=Uu,(t=Zs())!==s){for(e=[],n=Uu,(u=qa())!==s&&(o=fa())!==s&&(a=Ka())!==s&&(i=Zs())!==s?n=u=[u,o,a,i]:(Uu=n,n=s);n!==s;)e.push(n),n=Uu,(u=qa())!==s&&(o=fa())!==s&&(a=Ka())!==s&&(i=Zs())!==s?n=u=[u,o,a,i]:(Uu=n,n=s);e!==s?(r=t=Or(t,e)):(Uu=r,r=s);}else Uu=r,r=s;return r}function qs(){var r,t,e,n,u,o;return r=Uu,(t=Ba())===s&&(t=null),t!==s&&Ka()!==s&&(e=Vs())!==s&&Ka()!==s?((n=Xa())===s&&(n=null),n!==s?((function(r,t,e){if(r&&!e||!r&&e)return !0}(t,0,n)?s:void 0)!==s?(u=e,o=n,t&&o&&(u.parentheses=!0),r=t=u):(Uu=r,r=s)):(Uu=r,r=s)):(Uu=r,r=s),r}function Zs(){var t,e,n,u,o;return (t=zs())===s&&(t=function(){var r,t,e;r=Uu,(t=function(){var r,t,e,n,u;r=Uu,t=Uu,(e=la())!==s&&(n=Ka())!==s&&(u=ca())!==s?t=e=[e,n,u]:(Uu=t,t=s);t!==s&&(t=Ur(t));(r=t)===s&&(r=ca());return r}())!==s&&Ka()!==s&&Ba()!==s&&Ka()!==s&&(e=Vu())!==s&&Ka()!==s&&Xa()!==s?(n=t,(u=e).parentheses=!0,t=Li(n,u),r=t):(Uu=r,r=s);var n,u;return r}())===s&&(t=Uu,(e=la())===s&&(e=Uu,33===r.charCodeAt(Uu)?(n="!",Uu++):(n=s,0===$u&&ju(xr)),n!==s?(u=Uu,$u++,61===r.charCodeAt(Uu)?(o="=",Uu++):(o=s,0===$u&&ju(_r)),$u--,o===s?u=void 0:(Uu=u,u=s),u!==s?e=n=[n,u]:(Uu=e,e=s)):(Uu=e,e=s)),e!==s&&(n=Ka())!==s&&(u=Zs())!==s?(t=e=Li("NOT",u)):(Uu=t,t=s)),t}function zs(){var t,e,n,u,o;return t=Uu,(e=eo())!==s&&Ka()!==s?((n=function(){var t;(t=function(){var t,e,n,u,o,a;t=[],e=Uu,(n=Ka())!==s&&(u=Js())!==s&&(o=Ka())!==s&&(a=eo())!==s?e=n=[n,u,o,a]:(Uu=e,e=s);if(e!==s)for(;e!==s;)t.push(e),e=Uu,(n=Ka())!==s&&(u=Js())!==s&&(o=Ka())!==s&&(a=eo())!==s?e=n=[n,u,o,a]:(Uu=e,e=s);else t=s;t!==s&&(t={type:"arithmetic",tail:t});return t}())===s&&(t=to())===s&&(t=function(){var r,t,e,n;r=Uu,(t=function(){var r,t,e,n,u;r=Uu,t=Uu,(e=la())!==s&&(n=Ka())!==s&&(u=sa())!==s?t=e=[e,n,u]:(Uu=t,t=s);t!==s&&(t=Ur(t));(r=t)===s&&(r=sa());return r}())!==s&&Ka()!==s&&(e=eo())!==s&&Ka()!==s&&fa()!==s&&Ka()!==s&&(n=eo())!==s?(r=t={op:t,right:{type:"expr_list",value:[e,n]}}):(Uu=r,r=s);return r}())===s&&(t=function(){var r,t,e,n,u;r=Uu,(t=aa())!==s&&(e=Ka())!==s&&(n=eo())!==s?(r=t={op:"IS",right:n}):(Uu=r,r=s);r===s&&(r=Uu,t=Uu,(e=aa())!==s&&(n=Ka())!==s&&(u=la())!==s?t=e=[e,n,u]:(Uu=t,t=s),t!==s&&(e=Ka())!==s&&(n=eo())!==s?(t=function(r){return {op:"IS NOT",right:r}}(n),r=t):(Uu=r,r=s));return r}())===s&&(t=ro())===s&&(t=function(){var t,e,n,u;t=Uu,(e=function(){var t,e,n;t=Uu,(e=la())===s&&(e=null);e!==s&&Ka()!==s?((n=function(){var t,e,n,u;t=Uu,"regexp"===r.substr(Uu,6).toLowerCase()?(e=r.substr(Uu,6),Uu+=6):(e=s,0===$u&&ju(He));e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="REGEXP"):(Uu=t,t=s)):(Uu=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=Uu,"rlike"===r.substr(Uu,5).toLowerCase()?(e=r.substr(Uu,5),Uu+=5):(e=s,0===$u&&ju(Pe));e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="RLIKE"):(Uu=t,t=s)):(Uu=t,t=s);return t}()),n!==s?(o=n,t=e=(u=e)?`${u} ${o}`:o):(Uu=t,t=s)):(Uu=t,t=s);var u,o;return t}())!==s&&Ka()!==s?("binary"===r.substr(Uu,6).toLowerCase()?(n=r.substr(Uu,6),Uu+=6):(n=s,0===$u&&ju(vr)),n===s&&(n=null),n!==s&&Ka()!==s&&(u=Ao())!==s?(o=e,t=e={op:(a=n)?`${o} ${a}`:o,right:u}):(Uu=t,t=s)):(Uu=t,t=s);var o,a;return t}());return t}())===s&&(n=null),n!==s?(u=e,t=e=null===(o=n)?u:"arithmetic"===o.type?Ei(u,o.tail):Ci(o.op,u,o.right)):(Uu=t,t=s)):(Uu=t,t=s),t===s&&(t=Ao())===s&&(t=ao()),t}function Js(){var t;return ">="===r.substr(Uu,2)?(t=">=",Uu+=2):(t=s,0===$u&&ju(Mr)),t===s&&(62===r.charCodeAt(Uu)?(t=">",Uu++):(t=s,0===$u&&ju(Dr)),t===s&&("<="===r.substr(Uu,2)?(t="<=",Uu+=2):(t=s,0===$u&&ju(kr)),t===s&&("<>"===r.substr(Uu,2)?(t="<>",Uu+=2):(t=s,0===$u&&ju($r)),t===s&&(60===r.charCodeAt(Uu)?(t="<",Uu++):(t=s,0===$u&&ju(Fr)),t===s&&(61===r.charCodeAt(Uu)?(t="=",Uu++):(t=s,0===$u&&ju(_r)),t===s&&("!="===r.substr(Uu,2)?(t="!=",Uu+=2):(t=s,0===$u&&ju(Pr)))))))),t}function Qs(){var r,t,e,n,u;return r=Uu,t=Uu,(e=la())!==s&&(n=Ka())!==s&&(u=oa())!==s?t=e=[e,n,u]:(Uu=t,t=s),t!==s&&(t=Ur(t)),(r=t)===s&&(r=oa()),r}function ro(){var r,t,e;return r=Uu,(t=function(){var r,t,e,n,u;return r=Uu,t=Uu,(e=la())!==s&&(n=Ka())!==s&&(u=ia())!==s?t=e=[e,n,u]:(Uu=t,t=s),t!==s&&(t=Ur(t)),(r=t)===s&&(r=ia()),r}())!==s&&Ka()!==s?((e=Eo())===s&&(e=zs()),e!==s?(r=t={op:t,right:e}):(Uu=r,r=s)):(Uu=r,r=s),r}function to(){var r,t,e,n;return r=Uu,(t=Qs())!==s&&Ka()!==s&&(e=Ba())!==s&&Ka()!==s&&(n=js())!==s&&Ka()!==s&&Xa()!==s?(r=t={op:t,right:n}):(Uu=r,r=s),r===s&&(r=Uu,(t=Qs())!==s&&Ka()!==s?((e=li())===s&&(e=Ao()),e!==s?(r=t=function(r,t){return {op:r,right:t}}(t,e)):(Uu=r,r=s)):(Uu=r,r=s)),r}function eo(){var r,t,e,n,u,o,a,i;if(r=Uu,(t=uo())!==s){for(e=[],n=Uu,(u=Ka())!==s&&(o=no())!==s&&(a=Ka())!==s&&(i=uo())!==s?n=u=[u,o,a,i]:(Uu=n,n=s);n!==s;)e.push(n),n=Uu,(u=Ka())!==s&&(o=no())!==s&&(a=Ka())!==s&&(i=uo())!==s?n=u=[u,o,a,i]:(Uu=n,n=s);e!==s?(r=t=Or(t,e)):(Uu=r,r=s);}else Uu=r,r=s;return r}function no(){var t;return 43===r.charCodeAt(Uu)?(t="+",Uu++):(t=s,0===$u&&ju(Hr)),t===s&&(45===r.charCodeAt(Uu)?(t="-",Uu++):(t=s,0===$u&&ju(Gr))),t}function uo(){var r,t,e,n,u,o,a,i;if(r=Uu,(t=oo())!==s){for(e=[],n=Uu,(u=Ka())!==s&&(o=so())!==s&&(a=Ka())!==s&&(i=oo())!==s?n=u=[u,o,a,i]:(Uu=n,n=s);n!==s;)e.push(n),n=Uu,(u=Ka())!==s&&(o=so())!==s&&(a=Ka())!==s&&(i=oo())!==s?n=u=[u,o,a,i]:(Uu=n,n=s);e!==s?(r=t=Ei(t,e)):(Uu=r,r=s);}else Uu=r,r=s;return r}function so(){var t;return 42===r.charCodeAt(Uu)?(t="*",Uu++):(t=s,0===$u&&ju(jr)),t===s&&(47===r.charCodeAt(Uu)?(t="/",Uu++):(t=s,0===$u&&ju(Yr)),t===s&&(37===r.charCodeAt(Uu)?(t="%",Uu++):(t=s,0===$u&&ju(Br)))),t}function oo(){var t,e,n,u,o,a,i,c,l,f,b,v;if((t=function(){var t,e,n,u,o,a,i;t=Uu,(e=da())!==s&&Ka()!==s&&Ba()!==s&&Ka()!==s&&(n=Ws())!==s&&Ka()!==s&&Xo()!==s&&Ka()!==s&&(u=bi())!==s&&Ka()!==s&&(o=Xa())!==s?(t=e={type:"cast",expr:n,symbol:"as",target:u}):(Uu=t,t=s);t===s&&(t=Uu,(e=da())!==s&&Ka()!==s&&Ba()!==s&&Ka()!==s&&(n=Ws())!==s&&Ka()!==s&&Xo()!==s&&Ka()!==s&&(u=wa())!==s&&Ka()!==s&&(o=Ba())!==s&&Ka()!==s&&(a=Io())!==s&&Ka()!==s&&Xa()!==s&&Ka()!==s&&(i=Xa())!==s?(e=function(r,t){return {type:"cast",expr:r,symbol:"as",target:{dataType:"DECIMAL("+t+")"}}}(n,a),t=e):(Uu=t,t=s),t===s&&(t=Uu,(e=da())!==s&&Ka()!==s&&Ba()!==s&&Ka()!==s&&(n=Ws())!==s&&Ka()!==s&&Xo()!==s&&Ka()!==s&&(u=wa())!==s&&Ka()!==s&&(o=Ba())!==s&&Ka()!==s&&(a=Io())!==s&&Ka()!==s&&ja()!==s&&Ka()!==s&&(i=Io())!==s&&Ka()!==s&&Xa()!==s&&Ka()!==s&&Xa()!==s?(e=function(r,t,e){return {type:"cast",expr:r,symbol:"as",target:{dataType:"DECIMAL("+t+", "+e+")"}}}(n,a,i),t=e):(Uu=t,t=s),t===s&&(t=Uu,(e=da())!==s&&Ka()!==s&&Ba()!==s&&Ka()!==s&&(n=Ws())!==s&&Ka()!==s&&Xo()!==s&&Ka()!==s&&(u=function(){var t;(t=function(){var t,e,n,u;t=Uu,"signed"===r.substr(Uu,6).toLowerCase()?(e=r.substr(Uu,6),Uu+=6):(e=s,0===$u&&ju(cn));e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="SIGNED"):(Uu=t,t=s)):(Uu=t,t=s);return t}())===s&&(t=Ea());return t}())!==s&&Ka()!==s?((o=Aa())===s&&(o=null),o!==s&&Ka()!==s&&(a=Xa())!==s?(e=function(r,t,e){return {type:"cast",expr:r,symbol:"as",target:{dataType:t+(e?" "+e:"")}}}(n,u,o),t=e):(Uu=t,t=s)):(Uu=t,t=s))));return t}())===s&&(t=Eo())===s&&(t=function(){var t;(t=function(){var t,e,n,u;t=Uu,(e=function(){var t,e,n,u;t=Uu,"count"===r.substr(Uu,5).toLowerCase()?(e=r.substr(Uu,5),Uu+=5):(e=s,0===$u&&ju(Be));e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="COUNT"):(Uu=t,t=s)):(Uu=t,t=s);return t}())===s&&(e=function(){var t,e,n,u;t=Uu,"group_concat"===r.substr(Uu,12).toLowerCase()?(e=r.substr(Uu,12),Uu+=12):(e=s,0===$u&&ju(Xe));e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="GROUP_CONCAT"):(Uu=t,t=s)):(Uu=t,t=s);return t}());e!==s&&Ka()!==s&&Ba()!==s&&Ka()!==s&&(n=function(){var t,e,n,u;t=Uu,(e=function(){var e;42===r.charCodeAt(Uu)?(e="*",Uu++):(e=s,0===$u&&ju(jr));e!==s&&(e={type:"star",value:"*"});return e}())!==s&&(e={expr:e});(t=e)===s&&(t=Uu,(e=ua())===s&&(e=null),e!==s&&Ka()!==s&&(n=ao())!==s?(t=e={distinct:e,expr:n}):(Uu=t,t=s),t===s&&(t=Uu,(e=ua())===s&&(e=null),e!==s&&Ka()!==s&&(n=Ba())!==s&&Ka()!==s&&(u=ao())!==s&&Ka()!==s&&Xa()!==s?(e=function(r,t){return t.parentheses=!0,{distinct:r,expr:t}}(e,u),t=e):(Uu=t,t=s)));return t}())!==s&&Ka()!==s&&Xa()!==s&&Ka()!==s?((u=wo())===s&&(u=null),u!==s?(e=function(r,t,e){return {type:"aggr_func",name:r,args:t,over:e}}(e,n,u),t=e):(Uu=t,t=s)):(Uu=t,t=s);return t}())===s&&(t=function(){var t,e,n;t=Uu,(e=function(){var t;(t=function(){var t,e,n,u;t=Uu,"sum"===r.substr(Uu,3).toLowerCase()?(e=r.substr(Uu,3),Uu+=3):(e=s,0===$u&&ju(Ke));e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="SUM"):(Uu=t,t=s)):(Uu=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Uu,"max"===r.substr(Uu,3).toLowerCase()?(e=r.substr(Uu,3),Uu+=3):(e=s,0===$u&&ju(We));e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="MAX"):(Uu=t,t=s)):(Uu=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Uu,"min"===r.substr(Uu,3).toLowerCase()?(e=r.substr(Uu,3),Uu+=3):(e=s,0===$u&&ju(Ve));e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="MIN"):(Uu=t,t=s)):(Uu=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Uu,"avg"===r.substr(Uu,3).toLowerCase()?(e=r.substr(Uu,3),Uu+=3):(e=s,0===$u&&ju(qe));e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="AVG"):(Uu=t,t=s)):(Uu=t,t=s);return t}());return t}())!==s&&Ka()!==s&&Ba()!==s&&Ka()!==s&&(n=eo())!==s&&Ka()!==s&&Xa()!==s?(t=e={type:"aggr_func",name:e,args:{expr:n}}):(Uu=t,t=s);return t}());return t}())===s&&(t=function(){var t,e,n,u;t=Uu,(e=ai())!==s&&Ka()!==s&&Ba()!==s&&Ka()!==s?((n=js())===s&&(n=null),n!==s&&Ka()!==s&&Xa()!==s&&Ka()!==s?((u=wo())===s&&(u=null),u!==s?(e=lt(e,n,u),t=e):(Uu=t,t=s)):(Uu=t,t=s)):(Uu=t,t=s);t===s&&(t=Uu,(e=function(){var t;(t=function(){var t,e,n,u;t=Uu,"current_date"===r.substr(Uu,12).toLowerCase()?(e=r.substr(Uu,12),Uu+=12):(e=s,0===$u&&ju(On));e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="CURRENT_DATE"):(Uu=t,t=s)):(Uu=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Uu,"current_time"===r.substr(Uu,12).toLowerCase()?(e=r.substr(Uu,12),Uu+=12):(e=s,0===$u&&ju(Pn));e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="CURRENT_TIME"):(Uu=t,t=s)):(Uu=t,t=s);return t}())===s&&(t=Oa())===s&&(t=function(){var t,e,n,u;t=Uu,"current_user"===r.substr(Uu,12).toLowerCase()?(e=r.substr(Uu,12),Uu+=12):(e=s,0===$u&&ju(Gn));e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="CURRENT_USER"):(Uu=t,t=s)):(Uu=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Uu,"user"===r.substr(Uu,4).toLowerCase()?(e=r.substr(Uu,4),Uu+=4):(e=s,0===$u&&ju(gn));e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="USER"):(Uu=t,t=s)):(Uu=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Uu,"session_user"===r.substr(Uu,12).toLowerCase()?(e=r.substr(Uu,12),Uu+=12):(e=s,0===$u&&ju(jn));e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="SESSION_USER"):(Uu=t,t=s)):(Uu=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Uu,"system_user"===r.substr(Uu,11).toLowerCase()?(e=r.substr(Uu,11),Uu+=11):(e=s,0===$u&&ju(Yn));e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="SYSTEM_USER"):(Uu=t,t=s)):(Uu=t,t=s);return t}());return t}())!==s&&Ka()!==s&&Ba()!==s&&Ka()!==s?((n=js())===s&&(n=null),n!==s&&Ka()!==s&&Xa()!==s&&Ka()!==s?((u=wo())===s&&(u=null),u!==s?(e=lt(e,n,u),t=e):(Uu=t,t=s)):(Uu=t,t=s)):(Uu=t,t=s));return t}())===s&&(t=Bs())===s&&(t=Ys())===s&&(t=ao())===s&&(t=po())===s){if(t=Uu,Ba()!==s)if((e=Ka())!==s)if((n=Ws())!==s)if(Ka()!==s)if(Xa()!==s){for(u=[],o=Uu,(a=qa())!==s?((i=fa())===s&&(i=ba()),i!==s&&(c=Ka())!==s&&(l=Vs())!==s?o=a=[a,i,c,l]:(Uu=o,o=s)):(Uu=o,o=s);o!==s;)u.push(o),o=Uu,(a=qa())!==s?((i=fa())===s&&(i=ba()),i!==s&&(c=Ka())!==s&&(l=Vs())!==s?o=a=[a,i,c,l]:(Uu=o,o=s)):(Uu=o,o=s);u!==s?(v=u,(b=n).parentheses=!0,t=v&&0!==v.length?Ei(b,v):b):(Uu=t,t=s);}else Uu=t,t=s;else Uu=t,t=s;else Uu=t,t=s;else Uu=t,t=s;else Uu=t,t=s;t===s&&(t=Uu,Ba()!==s&&(e=Ka())!==s&&(n=js())!==s&&Ka()!==s&&Xa()!==s?((f=n).parentheses=!0,t=f):(Uu=t,t=s),t===s&&(t=li())===s&&(t=Uu,Ka()!==s?(63===r.charCodeAt(Uu)?(e="?",Uu++):(e=s,0===$u&&ju(Xr)),e!==s?(t={type:"origin",value:e}):(Uu=t,t=s)):(Uu=t,t=s)));}return t}function ao(){var t,e,n,u,o,a,i,c,l,f;return t=Uu,e=Uu,(n=io())!==s&&(u=Ka())!==s&&(o=Ga())!==s&&(a=Ka())!==s?e=n=[n,u,o,a]:(Uu=e,e=s),e===s&&(e=null),e!==s&&(n=lo())!==s&&(u=Ka())!==s?((o=function(){var t;"->>"===r.substr(Uu,3)?(t="->>",Uu+=3):(t=s,0===$u&&ju(Eu));return t}())===s&&(o=function(){var t;"->"===r.substr(Uu,2)?(t="->",Uu+=2):(t=s,0===$u&&ju(wu));return t}()),o!==s&&(a=Ka())!==s?((i=Ao())===s&&(i=So()),i!==s&&Ka()!==s?((c=zu())===s&&(c=null),c!==s?(t=e=function(r,t,e,n,u){const s=r&&r[0]||null;return mi.add(`select::${s}::${t}`),{type:"column_ref",table:s,column:t,collate:u,arrow:e,property:n}}(e,n,o,i,c)):(Uu=t,t=s)):(Uu=t,t=s)):(Uu=t,t=s)):(Uu=t,t=s),t===s&&(t=Uu,(e=io())!==s&&(n=Ka())!==s&&(u=Ga())!==s&&(o=Ka())!==s&&(a=function(){var r,t;r=Uu,(t=fo())!==s&&(t=t);(r=t)===s&&(r=co());return r}())!==s?(l=e,f=a,mi.add(`select::${l}::${f}`),t=e={type:"column_ref",table:l,column:f}):(Uu=t,t=s),t===s&&(t=Uu,(e=lo())!==s&&(e=function(r){return mi.add("select::null::"+r),{type:"column_ref",table:null,column:r}}(e)),t=e)),t}function io(){var r,t;return r=Uu,(t=bo())!==s?((Wr(t)?s:void 0)!==s?(r=t=t):(Uu=r,r=s)):(Uu=r,r=s),r===s&&(r=Uu,(t=co())!==s&&(t=t),r=t),r}function co(){var t;return (t=function(){var t,e,n,u;t=Uu,34===r.charCodeAt(Uu)?(e='"',Uu++):(e=s,0===$u&&ju(Vr));if(e!==s){if(n=[],Kr.test(r.charAt(Uu))?(u=r.charAt(Uu),Uu++):(u=s,0===$u&&ju(qr)),u!==s)for(;u!==s;)n.push(u),Kr.test(r.charAt(Uu))?(u=r.charAt(Uu),Uu++):(u=s,0===$u&&ju(qr));else n=s;n!==s?(34===r.charCodeAt(Uu)?(u='"',Uu++):(u=s,0===$u&&ju(Vr)),u!==s?(e=Zr(n),t=e):(Uu=t,t=s)):(Uu=t,t=s);}else Uu=t,t=s;return t}())===s&&(t=function(){var t,e,n,u;t=Uu,39===r.charCodeAt(Uu)?(e="'",Uu++):(e=s,0===$u&&ju(ur));if(e!==s){if(n=[],zr.test(r.charAt(Uu))?(u=r.charAt(Uu),Uu++):(u=s,0===$u&&ju(Jr)),u!==s)for(;u!==s;)n.push(u),zr.test(r.charAt(Uu))?(u=r.charAt(Uu),Uu++):(u=s,0===$u&&ju(Jr));else n=s;n!==s?(39===r.charCodeAt(Uu)?(u="'",Uu++):(u=s,0===$u&&ju(ur)),u!==s?(e=Zr(n),t=e):(Uu=t,t=s)):(Uu=t,t=s);}else Uu=t,t=s;return t}())===s&&(t=function(){var t,e,n,u;t=Uu,96===r.charCodeAt(Uu)?(e="`",Uu++):(e=s,0===$u&&ju(Qr));if(e!==s){if(n=[],rt.test(r.charAt(Uu))?(u=r.charAt(Uu),Uu++):(u=s,0===$u&&ju(tt)),u!==s)for(;u!==s;)n.push(u),rt.test(r.charAt(Uu))?(u=r.charAt(Uu),Uu++):(u=s,0===$u&&ju(tt));else n=s;n!==s?(96===r.charCodeAt(Uu)?(u="`",Uu++):(u=s,0===$u&&ju(Qr)),u!==s?(e=Zr(n),t=e):(Uu=t,t=s)):(Uu=t,t=s);}else Uu=t,t=s;return t}()),t}function lo(){var r,t;return r=Uu,(t=fo())!==s?((Wr(t)?s:void 0)!==s?(r=t=t):(Uu=r,r=s)):(Uu=r,r=s),r===s&&(r=co()),r}function fo(){var r,t,e,n;if(r=Uu,(t=vo())!==s){for(e=[],n=Co();n!==s;)e.push(n),n=Co();e!==s?(r=t=et(t,e)):(Uu=r,r=s);}else Uu=r,r=s;return r}function bo(){var r,t,e,n;if(r=Uu,(t=vo())!==s){for(e=[],n=Lo();n!==s;)e.push(n),n=Lo();e!==s?(r=t=et(t,e)):(Uu=r,r=s);}else Uu=r,r=s;return r}function vo(){var t;return nt.test(r.charAt(Uu))?(t=r.charAt(Uu),Uu++):(t=s,0===$u&&ju(ut)),t}function Lo(){var t;return st.test(r.charAt(Uu))?(t=r.charAt(Uu),Uu++):(t=s,0===$u&&ju(ot)),t}function Co(){var t;return at.test(r.charAt(Uu))?(t=r.charAt(Uu),Uu++):(t=s,0===$u&&ju(it)),t}function po(){var e,n,u;return e=Uu,58===r.charCodeAt(Uu)?(n=":",Uu++):(n=s,0===$u&&ju(ct)),n!==s&&(u=bo())!==s?e=n=[n,u]:(Uu=e,e=s),e!==s&&(e={type:"param",value:e[1]}),e}function wo(){var t,e,n;return t=Uu,function(){var t,e,n,u;t=Uu,"over"===r.substr(Uu,4).toLowerCase()?(e=r.substr(Uu,4),Uu+=4):(e=s,0===$u&&ju(Ee));e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?t=e=[e,n]:(Uu=t,t=s)):(Uu=t,t=s);return t}()!==s&&Ka()!==s&&Ba()!==s&&Ka()!==s&&jo()!==s&&Ka()!==s&&ta()!==s&&Ka()!==s&&(e=Cs())!==s&&Ka()!==s?((n=Os())===s&&(n=null),n!==s&&Ka()!==s&&Xa()!==s?(t=function(r,t){return {partitionby:r,orderby:t}}(e,n)):(Uu=t,t=s)):(Uu=t,t=s),t}function Eo(){var t,e,n,u,o,a,i,c,l;return t=Uu,"binary"===r.substr(Uu,6).toLowerCase()?(e=r.substr(Uu,6),Uu+=6):(e=s,0===$u&&ju(vr)),e===s&&(e=null),e!==s&&Ka()!==s&&(n=Ao())!==s?(u=Uu,(o=Ka())!==s&&(a=zu())!==s?u=o=[o,a]:(Uu=u,u=s),u===s&&(u=null),u!==s?(c=n,l=u,(i=e)&&(c.prefix=i.toLowerCase()),l&&(c.suffix={collate:l[1]}),t=e=c):(Uu=t,t=s)):(Uu=t,t=s),t===s&&(t=So())===s&&(t=function(){var t,e;t=Uu,(e=function(){var t,e,n,u;t=Uu,"true"===r.substr(Uu,4).toLowerCase()?(e=r.substr(Uu,4),Uu+=4):(e=s,0===$u&&ju(jt));e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?t=e=[e,n]:(Uu=t,t=s)):(Uu=t,t=s);return t}())!==s&&(e={type:"bool",value:!0});(t=e)===s&&(t=Uu,(e=function(){var t,e,n,u;t=Uu,"false"===r.substr(Uu,5).toLowerCase()?(e=r.substr(Uu,5),Uu+=5):(e=s,0===$u&&ju(Bt));e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?t=e=[e,n]:(Uu=t,t=s)):(Uu=t,t=s);return t}())!==s&&(e={type:"bool",value:!1}),t=e);return t}())===s&&(t=ho())===s&&(t=function(){var t,e,n,u,o,a,i;t=Uu,(e=_a())===s&&(e=Na())===s&&(e=ga())===s&&(e=Ra());if(e!==s)if(Ka()!==s){if(n=Uu,39===r.charCodeAt(Uu)?(u="'",Uu++):(u=s,0===$u&&ju(ur)),u!==s){for(o=[],a=To();a!==s;)o.push(a),a=To();o!==s?(39===r.charCodeAt(Uu)?(a="'",Uu++):(a=s,0===$u&&ju(ur)),a!==s?n=u=[u,o,a]:(Uu=n,n=s)):(Uu=n,n=s);}else Uu=n,n=s;n!==s?(e=bt(e,n),t=e):(Uu=t,t=s);}else Uu=t,t=s;else Uu=t,t=s;if(t===s){if(t=Uu,(e=_a())===s&&(e=Na())===s&&(e=ga())===s&&(e=Ra()),e!==s)if(Ka()!==s){if(n=Uu,34===r.charCodeAt(Uu)?(u='"',Uu++):(u=s,0===$u&&ju(Vr)),u!==s){for(o=[],a=yo();a!==s;)o.push(a),a=yo();o!==s?(34===r.charCodeAt(Uu)?(a='"',Uu++):(a=s,0===$u&&ju(Vr)),a!==s?n=u=[u,o,a]:(Uu=n,n=s)):(Uu=n,n=s);}else Uu=n,n=s;n!==s?(e=bt(e,n),t=e):(Uu=t,t=s);}else Uu=t,t=s;else Uu=t,t=s;t===s&&(t=Uu,(e=Oa())!==s&&Ka()!==s?((n=Ba())===s&&(n=null),n!==s&&(u=Ka())!==s?((o=Xa())===s&&(o=null),o!==s?((a=(a=function(r,t,e){if(t&&e)return !0}(0,n,o))?s:void 0)!==s&&Ka()!==s?("on update current_timestamp"===r.substr(Uu,27).toLowerCase()?(i=r.substr(Uu,27),Uu+=27):(i=s,0===$u&&ju(vt)),i===s&&(i=null),i!==s?(c=e,e={type:"origin",value:((l=i)?`${c} ${l}`:c).toLowerCase()},t=e):(Uu=t,t=s)):(Uu=t,t=s)):(Uu=t,t=s)):(Uu=t,t=s)):(Uu=t,t=s));}var c,l;return t}()),t}function ho(){var e;return (e=function(){var t,e,n,u;t=Uu,"null"===r.substr(Uu,4).toLowerCase()?(e=r.substr(Uu,4),Uu+=4):(e=s,0===$u&&ju(Ht));e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?t=e=[e,n]:(Uu=t,t=s)):(Uu=t,t=s);return t}())!==s&&(e={type:"null",value:null}),e}function Ao(){var t,e,n,u,o,a;if(t=Uu,"x"===r.substr(Uu,1).toLowerCase()?(e=r.charAt(Uu),Uu++):(e=s,0===$u&&ju(ft)),e===s&&(e=null),e!==s){if(n=Uu,39===r.charCodeAt(Uu)?(u="'",Uu++):(u=s,0===$u&&ju(ur)),u!==s){for(o=[],a=To();a!==s;)o.push(a),a=To();o!==s?(39===r.charCodeAt(Uu)?(a="'",Uu++):(a=s,0===$u&&ju(ur)),a!==s?n=u=[u,o,a]:(Uu=n,n=s)):(Uu=n,n=s);}else Uu=n,n=s;n!==s?(t=e={type:e?"hex_string":"single_quote_string",value:n[1].join("")}):(Uu=t,t=s);}else Uu=t,t=s;if(t===s)if(t=Uu,"x"===r.substr(Uu,1).toLowerCase()?(e=r.charAt(Uu),Uu++):(e=s,0===$u&&ju(ft)),e===s&&(e=null),e!==s){if(n=Uu,34===r.charCodeAt(Uu)?(u='"',Uu++):(u=s,0===$u&&ju(Vr)),u!==s){for(o=[],a=yo();a!==s;)o.push(a),a=yo();o!==s?(34===r.charCodeAt(Uu)?(a='"',Uu++):(a=s,0===$u&&ju(Vr)),a!==s?n=u=[u,o,a]:(Uu=n,n=s)):(Uu=n,n=s);}else Uu=n,n=s;n!==s?(t=e=function(r,t){return {type:r?"hex_string":"string",value:t[1].join("")}}(e,n)):(Uu=t,t=s);}else Uu=t,t=s;return t}function yo(){var t;return dt.test(r.charAt(Uu))?(t=r.charAt(Uu),Uu++):(t=s,0===$u&&ju(Lt)),t===s&&(t=mo()),t}function To(){var t;return Ct.test(r.charAt(Uu))?(t=r.charAt(Uu),Uu++):(t=s,0===$u&&ju(pt)),t===s&&(t=mo()),t}function mo(){var t,e,n,u,o,a,i,c,l,f;return t=Uu,"\\'"===r.substr(Uu,2)?(e="\\'",Uu+=2):(e=s,0===$u&&ju(wt)),e!==s&&(e="'"),(t=e)===s&&(t=Uu,'\\"'===r.substr(Uu,2)?(e='\\"',Uu+=2):(e=s,0===$u&&ju(Et)),e!==s&&(e='"'),(t=e)===s&&(t=Uu,"\\\\"===r.substr(Uu,2)?(e="\\\\",Uu+=2):(e=s,0===$u&&ju(ht)),e!==s&&(e="\\"),(t=e)===s&&(t=Uu,"\\/"===r.substr(Uu,2)?(e="\\/",Uu+=2):(e=s,0===$u&&ju(At)),e!==s&&(e="/"),(t=e)===s&&(t=Uu,"\\b"===r.substr(Uu,2)?(e="\\b",Uu+=2):(e=s,0===$u&&ju(yt)),e!==s&&(e="\b"),(t=e)===s&&(t=Uu,"\\f"===r.substr(Uu,2)?(e="\\f",Uu+=2):(e=s,0===$u&&ju(Tt)),e!==s&&(e="\f"),(t=e)===s&&(t=Uu,"\\n"===r.substr(Uu,2)?(e="\\n",Uu+=2):(e=s,0===$u&&ju(mt)),e!==s&&(e="\n"),(t=e)===s&&(t=Uu,"\\r"===r.substr(Uu,2)?(e="\\r",Uu+=2):(e=s,0===$u&&ju(St)),e!==s&&(e="\r"),(t=e)===s&&(t=Uu,"\\t"===r.substr(Uu,2)?(e="\\t",Uu+=2):(e=s,0===$u&&ju(It)),e!==s&&(e="\t"),(t=e)===s&&(t=Uu,"\\u"===r.substr(Uu,2)?(e="\\u",Uu+=2):(e=s,0===$u&&ju(Nt)),e!==s&&(n=Oo())!==s&&(u=Oo())!==s&&(o=Oo())!==s&&(a=Oo())!==s?(i=n,c=u,l=o,f=a,t=e=String.fromCharCode(parseInt("0x"+i+c+l+f))):(Uu=t,t=s),t===s&&(t=Uu,92===r.charCodeAt(Uu)?(e="\\",Uu++):(e=s,0===$u&&ju(Rt)),e!==s&&(e="\\"),t=e)))))))))),t}function So(){var t,e;return (t=function(){var r,t,e,n;r=Uu,(t=Io())!==s&&(e=No())!==s&&(n=Ro())!==s?(r=t={type:"bigint",value:t+e+n}):(Uu=r,r=s);r===s&&(r=Uu,(t=Io())!==s&&(e=No())!==s?(t=function(r,t){const e=r+t;return pi(r)?{type:"bigint",value:e}:parseFloat(e)}(t,e),r=t):(Uu=r,r=s),r===s&&(r=Uu,(t=Io())!==s&&(e=Ro())!==s?(t=function(r,t){return {type:"bigint",value:r+t}}(t,e),r=t):(Uu=r,r=s),r===s&&(r=Uu,(t=Io())!==s&&(t=function(r){return pi(r)?{type:"bigint",value:r}:parseFloat(r)}(t)),r=t)));return r}())!==s&&(t=(e=t)&&"bigint"===e.type?e:{type:"number",value:e}),t}function Io(){var t,e,n;return (t=_o())===s&&(t=go())===s&&(t=Uu,45===r.charCodeAt(Uu)?(e="-",Uu++):(e=s,0===$u&&ju(Gr)),e===s&&(43===r.charCodeAt(Uu)?(e="+",Uu++):(e=s,0===$u&&ju(Hr))),e!==s&&(n=_o())!==s?(t=e="-"+n):(Uu=t,t=s),t===s&&(t=Uu,45===r.charCodeAt(Uu)?(e="-",Uu++):(e=s,0===$u&&ju(Gr)),e===s&&(43===r.charCodeAt(Uu)?(e="+",Uu++):(e=s,0===$u&&ju(Hr))),e!==s&&(n=go())!==s?(t=e="-"+n):(Uu=t,t=s))),t}function No(){var t,e,n;return t=Uu,46===r.charCodeAt(Uu)?(e=".",Uu++):(e=s,0===$u&&ju(Ot)),e!==s&&(n=_o())!==s?(t=e="."+n):(Uu=t,t=s),t}function Ro(){var t,e,n;return t=Uu,(e=function(){var t,e,n;t=Uu,kt.test(r.charAt(Uu))?(e=r.charAt(Uu),Uu++):(e=s,0===$u&&ju($t));e!==s?(Ft.test(r.charAt(Uu))?(n=r.charAt(Uu),Uu++):(n=s,0===$u&&ju(Pt)),n===s&&(n=null),n!==s?(t=e=e+(null!==(u=n)?u:"")):(Uu=t,t=s)):(Uu=t,t=s);var u;return t}())!==s&&(n=_o())!==s?(t=e=e+n):(Uu=t,t=s),t}function _o(){var t,e;if(t=[],(e=go())!==s)for(;e!==s;)t.push(e),e=go();else t=s;return t!==s&&(t=t.join("")),t}function go(){var t;return xt.test(r.charAt(Uu))?(t=r.charAt(Uu),Uu++):(t=s,0===$u&&ju(Ut)),t}function Oo(){var t;return Mt.test(r.charAt(Uu))?(t=r.charAt(Uu),Uu++):(t=s,0===$u&&ju(Dt)),t}function xo(){var t,e,n,u;return t=Uu,"default"===r.substr(Uu,7).toLowerCase()?(e=r.substr(Uu,7),Uu+=7):(e=s,0===$u&&ju(p)),e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?t=e=[e,n]:(Uu=t,t=s)):(Uu=t,t=s),t}function Uo(){var t,e,n,u;return t=Uu,"to"===r.substr(Uu,2).toLowerCase()?(e=r.substr(Uu,2),Uu+=2):(e=s,0===$u&&ju(Yt)),e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?t=e=[e,n]:(Uu=t,t=s)):(Uu=t,t=s),t}function Mo(){var t,e,n,u;return t=Uu,"show"===r.substr(Uu,4).toLowerCase()?(e=r.substr(Uu,4),Uu+=4):(e=s,0===$u&&ju(Xt)),e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?t=e=[e,n]:(Uu=t,t=s)):(Uu=t,t=s),t}function Do(){var t,e,n,u;return t=Uu,"drop"===r.substr(Uu,4).toLowerCase()?(e=r.substr(Uu,4),Uu+=4):(e=s,0===$u&&ju(Wt)),e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="DROP"):(Uu=t,t=s)):(Uu=t,t=s),t}function ko(){var t,e,n,u;return t=Uu,"update"===r.substr(Uu,6).toLowerCase()?(e=r.substr(Uu,6),Uu+=6):(e=s,0===$u&&ju(G)),e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?t=e=[e,n]:(Uu=t,t=s)):(Uu=t,t=s),t}function $o(){var t,e,n,u;return t=Uu,"create"===r.substr(Uu,6).toLowerCase()?(e=r.substr(Uu,6),Uu+=6):(e=s,0===$u&&ju(Zt)),e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?t=e=[e,n]:(Uu=t,t=s)):(Uu=t,t=s),t}function Fo(){var t,e,n,u;return t=Uu,"temporary"===r.substr(Uu,9).toLowerCase()?(e=r.substr(Uu,9),Uu+=9):(e=s,0===$u&&ju(zt)),e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?t=e=[e,n]:(Uu=t,t=s)):(Uu=t,t=s),t}function Po(){var t,e,n,u;return t=Uu,"if not exists"===r.substr(Uu,13).toLowerCase()?(e=r.substr(Uu,13),Uu+=13):(e=s,0===$u&&ju(Jt)),e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?t=e=[e,n]:(Uu=t,t=s)):(Uu=t,t=s),t}function Ho(){var t,e,n,u;return t=Uu,"replace"===r.substr(Uu,7).toLowerCase()?(e=r.substr(Uu,7),Uu+=7):(e=s,0===$u&&ju(te)),e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?t=e=[e,n]:(Uu=t,t=s)):(Uu=t,t=s),t}function Go(){var t,e,n,u;return t=Uu,"rename"===r.substr(Uu,6).toLowerCase()?(e=r.substr(Uu,6),Uu+=6):(e=s,0===$u&&ju(ee)),e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?t=e=[e,n]:(Uu=t,t=s)):(Uu=t,t=s),t}function jo(){var t,e,n,u;return t=Uu,"partition"===r.substr(Uu,9).toLowerCase()?(e=r.substr(Uu,9),Uu+=9):(e=s,0===$u&&ju(ue)),e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="PARTITION"):(Uu=t,t=s)):(Uu=t,t=s),t}function Yo(){var t,e,n,u;return t=Uu,"into"===r.substr(Uu,4).toLowerCase()?(e=r.substr(Uu,4),Uu+=4):(e=s,0===$u&&ju(se)),e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?t=e=[e,n]:(Uu=t,t=s)):(Uu=t,t=s),t}function Bo(){var t,e,n,u;return t=Uu,"set"===r.substr(Uu,3).toLowerCase()?(e=r.substr(Uu,3),Uu+=3):(e=s,0===$u&&ju(K)),e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?t=e=[e,n]:(Uu=t,t=s)):(Uu=t,t=s),t}function Xo(){var t,e,n,u;return t=Uu,"as"===r.substr(Uu,2).toLowerCase()?(e=r.substr(Uu,2),Uu+=2):(e=s,0===$u&&ju(ie)),e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?t=e=[e,n]:(Uu=t,t=s)):(Uu=t,t=s),t}function Wo(){var t,e,n,u;return t=Uu,"table"===r.substr(Uu,5).toLowerCase()?(e=r.substr(Uu,5),Uu+=5):(e=s,0===$u&&ju(ce)),e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="TABLE"):(Uu=t,t=s)):(Uu=t,t=s),t}function Vo(){var t,e,n,u;return t=Uu,"tables"===r.substr(Uu,6).toLowerCase()?(e=r.substr(Uu,6),Uu+=6):(e=s,0===$u&&ju(le)),e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="TABLES"):(Uu=t,t=s)):(Uu=t,t=s),t}function Ko(){var t,e,n,u;return t=Uu,"on"===r.substr(Uu,2).toLowerCase()?(e=r.substr(Uu,2),Uu+=2):(e=s,0===$u&&ju(P)),e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?t=e=[e,n]:(Uu=t,t=s)):(Uu=t,t=s),t}function qo(){var t,e,n,u;return t=Uu,"join"===r.substr(Uu,4).toLowerCase()?(e=r.substr(Uu,4),Uu+=4):(e=s,0===$u&&ju(pe)),e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?t=e=[e,n]:(Uu=t,t=s)):(Uu=t,t=s),t}function Zo(){var t,e,n,u;return t=Uu,"outer"===r.substr(Uu,5).toLowerCase()?(e=r.substr(Uu,5),Uu+=5):(e=s,0===$u&&ju(we)),e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?t=e=[e,n]:(Uu=t,t=s)):(Uu=t,t=s),t}function zo(){var t,e,n,u;return t=Uu,"union"===r.substr(Uu,5).toLowerCase()?(e=r.substr(Uu,5),Uu+=5):(e=s,0===$u&&ju(he)),e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?t=e=[e,n]:(Uu=t,t=s)):(Uu=t,t=s),t}function Jo(){var t,e,n,u;return t=Uu,"values"===r.substr(Uu,6).toLowerCase()?(e=r.substr(Uu,6),Uu+=6):(e=s,0===$u&&ju(Ae)),e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?t=e=[e,n]:(Uu=t,t=s)):(Uu=t,t=s),t}function Qo(){var t,e,n,u;return t=Uu,"using"===r.substr(Uu,5).toLowerCase()?(e=r.substr(Uu,5),Uu+=5):(e=s,0===$u&&ju(ye)),e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?t=e=[e,n]:(Uu=t,t=s)):(Uu=t,t=s),t}function ra(){var t,e,n,u;return t=Uu,"with"===r.substr(Uu,4).toLowerCase()?(e=r.substr(Uu,4),Uu+=4):(e=s,0===$u&&ju(mr)),e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?t=e=[e,n]:(Uu=t,t=s)):(Uu=t,t=s),t}function ta(){var t,e,n,u;return t=Uu,"by"===r.substr(Uu,2).toLowerCase()?(e=r.substr(Uu,2),Uu+=2):(e=s,0===$u&&ju(Se)),e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?t=e=[e,n]:(Uu=t,t=s)):(Uu=t,t=s),t}function ea(){var t,e,n,u;return t=Uu,"desc"===r.substr(Uu,4).toLowerCase()?(e=r.substr(Uu,4),Uu+=4):(e=s,0===$u&&ju(Oe)),e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="DESC"):(Uu=t,t=s)):(Uu=t,t=s),t}function na(){var t,e,n,u;return t=Uu,"all"===r.substr(Uu,3).toLowerCase()?(e=r.substr(Uu,3),Uu+=3):(e=s,0===$u&&ju(Ue)),e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="ALL"):(Uu=t,t=s)):(Uu=t,t=s),t}function ua(){var t,e,n,u;return t=Uu,"distinct"===r.substr(Uu,8).toLowerCase()?(e=r.substr(Uu,8),Uu+=8):(e=s,0===$u&&ju(Me)),e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="DISTINCT"):(Uu=t,t=s)):(Uu=t,t=s),t}function sa(){var t,e,n,u;return t=Uu,"between"===r.substr(Uu,7).toLowerCase()?(e=r.substr(Uu,7),Uu+=7):(e=s,0===$u&&ju(De)),e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="BETWEEN"):(Uu=t,t=s)):(Uu=t,t=s),t}function oa(){var t,e,n,u;return t=Uu,"in"===r.substr(Uu,2).toLowerCase()?(e=r.substr(Uu,2),Uu+=2):(e=s,0===$u&&ju(ke)),e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="IN"):(Uu=t,t=s)):(Uu=t,t=s),t}function aa(){var t,e,n,u;return t=Uu,"is"===r.substr(Uu,2).toLowerCase()?(e=r.substr(Uu,2),Uu+=2):(e=s,0===$u&&ju($e)),e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="IS"):(Uu=t,t=s)):(Uu=t,t=s),t}function ia(){var t,e,n,u;return t=Uu,"like"===r.substr(Uu,4).toLowerCase()?(e=r.substr(Uu,4),Uu+=4):(e=s,0===$u&&ju(Fe)),e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="LIKE"):(Uu=t,t=s)):(Uu=t,t=s),t}function ca(){var t,e,n,u;return t=Uu,"exists"===r.substr(Uu,6).toLowerCase()?(e=r.substr(Uu,6),Uu+=6):(e=s,0===$u&&ju(Ge)),e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="EXISTS"):(Uu=t,t=s)):(Uu=t,t=s),t}function la(){var t,e,n,u;return t=Uu,"not"===r.substr(Uu,3).toLowerCase()?(e=r.substr(Uu,3),Uu+=3):(e=s,0===$u&&ju(O)),e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="NOT"):(Uu=t,t=s)):(Uu=t,t=s),t}function fa(){var t,e,n,u;return t=Uu,"and"===r.substr(Uu,3).toLowerCase()?(e=r.substr(Uu,3),Uu+=3):(e=s,0===$u&&ju(je)),e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="AND"):(Uu=t,t=s)):(Uu=t,t=s),t}function ba(){var t,e,n,u;return t=Uu,"or"===r.substr(Uu,2).toLowerCase()?(e=r.substr(Uu,2),Uu+=2):(e=s,0===$u&&ju(Ye)),e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="OR"):(Uu=t,t=s)):(Uu=t,t=s),t}function va(){var t,e,n,u;return t=Uu,"case"===r.substr(Uu,4).toLowerCase()?(e=r.substr(Uu,4),Uu+=4):(e=s,0===$u&&ju(ze)),e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?t=e=[e,n]:(Uu=t,t=s)):(Uu=t,t=s),t}function da(){var t,e,n,u;return t=Uu,"cast"===r.substr(Uu,4).toLowerCase()?(e=r.substr(Uu,4),Uu+=4):(e=s,0===$u&&ju(en)),e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?t=e=[e,n]:(Uu=t,t=s)):(Uu=t,t=s),t}function La(){var t,e,n,u;return t=Uu,"char"===r.substr(Uu,4).toLowerCase()?(e=r.substr(Uu,4),Uu+=4):(e=s,0===$u&&ju(un)),e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="CHAR"):(Uu=t,t=s)):(Uu=t,t=s),t}function Ca(){var t,e,n,u;return t=Uu,"varchar"===r.substr(Uu,7).toLowerCase()?(e=r.substr(Uu,7),Uu+=7):(e=s,0===$u&&ju(sn)),e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="VARCHAR"):(Uu=t,t=s)):(Uu=t,t=s),t}function pa(){var t,e,n,u;return t=Uu,"numeric"===r.substr(Uu,7).toLowerCase()?(e=r.substr(Uu,7),Uu+=7):(e=s,0===$u&&ju(on)),e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="NUMERIC"):(Uu=t,t=s)):(Uu=t,t=s),t}function wa(){var t,e,n,u;return t=Uu,"decimal"===r.substr(Uu,7).toLowerCase()?(e=r.substr(Uu,7),Uu+=7):(e=s,0===$u&&ju(an)),e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="DECIMAL"):(Uu=t,t=s)):(Uu=t,t=s),t}function Ea(){var t,e,n,u;return t=Uu,"unsigned"===r.substr(Uu,8).toLowerCase()?(e=r.substr(Uu,8),Uu+=8):(e=s,0===$u&&ju(ln)),e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="UNSIGNED"):(Uu=t,t=s)):(Uu=t,t=s),t}function ha(){var t,e,n,u;return t=Uu,"int"===r.substr(Uu,3).toLowerCase()?(e=r.substr(Uu,3),Uu+=3):(e=s,0===$u&&ju(fn)),e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="INT"):(Uu=t,t=s)):(Uu=t,t=s),t}function Aa(){var t,e,n,u;return t=Uu,"integer"===r.substr(Uu,7).toLowerCase()?(e=r.substr(Uu,7),Uu+=7):(e=s,0===$u&&ju(vn)),e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="INTEGER"):(Uu=t,t=s)):(Uu=t,t=s),t}function ya(){var t,e,n,u;return t=Uu,"smallint"===r.substr(Uu,8).toLowerCase()?(e=r.substr(Uu,8),Uu+=8):(e=s,0===$u&&ju(Ln)),e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="SMALLINT"):(Uu=t,t=s)):(Uu=t,t=s),t}function Ta(){var t,e,n,u;return t=Uu,"tinyint"===r.substr(Uu,7).toLowerCase()?(e=r.substr(Uu,7),Uu+=7):(e=s,0===$u&&ju(Cn)),e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="TINYINT"):(Uu=t,t=s)):(Uu=t,t=s),t}function ma(){var t,e,n,u;return t=Uu,"bigint"===r.substr(Uu,6).toLowerCase()?(e=r.substr(Uu,6),Uu+=6):(e=s,0===$u&&ju(An)),e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="BIGINT"):(Uu=t,t=s)):(Uu=t,t=s),t}function Sa(){var t,e,n,u;return t=Uu,"float"===r.substr(Uu,5).toLowerCase()?(e=r.substr(Uu,5),Uu+=5):(e=s,0===$u&&ju(Tn)),e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="FLOAT"):(Uu=t,t=s)):(Uu=t,t=s),t}function Ia(){var t,e,n,u;return t=Uu,"double"===r.substr(Uu,6).toLowerCase()?(e=r.substr(Uu,6),Uu+=6):(e=s,0===$u&&ju(mn)),e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="DOUBLE"):(Uu=t,t=s)):(Uu=t,t=s),t}function Na(){var t,e,n,u;return t=Uu,"date"===r.substr(Uu,4).toLowerCase()?(e=r.substr(Uu,4),Uu+=4):(e=s,0===$u&&ju(Sn)),e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="DATE"):(Uu=t,t=s)):(Uu=t,t=s),t}function Ra(){var t,e,n,u;return t=Uu,"datetime"===r.substr(Uu,8).toLowerCase()?(e=r.substr(Uu,8),Uu+=8):(e=s,0===$u&&ju(In)),e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="DATETIME"):(Uu=t,t=s)):(Uu=t,t=s),t}function _a(){var t,e,n,u;return t=Uu,"time"===r.substr(Uu,4).toLowerCase()?(e=r.substr(Uu,4),Uu+=4):(e=s,0===$u&&ju(Nn)),e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="TIME"):(Uu=t,t=s)):(Uu=t,t=s),t}function ga(){var t,e,n,u;return t=Uu,"timestamp"===r.substr(Uu,9).toLowerCase()?(e=r.substr(Uu,9),Uu+=9):(e=s,0===$u&&ju(Rn)),e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="TIMESTAMP"):(Uu=t,t=s)):(Uu=t,t=s),t}function Oa(){var t,e,n,u;return t=Uu,"current_timestamp"===r.substr(Uu,17).toLowerCase()?(e=r.substr(Uu,17),Uu+=17):(e=s,0===$u&&ju(Hn)),e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="CURRENT_TIMESTAMP"):(Uu=t,t=s)):(Uu=t,t=s),t}function xa(){var t;return 64===r.charCodeAt(Uu)?(t="@",Uu++):(t=s,0===$u&&ju(Kn)),t}function Ua(){var t;return (t=function(){var t;return "@@"===r.substr(Uu,2)?(t="@@",Uu+=2):(t=s,0===$u&&ju(qn)),t}())===s&&(t=xa())===s&&(t=function(){var t;return 36===r.charCodeAt(Uu)?(t="$",Uu++):(t=s,0===$u&&ju(Zn)),t}()),t}function Ma(){var t;return 61===r.charCodeAt(Uu)?(t="=",Uu++):(t=s,0===$u&&ju(_r)),t}function Da(){var t,e,n,u;return t=Uu,"add"===r.substr(Uu,3).toLowerCase()?(e=r.substr(Uu,3),Uu+=3):(e=s,0===$u&&ju(ru)),e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="ADD"):(Uu=t,t=s)):(Uu=t,t=s),t}function ka(){var t,e,n,u;return t=Uu,"column"===r.substr(Uu,6).toLowerCase()?(e=r.substr(Uu,6),Uu+=6):(e=s,0===$u&&ju(tu)),e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="COLUMN"):(Uu=t,t=s)):(Uu=t,t=s),t}function $a(){var t,e,n,u;return t=Uu,"index"===r.substr(Uu,5).toLowerCase()?(e=r.substr(Uu,5),Uu+=5):(e=s,0===$u&&ju(eu)),e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="INDEX"):(Uu=t,t=s)):(Uu=t,t=s),t}function Fa(){var t,e,n,u;return t=Uu,"key"===r.substr(Uu,3).toLowerCase()?(e=r.substr(Uu,3),Uu+=3):(e=s,0===$u&&ju(b)),e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="KEY"):(Uu=t,t=s)):(Uu=t,t=s),t}function Pa(){var t,e,n,u;return t=Uu,"comment"===r.substr(Uu,7).toLowerCase()?(e=r.substr(Uu,7),Uu+=7):(e=s,0===$u&&ju(su)),e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="COMMENT"):(Uu=t,t=s)):(Uu=t,t=s),t}function Ha(){var t,e,n,u;return t=Uu,"constraint"===r.substr(Uu,10).toLowerCase()?(e=r.substr(Uu,10),Uu+=10):(e=s,0===$u&&ju(ou)),e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="CONSTRAINT"):(Uu=t,t=s)):(Uu=t,t=s),t}function Ga(){var t;return 46===r.charCodeAt(Uu)?(t=".",Uu++):(t=s,0===$u&&ju(Ot)),t}function ja(){var t;return 44===r.charCodeAt(Uu)?(t=",",Uu++):(t=s,0===$u&&ju(du)),t}function Ya(){var t;return 42===r.charCodeAt(Uu)?(t="*",Uu++):(t=s,0===$u&&ju(jr)),t}function Ba(){var t;return 40===r.charCodeAt(Uu)?(t="(",Uu++):(t=s,0===$u&&ju(hr)),t}function Xa(){var t;return 41===r.charCodeAt(Uu)?(t=")",Uu++):(t=s,0===$u&&ju(Ar)),t}function Wa(){var t;return 59===r.charCodeAt(Uu)?(t=";",Uu++):(t=s,0===$u&&ju(pu)),t}function Va(){var t;return (t=function(){var t;return "||"===r.substr(Uu,2)?(t="||",Uu+=2):(t=s,0===$u&&ju(hu)),t}())===s&&(t=function(){var t;return "&&"===r.substr(Uu,2)?(t="&&",Uu+=2):(t=s,0===$u&&ju(Au)),t}()),t}function Ka(){var r,t;for(r=[],(t=Qa())===s&&(t=Za());t!==s;)r.push(t),(t=Qa())===s&&(t=Za());return r}function qa(){var r,t;if(r=[],(t=Qa())===s&&(t=Za()),t!==s)for(;t!==s;)r.push(t),(t=Qa())===s&&(t=Za());else r=s;return r}function Za(){var t;return (t=function(){var t,e,n,u,o,a;t=Uu,"/*"===r.substr(Uu,2)?(e="/*",Uu+=2):(e=s,0===$u&&ju(yu));if(e!==s){for(n=[],u=Uu,o=Uu,$u++,"*/"===r.substr(Uu,2)?(a="*/",Uu+=2):(a=s,0===$u&&ju(Tu)),$u--,a===s?o=void 0:(Uu=o,o=s),o!==s&&(a=Ja())!==s?u=o=[o,a]:(Uu=u,u=s);u!==s;)n.push(u),u=Uu,o=Uu,$u++,"*/"===r.substr(Uu,2)?(a="*/",Uu+=2):(a=s,0===$u&&ju(Tu)),$u--,a===s?o=void 0:(Uu=o,o=s),o!==s&&(a=Ja())!==s?u=o=[o,a]:(Uu=u,u=s);n!==s?("*/"===r.substr(Uu,2)?(u="*/",Uu+=2):(u=s,0===$u&&ju(Tu)),u!==s?t=e=[e,n,u]:(Uu=t,t=s)):(Uu=t,t=s);}else Uu=t,t=s;return t}())===s&&(t=function(){var t,e,n,u,o,a;t=Uu,"--"===r.substr(Uu,2)?(e="--",Uu+=2):(e=s,0===$u&&ju(mu));if(e!==s){for(n=[],u=Uu,o=Uu,$u++,a=ri(),$u--,a===s?o=void 0:(Uu=o,o=s),o!==s&&(a=Ja())!==s?u=o=[o,a]:(Uu=u,u=s);u!==s;)n.push(u),u=Uu,o=Uu,$u++,a=ri(),$u--,a===s?o=void 0:(Uu=o,o=s),o!==s&&(a=Ja())!==s?u=o=[o,a]:(Uu=u,u=s);n!==s?t=e=[e,n]:(Uu=t,t=s);}else Uu=t,t=s;return t}())===s&&(t=function(){var t,e,n,u,o,a;t=Uu,35===r.charCodeAt(Uu)?(e="#",Uu++):(e=s,0===$u&&ju(Su));if(e!==s){for(n=[],u=Uu,o=Uu,$u++,a=ri(),$u--,a===s?o=void 0:(Uu=o,o=s),o!==s&&(a=Ja())!==s?u=o=[o,a]:(Uu=u,u=s);u!==s;)n.push(u),u=Uu,o=Uu,$u++,a=ri(),$u--,a===s?o=void 0:(Uu=o,o=s),o!==s&&(a=Ja())!==s?u=o=[o,a]:(Uu=u,u=s);n!==s?t=e=[e,n]:(Uu=t,t=s);}else Uu=t,t=s;return t}()),t}function za(){var r,t,e,n,u,o,a;return r=Uu,(t=Pa())!==s&&Ka()!==s?((e=Ma())===s&&(e=null),e!==s&&Ka()!==s&&(n=Ao())!==s?(o=e,a=n,r=t={type:(u=t).toLowerCase(),keyword:u.toLowerCase(),symbol:o,value:a}):(Uu=r,r=s)):(Uu=r,r=s),r}function Ja(){var t;return r.length>Uu?(t=r.charAt(Uu),Uu++):(t=s,0===$u&&ju(Iu)),t}function Qa(){var t;return Nu.test(r.charAt(Uu))?(t=r.charAt(Uu),Uu++):(t=s,0===$u&&ju(Ru)),t}function ri(){var t,e;if((t=function(){var t,e;t=Uu,$u++,r.length>Uu?(e=r.charAt(Uu),Uu++):(e=s,0===$u&&ju(Iu));$u--,e===s?t=void 0:(Uu=t,t=s);return t}())===s)if(t=[],_t.test(r.charAt(Uu))?(e=r.charAt(Uu),Uu++):(e=s,0===$u&&ju(gt)),e!==s)for(;e!==s;)t.push(e),_t.test(r.charAt(Uu))?(e=r.charAt(Uu),Uu++):(e=s,0===$u&&ju(gt));else t=s;return t}function ti(){var t,e;return t=Uu,yi=[],(void 0)!==s&&Ka()!==s?((e=ei())===s&&(e=function(){var t,e;t=Uu,function(){var t;return "return"===r.substr(Uu,6).toLowerCase()?(t=r.substr(Uu,6),Uu+=6):(t=s,0===$u&&ju(zn)),t}()!==s&&Ka()!==s&&(e=ni())!==s?(t={type:"return",expr:e}):(Uu=t,t=s);return t}()),e!==s?(t={stmt:e,vars:yi}):(Uu=t,t=s)):(Uu=t,t=s),t}function ei(){var t,e,n,u;return t=Uu,(e=li())===s&&(e=fi()),e!==s&&Ka()!==s?((n=function(){var t;return ":="===r.substr(Uu,2)?(t=":=",Uu+=2):(t=s,0===$u&&ju(Jn)),t}())===s&&(n=Ma()),n!==s&&Ka()!==s&&(u=ni())!==s?(t=e={type:"assign",left:e,symbol:n,right:u}):(Uu=t,t=s)):(Uu=t,t=s),t}function ni(){var t;return (t=ls())===s&&(t=function(){var r,t,e,n,u;r=Uu,(t=li())!==s&&Ka()!==s&&(e=Ns())!==s&&Ka()!==s&&(n=li())!==s&&Ka()!==s&&(u=_s())!==s?(r=t={type:"join",ltable:t,rtable:n,op:e,on:u}):(Uu=r,r=s);return r}())===s&&(t=ui())===s&&(t=function(){var t,e;t=Uu,function(){var t;return 91===r.charCodeAt(Uu)?(t="[",Uu++):(t=s,0===$u&&ju(Lu)),t}()!==s&&Ka()!==s&&(e=ci())!==s&&Ka()!==s&&function(){var t;return 93===r.charCodeAt(Uu)?(t="]",Uu++):(t=s,0===$u&&ju(Cu)),t}()!==s?(t={type:"array",value:e}):(Uu=t,t=s);return t}()),t}function ui(){var r,t,e,n,u,o,a,i;if(r=Uu,(t=si())!==s){for(e=[],n=Uu,(u=Ka())!==s&&(o=no())!==s&&(a=Ka())!==s&&(i=si())!==s?n=u=[u,o,a,i]:(Uu=n,n=s);n!==s;)e.push(n),n=Uu,(u=Ka())!==s&&(o=no())!==s&&(a=Ka())!==s&&(i=si())!==s?n=u=[u,o,a,i]:(Uu=n,n=s);e!==s?(r=t=Or(t,e)):(Uu=r,r=s);}else Uu=r,r=s;return r}function si(){var r,t,e,n,u,o,a,i;if(r=Uu,(t=oi())!==s){for(e=[],n=Uu,(u=Ka())!==s&&(o=so())!==s&&(a=Ka())!==s&&(i=oi())!==s?n=u=[u,o,a,i]:(Uu=n,n=s);n!==s;)e.push(n),n=Uu,(u=Ka())!==s&&(o=so())!==s&&(a=Ka())!==s&&(i=oi())!==s?n=u=[u,o,a,i]:(Uu=n,n=s);e!==s?(r=t=Or(t,e)):(Uu=r,r=s);}else Uu=r,r=s;return r}function oi(){var r,t,e;return (r=Eo())===s&&(r=li())===s&&(r=ii())===s&&(r=po())===s&&(r=Uu,Ba()!==s&&Ka()!==s&&(t=ui())!==s&&Ka()!==s&&Xa()!==s?((e=t).parentheses=!0,r=e):(Uu=r,r=s)),r}function ai(){var r,t,e,n,u,o,a;return r=Uu,(t=io())!==s?(e=Uu,(n=Ka())!==s&&(u=Ga())!==s&&(o=Ka())!==s&&(a=io())!==s?e=n=[n,u,o,a]:(Uu=e,e=s),e===s&&(e=null),e!==s?(r=t=function(r,t){let e=r;return null!==t&&(e=`${r}.${t[3]}`),e}(t,e)):(Uu=r,r=s)):(Uu=r,r=s),r}function ii(){var r,t,e;return r=Uu,(t=ai())!==s&&Ka()!==s&&Ba()!==s&&Ka()!==s?((e=ci())===s&&(e=null),e!==s&&Ka()!==s&&Xa()!==s?(r=t={type:"function",name:t,args:{type:"expr_list",value:e}}):(Uu=r,r=s)):(Uu=r,r=s),r===s&&(r=Uu,(t=ai())!==s&&(t=function(r){return {type:"function",name:r,args:null}}(t)),r=t),r}function ci(){var r,t,e,n,u,o,a,i;if(r=Uu,(t=oi())!==s){for(e=[],n=Uu,(u=Ka())!==s&&(o=ja())!==s&&(a=Ka())!==s&&(i=oi())!==s?n=u=[u,o,a,i]:(Uu=n,n=s);n!==s;)e.push(n),n=Uu,(u=Ka())!==s&&(o=ja())!==s&&(a=Ka())!==s&&(i=oi())!==s?n=u=[u,o,a,i]:(Uu=n,n=s);e!==s?(r=t=c(t,e)):(Uu=r,r=s);}else Uu=r,r=s;return r}function li(){var r,t,e,n,u;return r=Uu,(t=Ua())!==s&&(e=fi())!==s?(n=t,u=e,r=t={type:"var",...u,prefix:n}):(Uu=r,r=s),r}function fi(){var t,e,n,u,o;return t=Uu,(e=bo())!==s&&(n=function(){var e,n,u,o;e=[],n=Uu,46===r.charCodeAt(Uu)?(u=".",Uu++):(u=s,0===$u&&ju(Ot));u!==s&&(o=bo())!==s?n=u=[u,o]:(Uu=n,n=s);for(;n!==s;)e.push(n),n=Uu,46===r.charCodeAt(Uu)?(u=".",Uu++):(u=s,0===$u&&ju(Ot)),u!==s&&(o=bo())!==s?n=u=[u,o]:(Uu=n,n=s);e!==s&&(e=function(r){const t=[];for(let e=0;e<r.length;e++)t.push(r[e][1]);return t}(e));return e}())!==s?(u=e,o=n,yi.push(u),t=e={type:"var",name:u,members:o,prefix:null}):(Uu=t,t=s),t}function bi(){var t;return (t=function(){var t,e,n,u;t=Uu,(e=La())===s&&(e=Ca());if(e!==s)if(Ka()!==s)if(Ba()!==s)if(Ka()!==s){if(n=[],xt.test(r.charAt(Uu))?(u=r.charAt(Uu),Uu++):(u=s,0===$u&&ju(Ut)),u!==s)for(;u!==s;)n.push(u),xt.test(r.charAt(Uu))?(u=r.charAt(Uu),Uu++):(u=s,0===$u&&ju(Ut));else n=s;n!==s&&(u=Ka())!==s&&Xa()!==s?(e={dataType:e,length:parseInt(n.join(""),10)},t=e):(Uu=t,t=s);}else Uu=t,t=s;else Uu=t,t=s;else Uu=t,t=s;else Uu=t,t=s;t===s&&(t=Uu,(e=La())!==s&&(e=gu(e)),(t=e)===s&&(t=Uu,(e=Ca())!==s&&(e=gu(e)),t=e));return t}())===s&&(t=function(){var t,e,n,u,o,a,i,c,l,f,b,v;t=Uu,(e=pa())===s&&(e=wa())===s&&(e=ha())===s&&(e=Aa())===s&&(e=ya())===s&&(e=Ta())===s&&(e=ma())===s&&(e=Sa())===s&&(e=Ia())===s&&(e=function(){var t,e,n,u;return t=Uu,"bit"===r.substr(Uu,3).toLowerCase()?(e=r.substr(Uu,3),Uu+=3):(e=s,0===$u&&ju(nn)),e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="BIT"):(Uu=t,t=s)):(Uu=t,t=s),t}());if(e!==s)if((n=Ka())!==s)if((u=Ba())!==s)if((o=Ka())!==s){if(a=[],xt.test(r.charAt(Uu))?(i=r.charAt(Uu),Uu++):(i=s,0===$u&&ju(Ut)),i!==s)for(;i!==s;)a.push(i),xt.test(r.charAt(Uu))?(i=r.charAt(Uu),Uu++):(i=s,0===$u&&ju(Ut));else a=s;if(a!==s)if((i=Ka())!==s){if(c=Uu,(l=ja())!==s)if((f=Ka())!==s){if(b=[],xt.test(r.charAt(Uu))?(v=r.charAt(Uu),Uu++):(v=s,0===$u&&ju(Ut)),v!==s)for(;v!==s;)b.push(v),xt.test(r.charAt(Uu))?(v=r.charAt(Uu),Uu++):(v=s,0===$u&&ju(Ut));else b=s;b!==s?c=l=[l,f,b]:(Uu=c,c=s);}else Uu=c,c=s;else Uu=c,c=s;c===s&&(c=null),c!==s&&(l=Ka())!==s&&(f=Xa())!==s&&(b=Ka())!==s?((v=vi())===s&&(v=null),v!==s?(d=c,L=v,e={dataType:e,length:parseInt(a.join(""),10),scale:d&&parseInt(d[2].join(""),10),parentheses:!0,suffix:L},t=e):(Uu=t,t=s)):(Uu=t,t=s);}else Uu=t,t=s;else Uu=t,t=s;}else Uu=t,t=s;else Uu=t,t=s;else Uu=t,t=s;else Uu=t,t=s;var d,L;if(t===s){if(t=Uu,(e=pa())===s&&(e=wa())===s&&(e=ha())===s&&(e=Aa())===s&&(e=ya())===s&&(e=Ta())===s&&(e=ma())===s&&(e=Sa())===s&&(e=Ia()),e!==s){if(n=[],xt.test(r.charAt(Uu))?(u=r.charAt(Uu),Uu++):(u=s,0===$u&&ju(Ut)),u!==s)for(;u!==s;)n.push(u),xt.test(r.charAt(Uu))?(u=r.charAt(Uu),Uu++):(u=s,0===$u&&ju(Ut));else n=s;n!==s&&(u=Ka())!==s?((o=vi())===s&&(o=null),o!==s?(e=function(r,t,e){return {dataType:r,length:parseInt(t.join(""),10),suffix:e}}(e,n,o),t=e):(Uu=t,t=s)):(Uu=t,t=s);}else Uu=t,t=s;t===s&&(t=Uu,(e=pa())===s&&(e=wa())===s&&(e=ha())===s&&(e=Aa())===s&&(e=ya())===s&&(e=Ta())===s&&(e=ma())===s&&(e=Sa())===s&&(e=Ia()),e!==s&&(n=Ka())!==s?((u=vi())===s&&(u=null),u!==s&&(o=Ka())!==s?(e=function(r,t){return {dataType:r,suffix:t}}(e,u),t=e):(Uu=t,t=s)):(Uu=t,t=s));}return t}())===s&&(t=function(){var t,e,n,u;t=Uu,(e=Na())===s&&(e=Ra())===s&&(e=_a())===s&&(e=ga());e!==s&&Ka()!==s&&Ba()!==s&&Ka()!==s?(Ou.test(r.charAt(Uu))?(n=r.charAt(Uu),Uu++):(n=s,0===$u&&ju(xu)),n!==s&&Ka()!==s&&Xa()!==s&&Ka()!==s?((u=vi())===s&&(u=null),u!==s?(e={dataType:e,length:parseInt(n,10)},t=e):(Uu=t,t=s)):(Uu=t,t=s)):(Uu=t,t=s);t===s&&(t=Uu,(e=Na())===s&&(e=Ra())===s&&(e=_a())===s&&(e=ga()),e!==s&&(e=gu(e)),t=e);return t}())===s&&(t=function(){var e;(e=function(){var t,e,n,u;return t=Uu,"json"===r.substr(Uu,4).toLowerCase()?(e=r.substr(Uu,4),Uu+=4):(e=s,0===$u&&ju(dn)),e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="JSON"):(Uu=t,t=s)):(Uu=t,t=s),t}())!==s&&(e=gu(e));return e}())===s&&(t=function(){var e;(e=function(){var t,e,n,u;return t=Uu,"tinytext"===r.substr(Uu,8).toLowerCase()?(e=r.substr(Uu,8),Uu+=8):(e=s,0===$u&&ju(pn)),e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="TINYTEXT"):(Uu=t,t=s)):(Uu=t,t=s),t}())===s&&(e=function(){var t,e,n,u;return t=Uu,"text"===r.substr(Uu,4).toLowerCase()?(e=r.substr(Uu,4),Uu+=4):(e=s,0===$u&&ju(wn)),e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="TEXT"):(Uu=t,t=s)):(Uu=t,t=s),t}())===s&&(e=function(){var t,e,n,u;return t=Uu,"mediumtext"===r.substr(Uu,10).toLowerCase()?(e=r.substr(Uu,10),Uu+=10):(e=s,0===$u&&ju(En)),e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="MEDIUMTEXT"):(Uu=t,t=s)):(Uu=t,t=s),t}())===s&&(e=function(){var t,e,n,u;return t=Uu,"longtext"===r.substr(Uu,8).toLowerCase()?(e=r.substr(Uu,8),Uu+=8):(e=s,0===$u&&ju(hn)),e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="LONGTEXT"):(Uu=t,t=s)):(Uu=t,t=s),t}());e!==s&&(e={dataType:e});return e}())===s&&(t=function(){var t,e,n;t=Uu,(e=function(){var t,e,n,u;return t=Uu,"enum"===r.substr(Uu,4).toLowerCase()?(e=r.substr(Uu,4),Uu+=4):(e=s,0===$u&&ju(yn)),e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="ENUM"):(Uu=t,t=s)):(Uu=t,t=s),t}())!==s&&Ka()!==s&&(n=Gs())!==s?(u=e,(o=n).parentheses=!0,t=e={dataType:u,expr:o}):(Uu=t,t=s);var u,o;return t}())===s&&(t=function(){var e;"boolean"===r.substr(Uu,7).toLowerCase()?(e=r.substr(Uu,7),Uu+=7):(e=s,0===$u&&ju(_u));e!==s&&(e={dataType:"BOOLEAN"});return e}()),t}function vi(){var t,e,n;return t=Uu,(e=Ea())===s&&(e=null),e!==s&&Ka()!==s?((n=function(){var t,e,n,u;return t=Uu,"zerofill"===r.substr(Uu,8).toLowerCase()?(e=r.substr(Uu,8),Uu+=8):(e=s,0===$u&&ju(bn)),e!==s?(n=Uu,$u++,u=vo(),$u--,u===s?n=void 0:(Uu=n,n=s),n!==s?(t=e="ZEROFILL"):(Uu=t,t=s)):(Uu=t,t=s),t}())===s&&(n=null),n!==s?(t=e=function(r,t){const e=[];return r&&e.push(r),t&&e.push(t),e}(e,n)):(Uu=t,t=s)):(Uu=t,t=s),t}const di={ALTER:!0,ALL:!0,ADD:!0,AND:!0,AS:!0,ASC:!0,BETWEEN:!0,BY:!0,CALL:!0,CASE:!0,CREATE:!0,CONTAINS:!0,CURRENT_DATE:!0,CURRENT_TIME:!0,CURRENT_TIMESTAMP:!0,CURRENT_USER:!0,DELETE:!0,DESC:!0,DISTINCT:!0,DROP:!0,ELSE:!0,END:!0,EXISTS:!0,EXPLAIN:!0,FALSE:!0,FROM:!0,FULL:!0,GROUP:!0,HAVING:!0,IN:!0,INNER:!0,INSERT:!0,INTO:!0,IS:!0,JOIN:!0,JSON:!0,KEY:!0,LEFT:!0,LIKE:!0,LIMIT:!0,LOW_PRIORITY:!0,NOT:!0,NULL:!0,ON:!0,OR:!0,ORDER:!0,OUTER:!0,RECURSIVE:!0,RENAME:!0,READ:!0,RIGHT:!0,SELECT:!0,SESSION_USER:!0,SET:!0,SHOW:!0,SYSTEM_USER:!0,TABLE:!0,THEN:!0,TRUE:!0,TRUNCATE:!0,UNION:!0,UPDATE:!0,USING:!0,VALUES:!0,WITH:!0,WHEN:!0,WHERE:!0,WRITE:!0,GLOBAL:!0,SESSION:!0,LOCAL:!0,PERSIST:!0,PERSIST_ONLY:!0};function Li(r,t){return {type:"unary_expr",operator:r,expr:t}}function Ci(r,t,e){return {type:"binary_expr",operator:r,left:t,right:e}}function pi(r){const t=n(Number.MAX_SAFE_INTEGER);return !(n(r)<t)}function wi(r,t,e=3){const n=[r];for(let r=0;r<t.length;r++)n.push(t[r][e]);return n}function Ei(r,t){let e=r;for(let r=0;r<t.length;r++)e=Ci(t[r][1],e,t[r][3]);return e}function hi(r){const t=Si[r];return t||(r||null)}function Ai(r){const t=new Set;for(let e of r.keys()){const r=e.split("::");if(!r){t.add(e);break}r&&r[1]&&(r[1]=hi(r[1])),t.add(r.join("::"));}return Array.from(t)}let yi=[];const Ti=new Set,mi=new Set,Si={};if((e=a())!==s&&Uu===r.length)return e;throw e!==s&&Uu<r.length&&ju({type:"end"}),Yu(ku,Du<r.length?r.charAt(Du):null,Du<r.length?Gu(Du,Du+1):Gu(Du,Du))}};},function(r,t,e){var n=e(0);function u(r,t,e,n){this.message=r,this.expected=t,this.found=e,this.location=n,this.name="SyntaxError","function"==typeof Error.captureStackTrace&&Error.captureStackTrace(this,u);}!function(r,t){function e(){this.constructor=r;}e.prototype=t.prototype,r.prototype=new e;}(u,Error),u.buildMessage=function(r,t){var e={literal:function(r){return '"'+u(r.text)+'"'},class:function(r){var t,e="";for(t=0;t<r.parts.length;t++)e+=r.parts[t]instanceof Array?s(r.parts[t][0])+"-"+s(r.parts[t][1]):s(r.parts[t]);return "["+(r.inverted?"^":"")+e+"]"},any:function(r){return "any character"},end:function(r){return "end of input"},other:function(r){return r.description}};function n(r){return r.charCodeAt(0).toString(16).toUpperCase()}function u(r){return r.replace(/\\/g,"\\\\").replace(/"/g,'\\"').replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(r){return "\\x0"+n(r)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(r){return "\\x"+n(r)}))}function s(r){return r.replace(/\\/g,"\\\\").replace(/\]/g,"\\]").replace(/\^/g,"\\^").replace(/-/g,"\\-").replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(r){return "\\x0"+n(r)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(r){return "\\x"+n(r)}))}return "Expected "+function(r){var t,n,u,s=new Array(r.length);for(t=0;t<r.length;t++)s[t]=(u=r[t],e[u.type](u));if(s.sort(),s.length>0){for(t=1,n=1;t<s.length;t++)s[t-1]!==s[t]&&(s[n]=s[t],n++);s.length=n;}switch(s.length){case 1:return s[0];case 2:return s[0]+" or "+s[1];default:return s.slice(0,-1).join(", ")+", or "+s[s.length-1]}}(r)+" but "+function(r){return r?'"'+u(r)+'"':"end of input"}(t)+" found."},r.exports={SyntaxError:u,parse:function(r,t){t=void 0!==t?t:{};var e,s={},o={start:Pu},a=Pu,i=function(r,t){return li(r,t,1)},c=function(r,t){return li(r,t)},l=Uu("AUTO_INCREMENT",!0),f=Uu("UNIQUE",!0),b=Uu("KEY",!0),v=Uu("PRIMARY",!0),d=Uu("COLUMN_FORMAT",!0),L=Uu("FIXED",!0),C=Uu("DYNAMIC",!0),p=Uu("DEFAULT",!0),w=Uu("STORAGE",!0),E=Uu("DISK",!0),h=Uu("MEMORY",!0),A=Uu("ALGORITHM",!0),y=Uu("INSTANT",!0),T=Uu("INPLACE",!0),m=Uu("COPY",!0),S=Uu("LOCK",!0),I=Uu("NONE",!0),N=Uu("SHARED",!0),R=Uu("EXCLUSIVE",!0),_=Uu("PRIMARY KEY",!0),g=Uu("FOREIGN KEY",!0),O=Uu("CHECK",!0),x=Uu("ENFORCED",!0),U=Uu("MATCH FULL",!0),M=Uu("MATCH PARTIAL",!0),D=Uu("MATCH SIMPLE",!0),k=Uu("ON DELETE",!0),$=Uu("ON UPDATE",!0),F=Uu("RESTRICT",!0),P=Uu("CASCADE",!0),H=Uu("SET NULL",!0),G=Uu("NO ACTION",!0),j=Uu("SET DEFAULT",!0),Y=Uu("CHARACTER",!0),B=Uu("SET",!0),X=Uu("CHARSET",!0),W=Uu("COLLATE",!0),V=Uu("AVG_ROW_LENGTH",!0),K=Uu("KEY_BLOCK_SIZE",!0),q=Uu("MAX_ROWS",!0),Z=Uu("MIN_ROWS",!0),z=Uu("STATS_SAMPLE_PAGES",!0),J=Uu("CONNECTION",!0),Q=Uu("COMPRESSION",!0),rr=Uu("'",!1),tr=Uu("ZLIB",!0),er=Uu("LZ4",!0),nr=Uu("ENGINE",!0),ur=Uu("BINARY",!0),sr=Uu("MASTER",!0),or=Uu("LOGS",!0),ar=Uu("BINLOG",!0),ir=Uu("EVENTS",!0),cr=Uu("COLLATION",!0),lr=Uu("GRANTS",!0),fr=Uu("FOR",!0),br=function(r,t){return li(r,t)},vr=Uu("READ",!0),dr=Uu("LOCAL",!0),Lr=Uu("LOW_PRIORITY",!0),Cr=Uu("WRITE",!0),pr=Uu("(",!1),wr=Uu(")",!1),Er=Uu("BTREE",!0),hr=Uu("HASH",!0),Ar=Uu("WITH",!0),yr=Uu("PARSER",!0),Tr=Uu("VISIBLE",!0),mr=Uu("INVISIBLE",!0),Sr=function(r,t){return t.unshift(r),t.forEach(r=>{const{table:t,as:e}=r;pi[t]=t,e&&(pi[e]=t),function(r){const t=vi(r);r.clear(),t.forEach(t=>r.add(t));}(Ci);}),t},Ir=Uu("=",!1),Nr=Uu("DUPLICATE",!0),Rr=function(r,t){return fi(r,t)},_r=Uu("!",!1),gr=function(r){return r[0]+" "+r[2]},Or=Uu(">=",!1),xr=Uu(">",!1),Ur=Uu("<=",!1),Mr=Uu("<>",!1),Dr=Uu("<",!1),kr=Uu("!=",!1),$r=Uu("+",!1),Fr=Uu("-",!1),Pr=Uu("*",!1),Hr=Uu("/",!1),Gr=Uu("%",!1),jr=function(r){return !0===oi[r.toUpperCase()]},Yr=Uu('"',!1),Br=/^[^"]/,Xr=Mu(['"'],!0,!1),Wr=function(r){return r.join("")},Vr=/^[^']/,Kr=Mu(["'"],!0,!1),qr=Uu("`",!1),Zr=/^[^`]/,zr=Mu(["`"],!0,!1),Jr=function(r,t){return r+t.join("")},Qr=/^[A-Za-z_]/,rt=Mu([["A","Z"],["a","z"],"_"],!1,!1),tt=/^[A-Za-z0-9_]/,et=Mu([["A","Z"],["a","z"],["0","9"],"_"],!1,!1),nt=/^[A-Za-z0-9_:]/,ut=Mu([["A","Z"],["a","z"],["0","9"],"_",":"],!1,!1),st=Uu(":",!1),ot=function(r,t){return {type:r.toLowerCase(),value:t[1].join("")}},at=Uu("ON UPDATE CURRENT_TIMESTAMP",!0),it=/^[^"\\\0-\x1F\x7F]/,ct=Mu(['"',"\\",["\0",""],""],!0,!1),lt=/^[^'\\]/,ft=Mu(["'","\\"],!0,!1),bt=Uu("\\'",!1),vt=Uu('\\"',!1),dt=Uu("\\\\",!1),Lt=Uu("\\/",!1),Ct=Uu("\\b",!1),pt=Uu("\\f",!1),wt=Uu("\\n",!1),Et=Uu("\\r",!1),ht=Uu("\\t",!1),At=Uu("\\u",!1),yt=Uu("\\",!1),Tt=/^[\n\r]/,mt=Mu(["\n","\r"],!1,!1),St=Uu(".",!1),It=/^[0-9]/,Nt=Mu([["0","9"]],!1,!1),Rt=/^[0-9a-fA-F]/,_t=Mu([["0","9"],["a","f"],["A","F"]],!1,!1),gt=/^[eE]/,Ot=Mu(["e","E"],!1,!1),xt=/^[+\-]/,Ut=Mu(["+","-"],!1,!1),Mt=Uu("NULL",!0),Dt=Uu("NOT NULL",!0),kt=Uu("TRUE",!0),$t=Uu("TO",!0),Ft=Uu("FALSE",!0),Pt=Uu("SHOW",!0),Ht=Uu("DROP",!0),Gt=Uu("USE",!0),jt=Uu("ALTER",!0),Yt=Uu("SELECT",!0),Bt=Uu("UPDATE",!0),Xt=Uu("CREATE",!0),Wt=Uu("TEMPORARY",!0),Vt=Uu("IF NOT EXISTS",!0),Kt=Uu("DELETE",!0),qt=Uu("INSERT",!0),Zt=Uu("RECURSIVE",!1),zt=Uu("REPLACE",!0),Jt=Uu("RENAME",!0),Qt=Uu("IGNORE",!0),re=(Uu("PARTITION",!0)),te=Uu("INTO",!0),ee=Uu("FROM",!0),ne=Uu("UNLOCK",!0),ue=Uu("AS",!0),se=Uu("TABLE",!0),oe=Uu("TABLES",!0),ae=Uu("DATABASE",!0),ie=Uu("SCHEME",!0),ce=Uu("ON",!0),le=Uu("LEFT",!0),fe=Uu("RIGHT",!0),be=Uu("FULL",!0),ve=Uu("INNER",!0),de=Uu("JOIN",!0),Le=Uu("OUTER",!0),Ce=Uu("OVER",!0),pe=Uu("UNION",!0),we=Uu("VALUES",!0),Ee=Uu("USING",!0),he=Uu("WHERE",!0),Ae=Uu("GROUP",!0),ye=Uu("BY",!0),Te=Uu("ORDER",!0),me=Uu("HAVING",!0),Se=Uu("LIMIT",!0),Ie=Uu("OFFSET",!0),Ne=Uu("ASC",!0),Re=Uu("DESC",!0),_e=Uu("DESCRIBE",!0),ge=Uu("ALL",!0),Oe=Uu("DISTINCT",!0),xe=Uu("BETWEEN",!0),Ue=Uu("IN",!0),Me=Uu("IS",!0),De=Uu("LIKE",!0),ke=Uu("RLIKE",!0),$e=Uu("REGEXP",!0),Fe=Uu("EXISTS",!0),Pe=Uu("NOT",!0),He=Uu("AND",!0),Ge=Uu("OR",!0),je=Uu("COUNT",!0),Ye=Uu("GROUP_CONCAT",!0),Be=Uu("MAX",!0),Xe=Uu("MIN",!0),We=Uu("SUM",!0),Ve=Uu("AVG",!0),Ke=Uu("CALL",!0),qe=Uu("CASE",!0),Ze=Uu("WHEN",!0),ze=Uu("THEN",!0),Je=Uu("ELSE",!0),Qe=Uu("END",!0),rn=Uu("CAST",!0),tn=Uu("CHAR",!0),en=Uu("VARCHAR",!0),nn=Uu("NUMERIC",!0),un=Uu("DECIMAL",!0),sn=Uu("SIGNED",!0),on=Uu("UNSIGNED",!0),an=Uu("INT",!0),cn=Uu("ZEROFILL",!0),ln=Uu("INTEGER",!0),fn=Uu("JSON",!0),bn=Uu("SMALLINT",!0),vn=Uu("TINYINT",!0),dn=Uu("TINYTEXT",!0),Ln=Uu("TEXT",!0),Cn=Uu("MEDIUMTEXT",!0),pn=Uu("LONGTEXT",!0),wn=Uu("BIGINT",!0),En=Uu("ENUM",!0),hn=Uu("FLOAT",!0),An=Uu("DOUBLE",!0),yn=Uu("DATE",!0),Tn=Uu("DATETIME",!0),mn=Uu("TIME",!0),Sn=Uu("TIMESTAMP",!0),In=Uu("TRUNCATE",!0),Nn=Uu("USER",!0),Rn=Uu("CURRENT_DATE",!0),_n=(Uu("INTERVAL",!0)),gn=Uu("YEAR",!0),On=Uu("MONTH",!0),xn=Uu("DAY",!0),Un=Uu("HOUR",!0),Mn=Uu("MINUTE",!0),Dn=Uu("SECOND",!0),kn=Uu("CURRENT_TIME",!0),$n=Uu("CURRENT_TIMESTAMP",!0),Fn=Uu("CURRENT_USER",!0),Pn=Uu("SESSION_USER",!0),Hn=Uu("SYSTEM_USER",!0),Gn=Uu("GLOBAL",!0),jn=Uu("SESSION",!0),Yn=Uu("PERSIST",!0),Bn=Uu("PERSIST_ONLY",!0),Xn=Uu("@",!1),Wn=Uu("@@",!1),Vn=Uu("$",!1),Kn=Uu("return",!0),qn=Uu(":=",!1),Zn=Uu("DUAL",!0),zn=Uu("ADD",!0),Jn=Uu("COLUMN",!0),Qn=Uu("INDEX",!0),ru=Uu("FULLTEXT",!0),tu=Uu("SPATIAL",!0),eu=Uu("COMMENT",!0),nu=Uu("CONSTRAINT",!0),uu=Uu("REFERENCES",!0),su=Uu("SQL_CALC_FOUND_ROWS",!0),ou=Uu("SQL_CACHE",!0),au=Uu("SQL_NO_CACHE",!0),iu=Uu("SQL_SMALL_RESULT",!0),cu=Uu("SQL_BIG_RESULT",!0),lu=Uu("SQL_BUFFER_RESULT",!0),fu=Uu(",",!1),bu=Uu("[",!1),vu=Uu("]",!1),du=Uu(";",!1),Lu=Uu("||",!1),Cu=Uu("&&",!1),pu=Uu("/*",!1),wu=Uu("*/",!1),Eu=Uu("--",!1),hu=Uu("#",!1),Au={type:"any"},yu=/^[ \t\n\r]/,Tu=Mu([" ","\t","\n","\r"],!1,!1),mu=Uu("boolean",!0),Su=function(r){return {dataType:r}},Iu=/^[0-6]/,Nu=Mu([["0","6"]],!1,!1),Ru=0,_u=[{line:1,column:1}],gu=0,Ou=[],xu=0;if("startRule"in t){if(!(t.startRule in o))throw new Error("Can't start parsing from rule \""+t.startRule+'".');a=o[t.startRule];}function Uu(r,t){return {type:"literal",text:r,ignoreCase:t}}function Mu(r,t,e){return {type:"class",parts:r,inverted:t,ignoreCase:e}}function Du(t){var e,n=_u[t];if(n)return n;for(e=t-1;!_u[e];)e--;for(n={line:(n=_u[e]).line,column:n.column};e<t;)10===r.charCodeAt(e)?(n.line++,n.column=1):n.column++,e++;return _u[t]=n,n}function ku(r,t){var e=Du(r),n=Du(t);return {start:{offset:r,line:e.line,column:e.column},end:{offset:t,line:n.line,column:n.column}}}function $u(r){Ru<gu||(Ru>gu&&(gu=Ru,Ou=[]),Ou.push(r));}function Fu(r,t,e){return new u(u.buildMessage(r,t),r,t,e)}function Pu(){var r,t;return r=Ru,Ha()!==s?((t=function(){var r,t,e,n,u,o,a,i;if(r=Ru,(t=Gu())!==s){if(e=[],n=Ru,(u=Ha())!==s&&(o=Fa())!==s&&(a=Ha())!==s&&(i=Gu())!==s?n=u=[u,o,a,i]:(Ru=n,n=s),n!==s)for(;n!==s;)e.push(n),n=Ru,(u=Ha())!==s&&(o=Fa())!==s&&(a=Ha())!==s&&(i=Gu())!==s?n=u=[u,o,a,i]:(Ru=n,n=s);else e=s;e!==s?(t=function(r,t){const e=[r&&r.ast||r];for(let r=0;r<t.length;r++)t[r][3]&&0!==t[r][3].length&&e.push(t[r][3]&&t[r][3].ast||t[r][3]);return {tableList:Array.from(Li),columnList:vi(Ci),ast:e}}(t,e),r=t):(Ru=r,r=s);}else Ru=r,r=s;return r}())===s&&(t=Hu())===s&&(t=Gu()),t!==s?(r=t):(Ru=r,r=s)):(Ru=r,r=s),r}function Hu(){var t;return (t=function(){var r,t,e,n,u,o;r=Ru,(t=Ro())!==s&&Ha()!==s&&(e=Po())!==s&&Ha()!==s&&(n=ws())!==s?(a=t,c=e,(l=n)&&l.forEach(r=>Li.add(`${a}::${r.db}::${r.table}`)),t={tableList:Array.from(Li),columnList:vi(Ci),ast:{type:a.toLowerCase(),keyword:c.toLowerCase(),name:l}},r=t):(Ru=r,r=s);var a,c,l;r===s&&(r=Ru,(t=Ro())!==s&&Ha()!==s&&(e=ga())!==s&&Ha()!==s&&(n=to())!==s&&Ha()!==s&&Go()!==s&&Ha()!==s&&(u=ys())!==s&&Ha()!==s?((o=function(){var r,t,e,n,u,o;r=Ru,(t=Ku())===s&&(t=qu());if(t!==s){for(e=[],n=Ru,(u=Ha())!==s?((o=Ku())===s&&(o=qu()),o!==s?n=u=[u,o]:(Ru=n,n=s)):(Ru=n,n=s);n!==s;)e.push(n),n=Ru,(u=Ha())!==s?((o=Ku())===s&&(o=qu()),o!==s?n=u=[u,o]:(Ru=n,n=s)):(Ru=n,n=s);e!==s?(t=i(t,e),r=t):(Ru=r,r=s);}else Ru=r,r=s;return r}())===s&&(o=null),o!==s&&Ha()!==s?(t=function(r,t,e,n,u){return {tableList:Array.from(Li),columnList:vi(Ci),ast:{type:r.toLowerCase(),keyword:t.toLowerCase(),name:e,table:n,options:u}}}(t,e,n,u,o),r=t):(Ru=r,r=s)):(Ru=r,r=s));return r}())===s&&(t=function(){var t;(t=function(){var t,e,n,u,o,a,i,l,f,b;t=Ru,(e=go())!==s&&Ha()!==s?((n=Oo())===s&&(n=null),n!==s&&Ha()!==s&&Po()!==s&&Ha()!==s?((u=xo())===s&&(u=null),u!==s&&Ha()!==s&&(o=ws())!==s&&Ha()!==s&&(a=function(){var r,t,e,n,u,o,a,i,l;if(r=Ru,(t=ka())!==s)if(Ha()!==s)if((e=Yu())!==s){for(n=[],u=Ru,(o=Ha())!==s&&(a=Ma())!==s&&(i=Ha())!==s&&(l=Yu())!==s?u=o=[o,a,i,l]:(Ru=u,u=s);u!==s;)n.push(u),u=Ru,(o=Ha())!==s&&(a=Ma())!==s&&(i=Ha())!==s&&(l=Yu())!==s?u=o=[o,a,i,l]:(Ru=u,u=s);n!==s&&(u=Ha())!==s&&(o=$a())!==s?(t=c(e,n),r=t):(Ru=r,r=s);}else Ru=r,r=s;else Ru=r,r=s;else Ru=r,r=s;return r}())!==s&&Ha()!==s?((i=function(){var r,t,e,n,u,o,a,i;if(r=Ru,(t=es())!==s){for(e=[],n=Ru,(u=Ha())!==s?((o=Ma())===s&&(o=null),o!==s&&(a=Ha())!==s&&(i=es())!==s?n=u=[u,o,a,i]:(Ru=n,n=s)):(Ru=n,n=s);n!==s;)e.push(n),n=Ru,(u=Ha())!==s?((o=Ma())===s&&(o=null),o!==s&&(a=Ha())!==s&&(i=es())!==s?n=u=[u,o,a,i]:(Ru=n,n=s)):(Ru=n,n=s);e!==s?(t=li(t,e),r=t):(Ru=r,r=s);}else Ru=r,r=s;return r}())===s&&(i=null),i!==s&&Ha()!==s?((l=function(){var t,e,n,u;t=Ru,"ignore"===r.substr(Ru,6).toLowerCase()?(e=r.substr(Ru,6),Ru+=6):(e=s,0===xu&&$u(Qt));e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s);return t}())===s&&(l=Uo()),l===s&&(l=null),l!==s&&Ha()!==s?((f=Fo())===s&&(f=null),f!==s&&Ha()!==s?((b=ju())===s&&(b=null),b!==s?(v=e,d=n,L=u,p=a,w=i,E=l,h=f,A=b,(C=o)&&C.forEach(r=>Li.add(`create::${r.db}::${r.table}`)),e={tableList:Array.from(Li),columnList:vi(Ci),ast:{type:v[0].toLowerCase(),keyword:"table",temporary:d&&d[0].toLowerCase(),if_not_exists:L&&L[0].toLowerCase(),table:C,ignore_replace:E&&E[0].toLowerCase(),as:h&&h[0].toLowerCase(),query_expr:A&&A.ast,create_definitions:p,table_options:w}},t=e):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s);var v,d,L,C,p,w,E,h,A;t===s&&(t=Ru,(e=go())!==s&&Ha()!==s?((n=Oo())===s&&(n=null),n!==s&&Ha()!==s&&Po()!==s&&Ha()!==s?((u=xo())===s&&(u=null),u!==s&&Ha()!==s&&(o=ws())!==s&&Ha()!==s&&(a=function r(){var t,e;(t=function(){var r,t;r=Ru,ta()!==s&&Ha()!==s&&(t=ws())!==s?(r={type:"like",table:t}):(Ru=r,r=s);return r}())===s&&(t=Ru,ka()!==s&&Ha()!==s&&(e=r())!==s&&Ha()!==s&&$a()!==s?((n=e).parentheses=!0,t=n):(Ru=t,t=s));var n;return t}())!==s?(e=function(r,t,e,n,u){return n&&n.forEach(r=>Li.add(`create::${r.db}::${r.table}`)),{tableList:Array.from(Li),columnList:vi(Ci),ast:{type:r[0].toLowerCase(),keyword:"table",temporary:t&&t[0].toLowerCase(),if_not_exists:e&&e[0].toLowerCase(),table:n,like:u}}}(e,n,u,o,a),t=e):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s));return t}())===s&&(t=function(){var t,e,n,u,o,a;t=Ru,(e=go())!==s&&Ha()!==s?((n=function(){var t,e,n,u;t=Ru,"database"===r.substr(Ru,8).toLowerCase()?(e=r.substr(Ru,8),Ru+=8):(e=s,0===xu&&$u(ae));e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="DATABASE"):(Ru=t,t=s)):(Ru=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=Ru,"scheme"===r.substr(Ru,6).toLowerCase()?(e=r.substr(Ru,6),Ru+=6):(e=s,0===xu&&$u(ie));e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="SCHEME"):(Ru=t,t=s)):(Ru=t,t=s);return t}()),n!==s&&Ha()!==s?((u=xo())===s&&(u=null),u!==s&&Ha()!==s&&(o=so())!==s&&Ha()!==s?((a=function(){var r,t,e,n,u,o;if(r=Ru,(t=ts())!==s){for(e=[],n=Ru,(u=Ha())!==s&&(o=ts())!==s?n=u=[u,o]:(Ru=n,n=s);n!==s;)e.push(n),n=Ru,(u=Ha())!==s&&(o=ts())!==s?n=u=[u,o]:(Ru=n,n=s);e!==s?(t=i(t,e),r=t):(Ru=r,r=s);}else Ru=r,r=s;return r}())===s&&(a=null),a!==s?(c=e,l=u,f=o,b=a,e={tableList:Array.from(Li),columnList:vi(Ci),ast:{type:c[0].toLowerCase(),keyword:"database",if_not_exists:l&&l[0].toLowerCase(),database:f,create_definitions:b}},t=e):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s);var c,l,f,b;return t}());return t}())===s&&(t=function(){var t,e,n,u;t=Ru,(e=function(){var t,e,n,u;t=Ru,"truncate"===r.substr(Ru,8).toLowerCase()?(e=r.substr(Ru,8),Ru+=8):(e=s,0===xu&&$u(In));e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="TRUNCATE"):(Ru=t,t=s)):(Ru=t,t=s);return t}())!==s&&Ha()!==s?((n=Po())===s&&(n=null),n!==s&&Ha()!==s&&(u=ws())!==s?(o=e,a=n,(i=u)&&i.forEach(r=>Li.add(`${o}::${r.db}::${r.table}`)),e={tableList:Array.from(Li),columnList:vi(Ci),ast:{type:o.toLowerCase(),keyword:a&&a.toLowerCase()||"table",name:i}},t=e):(Ru=t,t=s)):(Ru=t,t=s);var o,a,i;return t}())===s&&(t=function(){var r,t,e;r=Ru,(t=Mo())!==s&&Ha()!==s&&Po()!==s&&Ha()!==s&&(e=function(){var r,t,e,n,u,o,a,i;if(r=Ru,(t=ds())!==s){for(e=[],n=Ru,(u=Ha())!==s&&(o=Ma())!==s&&(a=Ha())!==s&&(i=ds())!==s?n=u=[u,o,a,i]:(Ru=n,n=s);n!==s;)e.push(n),n=Ru,(u=Ha())!==s&&(o=Ma())!==s&&(a=Ha())!==s&&(i=ds())!==s?n=u=[u,o,a,i]:(Ru=n,n=s);e!==s?(t=c(t,e),r=t):(Ru=r,r=s);}else Ru=r,r=s;return r}())!==s?((n=e).forEach(r=>r.forEach(r=>r.table&&Li.add(`rename::${r.db}::${r.table}`))),t={tableList:Array.from(Li),columnList:vi(Ci),ast:{type:"rename",table:n}},r=t):(Ru=r,r=s);var n;return r}())===s&&(t=function(){var t,e,n;t=Ru,(e=function(){var t,e,n,u;t=Ru,"call"===r.substr(Ru,4).toLowerCase()?(e=r.substr(Ru,4),Ru+=4):(e=s,0===xu&&$u(Ke));e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="CALL"):(Ru=t,t=s)):(Ru=t,t=s);return t}())!==s&&Ha()!==s&&(n=ri())!==s?(u=n,e={tableList:Array.from(Li),columnList:vi(Ci),ast:{type:"call",expr:u}},t=e):(Ru=t,t=s);var u;return t}())===s&&(t=function(){var t,e,n;t=Ru,(e=function(){var t,e,n,u;t=Ru,"use"===r.substr(Ru,3).toLowerCase()?(e=r.substr(Ru,3),Ru+=3):(e=s,0===xu&&$u(Gt));e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s);return t}())!==s&&Ha()!==s&&(n=eo())!==s?(u=n,Li.add(`use::${u}::null`),e={tableList:Array.from(Li),columnList:vi(Ci),ast:{type:"use",db:u}},t=e):(Ru=t,t=s);var u;return t}())===s&&(t=function(){var t,e,n,u;t=Ru,(e=function(){var t,e,n,u;t=Ru,"alter"===r.substr(Ru,5).toLowerCase()?(e=r.substr(Ru,5),Ru+=5):(e=s,0===xu&&$u(jt));e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s);return t}())!==s&&Ha()!==s&&Po()!==s&&Ha()!==s&&(n=ws())!==s&&Ha()!==s&&(u=function(){var r,t,e,n,u,o,a,i;if(r=Ru,(t=Vu())!==s){for(e=[],n=Ru,(u=Ha())!==s&&(o=Ma())!==s&&(a=Ha())!==s&&(i=Vu())!==s?n=u=[u,o,a,i]:(Ru=n,n=s);n!==s;)e.push(n),n=Ru,(u=Ha())!==s&&(o=Ma())!==s&&(a=Ha())!==s&&(i=Vu())!==s?n=u=[u,o,a,i]:(Ru=n,n=s);e!==s?(t=c(t,e),r=t):(Ru=r,r=s);}else Ru=r,r=s;return r}())!==s?(a=u,(o=n)&&o.length>0&&o.forEach(r=>Li.add(`alter::${r.db}::${r.table}`)),e={tableList:Array.from(Li),columnList:vi(Ci),ast:{type:"alter",table:o,expr:a}},t=e):(Ru=t,t=s);var o,a;return t}())===s&&(t=function(){var t,e,n,u;t=Ru,(e=$o())!==s&&Ha()!==s?((n=function(){var t,e,n,u;t=Ru,"global"===r.substr(Ru,6).toLowerCase()?(e=r.substr(Ru,6),Ru+=6):(e=s,0===xu&&$u(Gn));e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="GLOBAL"):(Ru=t,t=s)):(Ru=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=Ru,"session"===r.substr(Ru,7).toLowerCase()?(e=r.substr(Ru,7),Ru+=7):(e=s,0===xu&&$u(jn));e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="SESSION"):(Ru=t,t=s)):(Ru=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=Ru,"local"===r.substr(Ru,5).toLowerCase()?(e=r.substr(Ru,5),Ru+=5):(e=s,0===xu&&$u(dr));e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="LOCAL"):(Ru=t,t=s)):(Ru=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=Ru,"persist"===r.substr(Ru,7).toLowerCase()?(e=r.substr(Ru,7),Ru+=7):(e=s,0===xu&&$u(Yn));e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="PERSIST"):(Ru=t,t=s)):(Ru=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=Ru,"persist_only"===r.substr(Ru,12).toLowerCase()?(e=r.substr(Ru,12),Ru+=12):(e=s,0===xu&&$u(Bn));e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="PERSIST_ONLY"):(Ru=t,t=s)):(Ru=t,t=s);return t}()),n===s&&(n=null),n!==s&&Ha()!==s&&(u=Ka())!==s?(o=n,(a=u).keyword=o,e={tableList:Array.from(Li),columnList:vi(Ci),ast:{type:"set",expr:a}},t=e):(Ru=t,t=s)):(Ru=t,t=s);var o,a;return t}())===s&&(t=function(){var t,e,n;t=Ru,(e=function(){var t,e,n,u;t=Ru,"lock"===r.substr(Ru,4).toLowerCase()?(e=r.substr(Ru,4),Ru+=4):(e=s,0===xu&&$u(S));e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s);return t}())!==s&&Ha()!==s&&Ho()!==s&&Ha()!==s&&(n=function(){var r,t,e,n,u,o,a,i;if(r=Ru,(t=ns())!==s){for(e=[],n=Ru,(u=Ha())!==s&&(o=Ma())!==s&&(a=Ha())!==s&&(i=ns())!==s?n=u=[u,o,a,i]:(Ru=n,n=s);n!==s;)e.push(n),n=Ru,(u=Ha())!==s&&(o=Ma())!==s&&(a=Ha())!==s&&(i=ns())!==s?n=u=[u,o,a,i]:(Ru=n,n=s);e!==s?(t=br(t,e),r=t):(Ru=r,r=s);}else Ru=r,r=s;return r}())!==s?(u=n,e={tableList:Array.from(Li),columnList:vi(Ci),ast:{type:"lock",keyword:"tables",tables:u}},t=e):(Ru=t,t=s);var u;return t}())===s&&(t=function(){var t,e;t=Ru,(e=function(){var t,e,n,u;t=Ru,"unlock"===r.substr(Ru,6).toLowerCase()?(e=r.substr(Ru,6),Ru+=6):(e=s,0===xu&&$u(ne));e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s);return t}())!==s&&Ha()!==s&&Ho()!==s?(e={tableList:Array.from(Li),columnList:vi(Ci),ast:{type:"unlock",keyword:"tables"}},t=e):(Ru=t,t=s);return t}())===s&&(t=function(){var t,e,n,u,o,a,i,c,l;t=Ru,(e=No())!==s&&Ha()!==s?("binary"===r.substr(Ru,6).toLowerCase()?(n=r.substr(Ru,6),Ru+=6):(n=s,0===xu&&$u(ur)),n===s&&("master"===r.substr(Ru,6).toLowerCase()?(n=r.substr(Ru,6),Ru+=6):(n=s,0===xu&&$u(sr))),n!==s&&(u=Ha())!==s?("logs"===r.substr(Ru,4).toLowerCase()?(o=r.substr(Ru,4),Ru+=4):(o=s,0===xu&&$u(or)),o!==s?(f=n,e={tableList:Array.from(Li),columnList:vi(Ci),ast:{type:"show",suffix:"logs",keyword:f.toLowerCase()}},t=e):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s);var f;t===s&&(t=Ru,(e=No())!==s&&Ha()!==s?("binlog"===r.substr(Ru,6).toLowerCase()?(n=r.substr(Ru,6),Ru+=6):(n=s,0===xu&&$u(ar)),n!==s&&(u=Ha())!==s?("events"===r.substr(Ru,6).toLowerCase()?(o=r.substr(Ru,6),Ru+=6):(o=s,0===xu&&$u(ir)),o!==s&&(a=Ha())!==s?((i=qs())===s&&(i=null),i!==s&&Ha()!==s?((c=vs())===s&&(c=null),c!==s&&Ha()!==s?((l=Rs())===s&&(l=null),l!==s?(b=i,v=c,d=l,e={tableList:Array.from(Li),columnList:vi(Ci),ast:{type:"show",suffix:"events",keyword:"binlog",in:b,from:v,limit:d}},t=e):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s),t===s&&(t=Ru,(e=No())!==s&&Ha()!==s?(n=Ru,"character"===r.substr(Ru,9).toLowerCase()?(u=r.substr(Ru,9),Ru+=9):(u=s,0===xu&&$u(Y)),u!==s&&(o=Ha())!==s?("set"===r.substr(Ru,3).toLowerCase()?(a=r.substr(Ru,3),Ru+=3):(a=s,0===xu&&$u(B)),a!==s?n=u=[u,o,a]:(Ru=n,n=s)):(Ru=n,n=s),n===s&&("collation"===r.substr(Ru,9).toLowerCase()?(n=r.substr(Ru,9),Ru+=9):(n=s,0===xu&&$u(cr))),n!==s&&(u=Ha())!==s?((o=Ks())===s&&(o=ms()),o===s&&(o=null),o!==s?(e=function(r,t){let e=Array.isArray(r)&&r||[r];return {tableList:Array.from(Li),columnList:vi(Ci),ast:{type:"show",suffix:e[2]&&e[2].toLowerCase(),keyword:e[0].toLowerCase(),expr:t}}}(n,o),t=e):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s),t===s&&(t=function(){var t,e,n,u;t=Ru,(e=No())!==s&&Ha()!==s?("grants"===r.substr(Ru,6).toLowerCase()?(n=r.substr(Ru,6),Ru+=6):(n=s,0===xu&&$u(lr)),n!==s&&Ha()!==s?((u=function(){var t,e,n,u,o,a,i;t=Ru,"for"===r.substr(Ru,3).toLowerCase()?(e=r.substr(Ru,3),Ru+=3):(e=s,0===xu&&$u(fr));e!==s&&Ha()!==s&&(n=eo())!==s&&Ha()!==s?(u=Ru,(o=Sa())!==s&&(a=Ha())!==s&&(i=eo())!==s?u=o=[o,a,i]:(Ru=u,u=s),u===s&&(u=null),u!==s&&(o=Ha())!==s?((a=function(){var r,t;r=Ru,Wo()!==s&&Ha()!==s&&(t=function(){var r,t,e,n,u,o,a,i;if(r=Ru,(t=eo())!==s){for(e=[],n=Ru,(u=Ha())!==s&&(o=Ma())!==s&&(a=Ha())!==s&&(i=eo())!==s?n=u=[u,o,a,i]:(Ru=n,n=s);n!==s;)e.push(n),n=Ru,(u=Ha())!==s&&(o=Ma())!==s&&(a=Ha())!==s&&(i=eo())!==s?n=u=[u,o,a,i]:(Ru=n,n=s);e!==s?(t=br(t,e),r=t):(Ru=r,r=s);}else Ru=r,r=s;return r}())!==s?(r=t):(Ru=r,r=s);return r}())===s&&(a=null),a!==s?(l=a,e={user:n,host:(c=u)&&c[2],role_list:l},t=e):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s);var c,l;return t}())===s&&(u=null),u!==s?(e=function(r){return {tableList:Array.from(Li),columnList:vi(Ci),ast:{type:"show",keyword:"grants",for:r}}}(u),t=e):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s);return t}())));var b,v,d;return t}())===s&&(t=function(){var t,e,n;t=Ru,(e=qo())===s&&(e=function(){var t,e,n,u;t=Ru,"describe"===r.substr(Ru,8).toLowerCase()?(e=r.substr(Ru,8),Ru+=8):(e=s,0===xu&&$u(_e));e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="DESCRIBE"):(Ru=t,t=s)):(Ru=t,t=s);return t}());e!==s&&Ha()!==s&&(n=eo())!==s?(u=n,e={tableList:Array.from(Li),columnList:vi(Ci),ast:{type:"desc",table:u}},t=e):(Ru=t,t=s);var u;return t}()),t}function Gu(){var t;return (t=ju())===s&&(t=function(){var r,t,e,n,u;r=Ru,(t=_o())!==s&&Ha()!==s&&(e=ws())!==s&&Ha()!==s&&$o()!==s&&Ha()!==s&&(n=_s())!==s&&Ha()!==s?((u=ms())===s&&(u=null),u!==s?(a=n,i=u,(o=e)&&o.forEach(r=>{const{db:t,as:e,table:n}=r;Li.add(`update::${t}::${n}`);}),a&&a.forEach(r=>Ci.add(`update::${r.table}::${r.column}`)),t={tableList:Array.from(Li),columnList:vi(Ci),ast:{type:"update",table:o,set:a,where:i}},r=t):(Ru=r,r=s)):(Ru=r,r=s);var o,a,i;return r}())===s&&(t=function(){var r,t,e,n,u,o,a,i;r=Ru,(t=Ms())!==s&&Ha()!==s?((e=ko())===s&&(e=null),e!==s&&Ha()!==s&&(n=ys())!==s&&Ha()!==s?((u=xs())===s&&(u=null),u!==s&&Ha()!==s&&ka()!==s&&Ha()!==s&&(o=function(){var r,t,e,n,u,o,a,i;if(r=Ru,(t=uo())!==s){for(e=[],n=Ru,(u=Ha())!==s&&(o=Ma())!==s&&(a=Ha())!==s&&(i=uo())!==s?n=u=[u,o,a,i]:(Ru=n,n=s);n!==s;)e.push(n),n=Ru,(u=Ha())!==s&&(o=Ma())!==s&&(a=Ha())!==s&&(i=uo())!==s?n=u=[u,o,a,i]:(Ru=n,n=s);e!==s?(t=c(t,e),r=t):(Ru=r,r=s);}else Ru=r,r=s;return r}())!==s&&Ha()!==s&&$a()!==s&&Ha()!==s&&(a=Os())!==s&&Ha()!==s?((i=Us())===s&&(i=null),i!==s?(t=function(r,t,e,n,u,s){if(t&&(Li.add(`insert::${t.db}::${t.table}`),t.as=null),n){let r=t&&t.table||null;Array.isArray(u)&&u.forEach((r,t)=>{if(r.value.length!=n.length)throw new Error("Error: column count doesn't match value count at row "+(t+1))}),n.forEach(t=>Ci.add(`insert::${r}::${t}`));}return {tableList:Array.from(Li),columnList:vi(Ci),ast:{type:r,table:[t],columns:n,values:u,partition:e,on_duplicate_update:s}}}(t,n,u,o,a,i),r=t):(Ru=r,r=s)):(Ru=r,r=s)):(Ru=r,r=s)):(Ru=r,r=s);return r}())===s&&(t=function(){var r,t,e,n,u,o;r=Ru,(t=Ms())!==s&&Ha()!==s&&ko()!==s&&Ha()!==s&&(e=ys())!==s&&Ha()!==s?((n=xs())===s&&(n=null),n!==s&&Ha()!==s&&(u=Os())!==s&&Ha()!==s?((o=Us())===s&&(o=null),o!==s?(a=t,c=n,l=u,f=o,(i=e)&&(Li.add(`insert::${i.db}::${i.table}`),Ci.add(`insert::${i.table}::(.*)`),i.as=null),t={tableList:Array.from(Li),columnList:vi(Ci),ast:{type:a,table:[i],columns:null,values:l,partition:c,on_duplicate_update:f}},r=t):(Ru=r,r=s)):(Ru=r,r=s)):(Ru=r,r=s);var a,i,c,l,f;return r}())===s&&(t=function(){var t,e,n,u,o;t=Ru,(e=function(){var t,e,n,u;t=Ru,"delete"===r.substr(Ru,6).toLowerCase()?(e=r.substr(Ru,6),Ru+=6):(e=s,0===xu&&$u(Kt));e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s);return t}())!==s&&Ha()!==s?((n=ws())===s&&(n=null),n!==s&&Ha()!==s&&(u=vs())!==s&&Ha()!==s?((o=ms())===s&&(o=null),o!==s?(e=function(r,t,e){if(t&&t.forEach(r=>{r.table&&Li.add(`delete::${r.db}::${r.table}`),Ci.add(`delete::${r.table}::(.*)`);}),null===r&&1===t.length){const e=t[0];r=[{db:e.db,table:e.table,as:e.as,addition:!0}];}return {tableList:Array.from(Li),columnList:vi(Ci),ast:{type:"delete",table:r,from:t,where:e}}}(n,u,o),t=e):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s);return t}())===s&&(t=Hu())===s&&(t=function(){var r,t;r=[],t=Va();for(;t!==s;)r.push(t),t=Va();return r}()),t}function ju(){var r,t,e,n,u,o,a,i,c,l;if(r=Ru,(t=us())!==s){for(e=[],n=Ru,(u=Ha())!==s&&(o=Bo())!==s&&(a=Ha())!==s?((i=Zo())===s&&(i=null),i!==s&&(c=Ha())!==s&&(l=us())!==s?n=u=[u,o,a,i,c,l]:(Ru=n,n=s)):(Ru=n,n=s);n!==s;)e.push(n),n=Ru,(u=Ha())!==s&&(o=Bo())!==s&&(a=Ha())!==s?((i=Zo())===s&&(i=null),i!==s&&(c=Ha())!==s&&(l=us())!==s?n=u=[u,o,a,i,c,l]:(Ru=n,n=s)):(Ru=n,n=s);e!==s&&(n=Ha())!==s?((u=Ss())===s&&(u=null),u!==s&&(o=Ha())!==s?((a=Rs())===s&&(a=null),a!==s?(r=t=function(r,t,e,n){let u=r;for(let r=0;r<t.length;r++)u._next=t[r][5],u.union=t[r][3]?"union all":"union",u=u._next;return e&&(r._orderby=e),n&&(r._limit=n),{tableList:Array.from(Li),columnList:vi(Ci),ast:r}}(t,e,u,a)):(Ru=r,r=s)):(Ru=r,r=s)):(Ru=r,r=s);}else Ru=r,r=s;return r}function Yu(){var t;return (t=Xu())===s&&(t=Zu())===s&&(t=zu())===s&&(t=function(){var t;(t=function(){var t,e,n,u,o,a;t=Ru,(e=Ju())===s&&(e=null);e!==s&&Ha()!==s?("primary key"===r.substr(Ru,11).toLowerCase()?(n=r.substr(Ru,11),Ru+=11):(n=s,0===xu&&$u(_)),n!==s&&Ha()!==s?((u=Ls())===s&&(u=null),u!==s&&Ha()!==s&&(o=as())!==s&&Ha()!==s?((a=Cs())===s&&(a=null),a!==s?(c=n,l=u,f=o,b=a,e={constraint:(i=e)&&i.constraint,definition:f,constraint_type:c.toLowerCase(),keyword:i&&i.keyword,index_type:l,resource:"constraint",index_options:b},t=e):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s);var i,c,l,f,b;return t}())===s&&(t=function(){var t,e,n,u,o,a,i,c;t=Ru,(e=Ju())===s&&(e=null);e!==s&&Ha()!==s&&(n=function(){var t,e,n,u;t=Ru,"unique"===r.substr(Ru,6).toLowerCase()?(e=r.substr(Ru,6),Ru+=6):(e=s,0===xu&&$u(f));e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="UNIQUE"):(Ru=t,t=s)):(Ru=t,t=s);return t}())!==s&&Ha()!==s?((u=ga())===s&&(u=Oa()),u===s&&(u=null),u!==s&&Ha()!==s?((o=uo())===s&&(o=null),o!==s&&Ha()!==s?((a=Ls())===s&&(a=null),a!==s&&Ha()!==s&&(i=as())!==s&&Ha()!==s?((c=Cs())===s&&(c=null),c!==s?(b=n,v=u,d=o,L=a,C=i,p=c,e={constraint:(l=e)&&l.constraint,definition:C,constraint_type:v&&`${b.toLowerCase()} ${v.toLowerCase()}`||b.toLowerCase(),keyword:l&&l.keyword,index_type:L,index:d,resource:"constraint",index_options:p},t=e):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s);var l,b,v,d,L,C,p;return t}())===s&&(t=function(){var t,e,n,u,o,a;t=Ru,(e=Ju())===s&&(e=null);e!==s&&Ha()!==s?("foreign key"===r.substr(Ru,11).toLowerCase()?(n=r.substr(Ru,11),Ru+=11):(n=s,0===xu&&$u(g)),n!==s&&Ha()!==s?((u=uo())===s&&(u=null),u!==s&&Ha()!==s&&(o=as())!==s&&Ha()!==s?((a=Qu())===s&&(a=null),a!==s?(c=n,l=u,f=o,b=a,e={constraint:(i=e)&&i.constraint,definition:f,constraint_type:c,keyword:i&&i.keyword,index:l,resource:"constraint",reference_definition:b},t=e):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s);var i,c,l,f,b;return t}());return t}()),t}function Bu(){var t,e,n,u,o,a;return t=Ru,(e=function(){var e;(e=function(){var t,e,n,u;t=Ru,"not null"===r.substr(Ru,8).toLowerCase()?(e=r.substr(Ru,8),Ru+=8):(e=s,0===xu&&$u(Dt));e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s);return t}())!==s&&(e={type:"not null",value:"not null"});return e}())===s&&(e=bo()),e!==s&&((a=e)&&!a.value&&(a.value="null"),e={nullable:a}),(t=e)===s&&(t=Ru,(e=function(){var r,t;r=Ru,So()!==s&&Ha()!==s?((t=fo())===s&&(t=Hs()),t!==s?(r={type:"default",value:t}):(Ru=r,r=s)):(Ru=r,r=s);return r}())!==s&&(e={default_val:e}),(t=e)===s&&(t=Ru,"auto_increment"===r.substr(Ru,14).toLowerCase()?(e=r.substr(Ru,14),Ru+=14):(e=s,0===xu&&$u(l)),e!==s&&(e={auto_increment:e.toLowerCase()}),(t=e)===s&&(t=Ru,e=Ru,"unique"===r.substr(Ru,6).toLowerCase()?(n=r.substr(Ru,6),Ru+=6):(n=s,0===xu&&$u(f)),n!==s&&(u=Ha())!==s?("key"===r.substr(Ru,3).toLowerCase()?(o=r.substr(Ru,3),Ru+=3):(o=s,0===xu&&$u(b)),o===s&&(o=null),o!==s?e=n=[n,u,o]:(Ru=e,e=s)):(Ru=e,e=s),e===s&&(e=Ru,"primary"===r.substr(Ru,7).toLowerCase()?(n=r.substr(Ru,7),Ru+=7):(n=s,0===xu&&$u(v)),n===s&&(n=null),n!==s&&(u=Ha())!==s?("key"===r.substr(Ru,3).toLowerCase()?(o=r.substr(Ru,3),Ru+=3):(o=s,0===xu&&$u(b)),o!==s?e=n=[n,u,o]:(Ru=e,e=s)):(Ru=e,e=s)),e!==s&&(e=function(r){const t=[];return r&&t.push(r[0],r[2]),{unique_or_primary:t.filter(r=>r).join(" ").toLowerCase("")}}(e)),(t=e)===s&&(t=Ru,(e=Ya())!==s&&(e={comment:e}),(t=e)===s&&(t=Ru,(e=Wu())!==s&&(e={collate:e}),(t=e)===s&&(t=Ru,(e=function(){var t,e,n;t=Ru,"column_format"===r.substr(Ru,13).toLowerCase()?(e=r.substr(Ru,13),Ru+=13):(e=s,0===xu&&$u(d));e!==s&&Ha()!==s?("fixed"===r.substr(Ru,5).toLowerCase()?(n=r.substr(Ru,5),Ru+=5):(n=s,0===xu&&$u(L)),n===s&&("dynamic"===r.substr(Ru,7).toLowerCase()?(n=r.substr(Ru,7),Ru+=7):(n=s,0===xu&&$u(C)),n===s&&("default"===r.substr(Ru,7).toLowerCase()?(n=r.substr(Ru,7),Ru+=7):(n=s,0===xu&&$u(p)))),n!==s?(e=function(r,t){return {type:"column_format",value:t.toLowerCase()}}(0,n),t=e):(Ru=t,t=s)):(Ru=t,t=s);return t}())!==s&&(e={column_format:e}),(t=e)===s&&(t=Ru,(e=function(){var t,e,n;t=Ru,"storage"===r.substr(Ru,7).toLowerCase()?(e=r.substr(Ru,7),Ru+=7):(e=s,0===xu&&$u(w));e!==s&&Ha()!==s?("disk"===r.substr(Ru,4).toLowerCase()?(n=r.substr(Ru,4),Ru+=4):(n=s,0===xu&&$u(E)),n===s&&("memory"===r.substr(Ru,6).toLowerCase()?(n=r.substr(Ru,6),Ru+=6):(n=s,0===xu&&$u(h))),n!==s?(e={type:"storage",value:n.toLowerCase()},t=e):(Ru=t,t=s)):(Ru=t,t=s);return t}())!==s&&(e={storage:e}),(t=e)===s&&(t=Ru,(e=Qu())!==s&&(e={reference_definition:e}),(t=e)===s&&(t=Ru,(e=function(){var t,e,n,u,o,a,i,c;t=Ru,(e=Ju())===s&&(e=null);e!==s&&Ha()!==s?("check"===r.substr(Ru,5).toLowerCase()?(n=r.substr(Ru,5),Ru+=5):(n=s,0===xu&&$u(O)),n!==s&&Ha()!==s&&ka()!==s&&Ha()!==s&&(u=Hs())!==s&&Ha()!==s&&$a()!==s&&Ha()!==s?(o=Ru,(a=na())===s&&(a=null),a!==s&&(i=Ha())!==s?("enforced"===r.substr(Ru,8).toLowerCase()?(c=r.substr(Ru,8),Ru+=8):(c=s,0===xu&&$u(x)),c!==s?o=a=[a,i,c]:(Ru=o,o=s)):(Ru=o,o=s),o===s&&(o=null),o!==s?(e=function(r,t,e,n){const u=[];return n&&u.push(n[0],n[2]),{constraint_type:t.toLowerCase(),keyword:r&&r.keyword,constraint:r&&r.constraint,definition:[e],enforced:u.filter(r=>r).join(" ").toLowerCase(),resource:"constraint"}}(e,n,u,o),t=e):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s);return t}())!==s&&(e={check:e}),t=e))))))))),t}function Xu(){var r,t,e,n,u,o,a;return r=Ru,(t=to())!==s&&Ha()!==s&&(e=ui())!==s&&Ha()!==s?((n=function(){var r,t,e,n,u,o;if(r=Ru,(t=Bu())!==s)if(Ha()!==s){for(e=[],n=Ru,(u=Ha())!==s&&(o=Bu())!==s?n=u=[u,o]:(Ru=n,n=s);n!==s;)e.push(n),n=Ru,(u=Ha())!==s&&(o=Bu())!==s?n=u=[u,o]:(Ru=n,n=s);e!==s?(r=t=function(r,t){let e=r;for(let r=0;r<t.length;r++)e={...e,...t[r][1]};return e}(t,e)):(Ru=r,r=s);}else Ru=r,r=s;else Ru=r,r=s;return r}())===s&&(n=null),n!==s?(u=t,o=e,a=n,Ci.add(`create::${u.table}::${u.column}`),r=t={column:u,definition:o,resource:"column",...a||{}}):(Ru=r,r=s)):(Ru=r,r=s),r}function Wu(){var t,e;return t=Ru,function(){var t,e,n,u;t=Ru,"collate"===r.substr(Ru,7).toLowerCase()?(e=r.substr(Ru,7),Ru+=7):(e=s,0===xu&&$u(W));e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="COLLATE"):(Ru=t,t=s)):(Ru=t,t=s);return t}()!==s&&Ha()!==s&&(e=so())!==s?(t={type:"collate",value:e}):(Ru=t,t=s),t}function Vu(){var r;return (r=function(){var r,t,e,n,u;r=Ru,(t=Ra())!==s&&Ha()!==s?((e=_a())===s&&(e=null),e!==s&&Ha()!==s?((n=xo())===s&&(n=null),n!==s&&Ha()!==s&&(u=Xu())!==s?(o=e,a=n,i=u,t={action:"add",...i,keyword:o,if_not_exists:a&&a[0].toLowerCase(),resource:"column",type:"alter"},r=t):(Ru=r,r=s)):(Ru=r,r=s)):(Ru=r,r=s);var o,a,i;return r}())===s&&(r=function(){var r,t,e;r=Ru,Ro()!==s&&Ha()!==s?((t=_a())===s&&(t=null),t!==s&&Ha()!==s&&(e=to())!==s?(r={action:"drop",column:e,keyword:t,resource:"column",type:"alter"}):(Ru=r,r=s)):(Ru=r,r=s);return r}())===s&&(r=function(){var r,t,e;r=Ru,(t=Ra())!==s&&Ha()!==s&&(e=Zu())!==s?(n=e,t={action:"add",type:"alter",...n},r=t):(Ru=r,r=s);var n;return r}())===s&&(r=function(){var r,t,e;r=Ru,(t=Ra())!==s&&Ha()!==s&&(e=zu())!==s?(n=e,t={action:"add",type:"alter",...n},r=t):(Ru=r,r=s);var n;return r}())===s&&(r=function(){var r,t,e,n;r=Ru,(t=Mo())!==s&&Ha()!==s?((e=Io())===s&&(e=Fo()),e===s&&(e=null),e!==s&&Ha()!==s&&(n=eo())!==s?(o=n,t={action:"rename",type:"alter",resource:"table",keyword:(u=e)&&u[0].toLowerCase(),table:o},r=t):(Ru=r,r=s)):(Ru=r,r=s);var u,o;return r}())===s&&(r=Ku())===s&&(r=qu()),r}function Ku(){var t,e,n,u;return t=Ru,"algorithm"===r.substr(Ru,9).toLowerCase()?(e=r.substr(Ru,9),Ru+=9):(e=s,0===xu&&$u(A)),e!==s&&Ha()!==s?((n=Na())===s&&(n=null),n!==s&&Ha()!==s?("default"===r.substr(Ru,7).toLowerCase()?(u=r.substr(Ru,7),Ru+=7):(u=s,0===xu&&$u(p)),u===s&&("instant"===r.substr(Ru,7).toLowerCase()?(u=r.substr(Ru,7),Ru+=7):(u=s,0===xu&&$u(y)),u===s&&("inplace"===r.substr(Ru,7).toLowerCase()?(u=r.substr(Ru,7),Ru+=7):(u=s,0===xu&&$u(T)),u===s&&("copy"===r.substr(Ru,4).toLowerCase()?(u=r.substr(Ru,4),Ru+=4):(u=s,0===xu&&$u(m))))),u!==s?(t=e={type:"alter",keyword:"algorithm",resource:"algorithm",symbol:n,algorithm:u}):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s),t}function qu(){var t,e,n,u;return t=Ru,"lock"===r.substr(Ru,4).toLowerCase()?(e=r.substr(Ru,4),Ru+=4):(e=s,0===xu&&$u(S)),e!==s&&Ha()!==s?((n=Na())===s&&(n=null),n!==s&&Ha()!==s?("default"===r.substr(Ru,7).toLowerCase()?(u=r.substr(Ru,7),Ru+=7):(u=s,0===xu&&$u(p)),u===s&&("none"===r.substr(Ru,4).toLowerCase()?(u=r.substr(Ru,4),Ru+=4):(u=s,0===xu&&$u(I)),u===s&&("shared"===r.substr(Ru,6).toLowerCase()?(u=r.substr(Ru,6),Ru+=6):(u=s,0===xu&&$u(N)),u===s&&("exclusive"===r.substr(Ru,9).toLowerCase()?(u=r.substr(Ru,9),Ru+=9):(u=s,0===xu&&$u(R))))),u!==s?(t=e={type:"alter",keyword:"lock",resource:"lock",symbol:n,lock:u}):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s),t}function Zu(){var r,t,e,n,u,o,a,i;return r=Ru,(t=ga())===s&&(t=Oa()),t!==s&&Ha()!==s?((e=uo())===s&&(e=null),e!==s&&Ha()!==s?((n=Ls())===s&&(n=null),n!==s&&Ha()!==s&&(u=as())!==s&&Ha()!==s?((o=Cs())===s&&(o=null),o!==s&&Ha()!==s?(a=n,i=o,r=t={index:e,definition:u,keyword:t.toLowerCase(),index_type:a,resource:"index",index_options:i}):(Ru=r,r=s)):(Ru=r,r=s)):(Ru=r,r=s)):(Ru=r,r=s),r}function zu(){var t,e,n,u,o,a,i,c,l;return t=Ru,(e=function(){var t,e,n,u;t=Ru,"fulltext"===r.substr(Ru,8).toLowerCase()?(e=r.substr(Ru,8),Ru+=8):(e=s,0===xu&&$u(ru));e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="FULLTEXT"):(Ru=t,t=s)):(Ru=t,t=s);return t}())===s&&(e=function(){var t,e,n,u;t=Ru,"spatial"===r.substr(Ru,7).toLowerCase()?(e=r.substr(Ru,7),Ru+=7):(e=s,0===xu&&$u(tu));e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="SPATIAL"):(Ru=t,t=s)):(Ru=t,t=s);return t}()),e!==s&&Ha()!==s?((n=ga())===s&&(n=Oa()),n===s&&(n=null),n!==s&&Ha()!==s?((u=uo())===s&&(u=null),u!==s&&Ha()!==s&&(o=as())!==s&&Ha()!==s?((a=Cs())===s&&(a=null),a!==s&&Ha()!==s?(i=e,l=a,t=e={index:u,definition:o,keyword:(c=n)&&`${i.toLowerCase()} ${c.toLowerCase()}`||i.toLowerCase(),index_options:l,resource:"index"}):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s),t}function Ju(){var t,e,n,u;return t=Ru,(e=function(){var t,e,n,u;t=Ru,"constraint"===r.substr(Ru,10).toLowerCase()?(e=r.substr(Ru,10),Ru+=10):(e=s,0===xu&&$u(nu));e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="CONSTRAINT"):(Ru=t,t=s)):(Ru=t,t=s);return t}())!==s&&Ha()!==s?((n=eo())===s&&(n=null),n!==s?(u=n,t=e={keyword:e.toLowerCase(),constraint:u}):(Ru=t,t=s)):(Ru=t,t=s),t}function Qu(){var t,e,n,u,o,a,i,c,l,f;return t=Ru,(e=function(){var t,e,n,u;t=Ru,"references"===r.substr(Ru,10).toLowerCase()?(e=r.substr(Ru,10),Ru+=10):(e=s,0===xu&&$u(uu));e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="REFERENCES"):(Ru=t,t=s)):(Ru=t,t=s);return t}())!==s&&Ha()!==s&&(n=ws())!==s&&Ha()!==s&&(u=as())!==s&&Ha()!==s?("match full"===r.substr(Ru,10).toLowerCase()?(o=r.substr(Ru,10),Ru+=10):(o=s,0===xu&&$u(U)),o===s&&("match partial"===r.substr(Ru,13).toLowerCase()?(o=r.substr(Ru,13),Ru+=13):(o=s,0===xu&&$u(M)),o===s&&("match simple"===r.substr(Ru,12).toLowerCase()?(o=r.substr(Ru,12),Ru+=12):(o=s,0===xu&&$u(D)))),o===s&&(o=null),o!==s&&Ha()!==s?((a=rs())===s&&(a=null),a!==s&&Ha()!==s?((i=rs())===s&&(i=null),i!==s?(c=o,l=a,f=i,t=e={definition:u,table:n,keyword:e.toLowerCase(),match:c&&c.toLowerCase(),on_delete:l,on_update:f}):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s),t}function rs(){var t,e,n,u;return t=Ru,"on delete"===r.substr(Ru,9).toLowerCase()?(e=r.substr(Ru,9),Ru+=9):(e=s,0===xu&&$u(k)),e===s&&("on update"===r.substr(Ru,9).toLowerCase()?(e=r.substr(Ru,9),Ru+=9):(e=s,0===xu&&$u($))),e!==s&&Ha()!==s&&(n=function(){var e;"restrict"===r.substr(Ru,8).toLowerCase()?(e=r.substr(Ru,8),Ru+=8):(e=s,0===xu&&$u(F));e===s&&("cascade"===r.substr(Ru,7).toLowerCase()?(e=r.substr(Ru,7),Ru+=7):(e=s,0===xu&&$u(P)),e===s&&("set null"===r.substr(Ru,8).toLowerCase()?(e=r.substr(Ru,8),Ru+=8):(e=s,0===xu&&$u(H)),e===s&&("no action"===r.substr(Ru,9).toLowerCase()?(e=r.substr(Ru,9),Ru+=9):(e=s,0===xu&&$u(G)),e===s&&("set default"===r.substr(Ru,11).toLowerCase()?(e=r.substr(Ru,11),Ru+=11):(e=s,0===xu&&$u(j))))));e!==s&&(e=e.toLowerCase());return e}())!==s?(u=n,t=e={type:e.toLowerCase(),value:u}):(Ru=t,t=s),t}function ts(){var t,e,n,u,o,a,i,c,l;return t=Ru,(e=So())===s&&(e=null),e!==s&&Ha()!==s?((n=function(){var t,e,n;return t=Ru,"character"===r.substr(Ru,9).toLowerCase()?(e=r.substr(Ru,9),Ru+=9):(e=s,0===xu&&$u(Y)),e!==s&&Ha()!==s?("set"===r.substr(Ru,3).toLowerCase()?(n=r.substr(Ru,3),Ru+=3):(n=s,0===xu&&$u(B)),n!==s?(t=e="CHARACTER SET"):(Ru=t,t=s)):(Ru=t,t=s),t}())===s&&("charset"===r.substr(Ru,7).toLowerCase()?(n=r.substr(Ru,7),Ru+=7):(n=s,0===xu&&$u(X)),n===s&&("collate"===r.substr(Ru,7).toLowerCase()?(n=r.substr(Ru,7),Ru+=7):(n=s,0===xu&&$u(W)))),n!==s&&Ha()!==s?((u=Na())===s&&(u=null),u!==s&&Ha()!==s&&(o=so())!==s?(i=n,c=u,l=o,t=e={keyword:(a=e)&&`${a[0].toLowerCase()} ${i.toLowerCase()}`||i.toLowerCase(),symbol:c,value:l}):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s),t}function es(){var t,e,n,u,o,a,i,c,f;return t=Ru,"auto_increment"===r.substr(Ru,14).toLowerCase()?(e=r.substr(Ru,14),Ru+=14):(e=s,0===xu&&$u(l)),e===s&&("avg_row_length"===r.substr(Ru,14).toLowerCase()?(e=r.substr(Ru,14),Ru+=14):(e=s,0===xu&&$u(V)),e===s&&("key_block_size"===r.substr(Ru,14).toLowerCase()?(e=r.substr(Ru,14),Ru+=14):(e=s,0===xu&&$u(K)),e===s&&("max_rows"===r.substr(Ru,8).toLowerCase()?(e=r.substr(Ru,8),Ru+=8):(e=s,0===xu&&$u(q)),e===s&&("min_rows"===r.substr(Ru,8).toLowerCase()?(e=r.substr(Ru,8),Ru+=8):(e=s,0===xu&&$u(Z)),e===s&&("stats_sample_pages"===r.substr(Ru,18).toLowerCase()?(e=r.substr(Ru,18),Ru+=18):(e=s,0===xu&&$u(z))))))),e!==s&&Ha()!==s?((n=Na())===s&&(n=null),n!==s&&Ha()!==s&&(u=wo())!==s?(c=n,f=u,t=e={keyword:e.toLowerCase(),symbol:c,value:f.value}):(Ru=t,t=s)):(Ru=t,t=s),t===s&&(t=ts())===s&&(t=Ru,(e=xa())===s&&("connection"===r.substr(Ru,10).toLowerCase()?(e=r.substr(Ru,10),Ru+=10):(e=s,0===xu&&$u(J))),e!==s&&Ha()!==s?((n=Na())===s&&(n=null),n!==s&&Ha()!==s&&(u=vo())!==s?(t=e=function(r,t,e){return {keyword:r.toLowerCase(),symbol:t,value:`'${e.value}'`}}(e,n,u)):(Ru=t,t=s)):(Ru=t,t=s),t===s&&(t=Ru,"compression"===r.substr(Ru,11).toLowerCase()?(e=r.substr(Ru,11),Ru+=11):(e=s,0===xu&&$u(Q)),e!==s&&Ha()!==s?((n=Na())===s&&(n=null),n!==s&&Ha()!==s?(u=Ru,39===r.charCodeAt(Ru)?(o="'",Ru++):(o=s,0===xu&&$u(rr)),o!==s?("zlib"===r.substr(Ru,4).toLowerCase()?(a=r.substr(Ru,4),Ru+=4):(a=s,0===xu&&$u(tr)),a===s&&("lz4"===r.substr(Ru,3).toLowerCase()?(a=r.substr(Ru,3),Ru+=3):(a=s,0===xu&&$u(er)),a===s&&("none"===r.substr(Ru,4).toLowerCase()?(a=r.substr(Ru,4),Ru+=4):(a=s,0===xu&&$u(I)))),a!==s?(39===r.charCodeAt(Ru)?(i="'",Ru++):(i=s,0===xu&&$u(rr)),i!==s?u=o=[o,a,i]:(Ru=u,u=s)):(Ru=u,u=s)):(Ru=u,u=s),u!==s?(t=e=function(r,t,e){return {keyword:r.toLowerCase(),symbol:t,value:e.join("").toUpperCase()}}(e,n,u)):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s),t===s&&(t=Ru,"engine"===r.substr(Ru,6).toLowerCase()?(e=r.substr(Ru,6),Ru+=6):(e=s,0===xu&&$u(nr)),e!==s&&Ha()!==s?((n=Na())===s&&(n=null),n!==s&&Ha()!==s&&(u=so())!==s?(t=e=function(r,t,e){return {keyword:r.toLowerCase(),symbol:t,value:e.toUpperCase()}}(e,n,u)):(Ru=t,t=s)):(Ru=t,t=s)))),t}function ns(){var t,e,n,u,o;return t=Ru,(e=hs())!==s&&Ha()!==s&&(n=function(){var t,e,n;return t=Ru,"read"===r.substr(Ru,4).toLowerCase()?(e=r.substr(Ru,4),Ru+=4):(e=s,0===xu&&$u(vr)),e!==s&&Ha()!==s?("local"===r.substr(Ru,5).toLowerCase()?(n=r.substr(Ru,5),Ru+=5):(n=s,0===xu&&$u(dr)),n===s&&(n=null),n!==s?(t=e={type:"read",suffix:n&&"local"}):(Ru=t,t=s)):(Ru=t,t=s),t===s&&(t=Ru,"low_priority"===r.substr(Ru,12).toLowerCase()?(e=r.substr(Ru,12),Ru+=12):(e=s,0===xu&&$u(Lr)),e===s&&(e=null),e!==s&&Ha()!==s?("write"===r.substr(Ru,5).toLowerCase()?(n=r.substr(Ru,5),Ru+=5):(n=s,0===xu&&$u(Cr)),n!==s?(t=e={type:"write",prefix:e&&"low_priority"}):(Ru=t,t=s)):(Ru=t,t=s)),t}())!==s?(u=e,o=n,Li.add(`lock::${u.db}::${u.table}`),t=e={table:u,lock_type:o}):(Ru=t,t=s),t}function us(){var t,e,n,u,o,a,i;return (t=is())===s&&(t=Ru,e=Ru,40===r.charCodeAt(Ru)?(n="(",Ru++):(n=s,0===xu&&$u(pr)),n!==s&&(u=Ha())!==s&&(o=us())!==s&&(a=Ha())!==s?(41===r.charCodeAt(Ru)?(i=")",Ru++):(i=s,0===xu&&$u(wr)),i!==s?e=n=[n,u,o,a,i]:(Ru=e,e=s)):(Ru=e,e=s),e!==s&&(e={...e[2],parentheses_symbol:!0}),t=e),t}function ss(){var t,e,n,u,o,a,i,l,f;if(t=Ru,Vo()!==s)if(Ha()!==s)if((e=os())!==s){for(n=[],u=Ru,(o=Ha())!==s&&(a=Ma())!==s&&(i=Ha())!==s&&(l=os())!==s?u=o=[o,a,i,l]:(Ru=u,u=s);u!==s;)n.push(u),u=Ru,(o=Ha())!==s&&(a=Ma())!==s&&(i=Ha())!==s&&(l=os())!==s?u=o=[o,a,i,l]:(Ru=u,u=s);n!==s?(t=c(e,n)):(Ru=t,t=s);}else Ru=t,t=s;else Ru=t,t=s;else Ru=t,t=s;return t===s&&(t=Ru,Ha()!==s&&Vo()!==s&&(e=Ha())!==s&&(n=function(){var t,e,n,u;t=Ru,"RECURSIVE"===r.substr(Ru,9)?(e="RECURSIVE",Ru+=9):(e=s,0===xu&&$u(Zt));e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s);return t}())!==s&&(u=Ha())!==s&&(o=os())!==s?((f=o).recursive=!0,t=[f]):(Ru=t,t=s)),t}function os(){var r,t,e,n;return r=Ru,(t=so())!==s&&Ha()!==s?((e=as())===s&&(e=null),e!==s&&Ha()!==s&&Fo()!==s&&Ha()!==s&&ka()!==s&&Ha()!==s&&(n=ju())!==s&&Ha()!==s&&$a()!==s?(r=t={name:t,stmt:n,columns:e}):(Ru=r,r=s)):(Ru=r,r=s),r}function as(){var r,t,e,n,u,o,a,i;if(r=Ru,ka()!==s)if(Ha()!==s)if((t=uo())!==s){for(e=[],n=Ru,(u=Ha())!==s&&(o=Ma())!==s&&(a=Ha())!==s&&(i=uo())!==s?n=u=[u,o,a,i]:(Ru=n,n=s);n!==s;)e.push(n),n=Ru,(u=Ha())!==s&&(o=Ma())!==s&&(a=Ha())!==s&&(i=uo())!==s?n=u=[u,o,a,i]:(Ru=n,n=s);e!==s&&(n=Ha())!==s&&(u=$a())!==s?(r=c(t,e)):(Ru=r,r=s);}else Ru=r,r=s;else Ru=r,r=s;else Ru=r,r=s;return r}function is(){var t,e,n,u,o,a,i,c,l,f,b;return t=Ru,Ha()!==s?((e=ss())===s&&(e=null),e!==s&&Ha()!==s&&function(){var t,e,n,u;t=Ru,"select"===r.substr(Ru,6).toLowerCase()?(e=r.substr(Ru,6),Ru+=6):(e=s,0===xu&&$u(Yt));e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s);return t}()!==s&&Ga()!==s?((n=function(){var r,t,e,n,u,o;if(r=Ru,(t=cs())!==s){for(e=[],n=Ru,(u=Ha())!==s&&(o=cs())!==s?n=u=[u,o]:(Ru=n,n=s);n!==s;)e.push(n),n=Ru,(u=Ha())!==s&&(o=cs())!==s?n=u=[u,o]:(Ru=n,n=s);e!==s?(t=function(r,t){const e=[r];for(let r=0,n=t.length;r<n;++r)e.push(t[r][1]);return e}(t,e),r=t):(Ru=r,r=s);}else Ru=r,r=s;return r}())===s&&(n=null),n!==s&&Ha()!==s?((u=zo())===s&&(u=null),u!==s&&Ha()!==s&&(o=ls())!==s&&Ha()!==s?((a=vs())===s&&(a=null),a!==s&&Ha()!==s?((i=ms())===s&&(i=null),i!==s&&Ha()!==s?((c=function(){var t,e,n;t=Ru,(e=function(){var t,e,n,u;t=Ru,"group"===r.substr(Ru,5).toLowerCase()?(e=r.substr(Ru,5),Ru+=5):(e=s,0===xu&&$u(Ae));e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s);return t}())!==s&&Ha()!==s&&Ko()!==s&&Ha()!==s&&(n=ks())!==s?(e=n.value,t=e):(Ru=t,t=s);return t}())===s&&(c=null),c!==s&&Ha()!==s?((l=function(){var t,e;t=Ru,function(){var t,e,n,u;t=Ru,"having"===r.substr(Ru,6).toLowerCase()?(e=r.substr(Ru,6),Ru+=6):(e=s,0===xu&&$u(me));e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s);return t}()!==s&&Ha()!==s&&(e=Hs())!==s?(t=e):(Ru=t,t=s);return t}())===s&&(l=null),l!==s&&Ha()!==s?((f=Ss())===s&&(f=null),f!==s&&Ha()!==s?((b=Rs())===s&&(b=null),b!==s?(t=function(r,t,e,n,u,s,o,a,i,c){return u&&u.forEach(r=>r.table&&Li.add(`select::${r.db}::${r.table}`)),{with:r,type:"select",options:t,distinct:e,columns:n,from:u,where:s,groupby:o,having:a,orderby:i,limit:c}}(e,n,u,o,a,i,c,l,f,b)):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s),t}function cs(){var e;return (e=function(){var t;"sql_calc_found_rows"===r.substr(Ru,19).toLowerCase()?(t=r.substr(Ru,19),Ru+=19):(t=s,0===xu&&$u(su));return t}())===s&&((e=function(){var t;"sql_cache"===r.substr(Ru,9).toLowerCase()?(t=r.substr(Ru,9),Ru+=9):(t=s,0===xu&&$u(ou));return t}())===s&&(e=function(){var t;"sql_no_cache"===r.substr(Ru,12).toLowerCase()?(t=r.substr(Ru,12),Ru+=12):(t=s,0===xu&&$u(au));return t}()),e===s&&(e=function(){var t;"sql_big_result"===r.substr(Ru,14).toLowerCase()?(t=r.substr(Ru,14),Ru+=14):(t=s,0===xu&&$u(cu));return t}())===s&&(e=function(){var t;"sql_small_result"===r.substr(Ru,16).toLowerCase()?(t=r.substr(Ru,16),Ru+=16):(t=s,0===xu&&$u(iu));return t}())===s&&(e=function(){var t;"sql_buffer_result"===r.substr(Ru,17).toLowerCase()?(t=r.substr(Ru,17),Ru+=17):(t=s,0===xu&&$u(lu));return t}())),e!==s&&(e=e),e}function ls(){var r,t,e,n,u,o,a,i,l,f;if(r=Ru,(t=Zo())===s&&(t=Ru,(e=Da())!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s),t===s&&(t=Da())),t!==s){for(e=[],n=Ru,(u=Ha())!==s&&(o=Ma())!==s&&(a=Ha())!==s&&(i=fs())!==s?n=u=[u,o,a,i]:(Ru=n,n=s);n!==s;)e.push(n),n=Ru,(u=Ha())!==s&&(o=Ma())!==s&&(a=Ha())!==s&&(i=fs())!==s?n=u=[u,o,a,i]:(Ru=n,n=s);e!==s?(l=t,f=e,Ci.add("select::null::(.*)"),r=t=f&&f.length>0?(l[0]={expr:{type:"column_ref",table:null,column:"*"},as:null},li(l[0],f)):l[0]):(Ru=r,r=s);}else Ru=r,r=s;if(r===s)if(r=Ru,(t=fs())!==s){for(e=[],n=Ru,(u=Ha())!==s&&(o=Ma())!==s&&(a=Ha())!==s&&(i=fs())!==s?n=u=[u,o,a,i]:(Ru=n,n=s);n!==s;)e.push(n),n=Ru,(u=Ha())!==s&&(o=Ma())!==s&&(a=Ha())!==s&&(i=fs())!==s?n=u=[u,o,a,i]:(Ru=n,n=s);e!==s?(r=t=c(t,e)):(Ru=r,r=s);}else Ru=r,r=s;return r}function fs(){var r,t,e,n;return r=Ru,(t=eo())!==s&&Ha()!==s&&(e=Ua())!==s&&Ha()!==s&&Da()!==s?(n=t,Ci.add(`select::${n}::(.*)`),r=t={expr:{type:"column_ref",table:n,column:"*"},as:null}):(Ru=r,r=s),r===s&&(r=Ru,(t=Hs())!==s&&Ha()!==s?((e=bs())===s&&(e=null),e!==s?(r=t={expr:t,as:e}):(Ru=r,r=s)):(Ru=r,r=s)),r}function bs(){var r,t,e;return r=Ru,(t=Fo())!==s&&Ha()!==s&&(e=function(){var r,t;r=Ru,(t=so())!==s?((function(r){if(!0===oi[r.toUpperCase()])throw new Error("Error: "+JSON.stringify(r)+" is a reserved word, can not as alias clause");return !1}(t)?s:void 0)!==s?(r=t=t):(Ru=r,r=s)):(Ru=r,r=s);r===s&&(r=Ru,(t=no())!==s&&(t=t),r=t);return r}())!==s?(r=t=e):(Ru=r,r=s),r===s&&(r=Ru,(t=Fo())===s&&(t=null),t!==s&&Ha()!==s&&(e=eo())!==s?(r=t=e):(Ru=r,r=s)),r}function vs(){var t,e;return t=Ru,function(){var t,e,n,u;t=Ru,"from"===r.substr(Ru,4).toLowerCase()?(e=r.substr(Ru,4),Ru+=4):(e=s,0===xu&&$u(ee));e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s);return t}()!==s&&Ha()!==s&&(e=ws())!==s?(t=e):(Ru=t,t=s),t}function ds(){var r,t,e;return r=Ru,(t=ys())!==s&&Ha()!==s&&Io()!==s&&Ha()!==s&&(e=ys())!==s?(r=t=[t,e]):(Ru=r,r=s),r}function Ls(){var t,e;return t=Ru,Wo()!==s&&Ha()!==s?("btree"===r.substr(Ru,5).toLowerCase()?(e=r.substr(Ru,5),Ru+=5):(e=s,0===xu&&$u(Er)),e===s&&("hash"===r.substr(Ru,4).toLowerCase()?(e=r.substr(Ru,4),Ru+=4):(e=s,0===xu&&$u(hr))),e!==s?(t={keyword:"using",type:e.toLowerCase()}):(Ru=t,t=s)):(Ru=t,t=s),t}function Cs(){var r,t,e,n,u,o;if(r=Ru,(t=ps())!==s){for(e=[],n=Ru,(u=Ha())!==s&&(o=ps())!==s?n=u=[u,o]:(Ru=n,n=s);n!==s;)e.push(n),n=Ru,(u=Ha())!==s&&(o=ps())!==s?n=u=[u,o]:(Ru=n,n=s);e!==s?(r=t=function(r,t){const e=[r];for(let r=0;r<t.length;r++)e.push(t[r][1]);return e}(t,e)):(Ru=r,r=s);}else Ru=r,r=s;return r}function ps(){var t,e,n,u,o,a;return t=Ru,(e=function(){var t,e,n,u;t=Ru,"key_block_size"===r.substr(Ru,14).toLowerCase()?(e=r.substr(Ru,14),Ru+=14):(e=s,0===xu&&$u(K));e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="KEY_BLOCK_SIZE"):(Ru=t,t=s)):(Ru=t,t=s);return t}())!==s&&Ha()!==s?((n=Na())===s&&(n=null),n!==s&&Ha()!==s&&(u=wo())!==s?(o=n,a=u,t=e={type:e.toLowerCase(),symbol:o,expr:a}):(Ru=t,t=s)):(Ru=t,t=s),t===s&&(t=Ls())===s&&(t=Ru,"with"===r.substr(Ru,4).toLowerCase()?(e=r.substr(Ru,4),Ru+=4):(e=s,0===xu&&$u(Ar)),e!==s&&Ha()!==s?("parser"===r.substr(Ru,6).toLowerCase()?(n=r.substr(Ru,6),Ru+=6):(n=s,0===xu&&$u(yr)),n!==s&&Ha()!==s&&(u=so())!==s?(t=e={type:"with parser",expr:u}):(Ru=t,t=s)):(Ru=t,t=s),t===s&&(t=Ru,"visible"===r.substr(Ru,7).toLowerCase()?(e=r.substr(Ru,7),Ru+=7):(e=s,0===xu&&$u(Tr)),e===s&&("invisible"===r.substr(Ru,9).toLowerCase()?(e=r.substr(Ru,9),Ru+=9):(e=s,0===xu&&$u(mr))),e!==s&&(e=function(r){return {type:r.toLowerCase(),expr:r.toLowerCase()}}(e)),(t=e)===s&&(t=Ya()))),t}function ws(){var r,t,e,n;if(r=Ru,(t=hs())!==s){for(e=[],n=Es();n!==s;)e.push(n),n=Es();e!==s?(r=t=Sr(t,e)):(Ru=r,r=s);}else Ru=r,r=s;return r}function Es(){var r,t,e;return r=Ru,Ha()!==s&&(t=Ma())!==s&&Ha()!==s&&(e=hs())!==s?(r=e):(Ru=r,r=s),r===s&&(r=Ru,Ha()!==s&&(t=function(){var r,t,e,n,u,o,a,i,c,l,f;if(r=Ru,(t=As())!==s)if(Ha()!==s)if((e=hs())!==s)if(Ha()!==s)if((n=Wo())!==s)if(Ha()!==s)if(ka()!==s)if(Ha()!==s)if((u=so())!==s){for(o=[],a=Ru,(i=Ha())!==s&&(c=Ma())!==s&&(l=Ha())!==s&&(f=so())!==s?a=i=[i,c,l,f]:(Ru=a,a=s);a!==s;)o.push(a),a=Ru,(i=Ha())!==s&&(c=Ma())!==s&&(l=Ha())!==s&&(f=so())!==s?a=i=[i,c,l,f]:(Ru=a,a=s);o!==s&&(a=Ha())!==s&&(i=$a())!==s?(b=t,d=u,L=o,(v=e).join=b,v.using=li(d,L),r=t=v):(Ru=r,r=s);}else Ru=r,r=s;else Ru=r,r=s;else Ru=r,r=s;else Ru=r,r=s;else Ru=r,r=s;else Ru=r,r=s;else Ru=r,r=s;else Ru=r,r=s;else Ru=r,r=s;var b,v,d,L;r===s&&(r=Ru,(t=As())!==s&&Ha()!==s&&(e=hs())!==s&&Ha()!==s?((n=Ts())===s&&(n=null),n!==s?(t=function(r,t,e){return t.join=r,t.on=e,t}(t,e,n),r=t):(Ru=r,r=s)):(Ru=r,r=s),r===s&&(r=Ru,(t=As())!==s&&Ha()!==s&&(e=ka())!==s&&Ha()!==s&&(n=ju())!==s&&Ha()!==s&&$a()!==s&&Ha()!==s?((u=bs())===s&&(u=null),u!==s&&(o=Ha())!==s?((a=Ts())===s&&(a=null),a!==s?(t=function(r,t,e,n){return t.parentheses=!0,{expr:t,as:e,join:r,on:n}}(t,n,u,a),r=t):(Ru=r,r=s)):(Ru=r,r=s)):(Ru=r,r=s)));return r}())!==s?(r=t):(Ru=r,r=s)),r}function hs(){var t,e,n,u,o,a;return t=Ru,(e=function(){var t;"dual"===r.substr(Ru,4).toLowerCase()?(t=r.substr(Ru,4),Ru+=4):(t=s,0===xu&&$u(Zn));return t}())!==s&&(e={type:"dual"}),(t=e)===s&&(t=Ru,(e=ys())!==s&&Ha()!==s?((n=bs())===s&&(n=null),n!==s?(a=n,t=e="var"===(o=e).type?(o.as=a,o):{db:o.db,table:o.table,as:a}):(Ru=t,t=s)):(Ru=t,t=s),t===s&&(t=Ru,(e=ka())!==s&&Ha()!==s&&(n=ju())!==s&&Ha()!==s&&$a()!==s&&Ha()!==s?((u=bs())===s&&(u=null),u!==s?(t=e=function(r,t){return r.parentheses=!0,{expr:r,as:t}}(n,u)):(Ru=t,t=s)):(Ru=t,t=s))),t}function As(){var t,e,n,u;return t=Ru,(e=function(){var t,e,n,u;t=Ru,"left"===r.substr(Ru,4).toLowerCase()?(e=r.substr(Ru,4),Ru+=4):(e=s,0===xu&&$u(le));e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s);return t}())!==s&&(n=Ha())!==s?((u=Yo())===s&&(u=null),u!==s&&Ha()!==s&&jo()!==s?(t=e="LEFT JOIN"):(Ru=t,t=s)):(Ru=t,t=s),t===s&&(t=Ru,(e=function(){var t,e,n,u;t=Ru,"right"===r.substr(Ru,5).toLowerCase()?(e=r.substr(Ru,5),Ru+=5):(e=s,0===xu&&$u(fe));e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s);return t}())!==s&&(n=Ha())!==s?((u=Yo())===s&&(u=null),u!==s&&Ha()!==s&&jo()!==s?(t=e="RIGHT JOIN"):(Ru=t,t=s)):(Ru=t,t=s),t===s&&(t=Ru,(e=function(){var t,e,n,u;t=Ru,"full"===r.substr(Ru,4).toLowerCase()?(e=r.substr(Ru,4),Ru+=4):(e=s,0===xu&&$u(be));e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s);return t}())!==s&&(n=Ha())!==s?((u=Yo())===s&&(u=null),u!==s&&Ha()!==s&&jo()!==s?(t=e="FULL JOIN"):(Ru=t,t=s)):(Ru=t,t=s),t===s&&(t=Ru,e=Ru,(n=function(){var t,e,n,u;t=Ru,"inner"===r.substr(Ru,5).toLowerCase()?(e=r.substr(Ru,5),Ru+=5):(e=s,0===xu&&$u(ve));e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s);return t}())!==s&&(u=Ha())!==s?e=n=[n,u]:(Ru=e,e=s),e===s&&(e=null),e!==s&&(n=jo())!==s?(t=e="INNER JOIN"):(Ru=t,t=s)))),t}function ys(){var r,t,e,n,u,o,a,i;return r=Ru,(t=eo())!==s?(e=Ru,(n=Ha())!==s&&(u=Ua())!==s&&(o=Ha())!==s&&(a=eo())!==s?e=n=[n,u,o,a]:(Ru=e,e=s),e===s&&(e=null),e!==s?(r=t=function(r,t){const e={db:null,table:r};return null!==t&&(e.db=r,e.table=t[3]),e}(t,e)):(Ru=r,r=s)):(Ru=r,r=s),r===s&&(r=Ru,(t=ei())!==s&&((i=t).db=null,i.table=i.name,t=i),r=t),r}function Ts(){var r,t;return r=Ru,Go()!==s&&Ha()!==s&&(t=Hs())!==s?(r=t):(Ru=r,r=s),r}function ms(){var t,e;return t=Ru,function(){var t,e,n,u;t=Ru,"where"===r.substr(Ru,5).toLowerCase()?(e=r.substr(Ru,5),Ru+=5):(e=s,0===xu&&$u(he));e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s);return t}()!==s&&Ha()!==s?((e=function(){var r,t,e,n,u,o,a,i;if(r=Ru,(t=Gs())!==s){for(e=[],n=Ru,(u=Ha())!==s?((o=ua())===s&&(o=sa()),o!==s&&(a=Ha())!==s&&(i=Gs())!==s?n=u=[u,o,a,i]:(Ru=n,n=s)):(Ru=n,n=s);n!==s;)e.push(n),n=Ru,(u=Ha())!==s?((o=ua())===s&&(o=sa()),o!==s&&(a=Ha())!==s&&(i=Gs())!==s?n=u=[u,o,a,i]:(Ru=n,n=s)):(Ru=n,n=s);e!==s?(t=fi(t,e),r=t):(Ru=r,r=s);}else Ru=r,r=s;return r}())===s&&(e=Hs()),e!==s?(t=e):(Ru=t,t=s)):(Ru=t,t=s),t}function Ss(){var t,e;return t=Ru,function(){var t,e,n,u;t=Ru,"order"===r.substr(Ru,5).toLowerCase()?(e=r.substr(Ru,5),Ru+=5):(e=s,0===xu&&$u(Te));e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s);return t}()!==s&&Ha()!==s&&Ko()!==s&&Ha()!==s&&(e=function(){var r,t,e,n,u,o,a,i;if(r=Ru,(t=Is())!==s){for(e=[],n=Ru,(u=Ha())!==s&&(o=Ma())!==s&&(a=Ha())!==s&&(i=Is())!==s?n=u=[u,o,a,i]:(Ru=n,n=s);n!==s;)e.push(n),n=Ru,(u=Ha())!==s&&(o=Ma())!==s&&(a=Ha())!==s&&(i=Is())!==s?n=u=[u,o,a,i]:(Ru=n,n=s);e!==s?(t=c(t,e),r=t):(Ru=r,r=s);}else Ru=r,r=s;return r}())!==s?(t=e):(Ru=t,t=s),t}function Is(){var t,e,n;return t=Ru,(e=Hs())!==s&&Ha()!==s?((n=qo())===s&&(n=function(){var t,e,n,u;t=Ru,"asc"===r.substr(Ru,3).toLowerCase()?(e=r.substr(Ru,3),Ru+=3):(e=s,0===xu&&$u(Ne));e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="ASC"):(Ru=t,t=s)):(Ru=t,t=s);return t}()),n===s&&(n=null),n!==s?(t=e=function(r,t){const e={expr:r,type:"ASC"};return "DESC"===t&&(e.type="DESC"),e}(e,n)):(Ru=t,t=s)):(Ru=t,t=s),t}function Ns(){var r;return (r=wo())===s&&(r=co()),r}function Rs(){var t,e,n,u,o,a;return t=Ru,function(){var t,e,n,u;t=Ru,"limit"===r.substr(Ru,5).toLowerCase()?(e=r.substr(Ru,5),Ru+=5):(e=s,0===xu&&$u(Se));e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s);return t}()!==s&&Ha()!==s&&(e=Ns())!==s&&Ha()!==s?(n=Ru,(u=Ma())===s&&(u=function(){var t,e,n,u;t=Ru,"offset"===r.substr(Ru,6).toLowerCase()?(e=r.substr(Ru,6),Ru+=6):(e=s,0===xu&&$u(Ie));e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="OFFSET"):(Ru=t,t=s)):(Ru=t,t=s);return t}()),u!==s&&(o=Ha())!==s&&(a=Ns())!==s?n=u=[u,o,a]:(Ru=n,n=s),n===s&&(n=null),n!==s?(t=function(r,t){const e=[r];return t&&e.push(t[2]),{seperator:t&&t[0]&&t[0].toLowerCase()||"",value:e}}(e,n)):(Ru=t,t=s)):(Ru=t,t=s),t}function _s(){var r,t,e,n,u,o,a,i;if(r=Ru,(t=gs())!==s){for(e=[],n=Ru,(u=Ha())!==s&&(o=Ma())!==s&&(a=Ha())!==s&&(i=gs())!==s?n=u=[u,o,a,i]:(Ru=n,n=s);n!==s;)e.push(n),n=Ru,(u=Ha())!==s&&(o=Ma())!==s&&(a=Ha())!==s&&(i=gs())!==s?n=u=[u,o,a,i]:(Ru=n,n=s);e!==s?(r=t=c(t,e)):(Ru=r,r=s);}else Ru=r,r=s;return r}function gs(){var t,e,n,u,o,a,i,c,l;return t=Ru,e=Ru,(n=eo())!==s&&(u=Ha())!==s&&(o=Ua())!==s?e=n=[n,u,o]:(Ru=e,e=s),e===s&&(e=null),e!==s&&(n=Ha())!==s&&(u=uo())!==s&&(o=Ha())!==s?(61===r.charCodeAt(Ru)?(a="=",Ru++):(a=s,0===xu&&$u(Ir)),a!==s&&Ha()!==s&&(i=Zs())!==s?(t=e={column:u,value:i,table:(l=e)&&l[0]}):(Ru=t,t=s)):(Ru=t,t=s),t===s&&(t=Ru,e=Ru,(n=eo())!==s&&(u=Ha())!==s&&(o=Ua())!==s?e=n=[n,u,o]:(Ru=e,e=s),e===s&&(e=null),e!==s&&(n=Ha())!==s&&(u=uo())!==s&&(o=Ha())!==s?(61===r.charCodeAt(Ru)?(a="=",Ru++):(a=s,0===xu&&$u(Ir)),a!==s&&Ha()!==s&&(i=Xo())!==s&&Ha()!==s&&ka()!==s&&Ha()!==s&&(c=to())!==s&&Ha()!==s&&$a()!==s?(t=e=function(r,t,e){return {column:t,value:e,table:r&&r[0],keyword:"values"}}(e,u,c)):(Ru=t,t=s)):(Ru=t,t=s)),t}function Os(){var r;return (r=function(){var r,t;r=Ru,Xo()!==s&&Ha()!==s&&(t=function(){var r,t,e,n,u,o,a,i;if(r=Ru,(t=Ds())!==s){for(e=[],n=Ru,(u=Ha())!==s&&(o=Ma())!==s&&(a=Ha())!==s&&(i=Ds())!==s?n=u=[u,o,a,i]:(Ru=n,n=s);n!==s;)e.push(n),n=Ru,(u=Ha())!==s&&(o=Ma())!==s&&(a=Ha())!==s&&(i=Ds())!==s?n=u=[u,o,a,i]:(Ru=n,n=s);e!==s?(t=c(t,e),r=t):(Ru=r,r=s);}else Ru=r,r=s;return r}())!==s?(r=t):(Ru=r,r=s);return r}())===s&&(r=is()),r}function xs(){var r,t,e,n,u,o,a,i,c;if(r=Ru,Do()!==s)if(Ha()!==s)if((t=ka())!==s)if(Ha()!==s)if((e=so())!==s){for(n=[],u=Ru,(o=Ha())!==s&&(a=Ma())!==s&&(i=Ha())!==s&&(c=so())!==s?u=o=[o,a,i,c]:(Ru=u,u=s);u!==s;)n.push(u),u=Ru,(o=Ha())!==s&&(a=Ma())!==s&&(i=Ha())!==s&&(c=so())!==s?u=o=[o,a,i,c]:(Ru=u,u=s);n!==s&&(u=Ha())!==s&&(o=$a())!==s?(r=li(e,n)):(Ru=r,r=s);}else Ru=r,r=s;else Ru=r,r=s;else Ru=r,r=s;else Ru=r,r=s;else Ru=r,r=s;return r===s&&(r=Ru,Do()!==s&&Ha()!==s&&(t=Ds())!==s?(r=t):(Ru=r,r=s)),r}function Us(){var t,e,n;return t=Ru,Go()!==s&&Ha()!==s?("duplicate"===r.substr(Ru,9).toLowerCase()?(e=r.substr(Ru,9),Ru+=9):(e=s,0===xu&&$u(Nr)),e!==s&&Ha()!==s&&Oa()!==s&&Ha()!==s&&_o()!==s&&Ha()!==s&&(n=_s())!==s?(t={keyword:"on duplicate key update",set:n}):(Ru=t,t=s)):(Ru=t,t=s),t}function Ms(){var t,e;return t=Ru,(e=function(){var t,e,n,u;t=Ru,"insert"===r.substr(Ru,6).toLowerCase()?(e=r.substr(Ru,6),Ru+=6):(e=s,0===xu&&$u(qt));e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s);return t}())!==s&&(e="insert"),(t=e)===s&&(t=Ru,(e=Uo())!==s&&(e="replace"),t=e),t}function Ds(){var r,t;return r=Ru,ka()!==s&&Ha()!==s&&(t=ks())!==s&&Ha()!==s&&$a()!==s?(r=t):(Ru=r,r=s),r}function ks(){var r,t,e,n,u,o,a,i;if(r=Ru,(t=Hs())!==s){for(e=[],n=Ru,(u=Ha())!==s&&(o=Ma())!==s&&(a=Ha())!==s&&(i=Hs())!==s?n=u=[u,o,a,i]:(Ru=n,n=s);n!==s;)e.push(n),n=Ru,(u=Ha())!==s&&(o=Ma())!==s&&(a=Ha())!==s&&(i=Hs())!==s?n=u=[u,o,a,i]:(Ru=n,n=s);e!==s?(r=t=function(r,t){const e={type:"expr_list"};return e.value=li(r,t),e}(t,e)):(Ru=r,r=s);}else Ru=r,r=s;return r}function $s(){var t,e,n;return t=Ru,function(){var t,e,n,u;t=Ru,"interval"===r.substr(Ru,8).toLowerCase()?(e=r.substr(Ru,8),Ru+=8):(e=s,0===xu&&$u(_n));e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="INTERVAL"):(Ru=t,t=s)):(Ru=t,t=s);return t}()!==s&&Ha()!==s&&(e=Hs())!==s&&Ha()!==s&&(n=function(){var t;(t=function(){var t,e,n,u;t=Ru,"year"===r.substr(Ru,4).toLowerCase()?(e=r.substr(Ru,4),Ru+=4):(e=s,0===xu&&$u(gn));e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="YEAR"):(Ru=t,t=s)):(Ru=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Ru,"month"===r.substr(Ru,5).toLowerCase()?(e=r.substr(Ru,5),Ru+=5):(e=s,0===xu&&$u(On));e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="MONTH"):(Ru=t,t=s)):(Ru=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Ru,"day"===r.substr(Ru,3).toLowerCase()?(e=r.substr(Ru,3),Ru+=3):(e=s,0===xu&&$u(xn));e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="DAY"):(Ru=t,t=s)):(Ru=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Ru,"hour"===r.substr(Ru,4).toLowerCase()?(e=r.substr(Ru,4),Ru+=4):(e=s,0===xu&&$u(Un));e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="HOUR"):(Ru=t,t=s)):(Ru=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Ru,"minute"===r.substr(Ru,6).toLowerCase()?(e=r.substr(Ru,6),Ru+=6):(e=s,0===xu&&$u(Mn));e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="MINUTE"):(Ru=t,t=s)):(Ru=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Ru,"second"===r.substr(Ru,6).toLowerCase()?(e=r.substr(Ru,6),Ru+=6):(e=s,0===xu&&$u(Dn));e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="SECOND"):(Ru=t,t=s)):(Ru=t,t=s);return t}());return t}())!==s?(t={type:"interval",expr:e,unit:n.toLowerCase()}):(Ru=t,t=s),t}function Fs(){var t,e,n,u,o,a,i,c,l;if(t=Ru,oa()!==s)if(Ha()!==s)if((e=Hs())===s&&(e=null),e!==s)if(Ha()!==s){if(n=[],(u=Ps())!==s)for(;u!==s;)n.push(u),u=Ps();else n=s;n!==s&&(u=Ha())!==s?((o=function(){var t,e;t=Ru,function(){var t,e,n,u;t=Ru,"else"===r.substr(Ru,4).toLowerCase()?(e=r.substr(Ru,4),Ru+=4):(e=s,0===xu&&$u(Je));e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s);return t}()!==s&&Ha()!==s&&(e=Hs())!==s?(t={type:"else",result:e}):(Ru=t,t=s);return t}())===s&&(o=null),o!==s&&Ha()!==s&&function(){var t,e,n,u;t=Ru,"end"===r.substr(Ru,3).toLowerCase()?(e=r.substr(Ru,3),Ru+=3):(e=s,0===xu&&$u(Qe));e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s);return t}()!==s&&Ha()!==s?((a=oa())===s&&(a=null),a!==s?(i=e,c=n,(l=o)&&c.push(l),t={type:"case",expr:i||null,args:c}):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s);}else Ru=t,t=s;else Ru=t,t=s;else Ru=t,t=s;else Ru=t,t=s;return t}function Ps(){var t,e,n;return t=Ru,function(){var t,e,n,u;t=Ru,"when"===r.substr(Ru,4).toLowerCase()?(e=r.substr(Ru,4),Ru+=4):(e=s,0===xu&&$u(Ze));e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s);return t}()!==s&&Ha()!==s&&(e=Hs())!==s&&Ha()!==s&&function(){var t,e,n,u;t=Ru,"then"===r.substr(Ru,4).toLowerCase()?(e=r.substr(Ru,4),Ru+=4):(e=s,0===xu&&$u(ze));e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s);return t}()!==s&&Ha()!==s&&(n=Hs())!==s?(t={type:"when",cond:e,result:n}):(Ru=t,t=s),t}function Hs(){var r;return (r=function(){var r,t,e,n,u,o,a,i;if(r=Ru,(t=ro())!==s){if(e=[],n=Ru,(u=Ha())!==s&&(o=Pa())!==s&&(a=Ha())!==s&&(i=ro())!==s?n=u=[u,o,a,i]:(Ru=n,n=s),n!==s)for(;n!==s;)e.push(n),n=Ru,(u=Ha())!==s&&(o=Pa())!==s&&(a=Ha())!==s&&(i=ro())!==s?n=u=[u,o,a,i]:(Ru=n,n=s);else e=s;e!==s?(t=fi(t,e),r=t):(Ru=r,r=s);}else Ru=r,r=s;return r}())===s&&(r=function(){var r,t,e,n,u,o;if(r=Ru,(t=zs())!==s){if(e=[],n=Ru,(u=Ha())!==s&&(o=ro())!==s?n=u=[u,o]:(Ru=n,n=s),n!==s)for(;n!==s;)e.push(n),n=Ru,(u=Ha())!==s&&(o=ro())!==s?n=u=[u,o]:(Ru=n,n=s);else e=s;e!==s?(t=ai(t,e[0][1]),r=t):(Ru=r,r=s);}else Ru=r,r=s;return r}())===s&&(r=js())===s&&(r=us()),r}function Gs(){var r,t,e,n,u,o;return r=Ru,(t=ka())===s&&(t=null),t!==s&&Ha()!==s&&(e=js())!==s&&Ha()!==s?((n=$a())===s&&(n=null),n!==s?((function(r,t,e){if(r&&!e||!r&&e)return !0}(t,0,n)?s:void 0)!==s?(u=e,o=n,t&&o&&(u.parentheses=!0),r=t=u):(Ru=r,r=s)):(Ru=r,r=s)):(Ru=r,r=s),r}function js(){var r,t,e,n,u,o,a,i;if(r=Ru,(t=Ys())!==s){for(e=[],n=Ru,(u=Ga())!==s&&(o=sa())!==s&&(a=Ha())!==s&&(i=Ys())!==s?n=u=[u,o,a,i]:(Ru=n,n=s);n!==s;)e.push(n),n=Ru,(u=Ga())!==s&&(o=sa())!==s&&(a=Ha())!==s&&(i=Ys())!==s?n=u=[u,o,a,i]:(Ru=n,n=s);e!==s?(r=t=Rr(t,e)):(Ru=r,r=s);}else Ru=r,r=s;return r}function Ys(){var r,t,e,n,u,o,a,i;if(r=Ru,(t=Bs())!==s){for(e=[],n=Ru,(u=Ga())!==s&&(o=ua())!==s&&(a=Ha())!==s&&(i=Bs())!==s?n=u=[u,o,a,i]:(Ru=n,n=s);n!==s;)e.push(n),n=Ru,(u=Ga())!==s&&(o=ua())!==s&&(a=Ha())!==s&&(i=Bs())!==s?n=u=[u,o,a,i]:(Ru=n,n=s);e!==s?(r=t=Rr(t,e)):(Ru=r,r=s);}else Ru=r,r=s;return r}function Bs(){var t,e,n,u,o;return (t=Xs())===s&&(t=function(){var r,t,e;r=Ru,(t=function(){var r,t,e,n,u;r=Ru,t=Ru,(e=na())!==s&&(n=Ha())!==s&&(u=ea())!==s?t=e=[e,n,u]:(Ru=t,t=s);t!==s&&(t=gr(t));(r=t)===s&&(r=ea());return r}())!==s&&Ha()!==s&&ka()!==s&&Ha()!==s&&(e=ju())!==s&&Ha()!==s&&$a()!==s?(n=t,(u=e).parentheses=!0,t=ai(n,u),r=t):(Ru=r,r=s);var n,u;return r}())===s&&(t=Ru,(e=na())===s&&(e=Ru,33===r.charCodeAt(Ru)?(n="!",Ru++):(n=s,0===xu&&$u(_r)),n!==s?(u=Ru,xu++,61===r.charCodeAt(Ru)?(o="=",Ru++):(o=s,0===xu&&$u(Ir)),xu--,o===s?u=void 0:(Ru=u,u=s),u!==s?e=n=[n,u]:(Ru=e,e=s)):(Ru=e,e=s)),e!==s&&(n=Ha())!==s&&(u=Bs())!==s?(t=e=ai("NOT",u)):(Ru=t,t=s)),t}function Xs(){var t,e,n,u,o;return t=Ru,(e=Zs())!==s&&Ha()!==s?((n=function(){var t;(t=function(){var t,e,n,u,o,a;t=[],e=Ru,(n=Ha())!==s&&(u=Ws())!==s&&(o=Ha())!==s&&(a=Zs())!==s?e=n=[n,u,o,a]:(Ru=e,e=s);if(e!==s)for(;e!==s;)t.push(e),e=Ru,(n=Ha())!==s&&(u=Ws())!==s&&(o=Ha())!==s&&(a=Zs())!==s?e=n=[n,u,o,a]:(Ru=e,e=s);else t=s;t!==s&&(t={type:"arithmetic",tail:t});return t}())===s&&(t=qs())===s&&(t=function(){var r,t,e,n;r=Ru,(t=function(){var r,t,e,n,u;r=Ru,t=Ru,(e=na())!==s&&(n=Ha())!==s&&(u=Jo())!==s?t=e=[e,n,u]:(Ru=t,t=s);t!==s&&(t=gr(t));(r=t)===s&&(r=Jo());return r}())!==s&&Ha()!==s&&(e=Zs())!==s&&Ha()!==s&&ua()!==s&&Ha()!==s&&(n=Zs())!==s?(r=t={op:t,right:{type:"expr_list",value:[e,n]}}):(Ru=r,r=s);return r}())===s&&(t=function(){var r,t,e,n,u;r=Ru,(t=ra())!==s&&(e=Ha())!==s&&(n=Zs())!==s?(r=t={op:"IS",right:n}):(Ru=r,r=s);r===s&&(r=Ru,t=Ru,(e=ra())!==s&&(n=Ha())!==s&&(u=na())!==s?t=e=[e,n,u]:(Ru=t,t=s),t!==s&&(e=Ha())!==s&&(n=Zs())!==s?(t=function(r){return {op:"IS NOT",right:r}}(n),r=t):(Ru=r,r=s));return r}())===s&&(t=Ks())===s&&(t=function(){var t,e,n,u;t=Ru,(e=function(){var t,e,n;t=Ru,(e=na())===s&&(e=null);e!==s&&Ha()!==s?((n=function(){var t,e,n,u;t=Ru,"regexp"===r.substr(Ru,6).toLowerCase()?(e=r.substr(Ru,6),Ru+=6):(e=s,0===xu&&$u($e));e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="REGEXP"):(Ru=t,t=s)):(Ru=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=Ru,"rlike"===r.substr(Ru,5).toLowerCase()?(e=r.substr(Ru,5),Ru+=5):(e=s,0===xu&&$u(ke));e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="RLIKE"):(Ru=t,t=s)):(Ru=t,t=s);return t}()),n!==s?(o=n,t=e=(u=e)?`${u} ${o}`:o):(Ru=t,t=s)):(Ru=t,t=s);var u,o;return t}())!==s&&Ha()!==s?("binary"===r.substr(Ru,6).toLowerCase()?(n=r.substr(Ru,6),Ru+=6):(n=s,0===xu&&$u(ur)),n===s&&(n=null),n!==s&&Ha()!==s&&(u=vo())!==s?(o=e,t=e={op:(a=n)?`${o} ${a}`:o,right:u}):(Ru=t,t=s)):(Ru=t,t=s);var o,a;return t}());return t}())===s&&(n=null),n!==s?(u=e,t=e=null===(o=n)?u:"arithmetic"===o.type?fi(u,o.tail):ii(o.op,u,o.right)):(Ru=t,t=s)):(Ru=t,t=s),t===s&&(t=vo())===s&&(t=to()),t}function Ws(){var t;return ">="===r.substr(Ru,2)?(t=">=",Ru+=2):(t=s,0===xu&&$u(Or)),t===s&&(62===r.charCodeAt(Ru)?(t=">",Ru++):(t=s,0===xu&&$u(xr)),t===s&&("<="===r.substr(Ru,2)?(t="<=",Ru+=2):(t=s,0===xu&&$u(Ur)),t===s&&("<>"===r.substr(Ru,2)?(t="<>",Ru+=2):(t=s,0===xu&&$u(Mr)),t===s&&(60===r.charCodeAt(Ru)?(t="<",Ru++):(t=s,0===xu&&$u(Dr)),t===s&&(61===r.charCodeAt(Ru)?(t="=",Ru++):(t=s,0===xu&&$u(Ir)),t===s&&("!="===r.substr(Ru,2)?(t="!=",Ru+=2):(t=s,0===xu&&$u(kr)))))))),t}function Vs(){var r,t,e,n,u;return r=Ru,t=Ru,(e=na())!==s&&(n=Ha())!==s&&(u=Qo())!==s?t=e=[e,n,u]:(Ru=t,t=s),t!==s&&(t=gr(t)),(r=t)===s&&(r=Qo()),r}function Ks(){var r,t,e;return r=Ru,(t=function(){var r,t,e,n,u;return r=Ru,t=Ru,(e=na())!==s&&(n=Ha())!==s&&(u=ta())!==s?t=e=[e,n,u]:(Ru=t,t=s),t!==s&&(t=gr(t)),(r=t)===s&&(r=ta()),r}())!==s&&Ha()!==s?((e=fo())===s&&(e=Xs()),e!==s?(r=t={op:t,right:e}):(Ru=r,r=s)):(Ru=r,r=s),r}function qs(){var r,t,e,n;return r=Ru,(t=Vs())!==s&&Ha()!==s&&(e=ka())!==s&&Ha()!==s&&(n=ks())!==s&&Ha()!==s&&$a()!==s?(r=t={op:t,right:n}):(Ru=r,r=s),r===s&&(r=Ru,(t=Vs())!==s&&Ha()!==s?((e=ei())===s&&(e=vo()),e!==s?(r=t=function(r,t){return {op:r,right:t}}(t,e)):(Ru=r,r=s)):(Ru=r,r=s)),r}function Zs(){var r,t,e,n,u,o,a,i;if(r=Ru,(t=Js())!==s){for(e=[],n=Ru,(u=Ha())!==s&&(o=zs())!==s&&(a=Ha())!==s&&(i=Js())!==s?n=u=[u,o,a,i]:(Ru=n,n=s);n!==s;)e.push(n),n=Ru,(u=Ha())!==s&&(o=zs())!==s&&(a=Ha())!==s&&(i=Js())!==s?n=u=[u,o,a,i]:(Ru=n,n=s);e!==s?(r=t=Rr(t,e)):(Ru=r,r=s);}else Ru=r,r=s;return r}function zs(){var t;return 43===r.charCodeAt(Ru)?(t="+",Ru++):(t=s,0===xu&&$u($r)),t===s&&(45===r.charCodeAt(Ru)?(t="-",Ru++):(t=s,0===xu&&$u(Fr))),t}function Js(){var r,t,e,n,u,o,a,i;if(r=Ru,(t=ro())!==s){for(e=[],n=Ru,(u=Ha())!==s&&(o=Qs())!==s&&(a=Ha())!==s&&(i=ro())!==s?n=u=[u,o,a,i]:(Ru=n,n=s);n!==s;)e.push(n),n=Ru,(u=Ha())!==s&&(o=Qs())!==s&&(a=Ha())!==s&&(i=ro())!==s?n=u=[u,o,a,i]:(Ru=n,n=s);e!==s?(r=t=fi(t,e)):(Ru=r,r=s);}else Ru=r,r=s;return r}function Qs(){var t;return 42===r.charCodeAt(Ru)?(t="*",Ru++):(t=s,0===xu&&$u(Pr)),t===s&&(47===r.charCodeAt(Ru)?(t="/",Ru++):(t=s,0===xu&&$u(Hr)),t===s&&(37===r.charCodeAt(Ru)?(t="%",Ru++):(t=s,0===xu&&$u(Gr)))),t}function ro(){var t,e,n,u,o,a,i,c,l,f,b;if((t=function(){var t,e,n,u,o,a,i;t=Ru,(e=aa())!==s&&Ha()!==s&&ka()!==s&&Ha()!==s&&(n=Hs())!==s&&Ha()!==s&&Fo()!==s&&Ha()!==s&&(u=ui())!==s&&Ha()!==s&&(o=$a())!==s?(t=e={type:"cast",expr:n,target:u}):(Ru=t,t=s);t===s&&(t=Ru,(e=aa())!==s&&Ha()!==s&&ka()!==s&&Ha()!==s&&(n=Hs())!==s&&Ha()!==s&&Fo()!==s&&Ha()!==s&&(u=fa())!==s&&Ha()!==s&&(o=ka())!==s&&Ha()!==s&&(a=Eo())!==s&&Ha()!==s&&$a()!==s&&Ha()!==s&&(i=$a())!==s?(e=function(r,t){return {type:"cast",expr:r,target:{dataType:"DECIMAL("+t+")"}}}(n,a),t=e):(Ru=t,t=s),t===s&&(t=Ru,(e=aa())!==s&&Ha()!==s&&ka()!==s&&Ha()!==s&&(n=Hs())!==s&&Ha()!==s&&Fo()!==s&&Ha()!==s&&(u=fa())!==s&&Ha()!==s&&(o=ka())!==s&&Ha()!==s&&(a=Eo())!==s&&Ha()!==s&&Ma()!==s&&Ha()!==s&&(i=Eo())!==s&&Ha()!==s&&$a()!==s&&Ha()!==s&&$a()!==s?(e=function(r,t,e){return {type:"cast",expr:r,target:{dataType:"DECIMAL("+t+", "+e+")"}}}(n,a,i),t=e):(Ru=t,t=s),t===s&&(t=Ru,(e=aa())!==s&&Ha()!==s&&ka()!==s&&Ha()!==s&&(n=Hs())!==s&&Ha()!==s&&Fo()!==s&&Ha()!==s&&(u=function(){var t;(t=function(){var t,e,n,u;t=Ru,"signed"===r.substr(Ru,6).toLowerCase()?(e=r.substr(Ru,6),Ru+=6):(e=s,0===xu&&$u(sn));e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="SIGNED"):(Ru=t,t=s)):(Ru=t,t=s);return t}())===s&&(t=ba());return t}())!==s&&Ha()!==s?((o=da())===s&&(o=null),o!==s&&Ha()!==s&&(a=$a())!==s?(e=function(r,t,e){return {type:"cast",expr:r,target:{dataType:t+(e?" "+e:"")}}}(n,u,o),t=e):(Ru=t,t=s)):(Ru=t,t=s))));return t}())===s&&(t=fo())===s&&(t=function(){var t;(t=function(){var t,e,n,u;t=Ru,(e=function(){var t,e,n,u;t=Ru,"count"===r.substr(Ru,5).toLowerCase()?(e=r.substr(Ru,5),Ru+=5):(e=s,0===xu&&$u(je));e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="COUNT"):(Ru=t,t=s)):(Ru=t,t=s);return t}())===s&&(e=function(){var t,e,n,u;t=Ru,"group_concat"===r.substr(Ru,12).toLowerCase()?(e=r.substr(Ru,12),Ru+=12):(e=s,0===xu&&$u(Ye));e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="GROUP_CONCAT"):(Ru=t,t=s)):(Ru=t,t=s);return t}());e!==s&&Ha()!==s&&ka()!==s&&Ha()!==s&&(n=function(){var t,e,n,u;t=Ru,(e=function(){var e;42===r.charCodeAt(Ru)?(e="*",Ru++):(e=s,0===xu&&$u(Pr));e!==s&&(e={type:"star",value:"*"});return e}())!==s&&(e={expr:e});(t=e)===s&&(t=Ru,(e=zo())===s&&(e=null),e!==s&&Ha()!==s&&(n=to())!==s?(t=e={distinct:e,expr:n}):(Ru=t,t=s),t===s&&(t=Ru,(e=zo())===s&&(e=null),e!==s&&Ha()!==s&&(n=ka())!==s&&Ha()!==s&&(u=to())!==s&&Ha()!==s&&$a()!==s?(e=function(r,t){return t.parentheses=!0,{distinct:r,expr:t}}(e,u),t=e):(Ru=t,t=s)));return t}())!==s&&Ha()!==s&&$a()!==s&&Ha()!==s?((u=lo())===s&&(u=null),u!==s?(e=function(r,t,e){return {type:"aggr_func",name:r,args:t,over:e}}(e,n,u),t=e):(Ru=t,t=s)):(Ru=t,t=s);return t}())===s&&(t=function(){var t,e,n;t=Ru,(e=function(){var t;(t=function(){var t,e,n,u;t=Ru,"sum"===r.substr(Ru,3).toLowerCase()?(e=r.substr(Ru,3),Ru+=3):(e=s,0===xu&&$u(We));e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="SUM"):(Ru=t,t=s)):(Ru=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Ru,"max"===r.substr(Ru,3).toLowerCase()?(e=r.substr(Ru,3),Ru+=3):(e=s,0===xu&&$u(Be));e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="MAX"):(Ru=t,t=s)):(Ru=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Ru,"min"===r.substr(Ru,3).toLowerCase()?(e=r.substr(Ru,3),Ru+=3):(e=s,0===xu&&$u(Xe));e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="MIN"):(Ru=t,t=s)):(Ru=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Ru,"avg"===r.substr(Ru,3).toLowerCase()?(e=r.substr(Ru,3),Ru+=3):(e=s,0===xu&&$u(Ve));e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="AVG"):(Ru=t,t=s)):(Ru=t,t=s);return t}());return t}())!==s&&Ha()!==s&&ka()!==s&&Ha()!==s&&(n=Zs())!==s&&Ha()!==s&&$a()!==s?(t=e={type:"aggr_func",name:e,args:{expr:n}}):(Ru=t,t=s);return t}());return t}())===s&&(t=function(){var t,e,n,u;t=Ru,(e=Qa())!==s&&Ha()!==s&&ka()!==s&&Ha()!==s?((n=ks())===s&&(n=null),n!==s&&Ha()!==s&&$a()!==s&&Ha()!==s?((u=lo())===s&&(u=null),u!==s?(e=function(r,t,e){return {type:"function",name:r,args:t||{type:"expr_list",value:[]},over:e}}(e,n,u),t=e):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s);t===s&&(t=Ru,(e=function(){var t;(t=function(){var t,e,n,u;t=Ru,"current_date"===r.substr(Ru,12).toLowerCase()?(e=r.substr(Ru,12),Ru+=12):(e=s,0===xu&&$u(Rn));e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="CURRENT_DATE"):(Ru=t,t=s)):(Ru=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Ru,"current_time"===r.substr(Ru,12).toLowerCase()?(e=r.substr(Ru,12),Ru+=12):(e=s,0===xu&&$u(kn));e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="CURRENT_TIME"):(Ru=t,t=s)):(Ru=t,t=s);return t}())===s&&(t=ma())===s&&(t=function(){var t,e,n,u;t=Ru,"current_user"===r.substr(Ru,12).toLowerCase()?(e=r.substr(Ru,12),Ru+=12):(e=s,0===xu&&$u(Fn));e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="CURRENT_USER"):(Ru=t,t=s)):(Ru=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Ru,"user"===r.substr(Ru,4).toLowerCase()?(e=r.substr(Ru,4),Ru+=4):(e=s,0===xu&&$u(Nn));e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="USER"):(Ru=t,t=s)):(Ru=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Ru,"session_user"===r.substr(Ru,12).toLowerCase()?(e=r.substr(Ru,12),Ru+=12):(e=s,0===xu&&$u(Pn));e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="SESSION_USER"):(Ru=t,t=s)):(Ru=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Ru,"system_user"===r.substr(Ru,11).toLowerCase()?(e=r.substr(Ru,11),Ru+=11):(e=s,0===xu&&$u(Hn));e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="SYSTEM_USER"):(Ru=t,t=s)):(Ru=t,t=s);return t}());return t}())!==s&&Ha()!==s&&ka()!==s&&Ha()!==s?((n=ks())===s&&(n=null),n!==s&&Ha()!==s&&$a()!==s&&Ha()!==s?((u=lo())===s&&(u=null),u!==s?(e=function(r,t,e){return {type:"function",name:r,args:t||{type:"expr_list",value:[]},over:e}}(e,n,u),t=e):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s));return t}())===s&&(t=Fs())===s&&(t=$s())===s&&(t=to())===s&&(t=co())===s){if(t=Ru,ka()!==s)if(Ha()!==s)if((e=Hs())!==s)if(Ha()!==s)if($a()!==s){for(n=[],u=Ru,(o=Ga())!==s?((a=ua())===s&&(a=sa()),a!==s&&(i=Ha())!==s&&(c=js())!==s?u=o=[o,a,i,c]:(Ru=u,u=s)):(Ru=u,u=s);u!==s;)n.push(u),u=Ru,(o=Ga())!==s?((a=ua())===s&&(a=sa()),a!==s&&(i=Ha())!==s&&(c=js())!==s?u=o=[o,a,i,c]:(Ru=u,u=s)):(Ru=u,u=s);n!==s?(b=n,(f=e).parentheses=!0,t=b&&0!==b.length?fi(f,b):f):(Ru=t,t=s);}else Ru=t,t=s;else Ru=t,t=s;else Ru=t,t=s;else Ru=t,t=s;else Ru=t,t=s;t===s&&(t=Ru,ka()!==s&&Ha()!==s&&(e=ks())!==s&&Ha()!==s&&$a()!==s?((l=e).parentheses=!0,t=l):(Ru=t,t=s),t===s&&(t=ei()));}return t}function to(){var r,t,e,n,u;return r=Ru,(t=eo())!==s&&Ha()!==s&&Ua()!==s&&Ha()!==s&&(e=uo())!==s?(n=t,u=e,Ci.add(`select::${n}::${u}`),r=t={type:"column_ref",table:n,column:u}):(Ru=r,r=s),r===s&&(r=Ru,(t=uo())!==s&&(t=function(r){return Ci.add("select::null::"+r),{type:"column_ref",table:null,column:r}}(t)),r=t),r}function eo(){var r,t;return r=Ru,(t=so())!==s?((jr(t)?s:void 0)!==s?(r=t=t):(Ru=r,r=s)):(Ru=r,r=s),r===s&&(r=Ru,(t=no())!==s&&(t=t),r=t),r}function no(){var t;return (t=function(){var t,e,n,u;t=Ru,34===r.charCodeAt(Ru)?(e='"',Ru++):(e=s,0===xu&&$u(Yr));if(e!==s){if(n=[],Br.test(r.charAt(Ru))?(u=r.charAt(Ru),Ru++):(u=s,0===xu&&$u(Xr)),u!==s)for(;u!==s;)n.push(u),Br.test(r.charAt(Ru))?(u=r.charAt(Ru),Ru++):(u=s,0===xu&&$u(Xr));else n=s;n!==s?(34===r.charCodeAt(Ru)?(u='"',Ru++):(u=s,0===xu&&$u(Yr)),u!==s?(e=Wr(n),t=e):(Ru=t,t=s)):(Ru=t,t=s);}else Ru=t,t=s;return t}())===s&&(t=function(){var t,e,n,u;t=Ru,39===r.charCodeAt(Ru)?(e="'",Ru++):(e=s,0===xu&&$u(rr));if(e!==s){if(n=[],Vr.test(r.charAt(Ru))?(u=r.charAt(Ru),Ru++):(u=s,0===xu&&$u(Kr)),u!==s)for(;u!==s;)n.push(u),Vr.test(r.charAt(Ru))?(u=r.charAt(Ru),Ru++):(u=s,0===xu&&$u(Kr));else n=s;n!==s?(39===r.charCodeAt(Ru)?(u="'",Ru++):(u=s,0===xu&&$u(rr)),u!==s?(e=Wr(n),t=e):(Ru=t,t=s)):(Ru=t,t=s);}else Ru=t,t=s;return t}())===s&&(t=function(){var t,e,n,u;t=Ru,96===r.charCodeAt(Ru)?(e="`",Ru++):(e=s,0===xu&&$u(qr));if(e!==s){if(n=[],Zr.test(r.charAt(Ru))?(u=r.charAt(Ru),Ru++):(u=s,0===xu&&$u(zr)),u!==s)for(;u!==s;)n.push(u),Zr.test(r.charAt(Ru))?(u=r.charAt(Ru),Ru++):(u=s,0===xu&&$u(zr));else n=s;n!==s?(96===r.charCodeAt(Ru)?(u="`",Ru++):(u=s,0===xu&&$u(qr)),u!==s?(e=Wr(n),t=e):(Ru=t,t=s)):(Ru=t,t=s);}else Ru=t,t=s;return t}()),t}function uo(){var r,t;return r=Ru,(t=function(){var r,t,e,n;if(r=Ru,(t=oo())!==s){for(e=[],n=io();n!==s;)e.push(n),n=io();e!==s?(t=Jr(t,e),r=t):(Ru=r,r=s);}else Ru=r,r=s;return r}())!==s?((jr(t)?s:void 0)!==s?(r=t=t):(Ru=r,r=s)):(Ru=r,r=s),r===s&&(r=no()),r}function so(){var r,t,e,n;if(r=Ru,(t=oo())!==s){for(e=[],n=ao();n!==s;)e.push(n),n=ao();e!==s?(r=t=Jr(t,e)):(Ru=r,r=s);}else Ru=r,r=s;return r}function oo(){var t;return Qr.test(r.charAt(Ru))?(t=r.charAt(Ru),Ru++):(t=s,0===xu&&$u(rt)),t}function ao(){var t;return tt.test(r.charAt(Ru))?(t=r.charAt(Ru),Ru++):(t=s,0===xu&&$u(et)),t}function io(){var t;return nt.test(r.charAt(Ru))?(t=r.charAt(Ru),Ru++):(t=s,0===xu&&$u(ut)),t}function co(){var e,n,u;return e=Ru,58===r.charCodeAt(Ru)?(n=":",Ru++):(n=s,0===xu&&$u(st)),n!==s&&(u=so())!==s?e=n=[n,u]:(Ru=e,e=s),e!==s&&(e={type:"param",value:e[1]}),e}function lo(){var t,e,n;return t=Ru,function(){var t,e,n,u;t=Ru,"over"===r.substr(Ru,4).toLowerCase()?(e=r.substr(Ru,4),Ru+=4):(e=s,0===xu&&$u(Ce));e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s);return t}()!==s&&Ha()!==s&&ka()!==s&&Ha()!==s&&Do()!==s&&Ha()!==s&&Ko()!==s&&Ha()!==s&&(e=ls())!==s&&Ha()!==s?((n=Ss())===s&&(n=null),n!==s&&Ha()!==s&&$a()!==s?(t=function(r,t){return {partitionby:r,orderby:t}}(e,n)):(Ru=t,t=s)):(Ru=t,t=s),t}function fo(){var t,e,n,u,o,a,i,c,l;return t=Ru,"binary"===r.substr(Ru,6).toLowerCase()?(e=r.substr(Ru,6),Ru+=6):(e=s,0===xu&&$u(ur)),e===s&&(e=null),e!==s&&Ha()!==s&&(n=vo())!==s?(u=Ru,(o=Ha())!==s&&(a=Wu())!==s?u=o=[o,a]:(Ru=u,u=s),u===s&&(u=null),u!==s?(c=n,l=u,(i=e)&&(c.prefix=i.toLowerCase()),l&&(c.suffix={collate:l[1]}),t=e=c):(Ru=t,t=s)):(Ru=t,t=s),t===s&&(t=wo())===s&&(t=function(){var t,e;t=Ru,(e=function(){var t,e,n,u;t=Ru,"true"===r.substr(Ru,4).toLowerCase()?(e=r.substr(Ru,4),Ru+=4):(e=s,0===xu&&$u(kt));e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s);return t}())!==s&&(e={type:"bool",value:!0});(t=e)===s&&(t=Ru,(e=function(){var t,e,n,u;t=Ru,"false"===r.substr(Ru,5).toLowerCase()?(e=r.substr(Ru,5),Ru+=5):(e=s,0===xu&&$u(Ft));e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s);return t}())!==s&&(e={type:"bool",value:!1}),t=e);return t}())===s&&(t=bo())===s&&(t=function(){var t,e,n,u,o,a,i;t=Ru,(e=ya())===s&&(e=ha())===s&&(e=Ta())===s&&(e=Aa());if(e!==s)if(Ha()!==s){if(n=Ru,39===r.charCodeAt(Ru)?(u="'",Ru++):(u=s,0===xu&&$u(rr)),u!==s){for(o=[],a=Co();a!==s;)o.push(a),a=Co();o!==s?(39===r.charCodeAt(Ru)?(a="'",Ru++):(a=s,0===xu&&$u(rr)),a!==s?n=u=[u,o,a]:(Ru=n,n=s)):(Ru=n,n=s);}else Ru=n,n=s;n!==s?(e=ot(e,n),t=e):(Ru=t,t=s);}else Ru=t,t=s;else Ru=t,t=s;if(t===s){if(t=Ru,(e=ya())===s&&(e=ha())===s&&(e=Ta())===s&&(e=Aa()),e!==s)if(Ha()!==s){if(n=Ru,34===r.charCodeAt(Ru)?(u='"',Ru++):(u=s,0===xu&&$u(Yr)),u!==s){for(o=[],a=Lo();a!==s;)o.push(a),a=Lo();o!==s?(34===r.charCodeAt(Ru)?(a='"',Ru++):(a=s,0===xu&&$u(Yr)),a!==s?n=u=[u,o,a]:(Ru=n,n=s)):(Ru=n,n=s);}else Ru=n,n=s;n!==s?(e=ot(e,n),t=e):(Ru=t,t=s);}else Ru=t,t=s;else Ru=t,t=s;t===s&&(t=Ru,(e=ma())!==s&&Ha()!==s?((n=ka())===s&&(n=null),n!==s&&(u=Ha())!==s?((o=$a())===s&&(o=null),o!==s?((a=(a=function(r,t,e){if(t&&e)return !0}(0,n,o))?s:void 0)!==s&&Ha()!==s?("on update current_timestamp"===r.substr(Ru,27).toLowerCase()?(i=r.substr(Ru,27),Ru+=27):(i=s,0===xu&&$u(at)),i===s&&(i=null),i!==s?(c=e,e={type:"origin",value:((l=i)?`${c} ${l}`:c).toLowerCase()},t=e):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s));}var c,l;return t}()),t}function bo(){var e;return (e=function(){var t,e,n,u;t=Ru,"null"===r.substr(Ru,4).toLowerCase()?(e=r.substr(Ru,4),Ru+=4):(e=s,0===xu&&$u(Mt));e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s);return t}())!==s&&(e={type:"null",value:null}),e}function vo(){var t,e,n,u,o;if(t=Ru,e=Ru,39===r.charCodeAt(Ru)?(n="'",Ru++):(n=s,0===xu&&$u(rr)),n!==s){for(u=[],o=Co();o!==s;)u.push(o),o=Co();u!==s?(39===r.charCodeAt(Ru)?(o="'",Ru++):(o=s,0===xu&&$u(rr)),o!==s?e=n=[n,u,o]:(Ru=e,e=s)):(Ru=e,e=s);}else Ru=e,e=s;if(e!==s&&(e={type:"single_quote_string",value:e[1].join("")}),(t=e)===s){if(t=Ru,e=Ru,34===r.charCodeAt(Ru)?(n='"',Ru++):(n=s,0===xu&&$u(Yr)),n!==s){for(u=[],o=Lo();o!==s;)u.push(o),o=Lo();u!==s?(34===r.charCodeAt(Ru)?(o='"',Ru++):(o=s,0===xu&&$u(Yr)),o!==s?e=n=[n,u,o]:(Ru=e,e=s)):(Ru=e,e=s);}else Ru=e,e=s;e!==s&&(e=function(r){return {type:"string",value:r[1].join("")}}(e)),t=e;}return t}function Lo(){var t;return it.test(r.charAt(Ru))?(t=r.charAt(Ru),Ru++):(t=s,0===xu&&$u(ct)),t===s&&(t=po()),t}function Co(){var t;return lt.test(r.charAt(Ru))?(t=r.charAt(Ru),Ru++):(t=s,0===xu&&$u(ft)),t===s&&(t=po()),t}function po(){var t,e,n,u,o,a,i,c,l,f;return t=Ru,"\\'"===r.substr(Ru,2)?(e="\\'",Ru+=2):(e=s,0===xu&&$u(bt)),e!==s&&(e="'"),(t=e)===s&&(t=Ru,'\\"'===r.substr(Ru,2)?(e='\\"',Ru+=2):(e=s,0===xu&&$u(vt)),e!==s&&(e='"'),(t=e)===s&&(t=Ru,"\\\\"===r.substr(Ru,2)?(e="\\\\",Ru+=2):(e=s,0===xu&&$u(dt)),e!==s&&(e="\\"),(t=e)===s&&(t=Ru,"\\/"===r.substr(Ru,2)?(e="\\/",Ru+=2):(e=s,0===xu&&$u(Lt)),e!==s&&(e="/"),(t=e)===s&&(t=Ru,"\\b"===r.substr(Ru,2)?(e="\\b",Ru+=2):(e=s,0===xu&&$u(Ct)),e!==s&&(e="\b"),(t=e)===s&&(t=Ru,"\\f"===r.substr(Ru,2)?(e="\\f",Ru+=2):(e=s,0===xu&&$u(pt)),e!==s&&(e="\f"),(t=e)===s&&(t=Ru,"\\n"===r.substr(Ru,2)?(e="\\n",Ru+=2):(e=s,0===xu&&$u(wt)),e!==s&&(e="\n"),(t=e)===s&&(t=Ru,"\\r"===r.substr(Ru,2)?(e="\\r",Ru+=2):(e=s,0===xu&&$u(Et)),e!==s&&(e="\r"),(t=e)===s&&(t=Ru,"\\t"===r.substr(Ru,2)?(e="\\t",Ru+=2):(e=s,0===xu&&$u(ht)),e!==s&&(e="\t"),(t=e)===s&&(t=Ru,"\\u"===r.substr(Ru,2)?(e="\\u",Ru+=2):(e=s,0===xu&&$u(At)),e!==s&&(n=mo())!==s&&(u=mo())!==s&&(o=mo())!==s&&(a=mo())!==s?(i=n,c=u,l=o,f=a,t=e=String.fromCharCode(parseInt("0x"+i+c+l+f))):(Ru=t,t=s),t===s&&(t=Ru,92===r.charCodeAt(Ru)?(e="\\",Ru++):(e=s,0===xu&&$u(yt)),e!==s&&(e="\\"),t=e)))))))))),t}function wo(){var t,e;return (t=function(){var r,t,e,n;r=Ru,(t=Eo())!==s&&(e=ho())!==s&&(n=Ao())!==s?(r=t={type:"bigint",value:t+e+n}):(Ru=r,r=s);r===s&&(r=Ru,(t=Eo())!==s&&(e=ho())!==s?(t=function(r,t){const e=r+t;return ci(r)?{type:"bigint",value:e}:parseFloat(e)}(t,e),r=t):(Ru=r,r=s),r===s&&(r=Ru,(t=Eo())!==s&&(e=Ao())!==s?(t=function(r,t){return {type:"bigint",value:r+t}}(t,e),r=t):(Ru=r,r=s),r===s&&(r=Ru,(t=Eo())!==s&&(t=function(r){return ci(r)?{type:"bigint",value:r}:parseFloat(r)}(t)),r=t)));return r}())!==s&&(t=(e=t)&&"bigint"===e.type?e:{type:"number",value:e}),t}function Eo(){var t,e,n;return (t=yo())===s&&(t=To())===s&&(t=Ru,45===r.charCodeAt(Ru)?(e="-",Ru++):(e=s,0===xu&&$u(Fr)),e===s&&(43===r.charCodeAt(Ru)?(e="+",Ru++):(e=s,0===xu&&$u($r))),e!==s&&(n=yo())!==s?(t=e="-"+n):(Ru=t,t=s),t===s&&(t=Ru,45===r.charCodeAt(Ru)?(e="-",Ru++):(e=s,0===xu&&$u(Fr)),e===s&&(43===r.charCodeAt(Ru)?(e="+",Ru++):(e=s,0===xu&&$u($r))),e!==s&&(n=To())!==s?(t=e="-"+n):(Ru=t,t=s))),t}function ho(){var t,e,n;return t=Ru,46===r.charCodeAt(Ru)?(e=".",Ru++):(e=s,0===xu&&$u(St)),e!==s&&(n=yo())!==s?(t=e="."+n):(Ru=t,t=s),t}function Ao(){var t,e,n;return t=Ru,(e=function(){var t,e,n;t=Ru,gt.test(r.charAt(Ru))?(e=r.charAt(Ru),Ru++):(e=s,0===xu&&$u(Ot));e!==s?(xt.test(r.charAt(Ru))?(n=r.charAt(Ru),Ru++):(n=s,0===xu&&$u(Ut)),n===s&&(n=null),n!==s?(t=e=e+(null!==(u=n)?u:"")):(Ru=t,t=s)):(Ru=t,t=s);var u;return t}())!==s&&(n=yo())!==s?(t=e=e+n):(Ru=t,t=s),t}function yo(){var t,e;if(t=[],(e=To())!==s)for(;e!==s;)t.push(e),e=To();else t=s;return t!==s&&(t=t.join("")),t}function To(){var t;return It.test(r.charAt(Ru))?(t=r.charAt(Ru),Ru++):(t=s,0===xu&&$u(Nt)),t}function mo(){var t;return Rt.test(r.charAt(Ru))?(t=r.charAt(Ru),Ru++):(t=s,0===xu&&$u(_t)),t}function So(){var t,e,n,u;return t=Ru,"default"===r.substr(Ru,7).toLowerCase()?(e=r.substr(Ru,7),Ru+=7):(e=s,0===xu&&$u(p)),e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s),t}function Io(){var t,e,n,u;return t=Ru,"to"===r.substr(Ru,2).toLowerCase()?(e=r.substr(Ru,2),Ru+=2):(e=s,0===xu&&$u($t)),e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s),t}function No(){var t,e,n,u;return t=Ru,"show"===r.substr(Ru,4).toLowerCase()?(e=r.substr(Ru,4),Ru+=4):(e=s,0===xu&&$u(Pt)),e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s),t}function Ro(){var t,e,n,u;return t=Ru,"drop"===r.substr(Ru,4).toLowerCase()?(e=r.substr(Ru,4),Ru+=4):(e=s,0===xu&&$u(Ht)),e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="DROP"):(Ru=t,t=s)):(Ru=t,t=s),t}function _o(){var t,e,n,u;return t=Ru,"update"===r.substr(Ru,6).toLowerCase()?(e=r.substr(Ru,6),Ru+=6):(e=s,0===xu&&$u(Bt)),e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s),t}function go(){var t,e,n,u;return t=Ru,"create"===r.substr(Ru,6).toLowerCase()?(e=r.substr(Ru,6),Ru+=6):(e=s,0===xu&&$u(Xt)),e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s),t}function Oo(){var t,e,n,u;return t=Ru,"temporary"===r.substr(Ru,9).toLowerCase()?(e=r.substr(Ru,9),Ru+=9):(e=s,0===xu&&$u(Wt)),e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s),t}function xo(){var t,e,n,u;return t=Ru,"if not exists"===r.substr(Ru,13).toLowerCase()?(e=r.substr(Ru,13),Ru+=13):(e=s,0===xu&&$u(Vt)),e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s),t}function Uo(){var t,e,n,u;return t=Ru,"replace"===r.substr(Ru,7).toLowerCase()?(e=r.substr(Ru,7),Ru+=7):(e=s,0===xu&&$u(zt)),e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s),t}function Mo(){var t,e,n,u;return t=Ru,"rename"===r.substr(Ru,6).toLowerCase()?(e=r.substr(Ru,6),Ru+=6):(e=s,0===xu&&$u(Jt)),e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s),t}function Do(){var t,e,n,u;return t=Ru,"partition"===r.substr(Ru,9).toLowerCase()?(e=r.substr(Ru,9),Ru+=9):(e=s,0===xu&&$u(re)),e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="PARTITION"):(Ru=t,t=s)):(Ru=t,t=s),t}function ko(){var t,e,n,u;return t=Ru,"into"===r.substr(Ru,4).toLowerCase()?(e=r.substr(Ru,4),Ru+=4):(e=s,0===xu&&$u(te)),e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s),t}function $o(){var t,e,n,u;return t=Ru,"set"===r.substr(Ru,3).toLowerCase()?(e=r.substr(Ru,3),Ru+=3):(e=s,0===xu&&$u(B)),e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s),t}function Fo(){var t,e,n,u;return t=Ru,"as"===r.substr(Ru,2).toLowerCase()?(e=r.substr(Ru,2),Ru+=2):(e=s,0===xu&&$u(ue)),e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s),t}function Po(){var t,e,n,u;return t=Ru,"table"===r.substr(Ru,5).toLowerCase()?(e=r.substr(Ru,5),Ru+=5):(e=s,0===xu&&$u(se)),e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="TABLE"):(Ru=t,t=s)):(Ru=t,t=s),t}function Ho(){var t,e,n,u;return t=Ru,"tables"===r.substr(Ru,6).toLowerCase()?(e=r.substr(Ru,6),Ru+=6):(e=s,0===xu&&$u(oe)),e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="TABLES"):(Ru=t,t=s)):(Ru=t,t=s),t}function Go(){var t,e,n,u;return t=Ru,"on"===r.substr(Ru,2).toLowerCase()?(e=r.substr(Ru,2),Ru+=2):(e=s,0===xu&&$u(ce)),e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s),t}function jo(){var t,e,n,u;return t=Ru,"join"===r.substr(Ru,4).toLowerCase()?(e=r.substr(Ru,4),Ru+=4):(e=s,0===xu&&$u(de)),e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s),t}function Yo(){var t,e,n,u;return t=Ru,"outer"===r.substr(Ru,5).toLowerCase()?(e=r.substr(Ru,5),Ru+=5):(e=s,0===xu&&$u(Le)),e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s),t}function Bo(){var t,e,n,u;return t=Ru,"union"===r.substr(Ru,5).toLowerCase()?(e=r.substr(Ru,5),Ru+=5):(e=s,0===xu&&$u(pe)),e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s),t}function Xo(){var t,e,n,u;return t=Ru,"values"===r.substr(Ru,6).toLowerCase()?(e=r.substr(Ru,6),Ru+=6):(e=s,0===xu&&$u(we)),e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s),t}function Wo(){var t,e,n,u;return t=Ru,"using"===r.substr(Ru,5).toLowerCase()?(e=r.substr(Ru,5),Ru+=5):(e=s,0===xu&&$u(Ee)),e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s),t}function Vo(){var t,e,n,u;return t=Ru,"with"===r.substr(Ru,4).toLowerCase()?(e=r.substr(Ru,4),Ru+=4):(e=s,0===xu&&$u(Ar)),e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s),t}function Ko(){var t,e,n,u;return t=Ru,"by"===r.substr(Ru,2).toLowerCase()?(e=r.substr(Ru,2),Ru+=2):(e=s,0===xu&&$u(ye)),e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s),t}function qo(){var t,e,n,u;return t=Ru,"desc"===r.substr(Ru,4).toLowerCase()?(e=r.substr(Ru,4),Ru+=4):(e=s,0===xu&&$u(Re)),e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="DESC"):(Ru=t,t=s)):(Ru=t,t=s),t}function Zo(){var t,e,n,u;return t=Ru,"all"===r.substr(Ru,3).toLowerCase()?(e=r.substr(Ru,3),Ru+=3):(e=s,0===xu&&$u(ge)),e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="ALL"):(Ru=t,t=s)):(Ru=t,t=s),t}function zo(){var t,e,n,u;return t=Ru,"distinct"===r.substr(Ru,8).toLowerCase()?(e=r.substr(Ru,8),Ru+=8):(e=s,0===xu&&$u(Oe)),e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="DISTINCT"):(Ru=t,t=s)):(Ru=t,t=s),t}function Jo(){var t,e,n,u;return t=Ru,"between"===r.substr(Ru,7).toLowerCase()?(e=r.substr(Ru,7),Ru+=7):(e=s,0===xu&&$u(xe)),e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="BETWEEN"):(Ru=t,t=s)):(Ru=t,t=s),t}function Qo(){var t,e,n,u;return t=Ru,"in"===r.substr(Ru,2).toLowerCase()?(e=r.substr(Ru,2),Ru+=2):(e=s,0===xu&&$u(Ue)),e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="IN"):(Ru=t,t=s)):(Ru=t,t=s),t}function ra(){var t,e,n,u;return t=Ru,"is"===r.substr(Ru,2).toLowerCase()?(e=r.substr(Ru,2),Ru+=2):(e=s,0===xu&&$u(Me)),e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="IS"):(Ru=t,t=s)):(Ru=t,t=s),t}function ta(){var t,e,n,u;return t=Ru,"like"===r.substr(Ru,4).toLowerCase()?(e=r.substr(Ru,4),Ru+=4):(e=s,0===xu&&$u(De)),e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="LIKE"):(Ru=t,t=s)):(Ru=t,t=s),t}function ea(){var t,e,n,u;return t=Ru,"exists"===r.substr(Ru,6).toLowerCase()?(e=r.substr(Ru,6),Ru+=6):(e=s,0===xu&&$u(Fe)),e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="EXISTS"):(Ru=t,t=s)):(Ru=t,t=s),t}function na(){var t,e,n,u;return t=Ru,"not"===r.substr(Ru,3).toLowerCase()?(e=r.substr(Ru,3),Ru+=3):(e=s,0===xu&&$u(Pe)),e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="NOT"):(Ru=t,t=s)):(Ru=t,t=s),t}function ua(){var t,e,n,u;return t=Ru,"and"===r.substr(Ru,3).toLowerCase()?(e=r.substr(Ru,3),Ru+=3):(e=s,0===xu&&$u(He)),e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="AND"):(Ru=t,t=s)):(Ru=t,t=s),t}function sa(){var t,e,n,u;return t=Ru,"or"===r.substr(Ru,2).toLowerCase()?(e=r.substr(Ru,2),Ru+=2):(e=s,0===xu&&$u(Ge)),e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="OR"):(Ru=t,t=s)):(Ru=t,t=s),t}function oa(){var t,e,n,u;return t=Ru,"case"===r.substr(Ru,4).toLowerCase()?(e=r.substr(Ru,4),Ru+=4):(e=s,0===xu&&$u(qe)),e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s),t}function aa(){var t,e,n,u;return t=Ru,"cast"===r.substr(Ru,4).toLowerCase()?(e=r.substr(Ru,4),Ru+=4):(e=s,0===xu&&$u(rn)),e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?t=e=[e,n]:(Ru=t,t=s)):(Ru=t,t=s),t}function ia(){var t,e,n,u;return t=Ru,"char"===r.substr(Ru,4).toLowerCase()?(e=r.substr(Ru,4),Ru+=4):(e=s,0===xu&&$u(tn)),e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="CHAR"):(Ru=t,t=s)):(Ru=t,t=s),t}function ca(){var t,e,n,u;return t=Ru,"varchar"===r.substr(Ru,7).toLowerCase()?(e=r.substr(Ru,7),Ru+=7):(e=s,0===xu&&$u(en)),e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="VARCHAR"):(Ru=t,t=s)):(Ru=t,t=s),t}function la(){var t,e,n,u;return t=Ru,"numeric"===r.substr(Ru,7).toLowerCase()?(e=r.substr(Ru,7),Ru+=7):(e=s,0===xu&&$u(nn)),e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="NUMERIC"):(Ru=t,t=s)):(Ru=t,t=s),t}function fa(){var t,e,n,u;return t=Ru,"decimal"===r.substr(Ru,7).toLowerCase()?(e=r.substr(Ru,7),Ru+=7):(e=s,0===xu&&$u(un)),e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="DECIMAL"):(Ru=t,t=s)):(Ru=t,t=s),t}function ba(){var t,e,n,u;return t=Ru,"unsigned"===r.substr(Ru,8).toLowerCase()?(e=r.substr(Ru,8),Ru+=8):(e=s,0===xu&&$u(on)),e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="UNSIGNED"):(Ru=t,t=s)):(Ru=t,t=s),t}function va(){var t,e,n,u;return t=Ru,"int"===r.substr(Ru,3).toLowerCase()?(e=r.substr(Ru,3),Ru+=3):(e=s,0===xu&&$u(an)),e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="INT"):(Ru=t,t=s)):(Ru=t,t=s),t}function da(){var t,e,n,u;return t=Ru,"integer"===r.substr(Ru,7).toLowerCase()?(e=r.substr(Ru,7),Ru+=7):(e=s,0===xu&&$u(ln)),e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="INTEGER"):(Ru=t,t=s)):(Ru=t,t=s),t}function La(){var t,e,n,u;return t=Ru,"smallint"===r.substr(Ru,8).toLowerCase()?(e=r.substr(Ru,8),Ru+=8):(e=s,0===xu&&$u(bn)),e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="SMALLINT"):(Ru=t,t=s)):(Ru=t,t=s),t}function Ca(){var t,e,n,u;return t=Ru,"tinyint"===r.substr(Ru,7).toLowerCase()?(e=r.substr(Ru,7),Ru+=7):(e=s,0===xu&&$u(vn)),e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="TINYINT"):(Ru=t,t=s)):(Ru=t,t=s),t}function pa(){var t,e,n,u;return t=Ru,"bigint"===r.substr(Ru,6).toLowerCase()?(e=r.substr(Ru,6),Ru+=6):(e=s,0===xu&&$u(wn)),e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="BIGINT"):(Ru=t,t=s)):(Ru=t,t=s),t}function wa(){var t,e,n,u;return t=Ru,"float"===r.substr(Ru,5).toLowerCase()?(e=r.substr(Ru,5),Ru+=5):(e=s,0===xu&&$u(hn)),e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="FLOAT"):(Ru=t,t=s)):(Ru=t,t=s),t}function Ea(){var t,e,n,u;return t=Ru,"double"===r.substr(Ru,6).toLowerCase()?(e=r.substr(Ru,6),Ru+=6):(e=s,0===xu&&$u(An)),e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="DOUBLE"):(Ru=t,t=s)):(Ru=t,t=s),t}function ha(){var t,e,n,u;return t=Ru,"date"===r.substr(Ru,4).toLowerCase()?(e=r.substr(Ru,4),Ru+=4):(e=s,0===xu&&$u(yn)),e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="DATE"):(Ru=t,t=s)):(Ru=t,t=s),t}function Aa(){var t,e,n,u;return t=Ru,"datetime"===r.substr(Ru,8).toLowerCase()?(e=r.substr(Ru,8),Ru+=8):(e=s,0===xu&&$u(Tn)),e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="DATETIME"):(Ru=t,t=s)):(Ru=t,t=s),t}function ya(){var t,e,n,u;return t=Ru,"time"===r.substr(Ru,4).toLowerCase()?(e=r.substr(Ru,4),Ru+=4):(e=s,0===xu&&$u(mn)),e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="TIME"):(Ru=t,t=s)):(Ru=t,t=s),t}function Ta(){var t,e,n,u;return t=Ru,"timestamp"===r.substr(Ru,9).toLowerCase()?(e=r.substr(Ru,9),Ru+=9):(e=s,0===xu&&$u(Sn)),e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="TIMESTAMP"):(Ru=t,t=s)):(Ru=t,t=s),t}function ma(){var t,e,n,u;return t=Ru,"current_timestamp"===r.substr(Ru,17).toLowerCase()?(e=r.substr(Ru,17),Ru+=17):(e=s,0===xu&&$u($n)),e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="CURRENT_TIMESTAMP"):(Ru=t,t=s)):(Ru=t,t=s),t}function Sa(){var t;return 64===r.charCodeAt(Ru)?(t="@",Ru++):(t=s,0===xu&&$u(Xn)),t}function Ia(){var t;return (t=function(){var t;return "@@"===r.substr(Ru,2)?(t="@@",Ru+=2):(t=s,0===xu&&$u(Wn)),t}())===s&&(t=Sa())===s&&(t=function(){var t;return 36===r.charCodeAt(Ru)?(t="$",Ru++):(t=s,0===xu&&$u(Vn)),t}()),t}function Na(){var t;return 61===r.charCodeAt(Ru)?(t="=",Ru++):(t=s,0===xu&&$u(Ir)),t}function Ra(){var t,e,n,u;return t=Ru,"add"===r.substr(Ru,3).toLowerCase()?(e=r.substr(Ru,3),Ru+=3):(e=s,0===xu&&$u(zn)),e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="ADD"):(Ru=t,t=s)):(Ru=t,t=s),t}function _a(){var t,e,n,u;return t=Ru,"column"===r.substr(Ru,6).toLowerCase()?(e=r.substr(Ru,6),Ru+=6):(e=s,0===xu&&$u(Jn)),e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="COLUMN"):(Ru=t,t=s)):(Ru=t,t=s),t}function ga(){var t,e,n,u;return t=Ru,"index"===r.substr(Ru,5).toLowerCase()?(e=r.substr(Ru,5),Ru+=5):(e=s,0===xu&&$u(Qn)),e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="INDEX"):(Ru=t,t=s)):(Ru=t,t=s),t}function Oa(){var t,e,n,u;return t=Ru,"key"===r.substr(Ru,3).toLowerCase()?(e=r.substr(Ru,3),Ru+=3):(e=s,0===xu&&$u(b)),e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="KEY"):(Ru=t,t=s)):(Ru=t,t=s),t}function xa(){var t,e,n,u;return t=Ru,"comment"===r.substr(Ru,7).toLowerCase()?(e=r.substr(Ru,7),Ru+=7):(e=s,0===xu&&$u(eu)),e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="COMMENT"):(Ru=t,t=s)):(Ru=t,t=s),t}function Ua(){var t;return 46===r.charCodeAt(Ru)?(t=".",Ru++):(t=s,0===xu&&$u(St)),t}function Ma(){var t;return 44===r.charCodeAt(Ru)?(t=",",Ru++):(t=s,0===xu&&$u(fu)),t}function Da(){var t;return 42===r.charCodeAt(Ru)?(t="*",Ru++):(t=s,0===xu&&$u(Pr)),t}function ka(){var t;return 40===r.charCodeAt(Ru)?(t="(",Ru++):(t=s,0===xu&&$u(pr)),t}function $a(){var t;return 41===r.charCodeAt(Ru)?(t=")",Ru++):(t=s,0===xu&&$u(wr)),t}function Fa(){var t;return 59===r.charCodeAt(Ru)?(t=";",Ru++):(t=s,0===xu&&$u(du)),t}function Pa(){var t;return (t=function(){var t;return "||"===r.substr(Ru,2)?(t="||",Ru+=2):(t=s,0===xu&&$u(Lu)),t}())===s&&(t=function(){var t;return "&&"===r.substr(Ru,2)?(t="&&",Ru+=2):(t=s,0===xu&&$u(Cu)),t}()),t}function Ha(){var r,t;for(r=[],(t=Xa())===s&&(t=ja());t!==s;)r.push(t),(t=Xa())===s&&(t=ja());return r}function Ga(){var r,t;if(r=[],(t=Xa())===s&&(t=ja()),t!==s)for(;t!==s;)r.push(t),(t=Xa())===s&&(t=ja());else r=s;return r}function ja(){var t;return (t=function(){var t,e,n,u,o,a;t=Ru,"/*"===r.substr(Ru,2)?(e="/*",Ru+=2):(e=s,0===xu&&$u(pu));if(e!==s){for(n=[],u=Ru,o=Ru,xu++,"*/"===r.substr(Ru,2)?(a="*/",Ru+=2):(a=s,0===xu&&$u(wu)),xu--,a===s?o=void 0:(Ru=o,o=s),o!==s&&(a=Ba())!==s?u=o=[o,a]:(Ru=u,u=s);u!==s;)n.push(u),u=Ru,o=Ru,xu++,"*/"===r.substr(Ru,2)?(a="*/",Ru+=2):(a=s,0===xu&&$u(wu)),xu--,a===s?o=void 0:(Ru=o,o=s),o!==s&&(a=Ba())!==s?u=o=[o,a]:(Ru=u,u=s);n!==s?("*/"===r.substr(Ru,2)?(u="*/",Ru+=2):(u=s,0===xu&&$u(wu)),u!==s?t=e=[e,n,u]:(Ru=t,t=s)):(Ru=t,t=s);}else Ru=t,t=s;return t}())===s&&(t=function(){var t,e,n,u,o,a;t=Ru,"--"===r.substr(Ru,2)?(e="--",Ru+=2):(e=s,0===xu&&$u(Eu));if(e!==s){for(n=[],u=Ru,o=Ru,xu++,a=Wa(),xu--,a===s?o=void 0:(Ru=o,o=s),o!==s&&(a=Ba())!==s?u=o=[o,a]:(Ru=u,u=s);u!==s;)n.push(u),u=Ru,o=Ru,xu++,a=Wa(),xu--,a===s?o=void 0:(Ru=o,o=s),o!==s&&(a=Ba())!==s?u=o=[o,a]:(Ru=u,u=s);n!==s?t=e=[e,n]:(Ru=t,t=s);}else Ru=t,t=s;return t}())===s&&(t=function(){var t,e,n,u,o,a;t=Ru,35===r.charCodeAt(Ru)?(e="#",Ru++):(e=s,0===xu&&$u(hu));if(e!==s){for(n=[],u=Ru,o=Ru,xu++,a=Wa(),xu--,a===s?o=void 0:(Ru=o,o=s),o!==s&&(a=Ba())!==s?u=o=[o,a]:(Ru=u,u=s);u!==s;)n.push(u),u=Ru,o=Ru,xu++,a=Wa(),xu--,a===s?o=void 0:(Ru=o,o=s),o!==s&&(a=Ba())!==s?u=o=[o,a]:(Ru=u,u=s);n!==s?t=e=[e,n]:(Ru=t,t=s);}else Ru=t,t=s;return t}()),t}function Ya(){var r,t,e,n,u,o,a;return r=Ru,(t=xa())!==s&&Ha()!==s?((e=Na())===s&&(e=null),e!==s&&Ha()!==s&&(n=vo())!==s?(o=e,a=n,r=t={type:(u=t).toLowerCase(),keyword:u.toLowerCase(),symbol:o,value:a}):(Ru=r,r=s)):(Ru=r,r=s),r}function Ba(){var t;return r.length>Ru?(t=r.charAt(Ru),Ru++):(t=s,0===xu&&$u(Au)),t}function Xa(){var t;return yu.test(r.charAt(Ru))?(t=r.charAt(Ru),Ru++):(t=s,0===xu&&$u(Tu)),t}function Wa(){var t,e;if((t=function(){var t,e;t=Ru,xu++,r.length>Ru?(e=r.charAt(Ru),Ru++):(e=s,0===xu&&$u(Au));xu--,e===s?t=void 0:(Ru=t,t=s);return t}())===s)if(t=[],Tt.test(r.charAt(Ru))?(e=r.charAt(Ru),Ru++):(e=s,0===xu&&$u(mt)),e!==s)for(;e!==s;)t.push(e),Tt.test(r.charAt(Ru))?(e=r.charAt(Ru),Ru++):(e=s,0===xu&&$u(mt));else t=s;return t}function Va(){var t,e;return t=Ru,di=[],(void 0)!==s&&Ha()!==s?((e=Ka())===s&&(e=function(){var t,e;t=Ru,function(){var t;return "return"===r.substr(Ru,6).toLowerCase()?(t=r.substr(Ru,6),Ru+=6):(t=s,0===xu&&$u(Kn)),t}()!==s&&Ha()!==s&&(e=qa())!==s?(t={type:"return",expr:e}):(Ru=t,t=s);return t}()),e!==s?(t={stmt:e,vars:di}):(Ru=t,t=s)):(Ru=t,t=s),t}function Ka(){var t,e,n,u;return t=Ru,(e=ei())===s&&(e=ni()),e!==s&&Ha()!==s?((n=function(){var t;return ":="===r.substr(Ru,2)?(t=":=",Ru+=2):(t=s,0===xu&&$u(qn)),t}())===s&&(n=Na()),n!==s&&Ha()!==s&&(u=qa())!==s?(t=e={type:"assign",left:e,symbol:n,right:u}):(Ru=t,t=s)):(Ru=t,t=s),t}function qa(){var t;return (t=us())===s&&(t=function(){var r,t,e,n,u;r=Ru,(t=ei())!==s&&Ha()!==s&&(e=As())!==s&&Ha()!==s&&(n=ei())!==s&&Ha()!==s&&(u=Ts())!==s?(r=t={type:"join",ltable:t,rtable:n,op:e,on:u}):(Ru=r,r=s);return r}())===s&&(t=Za())===s&&(t=function(){var t,e;t=Ru,function(){var t;return 91===r.charCodeAt(Ru)?(t="[",Ru++):(t=s,0===xu&&$u(bu)),t}()!==s&&Ha()!==s&&(e=ti())!==s&&Ha()!==s&&function(){var t;return 93===r.charCodeAt(Ru)?(t="]",Ru++):(t=s,0===xu&&$u(vu)),t}()!==s?(t={type:"array",value:e}):(Ru=t,t=s);return t}()),t}function Za(){var r,t,e,n,u,o,a,i;if(r=Ru,(t=za())!==s){for(e=[],n=Ru,(u=Ha())!==s&&(o=zs())!==s&&(a=Ha())!==s&&(i=za())!==s?n=u=[u,o,a,i]:(Ru=n,n=s);n!==s;)e.push(n),n=Ru,(u=Ha())!==s&&(o=zs())!==s&&(a=Ha())!==s&&(i=za())!==s?n=u=[u,o,a,i]:(Ru=n,n=s);e!==s?(r=t=Rr(t,e)):(Ru=r,r=s);}else Ru=r,r=s;return r}function za(){var r,t,e,n,u,o,a,i;if(r=Ru,(t=Ja())!==s){for(e=[],n=Ru,(u=Ha())!==s&&(o=Qs())!==s&&(a=Ha())!==s&&(i=Ja())!==s?n=u=[u,o,a,i]:(Ru=n,n=s);n!==s;)e.push(n),n=Ru,(u=Ha())!==s&&(o=Qs())!==s&&(a=Ha())!==s&&(i=Ja())!==s?n=u=[u,o,a,i]:(Ru=n,n=s);e!==s?(r=t=Rr(t,e)):(Ru=r,r=s);}else Ru=r,r=s;return r}function Ja(){var r,t,e;return (r=fo())===s&&(r=ei())===s&&(r=ri())===s&&(r=co())===s&&(r=Ru,ka()!==s&&Ha()!==s&&(t=Za())!==s&&Ha()!==s&&$a()!==s?((e=t).parentheses=!0,r=e):(Ru=r,r=s)),r}function Qa(){var r,t,e,n,u,o,a;return r=Ru,(t=eo())!==s?(e=Ru,(n=Ha())!==s&&(u=Ua())!==s&&(o=Ha())!==s&&(a=eo())!==s?e=n=[n,u,o,a]:(Ru=e,e=s),e===s&&(e=null),e!==s?(r=t=function(r,t){let e=r;return null!==t&&(e=`${r}.${t[3]}`),e}(t,e)):(Ru=r,r=s)):(Ru=r,r=s),r}function ri(){var r,t,e;return r=Ru,(t=Qa())!==s&&Ha()!==s&&ka()!==s&&Ha()!==s?((e=ti())===s&&(e=null),e!==s&&Ha()!==s&&$a()!==s?(r=t={type:"function",name:t,args:{type:"expr_list",value:e}}):(Ru=r,r=s)):(Ru=r,r=s),r===s&&(r=Ru,(t=Qa())!==s&&(t=function(r){return {type:"function",name:r,args:null}}(t)),r=t),r}function ti(){var r,t,e,n,u,o,a,i;if(r=Ru,(t=Ja())!==s){for(e=[],n=Ru,(u=Ha())!==s&&(o=Ma())!==s&&(a=Ha())!==s&&(i=Ja())!==s?n=u=[u,o,a,i]:(Ru=n,n=s);n!==s;)e.push(n),n=Ru,(u=Ha())!==s&&(o=Ma())!==s&&(a=Ha())!==s&&(i=Ja())!==s?n=u=[u,o,a,i]:(Ru=n,n=s);e!==s?(r=t=c(t,e)):(Ru=r,r=s);}else Ru=r,r=s;return r}function ei(){var r,t,e,n,u;return r=Ru,(t=Ia())!==s&&(e=ni())!==s?(n=t,u=e,r=t={type:"var",...u,prefix:n}):(Ru=r,r=s),r}function ni(){var t,e,n,u,o;return t=Ru,(e=so())!==s&&(n=function(){var e,n,u,o;e=[],n=Ru,46===r.charCodeAt(Ru)?(u=".",Ru++):(u=s,0===xu&&$u(St));u!==s&&(o=so())!==s?n=u=[u,o]:(Ru=n,n=s);for(;n!==s;)e.push(n),n=Ru,46===r.charCodeAt(Ru)?(u=".",Ru++):(u=s,0===xu&&$u(St)),u!==s&&(o=so())!==s?n=u=[u,o]:(Ru=n,n=s);e!==s&&(e=function(r){const t=[];for(let e=0;e<r.length;e++)t.push(r[e][1]);return t}(e));return e}())!==s?(u=e,o=n,di.push(u),t=e={type:"var",name:u,members:o,prefix:null}):(Ru=t,t=s),t}function ui(){var t;return (t=function(){var t,e,n,u;t=Ru,(e=ia())===s&&(e=ca());if(e!==s)if(Ha()!==s)if(ka()!==s)if(Ha()!==s){if(n=[],It.test(r.charAt(Ru))?(u=r.charAt(Ru),Ru++):(u=s,0===xu&&$u(Nt)),u!==s)for(;u!==s;)n.push(u),It.test(r.charAt(Ru))?(u=r.charAt(Ru),Ru++):(u=s,0===xu&&$u(Nt));else n=s;n!==s&&(u=Ha())!==s&&$a()!==s?(e={dataType:e,length:parseInt(n.join(""),10)},t=e):(Ru=t,t=s);}else Ru=t,t=s;else Ru=t,t=s;else Ru=t,t=s;else Ru=t,t=s;t===s&&(t=Ru,(e=ia())!==s&&(e=Su(e)),(t=e)===s&&(t=Ru,(e=ca())!==s&&(e=Su(e)),t=e));return t}())===s&&(t=function(){var t,e,n,u,o,a,i,c,l,f,b,v;t=Ru,(e=la())===s&&(e=fa())===s&&(e=va())===s&&(e=da())===s&&(e=La())===s&&(e=Ca())===s&&(e=pa())===s&&(e=wa())===s&&(e=Ea());if(e!==s)if((n=Ha())!==s)if((u=ka())!==s)if((o=Ha())!==s){if(a=[],It.test(r.charAt(Ru))?(i=r.charAt(Ru),Ru++):(i=s,0===xu&&$u(Nt)),i!==s)for(;i!==s;)a.push(i),It.test(r.charAt(Ru))?(i=r.charAt(Ru),Ru++):(i=s,0===xu&&$u(Nt));else a=s;if(a!==s)if((i=Ha())!==s){if(c=Ru,(l=Ma())!==s)if((f=Ha())!==s){if(b=[],It.test(r.charAt(Ru))?(v=r.charAt(Ru),Ru++):(v=s,0===xu&&$u(Nt)),v!==s)for(;v!==s;)b.push(v),It.test(r.charAt(Ru))?(v=r.charAt(Ru),Ru++):(v=s,0===xu&&$u(Nt));else b=s;b!==s?c=l=[l,f,b]:(Ru=c,c=s);}else Ru=c,c=s;else Ru=c,c=s;c===s&&(c=null),c!==s&&(l=Ha())!==s&&(f=$a())!==s&&(b=Ha())!==s?((v=si())===s&&(v=null),v!==s?(d=c,L=v,e={dataType:e,length:parseInt(a.join(""),10),scale:d&&parseInt(d[2].join(""),10),parentheses:!0,suffix:L},t=e):(Ru=t,t=s)):(Ru=t,t=s);}else Ru=t,t=s;else Ru=t,t=s;}else Ru=t,t=s;else Ru=t,t=s;else Ru=t,t=s;else Ru=t,t=s;var d,L;if(t===s){if(t=Ru,(e=la())===s&&(e=fa())===s&&(e=va())===s&&(e=da())===s&&(e=La())===s&&(e=Ca())===s&&(e=pa())===s&&(e=wa())===s&&(e=Ea()),e!==s){if(n=[],It.test(r.charAt(Ru))?(u=r.charAt(Ru),Ru++):(u=s,0===xu&&$u(Nt)),u!==s)for(;u!==s;)n.push(u),It.test(r.charAt(Ru))?(u=r.charAt(Ru),Ru++):(u=s,0===xu&&$u(Nt));else n=s;n!==s&&(u=Ha())!==s?((o=si())===s&&(o=null),o!==s?(e=function(r,t,e){return {dataType:r,length:parseInt(t.join(""),10),suffix:e}}(e,n,o),t=e):(Ru=t,t=s)):(Ru=t,t=s);}else Ru=t,t=s;t===s&&(t=Ru,(e=la())===s&&(e=fa())===s&&(e=va())===s&&(e=da())===s&&(e=La())===s&&(e=Ca())===s&&(e=pa())===s&&(e=wa())===s&&(e=Ea()),e!==s&&(n=Ha())!==s?((u=si())===s&&(u=null),u!==s&&(o=Ha())!==s?(e=function(r,t){return {dataType:r,suffix:t}}(e,u),t=e):(Ru=t,t=s)):(Ru=t,t=s));}return t}())===s&&(t=function(){var t,e,n,u;t=Ru,(e=ha())===s&&(e=Aa())===s&&(e=ya())===s&&(e=Ta());e!==s&&Ha()!==s&&ka()!==s&&Ha()!==s?(Iu.test(r.charAt(Ru))?(n=r.charAt(Ru),Ru++):(n=s,0===xu&&$u(Nu)),n!==s&&Ha()!==s&&$a()!==s&&Ha()!==s?((u=si())===s&&(u=null),u!==s?(e={dataType:e,length:parseInt(n,10)},t=e):(Ru=t,t=s)):(Ru=t,t=s)):(Ru=t,t=s);t===s&&(t=Ru,(e=ha())===s&&(e=Aa())===s&&(e=ya())===s&&(e=Ta()),e!==s&&(e=Su(e)),t=e);return t}())===s&&(t=function(){var e;(e=function(){var t,e,n,u;return t=Ru,"json"===r.substr(Ru,4).toLowerCase()?(e=r.substr(Ru,4),Ru+=4):(e=s,0===xu&&$u(fn)),e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="JSON"):(Ru=t,t=s)):(Ru=t,t=s),t}())!==s&&(e=Su(e));return e}())===s&&(t=function(){var e;(e=function(){var t,e,n,u;return t=Ru,"tinytext"===r.substr(Ru,8).toLowerCase()?(e=r.substr(Ru,8),Ru+=8):(e=s,0===xu&&$u(dn)),e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="TINYTEXT"):(Ru=t,t=s)):(Ru=t,t=s),t}())===s&&(e=function(){var t,e,n,u;return t=Ru,"text"===r.substr(Ru,4).toLowerCase()?(e=r.substr(Ru,4),Ru+=4):(e=s,0===xu&&$u(Ln)),e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="TEXT"):(Ru=t,t=s)):(Ru=t,t=s),t}())===s&&(e=function(){var t,e,n,u;return t=Ru,"mediumtext"===r.substr(Ru,10).toLowerCase()?(e=r.substr(Ru,10),Ru+=10):(e=s,0===xu&&$u(Cn)),e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="MEDIUMTEXT"):(Ru=t,t=s)):(Ru=t,t=s),t}())===s&&(e=function(){var t,e,n,u;return t=Ru,"longtext"===r.substr(Ru,8).toLowerCase()?(e=r.substr(Ru,8),Ru+=8):(e=s,0===xu&&$u(pn)),e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="LONGTEXT"):(Ru=t,t=s)):(Ru=t,t=s),t}());e!==s&&(e={dataType:e});return e}())===s&&(t=function(){var t,e,n;t=Ru,(e=function(){var t,e,n,u;return t=Ru,"enum"===r.substr(Ru,4).toLowerCase()?(e=r.substr(Ru,4),Ru+=4):(e=s,0===xu&&$u(En)),e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="ENUM"):(Ru=t,t=s)):(Ru=t,t=s),t}())!==s&&Ha()!==s&&(n=Ds())!==s?(u=e,(o=n).parentheses=!0,t=e={dataType:u,expr:o}):(Ru=t,t=s);var u,o;return t}())===s&&(t=function(){var e;"boolean"===r.substr(Ru,7).toLowerCase()?(e=r.substr(Ru,7),Ru+=7):(e=s,0===xu&&$u(mu));e!==s&&(e={dataType:"BOOLEAN"});return e}()),t}function si(){var t,e,n;return t=Ru,(e=ba())===s&&(e=null),e!==s&&Ha()!==s?((n=function(){var t,e,n,u;return t=Ru,"zerofill"===r.substr(Ru,8).toLowerCase()?(e=r.substr(Ru,8),Ru+=8):(e=s,0===xu&&$u(cn)),e!==s?(n=Ru,xu++,u=oo(),xu--,u===s?n=void 0:(Ru=n,n=s),n!==s?(t=e="ZEROFILL"):(Ru=t,t=s)):(Ru=t,t=s),t}())===s&&(n=null),n!==s?(t=e=function(r,t){const e=[];return r&&e.push(r),t&&e.push(t),e}(e,n)):(Ru=t,t=s)):(Ru=t,t=s),t}const oi={ALTER:!0,ALL:!0,ADD:!0,AND:!0,AS:!0,ASC:!0,BETWEEN:!0,BY:!0,CALL:!0,CASE:!0,CREATE:!0,CONTAINS:!0,CURRENT_DATE:!0,CURRENT_TIME:!0,CURRENT_TIMESTAMP:!0,CURRENT_USER:!0,DELETE:!0,DESC:!0,DISTINCT:!0,DROP:!0,ELSE:!0,END:!0,EXISTS:!0,EXPLAIN:!0,FALSE:!0,FROM:!0,FULL:!0,GROUP:!0,HAVING:!0,IN:!0,INNER:!0,INSERT:!0,INTO:!0,IS:!0,JOIN:!0,JSON:!0,KEY:!0,LEFT:!0,LIKE:!0,LIMIT:!0,LOW_PRIORITY:!0,NOT:!0,NULL:!0,ON:!0,OR:!0,ORDER:!0,OUTER:!0,RECURSIVE:!0,RENAME:!0,RIGHT:!0,READ:!0,SELECT:!0,SESSION_USER:!0,SET:!0,SHOW:!0,STATUS:!0,SYSTEM_USER:!0,TABLE:!0,THEN:!0,TRUE:!0,TRUNCATE:!0,TYPE:!0,UNION:!0,UPDATE:!0,USING:!0,VALUES:!0,WITH:!0,WHEN:!0,WHERE:!0,WRITE:!0,GLOBAL:!0,SESSION:!0,LOCAL:!0,PERSIST:!0,PERSIST_ONLY:!0};function ai(r,t){return {type:"unary_expr",operator:r,expr:t}}function ii(r,t,e){return {type:"binary_expr",operator:r,left:t,right:e}}function ci(r){const t=n(Number.MAX_SAFE_INTEGER);return !(n(r)<t)}function li(r,t,e=3){const n=[r];for(let r=0;r<t.length;r++)n.push(t[r][e]);return n}function fi(r,t){let e=r;for(let r=0;r<t.length;r++)e=ii(t[r][1],e,t[r][3]);return e}function bi(r){const t=pi[r];return t||(r||null)}function vi(r){const t=new Set;for(let e of r.keys()){const r=e.split("::");if(!r){t.add(e);break}r&&r[1]&&(r[1]=bi(r[1])),t.add(r.join("::"));}return Array.from(t)}let di=[];const Li=new Set,Ci=new Set,pi={};if((e=a())!==s&&Ru===r.length)return e;throw e!==s&&Ru<r.length&&$u({type:"end"}),Fu(Ou,gu<r.length?r.charAt(gu):null,gu<r.length?ku(gu,gu+1):ku(gu,gu))}};},function(r,t,e){var n=e(0);function u(r,t,e,n){this.message=r,this.expected=t,this.found=e,this.location=n,this.name="SyntaxError","function"==typeof Error.captureStackTrace&&Error.captureStackTrace(this,u);}!function(r,t){function e(){this.constructor=r;}e.prototype=t.prototype,r.prototype=new e;}(u,Error),u.buildMessage=function(r,t){var e={literal:function(r){return '"'+u(r.text)+'"'},class:function(r){var t,e="";for(t=0;t<r.parts.length;t++)e+=r.parts[t]instanceof Array?s(r.parts[t][0])+"-"+s(r.parts[t][1]):s(r.parts[t]);return "["+(r.inverted?"^":"")+e+"]"},any:function(r){return "any character"},end:function(r){return "end of input"},other:function(r){return r.description}};function n(r){return r.charCodeAt(0).toString(16).toUpperCase()}function u(r){return r.replace(/\\/g,"\\\\").replace(/"/g,'\\"').replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(r){return "\\x0"+n(r)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(r){return "\\x"+n(r)}))}function s(r){return r.replace(/\\/g,"\\\\").replace(/\]/g,"\\]").replace(/\^/g,"\\^").replace(/-/g,"\\-").replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(r){return "\\x0"+n(r)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(r){return "\\x"+n(r)}))}return "Expected "+function(r){var t,n,u,s=new Array(r.length);for(t=0;t<r.length;t++)s[t]=(u=r[t],e[u.type](u));if(s.sort(),s.length>0){for(t=1,n=1;t<s.length;t++)s[t-1]!==s[t]&&(s[n]=s[t],n++);s.length=n;}switch(s.length){case 1:return s[0];case 2:return s[0]+" or "+s[1];default:return s.slice(0,-1).join(", ")+", or "+s[s.length-1]}}(r)+" but "+function(r){return r?'"'+u(r)+'"':"end of input"}(t)+" found."},r.exports={SyntaxError:u,parse:function(r,t){t=void 0!==t?t:{};var e,s={},o={start:Qs},a=Qs,i=Vs("EXTENSION",!0),c=Vs("SCHEMA",!0),l=Vs("VERSION",!0),b=Vs("INCREMENT",!0),v=Vs("MINVALUE",!0),d=function(r,t){return {resource:"sequence",prefix:r.toLowerCase(),value:t}},L=Vs("NO",!0),C=Vs("MAXVALUE",!0),p=Vs("START",!0),w=Vs("CACHE",!0),E=Vs("CYCLE",!0),h=Vs("OWNED",!0),A=Vs("NONE",!0),y=Vs("NULLS",!0),T=Vs("FIRST",!0),m=Vs("LAST",!0),S=Vs("AUTO_INCREMENT",!0),I=Vs("UNIQUE",!0),N=Vs("KEY",!0),R=Vs("PRIMARY",!0),_=Vs("COLUMN_FORMAT",!0),g=Vs("FIXED",!0),O=Vs("DYNAMIC",!0),x=Vs("DEFAULT",!0),U=Vs("STORAGE",!0),M=Vs("DISK",!0),D=Vs("MEMORY",!0),k=Vs("ALGORITHM",!0),$=Vs("INSTANT",!0),F=Vs("INPLACE",!0),P=Vs("COPY",!0),H=Vs("LOCK",!0),G=Vs("SHARED",!0),j=Vs("EXCLUSIVE",!0),Y=Vs("PRIMARY KEY",!0),B=Vs("FOREIGN KEY",!0),X=Vs("MATCH FULL",!0),W=Vs("MATCH PARTIAL",!0),V=Vs("MATCH SIMPLE",!0),K=Vs("ON DELETE",!0),q=Vs("ON UPDATE",!0),Z=Vs("RESTRICT",!0),z=Vs("CASCADE",!0),J=Vs("SET NULL",!0),Q=Vs("NO ACTION",!0),rr=Vs("SET DEFAULT",!0),tr=Vs("TRIGGER",!0),er=Vs("BEFORE",!0),nr=Vs("AFTER",!0),ur=Vs("INSTEAD OF",!0),sr=Vs("ON",!0),or=Vs("EXECUTE",!0),ar=Vs("PROCEDURE",!0),ir=Vs("OF",!0),cr=Vs("NOT",!0),lr=Vs("DEFERRABLE",!0),fr=Vs("INITIALLY IMMEDIATE",!0),br=Vs("INITIALLY DEFERRED",!0),vr=Vs("FOR",!0),dr=Vs("EACH",!0),Lr=Vs("ROW",!0),Cr=Vs("STATEMENT",!0),pr=Vs("CHARACTER",!0),wr=Vs("SET",!0),Er=Vs("CHARSET",!0),hr=Vs("COLLATE",!0),Ar=Vs("AVG_ROW_LENGTH",!0),yr=Vs("KEY_BLOCK_SIZE",!0),Tr=Vs("MAX_ROWS",!0),mr=Vs("MIN_ROWS",!0),Sr=Vs("STATS_SAMPLE_PAGES",!0),Ir=Vs("CONNECTION",!0),Nr=Vs("COMPRESSION",!0),Rr=Vs("'",!1),_r=Vs("ZLIB",!0),gr=Vs("LZ4",!0),Or=Vs("ENGINE",!0),xr=Vs("IN",!0),Ur=Vs("ACCESS SHARE",!0),Mr=Vs("ROW SHARE",!0),Dr=Vs("ROW EXCLUSIVE",!0),kr=Vs("SHARE UPDATE EXCLUSIVE",!0),$r=Vs("SHARE ROW EXCLUSIVE",!0),Fr=Vs("ACCESS EXCLUSIVE",!0),Pr=Vs("SHARE",!0),Hr=Vs("MODE",!0),Gr=Vs("NOWAIT",!0),jr=Vs("(",!1),Yr=Vs(")",!1),Br=function(r,t){return rl(r,t)},Xr=Vs("BTREE",!0),Wr=Vs("HASH",!0),Vr=Vs("GIST",!0),Kr=Vs("GIN",!0),qr=Vs("WITH",!0),Zr=Vs("PARSER",!0),zr=Vs("VISIBLE",!0),Jr=Vs("INVISIBLE",!0),Qr=function(r,t){return t.unshift(r),t.forEach(r=>{const{table:t,as:e}=r;il[t]=t,e&&(il[e]=t),function(r){const t=nl(r);r.clear(),t.forEach(t=>r.add(t));}(al);}),t},rt=Vs("FOLLOWING",!0),tt=Vs("PRECEDING",!0),et=Vs("CURRENT",!0),nt=Vs("UNBOUNDED",!0),ut=Vs("=",!1),st=function(r,t){return tl(r,t)},ot=Vs("!",!1),at=Vs(">=",!1),it=Vs(">",!1),ct=Vs("<=",!1),lt=Vs("<>",!1),ft=Vs("<",!1),bt=Vs("!=",!1),vt=Vs("@>",!1),dt=Vs("<@",!1),Lt=Vs("?",!1),Ct=Vs("?|",!1),pt=Vs("?&",!1),wt=Vs("#-",!1),Et=Vs("+",!1),ht=Vs("-",!1),At=Vs("*",!1),yt=Vs("/",!1),Tt=Vs("%",!1),mt=Vs("$",!1),St=function(r){return !0===Zc[r.toUpperCase()]},It=Vs('"',!1),Nt=/^[^"]/,Rt=Ks(['"'],!0,!1),_t=function(r){return r.join("")},gt=/^[^']/,Ot=Ks(["'"],!0,!1),xt=Vs("`",!1),Ut=/^[^`]/,Mt=Ks(["`"],!0,!1),Dt=/^[A-Za-z_]/,kt=Ks([["A","Z"],["a","z"],"_"],!1,!1),$t=/^[A-Za-z0-9_\-]/,Ft=Ks([["A","Z"],["a","z"],["0","9"],"_","-"],!1,!1),Pt=/^[A-Za-z0-9_]/,Ht=Ks([["A","Z"],["a","z"],["0","9"],"_"],!1,!1),Gt=Vs(":",!1),jt=Vs("OVER",!0),Yt=Vs("FIRST_VALUE",!0),Bt=Vs("LAST_VALUE",!0),Xt=Vs("ROW_NUMBER",!0),Wt=Vs("DENSE_RANK",!0),Vt=Vs("RANK",!0),Kt=Vs("LAG",!0),qt=Vs("LEAD",!0),Zt=Vs("NTH_VALUE",!0),zt=Vs("IGNORE",!0),Jt=Vs("RESPECT",!0),Qt=Vs("CENTURY",!0),re=Vs("DAY",!0),te=Vs("DECADE",!0),ee=Vs("DOW",!0),ne=Vs("DOY",!0),ue=Vs("EPOCH",!0),se=Vs("HOUR",!0),oe=Vs("ISODOW",!0),ae=Vs("ISOYEAR",!0),ie=Vs("MICROSECONDS",!0),ce=Vs("MILLENNIUM",!0),le=Vs("MILLISECONDS",!0),fe=Vs("MINUTE",!0),be=Vs("MONTH",!0),ve=Vs("QUARTER",!0),de=Vs("SECOND",!0),Le=Vs("TIMEZONE",!0),Ce=Vs("TIMEZONE_HOUR",!0),pe=Vs("TIMEZONE_MINUTE",!0),we=Vs("WEEK",!0),Ee=Vs("YEAR",!0),he=/^[\n]/,Ae=Ks(["\n"],!1,!1),ye=Vs("ON UPDATE CURRENT_TIMESTAMP",!0),Te=/^[^"\\\0-\x1F\x7F]/,me=Ks(['"',"\\",["\0",""],""],!0,!1),Se=/^[^'\\]/,Ie=Ks(["'","\\"],!0,!1),Ne=Vs("\\'",!1),Re=Vs('\\"',!1),_e=Vs("\\\\",!1),ge=Vs("\\/",!1),Oe=Vs("\\b",!1),xe=Vs("\\f",!1),Ue=Vs("\\n",!1),Me=Vs("\\r",!1),De=Vs("\\t",!1),ke=Vs("\\u",!1),$e=Vs("\\",!1),Fe=/^[\n\r]/,Pe=Ks(["\n","\r"],!1,!1),He=Vs(".",!1),Ge=/^[0-9]/,je=Ks([["0","9"]],!1,!1),Ye=/^[0-9a-fA-F]/,Be=Ks([["0","9"],["a","f"],["A","F"]],!1,!1),Xe=/^[eE]/,We=Ks(["e","E"],!1,!1),Ve=/^[+\-]/,Ke=Ks(["+","-"],!1,!1),qe=Vs("NULL",!0),Ze=Vs("NOT NULL",!0),ze=Vs("TRUE",!0),Je=Vs("TO",!0),Qe=Vs("FALSE",!0),rn=(Vs("DROP",!0)),tn=Vs("USE",!0),en=Vs("ALTER",!0),nn=Vs("SELECT",!0),un=Vs("UPDATE",!0),sn=Vs("CREATE",!0),on=Vs("TEMPORARY",!0),an=Vs("TEMP",!0),cn=Vs("IF NOT EXISTS",!0),ln=Vs("DELETE",!0),fn=Vs("INSERT",!0),bn=Vs("RECURSIVE",!1),vn=Vs("REPLACE",!0),dn=Vs("RETURNING",!0),Ln=Vs("RENAME",!0),Cn=(Vs("PARTITION",!0)),pn=Vs("INTO",!0),wn=Vs("FROM",!0),En=Vs("AS",!0),hn=Vs("TABLE",!0),An=Vs("DATABASE",!0),yn=Vs("SCHEME",!0),Tn=Vs("SEQUENCE",!0),mn=Vs("TABLESPACE",!0),Sn=Vs("LEFT",!0),In=Vs("RIGHT",!0),Nn=Vs("FULL",!0),Rn=Vs("INNER",!0),_n=Vs("JOIN",!0),gn=Vs("OUTER",!0),On=Vs("UNION",!0),xn=Vs("VALUES",!0),Un=Vs("USING",!0),Mn=Vs("WHERE",!0),Dn=Vs("GROUP",!0),kn=Vs("BY",!0),$n=Vs("ORDER",!0),Fn=Vs("HAVING",!0),Pn=Vs("LIMIT",!0),Hn=Vs("OFFSET",!0),Gn=Vs("ASC",!0),jn=Vs("DESC",!0),Yn=Vs("ALL",!0),Bn=Vs("DISTINCT",!0),Xn=Vs("BETWEEN",!0),Wn=Vs("IS",!0),Vn=Vs("LIKE",!0),Kn=Vs("ILIKE",!0),qn=Vs("EXISTS",!0),Zn=Vs("AND",!0),zn=Vs("OR",!0),Jn=Vs("ARRAY",!0),Qn=Vs("ARRAY_AGG",!0),ru=Vs("COUNT",!0),tu=Vs("GROUP_CONCAT",!0),eu=Vs("MAX",!0),nu=Vs("MIN",!0),uu=Vs("SUM",!0),su=Vs("AVG",!0),ou=Vs("EXTRACT",!0),au=Vs("CALL",!0),iu=Vs("CASE",!0),cu=Vs("WHEN",!0),lu=Vs("THEN",!0),fu=Vs("ELSE",!0),bu=Vs("END",!0),vu=Vs("CAST",!0),du=Vs("BOOL",!0),Lu=Vs("BOOLEAN",!0),Cu=Vs("CHAR",!0),pu=Vs("VARCHAR",!0),wu=Vs("NUMERIC",!0),Eu=Vs("DECIMAL",!0),hu=Vs("SIGNED",!0),Au=Vs("UNSIGNED",!0),yu=Vs("INT",!0),Tu=Vs("ZEROFILL",!0),mu=Vs("INTEGER",!0),Su=Vs("JSON",!0),Iu=Vs("JSONB",!0),Nu=Vs("GEOMETRY",!0),Ru=Vs("SMALLINT",!0),_u=Vs("TINYINT",!0),gu=Vs("TINYTEXT",!0),Ou=Vs("TEXT",!0),xu=Vs("MEDIUMTEXT",!0),Uu=Vs("LONGTEXT",!0),Mu=Vs("BIGINT",!0),Du=Vs("ENUM",!0),ku=Vs("FLOAT",!0),$u=Vs("DOUBLE",!0),Fu=Vs("DATE",!0),Pu=Vs("DATETIME",!0),Hu=Vs("ROWS",!0),Gu=Vs("TIME",!0),ju=Vs("TIMESTAMP",!0),Yu=Vs("TRUNCATE",!0),Bu=Vs("USER",!0),Xu=Vs("UUID",!0),Wu=Vs("CURRENT_DATE",!0),Vu=(Vs("INTERVAL",!0)),Ku=Vs("CURRENT_TIME",!0),qu=Vs("CURRENT_TIMESTAMP",!0),Zu=Vs("CURRENT_USER",!0),zu=Vs("SESSION_USER",!0),Ju=Vs("SYSTEM_USER",!0),Qu=Vs("GLOBAL",!0),rs=Vs("SESSION",!0),ts=Vs("LOCAL",!0),es=Vs("PERSIST",!0),ns=Vs("PERSIST_ONLY",!0),us=Vs("@",!1),ss=Vs("@@",!1),os=Vs("return",!0),as=Vs(":=",!1),is=Vs("::",!1),cs=Vs("DUAL",!0),ls=Vs("ADD",!0),fs=Vs("COLUMN",!0),bs=Vs("INDEX",!0),vs=Vs("FULLTEXT",!0),ds=Vs("SPATIAL",!0),Ls=Vs("COMMENT",!0),Cs=Vs("CONSTRAINT",!0),ps=Vs("CONCURRENTLY",!0),ws=Vs("REFERENCES",!0),Es=Vs("SQL_CALC_FOUND_ROWS",!0),hs=Vs("SQL_CACHE",!0),As=Vs("SQL_NO_CACHE",!0),ys=Vs("SQL_SMALL_RESULT",!0),Ts=Vs("SQL_BIG_RESULT",!0),ms=Vs("SQL_BUFFER_RESULT",!0),Ss=Vs(",",!1),Is=Vs("[",!1),Ns=Vs("]",!1),Rs=Vs(";",!1),_s=Vs("->",!1),gs=Vs("->>",!1),Os=Vs("#>",!1),xs=Vs("#>>",!1),Us=Vs("||",!1),Ms=Vs("&&",!1),Ds=Vs("/*",!1),ks=Vs("*/",!1),$s=Vs("--",!1),Fs=({type:"any"}),Ps=/^[ \t\n\r]/,Hs=Ks([" ","\t","\n","\r"],!1,!1),Gs=function(r){return {dataType:r}},js=0,Ys=[{line:1,column:1}],Bs=0,Xs=[],Ws=0;if("startRule"in t){if(!(t.startRule in o))throw new Error("Can't start parsing from rule \""+t.startRule+'".');a=o[t.startRule];}function Vs(r,t){return {type:"literal",text:r,ignoreCase:t}}function Ks(r,t,e){return {type:"class",parts:r,inverted:t,ignoreCase:e}}function qs(t){var e,n=Ys[t];if(n)return n;for(e=t-1;!Ys[e];)e--;for(n={line:(n=Ys[e]).line,column:n.column};e<t;)10===r.charCodeAt(e)?(n.line++,n.column=1):n.column++,e++;return Ys[t]=n,n}function Zs(r,t){var e=qs(r),n=qs(t);return {start:{offset:r,line:e.line,column:e.column},end:{offset:t,line:n.line,column:n.column}}}function zs(r){js<Bs||(js>Bs&&(Bs=js,Xs=[]),Xs.push(r));}function Js(r,t,e){return new u(u.buildMessage(r,t),r,t,e)}function Qs(){var r,t;return r=js,gc()!==s?((t=function(){var r,t,e,n,u,o,a,i;if(r=js,(t=to())!==s){if(e=[],n=js,(u=gc())!==s&&(o=Nc())!==s&&(a=gc())!==s&&(i=to())!==s?n=u=[u,o,a,i]:(js=n,n=s),n!==s)for(;n!==s;)e.push(n),n=js,(u=gc())!==s&&(o=Nc())!==s&&(a=gc())!==s&&(i=to())!==s?n=u=[u,o,a,i]:(js=n,n=s);else e=s;e!==s?(t=function(r,t){const e=[r&&r.ast||r];for(let r=0;r<t.length;r++)t[r][3]&&0!==t[r][3].length&&e.push(t[r][3]&&t[r][3].ast||t[r][3]);return {tableList:Array.from(ol),columnList:nl(al),ast:e}}(t,e),r=t):(js=r,r=s);}else js=r,r=s;return r}())===s&&(t=ro())===s&&(t=to()),t!==s?(r=t):(js=r,r=s)):(js=r,r=s),r}function ro(){var t;return (t=function(){var r,t,e,n,u,o;r=js,(t=ti())!==s&&gc()!==s&&(e=Li())!==s&&gc()!==s&&(n=ko())!==s?(a=t,i=e,(c=n)&&c.forEach(r=>ol.add(`${a}::${r.db}::${r.table}`)),t={tableList:Array.from(ol),columnList:nl(al),ast:{type:a.toLowerCase(),keyword:i.toLowerCase(),name:c}},r=t):(js=r,r=s);var a,i,c;r===s&&(r=js,(t=ti())!==s&&gc()!==s&&(e=Lc())!==s&&gc()!==s&&(n=Ta())!==s&&gc()!==s&&Ci()!==s&&gc()!==s&&(u=Ho())!==s&&gc()!==s?((o=function(){var r,t,e,n,u,o;r=js,(t=fo())===s&&(t=bo());if(t!==s){for(e=[],n=js,(u=gc())!==s?((o=fo())===s&&(o=bo()),o!==s?n=u=[u,o]:(js=n,n=s)):(js=n,n=s);n!==s;)e.push(n),n=js,(u=gc())!==s?((o=fo())===s&&(o=bo()),o!==s?n=u=[u,o]:(js=n,n=s)):(js=n,n=s);e!==s?(t=rl(t,e,1),r=t):(js=r,r=s);}else js=r,r=s;return r}())===s&&(o=null),o!==s&&gc()!==s?(t=function(r,t,e,n,u){return {tableList:Array.from(ol),columnList:nl(al),ast:{type:r.toLowerCase(),keyword:t.toLowerCase(),name:e,table:n,options:u}}}(t,e,n,u,o),r=t):(js=r,r=s)):(js=r,r=s));return r}())===s&&(t=function(){var t;(t=function(){var t,e,n,u,o,a,i,c,l,f;t=js,(e=ni())!==s&&gc()!==s?((n=ui())===s&&(n=null),n!==s&&gc()!==s&&Li()!==s&&gc()!==s?((u=si())===s&&(u=null),u!==s&&gc()!==s&&(o=ko())!==s&&gc()!==s&&(a=function(){var r,t,e,n,u,o,a,i,c;if(r=js,(t=Tc())!==s)if(gc()!==s)if((e=so())!==s){for(n=[],u=js,(o=gc())!==s&&(a=Ac())!==s&&(i=gc())!==s&&(c=so())!==s?u=o=[o,a,i,c]:(js=u,u=s);u!==s;)n.push(u),u=js,(o=gc())!==s&&(a=Ac())!==s&&(i=gc())!==s&&(c=so())!==s?u=o=[o,a,i,c]:(js=u,u=s);n!==s&&(u=gc())!==s&&(o=mc())!==s?(t=rl(e,n),r=t):(js=r,r=s);}else js=r,r=s;else js=r,r=s;else js=r,r=s;return r}())!==s&&gc()!==s?((i=function(){var r,t,e,n,u,o,a,i;if(r=js,(t=Ao())!==s){for(e=[],n=js,(u=gc())!==s?((o=Ac())===s&&(o=null),o!==s&&(a=gc())!==s&&(i=Ao())!==s?n=u=[u,o,a,i]:(js=n,n=s)):(js=n,n=s);n!==s;)e.push(n),n=js,(u=gc())!==s?((o=Ac())===s&&(o=null),o!==s&&(a=gc())!==s&&(i=Ao())!==s?n=u=[u,o,a,i]:(js=n,n=s)):(js=n,n=s);e!==s?(t=rl(t,e),r=t):(js=r,r=s);}else js=r,r=s;return r}())===s&&(i=null),i!==s&&gc()!==s?((c=function(){var t,e,n,u;t=js,"ignore"===r.substr(js,6).toLowerCase()?(e=r.substr(js,6),js+=6):(e=s,0===Ws&&zs(zt));e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?t=e=[e,n]:(js=t,t=s)):(js=t,t=s);return t}())===s&&(c=ii()),c===s&&(c=null),c!==s&&gc()!==s?((l=di())===s&&(l=null),l!==s&&gc()!==s?((f=eo())===s&&(f=null),f!==s?(b=e,v=n,d=u,C=a,p=i,w=c,E=l,h=f,(L=o)&&L.forEach(r=>ol.add(`create::${r.db}::${r.table}`)),e={tableList:Array.from(ol),columnList:nl(al),ast:{type:b[0].toLowerCase(),keyword:"table",temporary:v&&v.toLowerCase(),if_not_exists:d&&d[0].toLowerCase(),table:L,ignore_replace:w&&w[0].toLowerCase(),as:E&&E[0].toLowerCase(),query_expr:h&&h.ast,create_definitions:C,table_options:p}},t=e):(js=t,t=s)):(js=t,t=s)):(js=t,t=s)):(js=t,t=s)):(js=t,t=s)):(js=t,t=s)):(js=t,t=s);var b,v,d,L,C,p,w,E,h;t===s&&(t=js,(e=ni())!==s&&gc()!==s?((n=ui())===s&&(n=null),n!==s&&gc()!==s&&Li()!==s&&gc()!==s?((u=si())===s&&(u=null),u!==s&&gc()!==s&&(o=ko())!==s&&gc()!==s&&(a=function r(){var t,e;(t=function(){var r,t;r=js,Oi()!==s&&gc()!==s&&(t=ko())!==s?(r={type:"like",table:t}):(js=r,r=s);return r}())===s&&(t=js,Tc()!==s&&gc()!==s&&(e=r())!==s&&gc()!==s&&mc()!==s?((n=e).parentheses=!0,t=n):(js=t,t=s));var n;return t}())!==s?(e=function(r,t,e,n,u){return n&&n.forEach(r=>ol.add(`create::${r.db}::${r.table}`)),{tableList:Array.from(ol),columnList:nl(al),ast:{type:r[0].toLowerCase(),keyword:"table",temporary:t&&t.toLowerCase(),if_not_exists:e&&e[0].toLowerCase(),table:n,like:u}}}(e,n,u,o,a),t=e):(js=t,t=s)):(js=t,t=s)):(js=t,t=s));return t}())===s&&(t=function(){var t,e,n,u,o,a,i,c,l,f,b,v,d,L,C,p,w,E;t=js,(e=ni())!==s&&gc()!==s?((n=Ec())===s&&(n=null),n!==s&&gc()!==s?("trigger"===r.substr(js,7).toLowerCase()?(u=r.substr(js,7),js+=7):(u=s,0===Ws&&zs(tr)),u!==s&&gc()!==s&&(o=Ra())!==s&&gc()!==s?("before"===r.substr(js,6).toLowerCase()?(a=r.substr(js,6),js+=6):(a=s,0===Ws&&zs(er)),a===s&&("after"===r.substr(js,5).toLowerCase()?(a=r.substr(js,5),js+=5):(a=s,0===Ws&&zs(nr)),a===s&&("instead of"===r.substr(js,10).toLowerCase()?(a=r.substr(js,10),js+=10):(a=s,0===Ws&&zs(ur)))),a!==s&&gc()!==s&&(i=function(){var r,t,e,n,u,o,a,i;if(r=js,(t=Eo())!==s){for(e=[],n=js,(u=gc())!==s&&(o=ki())!==s&&(a=gc())!==s&&(i=Eo())!==s?n=u=[u,o,a,i]:(js=n,n=s);n!==s;)e.push(n),n=js,(u=gc())!==s&&(o=ki())!==s&&(a=gc())!==s&&(i=Eo())!==s?n=u=[u,o,a,i]:(js=n,n=s);e!==s?(t=rl(t,e),r=t):(js=r,r=s);}else js=r,r=s;return r}())!==s&&gc()!==s?("on"===r.substr(js,2).toLowerCase()?(c=r.substr(js,2),js+=2):(c=s,0===Ws&&zs(sr)),c!==s&&gc()!==s&&(l=Ho())!==s&&gc()!==s?(f=js,(b=bi())!==s&&(v=gc())!==s&&(d=Ho())!==s?f=b=[b,v,d]:(js=f,f=s),f===s&&(f=null),f!==s&&(b=gc())!==s?((v=function(){var t,e,n,u,o;t=js,e=js,"not"===r.substr(js,3).toLowerCase()?(n=r.substr(js,3),js+=3):(n=s,0===Ws&&zs(cr));n===s&&(n=null);n!==s&&(u=gc())!==s?("deferrable"===r.substr(js,10).toLowerCase()?(o=r.substr(js,10),js+=10):(o=s,0===Ws&&zs(lr)),o!==s?e=n=[n,u,o]:(js=e,e=s)):(js=e,e=s);e!==s&&(n=gc())!==s?("initially immediate"===r.substr(js,19).toLowerCase()?(u=r.substr(js,19),js+=19):(u=s,0===Ws&&zs(fr)),u===s&&("initially deferred"===r.substr(js,18).toLowerCase()?(u=r.substr(js,18),js+=18):(u=s,0===Ws&&zs(br))),u!==s?(i=u,e={keyword:(a=e)&&a[0]?a[0].toLowerCase()+" deferrable":"deferrable",args:i&&i.toLowerCase()},t=e):(js=t,t=s)):(js=t,t=s);var a,i;return t}())===s&&(v=null),v!==s&&(d=gc())!==s?((L=function(){var t,e,n,u;t=js,"for"===r.substr(js,3).toLowerCase()?(e=r.substr(js,3),js+=3):(e=s,0===Ws&&zs(vr));e!==s&&gc()!==s?("each"===r.substr(js,4).toLowerCase()?(n=r.substr(js,4),js+=4):(n=s,0===Ws&&zs(dr)),n===s&&(n=null),n!==s&&gc()!==s?("row"===r.substr(js,3).toLowerCase()?(u=r.substr(js,3),js+=3):(u=s,0===Ws&&zs(Lr)),u===s&&("statement"===r.substr(js,9).toLowerCase()?(u=r.substr(js,9),js+=9):(u=s,0===Ws&&zs(Cr))),u!==s?(o=e,i=u,e={keyword:(a=n)?`${o.toLowerCase()} ${a.toLowerCase()}`:o.toLowerCase(),args:i.toLowerCase()},t=e):(js=t,t=s)):(js=t,t=s)):(js=t,t=s);var o,a,i;return t}())===s&&(L=null),L!==s&&gc()!==s?((C=function(){var r,t;r=js,Fi()!==s&&gc()!==s&&Tc()!==s&&gc()!==s&&(t=la())!==s&&gc()!==s&&mc()!==s?(r={type:"when",cond:t,parentheses:!0}):(js=r,r=s);return r}())===s&&(C=null),C!==s&&gc()!==s?("execute"===r.substr(js,7).toLowerCase()?(p=r.substr(js,7),js+=7):(p=s,0===Ws&&zs(or)),p!==s&&gc()!==s?("procedure"===r.substr(js,9).toLowerCase()?(w=r.substr(js,9),js+=9):(w=s,0===Ws&&zs(ar)),w!==s&&gc()!==s&&(E=Bc())!==s?(h=n,A=u,T=i,m=l,S=f,I=v,N=L,R=C,_=E,e={type:"create",constraint:o,location:(y=a)&&y.toLowerCase(),events:T,table:m,from:S&&S[2],deferrable:I,for_each:N,when:R,execute:{keyword:"execute procedure",expr:_},constraint_type:A&&A.toLowerCase(),keyword:A&&A.toLowerCase(),constraint_kw:h&&h.toLowerCase(),resource:"constraint"},t=e):(js=t,t=s)):(js=t,t=s)):(js=t,t=s)):(js=t,t=s)):(js=t,t=s)):(js=t,t=s)):(js=t,t=s)):(js=t,t=s)):(js=t,t=s)):(js=t,t=s)):(js=t,t=s);var h,A,y,T,m,S,I,N,R,_;return t}())===s&&(t=function(){var t,e,n,u,o,a,f,b,v,d,L,C,p,w;t=js,(e=ni())!==s&&gc()!==s?("extension"===r.substr(js,9).toLowerCase()?(n=r.substr(js,9),js+=9):(n=s,0===Ws&&zs(i)),n!==s&&gc()!==s?((u=si())===s&&(u=null),u!==s&&gc()!==s?((o=Ra())===s&&(o=ja()),o!==s&&gc()!==s?((a=yi())===s&&(a=null),a!==s&&gc()!==s?(f=js,"schema"===r.substr(js,6).toLowerCase()?(b=r.substr(js,6),js+=6):(b=s,0===Ws&&zs(c)),b!==s&&(v=gc())!==s&&(d=Ra())!==s?f=b=[b,v,d]:(js=f,f=s),f===s&&(f=ja()),f===s&&(f=null),f!==s&&(b=gc())!==s?(v=js,"version"===r.substr(js,7).toLowerCase()?(d=r.substr(js,7),js+=7):(d=s,0===Ws&&zs(l)),d!==s&&(L=gc())!==s?((C=Ra())===s&&(C=ja()),C!==s?v=d=[d,L,C]:(js=v,v=s)):(js=v,v=s),v===s&&(v=null),v!==s&&(d=gc())!==s?(L=js,(C=bi())!==s&&(p=gc())!==s?((w=Ra())===s&&(w=ja()),w!==s?L=C=[C,p,w]:(js=L,L=s)):(js=L,L=s),L===s&&(L=null),L!==s?(e=function(r,t,e,n,u,s,o,a){return {type:"create",keyword:t.toLowerCase(),if_not_exists:e&&e[0].toLowerCase(),extension:ul(n),with:u&&u[0].toLowerCase(),schema:ul(s&&s[2].toLowerCase()),version:ul(o&&o[2]),from:ul(a&&a[2])}}(0,n,u,o,a,f,v,L),t=e):(js=t,t=s)):(js=t,t=s)):(js=t,t=s)):(js=t,t=s)):(js=t,t=s)):(js=t,t=s)):(js=t,t=s)):(js=t,t=s);return t}())===s&&(t=function(){var t,e,n,u,o,a,i,c,l,f,b,v,d,L,C,p,w,E;t=js,(e=ni())!==s&&gc()!==s?((n=pc())===s&&(n=null),n!==s&&gc()!==s&&(u=Lc())!==s&&gc()!==s?((o=function(){var t,e,n,u;t=js,"concurrently"===r.substr(js,12).toLowerCase()?(e=r.substr(js,12),js+=12):(e=s,0===Ws&&zs(ps));e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="CONCURRENTLY"):(js=t,t=s)):(js=t,t=s);return t}())===s&&(o=null),o!==s&&gc()!==s?((a=ma())===s&&(a=null),a!==s&&gc()!==s&&(i=Ci())!==s&&gc()!==s&&(c=Ho())!==s&&gc()!==s?((l=Uo())===s&&(l=null),l!==s&&gc()!==s&&Tc()!==s&&gc()!==s&&(f=function(){var r,t,e,n,u,o,a,i;if(r=js,(t=uo())!==s){for(e=[],n=js,(u=gc())!==s&&(o=Ac())!==s&&(a=gc())!==s&&(i=uo())!==s?n=u=[u,o,a,i]:(js=n,n=s);n!==s;)e.push(n),n=js,(u=gc())!==s&&(o=Ac())!==s&&(a=gc())!==s&&(i=uo())!==s?n=u=[u,o,a,i]:(js=n,n=s);e!==s?(t=rl(t,e),r=t):(js=r,r=s);}else js=r,r=s;return r}())!==s&&gc()!==s&&mc()!==s&&gc()!==s?(b=js,(v=yi())!==s&&(d=gc())!==s&&(L=Tc())!==s&&(C=gc())!==s&&(p=function(){var r,t,e,n,u,o,a,i;if(r=js,(t=Do())!==s){for(e=[],n=js,(u=gc())!==s&&(o=Ac())!==s&&(a=gc())!==s&&(i=Do())!==s?n=u=[u,o,a,i]:(js=n,n=s);n!==s;)e.push(n),n=js,(u=gc())!==s&&(o=Ac())!==s&&(a=gc())!==s&&(i=Do())!==s?n=u=[u,o,a,i]:(js=n,n=s);e!==s?(t=rl(t,e),r=t):(js=r,r=s);}else js=r,r=s;return r}())!==s&&(w=gc())!==s&&(E=mc())!==s?b=v=[v,d,L,C,p,w,E]:(js=b,b=s),b===s&&(b=null),b!==s&&(v=gc())!==s?(d=js,(L=function(){var t,e,n,u;t=js,"tablespace"===r.substr(js,10).toLowerCase()?(e=r.substr(js,10),js+=10):(e=s,0===Ws&&zs(mn));e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="TABLESPACE"):(js=t,t=s)):(js=t,t=s);return t}())!==s&&(C=gc())!==s&&(p=Ra())!==s?d=L=[L,C,p]:(js=d,d=s),d===s&&(d=null),d!==s&&(L=gc())!==s?((C=jo())===s&&(C=null),C!==s&&(p=gc())!==s?(h=e,A=n,y=u,T=o,m=a,S=i,I=c,N=l,R=f,_=b,g=d,O=C,e={tableList:Array.from(ol),columnList:nl(al),ast:{type:h[0].toLowerCase(),index_type:A&&A.toLowerCase(),keyword:y.toLowerCase(),concurrently:T&&T.toLowerCase(),index:m,on_kw:S[0].toLowerCase(),table:I,index_using:N,index_columns:R,with:_&&_[4],with_before_where:!0,tablespace:g&&{type:"origin",value:g[2]},where:O}},t=e):(js=t,t=s)):(js=t,t=s)):(js=t,t=s)):(js=t,t=s)):(js=t,t=s)):(js=t,t=s)):(js=t,t=s)):(js=t,t=s);var h,A,y,T,m,S,I,N,R,_,g,O;return t}())===s&&(t=function(){var t,e,n,u,o,a,i,c,l;t=js,(e=ni())!==s&&gc()!==s?((n=ui())===s&&(n=function(){var t,e,n,u;t=js,"temp"===r.substr(js,4).toLowerCase()?(e=r.substr(js,4),js+=4):(e=s,0===Ws&&zs(an));e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="TEMP"):(js=t,t=s)):(js=t,t=s);return t}()),n===s&&(n=null),n!==s&&gc()!==s&&function(){var t,e,n,u;t=js,"sequence"===r.substr(js,8).toLowerCase()?(e=r.substr(js,8),js+=8):(e=s,0===Ws&&zs(Tn));e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="SEQUENCE"):(js=t,t=s)):(js=t,t=s);return t}()!==s&&gc()!==s?((u=si())===s&&(u=null),u!==s&&gc()!==s&&(o=Ho())!==s&&gc()!==s?(a=js,(i=di())!==s&&(c=gc())!==s&&(l=Sa())!==s?a=i=[i,c,l]:(js=a,a=s),a===s&&(a=null),a!==s&&(i=gc())!==s?((c=function(){var r,t,e,n,u,o;if(r=js,(t=no())!==s){for(e=[],n=js,(u=gc())!==s&&(o=no())!==s?n=u=[u,o]:(js=n,n=s);n!==s;)e.push(n),n=js,(u=gc())!==s&&(o=no())!==s?n=u=[u,o]:(js=n,n=s);e!==s?(t=rl(t,e,1),r=t):(js=r,r=s);}else js=r,r=s;return r}())===s&&(c=null),c!==s?(f=e,b=n,v=u,L=a,C=c,(d=o).as=L&&L[2],e={tableList:Array.from(ol),columnList:nl(al),ast:{type:f[0].toLowerCase(),keyword:"sequence",temporary:b&&b.toLowerCase(),if_not_exists:v&&v[0].toLowerCase(),sequence:[d],create_definitions:C}},t=e):(js=t,t=s)):(js=t,t=s)):(js=t,t=s)):(js=t,t=s)):(js=t,t=s);var f,b,v,d,L,C;return t}())===s&&(t=function(){var t,e,n,u,o,a;t=js,(e=ni())!==s&&gc()!==s?((n=function(){var t,e,n,u;t=js,"database"===r.substr(js,8).toLowerCase()?(e=r.substr(js,8),js+=8):(e=s,0===Ws&&zs(An));e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="DATABASE"):(js=t,t=s)):(js=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=js,"scheme"===r.substr(js,6).toLowerCase()?(e=r.substr(js,6),js+=6):(e=s,0===Ws&&zs(yn));e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="SCHEME"):(js=t,t=s)):(js=t,t=s);return t}()),n!==s&&gc()!==s?((u=si())===s&&(u=null),u!==s&&gc()!==s&&(o=Ra())!==s&&gc()!==s?((a=function(){var r,t,e,n,u,o;if(r=js,(t=ho())!==s){for(e=[],n=js,(u=gc())!==s&&(o=ho())!==s?n=u=[u,o]:(js=n,n=s);n!==s;)e.push(n),n=js,(u=gc())!==s&&(o=ho())!==s?n=u=[u,o]:(js=n,n=s);e!==s?(t=rl(t,e,1),r=t):(js=r,r=s);}else js=r,r=s;return r}())===s&&(a=null),a!==s?(i=e,c=u,l=o,f=a,e={tableList:Array.from(ol),columnList:nl(al),ast:{type:i[0].toLowerCase(),keyword:"database",if_not_exists:c&&c[0].toLowerCase(),database:l,create_definitions:f}},t=e):(js=t,t=s)):(js=t,t=s)):(js=t,t=s)):(js=t,t=s);var i,c,l,f;return t}());return t}())===s&&(t=function(){var r,t,e,n;r=js,(t=ac())!==s&&gc()!==s?((e=Li())===s&&(e=null),e!==s&&gc()!==s&&(n=ko())!==s?(u=t,o=e,(a=n)&&a.forEach(r=>ol.add(`${u}::${r.db}::${r.table}`)),t={tableList:Array.from(ol),columnList:nl(al),ast:{type:u.toLowerCase(),keyword:o&&o.toLowerCase()||"table",name:a}},r=t):(js=r,r=s)):(js=r,r=s);var u,o,a;return r}())===s&&(t=function(){var r,t,e;r=js,(t=ci())!==s&&gc()!==s&&Li()!==s&&gc()!==s&&(e=function(){var r,t,e,n,u,o,a,i;if(r=js,(t=xo())!==s){for(e=[],n=js,(u=gc())!==s&&(o=Ac())!==s&&(a=gc())!==s&&(i=xo())!==s?n=u=[u,o,a,i]:(js=n,n=s);n!==s;)e.push(n),n=js,(u=gc())!==s&&(o=Ac())!==s&&(a=gc())!==s&&(i=xo())!==s?n=u=[u,o,a,i]:(js=n,n=s);e!==s?(t=rl(t,e),r=t):(js=r,r=s);}else js=r,r=s;return r}())!==s?((n=e).forEach(r=>r.forEach(r=>r.table&&ol.add(`rename::${r.db}::${r.table}`))),t={tableList:Array.from(ol),columnList:nl(al),ast:{type:"rename",table:n}},r=t):(js=r,r=s);var n;return r}())===s&&(t=function(){var t,e,n;t=js,(e=function(){var t,e,n,u;t=js,"call"===r.substr(js,4).toLowerCase()?(e=r.substr(js,4),js+=4):(e=s,0===Ws&&zs(au));e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="CALL"):(js=t,t=s)):(js=t,t=s);return t}())!==s&&gc()!==s&&(n=Bc())!==s?(u=n,e={tableList:Array.from(ol),columnList:nl(al),ast:{type:"call",expr:u}},t=e):(js=t,t=s);var u;return t}())===s&&(t=function(){var t,e,n;t=js,(e=function(){var t,e,n,u;t=js,"use"===r.substr(js,3).toLowerCase()?(e=r.substr(js,3),js+=3):(e=s,0===Ws&&zs(tn));e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?t=e=[e,n]:(js=t,t=s)):(js=t,t=s);return t}())!==s&&gc()!==s&&(n=ma())!==s?(u=n,ol.add(`use::${u}::null`),e={tableList:Array.from(ol),columnList:nl(al),ast:{type:"use",db:u}},t=e):(js=t,t=s);var u;return t}())===s&&(t=function(){var t,e,n,u;t=js,(e=function(){var t,e,n,u;t=js,"alter"===r.substr(js,5).toLowerCase()?(e=r.substr(js,5),js+=5):(e=s,0===Ws&&zs(en));e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?t=e=[e,n]:(js=t,t=s)):(js=t,t=s);return t}())!==s&&gc()!==s&&Li()!==s&&gc()!==s&&(n=ko())!==s&&gc()!==s&&(u=function(){var r,t,e,n,u,o,a,i;if(r=js,(t=lo())!==s){for(e=[],n=js,(u=gc())!==s&&(o=Ac())!==s&&(a=gc())!==s&&(i=lo())!==s?n=u=[u,o,a,i]:(js=n,n=s);n!==s;)e.push(n),n=js,(u=gc())!==s&&(o=Ac())!==s&&(a=gc())!==s&&(i=lo())!==s?n=u=[u,o,a,i]:(js=n,n=s);e!==s?(t=rl(t,e),r=t):(js=r,r=s);}else js=r,r=s;return r}())!==s?(a=u,(o=n)&&o.length>0&&o.forEach(r=>ol.add(`alter::${r.db}::${r.table}`)),e={tableList:Array.from(ol),columnList:nl(al),ast:{type:"alter",table:o,expr:a}},t=e):(js=t,t=s);var o,a;return t}())===s&&(t=function(){var t,e,n,u;t=js,(e=vi())!==s&&gc()!==s?((n=function(){var t,e,n,u;t=js,"global"===r.substr(js,6).toLowerCase()?(e=r.substr(js,6),js+=6):(e=s,0===Ws&&zs(Qu));e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="GLOBAL"):(js=t,t=s)):(js=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=js,"session"===r.substr(js,7).toLowerCase()?(e=r.substr(js,7),js+=7):(e=s,0===Ws&&zs(rs));e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="SESSION"):(js=t,t=s)):(js=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=js,"local"===r.substr(js,5).toLowerCase()?(e=r.substr(js,5),js+=5):(e=s,0===Ws&&zs(ts));e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="LOCAL"):(js=t,t=s)):(js=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=js,"persist"===r.substr(js,7).toLowerCase()?(e=r.substr(js,7),js+=7):(e=s,0===Ws&&zs(es));e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="PERSIST"):(js=t,t=s)):(js=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=js,"persist_only"===r.substr(js,12).toLowerCase()?(e=r.substr(js,12),js+=12):(e=s,0===Ws&&zs(ns));e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="PERSIST_ONLY"):(js=t,t=s)):(js=t,t=s);return t}()),n===s&&(n=null),n!==s&&gc()!==s&&(u=Fc())!==s?(o=n,(a=u).keyword=o,e={tableList:Array.from(ol),columnList:nl(al),ast:{type:"set",expr:a}},t=e):(js=t,t=s)):(js=t,t=s);var o,a;return t}())===s&&(t=function(){var t,e,n,u,o,a;t=js,(e=function(){var t,e,n,u;t=js,"lock"===r.substr(js,4).toLowerCase()?(e=r.substr(js,4),js+=4):(e=s,0===Ws&&zs(H));e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?t=e=[e,n]:(js=t,t=s)):(js=t,t=s);return t}())!==s&&gc()!==s?((n=Li())===s&&(n=null),n!==s&&gc()!==s&&(u=ko())!==s&&gc()!==s?((o=function(){var t,e,n,u;t=js,"in"===r.substr(js,2).toLowerCase()?(e=r.substr(js,2),js+=2):(e=s,0===Ws&&zs(xr));e!==s&&gc()!==s?("access share"===r.substr(js,12).toLowerCase()?(n=r.substr(js,12),js+=12):(n=s,0===Ws&&zs(Ur)),n===s&&("row share"===r.substr(js,9).toLowerCase()?(n=r.substr(js,9),js+=9):(n=s,0===Ws&&zs(Mr)),n===s&&("row exclusive"===r.substr(js,13).toLowerCase()?(n=r.substr(js,13),js+=13):(n=s,0===Ws&&zs(Dr)),n===s&&("share update exclusive"===r.substr(js,22).toLowerCase()?(n=r.substr(js,22),js+=22):(n=s,0===Ws&&zs(kr)),n===s&&("share row exclusive"===r.substr(js,19).toLowerCase()?(n=r.substr(js,19),js+=19):(n=s,0===Ws&&zs($r)),n===s&&("exclusive"===r.substr(js,9).toLowerCase()?(n=r.substr(js,9),js+=9):(n=s,0===Ws&&zs(j)),n===s&&("access exclusive"===r.substr(js,16).toLowerCase()?(n=r.substr(js,16),js+=16):(n=s,0===Ws&&zs(Fr)),n===s&&("share"===r.substr(js,5).toLowerCase()?(n=r.substr(js,5),js+=5):(n=s,0===Ws&&zs(Pr))))))))),n!==s&&gc()!==s?("mode"===r.substr(js,4).toLowerCase()?(u=r.substr(js,4),js+=4):(u=s,0===Ws&&zs(Hr)),u!==s?(e={mode:`in ${n.toLowerCase()} mode`},t=e):(js=t,t=s)):(js=t,t=s)):(js=t,t=s);return t}())===s&&(o=null),o!==s&&gc()!==s?("nowait"===r.substr(js,6).toLowerCase()?(a=r.substr(js,6),js+=6):(a=s,0===Ws&&zs(Gr)),a===s&&(a=null),a!==s?(i=n,l=o,f=a,(c=u)&&c.forEach(r=>ol.add(`lock::${r.db}::${r.table}`)),e={tableList:Array.from(ol),columnList:nl(al),ast:{type:"lock",keyword:i&&i.toLowerCase(),tables:c.map(r=>({table:r})),lock_mode:l,nowait:f}},t=e):(js=t,t=s)):(js=t,t=s)):(js=t,t=s)):(js=t,t=s);var i,c,l,f;return t}()),t}function to(){var r;return (r=eo())===s&&(r=function(){var r,t,e,n,u,o;r=js,(t=ei())!==s&&gc()!==s&&(e=ko())!==s&&gc()!==s&&vi()!==s&&gc()!==s&&(n=function(){var r,t,e,n,u,o,a,i;if(r=js,(t=ra())!==s){for(e=[],n=js,(u=gc())!==s&&(o=Ac())!==s&&(a=gc())!==s&&(i=ra())!==s?n=u=[u,o,a,i]:(js=n,n=s);n!==s;)e.push(n),n=js,(u=gc())!==s&&(o=Ac())!==s&&(a=gc())!==s&&(i=ra())!==s?n=u=[u,o,a,i]:(js=n,n=s);e!==s?(t=rl(t,e),r=t):(js=r,r=s);}else js=r,r=s;return r}())!==s&&gc()!==s?((u=jo())===s&&(u=null),u!==s&&gc()!==s?((o=ta())===s&&(o=null),o!==s?(i=n,c=u,l=o,(a=e)&&a.forEach(r=>{const{db:t,as:e,table:n}=r;ol.add(`update::${t}::${n}`);}),i&&i.forEach(r=>al.add(`update::${r.table}::${r.column}`)),t={tableList:Array.from(ol),columnList:nl(al),ast:{type:"update",table:a,set:i,where:c,returning:l}},r=t):(js=r,r=s)):(js=r,r=s)):(js=r,r=s);var a,i,c,l;return r}())===s&&(r=function(){var r,t,e,n,u,o,a,i;r=js,(t=ua())!==s&&gc()!==s?((e=fi())===s&&(e=null),e!==s&&gc()!==s&&(n=Ho())!==s&&gc()!==s?((u=na())===s&&(u=null),u!==s&&gc()!==s&&Tc()!==s&&gc()!==s&&(o=function(){var r,t,e,n,u,o,a,i;if(r=js,(t=Na())!==s){for(e=[],n=js,(u=gc())!==s&&(o=Ac())!==s&&(a=gc())!==s&&(i=Na())!==s?n=u=[u,o,a,i]:(js=n,n=s);n!==s;)e.push(n),n=js,(u=gc())!==s&&(o=Ac())!==s&&(a=gc())!==s&&(i=Na())!==s?n=u=[u,o,a,i]:(js=n,n=s);e!==s?(t=Br(t,e),r=t):(js=r,r=s);}else js=r,r=s;return r}())!==s&&gc()!==s&&mc()!==s&&gc()!==s&&(a=ea())!==s&&gc()!==s?((i=ta())===s&&(i=null),i!==s?(t=function(r,t,e,n,u,s){if(t&&(ol.add(`insert::${t.db}::${t.table}`),t.as=null),n){let r=t&&t.table||null;Array.isArray(u)&&u.forEach((r,t)=>{if(r.value.length!=n.length)throw new Error("Error: column count doesn't match value count at row "+(t+1))}),n.forEach(t=>al.add(`insert::${r}::${t}`));}return {tableList:Array.from(ol),columnList:nl(al),ast:{type:r,table:[t],columns:n,values:u,partition:e,returning:s}}}(t,n,u,o,a,i),r=t):(js=r,r=s)):(js=r,r=s)):(js=r,r=s)):(js=r,r=s);return r}())===s&&(r=function(){var r,t,e,n,u,o;r=js,(t=ua())!==s&&gc()!==s&&fi()!==s&&gc()!==s&&(e=Ho())!==s&&gc()!==s?((n=na())===s&&(n=null),n!==s&&gc()!==s&&(u=ea())!==s&&gc()!==s?((o=ta())===s&&(o=null),o!==s?(a=t,c=n,l=u,f=o,(i=e)&&(ol.add(`insert::${i.db}::${i.table}`),al.add(`insert::${i.table}::(.*)`),i.as=null),t={tableList:Array.from(ol),columnList:nl(al),ast:{type:a,table:[i],columns:null,values:l,partition:c,returning:f}},r=t):(js=r,r=s)):(js=r,r=s)):(js=r,r=s);var a,i,c,l,f;return r}())===s&&(r=function(){var r,t,e,n,u;r=js,(t=oi())!==s&&gc()!==s?((e=ko())===s&&(e=null),e!==s&&gc()!==s&&(n=Oo())!==s&&gc()!==s?((u=jo())===s&&(u=null),u!==s?(t=function(r,t,e){if(t&&t.forEach(r=>{r.table&&ol.add(`delete::${r.db}::${r.table}`),al.add(`delete::${r.table}::(.*)`);}),null===r&&1===t.length){const e=t[0];r=[{db:e.db,table:e.table,as:e.as,addition:!0}];}return {tableList:Array.from(ol),columnList:nl(al),ast:{type:"delete",table:r,from:t,where:e}}}(e,n,u),r=t):(js=r,r=s)):(js=r,r=s)):(js=r,r=s);return r}())===s&&(r=ro())===s&&(r=function(){var r,t;r=[],t=$c();for(;t!==s;)r.push(t),t=$c();return r}()),r}function eo(){var r,t,e,n,u,o,a,i,c,l;if(r=js,(t=yo())!==s){for(e=[],n=js,(u=gc())!==s&&(o=Ei())!==s&&(a=gc())!==s?((i=Ii())===s&&(i=null),i!==s&&(c=gc())!==s&&(l=yo())!==s?n=u=[u,o,a,i,c,l]:(js=n,n=s)):(js=n,n=s);n!==s;)e.push(n),n=js,(u=gc())!==s&&(o=Ei())!==s&&(a=gc())!==s?((i=Ii())===s&&(i=null),i!==s&&(c=gc())!==s&&(l=yo())!==s?n=u=[u,o,a,i,c,l]:(js=n,n=s)):(js=n,n=s);e!==s&&(n=gc())!==s?((u=Zo())===s&&(u=null),u!==s&&(o=gc())!==s?((a=Qo())===s&&(a=null),a!==s?(r=t=function(r,t,e,n){let u=r;for(let r=0;r<t.length;r++)u._next=t[r][5],u.union=t[r][3]?"union all":"union",u=u._next;return e&&(r._orderby=e),n&&(r._limit=n),{tableList:Array.from(ol),columnList:nl(al),ast:r}}(t,e,u,a)):(js=r,r=s)):(js=r,r=s)):(js=r,r=s);}else js=r,r=s;return r}function no(){var t;return (t=function(){var t,e,n,u,o,a;return t=js,"increment"===r.substr(js,9).toLowerCase()?(e=r.substr(js,9),js+=9):(e=s,0===Ws&&zs(b)),e!==s&&gc()!==s?((n=Ti())===s&&(n=null),n!==s&&gc()!==s&&(u=Wa())!==s?(o=e,a=u,t=e={resource:"sequence",prefix:n?o.toLowerCase()+" by":o.toLowerCase(),value:a}):(js=t,t=s)):(js=t,t=s),t}())===s&&(t=function(){var t,e,n;return t=js,"minvalue"===r.substr(js,8).toLowerCase()?(e=r.substr(js,8),js+=8):(e=s,0===Ws&&zs(v)),e!==s&&gc()!==s&&(n=Wa())!==s?(t=e=d(e,n)):(js=t,t=s),t===s&&(t=js,"no"===r.substr(js,2).toLowerCase()?(e=r.substr(js,2),js+=2):(e=s,0===Ws&&zs(L)),e!==s&&gc()!==s?("minvalue"===r.substr(js,8).toLowerCase()?(n=r.substr(js,8),js+=8):(n=s,0===Ws&&zs(v)),n!==s?(t=e={resource:"sequence",value:{type:"origin",value:"no minvalue"}}):(js=t,t=s)):(js=t,t=s)),t}())===s&&(t=function(){var t,e,n;return t=js,"maxvalue"===r.substr(js,8).toLowerCase()?(e=r.substr(js,8),js+=8):(e=s,0===Ws&&zs(C)),e!==s&&gc()!==s&&(n=Wa())!==s?(t=e=d(e,n)):(js=t,t=s),t===s&&(t=js,"no"===r.substr(js,2).toLowerCase()?(e=r.substr(js,2),js+=2):(e=s,0===Ws&&zs(L)),e!==s&&gc()!==s?("maxvalue"===r.substr(js,8).toLowerCase()?(n=r.substr(js,8),js+=8):(n=s,0===Ws&&zs(C)),n!==s?(t=e={resource:"sequence",value:{type:"origin",value:"no maxvalue"}}):(js=t,t=s)):(js=t,t=s)),t}())===s&&(t=function(){var t,e,n,u,o,a;return t=js,"start"===r.substr(js,5).toLowerCase()?(e=r.substr(js,5),js+=5):(e=s,0===Ws&&zs(p)),e!==s&&gc()!==s?((n=yi())===s&&(n=null),n!==s&&gc()!==s&&(u=Wa())!==s?(o=e,a=u,t=e={resource:"sequence",prefix:n?o.toLowerCase()+" with":o.toLowerCase(),value:a}):(js=t,t=s)):(js=t,t=s),t}())===s&&(t=function(){var t,e,n;return t=js,"cache"===r.substr(js,5).toLowerCase()?(e=r.substr(js,5),js+=5):(e=s,0===Ws&&zs(w)),e!==s&&gc()!==s&&(n=Wa())!==s?(t=e=d(e,n)):(js=t,t=s),t}())===s&&(t=function(){var t,e,n;return t=js,"no"===r.substr(js,2).toLowerCase()?(e=r.substr(js,2),js+=2):(e=s,0===Ws&&zs(L)),e===s&&(e=null),e!==s&&gc()!==s?("cycle"===r.substr(js,5).toLowerCase()?(n=r.substr(js,5),js+=5):(n=s,0===Ws&&zs(E)),n!==s?(t=e={resource:"sequence",value:{type:"origin",value:e?"no cycle":"cycle"}}):(js=t,t=s)):(js=t,t=s),t}())===s&&(t=function(){var t,e,n;return t=js,"owned"===r.substr(js,5).toLowerCase()?(e=r.substr(js,5),js+=5):(e=s,0===Ws&&zs(h)),e!==s&&gc()!==s&&Ti()!==s&&gc()!==s?("none"===r.substr(js,4).toLowerCase()?(n=r.substr(js,4),js+=4):(n=s,0===Ws&&zs(A)),n!==s?(t=e={resource:"sequence",prefix:"owned by",value:{type:"origin",value:"none"}}):(js=t,t=s)):(js=t,t=s),t===s&&(t=js,"owned"===r.substr(js,5).toLowerCase()?(e=r.substr(js,5),js+=5):(e=s,0===Ws&&zs(h)),e!==s&&gc()!==s&&Ti()!==s&&gc()!==s&&(n=Ta())!==s?(t=e={resource:"sequence",prefix:"owned by",value:n}):(js=t,t=s)),t}()),t}function uo(){var t,e,n,u,o,a,i,c,l,f,b;return t=js,(e=la())!==s&&gc()!==s?((n=io())===s&&(n=null),n!==s&&gc()!==s?((u=ma())===s&&(u=null),u!==s&&gc()!==s?((o=mi())===s&&(o=Si()),o===s&&(o=null),o!==s&&gc()!==s?(a=js,"nulls"===r.substr(js,5).toLowerCase()?(i=r.substr(js,5),js+=5):(i=s,0===Ws&&zs(y)),i!==s&&(c=gc())!==s?("first"===r.substr(js,5).toLowerCase()?(l=r.substr(js,5),js+=5):(l=s,0===Ws&&zs(T)),l===s&&("last"===r.substr(js,4).toLowerCase()?(l=r.substr(js,4),js+=4):(l=s,0===Ws&&zs(m))),l!==s?a=i=[i,c,l]:(js=a,a=s)):(js=a,a=s),a===s&&(a=null),a!==s?(b=a,t=e={column:e,collate:n,opclass:u,order:(f=o)&&f.toLowerCase()||"asc",nulls:b&&`${b[0].toLowerCase()} ${b[2].toLowerCase()}`}):(js=t,t=s)):(js=t,t=s)):(js=t,t=s)):(js=t,t=s)):(js=t,t=s),t}function so(){var t;return (t=ao())===s&&(t=vo())===s&&(t=Lo())===s&&(t=function(){var t;(t=function(){var t,e,n,u,o,a;t=js,(e=Co())===s&&(e=null);e!==s&&gc()!==s?("primary key"===r.substr(js,11).toLowerCase()?(n=r.substr(js,11),js+=11):(n=s,0===Ws&&zs(Y)),n!==s&&gc()!==s?((u=Uo())===s&&(u=null),u!==s&&gc()!==s&&(o=So())!==s&&gc()!==s?((a=Mo())===s&&(a=null),a!==s?(c=n,l=u,f=o,b=a,e={constraint:(i=e)&&i.constraint,definition:f,constraint_type:c.toLowerCase(),keyword:i&&i.keyword,index_type:l,resource:"constraint",index_options:b},t=e):(js=t,t=s)):(js=t,t=s)):(js=t,t=s)):(js=t,t=s);var i,c,l,f,b;return t}())===s&&(t=function(){var r,t,e,n,u,o,a,i;r=js,(t=Co())===s&&(t=null);t!==s&&gc()!==s&&(e=pc())!==s&&gc()!==s?((n=Lc())===s&&(n=Cc()),n===s&&(n=null),n!==s&&gc()!==s?((u=Na())===s&&(u=null),u!==s&&gc()!==s?((o=Uo())===s&&(o=null),o!==s&&gc()!==s&&(a=So())!==s&&gc()!==s?((i=Mo())===s&&(i=null),i!==s?(l=e,f=n,b=u,v=o,d=a,L=i,t={constraint:(c=t)&&c.constraint,definition:d,constraint_type:f&&`${l.toLowerCase()} ${f.toLowerCase()}`||l.toLowerCase(),keyword:c&&c.keyword,index_type:v,index:b,resource:"constraint",index_options:L},r=t):(js=r,r=s)):(js=r,r=s)):(js=r,r=s)):(js=r,r=s)):(js=r,r=s);var c,l,f,b,v,d,L;return r}())===s&&(t=function(){var t,e,n,u,o,a;t=js,(e=Co())===s&&(e=null);e!==s&&gc()!==s?("foreign key"===r.substr(js,11).toLowerCase()?(n=r.substr(js,11),js+=11):(n=s,0===Ws&&zs(B)),n!==s&&gc()!==s?((u=Na())===s&&(u=null),u!==s&&gc()!==s&&(o=So())!==s&&gc()!==s?((a=po())===s&&(a=null),a!==s?(c=n,l=u,f=o,b=a,e={constraint:(i=e)&&i.constraint,definition:f,constraint_type:c,keyword:i&&i.keyword,index:l,resource:"constraint",reference_definition:b},t=e):(js=t,t=s)):(js=t,t=s)):(js=t,t=s)):(js=t,t=s);var i,c,l,f,b;return t}());return t}()),t}function oo(){var t,e,n,u,o;return (t=function(){var r,t,e;r=js,(t=Ga())===s&&(t=Ha());t!==s&&gc()!==s?((e=co())===s&&(e=null),e!==s?(u=e,(n=t)&&!n.value&&(n.value="null"),r=t={default_val:u,nullable:n}):(js=r,r=s)):(js=r,r=s);var n,u;r===s&&(r=js,(t=co())!==s&&gc()!==s?((e=Ga())===s&&(e=Ha()),e===s&&(e=null),e!==s?(t=function(r,t){return t&&!t.value&&(t.value="null"),{default_val:r,nullable:t}}(t,e),r=t):(js=r,r=s)):(js=r,r=s));return r}())===s&&(t=js,"auto_increment"===r.substr(js,14).toLowerCase()?(e=r.substr(js,14),js+=14):(e=s,0===Ws&&zs(S)),e!==s&&(e={auto_increment:e.toLowerCase()}),(t=e)===s&&(t=js,e=js,"unique"===r.substr(js,6).toLowerCase()?(n=r.substr(js,6),js+=6):(n=s,0===Ws&&zs(I)),n!==s&&(u=gc())!==s?("key"===r.substr(js,3).toLowerCase()?(o=r.substr(js,3),js+=3):(o=s,0===Ws&&zs(N)),o===s&&(o=null),o!==s?e=n=[n,u,o]:(js=e,e=s)):(js=e,e=s),e===s&&(e=js,"primary"===r.substr(js,7).toLowerCase()?(n=r.substr(js,7),js+=7):(n=s,0===Ws&&zs(R)),n===s&&(n=null),n!==s&&(u=gc())!==s?("key"===r.substr(js,3).toLowerCase()?(o=r.substr(js,3),js+=3):(o=s,0===Ws&&zs(N)),o!==s?e=n=[n,u,o]:(js=e,e=s)):(js=e,e=s)),e!==s&&(e=function(r){const t=[];return r&&t.push(r[0],r[2]),{unique_or_primary:t.filter(r=>r).join(" ").toLowerCase("")}}(e)),(t=e)===s&&(t=js,(e=Uc())!==s&&(e={comment:e}),(t=e)===s&&(t=js,(e=io())!==s&&(e={collate:e}),(t=e)===s&&(t=js,(e=function(){var t,e,n;t=js,"column_format"===r.substr(js,13).toLowerCase()?(e=r.substr(js,13),js+=13):(e=s,0===Ws&&zs(_));e!==s&&gc()!==s?("fixed"===r.substr(js,5).toLowerCase()?(n=r.substr(js,5),js+=5):(n=s,0===Ws&&zs(g)),n===s&&("dynamic"===r.substr(js,7).toLowerCase()?(n=r.substr(js,7),js+=7):(n=s,0===Ws&&zs(O)),n===s&&("default"===r.substr(js,7).toLowerCase()?(n=r.substr(js,7),js+=7):(n=s,0===Ws&&zs(x)))),n!==s?(e=function(r,t){return {type:"column_format",value:t.toLowerCase()}}(0,n),t=e):(js=t,t=s)):(js=t,t=s);return t}())!==s&&(e={column_format:e}),(t=e)===s&&(t=js,(e=function(){var t,e,n;t=js,"storage"===r.substr(js,7).toLowerCase()?(e=r.substr(js,7),js+=7):(e=s,0===Ws&&zs(U));e!==s&&gc()!==s?("disk"===r.substr(js,4).toLowerCase()?(n=r.substr(js,4),js+=4):(n=s,0===Ws&&zs(M)),n===s&&("memory"===r.substr(js,6).toLowerCase()?(n=r.substr(js,6),js+=6):(n=s,0===Ws&&zs(D))),n!==s?(e={type:"storage",value:n.toLowerCase()},t=e):(js=t,t=s)):(js=t,t=s);return t}())!==s&&(e={storage:e}),(t=e)===s&&(t=js,(e=po())!==s&&(e={reference_definition:e}),t=e))))))),t}function ao(){var r,t,e,n,u,o,a;return r=js,(t=Ta())!==s&&gc()!==s&&(e=Kc())!==s&&gc()!==s?((n=function(){var r,t,e,n,u,o;if(r=js,(t=oo())!==s)if(gc()!==s){for(e=[],n=js,(u=gc())!==s&&(o=oo())!==s?n=u=[u,o]:(js=n,n=s);n!==s;)e.push(n),n=js,(u=gc())!==s&&(o=oo())!==s?n=u=[u,o]:(js=n,n=s);e!==s?(r=t=function(r,t){let e=r;for(let r=0;r<t.length;r++)e={...e,...t[r][1]};return e}(t,e)):(js=r,r=s);}else js=r,r=s;else js=r,r=s;return r}())===s&&(n=null),n!==s?(u=t,o=e,a=n,al.add(`create::${u.table}::${u.column}`),r=t={column:u,definition:o,resource:"column",...a||{}}):(js=r,r=s)):(js=r,r=s),r}function io(){var t,e;return t=js,function(){var t,e,n,u;t=js,"collate"===r.substr(js,7).toLowerCase()?(e=r.substr(js,7),js+=7):(e=s,0===Ws&&zs(hr));e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="COLLATE"):(js=t,t=s)):(js=t,t=s);return t}()!==s&&gc()!==s&&(e=ma())!==s?(t={type:"collate",value:e}):(js=t,t=s),t}function co(){var r,t;return r=js,Qa()!==s&&gc()!==s?((t=Pa())===s&&(t=la()),t!==s?(r={type:"default",value:t}):(js=r,r=s)):(js=r,r=s),r}function lo(){var r;return (r=function(){var r,t,e,n;r=js,(t=vc())!==s&&gc()!==s?((e=dc())===s&&(e=null),e!==s&&gc()!==s&&(n=ao())!==s?(u=e,o=n,t={action:"add",...o,keyword:u,resource:"column",type:"alter"},r=t):(js=r,r=s)):(js=r,r=s);var u,o;return r}())===s&&(r=function(){var r,t,e;r=js,ti()!==s&&gc()!==s?((t=dc())===s&&(t=null),t!==s&&gc()!==s&&(e=Ta())!==s?(r={action:"drop",column:e,keyword:t,resource:"column",type:"alter"}):(js=r,r=s)):(js=r,r=s);return r}())===s&&(r=function(){var r,t,e;r=js,(t=vc())!==s&&gc()!==s&&(e=vo())!==s?(n=e,t={action:"add",type:"alter",...n},r=t):(js=r,r=s);var n;return r}())===s&&(r=function(){var r,t,e;r=js,(t=vc())!==s&&gc()!==s&&(e=Lo())!==s?(n=e,t={action:"add",type:"alter",...n},r=t):(js=r,r=s);var n;return r}())===s&&(r=function(){var r,t,e,n;r=js,(t=ci())!==s&&gc()!==s?((e=ri())===s&&(e=di()),e===s&&(e=null),e!==s&&gc()!==s&&(n=ma())!==s?(o=n,t={action:"rename",type:"alter",resource:"table",keyword:(u=e)&&u[0].toLowerCase(),table:o},r=t):(js=r,r=s)):(js=r,r=s);var u,o;return r}())===s&&(r=fo())===s&&(r=bo()),r}function fo(){var t,e,n,u;return t=js,"algorithm"===r.substr(js,9).toLowerCase()?(e=r.substr(js,9),js+=9):(e=s,0===Ws&&zs(k)),e!==s&&gc()!==s?((n=bc())===s&&(n=null),n!==s&&gc()!==s?("default"===r.substr(js,7).toLowerCase()?(u=r.substr(js,7),js+=7):(u=s,0===Ws&&zs(x)),u===s&&("instant"===r.substr(js,7).toLowerCase()?(u=r.substr(js,7),js+=7):(u=s,0===Ws&&zs($)),u===s&&("inplace"===r.substr(js,7).toLowerCase()?(u=r.substr(js,7),js+=7):(u=s,0===Ws&&zs(F)),u===s&&("copy"===r.substr(js,4).toLowerCase()?(u=r.substr(js,4),js+=4):(u=s,0===Ws&&zs(P))))),u!==s?(t=e={type:"alter",keyword:"algorithm",resource:"algorithm",symbol:n,algorithm:u}):(js=t,t=s)):(js=t,t=s)):(js=t,t=s),t}function bo(){var t,e,n,u;return t=js,"lock"===r.substr(js,4).toLowerCase()?(e=r.substr(js,4),js+=4):(e=s,0===Ws&&zs(H)),e!==s&&gc()!==s?((n=bc())===s&&(n=null),n!==s&&gc()!==s?("default"===r.substr(js,7).toLowerCase()?(u=r.substr(js,7),js+=7):(u=s,0===Ws&&zs(x)),u===s&&("none"===r.substr(js,4).toLowerCase()?(u=r.substr(js,4),js+=4):(u=s,0===Ws&&zs(A)),u===s&&("shared"===r.substr(js,6).toLowerCase()?(u=r.substr(js,6),js+=6):(u=s,0===Ws&&zs(G)),u===s&&("exclusive"===r.substr(js,9).toLowerCase()?(u=r.substr(js,9),js+=9):(u=s,0===Ws&&zs(j))))),u!==s?(t=e={type:"alter",keyword:"lock",resource:"lock",symbol:n,lock:u}):(js=t,t=s)):(js=t,t=s)):(js=t,t=s),t}function vo(){var r,t,e,n,u,o,a,i;return r=js,(t=Lc())===s&&(t=Cc()),t!==s&&gc()!==s?((e=Na())===s&&(e=null),e!==s&&gc()!==s?((n=Uo())===s&&(n=null),n!==s&&gc()!==s&&(u=So())!==s&&gc()!==s?((o=Mo())===s&&(o=null),o!==s&&gc()!==s?(a=n,i=o,r=t={index:e,definition:u,keyword:t.toLowerCase(),index_type:a,resource:"index",index_options:i}):(js=r,r=s)):(js=r,r=s)):(js=r,r=s)):(js=r,r=s),r}function Lo(){var t,e,n,u,o,a,i,c,l;return t=js,(e=function(){var t,e,n,u;t=js,"fulltext"===r.substr(js,8).toLowerCase()?(e=r.substr(js,8),js+=8):(e=s,0===Ws&&zs(vs));e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="FULLTEXT"):(js=t,t=s)):(js=t,t=s);return t}())===s&&(e=function(){var t,e,n,u;t=js,"spatial"===r.substr(js,7).toLowerCase()?(e=r.substr(js,7),js+=7):(e=s,0===Ws&&zs(ds));e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="SPATIAL"):(js=t,t=s)):(js=t,t=s);return t}()),e!==s&&gc()!==s?((n=Lc())===s&&(n=Cc()),n===s&&(n=null),n!==s&&gc()!==s?((u=Na())===s&&(u=null),u!==s&&gc()!==s&&(o=So())!==s&&gc()!==s?((a=Mo())===s&&(a=null),a!==s&&gc()!==s?(i=e,l=a,t=e={index:u,definition:o,keyword:(c=n)&&`${i.toLowerCase()} ${c.toLowerCase()}`||i.toLowerCase(),index_options:l,resource:"index"}):(js=t,t=s)):(js=t,t=s)):(js=t,t=s)):(js=t,t=s),t}function Co(){var r,t,e,n;return r=js,(t=Ec())!==s&&gc()!==s?((e=ma())===s&&(e=null),e!==s?(n=e,r=t={keyword:t.toLowerCase(),constraint:n}):(js=r,r=s)):(js=r,r=s),r}function po(){var t,e,n,u,o,a,i,c,l,f;return t=js,(e=function(){var t,e,n,u;t=js,"references"===r.substr(js,10).toLowerCase()?(e=r.substr(js,10),js+=10):(e=s,0===Ws&&zs(ws));e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="REFERENCES"):(js=t,t=s)):(js=t,t=s);return t}())!==s&&gc()!==s&&(n=ko())!==s&&gc()!==s&&(u=So())!==s&&gc()!==s?("match full"===r.substr(js,10).toLowerCase()?(o=r.substr(js,10),js+=10):(o=s,0===Ws&&zs(X)),o===s&&("match partial"===r.substr(js,13).toLowerCase()?(o=r.substr(js,13),js+=13):(o=s,0===Ws&&zs(W)),o===s&&("match simple"===r.substr(js,12).toLowerCase()?(o=r.substr(js,12),js+=12):(o=s,0===Ws&&zs(V)))),o===s&&(o=null),o!==s&&gc()!==s?((a=wo())===s&&(a=null),a!==s&&gc()!==s?((i=wo())===s&&(i=null),i!==s?(c=o,l=a,f=i,t=e={definition:u,table:n,keyword:e.toLowerCase(),match:c&&c.toLowerCase(),on_delete:l,on_update:f}):(js=t,t=s)):(js=t,t=s)):(js=t,t=s)):(js=t,t=s),t}function wo(){var t,e,n,u;return t=js,"on delete"===r.substr(js,9).toLowerCase()?(e=r.substr(js,9),js+=9):(e=s,0===Ws&&zs(K)),e===s&&("on update"===r.substr(js,9).toLowerCase()?(e=r.substr(js,9),js+=9):(e=s,0===Ws&&zs(q))),e!==s&&gc()!==s&&(n=function(){var e;"restrict"===r.substr(js,8).toLowerCase()?(e=r.substr(js,8),js+=8):(e=s,0===Ws&&zs(Z));e===s&&("cascade"===r.substr(js,7).toLowerCase()?(e=r.substr(js,7),js+=7):(e=s,0===Ws&&zs(z)),e===s&&("set null"===r.substr(js,8).toLowerCase()?(e=r.substr(js,8),js+=8):(e=s,0===Ws&&zs(J)),e===s&&("no action"===r.substr(js,9).toLowerCase()?(e=r.substr(js,9),js+=9):(e=s,0===Ws&&zs(Q)),e===s&&("set default"===r.substr(js,11).toLowerCase()?(e=r.substr(js,11),js+=11):(e=s,0===Ws&&zs(rr))))));e!==s&&(e=e.toLowerCase());return e}())!==s?(u=n,t=e={type:e.toLowerCase(),value:u}):(js=t,t=s),t}function Eo(){var t,e,n,u,o,a,i;return t=js,(e=ai())===s&&(e=oi())===s&&(e=ac()),e!==s&&(i=e,e={keyword:Array.isArray(i)?i[0].toLowerCase():i.toLowerCase()}),(t=e)===s&&(t=js,(e=ei())!==s&&gc()!==s?(n=js,"of"===r.substr(js,2).toLowerCase()?(u=r.substr(js,2),js+=2):(u=s,0===Ws&&zs(ir)),u!==s&&(o=gc())!==s&&(a=Yo())!==s?n=u=[u,o,a]:(js=n,n=s),n===s&&(n=null),n!==s?(t=e=function(r,t){return {keyword:r&&r[0]&&r[0].toLowerCase(),args:t&&{keyword:t[0],columns:t[2]}||null}}(e,n)):(js=t,t=s)):(js=t,t=s)),t}function ho(){var t,e,n,u,o,a,i,c,l;return t=js,(e=Qa())===s&&(e=null),e!==s&&gc()!==s?((n=function(){var t,e,n;return t=js,"character"===r.substr(js,9).toLowerCase()?(e=r.substr(js,9),js+=9):(e=s,0===Ws&&zs(pr)),e!==s&&gc()!==s?("set"===r.substr(js,3).toLowerCase()?(n=r.substr(js,3),js+=3):(n=s,0===Ws&&zs(wr)),n!==s?(t=e="CHARACTER SET"):(js=t,t=s)):(js=t,t=s),t}())===s&&("charset"===r.substr(js,7).toLowerCase()?(n=r.substr(js,7),js+=7):(n=s,0===Ws&&zs(Er)),n===s&&("collate"===r.substr(js,7).toLowerCase()?(n=r.substr(js,7),js+=7):(n=s,0===Ws&&zs(hr)))),n!==s&&gc()!==s?((u=bc())===s&&(u=null),u!==s&&gc()!==s&&(o=Ra())!==s?(i=n,c=u,l=o,t=e={keyword:(a=e)&&`${a[0].toLowerCase()} ${i.toLowerCase()}`||i.toLowerCase(),symbol:c,value:l}):(js=t,t=s)):(js=t,t=s)):(js=t,t=s),t}function Ao(){var t,e,n,u,o,a,i,c,l;return t=js,"auto_increment"===r.substr(js,14).toLowerCase()?(e=r.substr(js,14),js+=14):(e=s,0===Ws&&zs(S)),e===s&&("avg_row_length"===r.substr(js,14).toLowerCase()?(e=r.substr(js,14),js+=14):(e=s,0===Ws&&zs(Ar)),e===s&&("key_block_size"===r.substr(js,14).toLowerCase()?(e=r.substr(js,14),js+=14):(e=s,0===Ws&&zs(yr)),e===s&&("max_rows"===r.substr(js,8).toLowerCase()?(e=r.substr(js,8),js+=8):(e=s,0===Ws&&zs(Tr)),e===s&&("min_rows"===r.substr(js,8).toLowerCase()?(e=r.substr(js,8),js+=8):(e=s,0===Ws&&zs(mr)),e===s&&("stats_sample_pages"===r.substr(js,18).toLowerCase()?(e=r.substr(js,18),js+=18):(e=s,0===Ws&&zs(Sr))))))),e!==s&&gc()!==s?((n=bc())===s&&(n=null),n!==s&&gc()!==s&&(u=Wa())!==s?(c=n,l=u,t=e={keyword:e.toLowerCase(),symbol:c,value:l.value}):(js=t,t=s)):(js=t,t=s),t===s&&(t=ho())===s&&(t=js,(e=wc())===s&&("connection"===r.substr(js,10).toLowerCase()?(e=r.substr(js,10),js+=10):(e=s,0===Ws&&zs(Ir))),e!==s&&gc()!==s?((n=bc())===s&&(n=null),n!==s&&gc()!==s&&(u=ja())!==s?(t=e=function(r,t,e){return {keyword:r.toLowerCase(),symbol:t,value:`'${e.value}'`}}(e,n,u)):(js=t,t=s)):(js=t,t=s),t===s&&(t=js,"compression"===r.substr(js,11).toLowerCase()?(e=r.substr(js,11),js+=11):(e=s,0===Ws&&zs(Nr)),e!==s&&gc()!==s?((n=bc())===s&&(n=null),n!==s&&gc()!==s?(u=js,39===r.charCodeAt(js)?(o="'",js++):(o=s,0===Ws&&zs(Rr)),o!==s?("zlib"===r.substr(js,4).toLowerCase()?(a=r.substr(js,4),js+=4):(a=s,0===Ws&&zs(_r)),a===s&&("lz4"===r.substr(js,3).toLowerCase()?(a=r.substr(js,3),js+=3):(a=s,0===Ws&&zs(gr)),a===s&&("none"===r.substr(js,4).toLowerCase()?(a=r.substr(js,4),js+=4):(a=s,0===Ws&&zs(A)))),a!==s?(39===r.charCodeAt(js)?(i="'",js++):(i=s,0===Ws&&zs(Rr)),i!==s?u=o=[o,a,i]:(js=u,u=s)):(js=u,u=s)):(js=u,u=s),u!==s?(t=e=function(r,t,e){return {keyword:r.toLowerCase(),symbol:t,value:e.join("").toUpperCase()}}(e,n,u)):(js=t,t=s)):(js=t,t=s)):(js=t,t=s),t===s&&(t=js,"engine"===r.substr(js,6).toLowerCase()?(e=r.substr(js,6),js+=6):(e=s,0===Ws&&zs(Or)),e!==s&&gc()!==s?((n=bc())===s&&(n=null),n!==s&&gc()!==s&&(u=Ra())!==s?(t=e=function(r,t,e){return {keyword:r.toLowerCase(),symbol:t,value:e.toUpperCase()}}(e,n,u)):(js=t,t=s)):(js=t,t=s)))),t}function yo(){var t,e,n,u,o,a,i;return (t=Io())===s&&(t=js,e=js,40===r.charCodeAt(js)?(n="(",js++):(n=s,0===Ws&&zs(jr)),n!==s&&(u=gc())!==s&&(o=yo())!==s&&(a=gc())!==s?(41===r.charCodeAt(js)?(i=")",js++):(i=s,0===Ws&&zs(Yr)),i!==s?e=n=[n,u,o,a,i]:(js=e,e=s)):(js=e,e=s),e!==s&&(e={...e[2],parentheses_symbol:!0}),t=e),t}function To(){var t,e,n,u,o,a,i,c,l;if(t=js,yi()!==s)if(gc()!==s)if((e=mo())!==s){for(n=[],u=js,(o=gc())!==s&&(a=Ac())!==s&&(i=gc())!==s&&(c=mo())!==s?u=o=[o,a,i,c]:(js=u,u=s);u!==s;)n.push(u),u=js,(o=gc())!==s&&(a=Ac())!==s&&(i=gc())!==s&&(c=mo())!==s?u=o=[o,a,i,c]:(js=u,u=s);n!==s?(t=rl(e,n)):(js=t,t=s);}else js=t,t=s;else js=t,t=s;else js=t,t=s;return t===s&&(t=js,gc()!==s&&yi()!==s&&(e=gc())!==s&&(n=function(){var t,e,n,u;t=js,"RECURSIVE"===r.substr(js,9)?(e="RECURSIVE",js+=9):(e=s,0===Ws&&zs(bn));e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?t=e=[e,n]:(js=t,t=s)):(js=t,t=s);return t}())!==s&&(u=gc())!==s&&(o=mo())!==s?((l=o).recursive=!0,t=[l]):(js=t,t=s)),t}function mo(){var r,t,e,n;return r=js,(t=Ra())!==s&&gc()!==s?((e=So())===s&&(e=null),e!==s&&gc()!==s&&di()!==s&&gc()!==s&&Tc()!==s&&gc()!==s&&(n=eo())!==s&&gc()!==s&&mc()!==s?(r=t={name:t,stmt:n,columns:e}):(js=r,r=s)):(js=r,r=s),r}function So(){var r,t,e,n,u,o,a,i;if(r=js,Tc()!==s)if(gc()!==s)if((t=Na())!==s){for(e=[],n=js,(u=gc())!==s&&(o=Ac())!==s&&(a=gc())!==s&&(i=Na())!==s?n=u=[u,o,a,i]:(js=n,n=s);n!==s;)e.push(n),n=js,(u=gc())!==s&&(o=Ac())!==s&&(a=gc())!==s&&(i=Na())!==s?n=u=[u,o,a,i]:(js=n,n=s);e!==s&&(n=gc())!==s&&(u=mc())!==s?(r=Br(t,e)):(js=r,r=s);}else js=r,r=s;else js=r,r=s;else js=r,r=s;return r}function Io(){var t,e,n,u,o,a,i,c,l,f,b;return t=js,gc()!==s?((e=To())===s&&(e=null),e!==s&&gc()!==s&&function(){var t,e,n,u;t=js,"select"===r.substr(js,6).toLowerCase()?(e=r.substr(js,6),js+=6):(e=s,0===Ws&&zs(nn));e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?t=e=[e,n]:(js=t,t=s)):(js=t,t=s);return t}()!==s&&Oc()!==s?((n=function(){var r,t,e,n,u,o;if(r=js,(t=No())!==s){for(e=[],n=js,(u=gc())!==s&&(o=No())!==s?n=u=[u,o]:(js=n,n=s);n!==s;)e.push(n),n=js,(u=gc())!==s&&(o=No())!==s?n=u=[u,o]:(js=n,n=s);e!==s?(t=function(r,t){const e=[r];for(let r=0,n=t.length;r<n;++r)e.push(t[r][1]);return e}(t,e),r=t):(js=r,r=s);}else js=r,r=s;return r}())===s&&(n=null),n!==s&&gc()!==s?((u=Ni())===s&&(u=null),u!==s&&gc()!==s&&(o=Ro())!==s&&gc()!==s?((a=Oo())===s&&(a=null),a!==s&&gc()!==s?((i=jo())===s&&(i=null),i!==s&&gc()!==s?((c=function(){var t,e,n;t=js,(e=function(){var t,e,n,u;t=js,"group"===r.substr(js,5).toLowerCase()?(e=r.substr(js,5),js+=5):(e=s,0===Ws&&zs(Dn));e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?t=e=[e,n]:(js=t,t=s)):(js=t,t=s);return t}())!==s&&gc()!==s&&Ti()!==s&&gc()!==s&&(n=oa())!==s?(e=n.value,t=e):(js=t,t=s);return t}())===s&&(c=null),c!==s&&gc()!==s?((l=function(){var t,e;t=js,function(){var t,e,n,u;t=js,"having"===r.substr(js,6).toLowerCase()?(e=r.substr(js,6),js+=6):(e=s,0===Ws&&zs(Fn));e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?t=e=[e,n]:(js=t,t=s)):(js=t,t=s);return t}()!==s&&gc()!==s&&(e=la())!==s?(t=e):(js=t,t=s);return t}())===s&&(l=null),l!==s&&gc()!==s?((f=Zo())===s&&(f=null),f!==s&&gc()!==s?((b=Qo())===s&&(b=null),b!==s?(t=function(r,t,e,n,u,s,o,a,i,c){return u&&u.forEach(r=>r.table&&ol.add(`select::${r.db}::${r.table}`)),{with:r,type:"select",options:t,distinct:e,columns:n,from:u,where:s,groupby:o,having:a,orderby:i,limit:c}}(e,n,u,o,a,i,c,l,f,b)):(js=t,t=s)):(js=t,t=s)):(js=t,t=s)):(js=t,t=s)):(js=t,t=s)):(js=t,t=s)):(js=t,t=s)):(js=t,t=s)):(js=t,t=s)):(js=t,t=s),t}function No(){var e;return (e=function(){var t;"sql_calc_found_rows"===r.substr(js,19).toLowerCase()?(t=r.substr(js,19),js+=19):(t=s,0===Ws&&zs(Es));return t}())===s&&((e=function(){var t;"sql_cache"===r.substr(js,9).toLowerCase()?(t=r.substr(js,9),js+=9):(t=s,0===Ws&&zs(hs));return t}())===s&&(e=function(){var t;"sql_no_cache"===r.substr(js,12).toLowerCase()?(t=r.substr(js,12),js+=12):(t=s,0===Ws&&zs(As));return t}()),e===s&&(e=function(){var t;"sql_big_result"===r.substr(js,14).toLowerCase()?(t=r.substr(js,14),js+=14):(t=s,0===Ws&&zs(Ts));return t}())===s&&(e=function(){var t;"sql_small_result"===r.substr(js,16).toLowerCase()?(t=r.substr(js,16),js+=16):(t=s,0===Ws&&zs(ys));return t}())===s&&(e=function(){var t;"sql_buffer_result"===r.substr(js,17).toLowerCase()?(t=r.substr(js,17),js+=17):(t=s,0===Ws&&zs(ms));return t}())),e!==s&&(e=e),e}function Ro(){var r,t,e,n,u,o,a,i,c,l;if(r=js,(t=Ii())===s&&(t=js,(e=yc())!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?t=e=[e,n]:(js=t,t=s)):(js=t,t=s),t===s&&(t=yc())),t!==s){for(e=[],n=js,(u=gc())!==s&&(o=Ac())!==s&&(a=gc())!==s&&(i=_o())!==s?n=u=[u,o,a,i]:(js=n,n=s);n!==s;)e.push(n),n=js,(u=gc())!==s&&(o=Ac())!==s&&(a=gc())!==s&&(i=_o())!==s?n=u=[u,o,a,i]:(js=n,n=s);e!==s?(c=t,l=e,al.add("select::null::(.*)"),r=t=l&&l.length>0?(c[0]={expr:{type:"column_ref",table:null,column:"*"},as:null},rl(c[0],l)):c[0]):(js=r,r=s);}else js=r,r=s;if(r===s)if(r=js,(t=_o())!==s){for(e=[],n=js,(u=gc())!==s&&(o=Ac())!==s&&(a=gc())!==s&&(i=_o())!==s?n=u=[u,o,a,i]:(js=n,n=s);n!==s;)e.push(n),n=js,(u=gc())!==s&&(o=Ac())!==s&&(a=gc())!==s&&(i=_o())!==s?n=u=[u,o,a,i]:(js=n,n=s);e!==s?(r=t=function(r,t){return rl(r,t)}(t,e)):(js=r,r=s);}else js=r,r=s;return r}function _o(){var r,t,e,n,u;return r=js,(t=la())!==s&&fc()!==s&&(e=Kc())!==s&&gc()!==s?((n=go())===s&&(n=null),n!==s?(r=t={as:n,type:"cast",expr:t,symbol:"::",target:e}):(js=r,r=s)):(js=r,r=s),r===s&&(r=js,(t=ma())!==s&&gc()!==s&&(e=hc())!==s&&gc()!==s&&(n=yc())!==s?(u=t,al.add(`select::${u}::(.*)`),r=t={type:"star_ref",expr:{type:"column_ref",table:u,column:"*"},as:null}):(js=r,r=s),r===s&&(r=js,(t=la())!==s&&gc()!==s?((e=go())===s&&(e=null),e!==s?(r=t=function(r,t){return {type:"expr",expr:r,as:t}}(t,e)):(js=r,r=s)):(js=r,r=s))),r}function go(){var r,t,e;return r=js,(t=di())!==s&&gc()!==s&&(e=Sa())!==s?(r=t=e):(js=r,r=s),r===s&&(r=js,(t=di())===s&&(t=null),t!==s&&gc()!==s&&(e=ma())!==s?(r=t=e):(js=r,r=s)),r}function Oo(){var r,t;return r=js,bi()!==s&&gc()!==s&&(t=ko())!==s?(r=t):(js=r,r=s),r}function xo(){var r,t,e;return r=js,(t=Ho())!==s&&gc()!==s&&ri()!==s&&gc()!==s&&(e=Ho())!==s?(r=t=[t,e]):(js=r,r=s),r}function Uo(){var t,e;return t=js,Ai()!==s&&gc()!==s?("btree"===r.substr(js,5).toLowerCase()?(e=r.substr(js,5),js+=5):(e=s,0===Ws&&zs(Xr)),e===s&&("hash"===r.substr(js,4).toLowerCase()?(e=r.substr(js,4),js+=4):(e=s,0===Ws&&zs(Wr)),e===s&&("gist"===r.substr(js,4).toLowerCase()?(e=r.substr(js,4),js+=4):(e=s,0===Ws&&zs(Vr)),e===s&&("gin"===r.substr(js,3).toLowerCase()?(e=r.substr(js,3),js+=3):(e=s,0===Ws&&zs(Kr))))),e!==s?(t={keyword:"using",type:e.toLowerCase()}):(js=t,t=s)):(js=t,t=s),t}function Mo(){var r,t,e,n,u,o;if(r=js,(t=Do())!==s){for(e=[],n=js,(u=gc())!==s&&(o=Do())!==s?n=u=[u,o]:(js=n,n=s);n!==s;)e.push(n),n=js,(u=gc())!==s&&(o=Do())!==s?n=u=[u,o]:(js=n,n=s);e!==s?(r=t=function(r,t){const e=[r];for(let r=0;r<t.length;r++)e.push(t[r][1]);return e}(t,e)):(js=r,r=s);}else js=r,r=s;return r}function Do(){var t,e,n,u,o,a;return t=js,(e=function(){var t,e,n,u;t=js,"key_block_size"===r.substr(js,14).toLowerCase()?(e=r.substr(js,14),js+=14):(e=s,0===Ws&&zs(yr));e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="KEY_BLOCK_SIZE"):(js=t,t=s)):(js=t,t=s);return t}())!==s&&gc()!==s?((n=bc())===s&&(n=null),n!==s&&gc()!==s&&(u=Wa())!==s?(o=n,a=u,t=e={type:e.toLowerCase(),symbol:o,expr:a}):(js=t,t=s)):(js=t,t=s),t===s&&(t=js,(e=Ra())!==s&&gc()!==s&&(n=bc())!==s&&gc()!==s?((u=Wa())===s&&(u=ma()),u!==s?(t=e=function(r,t,e){return {type:r.toLowerCase(),symbol:t,expr:"string"==typeof e&&{type:"origin",value:e}||e}}(e,n,u)):(js=t,t=s)):(js=t,t=s),t===s&&(t=Uo())===s&&(t=js,"with"===r.substr(js,4).toLowerCase()?(e=r.substr(js,4),js+=4):(e=s,0===Ws&&zs(qr)),e!==s&&gc()!==s?("parser"===r.substr(js,6).toLowerCase()?(n=r.substr(js,6),js+=6):(n=s,0===Ws&&zs(Zr)),n!==s&&gc()!==s&&(u=Ra())!==s?(t=e={type:"with parser",expr:u}):(js=t,t=s)):(js=t,t=s),t===s&&(t=js,"visible"===r.substr(js,7).toLowerCase()?(e=r.substr(js,7),js+=7):(e=s,0===Ws&&zs(zr)),e===s&&("invisible"===r.substr(js,9).toLowerCase()?(e=r.substr(js,9),js+=9):(e=s,0===Ws&&zs(Jr))),e!==s&&(e=function(r){return {type:r.toLowerCase(),expr:r.toLowerCase()}}(e)),(t=e)===s&&(t=Uc())))),t}function ko(){var r,t,e,n;if(r=js,(t=Fo())!==s){for(e=[],n=$o();n!==s;)e.push(n),n=$o();e!==s?(r=t=Qr(t,e)):(js=r,r=s);}else js=r,r=s;return r}function $o(){var r,t,e;return r=js,gc()!==s&&(t=Ac())!==s&&gc()!==s&&(e=Fo())!==s?(r=e):(js=r,r=s),r===s&&(r=js,gc()!==s&&(t=function(){var r,t,e,n,u,o,a,i,c,l,f;if(r=js,(t=Po())!==s)if(gc()!==s)if((e=Fo())!==s)if(gc()!==s)if((n=Ai())!==s)if(gc()!==s)if(Tc()!==s)if(gc()!==s)if((u=Ra())!==s){for(o=[],a=js,(i=gc())!==s&&(c=Ac())!==s&&(l=gc())!==s&&(f=Ra())!==s?a=i=[i,c,l,f]:(js=a,a=s);a!==s;)o.push(a),a=js,(i=gc())!==s&&(c=Ac())!==s&&(l=gc())!==s&&(f=Ra())!==s?a=i=[i,c,l,f]:(js=a,a=s);o!==s&&(a=gc())!==s&&(i=mc())!==s?(b=t,d=u,L=o,(v=e).join=b,v.using=rl(d,L),r=t=v):(js=r,r=s);}else js=r,r=s;else js=r,r=s;else js=r,r=s;else js=r,r=s;else js=r,r=s;else js=r,r=s;else js=r,r=s;else js=r,r=s;else js=r,r=s;var b,v,d,L;r===s&&(r=js,(t=Po())!==s&&gc()!==s&&(e=Fo())!==s&&gc()!==s?((n=Go())===s&&(n=null),n!==s?(t=function(r,t,e){return t.join=r,t.on=e,t}(t,e,n),r=t):(js=r,r=s)):(js=r,r=s),r===s&&(r=js,(t=Po())!==s&&gc()!==s&&(e=Tc())!==s&&gc()!==s&&(n=eo())!==s&&gc()!==s&&mc()!==s&&gc()!==s?((u=go())===s&&(u=null),u!==s&&(o=gc())!==s?((a=Go())===s&&(a=null),a!==s?(t=function(r,t,e,n){return t.parentheses=!0,{expr:t,as:e,join:r,on:n}}(t,n,u,a),r=t):(js=r,r=s)):(js=r,r=s)):(js=r,r=s)));return r}())!==s?(r=t):(js=r,r=s)),r}function Fo(){var t,e,n,u,o,a;return t=js,(e=function(){var t;"dual"===r.substr(js,4).toLowerCase()?(t=r.substr(js,4),js+=4):(t=s,0===Ws&&zs(cs));return t}())!==s&&(e={type:"dual"}),(t=e)===s&&(t=js,(e=Ho())!==s&&gc()!==s?((n=go())===s&&(n=null),n!==s?(a=n,t=e="var"===(o=e).type?(o.as=a,o):{db:o.db,table:o.table,as:a}):(js=t,t=s)):(js=t,t=s),t===s&&(t=js,(e=Tc())!==s&&gc()!==s&&(n=eo())!==s&&gc()!==s&&mc()!==s&&gc()!==s?((u=go())===s&&(u=null),u!==s?(t=e=function(r,t){return r.parentheses=!0,{expr:r,as:t}}(n,u)):(js=t,t=s)):(js=t,t=s))),t}function Po(){var t,e,n,u;return t=js,(e=function(){var t,e,n,u;t=js,"left"===r.substr(js,4).toLowerCase()?(e=r.substr(js,4),js+=4):(e=s,0===Ws&&zs(Sn));e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?t=e=[e,n]:(js=t,t=s)):(js=t,t=s);return t}())!==s&&(n=gc())!==s?((u=wi())===s&&(u=null),u!==s&&gc()!==s&&pi()!==s?(t=e="LEFT JOIN"):(js=t,t=s)):(js=t,t=s),t===s&&(t=js,(e=function(){var t,e,n,u;t=js,"right"===r.substr(js,5).toLowerCase()?(e=r.substr(js,5),js+=5):(e=s,0===Ws&&zs(In));e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?t=e=[e,n]:(js=t,t=s)):(js=t,t=s);return t}())!==s&&(n=gc())!==s?((u=wi())===s&&(u=null),u!==s&&gc()!==s&&pi()!==s?(t=e="RIGHT JOIN"):(js=t,t=s)):(js=t,t=s),t===s&&(t=js,(e=function(){var t,e,n,u;t=js,"full"===r.substr(js,4).toLowerCase()?(e=r.substr(js,4),js+=4):(e=s,0===Ws&&zs(Nn));e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?t=e=[e,n]:(js=t,t=s)):(js=t,t=s);return t}())!==s&&(n=gc())!==s?((u=wi())===s&&(u=null),u!==s&&gc()!==s&&pi()!==s?(t=e="FULL JOIN"):(js=t,t=s)):(js=t,t=s),t===s&&(t=js,e=js,(n=function(){var t,e,n,u;t=js,"inner"===r.substr(js,5).toLowerCase()?(e=r.substr(js,5),js+=5):(e=s,0===Ws&&zs(Rn));e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?t=e=[e,n]:(js=t,t=s)):(js=t,t=s);return t}())!==s&&(u=gc())!==s?e=n=[n,u]:(js=e,e=s),e===s&&(e=null),e!==s&&(n=pi())!==s?(t=e="INNER JOIN"):(js=t,t=s)))),t}function Ho(){var r,t,e,n,u,o,a,i,c,l;return r=js,(t=ma())!==s?(e=js,(n=gc())!==s&&(u=hc())!==s&&(o=gc())!==s&&(a=ma())!==s?e=n=[n,u,o,a]:(js=e,e=s),e!==s?(n=js,(u=gc())!==s&&(o=hc())!==s&&(a=gc())!==s&&(i=ma())!==s?n=u=[u,o,a,i]:(js=n,n=s),n!==s?(r=t=function(r,t,e){const n={db:null,table:r};return null!==e&&(n.db=`${r}.${t[3]}`,n.table=e[3]),n}(t,e,n)):(js=r,r=s)):(js=r,r=s)):(js=r,r=s),r===s&&(r=js,(t=ma())!==s&&(e=gc())!==s&&(n=hc())!==s&&(u=gc())!==s&&(o=yc())!==s?(l=t,ol.add(`select::${l}::(.*)`),r=t={db:l,table:"*"}):(js=r,r=s),r===s&&(r=js,(t=ma())!==s?(e=js,(n=gc())!==s&&(u=hc())!==s&&(o=gc())!==s&&(a=ma())!==s?e=n=[n,u,o,a]:(js=e,e=s),e===s&&(e=null),e!==s?(r=t=function(r,t){const e={db:null,table:r};return null!==t&&(e.db=r,e.table=t[3]),e}(t,e)):(js=r,r=s)):(js=r,r=s),r===s&&(r=js,(t=Wc())!==s&&((c=t).db=null,c.table=c.name,t=c),r=t))),r}function Go(){var r,t;return r=js,Ci()!==s&&gc()!==s&&(t=la())!==s?(r=t):(js=r,r=s),r}function jo(){var t,e;return t=js,function(){var t,e,n,u;t=js,"where"===r.substr(js,5).toLowerCase()?(e=r.substr(js,5),js+=5):(e=s,0===Ws&&zs(Mn));e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?t=e=[e,n]:(js=t,t=s)):(js=t,t=s);return t}()!==s&&gc()!==s?((e=function(){var r,t,e,n,u,o,a,i;if(r=js,(t=fa())!==s){for(e=[],n=js,(u=gc())!==s?((o=Di())===s&&(o=ki()),o!==s&&(a=gc())!==s&&(i=fa())!==s?n=u=[u,o,a,i]:(js=n,n=s)):(js=n,n=s);n!==s;)e.push(n),n=js,(u=gc())!==s?((o=Di())===s&&(o=ki()),o!==s&&(a=gc())!==s&&(i=fa())!==s?n=u=[u,o,a,i]:(js=n,n=s)):(js=n,n=s);e!==s?(t=tl(t,e),r=t):(js=r,r=s);}else js=r,r=s;return r}())===s&&(e=la()),e!==s?(t=e):(js=t,t=s)):(js=t,t=s),t}function Yo(){var r,t,e,n,u,o,a,i;if(r=js,(t=Ta())!==s){for(e=[],n=js,(u=gc())!==s&&(o=Ac())!==s&&(a=gc())!==s&&(i=Ta())!==s?n=u=[u,o,a,i]:(js=n,n=s);n!==s;)e.push(n),n=js,(u=gc())!==s&&(o=Ac())!==s&&(a=gc())!==s&&(i=Ta())!==s?n=u=[u,o,a,i]:(js=n,n=s);e!==s?(r=t=rl(t,e)):(js=r,r=s);}else js=r,r=s;return r}function Bo(){var r,t;return r=js,Tc()!==s&&gc()!==s?((t=function(){var r,t,e,n;r=js,(t=qo())===s&&(t=null);t!==s&&gc()!==s?((e=Zo())===s&&(e=null),e!==s&&gc()!==s&&(n=function(){var r,t,e,n,u;r=js,(t=uc())!==s&&gc()!==s?((e=Xo())===s&&(e=Wo()),e!==s?(t="rows "+e.value,r=t):(js=r,r=s)):(js=r,r=s);r===s&&(r=js,(t=uc())!==s&&gc()!==s&&(e=Ri())!==s&&gc()!==s&&(n=Wo())!==s&&gc()!==s&&Di()!==s&&gc()!==s&&(u=Xo())!==s?(t=function(r,t){return `rows between ${r.value} and ${t.value}`}(n,u),r=t):(js=r,r=s));return r}())!==s?(t=function(r,t,e){return {name:null,partitionby:r,orderby:t,window_frame_clause:e}}(t,e,n),r=t):(js=r,r=s)):(js=r,r=s);return r}())===s&&(t=null),t!==s&&gc()!==s&&mc()!==s?(r={window_specification:t||{},parentheses:!0}):(js=r,r=s)):(js=r,r=s),r}function Xo(){var t,e,n,u;return t=js,(e=Ko())!==s&&gc()!==s?("following"===r.substr(js,9).toLowerCase()?(n=r.substr(js,9),js+=9):(n=s,0===Ws&&zs(rt)),n!==s?((u=e).value+=" FOLLOWING",t=e=u):(js=t,t=s)):(js=t,t=s),t===s&&(t=Vo()),t}function Wo(){var t,e,n,u;return t=js,(e=Ko())!==s&&gc()!==s?("preceding"===r.substr(js,9).toLowerCase()?(n=r.substr(js,9),js+=9):(n=s,0===Ws&&zs(tt)),n!==s?((u=e).value+=" PRECEDING",t=e=u):(js=t,t=s)):(js=t,t=s),t===s&&(t=Vo()),t}function Vo(){var t,e,n;return t=js,"current"===r.substr(js,7).toLowerCase()?(e=r.substr(js,7),js+=7):(e=s,0===Ws&&zs(et)),e!==s&&gc()!==s?("row"===r.substr(js,3).toLowerCase()?(n=r.substr(js,3),js+=3):(n=s,0===Ws&&zs(Lr)),n!==s?(t=e={type:"single_quote_string",value:"current row"}):(js=t,t=s)):(js=t,t=s),t}function Ko(){var t,e;return t=js,"unbounded"===r.substr(js,9).toLowerCase()?(e=r.substr(js,9),js+=9):(e=s,0===Ws&&zs(nt)),e!==s&&(e={type:"single_quote_string",value:e.toUpperCase()}),(t=e)===s&&(t=Wa()),t}function qo(){var r,t;return r=js,li()!==s&&gc()!==s&&Ti()!==s&&gc()!==s&&(t=Ro())!==s?(r=t):(js=r,r=s),r}function Zo(){var t,e;return t=js,function(){var t,e,n,u;t=js,"order"===r.substr(js,5).toLowerCase()?(e=r.substr(js,5),js+=5):(e=s,0===Ws&&zs($n));e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?t=e=[e,n]:(js=t,t=s)):(js=t,t=s);return t}()!==s&&gc()!==s&&Ti()!==s&&gc()!==s&&(e=function(){var r,t,e,n,u,o,a,i;if(r=js,(t=zo())!==s){for(e=[],n=js,(u=gc())!==s&&(o=Ac())!==s&&(a=gc())!==s&&(i=zo())!==s?n=u=[u,o,a,i]:(js=n,n=s);n!==s;)e.push(n),n=js,(u=gc())!==s&&(o=Ac())!==s&&(a=gc())!==s&&(i=zo())!==s?n=u=[u,o,a,i]:(js=n,n=s);e!==s?(t=rl(t,e),r=t):(js=r,r=s);}else js=r,r=s;return r}())!==s?(t=e):(js=t,t=s),t}function zo(){var r,t,e;return r=js,(t=la())!==s&&gc()!==s?((e=Si())===s&&(e=mi()),e===s&&(e=null),e!==s?(r=t=function(r,t){const e={expr:r,type:"ASC"};return "DESC"===t&&(e.type="DESC"),e}(t,e)):(js=r,r=s)):(js=r,r=s),r}function Jo(){var r;return (r=Wa())===s&&(r=xa()),r}function Qo(){var t,e,n,u,o,a;return t=js,function(){var t,e,n,u;t=js,"limit"===r.substr(js,5).toLowerCase()?(e=r.substr(js,5),js+=5):(e=s,0===Ws&&zs(Pn));e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?t=e=[e,n]:(js=t,t=s)):(js=t,t=s);return t}()!==s&&gc()!==s?((e=Jo())===s&&(e=Ii()),e!==s&&gc()!==s?(n=js,(u=function(){var t,e,n,u;t=js,"offset"===r.substr(js,6).toLowerCase()?(e=r.substr(js,6),js+=6):(e=s,0===Ws&&zs(Hn));e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="OFFSET"):(js=t,t=s)):(js=t,t=s);return t}())!==s&&(o=gc())!==s&&(a=Jo())!==s?n=u=[u,o,a]:(js=n,n=s),n===s&&(n=null),n!==s?(t=function(r,t){const e=[];return "string"==typeof r?e.push({type:"origin",value:"all"}):e.push(r),t&&e.push(t[2]),{seperator:t&&t[0]&&t[0].toLowerCase()||"",value:e}}(e,n)):(js=t,t=s)):(js=t,t=s)):(js=t,t=s),t}function ra(){var t,e,n,u,o,a,i,c,l;return t=js,e=js,(n=ma())!==s&&(u=gc())!==s&&(o=hc())!==s?e=n=[n,u,o]:(js=e,e=s),e===s&&(e=null),e!==s&&(n=gc())!==s&&(u=Na())!==s&&(o=gc())!==s?(61===r.charCodeAt(js)?(a="=",js++):(a=s,0===Ws&&zs(ut)),a!==s&&gc()!==s&&(i=wa())!==s?(t=e={column:u,value:i,table:(l=e)&&l[0]}):(js=t,t=s)):(js=t,t=s),t===s&&(t=js,e=js,(n=ma())!==s&&(u=gc())!==s&&(o=hc())!==s?e=n=[n,u,o]:(js=e,e=s),e===s&&(e=null),e!==s&&(n=gc())!==s&&(u=Na())!==s&&(o=gc())!==s?(61===r.charCodeAt(js)?(a="=",js++):(a=s,0===Ws&&zs(ut)),a!==s&&gc()!==s&&(i=hi())!==s&&gc()!==s&&Tc()!==s&&gc()!==s&&(c=Ta())!==s&&gc()!==s&&mc()!==s?(t=e=function(r,t,e){return {column:t,value:e,table:r&&r[0],keyword:"values"}}(e,u,c)):(js=t,t=s)):(js=t,t=s)),t}function ta(){var t,e,n,u,o;return t=js,(e=function(){var t,e,n,u;t=js,"returning"===r.substr(js,9).toLowerCase()?(e=r.substr(js,9),js+=9):(e=s,0===Ws&&zs(dn));e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="RETURNING"):(js=t,t=s)):(js=t,t=s);return t}())!==s&&gc()!==s?((n=yc())===s&&(n=Yo()),n!==s?(o=n,t=e={type:(u=e)&&u.toLowerCase()||"returning",columns:"*"===o&&[{type:"columne_ref",table:null,column:"*"}]||o}):(js=t,t=s)):(js=t,t=s),t}function ea(){var r;return (r=function(){var r,t;r=js,hi()!==s&&gc()!==s&&(t=function(){var r,t,e,n,u,o,a,i;if(r=js,(t=sa())!==s){for(e=[],n=js,(u=gc())!==s&&(o=Ac())!==s&&(a=gc())!==s&&(i=sa())!==s?n=u=[u,o,a,i]:(js=n,n=s);n!==s;)e.push(n),n=js,(u=gc())!==s&&(o=Ac())!==s&&(a=gc())!==s&&(i=sa())!==s?n=u=[u,o,a,i]:(js=n,n=s);e!==s?(t=rl(t,e),r=t):(js=r,r=s);}else js=r,r=s;return r}())!==s?(r=t):(js=r,r=s);return r}())===s&&(r=Io()),r}function na(){var r,t,e,n,u,o,a,i,c;if(r=js,li()!==s)if(gc()!==s)if((t=Tc())!==s)if(gc()!==s)if((e=Ra())!==s){for(n=[],u=js,(o=gc())!==s&&(a=Ac())!==s&&(i=gc())!==s&&(c=Ra())!==s?u=o=[o,a,i,c]:(js=u,u=s);u!==s;)n.push(u),u=js,(o=gc())!==s&&(a=Ac())!==s&&(i=gc())!==s&&(c=Ra())!==s?u=o=[o,a,i,c]:(js=u,u=s);n!==s&&(u=gc())!==s&&(o=mc())!==s?(r=rl(e,n)):(js=r,r=s);}else js=r,r=s;else js=r,r=s;else js=r,r=s;else js=r,r=s;else js=r,r=s;return r===s&&(r=js,li()!==s&&gc()!==s&&(t=sa())!==s?(r=t):(js=r,r=s)),r}function ua(){var r,t;return r=js,(t=ai())!==s&&(t="insert"),(r=t)===s&&(r=js,(t=ii())!==s&&(t="replace"),r=t),r}function sa(){var r,t;return r=js,Tc()!==s&&gc()!==s&&(t=oa())!==s&&gc()!==s&&mc()!==s?(r=t):(js=r,r=s),r}function oa(){var r,t,e,n,u,o,a,i;if(r=js,(t=la())!==s){for(e=[],n=js,(u=gc())!==s&&(o=Ac())!==s&&(a=gc())!==s&&(i=la())!==s?n=u=[u,o,a,i]:(js=n,n=s);n!==s;)e.push(n),n=js,(u=gc())!==s&&(o=Ac())!==s&&(a=gc())!==s&&(i=la())!==s?n=u=[u,o,a,i]:(js=n,n=s);e!==s?(r=t=function(r,t){const e={type:"expr_list"};return e.value=rl(r,t),e}(t,e)):(js=r,r=s);}else js=r,r=s;return r}function aa(){var t,e,n;return t=js,ic()!==s&&gc()!==s&&(e=la())!==s&&gc()!==s&&(n=function(){var t;(t=function(){var t,e,n,u;t=js,"year"===r.substr(js,4).toLowerCase()?(e=r.substr(js,4),js+=4):(e=s,0===Ws&&zs(Ee));e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="YEAR"):(js=t,t=s)):(js=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=js,"month"===r.substr(js,5).toLowerCase()?(e=r.substr(js,5),js+=5):(e=s,0===Ws&&zs(be));e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="MONTH"):(js=t,t=s)):(js=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=js,"day"===r.substr(js,3).toLowerCase()?(e=r.substr(js,3),js+=3):(e=s,0===Ws&&zs(re));e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="DAY"):(js=t,t=s)):(js=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=js,"hour"===r.substr(js,4).toLowerCase()?(e=r.substr(js,4),js+=4):(e=s,0===Ws&&zs(se));e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="HOUR"):(js=t,t=s)):(js=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=js,"minute"===r.substr(js,6).toLowerCase()?(e=r.substr(js,6),js+=6):(e=s,0===Ws&&zs(fe));e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="MINUTE"):(js=t,t=s)):(js=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=js,"second"===r.substr(js,6).toLowerCase()?(e=r.substr(js,6),js+=6):(e=s,0===Ws&&zs(de));e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="SECOND"):(js=t,t=s)):(js=t,t=s);return t}());return t}())!==s?(t={type:"interval",expr:e,unit:n.toLowerCase()}):(js=t,t=s),t===s&&(t=js,ic()!==s&&gc()!==s&&(e=ja())!==s?(t=function(r){return {type:"interval",expr:r,unit:""}}(e)):(js=t,t=s)),t}function ia(){var t,e,n,u,o,a,i,c,l;if(t=js,$i()!==s)if(gc()!==s)if((e=la())===s&&(e=null),e!==s)if(gc()!==s){if(n=[],(u=ca())!==s)for(;u!==s;)n.push(u),u=ca();else n=s;n!==s&&(u=gc())!==s?((o=function(){var t,e;t=js,function(){var t,e,n,u;t=js,"else"===r.substr(js,4).toLowerCase()?(e=r.substr(js,4),js+=4):(e=s,0===Ws&&zs(fu));e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?t=e=[e,n]:(js=t,t=s)):(js=t,t=s);return t}()!==s&&gc()!==s&&(e=la())!==s?(t={type:"else",result:e}):(js=t,t=s);return t}())===s&&(o=null),o!==s&&gc()!==s&&function(){var t,e,n,u;t=js,"end"===r.substr(js,3).toLowerCase()?(e=r.substr(js,3),js+=3):(e=s,0===Ws&&zs(bu));e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?t=e=[e,n]:(js=t,t=s)):(js=t,t=s);return t}()!==s&&gc()!==s?((a=$i())===s&&(a=null),a!==s?(i=e,c=n,(l=o)&&c.push(l),t={type:"case",expr:i||null,args:c}):(js=t,t=s)):(js=t,t=s)):(js=t,t=s);}else js=t,t=s;else js=t,t=s;else js=t,t=s;else js=t,t=s;return t}function ca(){var t,e,n;return t=js,Fi()!==s&&gc()!==s&&(e=la())!==s&&gc()!==s&&function(){var t,e,n,u;t=js,"then"===r.substr(js,4).toLowerCase()?(e=r.substr(js,4),js+=4):(e=s,0===Ws&&zs(lu));e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?t=e=[e,n]:(js=t,t=s)):(js=t,t=s);return t}()!==s&&gc()!==s&&(n=la())!==s?(t={type:"when",cond:e,result:n}):(js=t,t=s),t}function la(){var r;return (r=function(){var r,t,e,n,u,o,a,i;if(r=js,(t=ya())!==s){if(e=[],n=js,(u=gc())!==s&&(o=_c())!==s&&(a=gc())!==s&&(i=ya())!==s?n=u=[u,o,a,i]:(js=n,n=s),n!==s)for(;n!==s;)e.push(n),n=js,(u=gc())!==s&&(o=_c())!==s&&(a=gc())!==s&&(i=ya())!==s?n=u=[u,o,a,i]:(js=n,n=s);else e=s;e!==s?(t=tl(t,e),r=t):(js=r,r=s);}else js=r,r=s;return r}())===s&&(r=function(){var r,t,e,n,u,o;if(r=js,(t=Ea())!==s){if(e=[],n=js,(u=gc())!==s&&(o=ya())!==s?n=u=[u,o]:(js=n,n=s),n!==s)for(;n!==s;)e.push(n),n=js,(u=gc())!==s&&(o=ya())!==s?n=u=[u,o]:(js=n,n=s);else e=s;e!==s?(t=zc(t,e[0][1]),r=t):(js=r,r=s);}else js=r,r=s;return r}())===s&&(r=ba())===s&&(r=yo()),r}function fa(){var r,t,e,n,u,o;return r=js,(t=Tc())===s&&(t=null),t!==s&&gc()!==s&&(e=ba())!==s&&gc()!==s?((n=mc())===s&&(n=null),n!==s?((function(r,t,e){if(r&&!e||!r&&e)return !0}(t,0,n)?s:void 0)!==s?(u=e,o=n,t&&o&&(u.parentheses=!0),r=t=u):(js=r,r=s)):(js=r,r=s)):(js=r,r=s),r}function ba(){var r,t,e,n,u,o,a,i;if(r=js,(t=va())!==s){for(e=[],n=js,(u=Oc())!==s&&(o=ki())!==s&&(a=gc())!==s&&(i=va())!==s?n=u=[u,o,a,i]:(js=n,n=s);n!==s;)e.push(n),n=js,(u=Oc())!==s&&(o=ki())!==s&&(a=gc())!==s&&(i=va())!==s?n=u=[u,o,a,i]:(js=n,n=s);e!==s?(r=t=st(t,e)):(js=r,r=s);}else js=r,r=s;return r}function va(){var r,t,e,n,u,o,a,i;if(r=js,(t=da())!==s){for(e=[],n=js,(u=Oc())!==s&&(o=Di())!==s&&(a=gc())!==s&&(i=da())!==s?n=u=[u,o,a,i]:(js=n,n=s);n!==s;)e.push(n),n=js,(u=Oc())!==s&&(o=Di())!==s&&(a=gc())!==s&&(i=da())!==s?n=u=[u,o,a,i]:(js=n,n=s);e!==s?(r=t=st(t,e)):(js=r,r=s);}else js=r,r=s;return r}function da(){var t,e,n,u,o;return (t=La())===s&&(t=function(){var r,t,e;r=js,(t=function(){var r,t,e,n,u;r=js,t=js,(e=Mi())!==s&&(n=gc())!==s&&(u=Ui())!==s?t=e=[e,n,u]:(js=t,t=s);t!==s&&(t=(o=t)[0]+" "+o[2]);var o;(r=t)===s&&(r=Ui());return r}())!==s&&gc()!==s&&Tc()!==s&&gc()!==s&&(e=eo())!==s&&gc()!==s&&mc()!==s?(n=t,(u=e).parentheses=!0,t=zc(n,u),r=t):(js=r,r=s);var n,u;return r}())===s&&(t=js,(e=Mi())===s&&(e=js,33===r.charCodeAt(js)?(n="!",js++):(n=s,0===Ws&&zs(ot)),n!==s?(u=js,Ws++,61===r.charCodeAt(js)?(o="=",js++):(o=s,0===Ws&&zs(ut)),Ws--,o===s?u=void 0:(js=u,u=s),u!==s?e=n=[n,u]:(js=e,e=s)):(js=e,e=s)),e!==s&&(n=gc())!==s&&(u=da())!==s?(t=e=zc("NOT",u)):(js=t,t=s)),t}function La(){var t,e,n,u,o;return t=js,(e=wa())!==s&&gc()!==s?((n=function(){var t;(t=function(){var t,e,n,u,o,a;t=[],e=js,(n=gc())!==s&&(u=Ca())!==s&&(o=gc())!==s&&(a=wa())!==s?e=n=[n,u,o,a]:(js=e,e=s);if(e!==s)for(;e!==s;)t.push(e),e=js,(n=gc())!==s&&(u=Ca())!==s&&(o=gc())!==s&&(a=wa())!==s?e=n=[n,u,o,a]:(js=e,e=s);else t=s;t!==s&&(t={type:"arithmetic",tail:t});return t}())===s&&(t=function(){var r,t,e,n;r=js,(t=pa())!==s&&gc()!==s&&(e=Tc())!==s&&gc()!==s&&(n=oa())!==s&&gc()!==s&&mc()!==s?(r=t={op:t,right:n}):(js=r,r=s);r===s&&(r=js,(t=pa())!==s&&gc()!==s?((e=Wc())===s&&(e=ja()),e!==s?(t=function(r,t){return {op:r,right:t}}(t,e),r=t):(js=r,r=s)):(js=r,r=s));return r}())===s&&(t=function(){var r,t,e,n;r=js,(t=function(){var r,t,e,n,u;r=js,t=js,(e=Mi())!==s&&(n=gc())!==s&&(u=Ri())!==s?t=e=[e,n,u]:(js=t,t=s);t!==s&&(t=(o=t)[0]+" "+o[2]);var o;(r=t)===s&&(r=Ri());return r}())!==s&&gc()!==s&&(e=wa())!==s&&gc()!==s&&Di()!==s&&gc()!==s&&(n=wa())!==s?(r=t={op:t,right:{type:"expr_list",value:[e,n]}}):(js=r,r=s);return r}())===s&&(t=function(){var r,t,e,n,u,o,a,i,c;r=js,(t=gi())!==s&&(e=gc())!==s&&(n=wa())!==s?(r=t={op:"IS",right:n}):(js=r,r=s);r===s&&(r=js,(t=gi())!==s&&(e=gc())!==s?(n=js,(u=Ni())!==s&&(o=gc())!==s&&(a=bi())!==s&&(i=gc())!==s&&(c=Ho())!==s?n=u=[u,o,a,i,c]:(js=n,n=s),n!==s?(t=function(r){const{db:t,table:e}=r.pop(),n="*"===e?"*":`"${e}"`;return {op:"IS",right:{type:"origin",value:"DISTINCT FROM "+(t?`"${t}".${n}`:n)}}}(n),r=t):(js=r,r=s)):(js=r,r=s),r===s&&(r=js,t=js,(e=gi())!==s&&(n=gc())!==s&&(u=Mi())!==s?t=e=[e,n,u]:(js=t,t=s),t!==s&&(e=gc())!==s&&(n=wa())!==s?(t=function(r){return {op:"IS NOT",right:r}}(n),r=t):(js=r,r=s)));return r}())===s&&(t=function(){var r,t,e;r=js,(t=function(){var r,t,e,n,u;r=js,t=js,(e=Mi())!==s&&(n=gc())!==s?((u=Oi())===s&&(u=xi()),u!==s?t=e=[e,n,u]:(js=t,t=s)):(js=t,t=s);t!==s&&(t=(o=t)[0]+" "+o[2]);var o;(r=t)===s&&(r=Oi())===s&&(r=xi());return r}())!==s&&gc()!==s?((e=Pa())===s&&(e=La()),e!==s?(r=t={op:t,right:e}):(js=r,r=s)):(js=r,r=s);return r}())===s&&(t=function(){var t,e,n;t=js,"@>"===r.substr(js,2)?(e="@>",js+=2):(e=s,0===Ws&&zs(vt));e===s&&("<@"===r.substr(js,2)?(e="<@",js+=2):(e=s,0===Ws&&zs(dt)),e===s&&(e=Rc())===s&&(e=function(){var t;"#>>"===r.substr(js,3)?(t="#>>",js+=3):(t=s,0===Ws&&zs(xs));return t}())===s&&(e=function(){var t;"#>"===r.substr(js,2)?(t="#>",js+=2):(t=s,0===Ws&&zs(Os));return t}())===s&&(63===r.charCodeAt(js)?(e="?",js++):(e=s,0===Ws&&zs(Lt)),e===s&&("?|"===r.substr(js,2)?(e="?|",js+=2):(e=s,0===Ws&&zs(Ct)),e===s&&("?&"===r.substr(js,2)?(e="?&",js+=2):(e=s,0===Ws&&zs(pt)),e===s&&("#-"===r.substr(js,2)?(e="#-",js+=2):(e=s,0===Ws&&zs(wt)))))));e!==s&&gc()!==s&&(n=_o())!==s?(e={op:e,right:(u=n)&&u.expr||u},t=e):(js=t,t=s);var u;return t}());return t}())===s&&(n=null),n!==s?(u=e,t=e=null===(o=n)?u:"arithmetic"===o.type?tl(u,o.tail):Jc(o.op,u,o.right)):(js=t,t=s)):(js=t,t=s),t===s&&(t=ja())===s&&(t=Ta()),t}function Ca(){var t;return ">="===r.substr(js,2)?(t=">=",js+=2):(t=s,0===Ws&&zs(at)),t===s&&(62===r.charCodeAt(js)?(t=">",js++):(t=s,0===Ws&&zs(it)),t===s&&("<="===r.substr(js,2)?(t="<=",js+=2):(t=s,0===Ws&&zs(ct)),t===s&&("<>"===r.substr(js,2)?(t="<>",js+=2):(t=s,0===Ws&&zs(lt)),t===s&&(60===r.charCodeAt(js)?(t="<",js++):(t=s,0===Ws&&zs(ft)),t===s&&(61===r.charCodeAt(js)?(t="=",js++):(t=s,0===Ws&&zs(ut)),t===s&&("!="===r.substr(js,2)?(t="!=",js+=2):(t=s,0===Ws&&zs(bt)))))))),t}function pa(){var r,t,e,n,u,o;return r=js,t=js,(e=Mi())!==s&&(n=gc())!==s&&(u=_i())!==s?t=e=[e,n,u]:(js=t,t=s),t!==s&&(t=(o=t)[0]+" "+o[2]),(r=t)===s&&(r=_i()),r}function wa(){var r,t,e,n,u,o,a,i;if(r=js,(t=ha())!==s){for(e=[],n=js,(u=gc())!==s&&(o=Ea())!==s&&(a=gc())!==s&&(i=ha())!==s?n=u=[u,o,a,i]:(js=n,n=s);n!==s;)e.push(n),n=js,(u=gc())!==s&&(o=Ea())!==s&&(a=gc())!==s&&(i=ha())!==s?n=u=[u,o,a,i]:(js=n,n=s);e!==s?(r=t=st(t,e)):(js=r,r=s);}else js=r,r=s;return r}function Ea(){var t;return 43===r.charCodeAt(js)?(t="+",js++):(t=s,0===Ws&&zs(Et)),t===s&&(45===r.charCodeAt(js)?(t="-",js++):(t=s,0===Ws&&zs(ht))),t}function ha(){var r,t,e,n,u,o,a,i;if(r=js,(t=ya())!==s){for(e=[],n=js,(u=gc())!==s&&(o=Aa())!==s&&(a=gc())!==s&&(i=ya())!==s?n=u=[u,o,a,i]:(js=n,n=s);n!==s;)e.push(n),n=js,(u=gc())!==s&&(o=Aa())!==s&&(a=gc())!==s&&(i=ya())!==s?n=u=[u,o,a,i]:(js=n,n=s);e!==s?(r=t=tl(t,e)):(js=r,r=s);}else js=r,r=s;return r}function Aa(){var t;return 42===r.charCodeAt(js)?(t="*",js++):(t=s,0===Ws&&zs(At)),t===s&&(47===r.charCodeAt(js)?(t="/",js++):(t=s,0===Ws&&zs(yt)),t===s&&(37===r.charCodeAt(js)?(t="%",js++):(t=s,0===Ws&&zs(Tt)))),t}function ya(){var t,e,n,u,o,a,i,c,l,f,b,v;if((t=function(){var t,e,n,u,o,a,i,c;t=js,(e=Pa())===s&&(e=Ma())===s&&(e=Da())===s&&(e=Fa())===s&&(e=ia())===s&&(e=aa())===s&&(e=Ta())===s&&(e=xa());e!==s&&fc()!==s&&(n=Kc())!==s&&gc()!==s?((u=go())===s&&(u=null),u!==s?(t=e={as:u,type:"cast",expr:e,symbol:"::",target:n}):(js=t,t=s)):(js=t,t=s);t===s&&(t=js,(e=Pi())!==s&&gc()!==s&&(n=Tc())!==s&&gc()!==s&&(u=la())!==s&&gc()!==s&&di()!==s&&gc()!==s&&(o=Kc())!==s&&gc()!==s&&(a=mc())!==s?(e=function(r,t){return {type:"cast",expr:r,symbol:"as",target:t}}(u,o),t=e):(js=t,t=s),t===s&&(t=js,(e=Pi())!==s&&gc()!==s&&(n=Tc())!==s&&gc()!==s&&(u=la())!==s&&gc()!==s&&di()!==s&&gc()!==s&&(o=Yi())!==s&&gc()!==s&&(a=Tc())!==s&&gc()!==s&&(i=Va())!==s&&gc()!==s&&mc()!==s&&gc()!==s&&(c=mc())!==s?(e=function(r,t){return {type:"cast",expr:r,symbol:"as",target:{dataType:"DECIMAL("+t+")"}}}(u,i),t=e):(js=t,t=s),t===s&&(t=js,(e=Pi())!==s&&gc()!==s&&(n=Tc())!==s&&gc()!==s&&(u=la())!==s&&gc()!==s&&di()!==s&&gc()!==s&&(o=Yi())!==s&&gc()!==s&&(a=Tc())!==s&&gc()!==s&&(i=Va())!==s&&gc()!==s&&Ac()!==s&&gc()!==s&&(c=Va())!==s&&gc()!==s&&mc()!==s&&gc()!==s&&mc()!==s?(e=function(r,t,e){return {type:"cast",expr:r,symbol:"as",target:{dataType:"DECIMAL("+t+", "+e+")"}}}(u,i,c),t=e):(js=t,t=s),t===s&&(t=js,(e=Pi())!==s&&gc()!==s&&(n=Tc())!==s&&gc()!==s&&(u=la())!==s&&gc()!==s&&di()!==s&&gc()!==s&&(o=function(){var t;(t=function(){var t,e,n,u;t=js,"signed"===r.substr(js,6).toLowerCase()?(e=r.substr(js,6),js+=6):(e=s,0===Ws&&zs(hu));e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="SIGNED"):(js=t,t=s)):(js=t,t=s);return t}())===s&&(t=Bi());return t}())!==s&&gc()!==s?((a=Wi())===s&&(a=null),a!==s&&gc()!==s&&(i=mc())!==s?(e=function(r,t,e){return {type:"cast",expr:r,symbol:"as",target:{dataType:t+(e?" "+e:"")}}}(u,o,a),t=e):(js=t,t=s)):(js=t,t=s)))));return t}())===s&&(t=Pa())===s&&(t=Ma())===s&&(t=Da())===s&&(t=Fa())===s&&(t=ia())===s&&(t=aa())===s&&(t=Ta())===s&&(t=xa())===s){if(t=js,Tc()!==s)if((e=gc())!==s)if((n=la())!==s)if(gc()!==s)if(mc()!==s){for(u=[],o=js,(a=Oc())!==s?((i=Di())===s&&(i=ki()),i!==s&&(c=gc())!==s&&(l=ba())!==s?o=a=[a,i,c,l]:(js=o,o=s)):(js=o,o=s);o!==s;)u.push(o),o=js,(a=Oc())!==s?((i=Di())===s&&(i=ki()),i!==s&&(c=gc())!==s&&(l=ba())!==s?o=a=[a,i,c,l]:(js=o,o=s)):(js=o,o=s);u!==s?(v=u,(b=n).parentheses=!0,t=v&&0!==v.length?tl(b,v):b):(js=t,t=s);}else js=t,t=s;else js=t,t=s;else js=t,t=s;else js=t,t=s;else js=t,t=s;t===s&&(t=js,Tc()!==s&&(e=gc())!==s&&(n=oa())!==s&&gc()!==s&&mc()!==s?((f=n).parentheses=!0,t=f):(js=t,t=s),t===s&&(t=Wc())===s&&(t=js,gc()!==s?(36===r.charCodeAt(js)?(e="$",js++):(e=s,0===Ws&&zs(mt)),e!==s&&(n=Wa())!==s?(t={type:"origin",value:"$"+n.value}):(js=t,t=s)):(js=t,t=s)));}return t}function Ta(){var t,e,n,u,o,a,i,c,l;return t=js,(e=ma())!==s&&(n=gc())!==s&&(u=hc())!==s&&(o=gc())!==s&&(a=yc())!==s?(c=e,al.add(`select::${c}::(.*)`),t=e={type:"column_ref",table:c,column:"*"}):(js=t,t=s),t===s&&(t=js,e=js,(n=ma())!==s&&(u=gc())!==s&&(o=hc())!==s?e=n=[n,u,o]:(js=e,e=s),e===s&&(e=null),e!==s&&(n=gc())!==s&&(u=Na())!==s&&(o=gc())!==s?((a=function(){var t;"->>"===r.substr(js,3)?(t="->>",js+=3):(t=s,0===Ws&&zs(gs));return t}())===s&&(a=function(){var t;"->"===r.substr(js,2)?(t="->",js+=2):(t=s,0===Ws&&zs(_s));return t}()),a!==s&&gc()!==s?((i=ja())===s&&(i=Wa()),i!==s?(t=e=function(r,t,e,n){const u=r&&r[0]||null;return al.add(`select::${u}::${t}`),{type:"column_ref",table:u,column:t,arrow:e,property:n}}(e,u,a,i)):(js=t,t=s)):(js=t,t=s)):(js=t,t=s),t===s&&(t=js,(e=ma())!==s&&(n=gc())!==s&&(u=hc())!==s&&(o=gc())!==s&&(a=Na())!==s?(t=e=function(r,t){return al.add(`select::${r}::${t}`),{type:"column_ref",table:r,column:t}}(e,a)):(js=t,t=s),t===s&&(t=js,(e=Na())!==s&&(l=e,al.add("select::null::"+l),e={type:"column_ref",table:null,column:l}),t=e))),t}function ma(){var r,t;return r=js,(t=Ra())!==s?((St(t)?s:void 0)!==s?(r=t=t):(js=r,r=s)):(js=r,r=s),r===s&&(r=js,(t=Ia())!==s&&(t=t),r=t),r}function Sa(){var r,t;return r=js,(t=Ra())!==s?((function(r){if(!0===Zc[r.toUpperCase()])throw new Error("Error: "+JSON.stringify(r)+" is a reserved word, can not as alias clause");return !1}(t)?s:void 0)!==s?(r=t=t):(js=r,r=s)):(js=r,r=s),r===s&&(r=js,(t=Ia())!==s&&(t=t),r=t),r}function Ia(){var t;return (t=function(){var t,e,n,u;t=js,34===r.charCodeAt(js)?(e='"',js++):(e=s,0===Ws&&zs(It));if(e!==s){if(n=[],Nt.test(r.charAt(js))?(u=r.charAt(js),js++):(u=s,0===Ws&&zs(Rt)),u!==s)for(;u!==s;)n.push(u),Nt.test(r.charAt(js))?(u=r.charAt(js),js++):(u=s,0===Ws&&zs(Rt));else n=s;n!==s?(34===r.charCodeAt(js)?(u='"',js++):(u=s,0===Ws&&zs(It)),u!==s?(e=_t(n),t=e):(js=t,t=s)):(js=t,t=s);}else js=t,t=s;return t}())===s&&(t=function(){var t,e,n,u;t=js,39===r.charCodeAt(js)?(e="'",js++):(e=s,0===Ws&&zs(Rr));if(e!==s){if(n=[],gt.test(r.charAt(js))?(u=r.charAt(js),js++):(u=s,0===Ws&&zs(Ot)),u!==s)for(;u!==s;)n.push(u),gt.test(r.charAt(js))?(u=r.charAt(js),js++):(u=s,0===Ws&&zs(Ot));else n=s;n!==s?(39===r.charCodeAt(js)?(u="'",js++):(u=s,0===Ws&&zs(Rr)),u!==s?(e=_t(n),t=e):(js=t,t=s)):(js=t,t=s);}else js=t,t=s;return t}())===s&&(t=function(){var t,e,n,u;t=js,96===r.charCodeAt(js)?(e="`",js++):(e=s,0===Ws&&zs(xt));if(e!==s){if(n=[],Ut.test(r.charAt(js))?(u=r.charAt(js),js++):(u=s,0===Ws&&zs(Mt)),u!==s)for(;u!==s;)n.push(u),Ut.test(r.charAt(js))?(u=r.charAt(js),js++):(u=s,0===Ws&&zs(Mt));else n=s;n!==s?(96===r.charCodeAt(js)?(u="`",js++):(u=s,0===Ws&&zs(xt)),u!==s?(e=_t(n),t=e):(js=t,t=s)):(js=t,t=s);}else js=t,t=s;return t}()),t}function Na(){var r,t;return r=js,(t=function(){var r,t,e,n;if(r=js,(t=_a())!==s){for(e=[],n=Oa();n!==s;)e.push(n),n=Oa();e!==s?(t=t+e.join(""),r=t):(js=r,r=s);}else js=r,r=s;return r}())!==s?((St(t)?s:void 0)!==s?(r=t=t):(js=r,r=s)):(js=r,r=s),r===s&&(r=Ia()),r}function Ra(){var r,t,e,n;if(r=js,(t=_a())!==s){for(e=[],n=ga();n!==s;)e.push(n),n=ga();e!==s?(r=t=t+e.join("")):(js=r,r=s);}else js=r,r=s;return r}function _a(){var t;return Dt.test(r.charAt(js))?(t=r.charAt(js),js++):(t=s,0===Ws&&zs(kt)),t}function ga(){var t;return $t.test(r.charAt(js))?(t=r.charAt(js),js++):(t=s,0===Ws&&zs(Ft)),t}function Oa(){var t;return Pt.test(r.charAt(js))?(t=r.charAt(js),js++):(t=s,0===Ws&&zs(Ht)),t}function xa(){var e,n,u;return e=js,58===r.charCodeAt(js)?(n=":",js++):(n=s,0===Ws&&zs(Gt)),n!==s&&(u=Ra())!==s?e=n=[n,u]:(js=e,e=s),e!==s&&(e={type:"param",value:e[1]}),e}function Ua(){var t,e,n,u,o;return t=js,"over"===r.substr(js,4).toLowerCase()?(e=r.substr(js,4),js+=4):(e=s,0===Ws&&zs(jt)),e!==s&&gc()!==s&&(n=Bo())!==s?(t=e={type:"window",as_window_specification:n}):(js=t,t=s),t===s&&(t=js,"over"===r.substr(js,4).toLowerCase()?(e=r.substr(js,4),js+=4):(e=s,0===Ws&&zs(jt)),e!==s&&gc()!==s&&(n=Tc())!==s&&gc()!==s?((u=qo())===s&&(u=null),u!==s&&gc()!==s?((o=Zo())===s&&(o=null),o!==s&&gc()!==s&&mc()!==s?(t=e=function(r,t){return {partitionby:r,orderby:t}}(u,o)):(js=t,t=s)):(js=t,t=s)):(js=t,t=s)),t}function Ma(){var t;return (t=function(){var t,e,n,u;t=js,(e=function(){var t,e,n,u;t=js,"count"===r.substr(js,5).toLowerCase()?(e=r.substr(js,5),js+=5):(e=s,0===Ws&&zs(ru));e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="COUNT"):(js=t,t=s)):(js=t,t=s);return t}())===s&&(e=function(){var t,e,n,u;t=js,"group_concat"===r.substr(js,12).toLowerCase()?(e=r.substr(js,12),js+=12):(e=s,0===Ws&&zs(tu));e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="GROUP_CONCAT"):(js=t,t=s)):(js=t,t=s);return t}());e!==s&&gc()!==s&&Tc()!==s&&gc()!==s&&(n=function(){var t,e;t=js,(e=function(){var e;42===r.charCodeAt(js)?(e="*",js++):(e=s,0===Ws&&zs(At));e!==s&&(e={type:"star",value:"*"});return e}())!==s&&(e={expr:e});(t=e)===s&&(t=$a());return t}())!==s&&gc()!==s&&mc()!==s&&gc()!==s?((u=Ua())===s&&(u=null),u!==s?(e=function(r,t,e){return {type:"aggr_func",name:r,args:t,over:e}}(e,n,u),t=e):(js=t,t=s)):(js=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=js,(e=function(){var t;(t=function(){var t,e,n,u;t=js,"sum"===r.substr(js,3).toLowerCase()?(e=r.substr(js,3),js+=3):(e=s,0===Ws&&zs(uu));e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="SUM"):(js=t,t=s)):(js=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=js,"max"===r.substr(js,3).toLowerCase()?(e=r.substr(js,3),js+=3):(e=s,0===Ws&&zs(eu));e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="MAX"):(js=t,t=s)):(js=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=js,"min"===r.substr(js,3).toLowerCase()?(e=r.substr(js,3),js+=3):(e=s,0===Ws&&zs(nu));e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="MIN"):(js=t,t=s)):(js=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=js,"avg"===r.substr(js,3).toLowerCase()?(e=r.substr(js,3),js+=3):(e=s,0===Ws&&zs(su));e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="AVG"):(js=t,t=s)):(js=t,t=s);return t}());return t}())!==s&&gc()!==s&&Tc()!==s&&gc()!==s&&(n=wa())!==s&&gc()!==s&&mc()!==s&&gc()!==s?((u=Ua())===s&&(u=null),u!==s?(e=function(r,t,e){return {type:"aggr_func",name:r,args:{expr:t},over:e}}(e,n,u),t=e):(js=t,t=s)):(js=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=js,(e=function(){var t,e,n,u;t=js,"array_agg"===r.substr(js,9).toLowerCase()?(e=r.substr(js,9),js+=9):(e=s,0===Ws&&zs(Qn));e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="ARRAY_AGG"):(js=t,t=s)):(js=t,t=s);return t}())!==s&&gc()!==s&&Tc()!==s&&gc()!==s&&(n=$a())!==s&&gc()!==s?((u=Zo())===s&&(u=null),u!==s&&gc()!==s&&mc()!==s?(t=e={type:"aggr_func",name:e,args:n,orderby:u}):(js=t,t=s)):(js=t,t=s);return t}()),t}function Da(){var t;return (t=function(){var t,e,n;t=js,(e=function(){var t;"row_number"===r.substr(js,10).toLowerCase()?(t=r.substr(js,10),js+=10):(t=s,0===Ws&&zs(Xt));t===s&&("dense_rank"===r.substr(js,10).toLowerCase()?(t=r.substr(js,10),js+=10):(t=s,0===Ws&&zs(Wt)),t===s&&("rank"===r.substr(js,4).toLowerCase()?(t=r.substr(js,4),js+=4):(t=s,0===Ws&&zs(Vt))));return t}())!==s&&gc()!==s&&Tc()!==s&&gc()!==s&&mc()!==s&&gc()!==s&&(n=Ua())!==s?(t=e={type:"window_func",name:e,over:n}):(js=t,t=s);return t}())===s&&(t=function(){var t,e,n,u,o;t=js,(e=function(){var t;"lag"===r.substr(js,3).toLowerCase()?(t=r.substr(js,3),js+=3):(t=s,0===Ws&&zs(Kt));t===s&&("lead"===r.substr(js,4).toLowerCase()?(t=r.substr(js,4),js+=4):(t=s,0===Ws&&zs(qt)),t===s&&("nth_value"===r.substr(js,9).toLowerCase()?(t=r.substr(js,9),js+=9):(t=s,0===Ws&&zs(Zt))));return t}())!==s&&gc()!==s&&Tc()!==s&&gc()!==s&&(n=oa())!==s&&gc()!==s&&mc()!==s&&gc()!==s?((u=ka())===s&&(u=null),u!==s&&gc()!==s&&(o=Ua())!==s?(t=e={type:"window_func",name:e,args:n,over:o,consider_nulls:u||"RESPECT NULLS"}):(js=t,t=s)):(js=t,t=s);return t}())===s&&(t=function(){var t,e,n,u,o;t=js,(e=function(){var t;"first_value"===r.substr(js,11).toLowerCase()?(t=r.substr(js,11),js+=11):(t=s,0===Ws&&zs(Yt));t===s&&("last_value"===r.substr(js,10).toLowerCase()?(t=r.substr(js,10),js+=10):(t=s,0===Ws&&zs(Bt)));return t}())!==s&&gc()!==s&&Tc()!==s&&gc()!==s&&(n=la())!==s&&gc()!==s?((u=ka())===s&&(u=null),u!==s&&gc()!==s&&mc()!==s&&gc()!==s&&(o=Ua())!==s?(t=e={type:"window_func",name:e,args:{type:"expr_list",value:[n]},over:o,consider_nulls:u||"RESPECT NULLS"}):(js=t,t=s)):(js=t,t=s);return t}()),t}function ka(){var t,e,n;return t=js,"ignore"===r.substr(js,6).toLowerCase()?(e=r.substr(js,6),js+=6):(e=s,0===Ws&&zs(zt)),e===s&&("respect"===r.substr(js,7).toLowerCase()?(e=r.substr(js,7),js+=7):(e=s,0===Ws&&zs(Jt))),e!==s&&gc()!==s?("nulls"===r.substr(js,5).toLowerCase()?(n=r.substr(js,5),js+=5):(n=s,0===Ws&&zs(y)),n!==s?(t=e=e.toUpperCase()+" NULLS"):(js=t,t=s)):(js=t,t=s),t}function $a(){var r,t,e,n;return r=js,(t=Ni())===s&&(t=null),t!==s&&gc()!==s&&(e=Ta())!==s?(r=t={distinct:t,expr:e}):(js=r,r=s),r===s&&(r=js,(t=Ni())===s&&(t=null),t!==s&&gc()!==s&&(e=Tc())!==s&&gc()!==s&&(n=Ta())!==s&&gc()!==s&&mc()!==s?(r=t=function(r,t){return t.parentheses=!0,{distinct:r,expr:t}}(t,n)):(js=r,r=s)),r}function Fa(){var t,e,n,u;return t=js,(e=Yc())!==s&&gc()!==s&&Tc()!==s&&gc()!==s?((n=oa())===s&&(n=null),n!==s&&gc()!==s&&mc()!==s?(t=e={type:"function",name:e,args:n||{type:"expr_list",value:[]}}):(js=t,t=s)):(js=t,t=s),t===s&&(t=js,(e=function(){var t;(t=function(){var t,e,n,u;t=js,"current_date"===r.substr(js,12).toLowerCase()?(e=r.substr(js,12),js+=12):(e=s,0===Ws&&zs(Wu));e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="CURRENT_DATE"):(js=t,t=s)):(js=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=js,"current_time"===r.substr(js,12).toLowerCase()?(e=r.substr(js,12),js+=12):(e=s,0===Ws&&zs(Ku));e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="CURRENT_TIME"):(js=t,t=s)):(js=t,t=s);return t}())===s&&(t=cc())===s&&(t=function(){var t,e,n,u;t=js,"current_user"===r.substr(js,12).toLowerCase()?(e=r.substr(js,12),js+=12):(e=s,0===Ws&&zs(Zu));e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="CURRENT_USER"):(js=t,t=s)):(js=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=js,"user"===r.substr(js,4).toLowerCase()?(e=r.substr(js,4),js+=4):(e=s,0===Ws&&zs(Bu));e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="USER"):(js=t,t=s)):(js=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=js,"session_user"===r.substr(js,12).toLowerCase()?(e=r.substr(js,12),js+=12):(e=s,0===Ws&&zs(zu));e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="SESSION_USER"):(js=t,t=s)):(js=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=js,"system_user"===r.substr(js,11).toLowerCase()?(e=r.substr(js,11),js+=11):(e=s,0===Ws&&zs(Ju));e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="SYSTEM_USER"):(js=t,t=s)):(js=t,t=s);return t}());return t}())!==s&&gc()!==s&&Tc()!==s&&gc()!==s?((n=oa())===s&&(n=null),n!==s&&gc()!==s&&mc()!==s&&gc()!==s?((u=Ua())===s&&(u=null),u!==s?(t=e=function(r,t,e){return {type:"function",name:r,args:t||{type:"expr_list",value:[]},over:e}}(e,n,u)):(js=t,t=s)):(js=t,t=s)):(js=t,t=s),t===s&&(t=function(){var t,e,n,u,o;t=js,(e=function(){var t,e,n,u;t=js,"extract"===r.substr(js,7).toLowerCase()?(e=r.substr(js,7),js+=7):(e=s,0===Ws&&zs(ou));e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="EXTRACT"):(js=t,t=s)):(js=t,t=s);return t}())!==s&&gc()!==s&&Tc()!==s&&gc()!==s&&(n=function(){var t,e;"century"===r.substr(js,7).toLowerCase()?(t=r.substr(js,7),js+=7):(t=s,0===Ws&&zs(Qt));t===s&&("day"===r.substr(js,3).toLowerCase()?(t=r.substr(js,3),js+=3):(t=s,0===Ws&&zs(re)),t===s&&("decade"===r.substr(js,6).toLowerCase()?(t=r.substr(js,6),js+=6):(t=s,0===Ws&&zs(te)),t===s&&("dow"===r.substr(js,3).toLowerCase()?(t=r.substr(js,3),js+=3):(t=s,0===Ws&&zs(ee)),t===s&&("doy"===r.substr(js,3).toLowerCase()?(t=r.substr(js,3),js+=3):(t=s,0===Ws&&zs(ne)),t===s&&("epoch"===r.substr(js,5).toLowerCase()?(t=r.substr(js,5),js+=5):(t=s,0===Ws&&zs(ue)),t===s&&("hour"===r.substr(js,4).toLowerCase()?(t=r.substr(js,4),js+=4):(t=s,0===Ws&&zs(se)),t===s&&("isodow"===r.substr(js,6).toLowerCase()?(t=r.substr(js,6),js+=6):(t=s,0===Ws&&zs(oe)),t===s&&("isoyear"===r.substr(js,7).toLowerCase()?(t=r.substr(js,7),js+=7):(t=s,0===Ws&&zs(ae)),t===s&&("microseconds"===r.substr(js,12).toLowerCase()?(t=r.substr(js,12),js+=12):(t=s,0===Ws&&zs(ie)),t===s&&("millennium"===r.substr(js,10).toLowerCase()?(t=r.substr(js,10),js+=10):(t=s,0===Ws&&zs(ce)),t===s&&("milliseconds"===r.substr(js,12).toLowerCase()?(t=r.substr(js,12),js+=12):(t=s,0===Ws&&zs(le)),t===s&&("minute"===r.substr(js,6).toLowerCase()?(t=r.substr(js,6),js+=6):(t=s,0===Ws&&zs(fe)),t===s&&("month"===r.substr(js,5).toLowerCase()?(t=r.substr(js,5),js+=5):(t=s,0===Ws&&zs(be)),t===s&&("quarter"===r.substr(js,7).toLowerCase()?(t=r.substr(js,7),js+=7):(t=s,0===Ws&&zs(ve)),t===s&&("second"===r.substr(js,6).toLowerCase()?(t=r.substr(js,6),js+=6):(t=s,0===Ws&&zs(de)),t===s&&("timezone"===r.substr(js,8).toLowerCase()?(t=r.substr(js,8),js+=8):(t=s,0===Ws&&zs(Le)),t===s&&("timezone_hour"===r.substr(js,13).toLowerCase()?(t=r.substr(js,13),js+=13):(t=s,0===Ws&&zs(Ce)),t===s&&("timezone_minute"===r.substr(js,15).toLowerCase()?(t=r.substr(js,15),js+=15):(t=s,0===Ws&&zs(pe)),t===s&&("week"===r.substr(js,4).toLowerCase()?(t=r.substr(js,4),js+=4):(t=s,0===Ws&&zs(we)),t===s&&(t=js,"year"===r.substr(js,4).toLowerCase()?(e=r.substr(js,4),js+=4):(e=s,0===Ws&&zs(Ee)),e!==s&&(e=f),t=e))))))))))))))))))));return t}())!==s&&gc()!==s&&bi()!==s&&gc()!==s?((u=oc())===s&&(u=ic())===s&&(u=sc())===s&&(u=ec()),u===s&&(u=null),u!==s&&gc()!==s&&(o=la())!==s&&gc()!==s&&mc()!==s?(e=function(r,t,e,n){return {type:r.toLowerCase(),args:{field:t,cast_type:e,source:n}}}(e,n,u,o),t=e):(js=t,t=s)):(js=t,t=s);return t}())),t}function Pa(){var t;return (t=ja())===s&&(t=Wa())===s&&(t=function(){var t,e;t=js,(e=function(){var t,e,n,u;t=js,"true"===r.substr(js,4).toLowerCase()?(e=r.substr(js,4),js+=4):(e=s,0===Ws&&zs(ze));e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?t=e=[e,n]:(js=t,t=s)):(js=t,t=s);return t}())!==s&&(e={type:"bool",value:!0});(t=e)===s&&(t=js,(e=function(){var t,e,n,u;t=js,"false"===r.substr(js,5).toLowerCase()?(e=r.substr(js,5),js+=5):(e=s,0===Ws&&zs(Qe));e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?t=e=[e,n]:(js=t,t=s)):(js=t,t=s);return t}())!==s&&(e={type:"bool",value:!1}),t=e);return t}())===s&&(t=Ha())===s&&(t=function(){var t,e,n,u,o,a,i;t=js,(e=sc())===s&&(e=ec())===s&&(e=oc())===s&&(e=nc());if(e!==s)if(gc()!==s){if(n=js,39===r.charCodeAt(js)?(u="'",js++):(u=s,0===Ws&&zs(Rr)),u!==s){for(o=[],a=Ba();a!==s;)o.push(a),a=Ba();o!==s?(39===r.charCodeAt(js)?(a="'",js++):(a=s,0===Ws&&zs(Rr)),a!==s?n=u=[u,o,a]:(js=n,n=s)):(js=n,n=s);}else js=n,n=s;n!==s?(c=n,e={type:e.toLowerCase(),value:c[1].join("")},t=e):(js=t,t=s);}else js=t,t=s;else js=t,t=s;var c;if(t===s){if(t=js,(e=sc())===s&&(e=ec())===s&&(e=oc())===s&&(e=nc()),e!==s)if(gc()!==s){if(n=js,34===r.charCodeAt(js)?(u='"',js++):(u=s,0===Ws&&zs(It)),u!==s){for(o=[],a=Ya();a!==s;)o.push(a),a=Ya();o!==s?(34===r.charCodeAt(js)?(a='"',js++):(a=s,0===Ws&&zs(It)),a!==s?n=u=[u,o,a]:(js=n,n=s)):(js=n,n=s);}else js=n,n=s;n!==s?(e=function(r,t){return {type:r.toLowerCase(),value:t[1].join("")}}(e,n),t=e):(js=t,t=s);}else js=t,t=s;else js=t,t=s;t===s&&(t=js,(e=cc())!==s&&gc()!==s?((n=Tc())===s&&(n=null),n!==s&&(u=gc())!==s?((o=mc())===s&&(o=null),o!==s?((a=(a=function(r,t,e){if(t&&e)return !0}(0,n,o))?s:void 0)!==s&&gc()!==s?("on update current_timestamp"===r.substr(js,27).toLowerCase()?(i=r.substr(js,27),js+=27):(i=s,0===Ws&&zs(ye)),i===s&&(i=null),i!==s?(e=function(r,t,e,n){return {type:"origin",value:(n?`${r} ${n}`:r).toLowerCase()}}(e,0,0,i),t=e):(js=t,t=s)):(js=t,t=s)):(js=t,t=s)):(js=t,t=s)):(js=t,t=s));}return t}())===s&&(t=function(){var t,e;t=js,function(){var t,e,n,u;t=js,"array"===r.substr(js,5).toLowerCase()?(e=r.substr(js,5),js+=5):(e=s,0===Ws&&zs(Jn));e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="ARRAY"):(js=t,t=s)):(js=t,t=s);return t}()!==s&&gc()!==s&&Sc()!==s&&gc()!==s?((e=oa())===s&&(e=null),e!==s&&gc()!==s&&Ic()!==s?(t={expr_list:e||{type:"origin",value:""},type:"array",keyword:"array",brackets:!0}):(js=t,t=s)):(js=t,t=s);return t}()),t}function Ha(){var e;return (e=function(){var t,e,n,u;t=js,"null"===r.substr(js,4).toLowerCase()?(e=r.substr(js,4),js+=4):(e=s,0===Ws&&zs(qe));e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?t=e=[e,n]:(js=t,t=s)):(js=t,t=s);return t}())!==s&&(e={type:"null",value:null}),e}function Ga(){var e;return (e=function(){var t,e,n,u;t=js,"not null"===r.substr(js,8).toLowerCase()?(e=r.substr(js,8),js+=8):(e=s,0===Ws&&zs(Ze));e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?t=e=[e,n]:(js=t,t=s)):(js=t,t=s);return t}())!==s&&(e={type:"not null",value:"not null"}),e}function ja(){var t,e,n,u,o,a,i,c,l;if(t=js,e=js,39===r.charCodeAt(js)?(n="'",js++):(n=s,0===Ws&&zs(Rr)),n!==s){for(u=[],o=Ba();o!==s;)u.push(o),o=Ba();u!==s?(39===r.charCodeAt(js)?(o="'",js++):(o=s,0===Ws&&zs(Rr)),o!==s?e=n=[n,u,o]:(js=e,e=s)):(js=e,e=s);}else js=e,e=s;if(e!==s){if(n=[],he.test(r.charAt(js))?(u=r.charAt(js),js++):(u=s,0===Ws&&zs(Ae)),u!==s)for(;u!==s;)n.push(u),he.test(r.charAt(js))?(u=r.charAt(js),js++):(u=s,0===Ws&&zs(Ae));else n=s;if(n!==s)if((u=gc())!==s){if(o=js,39===r.charCodeAt(js)?(a="'",js++):(a=s,0===Ws&&zs(Rr)),a!==s){for(i=[],c=Ba();c!==s;)i.push(c),c=Ba();i!==s?(39===r.charCodeAt(js)?(c="'",js++):(c=s,0===Ws&&zs(Rr)),c!==s?o=a=[a,i,c]:(js=o,o=s)):(js=o,o=s);}else js=o,o=s;o!==s?(l=o,t=e={type:"single_quote_string",value:`${e[1].join("")}${l[1].join("")}`}):(js=t,t=s);}else js=t,t=s;else js=t,t=s;}else js=t,t=s;if(t===s){if(t=js,e=js,39===r.charCodeAt(js)?(n="'",js++):(n=s,0===Ws&&zs(Rr)),n!==s){for(u=[],o=Ba();o!==s;)u.push(o),o=Ba();u!==s?(39===r.charCodeAt(js)?(o="'",js++):(o=s,0===Ws&&zs(Rr)),o!==s?e=n=[n,u,o]:(js=e,e=s)):(js=e,e=s);}else js=e,e=s;if(e!==s&&(e=function(r){return {type:"single_quote_string",value:r[1].join("")}}(e)),(t=e)===s){if(t=js,e=js,34===r.charCodeAt(js)?(n='"',js++):(n=s,0===Ws&&zs(It)),n!==s){for(u=[],o=Ya();o!==s;)u.push(o),o=Ya();u!==s?(34===r.charCodeAt(js)?(o='"',js++):(o=s,0===Ws&&zs(It)),o!==s?e=n=[n,u,o]:(js=e,e=s)):(js=e,e=s);}else js=e,e=s;e!==s?(n=js,Ws++,u=hc(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e=function(r){return {type:"double_quote_string",value:r[1].join("")}}(e)):(js=t,t=s)):(js=t,t=s);}}return t}function Ya(){var t;return Te.test(r.charAt(js))?(t=r.charAt(js),js++):(t=s,0===Ws&&zs(me)),t===s&&(t=Xa()),t}function Ba(){var t;return Se.test(r.charAt(js))?(t=r.charAt(js),js++):(t=s,0===Ws&&zs(Ie)),t===s&&(t=Xa()),t}function Xa(){var t,e,n,u,o,a,i,c,l,f;return t=js,"\\'"===r.substr(js,2)?(e="\\'",js+=2):(e=s,0===Ws&&zs(Ne)),e!==s&&(e="'"),(t=e)===s&&(t=js,'\\"'===r.substr(js,2)?(e='\\"',js+=2):(e=s,0===Ws&&zs(Re)),e!==s&&(e='"'),(t=e)===s&&(t=js,"\\\\"===r.substr(js,2)?(e="\\\\",js+=2):(e=s,0===Ws&&zs(_e)),e!==s&&(e="\\"),(t=e)===s&&(t=js,"\\/"===r.substr(js,2)?(e="\\/",js+=2):(e=s,0===Ws&&zs(ge)),e!==s&&(e="/"),(t=e)===s&&(t=js,"\\b"===r.substr(js,2)?(e="\\b",js+=2):(e=s,0===Ws&&zs(Oe)),e!==s&&(e="\b"),(t=e)===s&&(t=js,"\\f"===r.substr(js,2)?(e="\\f",js+=2):(e=s,0===Ws&&zs(xe)),e!==s&&(e="\f"),(t=e)===s&&(t=js,"\\n"===r.substr(js,2)?(e="\\n",js+=2):(e=s,0===Ws&&zs(Ue)),e!==s&&(e="\n"),(t=e)===s&&(t=js,"\\r"===r.substr(js,2)?(e="\\r",js+=2):(e=s,0===Ws&&zs(Me)),e!==s&&(e="\r"),(t=e)===s&&(t=js,"\\t"===r.substr(js,2)?(e="\\t",js+=2):(e=s,0===Ws&&zs(De)),e!==s&&(e="\t"),(t=e)===s&&(t=js,"\\u"===r.substr(js,2)?(e="\\u",js+=2):(e=s,0===Ws&&zs(ke)),e!==s&&(n=Ja())!==s&&(u=Ja())!==s&&(o=Ja())!==s&&(a=Ja())!==s?(i=n,c=u,l=o,f=a,t=e=String.fromCharCode(parseInt("0x"+i+c+l+f))):(js=t,t=s),t===s&&(t=js,92===r.charCodeAt(js)?(e="\\",js++):(e=s,0===Ws&&zs($e)),e!==s&&(e="\\"),t=e)))))))))),t}function Wa(){var t,e;return (t=function(){var r,t,e,n;r=js,(t=Va())!==s&&(e=Ka())!==s&&(n=qa())!==s?(r=t={type:"bigint",value:t+e+n}):(js=r,r=s);r===s&&(r=js,(t=Va())!==s&&(e=Ka())!==s?(t=function(r,t){const e=r+t;return Qc(r)?{type:"bigint",value:e}:parseFloat(e)}(t,e),r=t):(js=r,r=s),r===s&&(r=js,(t=Va())!==s&&(e=qa())!==s?(t=function(r,t){return {type:"bigint",value:r+t}}(t,e),r=t):(js=r,r=s),r===s&&(r=js,(t=Va())!==s&&(t=function(r){return Qc(r)?{type:"bigint",value:r}:parseFloat(r)}(t)),r=t)));return r}())!==s&&(t=(e=t)&&"bigint"===e.type?e:{type:"number",value:e}),t}function Va(){var t,e,n;return (t=Za())===s&&(t=za())===s&&(t=js,45===r.charCodeAt(js)?(e="-",js++):(e=s,0===Ws&&zs(ht)),e===s&&(43===r.charCodeAt(js)?(e="+",js++):(e=s,0===Ws&&zs(Et))),e!==s&&(n=Za())!==s?(t=e="-"+n):(js=t,t=s),t===s&&(t=js,45===r.charCodeAt(js)?(e="-",js++):(e=s,0===Ws&&zs(ht)),e===s&&(43===r.charCodeAt(js)?(e="+",js++):(e=s,0===Ws&&zs(Et))),e!==s&&(n=za())!==s?(t=e="-"+n):(js=t,t=s))),t}function Ka(){var t,e,n;return t=js,46===r.charCodeAt(js)?(e=".",js++):(e=s,0===Ws&&zs(He)),e!==s&&(n=Za())!==s?(t=e="."+n):(js=t,t=s),t}function qa(){var t,e,n;return t=js,(e=function(){var t,e,n;t=js,Xe.test(r.charAt(js))?(e=r.charAt(js),js++):(e=s,0===Ws&&zs(We));e!==s?(Ve.test(r.charAt(js))?(n=r.charAt(js),js++):(n=s,0===Ws&&zs(Ke)),n===s&&(n=null),n!==s?(t=e=e+(null!==(u=n)?u:"")):(js=t,t=s)):(js=t,t=s);var u;return t}())!==s&&(n=Za())!==s?(t=e=e+n):(js=t,t=s),t}function Za(){var t,e;if(t=[],(e=za())!==s)for(;e!==s;)t.push(e),e=za();else t=s;return t!==s&&(t=t.join("")),t}function za(){var t;return Ge.test(r.charAt(js))?(t=r.charAt(js),js++):(t=s,0===Ws&&zs(je)),t}function Ja(){var t;return Ye.test(r.charAt(js))?(t=r.charAt(js),js++):(t=s,0===Ws&&zs(Be)),t}function Qa(){var t,e,n,u;return t=js,"default"===r.substr(js,7).toLowerCase()?(e=r.substr(js,7),js+=7):(e=s,0===Ws&&zs(x)),e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?t=e=[e,n]:(js=t,t=s)):(js=t,t=s),t}function ri(){var t,e,n,u;return t=js,"to"===r.substr(js,2).toLowerCase()?(e=r.substr(js,2),js+=2):(e=s,0===Ws&&zs(Je)),e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?t=e=[e,n]:(js=t,t=s)):(js=t,t=s),t}function ti(){var t,e,n,u;return t=js,"drop"===r.substr(js,4).toLowerCase()?(e=r.substr(js,4),js+=4):(e=s,0===Ws&&zs(rn)),e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="DROP"):(js=t,t=s)):(js=t,t=s),t}function ei(){var t,e,n,u;return t=js,"update"===r.substr(js,6).toLowerCase()?(e=r.substr(js,6),js+=6):(e=s,0===Ws&&zs(un)),e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?t=e=[e,n]:(js=t,t=s)):(js=t,t=s),t}function ni(){var t,e,n,u;return t=js,"create"===r.substr(js,6).toLowerCase()?(e=r.substr(js,6),js+=6):(e=s,0===Ws&&zs(sn)),e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?t=e=[e,n]:(js=t,t=s)):(js=t,t=s),t}function ui(){var t,e,n,u;return t=js,"temporary"===r.substr(js,9).toLowerCase()?(e=r.substr(js,9),js+=9):(e=s,0===Ws&&zs(on)),e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="TEMPORARY"):(js=t,t=s)):(js=t,t=s),t}function si(){var t,e,n,u;return t=js,"if not exists"===r.substr(js,13).toLowerCase()?(e=r.substr(js,13),js+=13):(e=s,0===Ws&&zs(cn)),e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?t=e=[e,n]:(js=t,t=s)):(js=t,t=s),t}function oi(){var t,e,n,u;return t=js,"delete"===r.substr(js,6).toLowerCase()?(e=r.substr(js,6),js+=6):(e=s,0===Ws&&zs(ln)),e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?t=e=[e,n]:(js=t,t=s)):(js=t,t=s),t}function ai(){var t,e,n,u;return t=js,"insert"===r.substr(js,6).toLowerCase()?(e=r.substr(js,6),js+=6):(e=s,0===Ws&&zs(fn)),e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?t=e=[e,n]:(js=t,t=s)):(js=t,t=s),t}function ii(){var t,e,n,u;return t=js,"replace"===r.substr(js,7).toLowerCase()?(e=r.substr(js,7),js+=7):(e=s,0===Ws&&zs(vn)),e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?t=e=[e,n]:(js=t,t=s)):(js=t,t=s),t}function ci(){var t,e,n,u;return t=js,"rename"===r.substr(js,6).toLowerCase()?(e=r.substr(js,6),js+=6):(e=s,0===Ws&&zs(Ln)),e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?t=e=[e,n]:(js=t,t=s)):(js=t,t=s),t}function li(){var t,e,n,u;return t=js,"partition"===r.substr(js,9).toLowerCase()?(e=r.substr(js,9),js+=9):(e=s,0===Ws&&zs(Cn)),e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="PARTITION"):(js=t,t=s)):(js=t,t=s),t}function fi(){var t,e,n,u;return t=js,"into"===r.substr(js,4).toLowerCase()?(e=r.substr(js,4),js+=4):(e=s,0===Ws&&zs(pn)),e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?t=e=[e,n]:(js=t,t=s)):(js=t,t=s),t}function bi(){var t,e,n,u;return t=js,"from"===r.substr(js,4).toLowerCase()?(e=r.substr(js,4),js+=4):(e=s,0===Ws&&zs(wn)),e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?t=e=[e,n]:(js=t,t=s)):(js=t,t=s),t}function vi(){var t,e,n,u;return t=js,"set"===r.substr(js,3).toLowerCase()?(e=r.substr(js,3),js+=3):(e=s,0===Ws&&zs(wr)),e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?t=e=[e,n]:(js=t,t=s)):(js=t,t=s),t}function di(){var t,e,n,u;return t=js,"as"===r.substr(js,2).toLowerCase()?(e=r.substr(js,2),js+=2):(e=s,0===Ws&&zs(En)),e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?t=e=[e,n]:(js=t,t=s)):(js=t,t=s),t}function Li(){var t,e,n,u;return t=js,"table"===r.substr(js,5).toLowerCase()?(e=r.substr(js,5),js+=5):(e=s,0===Ws&&zs(hn)),e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="TABLE"):(js=t,t=s)):(js=t,t=s),t}function Ci(){var t,e,n,u;return t=js,"on"===r.substr(js,2).toLowerCase()?(e=r.substr(js,2),js+=2):(e=s,0===Ws&&zs(sr)),e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?t=e=[e,n]:(js=t,t=s)):(js=t,t=s),t}function pi(){var t,e,n,u;return t=js,"join"===r.substr(js,4).toLowerCase()?(e=r.substr(js,4),js+=4):(e=s,0===Ws&&zs(_n)),e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?t=e=[e,n]:(js=t,t=s)):(js=t,t=s),t}function wi(){var t,e,n,u;return t=js,"outer"===r.substr(js,5).toLowerCase()?(e=r.substr(js,5),js+=5):(e=s,0===Ws&&zs(gn)),e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?t=e=[e,n]:(js=t,t=s)):(js=t,t=s),t}function Ei(){var t,e,n,u;return t=js,"union"===r.substr(js,5).toLowerCase()?(e=r.substr(js,5),js+=5):(e=s,0===Ws&&zs(On)),e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?t=e=[e,n]:(js=t,t=s)):(js=t,t=s),t}function hi(){var t,e,n,u;return t=js,"values"===r.substr(js,6).toLowerCase()?(e=r.substr(js,6),js+=6):(e=s,0===Ws&&zs(xn)),e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?t=e=[e,n]:(js=t,t=s)):(js=t,t=s),t}function Ai(){var t,e,n,u;return t=js,"using"===r.substr(js,5).toLowerCase()?(e=r.substr(js,5),js+=5):(e=s,0===Ws&&zs(Un)),e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?t=e=[e,n]:(js=t,t=s)):(js=t,t=s),t}function yi(){var t,e,n,u;return t=js,"with"===r.substr(js,4).toLowerCase()?(e=r.substr(js,4),js+=4):(e=s,0===Ws&&zs(qr)),e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?t=e=[e,n]:(js=t,t=s)):(js=t,t=s),t}function Ti(){var t,e,n,u;return t=js,"by"===r.substr(js,2).toLowerCase()?(e=r.substr(js,2),js+=2):(e=s,0===Ws&&zs(kn)),e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?t=e=[e,n]:(js=t,t=s)):(js=t,t=s),t}function mi(){var t,e,n,u;return t=js,"asc"===r.substr(js,3).toLowerCase()?(e=r.substr(js,3),js+=3):(e=s,0===Ws&&zs(Gn)),e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="ASC"):(js=t,t=s)):(js=t,t=s),t}function Si(){var t,e,n,u;return t=js,"desc"===r.substr(js,4).toLowerCase()?(e=r.substr(js,4),js+=4):(e=s,0===Ws&&zs(jn)),e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="DESC"):(js=t,t=s)):(js=t,t=s),t}function Ii(){var t,e,n,u;return t=js,"all"===r.substr(js,3).toLowerCase()?(e=r.substr(js,3),js+=3):(e=s,0===Ws&&zs(Yn)),e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="ALL"):(js=t,t=s)):(js=t,t=s),t}function Ni(){var t,e,n,u;return t=js,"distinct"===r.substr(js,8).toLowerCase()?(e=r.substr(js,8),js+=8):(e=s,0===Ws&&zs(Bn)),e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="DISTINCT"):(js=t,t=s)):(js=t,t=s),t}function Ri(){var t,e,n,u;return t=js,"between"===r.substr(js,7).toLowerCase()?(e=r.substr(js,7),js+=7):(e=s,0===Ws&&zs(Xn)),e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="BETWEEN"):(js=t,t=s)):(js=t,t=s),t}function _i(){var t,e,n,u;return t=js,"in"===r.substr(js,2).toLowerCase()?(e=r.substr(js,2),js+=2):(e=s,0===Ws&&zs(xr)),e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="IN"):(js=t,t=s)):(js=t,t=s),t}function gi(){var t,e,n,u;return t=js,"is"===r.substr(js,2).toLowerCase()?(e=r.substr(js,2),js+=2):(e=s,0===Ws&&zs(Wn)),e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="IS"):(js=t,t=s)):(js=t,t=s),t}function Oi(){var t,e,n,u;return t=js,"like"===r.substr(js,4).toLowerCase()?(e=r.substr(js,4),js+=4):(e=s,0===Ws&&zs(Vn)),e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="LIKE"):(js=t,t=s)):(js=t,t=s),t}function xi(){var t,e,n,u;return t=js,"ilike"===r.substr(js,5).toLowerCase()?(e=r.substr(js,5),js+=5):(e=s,0===Ws&&zs(Kn)),e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="ILIKE"):(js=t,t=s)):(js=t,t=s),t}function Ui(){var t,e,n,u;return t=js,"exists"===r.substr(js,6).toLowerCase()?(e=r.substr(js,6),js+=6):(e=s,0===Ws&&zs(qn)),e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="EXISTS"):(js=t,t=s)):(js=t,t=s),t}function Mi(){var t,e,n,u;return t=js,"not"===r.substr(js,3).toLowerCase()?(e=r.substr(js,3),js+=3):(e=s,0===Ws&&zs(cr)),e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="NOT"):(js=t,t=s)):(js=t,t=s),t}function Di(){var t,e,n,u;return t=js,"and"===r.substr(js,3).toLowerCase()?(e=r.substr(js,3),js+=3):(e=s,0===Ws&&zs(Zn)),e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="AND"):(js=t,t=s)):(js=t,t=s),t}function ki(){var t,e,n,u;return t=js,"or"===r.substr(js,2).toLowerCase()?(e=r.substr(js,2),js+=2):(e=s,0===Ws&&zs(zn)),e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="OR"):(js=t,t=s)):(js=t,t=s),t}function $i(){var t,e,n,u;return t=js,"case"===r.substr(js,4).toLowerCase()?(e=r.substr(js,4),js+=4):(e=s,0===Ws&&zs(iu)),e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?t=e=[e,n]:(js=t,t=s)):(js=t,t=s),t}function Fi(){var t,e,n,u;return t=js,"when"===r.substr(js,4).toLowerCase()?(e=r.substr(js,4),js+=4):(e=s,0===Ws&&zs(cu)),e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?t=e=[e,n]:(js=t,t=s)):(js=t,t=s),t}function Pi(){var t,e,n,u;return t=js,"cast"===r.substr(js,4).toLowerCase()?(e=r.substr(js,4),js+=4):(e=s,0===Ws&&zs(vu)),e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?t=e=[e,n]:(js=t,t=s)):(js=t,t=s),t}function Hi(){var t,e,n,u;return t=js,"char"===r.substr(js,4).toLowerCase()?(e=r.substr(js,4),js+=4):(e=s,0===Ws&&zs(Cu)),e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="CHAR"):(js=t,t=s)):(js=t,t=s),t}function Gi(){var t,e,n,u;return t=js,"varchar"===r.substr(js,7).toLowerCase()?(e=r.substr(js,7),js+=7):(e=s,0===Ws&&zs(pu)),e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="VARCHAR"):(js=t,t=s)):(js=t,t=s),t}function ji(){var t,e,n,u;return t=js,"numeric"===r.substr(js,7).toLowerCase()?(e=r.substr(js,7),js+=7):(e=s,0===Ws&&zs(wu)),e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="NUMERIC"):(js=t,t=s)):(js=t,t=s),t}function Yi(){var t,e,n,u;return t=js,"decimal"===r.substr(js,7).toLowerCase()?(e=r.substr(js,7),js+=7):(e=s,0===Ws&&zs(Eu)),e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="DECIMAL"):(js=t,t=s)):(js=t,t=s),t}function Bi(){var t,e,n,u;return t=js,"unsigned"===r.substr(js,8).toLowerCase()?(e=r.substr(js,8),js+=8):(e=s,0===Ws&&zs(Au)),e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="UNSIGNED"):(js=t,t=s)):(js=t,t=s),t}function Xi(){var t,e,n,u;return t=js,"int"===r.substr(js,3).toLowerCase()?(e=r.substr(js,3),js+=3):(e=s,0===Ws&&zs(yu)),e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="INT"):(js=t,t=s)):(js=t,t=s),t}function Wi(){var t,e,n,u;return t=js,"integer"===r.substr(js,7).toLowerCase()?(e=r.substr(js,7),js+=7):(e=s,0===Ws&&zs(mu)),e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="INTEGER"):(js=t,t=s)):(js=t,t=s),t}function Vi(){var t,e,n,u;return t=js,"smallint"===r.substr(js,8).toLowerCase()?(e=r.substr(js,8),js+=8):(e=s,0===Ws&&zs(Ru)),e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="SMALLINT"):(js=t,t=s)):(js=t,t=s),t}function Ki(){var t,e,n,u;return t=js,"tinyint"===r.substr(js,7).toLowerCase()?(e=r.substr(js,7),js+=7):(e=s,0===Ws&&zs(_u)),e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="TINYINT"):(js=t,t=s)):(js=t,t=s),t}function qi(){var t,e,n,u;return t=js,"tinytext"===r.substr(js,8).toLowerCase()?(e=r.substr(js,8),js+=8):(e=s,0===Ws&&zs(gu)),e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="TINYTEXT"):(js=t,t=s)):(js=t,t=s),t}function Zi(){var t,e,n,u;return t=js,"text"===r.substr(js,4).toLowerCase()?(e=r.substr(js,4),js+=4):(e=s,0===Ws&&zs(Ou)),e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="TEXT"):(js=t,t=s)):(js=t,t=s),t}function zi(){var t,e,n,u;return t=js,"mediumtext"===r.substr(js,10).toLowerCase()?(e=r.substr(js,10),js+=10):(e=s,0===Ws&&zs(xu)),e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="MEDIUMTEXT"):(js=t,t=s)):(js=t,t=s),t}function Ji(){var t,e,n,u;return t=js,"longtext"===r.substr(js,8).toLowerCase()?(e=r.substr(js,8),js+=8):(e=s,0===Ws&&zs(Uu)),e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="LONGTEXT"):(js=t,t=s)):(js=t,t=s),t}function Qi(){var t,e,n,u;return t=js,"bigint"===r.substr(js,6).toLowerCase()?(e=r.substr(js,6),js+=6):(e=s,0===Ws&&zs(Mu)),e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="BIGINT"):(js=t,t=s)):(js=t,t=s),t}function rc(){var t,e,n,u;return t=js,"float"===r.substr(js,5).toLowerCase()?(e=r.substr(js,5),js+=5):(e=s,0===Ws&&zs(ku)),e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="FLOAT"):(js=t,t=s)):(js=t,t=s),t}function tc(){var t,e,n,u;return t=js,"double"===r.substr(js,6).toLowerCase()?(e=r.substr(js,6),js+=6):(e=s,0===Ws&&zs($u)),e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="DOUBLE"):(js=t,t=s)):(js=t,t=s),t}function ec(){var t,e,n,u;return t=js,"date"===r.substr(js,4).toLowerCase()?(e=r.substr(js,4),js+=4):(e=s,0===Ws&&zs(Fu)),e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="DATE"):(js=t,t=s)):(js=t,t=s),t}function nc(){var t,e,n,u;return t=js,"datetime"===r.substr(js,8).toLowerCase()?(e=r.substr(js,8),js+=8):(e=s,0===Ws&&zs(Pu)),e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="DATETIME"):(js=t,t=s)):(js=t,t=s),t}function uc(){var t,e,n,u;return t=js,"rows"===r.substr(js,4).toLowerCase()?(e=r.substr(js,4),js+=4):(e=s,0===Ws&&zs(Hu)),e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="ROWS"):(js=t,t=s)):(js=t,t=s),t}function sc(){var t,e,n,u;return t=js,"time"===r.substr(js,4).toLowerCase()?(e=r.substr(js,4),js+=4):(e=s,0===Ws&&zs(Gu)),e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="TIME"):(js=t,t=s)):(js=t,t=s),t}function oc(){var t,e,n,u;return t=js,"timestamp"===r.substr(js,9).toLowerCase()?(e=r.substr(js,9),js+=9):(e=s,0===Ws&&zs(ju)),e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="TIMESTAMP"):(js=t,t=s)):(js=t,t=s),t}function ac(){var t,e,n,u;return t=js,"truncate"===r.substr(js,8).toLowerCase()?(e=r.substr(js,8),js+=8):(e=s,0===Ws&&zs(Yu)),e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="TRUNCATE"):(js=t,t=s)):(js=t,t=s),t}function ic(){var t,e,n,u;return t=js,"interval"===r.substr(js,8).toLowerCase()?(e=r.substr(js,8),js+=8):(e=s,0===Ws&&zs(Vu)),e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="INTERVAL"):(js=t,t=s)):(js=t,t=s),t}function cc(){var t,e,n,u;return t=js,"current_timestamp"===r.substr(js,17).toLowerCase()?(e=r.substr(js,17),js+=17):(e=s,0===Ws&&zs(qu)),e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="CURRENT_TIMESTAMP"):(js=t,t=s)):(js=t,t=s),t}function lc(){var t;return (t=function(){var t;return "@@"===r.substr(js,2)?(t="@@",js+=2):(t=s,0===Ws&&zs(ss)),t}())===s&&(t=function(){var t;return 64===r.charCodeAt(js)?(t="@",js++):(t=s,0===Ws&&zs(us)),t}())===s&&(t=function(){var t;return 36===r.charCodeAt(js)?(t="$",js++):(t=s,0===Ws&&zs(mt)),t}()),t}function fc(){var t;return "::"===r.substr(js,2)?(t="::",js+=2):(t=s,0===Ws&&zs(is)),t}function bc(){var t;return 61===r.charCodeAt(js)?(t="=",js++):(t=s,0===Ws&&zs(ut)),t}function vc(){var t,e,n,u;return t=js,"add"===r.substr(js,3).toLowerCase()?(e=r.substr(js,3),js+=3):(e=s,0===Ws&&zs(ls)),e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="ADD"):(js=t,t=s)):(js=t,t=s),t}function dc(){var t,e,n,u;return t=js,"column"===r.substr(js,6).toLowerCase()?(e=r.substr(js,6),js+=6):(e=s,0===Ws&&zs(fs)),e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="COLUMN"):(js=t,t=s)):(js=t,t=s),t}function Lc(){var t,e,n,u;return t=js,"index"===r.substr(js,5).toLowerCase()?(e=r.substr(js,5),js+=5):(e=s,0===Ws&&zs(bs)),e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="INDEX"):(js=t,t=s)):(js=t,t=s),t}function Cc(){var t,e,n,u;return t=js,"key"===r.substr(js,3).toLowerCase()?(e=r.substr(js,3),js+=3):(e=s,0===Ws&&zs(N)),e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="KEY"):(js=t,t=s)):(js=t,t=s),t}function pc(){var t,e,n,u;return t=js,"unique"===r.substr(js,6).toLowerCase()?(e=r.substr(js,6),js+=6):(e=s,0===Ws&&zs(I)),e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="UNIQUE"):(js=t,t=s)):(js=t,t=s),t}function wc(){var t,e,n,u;return t=js,"comment"===r.substr(js,7).toLowerCase()?(e=r.substr(js,7),js+=7):(e=s,0===Ws&&zs(Ls)),e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="COMMENT"):(js=t,t=s)):(js=t,t=s),t}function Ec(){var t,e,n,u;return t=js,"constraint"===r.substr(js,10).toLowerCase()?(e=r.substr(js,10),js+=10):(e=s,0===Ws&&zs(Cs)),e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="CONSTRAINT"):(js=t,t=s)):(js=t,t=s),t}function hc(){var t;return 46===r.charCodeAt(js)?(t=".",js++):(t=s,0===Ws&&zs(He)),t}function Ac(){var t;return 44===r.charCodeAt(js)?(t=",",js++):(t=s,0===Ws&&zs(Ss)),t}function yc(){var t;return 42===r.charCodeAt(js)?(t="*",js++):(t=s,0===Ws&&zs(At)),t}function Tc(){var t;return 40===r.charCodeAt(js)?(t="(",js++):(t=s,0===Ws&&zs(jr)),t}function mc(){var t;return 41===r.charCodeAt(js)?(t=")",js++):(t=s,0===Ws&&zs(Yr)),t}function Sc(){var t;return 91===r.charCodeAt(js)?(t="[",js++):(t=s,0===Ws&&zs(Is)),t}function Ic(){var t;return 93===r.charCodeAt(js)?(t="]",js++):(t=s,0===Ws&&zs(Ns)),t}function Nc(){var t;return 59===r.charCodeAt(js)?(t=";",js++):(t=s,0===Ws&&zs(Rs)),t}function Rc(){var t;return "||"===r.substr(js,2)?(t="||",js+=2):(t=s,0===Ws&&zs(Us)),t}function _c(){var t;return (t=Rc())===s&&(t=function(){var t;return "&&"===r.substr(js,2)?(t="&&",js+=2):(t=s,0===Ws&&zs(Ms)),t}()),t}function gc(){var r,t;for(r=[],(t=Dc())===s&&(t=xc());t!==s;)r.push(t),(t=Dc())===s&&(t=xc());return r}function Oc(){var r,t;if(r=[],(t=Dc())===s&&(t=xc()),t!==s)for(;t!==s;)r.push(t),(t=Dc())===s&&(t=xc());else r=s;return r}function xc(){var t;return (t=function(){var t,e,n,u,o,a;t=js,"/*"===r.substr(js,2)?(e="/*",js+=2):(e=s,0===Ws&&zs(Ds));if(e!==s){for(n=[],u=js,o=js,Ws++,"*/"===r.substr(js,2)?(a="*/",js+=2):(a=s,0===Ws&&zs(ks)),Ws--,a===s?o=void 0:(js=o,o=s),o!==s&&(a=Mc())!==s?u=o=[o,a]:(js=u,u=s);u!==s;)n.push(u),u=js,o=js,Ws++,"*/"===r.substr(js,2)?(a="*/",js+=2):(a=s,0===Ws&&zs(ks)),Ws--,a===s?o=void 0:(js=o,o=s),o!==s&&(a=Mc())!==s?u=o=[o,a]:(js=u,u=s);n!==s?("*/"===r.substr(js,2)?(u="*/",js+=2):(u=s,0===Ws&&zs(ks)),u!==s?t=e=[e,n,u]:(js=t,t=s)):(js=t,t=s);}else js=t,t=s;return t}())===s&&(t=function(){var t,e,n,u,o,a;t=js,"--"===r.substr(js,2)?(e="--",js+=2):(e=s,0===Ws&&zs($s));if(e!==s){for(n=[],u=js,o=js,Ws++,a=kc(),Ws--,a===s?o=void 0:(js=o,o=s),o!==s&&(a=Mc())!==s?u=o=[o,a]:(js=u,u=s);u!==s;)n.push(u),u=js,o=js,Ws++,a=kc(),Ws--,a===s?o=void 0:(js=o,o=s),o!==s&&(a=Mc())!==s?u=o=[o,a]:(js=u,u=s);n!==s?t=e=[e,n]:(js=t,t=s);}else js=t,t=s;return t}()),t}function Uc(){var r,t,e,n,u,o,a;return r=js,(t=wc())!==s&&gc()!==s?((e=bc())===s&&(e=null),e!==s&&gc()!==s&&(n=ja())!==s?(o=e,a=n,r=t={type:(u=t).toLowerCase(),keyword:u.toLowerCase(),symbol:o,value:a}):(js=r,r=s)):(js=r,r=s),r}function Mc(){var t;return r.length>js?(t=r.charAt(js),js++):(t=s,0===Ws&&zs(Fs)),t}function Dc(){var t;return Ps.test(r.charAt(js))?(t=r.charAt(js),js++):(t=s,0===Ws&&zs(Hs)),t}function kc(){var t,e;if((t=function(){var t,e;t=js,Ws++,r.length>js?(e=r.charAt(js),js++):(e=s,0===Ws&&zs(Fs));Ws--,e===s?t=void 0:(js=t,t=s);return t}())===s)if(t=[],Fe.test(r.charAt(js))?(e=r.charAt(js),js++):(e=s,0===Ws&&zs(Pe)),e!==s)for(;e!==s;)t.push(e),Fe.test(r.charAt(js))?(e=r.charAt(js),js++):(e=s,0===Ws&&zs(Pe));else t=s;return t}function $c(){var t,e;return t=js,sl=[],(void 0)!==s&&gc()!==s?((e=Fc())===s&&(e=function(){var t,e;t=js,function(){var t;return "return"===r.substr(js,6).toLowerCase()?(t=r.substr(js,6),js+=6):(t=s,0===Ws&&zs(os)),t}()!==s&&gc()!==s&&(e=Pc())!==s?(t={type:"return",expr:e}):(js=t,t=s);return t}()),e!==s?(t={type:"proc",stmt:e,vars:sl}):(js=t,t=s)):(js=t,t=s),t}function Fc(){var t,e,n,u;return t=js,(e=Wc())===s&&(e=Vc()),e!==s&&gc()!==s?((n=function(){var t;return ":="===r.substr(js,2)?(t=":=",js+=2):(t=s,0===Ws&&zs(as)),t}())===s&&(n=bc()),n!==s&&gc()!==s&&(u=Pc())!==s?(t=e={type:"assign",left:e,symbol:n,right:u}):(js=t,t=s)):(js=t,t=s),t}function Pc(){var r;return (r=yo())===s&&(r=function(){var r,t,e,n,u;r=js,(t=Wc())!==s&&gc()!==s&&(e=Po())!==s&&gc()!==s&&(n=Wc())!==s&&gc()!==s&&(u=Go())!==s?(r=t={type:"join",ltable:t,rtable:n,op:e,on:u}):(js=r,r=s);return r}())===s&&(r=Hc())===s&&(r=function(){var r,t;r=js,Sc()!==s&&gc()!==s&&(t=Xc())!==s&&gc()!==s&&Ic()!==s?(r={type:"array",value:t}):(js=r,r=s);return r}()),r}function Hc(){var r,t,e,n,u,o,a,i;if(r=js,(t=Gc())!==s){for(e=[],n=js,(u=gc())!==s&&(o=Ea())!==s&&(a=gc())!==s&&(i=Gc())!==s?n=u=[u,o,a,i]:(js=n,n=s);n!==s;)e.push(n),n=js,(u=gc())!==s&&(o=Ea())!==s&&(a=gc())!==s&&(i=Gc())!==s?n=u=[u,o,a,i]:(js=n,n=s);e!==s?(r=t=st(t,e)):(js=r,r=s);}else js=r,r=s;return r}function Gc(){var r,t,e,n,u,o,a,i;if(r=js,(t=jc())!==s){for(e=[],n=js,(u=gc())!==s&&(o=Aa())!==s&&(a=gc())!==s&&(i=jc())!==s?n=u=[u,o,a,i]:(js=n,n=s);n!==s;)e.push(n),n=js,(u=gc())!==s&&(o=Aa())!==s&&(a=gc())!==s&&(i=jc())!==s?n=u=[u,o,a,i]:(js=n,n=s);e!==s?(r=t=st(t,e)):(js=r,r=s);}else js=r,r=s;return r}function jc(){var r,t,e;return (r=Pa())===s&&(r=Wc())===s&&(r=Bc())===s&&(r=xa())===s&&(r=js,Tc()!==s&&gc()!==s&&(t=Hc())!==s&&gc()!==s&&mc()!==s?((e=t).parentheses=!0,r=e):(js=r,r=s)),r}function Yc(){var r,t,e,n,u,o,a;return r=js,(t=Ra())!==s?(e=js,(n=gc())!==s&&(u=hc())!==s&&(o=gc())!==s&&(a=Ra())!==s?e=n=[n,u,o,a]:(js=e,e=s),e===s&&(e=null),e!==s?(r=t=function(r,t){let e=r;return null!==t&&(e=`${r}.${t[3]}`),e}(t,e)):(js=r,r=s)):(js=r,r=s),r}function Bc(){var r,t,e;return r=js,(t=Yc())!==s&&gc()!==s&&Tc()!==s&&gc()!==s?((e=Xc())===s&&(e=null),e!==s&&gc()!==s&&mc()!==s?(r=t={type:"function",name:t,args:{type:"expr_list",value:e}}):(js=r,r=s)):(js=r,r=s),r===s&&(r=js,(t=Yc())!==s&&(t=function(r){return {type:"function",name:r,args:null}}(t)),r=t),r}function Xc(){var r,t,e,n,u,o,a,i;if(r=js,(t=jc())!==s){for(e=[],n=js,(u=gc())!==s&&(o=Ac())!==s&&(a=gc())!==s&&(i=jc())!==s?n=u=[u,o,a,i]:(js=n,n=s);n!==s;)e.push(n),n=js,(u=gc())!==s&&(o=Ac())!==s&&(a=gc())!==s&&(i=jc())!==s?n=u=[u,o,a,i]:(js=n,n=s);e!==s?(r=t=rl(t,e)):(js=r,r=s);}else js=r,r=s;return r}function Wc(){var r,t,e,n,u;return r=js,(t=lc())!==s&&(e=Vc())!==s?(n=t,u=e,r=t={type:"var",...u,prefix:n}):(js=r,r=s),r}function Vc(){var t,e,n,u,o;return t=js,(e=Ra())!==s&&(n=function(){var e,n,u,o;e=[],n=js,46===r.charCodeAt(js)?(u=".",js++):(u=s,0===Ws&&zs(He));u!==s&&(o=Ra())!==s?n=u=[u,o]:(js=n,n=s);for(;n!==s;)e.push(n),n=js,46===r.charCodeAt(js)?(u=".",js++):(u=s,0===Ws&&zs(He)),u!==s&&(o=Ra())!==s?n=u=[u,o]:(js=n,n=s);e!==s&&(e=function(r){const t=[];for(let e=0;e<r.length;e++)t.push(r[e][1]);return t}(e));return e}())!==s?(u=e,o=n,sl.push(u),t=e={type:"var",name:u,members:o,prefix:null}):(js=t,t=s),t}function Kc(){var t;return (t=function(){var t,e,n,u;t=js,(e=Hi())===s&&(e=Gi());if(e!==s)if(gc()!==s)if(Tc()!==s)if(gc()!==s){if(n=[],Ge.test(r.charAt(js))?(u=r.charAt(js),js++):(u=s,0===Ws&&zs(je)),u!==s)for(;u!==s;)n.push(u),Ge.test(r.charAt(js))?(u=r.charAt(js),js++):(u=s,0===Ws&&zs(je));else n=s;n!==s&&(u=gc())!==s&&mc()!==s?(e={dataType:e,length:parseInt(n.join(""),10)},t=e):(js=t,t=s);}else js=t,t=s;else js=t,t=s;else js=t,t=s;else js=t,t=s;t===s&&(t=js,(e=Hi())!==s&&(e=function(r){return {dataType:r}}(e)),(t=e)===s&&(t=js,(e=Gi())!==s&&(e=Gs(e)),t=e));return t}())===s&&(t=function(){var t,e,n,u,o,a,i,c,l,f,b,v;t=js,(e=ji())===s&&(e=Yi())===s&&(e=Xi())===s&&(e=Wi())===s&&(e=Vi())===s&&(e=Ki())===s&&(e=Qi())===s&&(e=rc())===s&&(e=tc());if(e!==s)if((n=gc())!==s)if((u=Tc())!==s)if((o=gc())!==s){if(a=[],Ge.test(r.charAt(js))?(i=r.charAt(js),js++):(i=s,0===Ws&&zs(je)),i!==s)for(;i!==s;)a.push(i),Ge.test(r.charAt(js))?(i=r.charAt(js),js++):(i=s,0===Ws&&zs(je));else a=s;if(a!==s)if((i=gc())!==s){if(c=js,(l=Ac())!==s)if((f=gc())!==s){if(b=[],Ge.test(r.charAt(js))?(v=r.charAt(js),js++):(v=s,0===Ws&&zs(je)),v!==s)for(;v!==s;)b.push(v),Ge.test(r.charAt(js))?(v=r.charAt(js),js++):(v=s,0===Ws&&zs(je));else b=s;b!==s?c=l=[l,f,b]:(js=c,c=s);}else js=c,c=s;else js=c,c=s;c===s&&(c=null),c!==s&&(l=gc())!==s&&(f=mc())!==s&&(b=gc())!==s?((v=qc())===s&&(v=null),v!==s?(d=c,L=v,e={dataType:e,length:parseInt(a.join(""),10),scale:d&&parseInt(d[2].join(""),10),parentheses:!0,suffix:L},t=e):(js=t,t=s)):(js=t,t=s);}else js=t,t=s;else js=t,t=s;}else js=t,t=s;else js=t,t=s;else js=t,t=s;else js=t,t=s;var d,L;if(t===s){if(t=js,(e=ji())===s&&(e=Yi())===s&&(e=Xi())===s&&(e=Wi())===s&&(e=Vi())===s&&(e=Ki())===s&&(e=Qi())===s&&(e=rc())===s&&(e=tc()),e!==s){if(n=[],Ge.test(r.charAt(js))?(u=r.charAt(js),js++):(u=s,0===Ws&&zs(je)),u!==s)for(;u!==s;)n.push(u),Ge.test(r.charAt(js))?(u=r.charAt(js),js++):(u=s,0===Ws&&zs(je));else n=s;n!==s&&(u=gc())!==s?((o=qc())===s&&(o=null),o!==s?(e=function(r,t,e){return {dataType:r,length:parseInt(t.join(""),10),suffix:e}}(e,n,o),t=e):(js=t,t=s)):(js=t,t=s);}else js=t,t=s;t===s&&(t=js,(e=ji())===s&&(e=Yi())===s&&(e=Xi())===s&&(e=Wi())===s&&(e=Vi())===s&&(e=Ki())===s&&(e=Qi())===s&&(e=rc())===s&&(e=tc()),e!==s&&(n=gc())!==s?((u=qc())===s&&(u=null),u!==s&&(o=gc())!==s?(e=function(r,t){return {dataType:r,suffix:t}}(e,u),t=e):(js=t,t=s)):(js=t,t=s));}return t}())===s&&(t=function(){var t,e,n,u;t=js,(e=ec())===s&&(e=nc())===s&&(e=sc())===s&&(e=oc());if(e!==s)if(gc()!==s)if(Tc()!==s)if(gc()!==s){if(n=[],Ge.test(r.charAt(js))?(u=r.charAt(js),js++):(u=s,0===Ws&&zs(je)),u!==s)for(;u!==s;)n.push(u),Ge.test(r.charAt(js))?(u=r.charAt(js),js++):(u=s,0===Ws&&zs(je));else n=s;n!==s&&(u=gc())!==s&&mc()!==s?(e={dataType:e,length:parseInt(n.join(""),10)},t=e):(js=t,t=s);}else js=t,t=s;else js=t,t=s;else js=t,t=s;else js=t,t=s;t===s&&(t=js,(e=ec())===s&&(e=nc())===s&&(e=sc())===s&&(e=oc()),e!==s&&(e=Gs(e)),t=e);return t}())===s&&(t=function(){var e;(e=function(){var t,e,n,u;return t=js,"json"===r.substr(js,4).toLowerCase()?(e=r.substr(js,4),js+=4):(e=s,0===Ws&&zs(Su)),e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="JSON"):(js=t,t=s)):(js=t,t=s),t}())===s&&(e=function(){var t,e,n,u;return t=js,"jsonb"===r.substr(js,5).toLowerCase()?(e=r.substr(js,5),js+=5):(e=s,0===Ws&&zs(Iu)),e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="JSONB"):(js=t,t=s)):(js=t,t=s),t}());e!==s&&(e=Gs(e));return e}())===s&&(t=function(){var e;(e=function(){var t,e,n,u;return t=js,"geometry"===r.substr(js,8).toLowerCase()?(e=r.substr(js,8),js+=8):(e=s,0===Ws&&zs(Nu)),e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="GEOMETRY"):(js=t,t=s)):(js=t,t=s),t}())!==s&&(e={dataType:e});return e}())===s&&(t=function(){var r,t;r=js,(t=qi())===s&&(t=Zi())===s&&(t=zi())===s&&(t=Ji());t!==s&&Sc()!==s&&gc()!==s&&Ic()!==s?(r=t={dataType:t+"[]"}):(js=r,r=s);r===s&&(r=js,(t=qi())===s&&(t=Zi())===s&&(t=zi())===s&&(t=Ji()),t!==s&&(t=function(r){return {dataType:r}}(t)),r=t);return r}())===s&&(t=function(){var e;(e=function(){var t,e,n,u;return t=js,"uuid"===r.substr(js,4).toLowerCase()?(e=r.substr(js,4),js+=4):(e=s,0===Ws&&zs(Xu)),e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="UUID"):(js=t,t=s)):(js=t,t=s),t}())!==s&&(e={dataType:e});return e}())===s&&(t=function(){var e;(e=function(){var t,e,n,u;return t=js,"bool"===r.substr(js,4).toLowerCase()?(e=r.substr(js,4),js+=4):(e=s,0===Ws&&zs(du)),e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="BOOL"):(js=t,t=s)):(js=t,t=s),t}())===s&&(e=function(){var t,e,n,u;return t=js,"boolean"===r.substr(js,7).toLowerCase()?(e=r.substr(js,7),js+=7):(e=s,0===Ws&&zs(Lu)),e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="BOOLEAN"):(js=t,t=s)):(js=t,t=s),t}());e!==s&&(e={dataType:e});return e}())===s&&(t=function(){var t,e,n;t=js,(e=function(){var t,e,n,u;return t=js,"enum"===r.substr(js,4).toLowerCase()?(e=r.substr(js,4),js+=4):(e=s,0===Ws&&zs(Du)),e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="ENUM"):(js=t,t=s)):(js=t,t=s),t}())!==s&&gc()!==s&&(n=sa())!==s?(u=e,(o=n).parentheses=!0,t=e={dataType:u,expr:o}):(js=t,t=s);var u,o;return t}()),t}function qc(){var t,e,n;return t=js,(e=Bi())===s&&(e=null),e!==s&&gc()!==s?((n=function(){var t,e,n,u;return t=js,"zerofill"===r.substr(js,8).toLowerCase()?(e=r.substr(js,8),js+=8):(e=s,0===Ws&&zs(Tu)),e!==s?(n=js,Ws++,u=_a(),Ws--,u===s?n=void 0:(js=n,n=s),n!==s?(t=e="ZEROFILL"):(js=t,t=s)):(js=t,t=s),t}())===s&&(n=null),n!==s?(t=e=function(r,t){const e=[];return r&&e.push(r),t&&e.push(t),e}(e,n)):(js=t,t=s)):(js=t,t=s),t}const Zc={ALTER:!0,ALL:!0,ADD:!0,AND:!0,AS:!0,ASC:!0,BETWEEN:!0,BY:!0,CALL:!0,CASE:!0,CREATE:!0,CONTAINS:!0,CURRENT_DATE:!0,CURRENT_TIME:!0,CURRENT_TIMESTAMP:!0,CURRENT_USER:!0,DELETE:!0,DESC:!0,DISTINCT:!0,DROP:!0,ELSE:!0,END:!0,EXISTS:!0,EXPLAIN:!0,FALSE:!0,FROM:!0,FULL:!0,GROUP:!0,HAVING:!0,IN:!0,INNER:!0,INSERT:!0,INTO:!0,INTERVAL:!0,IS:!0,JOIN:!0,JSON:!0,LEFT:!0,LIKE:!0,LIMIT:!0,NOT:!0,NULL:!0,NULLS:!0,ON:!0,OR:!0,ORDER:!0,OUTER:!0,RECURSIVE:!0,RENAME:!0,RIGHT:!0,SELECT:!0,SESSION_USER:!0,SET:!0,SHOW:!0,SYSTEM_USER:!0,TABLE:!0,THEN:!0,TRUE:!0,TRUNCATE:!0,TYPE:!0,UNION:!0,UPDATE:!0,USING:!0,VALUES:!0,WITH:!0,WHEN:!0,WHERE:!0,GLOBAL:!0,SESSION:!0,LOCAL:!0,PERSIST:!0,PERSIST_ONLY:!0};function zc(r,t){return {type:"unary_expr",operator:r,expr:t}}function Jc(r,t,e){return {type:"binary_expr",operator:r,left:t,right:e}}function Qc(r){const t=n(Number.MAX_SAFE_INTEGER);return !(n(r)<t)}function rl(r,t,e=3){const n=[r];for(let r=0;r<t.length;r++)n.push(t[r][e]);return n}function tl(r,t){let e=r;for(let r=0;r<t.length;r++)e=Jc(t[r][1],e,t[r][3]);return e}function el(r){const t=il[r];return t||(r||null)}function nl(r){const t=new Set;for(let e of r.keys()){const r=e.split("::");if(!r){t.add(e);break}r&&r[1]&&(r[1]=el(r[1])),t.add(r.join("::"));}return Array.from(t)}function ul(r){return "string"==typeof r?{type:"same",value:r}:r}let sl=[];const ol=new Set,al=new Set,il={};if((e=a())!==s&&js===r.length)return e;throw e!==s&&js<r.length&&zs({type:"end"}),Js(Xs,Bs<r.length?r.charAt(Bs):null,Bs<r.length?Zs(Bs,Bs+1):Zs(Bs,Bs))}};},function(r,t,e){var n=e(0);function u(r,t,e,n){this.message=r,this.expected=t,this.found=e,this.location=n,this.name="SyntaxError","function"==typeof Error.captureStackTrace&&Error.captureStackTrace(this,u);}!function(r,t){function e(){this.constructor=r;}e.prototype=t.prototype,r.prototype=new e;}(u,Error),u.buildMessage=function(r,t){var e={literal:function(r){return '"'+u(r.text)+'"'},class:function(r){var t,e="";for(t=0;t<r.parts.length;t++)e+=r.parts[t]instanceof Array?s(r.parts[t][0])+"-"+s(r.parts[t][1]):s(r.parts[t]);return "["+(r.inverted?"^":"")+e+"]"},any:function(r){return "any character"},end:function(r){return "end of input"},other:function(r){return r.description}};function n(r){return r.charCodeAt(0).toString(16).toUpperCase()}function u(r){return r.replace(/\\/g,"\\\\").replace(/"/g,'\\"').replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(r){return "\\x0"+n(r)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(r){return "\\x"+n(r)}))}function s(r){return r.replace(/\\/g,"\\\\").replace(/\]/g,"\\]").replace(/\^/g,"\\^").replace(/-/g,"\\-").replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(r){return "\\x0"+n(r)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(r){return "\\x"+n(r)}))}return "Expected "+function(r){var t,n,u,s=new Array(r.length);for(t=0;t<r.length;t++)s[t]=(u=r[t],e[u.type](u));if(s.sort(),s.length>0){for(t=1,n=1;t<s.length;t++)s[t-1]!==s[t]&&(s[n]=s[t],n++);s.length=n;}switch(s.length){case 1:return s[0];case 2:return s[0]+" or "+s[1];default:return s.slice(0,-1).join(", ")+", or "+s[s.length-1]}}(r)+" but "+function(r){return r?'"'+u(r)+'"':"end of input"}(t)+" found."},r.exports={SyntaxError:u,parse:function(r,t){t=void 0!==t?t:{};var e,s={},o={start:Hu},a=Hu,i=function(r,t){return ii(r,t,1)},c=function(r,t){return ii(r,t)},l=Mu("AUTO_INCREMENT",!0),f=Mu("UNIQUE",!0),b=Mu("PRIMARY",!0),v=Mu("KEY",!0),d=Mu("COLUMN_FORMAT",!0),L=Mu("FIXED",!0),C=Mu("DYNAMIC",!0),p=Mu("DEFAULT",!0),w=Mu("STORAGE",!0),E=Mu("DISK",!0),h=Mu("MEMORY",!0),A=Mu("ALGORITHM",!0),y=Mu("INSTANT",!0),T=Mu("INPLACE",!0),m=Mu("COPY",!0),S=Mu("LOCK",!0),I=Mu("NONE",!0),N=Mu("SHARED",!0),R=Mu("EXCLUSIVE",!0),_=Mu("CHECK",!0),g=Mu("NOT",!0),O=Mu("FOR",!0),x=Mu("REPLICATION",!0),U=Mu("FOREIGN KEY",!0),M=Mu("MATCH FULL",!0),D=Mu("MATCH PARTIAL",!0),k=Mu("MATCH SIMPLE",!0),$=Mu("ON",!0),F=Mu("DELETE",!0),P=Mu("UPDATE",!0),H=Mu("RESTRICT",!0),G=Mu("CASCADE",!0),j=Mu("SET NULL",!0),Y=Mu("NO ACTION",!0),B=Mu("SET DEFAULT",!0),X=Mu("CHARACTER",!0),W=Mu("SET",!0),V=Mu("CHARSET",!0),K=Mu("COLLATE",!0),q=Mu("AVG_ROW_LENGTH",!0),Z=Mu("KEY_BLOCK_SIZE",!0),z=Mu("MAX_ROWS",!0),J=Mu("MIN_ROWS",!0),Q=Mu("STATS_SAMPLE_PAGES",!0),rr=Mu("CONNECTION",!0),tr=Mu("COMPRESSION",!0),er=Mu("'",!1),nr=Mu("ZLIB",!0),ur=Mu("LZ4",!0),sr=Mu("ENGINE",!0),or=Mu("READ",!0),ar=Mu("LOCAL",!0),ir=Mu("LOW_PRIORITY",!0),cr=Mu("WRITE",!0),lr=function(r,t){return ii(r,t)},fr=Mu("BINARY",!0),br=Mu("MASTER",!0),vr=Mu("LOGS",!0),dr=Mu("BINLOG",!0),Lr=Mu("EVENTS",!0),Cr=Mu("COLLATION",!0),pr=Mu("GRANTS",!0),wr=Mu("(",!1),Er=Mu(")",!1),hr=Mu("BTREE",!0),Ar=Mu("HASH",!0),yr=Mu("WITH",!0),Tr=Mu("PARSER",!0),mr=Mu("VISIBLE",!0),Sr=Mu("INVISIBLE",!0),Ir=function(r,t){return t.unshift(r),t.forEach(r=>{const{table:t,as:e}=r;Li[t]=t,e&&(Li[e]=t),function(r){const t=fi(r);r.clear(),t.forEach(t=>r.add(t));}(di);}),t},Nr=Mu("=",!1),Rr=Mu("DUPLICATE",!0),_r=function(r,t){return ci(r,t)},gr=Mu("!",!1),Or=function(r){return r[0]+" "+r[2]},xr=Mu(">=",!1),Ur=Mu(">",!1),Mr=Mu("<=",!1),Dr=Mu("<>",!1),kr=Mu("<",!1),$r=Mu("!=",!1),Fr=Mu("+",!1),Pr=Mu("-",!1),Hr=Mu("*",!1),Gr=Mu("/",!1),jr=Mu("%",!1),Yr=Mu("?",!1),Br=function(r){return !0===ui[r.toUpperCase()]},Xr=Mu('"',!1),Wr=/^[^"]/,Vr=Du(['"'],!0,!1),Kr=function(r){return r.join("")},qr=/^[^']/,Zr=Du(["'"],!0,!1),zr=Mu("`",!1),Jr=/^[^`]/,Qr=Du(["`"],!0,!1),rt=function(r,t){return r+t.join("")},tt=/^[A-Za-z_]/,et=Du([["A","Z"],["a","z"],"_"],!1,!1),nt=/^[A-Za-z0-9_]/,ut=Du([["A","Z"],["a","z"],["0","9"],"_"],!1,!1),st=/^[A-Za-z0-9_:]/,ot=Du([["A","Z"],["a","z"],["0","9"],"_",":"],!1,!1),at=Mu(":",!1),it=function(r,t,e){return {type:"function",name:r,args:t||{type:"expr_list",value:[]},over:e}},ct=Mu("X",!0),lt=function(r,t){return {type:r.toLowerCase(),value:t[1].join("")}},ft=Mu("ON UPDATE CURRENT_TIMESTAMP",!0),bt=/^[^"\\\0-\x1F\x7F]/,vt=Du(['"',"\\",["\0",""],""],!0,!1),dt=/^[^'\\]/,Lt=Du(["'","\\"],!0,!1),Ct=Mu("\\'",!1),pt=Mu('\\"',!1),wt=Mu("\\\\",!1),Et=Mu("\\/",!1),ht=Mu("\\b",!1),At=Mu("\\f",!1),yt=Mu("\\n",!1),Tt=Mu("\\r",!1),mt=Mu("\\t",!1),St=Mu("\\u",!1),It=Mu("\\",!1),Nt=/^[\n\r]/,Rt=Du(["\n","\r"],!1,!1),_t=Mu(".",!1),gt=/^[0-9]/,Ot=Du([["0","9"]],!1,!1),xt=/^[0-9a-fA-F]/,Ut=Du([["0","9"],["a","f"],["A","F"]],!1,!1),Mt=/^[eE]/,Dt=Du(["e","E"],!1,!1),kt=/^[+\-]/,$t=Du(["+","-"],!1,!1),Ft=Mu("ANALYZE",!0),Pt=Mu("ATTACH",!0),Ht=Mu("NULL",!0),Gt=Mu("NOT NULL",!0),jt=Mu("TRUE",!0),Yt=Mu("TO",!0),Bt=Mu("FALSE",!0),Xt=Mu("SHOW",!0),Wt=Mu("DROP",!0),Vt=Mu("USE",!0),Kt=Mu("ALTER",!0),qt=Mu("SELECT",!0),Zt=Mu("CREATE",!0),zt=Mu("TEMPORARY",!0),Jt=Mu("IF NOT EXISTS",!0),Qt=Mu("INSERT",!0),re=Mu("RECURSIVE",!1),te=Mu("REPLACE",!0),ee=Mu("RENAME",!0),ne=Mu("IGNORE",!0),ue=(Mu("PARTITION",!0)),se=Mu("INTO",!0),oe=Mu("FROM",!0),ae=Mu("UNLOCK",!0),ie=Mu("AS",!0),ce=Mu("TABLE",!0),le=Mu("TABLES",!0),fe=Mu("DATABASE",!0),be=Mu("SCHEME",!0),ve=Mu("LEFT",!0),de=Mu("INNER",!0),Le=Mu("JOIN",!0),Ce=Mu("OUTER",!0),pe=Mu("OVER",!0),we=Mu("UNION",!0),Ee=Mu("VALUES",!0),he=Mu("USING",!0),Ae=Mu("WHERE",!0),ye=Mu("GROUP",!0),Te=Mu("BY",!0),me=Mu("ORDER",!0),Se=Mu("HAVING",!0),Ie=Mu("LIMIT",!0),Ne=Mu("OFFSET",!0),Re=Mu("ASC",!0),_e=Mu("DESC",!0),ge=Mu("DESCRIBE",!0),Oe=Mu("ALL",!0),xe=Mu("DISTINCT",!0),Ue=Mu("BETWEEN",!0),Me=Mu("IN",!0),De=Mu("IS",!0),ke=Mu("LIKE",!0),$e=Mu("RLIKE",!0),Fe=Mu("REGEXP",!0),Pe=Mu("EXISTS",!0),He=Mu("AND",!0),Ge=Mu("OR",!0),je=Mu("COUNT",!0),Ye=Mu("MAX",!0),Be=Mu("MIN",!0),Xe=Mu("SUM",!0),We=Mu("AVG",!0),Ve=Mu("CALL",!0),Ke=Mu("CASE",!0),qe=Mu("WHEN",!0),Ze=Mu("THEN",!0),ze=Mu("ELSE",!0),Je=Mu("END",!0),Qe=Mu("CAST",!0),rn=Mu("BIT",!0),tn=Mu("CHAR",!0),en=Mu("VARCHAR",!0),nn=Mu("NUMERIC",!0),un=Mu("DECIMAL",!0),sn=Mu("SIGNED",!0),on=Mu("UNSIGNED",!0),an=Mu("INT",!0),cn=Mu("ZEROFILL",!0),ln=Mu("INTEGER",!0),fn=Mu("JSON",!0),bn=Mu("SMALLINT",!0),vn=Mu("TINYINT",!0),dn=Mu("TINYTEXT",!0),Ln=Mu("TEXT",!0),Cn=Mu("MEDIUMTEXT",!0),pn=Mu("LONGTEXT",!0),wn=Mu("BIGINT",!0),En=Mu("ENUM",!0),hn=Mu("FLOAT",!0),An=Mu("DOUBLE",!0),yn=Mu("DATE",!0),Tn=Mu("DATETIME",!0),mn=Mu("TIME",!0),Sn=Mu("TIMESTAMP",!0),In=Mu("TRUNCATE",!0),Nn=Mu("USER",!0),Rn=Mu("CURRENT_DATE",!0),_n=(Mu("INTERVAL",!0)),gn=Mu("YEAR",!0),On=Mu("MONTH",!0),xn=Mu("DAY",!0),Un=Mu("HOUR",!0),Mn=Mu("MINUTE",!0),Dn=Mu("SECOND",!0),kn=Mu("CURRENT_TIME",!0),$n=Mu("CURRENT_TIMESTAMP",!0),Fn=Mu("CURRENT_USER",!0),Pn=Mu("SESSION_USER",!0),Hn=Mu("SYSTEM_USER",!0),Gn=Mu("GLOBAL",!0),jn=Mu("SESSION",!0),Yn=Mu("PERSIST",!0),Bn=Mu("PERSIST_ONLY",!0),Xn=Mu("@",!1),Wn=Mu("@@",!1),Vn=Mu("$",!1),Kn=Mu("return",!0),qn=Mu(":=",!1),Zn=Mu("DUAL",!0),zn=Mu("ADD",!0),Jn=Mu("COLUMN",!0),Qn=Mu("INDEX",!0),ru=Mu("FULLTEXT",!0),tu=Mu("SPATIAL",!0),eu=Mu("COMMENT",!0),nu=Mu("CONSTRAINT",!0),uu=Mu("REFERENCES",!0),su=Mu("SQL_CALC_FOUND_ROWS",!0),ou=Mu("SQL_CACHE",!0),au=Mu("SQL_NO_CACHE",!0),iu=Mu("SQL_SMALL_RESULT",!0),cu=Mu("SQL_BIG_RESULT",!0),lu=Mu("SQL_BUFFER_RESULT",!0),fu=Mu(",",!1),bu=Mu("[",!1),vu=Mu("]",!1),du=Mu(";",!1),Lu=Mu("->",!1),Cu=Mu("->>",!1),pu=Mu("||",!1),wu=Mu("&&",!1),Eu=Mu("/*",!1),hu=Mu("*/",!1),Au=Mu("--",!1),yu=Mu("#",!1),Tu={type:"any"},mu=/^[ \t\n\r]/,Su=Du([" ","\t","\n","\r"],!1,!1),Iu=function(r){return {dataType:r}},Nu=/^[0-6]/,Ru=Du([["0","6"]],!1,!1),_u=0,gu=[{line:1,column:1}],Ou=0,xu=[],Uu=0;if("startRule"in t){if(!(t.startRule in o))throw new Error("Can't start parsing from rule \""+t.startRule+'".');a=o[t.startRule];}function Mu(r,t){return {type:"literal",text:r,ignoreCase:t}}function Du(r,t,e){return {type:"class",parts:r,inverted:t,ignoreCase:e}}function ku(t){var e,n=gu[t];if(n)return n;for(e=t-1;!gu[e];)e--;for(n={line:(n=gu[e]).line,column:n.column};e<t;)10===r.charCodeAt(e)?(n.line++,n.column=1):n.column++,e++;return gu[t]=n,n}function $u(r,t){var e=ku(r),n=ku(t);return {start:{offset:r,line:e.line,column:e.column},end:{offset:t,line:n.line,column:n.column}}}function Fu(r){_u<Ou||(_u>Ou&&(Ou=_u,xu=[]),xu.push(r));}function Pu(r,t,e){return new u(u.buildMessage(r,t),r,t,e)}function Hu(){var r,t;return r=_u,Fa()!==s?((t=function(){var r,t,e,n,u,o,a,i;if(r=_u,(t=ju())!==s){if(e=[],n=_u,(u=Fa())!==s&&(o=ka())!==s&&(a=Fa())!==s&&(i=ju())!==s?n=u=[u,o,a,i]:(_u=n,n=s),n!==s)for(;n!==s;)e.push(n),n=_u,(u=Fa())!==s&&(o=ka())!==s&&(a=Fa())!==s&&(i=ju())!==s?n=u=[u,o,a,i]:(_u=n,n=s);else e=s;e!==s?(t=function(r,t){const e=[r&&r.ast||r];for(let r=0;r<t.length;r++)t[r][3]&&0!==t[r][3].length&&e.push(t[r][3]&&t[r][3].ast||t[r][3]);return {tableList:Array.from(vi),columnList:fi(di),ast:e}}(t,e),r=t):(_u=r,r=s);}else _u=r,r=s;return r}())===s&&(t=Gu())===s&&(t=ju()),t!==s?(r=t):(_u=r,r=s)):(_u=r,r=s),r}function Gu(){var t;return (t=function(){var t,e,n;t=_u,(e=function(){var t,e,n,u;t=_u,"analyze"===r.substr(_u,7).toLowerCase()?(e=r.substr(_u,7),_u+=7):(e=s,0===Uu&&Fu(Ft));e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="ANALYZE"):(_u=t,t=s)):(_u=t,t=s);return t}())!==s&&Fa()!==s&&(n=hs())!==s&&Fa()!==s?(u=e,o=n,vi.add(`${u}::${o.db}::${o.table}`),e={tableList:Array.from(vi),columnList:fi(di),ast:{type:u.toLowerCase(),table:o}},t=e):(_u=t,t=s);var u,o;return t}())===s&&(t=function(){var t,e,n,u,o,a;t=_u,(e=function(){var t,e,n,u;t=_u,"attach"===r.substr(_u,6).toLowerCase()?(e=r.substr(_u,6),_u+=6):(e=s,0===Uu&&Fu(Pt));e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="ATTACH"):(_u=t,t=s)):(_u=t,t=s);return t}())!==s&&Fa()!==s&&(n=Ho())!==s&&Fa()!==s&&(u=Fs())!==s&&Fa()!==s&&(o=$o())!==s&&Fa()!==s&&(a=ro())!==s&&Fa()!==s?(i=e,c=n,l=u,f=o,b=a,e={tableList:Array.from(vi),columnList:fi(di),ast:{type:i.toLowerCase(),database:c,expr:l,as:f&&f[0].toLowerCase(),schema:b}},t=e):(_u=t,t=s);var i,c,l,f,b;return t}())===s&&(t=function(){var r,t,e,n,u,o;r=_u,(t=No())!==s&&Fa()!==s&&(e=Fo())!==s&&Fa()!==s&&(n=Cs())!==s?(a=t,c=e,(l=n)&&l.forEach(r=>vi.add(`${a}::${r.db}::${r.table}`)),t={tableList:Array.from(vi),columnList:fi(di),ast:{type:a.toLowerCase(),keyword:c.toLowerCase(),name:l}},r=t):(_u=r,r=s);var a,c,l;r===s&&(r=_u,(t=No())!==s&&Fa()!==s&&(e=Ra())!==s&&Fa()!==s&&(n=Qs())!==s&&Fa()!==s&&Go()!==s&&Fa()!==s&&(u=hs())!==s&&Fa()!==s?((o=function(){var r,t,e,n,u,o;r=_u,(t=Ku())===s&&(t=qu());if(t!==s){for(e=[],n=_u,(u=Fa())!==s?((o=Ku())===s&&(o=qu()),o!==s?n=u=[u,o]:(_u=n,n=s)):(_u=n,n=s);n!==s;)e.push(n),n=_u,(u=Fa())!==s?((o=Ku())===s&&(o=qu()),o!==s?n=u=[u,o]:(_u=n,n=s)):(_u=n,n=s);e!==s?(t=i(t,e),r=t):(_u=r,r=s);}else _u=r,r=s;return r}())===s&&(o=null),o!==s&&Fa()!==s?(t=function(r,t,e,n,u){return {tableList:Array.from(vi),columnList:fi(di),ast:{type:r.toLowerCase(),keyword:t.toLowerCase(),name:e,table:n,options:u}}}(t,e,n,u,o),r=t):(_u=r,r=s)):(_u=r,r=s));return r}())===s&&(t=function(){var t;(t=function(){var t,e,n,u,o,a,i,l,f,b;t=_u,(e=_o())!==s&&Fa()!==s?((n=go())===s&&(n=null),n!==s&&Fa()!==s&&Fo()!==s&&Fa()!==s?((u=Oo())===s&&(u=null),u!==s&&Fa()!==s&&(o=Cs())!==s&&Fa()!==s&&(a=function(){var r,t,e,n,u,o,a,i,l;if(r=_u,(t=Ma())!==s)if(Fa()!==s)if((e=Bu())!==s){for(n=[],u=_u,(o=Fa())!==s&&(a=xa())!==s&&(i=Fa())!==s&&(l=Bu())!==s?u=o=[o,a,i,l]:(_u=u,u=s);u!==s;)n.push(u),u=_u,(o=Fa())!==s&&(a=xa())!==s&&(i=Fa())!==s&&(l=Bu())!==s?u=o=[o,a,i,l]:(_u=u,u=s);n!==s&&(u=Fa())!==s&&(o=Da())!==s?(t=c(e,n),r=t):(_u=r,r=s);}else _u=r,r=s;else _u=r,r=s;else _u=r,r=s;return r}())!==s&&Fa()!==s?((i=function(){var r,t,e,n,u,o,a,i;if(r=_u,(t=rs())!==s){for(e=[],n=_u,(u=Fa())!==s?((o=xa())===s&&(o=null),o!==s&&(a=Fa())!==s&&(i=rs())!==s?n=u=[u,o,a,i]:(_u=n,n=s)):(_u=n,n=s);n!==s;)e.push(n),n=_u,(u=Fa())!==s?((o=xa())===s&&(o=null),o!==s&&(a=Fa())!==s&&(i=rs())!==s?n=u=[u,o,a,i]:(_u=n,n=s)):(_u=n,n=s);e!==s?(t=ii(t,e),r=t):(_u=r,r=s);}else _u=r,r=s;return r}())===s&&(i=null),i!==s&&Fa()!==s?((l=function(){var t,e,n,u;t=_u,"ignore"===r.substr(_u,6).toLowerCase()?(e=r.substr(_u,6),_u+=6):(e=s,0===Uu&&Fu(ne));e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?t=e=[e,n]:(_u=t,t=s)):(_u=t,t=s);return t}())===s&&(l=xo()),l===s&&(l=null),l!==s&&Fa()!==s?((f=$o())===s&&(f=null),f!==s&&Fa()!==s?((b=Yu())===s&&(b=null),b!==s?(v=e,d=n,L=u,p=a,w=i,E=l,h=f,A=b,(C=o)&&C.forEach(r=>vi.add(`create::${r.db}::${r.table}`)),e={tableList:Array.from(vi),columnList:fi(di),ast:{type:v[0].toLowerCase(),keyword:"table",temporary:d&&d[0].toLowerCase(),if_not_exists:L&&L[0].toLowerCase(),table:C,ignore_replace:E&&E[0].toLowerCase(),as:h&&h[0].toLowerCase(),query_expr:A&&A.ast,create_definitions:p,table_options:w}},t=e):(_u=t,t=s)):(_u=t,t=s)):(_u=t,t=s)):(_u=t,t=s)):(_u=t,t=s)):(_u=t,t=s)):(_u=t,t=s);var v,d,L,C,p,w,E,h,A;t===s&&(t=_u,(e=_o())!==s&&Fa()!==s?((n=go())===s&&(n=null),n!==s&&Fa()!==s&&Fo()!==s&&Fa()!==s?((u=Oo())===s&&(u=null),u!==s&&Fa()!==s&&(o=Cs())!==s&&Fa()!==s&&(a=function r(){var t,e;(t=function(){var r,t;r=_u,ra()!==s&&Fa()!==s&&(t=Cs())!==s?(r={type:"like",table:t}):(_u=r,r=s);return r}())===s&&(t=_u,Ma()!==s&&Fa()!==s&&(e=r())!==s&&Fa()!==s&&Da()!==s?((n=e).parentheses=!0,t=n):(_u=t,t=s));var n;return t}())!==s?(e=function(r,t,e,n,u){return n&&n.forEach(r=>vi.add(`create::${r.db}::${r.table}`)),{tableList:Array.from(vi),columnList:fi(di),ast:{type:r[0].toLowerCase(),keyword:"table",temporary:t&&t[0].toLowerCase(),if_not_exists:e&&e[0].toLowerCase(),table:n,like:u}}}(e,n,u,o,a),t=e):(_u=t,t=s)):(_u=t,t=s)):(_u=t,t=s));return t}())===s&&(t=function(){var t,e,n,u,o,a;t=_u,(e=_o())!==s&&Fa()!==s?((n=Ho())===s&&(n=function(){var t,e,n,u;t=_u,"scheme"===r.substr(_u,6).toLowerCase()?(e=r.substr(_u,6),_u+=6):(e=s,0===Uu&&Fu(be));e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="SCHEME"):(_u=t,t=s)):(_u=t,t=s);return t}()),n!==s&&Fa()!==s?((u=Oo())===s&&(u=null),u!==s&&Fa()!==s&&(o=uo())!==s&&Fa()!==s?((a=function(){var r,t,e,n,u,o;if(r=_u,(t=Qu())!==s){for(e=[],n=_u,(u=Fa())!==s&&(o=Qu())!==s?n=u=[u,o]:(_u=n,n=s);n!==s;)e.push(n),n=_u,(u=Fa())!==s&&(o=Qu())!==s?n=u=[u,o]:(_u=n,n=s);e!==s?(t=i(t,e),r=t):(_u=r,r=s);}else _u=r,r=s;return r}())===s&&(a=null),a!==s?(c=e,l=u,f=o,b=a,e={tableList:Array.from(vi),columnList:fi(di),ast:{type:c[0].toLowerCase(),keyword:"database",if_not_exists:l&&l[0].toLowerCase(),database:f,create_definitions:b}},t=e):(_u=t,t=s)):(_u=t,t=s)):(_u=t,t=s)):(_u=t,t=s);var c,l,f,b;return t}());return t}())===s&&(t=function(){var t,e,n,u;t=_u,(e=function(){var t,e,n,u;t=_u,"truncate"===r.substr(_u,8).toLowerCase()?(e=r.substr(_u,8),_u+=8):(e=s,0===Uu&&Fu(In));e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="TRUNCATE"):(_u=t,t=s)):(_u=t,t=s);return t}())!==s&&Fa()!==s?((n=Fo())===s&&(n=null),n!==s&&Fa()!==s&&(u=Cs())!==s?(o=e,a=n,(i=u)&&i.forEach(r=>vi.add(`${o}::${r.db}::${r.table}`)),e={tableList:Array.from(vi),columnList:fi(di),ast:{type:o.toLowerCase(),keyword:a&&a.toLowerCase()||"table",name:i}},t=e):(_u=t,t=s)):(_u=t,t=s);var o,a,i;return t}())===s&&(t=function(){var r,t,e;r=_u,(t=Uo())!==s&&Fa()!==s&&Fo()!==s&&Fa()!==s&&(e=function(){var r,t,e,n,u,o,a,i;if(r=_u,(t=bs())!==s){for(e=[],n=_u,(u=Fa())!==s&&(o=xa())!==s&&(a=Fa())!==s&&(i=bs())!==s?n=u=[u,o,a,i]:(_u=n,n=s);n!==s;)e.push(n),n=_u,(u=Fa())!==s&&(o=xa())!==s&&(a=Fa())!==s&&(i=bs())!==s?n=u=[u,o,a,i]:(_u=n,n=s);e!==s?(t=c(t,e),r=t):(_u=r,r=s);}else _u=r,r=s;return r}())!==s?((n=e).forEach(r=>r.forEach(r=>r.table&&vi.add(`rename::${r.db}::${r.table}`))),t={tableList:Array.from(vi),columnList:fi(di),ast:{type:"rename",table:n}},r=t):(_u=r,r=s);var n;return r}())===s&&(t=function(){var t,e,n;t=_u,(e=function(){var t,e,n,u;t=_u,"call"===r.substr(_u,4).toLowerCase()?(e=r.substr(_u,4),_u+=4):(e=s,0===Uu&&Fu(Ve));e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="CALL"):(_u=t,t=s)):(_u=t,t=s);return t}())!==s&&Fa()!==s&&(n=Ja())!==s?(u=n,e={tableList:Array.from(vi),columnList:fi(di),ast:{type:"call",expr:u}},t=e):(_u=t,t=s);var u;return t}())===s&&(t=function(){var t,e,n;t=_u,(e=function(){var t,e,n,u;t=_u,"use"===r.substr(_u,3).toLowerCase()?(e=r.substr(_u,3),_u+=3):(e=s,0===Uu&&Fu(Vt));e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?t=e=[e,n]:(_u=t,t=s)):(_u=t,t=s);return t}())!==s&&Fa()!==s&&(n=ro())!==s?(u=n,vi.add(`use::${u}::null`),e={tableList:Array.from(vi),columnList:fi(di),ast:{type:"use",db:u}},t=e):(_u=t,t=s);var u;return t}())===s&&(t=function(){var t,e,n,u;t=_u,(e=function(){var t,e,n,u;t=_u,"alter"===r.substr(_u,5).toLowerCase()?(e=r.substr(_u,5),_u+=5):(e=s,0===Uu&&Fu(Kt));e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?t=e=[e,n]:(_u=t,t=s)):(_u=t,t=s);return t}())!==s&&Fa()!==s&&Fo()!==s&&Fa()!==s&&(n=Cs())!==s&&Fa()!==s&&(u=function(){var r,t,e,n,u,o,a,i;if(r=_u,(t=Vu())!==s){for(e=[],n=_u,(u=Fa())!==s&&(o=xa())!==s&&(a=Fa())!==s&&(i=Vu())!==s?n=u=[u,o,a,i]:(_u=n,n=s);n!==s;)e.push(n),n=_u,(u=Fa())!==s&&(o=xa())!==s&&(a=Fa())!==s&&(i=Vu())!==s?n=u=[u,o,a,i]:(_u=n,n=s);e!==s?(t=c(t,e),r=t):(_u=r,r=s);}else _u=r,r=s;return r}())!==s?(a=u,(o=n)&&o.length>0&&o.forEach(r=>vi.add(`alter::${r.db}::${r.table}`)),e={tableList:Array.from(vi),columnList:fi(di),ast:{type:"alter",table:o,expr:a}},t=e):(_u=t,t=s);var o,a;return t}())===s&&(t=function(){var t,e,n,u;t=_u,(e=ko())!==s&&Fa()!==s?((n=function(){var t,e,n,u;t=_u,"global"===r.substr(_u,6).toLowerCase()?(e=r.substr(_u,6),_u+=6):(e=s,0===Uu&&Fu(Gn));e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="GLOBAL"):(_u=t,t=s)):(_u=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=_u,"session"===r.substr(_u,7).toLowerCase()?(e=r.substr(_u,7),_u+=7):(e=s,0===Uu&&Fu(jn));e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="SESSION"):(_u=t,t=s)):(_u=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=_u,"local"===r.substr(_u,5).toLowerCase()?(e=r.substr(_u,5),_u+=5):(e=s,0===Uu&&Fu(ar));e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="LOCAL"):(_u=t,t=s)):(_u=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=_u,"persist"===r.substr(_u,7).toLowerCase()?(e=r.substr(_u,7),_u+=7):(e=s,0===Uu&&Fu(Yn));e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="PERSIST"):(_u=t,t=s)):(_u=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=_u,"persist_only"===r.substr(_u,12).toLowerCase()?(e=r.substr(_u,12),_u+=12):(e=s,0===Uu&&Fu(Bn));e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="PERSIST_ONLY"):(_u=t,t=s)):(_u=t,t=s);return t}()),n===s&&(n=null),n!==s&&Fa()!==s&&(u=Wa())!==s?(o=n,(a=u).keyword=o,e={tableList:Array.from(vi),columnList:fi(di),ast:{type:"set",expr:a}},t=e):(_u=t,t=s)):(_u=t,t=s);var o,a;return t}())===s&&(t=function(){var t,e,n;t=_u,(e=function(){var t,e,n,u;t=_u,"lock"===r.substr(_u,4).toLowerCase()?(e=r.substr(_u,4),_u+=4):(e=s,0===Uu&&Fu(S));e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?t=e=[e,n]:(_u=t,t=s)):(_u=t,t=s);return t}())!==s&&Fa()!==s&&Po()!==s&&Fa()!==s&&(n=function(){var r,t,e,n,u,o,a,i;if(r=_u,(t=ts())!==s){for(e=[],n=_u,(u=Fa())!==s&&(o=xa())!==s&&(a=Fa())!==s&&(i=ts())!==s?n=u=[u,o,a,i]:(_u=n,n=s);n!==s;)e.push(n),n=_u,(u=Fa())!==s&&(o=xa())!==s&&(a=Fa())!==s&&(i=ts())!==s?n=u=[u,o,a,i]:(_u=n,n=s);e!==s?(t=lr(t,e),r=t):(_u=r,r=s);}else _u=r,r=s;return r}())!==s?(u=n,e={tableList:Array.from(vi),columnList:fi(di),ast:{type:"lock",keyword:"tables",tables:u}},t=e):(_u=t,t=s);var u;return t}())===s&&(t=function(){var t,e;t=_u,(e=function(){var t,e,n,u;t=_u,"unlock"===r.substr(_u,6).toLowerCase()?(e=r.substr(_u,6),_u+=6):(e=s,0===Uu&&Fu(ae));e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?t=e=[e,n]:(_u=t,t=s)):(_u=t,t=s);return t}())!==s&&Fa()!==s&&Po()!==s?(e={tableList:Array.from(vi),columnList:fi(di),ast:{type:"unlock",keyword:"tables"}},t=e):(_u=t,t=s);return t}())===s&&(t=function(){var t,e,n,u,o,a,i,c,l;t=_u,(e=Io())!==s&&Fa()!==s?("binary"===r.substr(_u,6).toLowerCase()?(n=r.substr(_u,6),_u+=6):(n=s,0===Uu&&Fu(fr)),n===s&&("master"===r.substr(_u,6).toLowerCase()?(n=r.substr(_u,6),_u+=6):(n=s,0===Uu&&Fu(br))),n!==s&&(u=Fa())!==s?("logs"===r.substr(_u,4).toLowerCase()?(o=r.substr(_u,4),_u+=4):(o=s,0===Uu&&Fu(vr)),o!==s?(f=n,e={tableList:Array.from(vi),columnList:fi(di),ast:{type:"show",suffix:"logs",keyword:f.toLowerCase()}},t=e):(_u=t,t=s)):(_u=t,t=s)):(_u=t,t=s);var f;t===s&&(t=_u,(e=Io())!==s&&Fa()!==s?("binlog"===r.substr(_u,6).toLowerCase()?(n=r.substr(_u,6),_u+=6):(n=s,0===Uu&&Fu(dr)),n!==s&&(u=Fa())!==s?("events"===r.substr(_u,6).toLowerCase()?(o=r.substr(_u,6),_u+=6):(o=s,0===Uu&&Fu(Lr)),o!==s&&(a=Fa())!==s?((i=Vs())===s&&(i=null),i!==s&&Fa()!==s?((c=fs())===s&&(c=null),c!==s&&Fa()!==s?((l=Is())===s&&(l=null),l!==s?(b=i,v=c,d=l,e={tableList:Array.from(vi),columnList:fi(di),ast:{type:"show",suffix:"events",keyword:"binlog",in:b,from:v,limit:d}},t=e):(_u=t,t=s)):(_u=t,t=s)):(_u=t,t=s)):(_u=t,t=s)):(_u=t,t=s)):(_u=t,t=s),t===s&&(t=_u,(e=Io())!==s&&Fa()!==s?(n=_u,"character"===r.substr(_u,9).toLowerCase()?(u=r.substr(_u,9),_u+=9):(u=s,0===Uu&&Fu(X)),u!==s&&(o=Fa())!==s?("set"===r.substr(_u,3).toLowerCase()?(a=r.substr(_u,3),_u+=3):(a=s,0===Uu&&Fu(W)),a!==s?n=u=[u,o,a]:(_u=n,n=s)):(_u=n,n=s),n===s&&("collation"===r.substr(_u,9).toLowerCase()?(n=r.substr(_u,9),_u+=9):(n=s,0===Uu&&Fu(Cr))),n!==s&&(u=Fa())!==s?((o=Ws())===s&&(o=ys()),o===s&&(o=null),o!==s?(e=function(r,t){let e=Array.isArray(r)&&r||[r];return {tableList:Array.from(vi),columnList:fi(di),ast:{type:"show",suffix:e[2]&&e[2].toLowerCase(),keyword:e[0].toLowerCase(),expr:t}}}(n,o),t=e):(_u=t,t=s)):(_u=t,t=s)):(_u=t,t=s),t===s&&(t=function(){var t,e,n,u;t=_u,(e=Io())!==s&&Fa()!==s?("grants"===r.substr(_u,6).toLowerCase()?(n=r.substr(_u,6),_u+=6):(n=s,0===Uu&&Fu(pr)),n!==s&&Fa()!==s?((u=function(){var t,e,n,u,o,a,i;t=_u,"for"===r.substr(_u,3).toLowerCase()?(e=r.substr(_u,3),_u+=3):(e=s,0===Uu&&Fu(O));e!==s&&Fa()!==s&&(n=ro())!==s&&Fa()!==s?(u=_u,(o=ma())!==s&&(a=Fa())!==s&&(i=ro())!==s?u=o=[o,a,i]:(_u=u,u=s),u===s&&(u=null),u!==s&&(o=Fa())!==s?((a=function(){var r,t;r=_u,Xo()!==s&&Fa()!==s&&(t=function(){var r,t,e,n,u,o,a,i;if(r=_u,(t=ro())!==s){for(e=[],n=_u,(u=Fa())!==s&&(o=xa())!==s&&(a=Fa())!==s&&(i=ro())!==s?n=u=[u,o,a,i]:(_u=n,n=s);n!==s;)e.push(n),n=_u,(u=Fa())!==s&&(o=xa())!==s&&(a=Fa())!==s&&(i=ro())!==s?n=u=[u,o,a,i]:(_u=n,n=s);e!==s?(t=lr(t,e),r=t):(_u=r,r=s);}else _u=r,r=s;return r}())!==s?(r=t):(_u=r,r=s);return r}())===s&&(a=null),a!==s?(l=a,e={user:n,host:(c=u)&&c[2],role_list:l},t=e):(_u=t,t=s)):(_u=t,t=s)):(_u=t,t=s);var c,l;return t}())===s&&(u=null),u!==s?(e=function(r){return {tableList:Array.from(vi),columnList:fi(di),ast:{type:"show",keyword:"grants",for:r}}}(u),t=e):(_u=t,t=s)):(_u=t,t=s)):(_u=t,t=s);return t}())));var b,v,d;return t}())===s&&(t=function(){var t,e,n;t=_u,(e=Ko())===s&&(e=function(){var t,e,n,u;t=_u,"describe"===r.substr(_u,8).toLowerCase()?(e=r.substr(_u,8),_u+=8):(e=s,0===Uu&&Fu(ge));e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="DESCRIBE"):(_u=t,t=s)):(_u=t,t=s);return t}());e!==s&&Fa()!==s&&(n=ro())!==s?(u=n,e={tableList:Array.from(vi),columnList:fi(di),ast:{type:"desc",table:u}},t=e):(_u=t,t=s);var u;return t}()),t}function ju(){var t;return (t=Yu())===s&&(t=function(){var r,t,e,n,u,o,a;r=_u,(t=Ro())!==s&&Fa()!==s&&(e=Cs())!==s&&Fa()!==s&&ko()!==s&&Fa()!==s&&(n=Ns())!==s&&Fa()!==s?((u=ys())===s&&(u=null),u!==s&&Fa()!==s?((o=Ts())===s&&(o=null),o!==s&&Fa()!==s?((a=Is())===s&&(a=null),a!==s?(c=n,l=u,f=o,b=a,(i=e)&&i.forEach(r=>{const{db:t,as:e,table:n}=r;vi.add(`update::${t}::${n}`);}),c&&c.forEach(r=>di.add(`update::${r.table}::${r.column}`)),t={tableList:Array.from(vi),columnList:fi(di),ast:{type:"update",table:i,set:c,where:l,orderby:f,limit:b}},r=t):(_u=r,r=s)):(_u=r,r=s)):(_u=r,r=s)):(_u=r,r=s);var i,c,l,f,b;return r}())===s&&(t=function(){var r,t,e,n,u,o,a,i;r=_u,(t=xs())!==s&&Fa()!==s?((e=Do())===s&&(e=null),e!==s&&Fa()!==s&&(n=hs())!==s&&Fa()!==s?((u=gs())===s&&(u=null),u!==s&&Fa()!==s&&Ma()!==s&&Fa()!==s&&(o=function(){var r,t,e,n,u,o,a,i;if(r=_u,(t=eo())!==s){for(e=[],n=_u,(u=Fa())!==s&&(o=xa())!==s&&(a=Fa())!==s&&(i=eo())!==s?n=u=[u,o,a,i]:(_u=n,n=s);n!==s;)e.push(n),n=_u,(u=Fa())!==s&&(o=xa())!==s&&(a=Fa())!==s&&(i=eo())!==s?n=u=[u,o,a,i]:(_u=n,n=s);e!==s?(t=c(t,e),r=t):(_u=r,r=s);}else _u=r,r=s;return r}())!==s&&Fa()!==s&&Da()!==s&&Fa()!==s&&(a=_s())!==s&&Fa()!==s?((i=Os())===s&&(i=null),i!==s?(t=function(r,t,e,n,u,s){if(t&&(vi.add(`insert::${t.db}::${t.table}`),t.as=null),n){let r=t&&t.table||null;Array.isArray(u)&&u.forEach((r,t)=>{if(r.value.length!=n.length)throw new Error("Error: column count doesn't match value count at row "+(t+1))}),n.forEach(t=>di.add(`insert::${r}::${t}`));}return {tableList:Array.from(vi),columnList:fi(di),ast:{type:r,table:[t],columns:n,values:u,partition:e,on_duplicate_update:s}}}(t,n,u,o,a,i),r=t):(_u=r,r=s)):(_u=r,r=s)):(_u=r,r=s)):(_u=r,r=s);return r}())===s&&(t=function(){var r,t,e,n,u,o;r=_u,(t=xs())!==s&&Fa()!==s&&Do()!==s&&Fa()!==s&&(e=hs())!==s&&Fa()!==s?((n=gs())===s&&(n=null),n!==s&&Fa()!==s&&(u=_s())!==s&&Fa()!==s?((o=Os())===s&&(o=null),o!==s?(a=t,c=n,l=u,f=o,(i=e)&&(vi.add(`insert::${i.db}::${i.table}`),di.add(`insert::${i.table}::(.*)`),i.as=null),t={tableList:Array.from(vi),columnList:fi(di),ast:{type:a,table:[i],columns:null,values:l,partition:c,on_duplicate_update:f}},r=t):(_u=r,r=s)):(_u=r,r=s)):(_u=r,r=s);var a,i,c,l,f;return r}())===s&&(t=function(){var r,t,e,n,u,o;r=_u,(t=xs())!==s&&Fa()!==s&&Do()!==s&&Fa()!==s&&(e=hs())!==s&&Fa()!==s?((n=gs())===s&&(n=null),n!==s&&Fa()!==s&&ko()!==s&&Fa()!==s&&(u=Ns())!==s&&Fa()!==s?((o=Os())===s&&(o=null),o!==s?(a=t,c=n,l=u,f=o,(i=e)&&(vi.add(`insert::${i.db}::${i.table}`),di.add(`insert::${i.table}::(.*)`),i.as=null),t={tableList:Array.from(vi),columnList:fi(di),ast:{type:a,table:[i],columns:null,partition:c,set:l,on_duplicate_update:f}},r=t):(_u=r,r=s)):(_u=r,r=s)):(_u=r,r=s);var a,i,c,l,f;return r}())===s&&(t=function(){var t,e,n,u,o,a,i;t=_u,(e=function(){var t,e,n,u;t=_u,"delete"===r.substr(_u,6).toLowerCase()?(e=r.substr(_u,6),_u+=6):(e=s,0===Uu&&Fu(F));e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?t=e=[e,n]:(_u=t,t=s)):(_u=t,t=s);return t}())!==s&&Fa()!==s?((n=Cs())===s&&(n=null),n!==s&&Fa()!==s&&(u=fs())!==s&&Fa()!==s?((o=ys())===s&&(o=null),o!==s&&Fa()!==s?((a=Ts())===s&&(a=null),a!==s&&Fa()!==s?((i=Is())===s&&(i=null),i!==s?(e=function(r,t,e,n,u){if(t&&t.forEach(r=>{r.table&&vi.add(`delete::${r.db}::${r.table}`),di.add(`delete::${r.table}::(.*)`);}),null===r&&1===t.length){const e=t[0];r=[{db:e.db,table:e.table,as:e.as,addition:!0}];}return {tableList:Array.from(vi),columnList:fi(di),ast:{type:"delete",table:r,from:t,where:e,orderby:n,limit:u}}}(n,u,o,a,i),t=e):(_u=t,t=s)):(_u=t,t=s)):(_u=t,t=s)):(_u=t,t=s)):(_u=t,t=s);return t}())===s&&(t=Gu())===s&&(t=function(){var r,t;r=[],t=Xa();for(;t!==s;)r.push(t),t=Xa();return r}()),t}function Yu(){var r,t,e,n,u,o,a,i,c,l;if(r=_u,(t=es())!==s){for(e=[],n=_u,(u=Fa())!==s&&(o=Yo())!==s&&(a=Fa())!==s?((i=qo())===s&&(i=null),i!==s&&(c=Fa())!==s&&(l=es())!==s?n=u=[u,o,a,i,c,l]:(_u=n,n=s)):(_u=n,n=s);n!==s;)e.push(n),n=_u,(u=Fa())!==s&&(o=Yo())!==s&&(a=Fa())!==s?((i=qo())===s&&(i=null),i!==s&&(c=Fa())!==s&&(l=es())!==s?n=u=[u,o,a,i,c,l]:(_u=n,n=s)):(_u=n,n=s);e!==s&&(n=Fa())!==s?((u=Ts())===s&&(u=null),u!==s&&(o=Fa())!==s?((a=Is())===s&&(a=null),a!==s?(r=t=function(r,t,e,n){let u=r;for(let r=0;r<t.length;r++)u._next=t[r][5],u.union=t[r][3]?"union all":"union",u=u._next;return e&&(r._orderby=e),n&&(r._limit=n),{tableList:Array.from(vi),columnList:fi(di),ast:r}}(t,e,u,a)):(_u=r,r=s)):(_u=r,r=s)):(_u=r,r=s);}else _u=r,r=s;return r}function Bu(){var t;return (t=function(){var t;(t=function(){var t,e,n,u,o,a,i,c;t=_u,(e=Zu())===s&&(e=null);e!==s&&Fa()!==s?(n=_u,"primary"===r.substr(_u,7).toLowerCase()?(u=r.substr(_u,7),_u+=7):(u=s,0===Uu&&Fu(b)),u!==s&&(o=Fa())!==s?("key"===r.substr(_u,3).toLowerCase()?(a=r.substr(_u,3),_u+=3):(a=s,0===Uu&&Fu(v)),a!==s?n=u=[u,o,a]:(_u=n,n=s)):(_u=n,n=s),n!==s&&(u=Fa())!==s?((o=vs())===s&&(o=null),o!==s&&(a=Fa())!==s&&(i=ss())!==s&&Fa()!==s?((c=ds())===s&&(c=null),c!==s?(f=n,d=o,L=i,C=c,e={constraint:(l=e)&&l.constraint,definition:L,constraint_type:`${f[0].toLowerCase()} ${f[2].toLowerCase()}`,keyword:l&&l.keyword,index_type:d,resource:"constraint",index_options:C},t=e):(_u=t,t=s)):(_u=t,t=s)):(_u=t,t=s)):(_u=t,t=s);var l,f,d,L,C;return t}())===s&&(t=function(){var t,e,n,u,o,a,i,c;t=_u,(e=Zu())===s&&(e=null);e!==s&&Fa()!==s&&(n=function(){var t,e,n,u;t=_u,"unique"===r.substr(_u,6).toLowerCase()?(e=r.substr(_u,6),_u+=6):(e=s,0===Uu&&Fu(f));e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="UNIQUE"):(_u=t,t=s)):(_u=t,t=s);return t}())!==s&&Fa()!==s?((u=Ra())===s&&(u=_a()),u===s&&(u=null),u!==s&&Fa()!==s?((o=eo())===s&&(o=null),o!==s&&Fa()!==s?((a=vs())===s&&(a=null),a!==s&&Fa()!==s&&(i=ss())!==s&&Fa()!==s?((c=ds())===s&&(c=null),c!==s?(b=n,v=u,d=o,L=a,C=i,p=c,e={constraint:(l=e)&&l.constraint,definition:C,constraint_type:v&&`${b.toLowerCase()} ${v.toLowerCase()}`||b.toLowerCase(),keyword:l&&l.keyword,index_type:L,index:d,resource:"constraint",index_options:p},t=e):(_u=t,t=s)):(_u=t,t=s)):(_u=t,t=s)):(_u=t,t=s)):(_u=t,t=s);var l,b,v,d,L,C,p;return t}())===s&&(t=function(){var t,e,n,u,o,a;t=_u,(e=Zu())===s&&(e=null);e!==s&&Fa()!==s?("foreign key"===r.substr(_u,11).toLowerCase()?(n=r.substr(_u,11),_u+=11):(n=s,0===Uu&&Fu(U)),n!==s&&Fa()!==s?((u=eo())===s&&(u=null),u!==s&&Fa()!==s&&(o=ss())!==s&&Fa()!==s?((a=zu())===s&&(a=null),a!==s?(c=n,l=u,f=o,b=a,e={constraint:(i=e)&&i.constraint,definition:f,constraint_type:c,keyword:i&&i.keyword,index:l,resource:"constraint",reference_definition:b},t=e):(_u=t,t=s)):(_u=t,t=s)):(_u=t,t=s)):(_u=t,t=s);var i,c,l,f,b;return t}())===s&&(t=function(){var t,e,n,u,o,a,i,c,l,f;t=_u,(e=Zu())===s&&(e=null);e!==s&&Fa()!==s?("check"===r.substr(_u,5).toLowerCase()?(n=r.substr(_u,5),_u+=5):(n=s,0===Uu&&Fu(_)),n!==s&&Fa()!==s?(u=_u,"not"===r.substr(_u,3).toLowerCase()?(o=r.substr(_u,3),_u+=3):(o=s,0===Uu&&Fu(g)),o!==s&&(a=Fa())!==s?("for"===r.substr(_u,3).toLowerCase()?(i=r.substr(_u,3),_u+=3):(i=s,0===Uu&&Fu(O)),i!==s&&(c=Fa())!==s?("replication"===r.substr(_u,11).toLowerCase()?(l=r.substr(_u,11),_u+=11):(l=s,0===Uu&&Fu(x)),l!==s&&(f=Fa())!==s?u=o=[o,a,i,c,l,f]:(_u=u,u=s)):(_u=u,u=s)):(_u=u,u=s),u===s&&(u=null),u!==s&&(o=Ma())!==s&&(a=Fa())!==s&&(i=Fs())!==s&&(c=Fa())!==s&&(l=Da())!==s?(b=e,v=u,d=i,e={constraint_type:n.toLowerCase(),keyword:b&&b.keyword,constraint:b&&b.constraint,index_type:v&&{keyword:"not for replication"},definition:[d],resource:"constraint"},t=e):(_u=t,t=s)):(_u=t,t=s)):(_u=t,t=s);var b,v,d;return t}());return t}())===s&&(t=Xu())===s&&(t=function(){var r,t,e,n,u,o;r=_u,(t=Ra())===s&&(t=_a());t!==s&&Fa()!==s?((e=eo())===s&&(e=null),e!==s&&Fa()!==s?((n=vs())===s&&(n=null),n!==s&&Fa()!==s&&(u=ss())!==s&&Fa()!==s?((o=ds())===s&&(o=null),o!==s&&Fa()!==s?(a=n,i=o,t={index:e,definition:u,keyword:t.toLowerCase(),index_type:a,resource:"index",index_options:i},r=t):(_u=r,r=s)):(_u=r,r=s)):(_u=r,r=s)):(_u=r,r=s);var a,i;return r}())===s&&(t=function(){var t,e,n,u,o,a;t=_u,(e=function(){var t,e,n,u;t=_u,"fulltext"===r.substr(_u,8).toLowerCase()?(e=r.substr(_u,8),_u+=8):(e=s,0===Uu&&Fu(ru));e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="FULLTEXT"):(_u=t,t=s)):(_u=t,t=s);return t}())===s&&(e=function(){var t,e,n,u;t=_u,"spatial"===r.substr(_u,7).toLowerCase()?(e=r.substr(_u,7),_u+=7):(e=s,0===Uu&&Fu(tu));e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="SPATIAL"):(_u=t,t=s)):(_u=t,t=s);return t}());e!==s&&Fa()!==s?((n=Ra())===s&&(n=_a()),n===s&&(n=null),n!==s&&Fa()!==s?((u=eo())===s&&(u=null),u!==s&&Fa()!==s&&(o=ss())!==s&&Fa()!==s?((a=ds())===s&&(a=null),a!==s&&Fa()!==s?(i=e,l=a,e={index:u,definition:o,keyword:(c=n)&&`${i.toLowerCase()} ${c.toLowerCase()}`||i.toLowerCase(),index_options:l,resource:"index"},t=e):(_u=t,t=s)):(_u=t,t=s)):(_u=t,t=s)):(_u=t,t=s);var i,c,l;return t}()),t}function Xu(){var t,e,n,u,o,a,i,c,A,y,T,m,S,I,N,R,_,g,O,x,U,M,D,k,$;return t=_u,(e=Qs())!==s&&Fa()!==s&&(n=ei())!==s&&Fa()!==s?((u=function(){var e;(e=function(){var t,e,n,u;t=_u,"not null"===r.substr(_u,8).toLowerCase()?(e=r.substr(_u,8),_u+=8):(e=s,0===Uu&&Fu(Gt));e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?t=e=[e,n]:(_u=t,t=s)):(_u=t,t=s);return t}())!==s&&(e={type:"not null",value:"not null"});return e}())===s&&(u=fo()),u===s&&(u=null),u!==s&&Fa()!==s?((o=function(){var r,t;r=_u,mo()!==s&&Fa()!==s?((t=lo())===s&&(t=Fs()),t!==s?(r={type:"default",value:t}):(_u=r,r=s)):(_u=r,r=s);return r}())===s&&(o=null),o!==s&&Fa()!==s?("auto_increment"===r.substr(_u,14).toLowerCase()?(a=r.substr(_u,14),_u+=14):(a=s,0===Uu&&Fu(l)),a===s&&(a=null),a!==s&&Fa()!==s?(i=_u,"unique"===r.substr(_u,6).toLowerCase()?(c=r.substr(_u,6),_u+=6):(c=s,0===Uu&&Fu(f)),c===s&&("primary"===r.substr(_u,7).toLowerCase()?(c=r.substr(_u,7),_u+=7):(c=s,0===Uu&&Fu(b))),c===s&&(c=null),c!==s&&(A=Fa())!==s?("key"===r.substr(_u,3).toLowerCase()?(y=r.substr(_u,3),_u+=3):(y=s,0===Uu&&Fu(v)),y!==s?i=c=[c,A,y]:(_u=i,i=s)):(_u=i,i=s),i===s&&(i=null),i!==s&&(c=Fa())!==s?((A=Ga())===s&&(A=null),A!==s&&(y=Fa())!==s?((T=Wu())===s&&(T=null),T!==s&&Fa()!==s?((m=function(){var t,e,n;t=_u,"column_format"===r.substr(_u,13).toLowerCase()?(e=r.substr(_u,13),_u+=13):(e=s,0===Uu&&Fu(d));e!==s&&Fa()!==s?("fixed"===r.substr(_u,5).toLowerCase()?(n=r.substr(_u,5),_u+=5):(n=s,0===Uu&&Fu(L)),n===s&&("dynamic"===r.substr(_u,7).toLowerCase()?(n=r.substr(_u,7),_u+=7):(n=s,0===Uu&&Fu(C)),n===s&&("default"===r.substr(_u,7).toLowerCase()?(n=r.substr(_u,7),_u+=7):(n=s,0===Uu&&Fu(p)))),n!==s?(e=function(r,t){return {type:"column_format",value:t.toLowerCase()}}(0,n),t=e):(_u=t,t=s)):(_u=t,t=s);return t}())===s&&(m=null),m!==s&&Fa()!==s?((S=function(){var t,e,n;t=_u,"storage"===r.substr(_u,7).toLowerCase()?(e=r.substr(_u,7),_u+=7):(e=s,0===Uu&&Fu(w));e!==s&&Fa()!==s?("disk"===r.substr(_u,4).toLowerCase()?(n=r.substr(_u,4),_u+=4):(n=s,0===Uu&&Fu(E)),n===s&&("memory"===r.substr(_u,6).toLowerCase()?(n=r.substr(_u,6),_u+=6):(n=s,0===Uu&&Fu(h))),n!==s?(e={type:"storage",value:n.toLowerCase()},t=e):(_u=t,t=s)):(_u=t,t=s);return t}())===s&&(S=null),S!==s&&Fa()!==s?((I=zu())===s&&(I=null),I!==s?(N=e,R=n,_=u,g=o,O=a,x=i,U=A,M=T,D=m,k=S,$=I,di.add(`create::${N.table}::${N.column}`),_&&!_.value&&(_.value="null"),t=e={column:N,definition:R,nullable:_,default_val:g,auto_increment:O&&O.toLowerCase(),unique_or_primary:x&&`${x[0].toLowerCase()} ${x[2].toLowerCase()}`,comment:U,collate:M,column_format:D,storage:k,reference_definition:$,resource:"column"}):(_u=t,t=s)):(_u=t,t=s)):(_u=t,t=s)):(_u=t,t=s)):(_u=t,t=s)):(_u=t,t=s)):(_u=t,t=s)):(_u=t,t=s)):(_u=t,t=s)):(_u=t,t=s),t}function Wu(){var t,e;return t=_u,function(){var t,e,n,u;t=_u,"collate"===r.substr(_u,7).toLowerCase()?(e=r.substr(_u,7),_u+=7):(e=s,0===Uu&&Fu(K));e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="COLLATE"):(_u=t,t=s)):(_u=t,t=s);return t}()!==s&&Fa()!==s&&(e=uo())!==s?(t={type:"collate",value:e}):(_u=t,t=s),t}function Vu(){var t;return (t=function(){var t,e,n,u;t=_u,(e=function(){var t,e,n,u;t=_u,"add"===r.substr(_u,3).toLowerCase()?(e=r.substr(_u,3),_u+=3):(e=s,0===Uu&&Fu(zn));e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="ADD"):(_u=t,t=s)):(_u=t,t=s);return t}())!==s&&Fa()!==s?((n=Na())===s&&(n=null),n!==s&&Fa()!==s&&(u=Xu())!==s?(o=n,a=u,e={action:"add",...a,keyword:o,resource:"column",type:"alter"},t=e):(_u=t,t=s)):(_u=t,t=s);var o,a;return t}())===s&&(t=function(){var r,t,e;r=_u,No()!==s&&Fa()!==s?((t=Na())===s&&(t=null),t!==s&&Fa()!==s&&(e=Qs())!==s?(r={action:"drop",column:e,keyword:t,resource:"column",type:"alter"}):(_u=r,r=s)):(_u=r,r=s);return r}())===s&&(t=function(){var r,t,e,n;r=_u,(t=Uo())!==s&&Fa()!==s?((e=So())===s&&(e=$o()),e===s&&(e=null),e!==s&&Fa()!==s&&(n=ro())!==s?(o=n,t={action:"rename",type:"alter",resource:"table",keyword:(u=e)&&u[0].toLowerCase(),table:o},r=t):(_u=r,r=s)):(_u=r,r=s);var u,o;return r}()),t}function Ku(){var t,e,n,u;return t=_u,"algorithm"===r.substr(_u,9).toLowerCase()?(e=r.substr(_u,9),_u+=9):(e=s,0===Uu&&Fu(A)),e!==s&&Fa()!==s?((n=Ia())===s&&(n=null),n!==s&&Fa()!==s?("default"===r.substr(_u,7).toLowerCase()?(u=r.substr(_u,7),_u+=7):(u=s,0===Uu&&Fu(p)),u===s&&("instant"===r.substr(_u,7).toLowerCase()?(u=r.substr(_u,7),_u+=7):(u=s,0===Uu&&Fu(y)),u===s&&("inplace"===r.substr(_u,7).toLowerCase()?(u=r.substr(_u,7),_u+=7):(u=s,0===Uu&&Fu(T)),u===s&&("copy"===r.substr(_u,4).toLowerCase()?(u=r.substr(_u,4),_u+=4):(u=s,0===Uu&&Fu(m))))),u!==s?(t=e={type:"alter",keyword:"algorithm",resource:"algorithm",symbol:n,algorithm:u}):(_u=t,t=s)):(_u=t,t=s)):(_u=t,t=s),t}function qu(){var t,e,n,u;return t=_u,"lock"===r.substr(_u,4).toLowerCase()?(e=r.substr(_u,4),_u+=4):(e=s,0===Uu&&Fu(S)),e!==s&&Fa()!==s?((n=Ia())===s&&(n=null),n!==s&&Fa()!==s?("default"===r.substr(_u,7).toLowerCase()?(u=r.substr(_u,7),_u+=7):(u=s,0===Uu&&Fu(p)),u===s&&("none"===r.substr(_u,4).toLowerCase()?(u=r.substr(_u,4),_u+=4):(u=s,0===Uu&&Fu(I)),u===s&&("shared"===r.substr(_u,6).toLowerCase()?(u=r.substr(_u,6),_u+=6):(u=s,0===Uu&&Fu(N)),u===s&&("exclusive"===r.substr(_u,9).toLowerCase()?(u=r.substr(_u,9),_u+=9):(u=s,0===Uu&&Fu(R))))),u!==s?(t=e={type:"alter",keyword:"lock",resource:"lock",symbol:n,lock:u}):(_u=t,t=s)):(_u=t,t=s)):(_u=t,t=s),t}function Zu(){var t,e,n,u;return t=_u,(e=function(){var t,e,n,u;t=_u,"constraint"===r.substr(_u,10).toLowerCase()?(e=r.substr(_u,10),_u+=10):(e=s,0===Uu&&Fu(nu));e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="CONSTRAINT"):(_u=t,t=s)):(_u=t,t=s);return t}())!==s&&Fa()!==s?((n=ro())===s&&(n=null),n!==s?(u=n,t=e={keyword:e.toLowerCase(),constraint:u}):(_u=t,t=s)):(_u=t,t=s),t}function zu(){var t,e,n,u,o,a,i,c,l,f;return t=_u,(e=function(){var t,e,n,u;t=_u,"references"===r.substr(_u,10).toLowerCase()?(e=r.substr(_u,10),_u+=10):(e=s,0===Uu&&Fu(uu));e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="REFERENCES"):(_u=t,t=s)):(_u=t,t=s);return t}())!==s&&Fa()!==s&&(n=Cs())!==s&&Fa()!==s&&(u=ss())!==s&&Fa()!==s?("match full"===r.substr(_u,10).toLowerCase()?(o=r.substr(_u,10),_u+=10):(o=s,0===Uu&&Fu(M)),o===s&&("match partial"===r.substr(_u,13).toLowerCase()?(o=r.substr(_u,13),_u+=13):(o=s,0===Uu&&Fu(D)),o===s&&("match simple"===r.substr(_u,12).toLowerCase()?(o=r.substr(_u,12),_u+=12):(o=s,0===Uu&&Fu(k)))),o===s&&(o=null),o!==s&&Fa()!==s?((a=Ju())===s&&(a=null),a!==s&&Fa()!==s?((i=Ju())===s&&(i=null),i!==s?(c=o,l=a,f=i,t=e={definition:u,table:n,keyword:e.toLowerCase(),match:c&&c.toLowerCase(),on_delete:l,on_update:f}):(_u=t,t=s)):(_u=t,t=s)):(_u=t,t=s)):(_u=t,t=s),t}function Ju(){var t,e,n,u,o,a;return t=_u,"on"===r.substr(_u,2).toLowerCase()?(e=r.substr(_u,2),_u+=2):(e=s,0===Uu&&Fu($)),e!==s&&Fa()!==s?("delete"===r.substr(_u,6).toLowerCase()?(n=r.substr(_u,6),_u+=6):(n=s,0===Uu&&Fu(F)),n===s&&("update"===r.substr(_u,6).toLowerCase()?(n=r.substr(_u,6),_u+=6):(n=s,0===Uu&&Fu(P))),n!==s&&Fa()!==s&&(u=function(){var e;"restrict"===r.substr(_u,8).toLowerCase()?(e=r.substr(_u,8),_u+=8):(e=s,0===Uu&&Fu(H));e===s&&("cascade"===r.substr(_u,7).toLowerCase()?(e=r.substr(_u,7),_u+=7):(e=s,0===Uu&&Fu(G)),e===s&&("set null"===r.substr(_u,8).toLowerCase()?(e=r.substr(_u,8),_u+=8):(e=s,0===Uu&&Fu(j)),e===s&&("no action"===r.substr(_u,9).toLowerCase()?(e=r.substr(_u,9),_u+=9):(e=s,0===Uu&&Fu(Y)),e===s&&("set default"===r.substr(_u,11).toLowerCase()?(e=r.substr(_u,11),_u+=11):(e=s,0===Uu&&Fu(B))))));e!==s&&(e=e.toLowerCase());return e}())!==s?(o=n,a=u,t=e={type:`${e.toLowerCase()} ${o.toLowerCase()}`,value:a}):(_u=t,t=s)):(_u=t,t=s),t}function Qu(){var t,e,n,u,o,a,i,c,l;return t=_u,(e=mo())===s&&(e=null),e!==s&&Fa()!==s?((n=function(){var t,e,n;return t=_u,"character"===r.substr(_u,9).toLowerCase()?(e=r.substr(_u,9),_u+=9):(e=s,0===Uu&&Fu(X)),e!==s&&Fa()!==s?("set"===r.substr(_u,3).toLowerCase()?(n=r.substr(_u,3),_u+=3):(n=s,0===Uu&&Fu(W)),n!==s?(t=e="CHARACTER SET"):(_u=t,t=s)):(_u=t,t=s),t}())===s&&("charset"===r.substr(_u,7).toLowerCase()?(n=r.substr(_u,7),_u+=7):(n=s,0===Uu&&Fu(V)),n===s&&("collate"===r.substr(_u,7).toLowerCase()?(n=r.substr(_u,7),_u+=7):(n=s,0===Uu&&Fu(K)))),n!==s&&Fa()!==s?((u=Ia())===s&&(u=null),u!==s&&Fa()!==s&&(o=uo())!==s?(i=n,c=u,l=o,t=e={keyword:(a=e)&&`${a[0].toLowerCase()} ${i.toLowerCase()}`||i.toLowerCase(),symbol:c,value:l}):(_u=t,t=s)):(_u=t,t=s)):(_u=t,t=s),t}function rs(){var t,e,n,u,o,a,i,c,f;return t=_u,"auto_increment"===r.substr(_u,14).toLowerCase()?(e=r.substr(_u,14),_u+=14):(e=s,0===Uu&&Fu(l)),e===s&&("avg_row_length"===r.substr(_u,14).toLowerCase()?(e=r.substr(_u,14),_u+=14):(e=s,0===Uu&&Fu(q)),e===s&&("key_block_size"===r.substr(_u,14).toLowerCase()?(e=r.substr(_u,14),_u+=14):(e=s,0===Uu&&Fu(Z)),e===s&&("max_rows"===r.substr(_u,8).toLowerCase()?(e=r.substr(_u,8),_u+=8):(e=s,0===Uu&&Fu(z)),e===s&&("min_rows"===r.substr(_u,8).toLowerCase()?(e=r.substr(_u,8),_u+=8):(e=s,0===Uu&&Fu(J)),e===s&&("stats_sample_pages"===r.substr(_u,18).toLowerCase()?(e=r.substr(_u,18),_u+=18):(e=s,0===Uu&&Fu(Q))))))),e!==s&&Fa()!==s?((n=Ia())===s&&(n=null),n!==s&&Fa()!==s&&(u=po())!==s?(c=n,f=u,t=e={keyword:e.toLowerCase(),symbol:c,value:f.value}):(_u=t,t=s)):(_u=t,t=s),t===s&&(t=Qu())===s&&(t=_u,(e=ga())===s&&("connection"===r.substr(_u,10).toLowerCase()?(e=r.substr(_u,10),_u+=10):(e=s,0===Uu&&Fu(rr))),e!==s&&Fa()!==s?((n=Ia())===s&&(n=null),n!==s&&Fa()!==s&&(u=bo())!==s?(t=e=function(r,t,e){return {keyword:r.toLowerCase(),symbol:t,value:`'${e.value}'`}}(e,n,u)):(_u=t,t=s)):(_u=t,t=s),t===s&&(t=_u,"compression"===r.substr(_u,11).toLowerCase()?(e=r.substr(_u,11),_u+=11):(e=s,0===Uu&&Fu(tr)),e!==s&&Fa()!==s?((n=Ia())===s&&(n=null),n!==s&&Fa()!==s?(u=_u,39===r.charCodeAt(_u)?(o="'",_u++):(o=s,0===Uu&&Fu(er)),o!==s?("zlib"===r.substr(_u,4).toLowerCase()?(a=r.substr(_u,4),_u+=4):(a=s,0===Uu&&Fu(nr)),a===s&&("lz4"===r.substr(_u,3).toLowerCase()?(a=r.substr(_u,3),_u+=3):(a=s,0===Uu&&Fu(ur)),a===s&&("none"===r.substr(_u,4).toLowerCase()?(a=r.substr(_u,4),_u+=4):(a=s,0===Uu&&Fu(I)))),a!==s?(39===r.charCodeAt(_u)?(i="'",_u++):(i=s,0===Uu&&Fu(er)),i!==s?u=o=[o,a,i]:(_u=u,u=s)):(_u=u,u=s)):(_u=u,u=s),u!==s?(t=e=function(r,t,e){return {keyword:r.toLowerCase(),symbol:t,value:e.join("").toUpperCase()}}(e,n,u)):(_u=t,t=s)):(_u=t,t=s)):(_u=t,t=s),t===s&&(t=_u,"engine"===r.substr(_u,6).toLowerCase()?(e=r.substr(_u,6),_u+=6):(e=s,0===Uu&&Fu(sr)),e!==s&&Fa()!==s?((n=Ia())===s&&(n=null),n!==s&&Fa()!==s&&(u=uo())!==s?(t=e=function(r,t,e){return {keyword:r.toLowerCase(),symbol:t,value:e.toUpperCase()}}(e,n,u)):(_u=t,t=s)):(_u=t,t=s)))),t}function ts(){var t,e,n,u,o;return t=_u,(e=ws())!==s&&Fa()!==s&&(n=function(){var t,e,n;return t=_u,"read"===r.substr(_u,4).toLowerCase()?(e=r.substr(_u,4),_u+=4):(e=s,0===Uu&&Fu(or)),e!==s&&Fa()!==s?("local"===r.substr(_u,5).toLowerCase()?(n=r.substr(_u,5),_u+=5):(n=s,0===Uu&&Fu(ar)),n===s&&(n=null),n!==s?(t=e={type:"read",suffix:n&&"local"}):(_u=t,t=s)):(_u=t,t=s),t===s&&(t=_u,"low_priority"===r.substr(_u,12).toLowerCase()?(e=r.substr(_u,12),_u+=12):(e=s,0===Uu&&Fu(ir)),e===s&&(e=null),e!==s&&Fa()!==s?("write"===r.substr(_u,5).toLowerCase()?(n=r.substr(_u,5),_u+=5):(n=s,0===Uu&&Fu(cr)),n!==s?(t=e={type:"write",prefix:e&&"low_priority"}):(_u=t,t=s)):(_u=t,t=s)),t}())!==s?(u=e,o=n,vi.add(`lock::${u.db}::${u.table}`),t=e={table:u,lock_type:o}):(_u=t,t=s),t}function es(){var t,e,n,u,o,a,i;return (t=os())===s&&(t=_u,e=_u,40===r.charCodeAt(_u)?(n="(",_u++):(n=s,0===Uu&&Fu(wr)),n!==s&&(u=Fa())!==s&&(o=es())!==s&&(a=Fa())!==s?(41===r.charCodeAt(_u)?(i=")",_u++):(i=s,0===Uu&&Fu(Er)),i!==s?e=n=[n,u,o,a,i]:(_u=e,e=s)):(_u=e,e=s),e!==s&&(e={...e[2],parentheses_symbol:!0}),t=e),t}function ns(){var t,e,n,u,o,a,i,l,f;if(t=_u,Wo()!==s)if(Fa()!==s)if((e=us())!==s){for(n=[],u=_u,(o=Fa())!==s&&(a=xa())!==s&&(i=Fa())!==s&&(l=us())!==s?u=o=[o,a,i,l]:(_u=u,u=s);u!==s;)n.push(u),u=_u,(o=Fa())!==s&&(a=xa())!==s&&(i=Fa())!==s&&(l=us())!==s?u=o=[o,a,i,l]:(_u=u,u=s);n!==s?(t=c(e,n)):(_u=t,t=s);}else _u=t,t=s;else _u=t,t=s;else _u=t,t=s;return t===s&&(t=_u,Fa()!==s&&Wo()!==s&&(e=Fa())!==s&&(n=function(){var t,e,n,u;t=_u,"RECURSIVE"===r.substr(_u,9)?(e="RECURSIVE",_u+=9):(e=s,0===Uu&&Fu(re));e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?t=e=[e,n]:(_u=t,t=s)):(_u=t,t=s);return t}())!==s&&(u=Fa())!==s&&(o=us())!==s?((f=o).recursive=!0,t=[f]):(_u=t,t=s)),t}function us(){var r,t,e,n;return r=_u,(t=uo())!==s&&Fa()!==s?((e=ss())===s&&(e=null),e!==s&&Fa()!==s&&$o()!==s&&Fa()!==s&&Ma()!==s&&Fa()!==s&&(n=Yu())!==s&&Fa()!==s&&Da()!==s?(r=t={name:t,stmt:n,columns:e}):(_u=r,r=s)):(_u=r,r=s),r}function ss(){var r,t,e,n,u,o,a,i;if(r=_u,Ma()!==s)if(Fa()!==s)if((t=eo())!==s){for(e=[],n=_u,(u=Fa())!==s&&(o=xa())!==s&&(a=Fa())!==s&&(i=eo())!==s?n=u=[u,o,a,i]:(_u=n,n=s);n!==s;)e.push(n),n=_u,(u=Fa())!==s&&(o=xa())!==s&&(a=Fa())!==s&&(i=eo())!==s?n=u=[u,o,a,i]:(_u=n,n=s);e!==s&&(n=Fa())!==s&&(u=Da())!==s?(r=c(t,e)):(_u=r,r=s);}else _u=r,r=s;else _u=r,r=s;else _u=r,r=s;return r}function os(){var t,e,n,u,o,a,i,c,l,f,b,v,d,L,C;return t=_u,Fa()!==s?((e=ns())===s&&(e=null),e!==s&&Fa()!==s&&function(){var t,e,n,u;t=_u,"select"===r.substr(_u,6).toLowerCase()?(e=r.substr(_u,6),_u+=6):(e=s,0===Uu&&Fu(qt));e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?t=e=[e,n]:(_u=t,t=s)):(_u=t,t=s);return t}()!==s&&Pa()!==s?((n=function(){var r,t,e,n,u,o;if(r=_u,(t=as())!==s){for(e=[],n=_u,(u=Fa())!==s&&(o=as())!==s?n=u=[u,o]:(_u=n,n=s);n!==s;)e.push(n),n=_u,(u=Fa())!==s&&(o=as())!==s?n=u=[u,o]:(_u=n,n=s);e!==s?(t=function(r,t){const e=[r];for(let r=0,n=t.length;r<n;++r)e.push(t[r][1]);return e}(t,e),r=t):(_u=r,r=s);}else _u=r,r=s;return r}())===s&&(n=null),n!==s&&Fa()!==s?((u=Zo())===s&&(u=null),u!==s&&Fa()!==s&&(o=is())!==s&&Fa()!==s?((a=fs())===s&&(a=null),a!==s&&Fa()!==s?((i=ys())===s&&(i=null),i!==s&&Fa()!==s?((c=function(){var t,e,n;t=_u,(e=function(){var t,e,n,u;t=_u,"group"===r.substr(_u,5).toLowerCase()?(e=r.substr(_u,5),_u+=5):(e=s,0===Uu&&Fu(ye));e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?t=e=[e,n]:(_u=t,t=s)):(_u=t,t=s);return t}())!==s&&Fa()!==s&&Vo()!==s&&Fa()!==s&&(n=Ms())!==s?(e=n.value,t=e):(_u=t,t=s);return t}())===s&&(c=null),c!==s&&Fa()!==s?((l=function(){var t,e;t=_u,function(){var t,e,n,u;t=_u,"having"===r.substr(_u,6).toLowerCase()?(e=r.substr(_u,6),_u+=6):(e=s,0===Uu&&Fu(Se));e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?t=e=[e,n]:(_u=t,t=s)):(_u=t,t=s);return t}()!==s&&Fa()!==s&&(e=Fs())!==s?(t=e):(_u=t,t=s);return t}())===s&&(l=null),l!==s&&Fa()!==s?((f=Ts())===s&&(f=null),f!==s&&Fa()!==s?((b=Is())===s&&(b=null),b!==s?(v=_u,"for"===r.substr(_u,3).toLowerCase()?(d=r.substr(_u,3),_u+=3):(d=s,0===Uu&&Fu(O)),d!==s&&(L=Fa())!==s&&(C=Ro())!==s?v=d=[d,L,C]:(_u=v,v=s),v===s&&(v=null),v!==s?(t=function(r,t,e,n,u,s,o,a,i,c,l){return u&&u.forEach(r=>r.table&&vi.add(`select::${r.db}::${r.table}`)),{with:r,type:"select",options:t,distinct:e,columns:n,from:u,where:s,groupby:o,having:a,orderby:i,limit:c,for_update:l&&`${l[0]} ${l[2][0]}`}}(e,n,u,o,a,i,c,l,f,b,v)):(_u=t,t=s)):(_u=t,t=s)):(_u=t,t=s)):(_u=t,t=s)):(_u=t,t=s)):(_u=t,t=s)):(_u=t,t=s)):(_u=t,t=s)):(_u=t,t=s)):(_u=t,t=s)):(_u=t,t=s),t}function as(){var e;return (e=function(){var t;"sql_calc_found_rows"===r.substr(_u,19).toLowerCase()?(t=r.substr(_u,19),_u+=19):(t=s,0===Uu&&Fu(su));return t}())===s&&((e=function(){var t;"sql_cache"===r.substr(_u,9).toLowerCase()?(t=r.substr(_u,9),_u+=9):(t=s,0===Uu&&Fu(ou));return t}())===s&&(e=function(){var t;"sql_no_cache"===r.substr(_u,12).toLowerCase()?(t=r.substr(_u,12),_u+=12):(t=s,0===Uu&&Fu(au));return t}()),e===s&&(e=function(){var t;"sql_big_result"===r.substr(_u,14).toLowerCase()?(t=r.substr(_u,14),_u+=14):(t=s,0===Uu&&Fu(cu));return t}())===s&&(e=function(){var t;"sql_small_result"===r.substr(_u,16).toLowerCase()?(t=r.substr(_u,16),_u+=16):(t=s,0===Uu&&Fu(iu));return t}())===s&&(e=function(){var t;"sql_buffer_result"===r.substr(_u,17).toLowerCase()?(t=r.substr(_u,17),_u+=17):(t=s,0===Uu&&Fu(lu));return t}())),e!==s&&(e=e),e}function is(){var r,t,e,n,u,o,a,i,l,f;if(r=_u,(t=qo())===s&&(t=_u,(e=Ua())!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?t=e=[e,n]:(_u=t,t=s)):(_u=t,t=s),t===s&&(t=Ua())),t!==s){for(e=[],n=_u,(u=Fa())!==s&&(o=xa())!==s&&(a=Fa())!==s&&(i=cs())!==s?n=u=[u,o,a,i]:(_u=n,n=s);n!==s;)e.push(n),n=_u,(u=Fa())!==s&&(o=xa())!==s&&(a=Fa())!==s&&(i=cs())!==s?n=u=[u,o,a,i]:(_u=n,n=s);e!==s?(l=t,f=e,di.add("select::null::(.*)"),r=t=f&&f.length>0?(l[0]={expr:{type:"column_ref",table:null,column:"*"},as:null},ii(l[0],f)):l[0]):(_u=r,r=s);}else _u=r,r=s;if(r===s)if(r=_u,(t=cs())!==s){for(e=[],n=_u,(u=Fa())!==s&&(o=xa())!==s&&(a=Fa())!==s&&(i=cs())!==s?n=u=[u,o,a,i]:(_u=n,n=s);n!==s;)e.push(n),n=_u,(u=Fa())!==s&&(o=xa())!==s&&(a=Fa())!==s&&(i=cs())!==s?n=u=[u,o,a,i]:(_u=n,n=s);e!==s?(r=t=c(t,e)):(_u=r,r=s);}else _u=r,r=s;return r}function cs(){var r,t,e,n;return r=_u,(t=ro())!==s&&Fa()!==s&&(e=Oa())!==s&&Fa()!==s&&Ua()!==s?(n=t,di.add(`select::${n}::(.*)`),r=t={expr:{type:"column_ref",table:n,column:"*"},as:null}):(_u=r,r=s),r===s&&(r=_u,(t=Fs())!==s&&Fa()!==s?((e=ls())===s&&(e=null),e!==s?(r=t={expr:t,as:e}):(_u=r,r=s)):(_u=r,r=s)),r}function ls(){var r,t,e;return r=_u,(t=$o())!==s&&Fa()!==s&&(e=function(){var r,t;r=_u,(t=uo())!==s?((function(r){if(!0===ui[r.toUpperCase()])throw new Error("Error: "+JSON.stringify(r)+" is a reserved word, can not as alias clause");return !1}(t)?s:void 0)!==s?(r=t=t):(_u=r,r=s)):(_u=r,r=s);r===s&&(r=_u,(t=to())!==s&&(t=t),r=t);return r}())!==s?(r=t=e):(_u=r,r=s),r===s&&(r=_u,(t=$o())===s&&(t=null),t!==s&&Fa()!==s&&(e=ro())!==s?(r=t=e):(_u=r,r=s)),r}function fs(){var t,e;return t=_u,function(){var t,e,n,u;t=_u,"from"===r.substr(_u,4).toLowerCase()?(e=r.substr(_u,4),_u+=4):(e=s,0===Uu&&Fu(oe));e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?t=e=[e,n]:(_u=t,t=s)):(_u=t,t=s);return t}()!==s&&Fa()!==s&&(e=Cs())!==s?(t=e):(_u=t,t=s),t}function bs(){var r,t,e;return r=_u,(t=hs())!==s&&Fa()!==s&&So()!==s&&Fa()!==s&&(e=hs())!==s?(r=t=[t,e]):(_u=r,r=s),r}function vs(){var t,e;return t=_u,Xo()!==s&&Fa()!==s?("btree"===r.substr(_u,5).toLowerCase()?(e=r.substr(_u,5),_u+=5):(e=s,0===Uu&&Fu(hr)),e===s&&("hash"===r.substr(_u,4).toLowerCase()?(e=r.substr(_u,4),_u+=4):(e=s,0===Uu&&Fu(Ar))),e!==s?(t={keyword:"using",type:e.toLowerCase()}):(_u=t,t=s)):(_u=t,t=s),t}function ds(){var r,t,e,n,u,o;if(r=_u,(t=Ls())!==s){for(e=[],n=_u,(u=Fa())!==s&&(o=Ls())!==s?n=u=[u,o]:(_u=n,n=s);n!==s;)e.push(n),n=_u,(u=Fa())!==s&&(o=Ls())!==s?n=u=[u,o]:(_u=n,n=s);e!==s?(r=t=function(r,t){const e=[r];for(let r=0;r<t.length;r++)e.push(t[r][1]);return e}(t,e)):(_u=r,r=s);}else _u=r,r=s;return r}function Ls(){var t,e,n,u,o,a;return t=_u,(e=function(){var t,e,n,u;t=_u,"key_block_size"===r.substr(_u,14).toLowerCase()?(e=r.substr(_u,14),_u+=14):(e=s,0===Uu&&Fu(Z));e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="KEY_BLOCK_SIZE"):(_u=t,t=s)):(_u=t,t=s);return t}())!==s&&Fa()!==s?((n=Ia())===s&&(n=null),n!==s&&Fa()!==s&&(u=po())!==s?(o=n,a=u,t=e={type:e.toLowerCase(),symbol:o,expr:a}):(_u=t,t=s)):(_u=t,t=s),t===s&&(t=vs())===s&&(t=_u,"with"===r.substr(_u,4).toLowerCase()?(e=r.substr(_u,4),_u+=4):(e=s,0===Uu&&Fu(yr)),e!==s&&Fa()!==s?("parser"===r.substr(_u,6).toLowerCase()?(n=r.substr(_u,6),_u+=6):(n=s,0===Uu&&Fu(Tr)),n!==s&&Fa()!==s&&(u=uo())!==s?(t=e={type:"with parser",expr:u}):(_u=t,t=s)):(_u=t,t=s),t===s&&(t=_u,"visible"===r.substr(_u,7).toLowerCase()?(e=r.substr(_u,7),_u+=7):(e=s,0===Uu&&Fu(mr)),e===s&&("invisible"===r.substr(_u,9).toLowerCase()?(e=r.substr(_u,9),_u+=9):(e=s,0===Uu&&Fu(Sr))),e!==s&&(e=function(r){return {type:r.toLowerCase(),expr:r.toLowerCase()}}(e)),(t=e)===s&&(t=Ga()))),t}function Cs(){var r,t,e,n;if(r=_u,(t=ws())!==s){for(e=[],n=ps();n!==s;)e.push(n),n=ps();e!==s?(r=t=Ir(t,e)):(_u=r,r=s);}else _u=r,r=s;return r}function ps(){var r,t,e;return r=_u,Fa()!==s&&(t=xa())!==s&&Fa()!==s&&(e=ws())!==s?(r=e):(_u=r,r=s),r===s&&(r=_u,Fa()!==s&&(t=function(){var r,t,e,n,u,o,a,i,c,l,f;if(r=_u,(t=Es())!==s)if(Fa()!==s)if((e=ws())!==s)if(Fa()!==s)if((n=Xo())!==s)if(Fa()!==s)if(Ma()!==s)if(Fa()!==s)if((u=uo())!==s){for(o=[],a=_u,(i=Fa())!==s&&(c=xa())!==s&&(l=Fa())!==s&&(f=uo())!==s?a=i=[i,c,l,f]:(_u=a,a=s);a!==s;)o.push(a),a=_u,(i=Fa())!==s&&(c=xa())!==s&&(l=Fa())!==s&&(f=uo())!==s?a=i=[i,c,l,f]:(_u=a,a=s);o!==s&&(a=Fa())!==s&&(i=Da())!==s?(b=t,d=u,L=o,(v=e).join=b,v.using=ii(d,L),r=t=v):(_u=r,r=s);}else _u=r,r=s;else _u=r,r=s;else _u=r,r=s;else _u=r,r=s;else _u=r,r=s;else _u=r,r=s;else _u=r,r=s;else _u=r,r=s;else _u=r,r=s;var b,v,d,L;r===s&&(r=_u,(t=Es())!==s&&Fa()!==s&&(e=ws())!==s&&Fa()!==s?((n=As())===s&&(n=null),n!==s?(t=function(r,t,e){return t.join=r,t.on=e,t}(t,e,n),r=t):(_u=r,r=s)):(_u=r,r=s),r===s&&(r=_u,(t=Es())!==s&&Fa()!==s&&(e=Ma())!==s&&Fa()!==s&&(n=Yu())!==s&&Fa()!==s&&Da()!==s&&Fa()!==s?((u=ls())===s&&(u=null),u!==s&&(o=Fa())!==s?((a=As())===s&&(a=null),a!==s?(t=function(r,t,e,n){return t.parentheses=!0,{expr:t,as:e,join:r,on:n}}(t,n,u,a),r=t):(_u=r,r=s)):(_u=r,r=s)):(_u=r,r=s)));return r}())!==s?(r=t):(_u=r,r=s)),r}function ws(){var t,e,n,u,o,a;return t=_u,(e=function(){var t;"dual"===r.substr(_u,4).toLowerCase()?(t=r.substr(_u,4),_u+=4):(t=s,0===Uu&&Fu(Zn));return t}())!==s&&(e={type:"dual"}),(t=e)===s&&(t=_u,(e=hs())!==s&&Fa()!==s?((n=ls())===s&&(n=null),n!==s?(a=n,t=e="var"===(o=e).type?(o.as=a,o):{db:o.db,table:o.table,as:a}):(_u=t,t=s)):(_u=t,t=s),t===s&&(t=_u,(e=Ma())!==s&&Fa()!==s&&(n=Yu())!==s&&Fa()!==s&&Da()!==s&&Fa()!==s?((u=ls())===s&&(u=null),u!==s?(t=e=function(r,t){return r.parentheses=!0,{expr:r,as:t}}(n,u)):(_u=t,t=s)):(_u=t,t=s))),t}function Es(){var t,e,n,u;return t=_u,(e=function(){var t,e,n,u;t=_u,"left"===r.substr(_u,4).toLowerCase()?(e=r.substr(_u,4),_u+=4):(e=s,0===Uu&&Fu(ve));e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?t=e=[e,n]:(_u=t,t=s)):(_u=t,t=s);return t}())!==s&&(n=Fa())!==s?((u=function(){var t,e,n,u;t=_u,"outer"===r.substr(_u,5).toLowerCase()?(e=r.substr(_u,5),_u+=5):(e=s,0===Uu&&Fu(Ce));e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?t=e=[e,n]:(_u=t,t=s)):(_u=t,t=s);return t}())===s&&(u=null),u!==s&&Fa()!==s&&jo()!==s?(t=e="LEFT JOIN"):(_u=t,t=s)):(_u=t,t=s),t===s&&(t=_u,e=_u,(n=function(){var t,e,n,u;t=_u,"inner"===r.substr(_u,5).toLowerCase()?(e=r.substr(_u,5),_u+=5):(e=s,0===Uu&&Fu(de));e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?t=e=[e,n]:(_u=t,t=s)):(_u=t,t=s);return t}())!==s&&(u=Fa())!==s?e=n=[n,u]:(_u=e,e=s),e===s&&(e=null),e!==s&&(n=jo())!==s?(t=e="INNER JOIN"):(_u=t,t=s)),t}function hs(){var r,t,e,n,u,o,a,i;return r=_u,(t=ro())!==s?(e=_u,(n=Fa())!==s&&(u=Oa())!==s&&(o=Fa())!==s&&(a=ro())!==s?e=n=[n,u,o,a]:(_u=e,e=s),e===s&&(e=null),e!==s?(r=t=function(r,t){const e={db:null,table:r};return null!==t&&(e.db=r,e.table=t[3]),e}(t,e)):(_u=r,r=s)):(_u=r,r=s),r===s&&(r=_u,(t=ri())!==s&&((i=t).db=null,i.table=i.name,t=i),r=t),r}function As(){var r,t;return r=_u,Go()!==s&&Fa()!==s&&(t=Fs())!==s?(r=t):(_u=r,r=s),r}function ys(){var t,e;return t=_u,function(){var t,e,n,u;t=_u,"where"===r.substr(_u,5).toLowerCase()?(e=r.substr(_u,5),_u+=5):(e=s,0===Uu&&Fu(Ae));e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?t=e=[e,n]:(_u=t,t=s)):(_u=t,t=s);return t}()!==s&&Fa()!==s?((e=function(){var r,t,e,n,u,o,a,i;if(r=_u,(t=Gs())!==s){for(e=[],n=_u,(u=Fa())!==s?((o=na())===s&&(o=ua()),o!==s&&(a=Fa())!==s&&(i=Gs())!==s?n=u=[u,o,a,i]:(_u=n,n=s)):(_u=n,n=s);n!==s;)e.push(n),n=_u,(u=Fa())!==s?((o=na())===s&&(o=ua()),o!==s&&(a=Fa())!==s&&(i=Gs())!==s?n=u=[u,o,a,i]:(_u=n,n=s)):(_u=n,n=s);e!==s?(t=ci(t,e),r=t):(_u=r,r=s);}else _u=r,r=s;return r}())===s&&(e=Fs()),e!==s?(t=e):(_u=t,t=s)):(_u=t,t=s),t}function Ts(){var t,e;return t=_u,function(){var t,e,n,u;t=_u,"order"===r.substr(_u,5).toLowerCase()?(e=r.substr(_u,5),_u+=5):(e=s,0===Uu&&Fu(me));e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?t=e=[e,n]:(_u=t,t=s)):(_u=t,t=s);return t}()!==s&&Fa()!==s&&Vo()!==s&&Fa()!==s&&(e=function(){var r,t,e,n,u,o,a,i;if(r=_u,(t=ms())!==s){for(e=[],n=_u,(u=Fa())!==s&&(o=xa())!==s&&(a=Fa())!==s&&(i=ms())!==s?n=u=[u,o,a,i]:(_u=n,n=s);n!==s;)e.push(n),n=_u,(u=Fa())!==s&&(o=xa())!==s&&(a=Fa())!==s&&(i=ms())!==s?n=u=[u,o,a,i]:(_u=n,n=s);e!==s?(t=c(t,e),r=t):(_u=r,r=s);}else _u=r,r=s;return r}())!==s?(t=e):(_u=t,t=s),t}function ms(){var t,e,n;return t=_u,(e=Fs())!==s&&Fa()!==s?((n=Ko())===s&&(n=function(){var t,e,n,u;t=_u,"asc"===r.substr(_u,3).toLowerCase()?(e=r.substr(_u,3),_u+=3):(e=s,0===Uu&&Fu(Re));e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="ASC"):(_u=t,t=s)):(_u=t,t=s);return t}()),n===s&&(n=null),n!==s?(t=e=function(r,t){const e={expr:r,type:"ASC"};return "DESC"===t&&(e.type="DESC"),e}(e,n)):(_u=t,t=s)):(_u=t,t=s),t}function Ss(){var r;return (r=po())===s&&(r=io()),r}function Is(){var t,e,n,u,o,a;return t=_u,function(){var t,e,n,u;t=_u,"limit"===r.substr(_u,5).toLowerCase()?(e=r.substr(_u,5),_u+=5):(e=s,0===Uu&&Fu(Ie));e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?t=e=[e,n]:(_u=t,t=s)):(_u=t,t=s);return t}()!==s&&Fa()!==s&&(e=Ss())!==s&&Fa()!==s?(n=_u,(u=xa())===s&&(u=function(){var t,e,n,u;t=_u,"offset"===r.substr(_u,6).toLowerCase()?(e=r.substr(_u,6),_u+=6):(e=s,0===Uu&&Fu(Ne));e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="OFFSET"):(_u=t,t=s)):(_u=t,t=s);return t}()),u!==s&&(o=Fa())!==s&&(a=Ss())!==s?n=u=[u,o,a]:(_u=n,n=s),n===s&&(n=null),n!==s?(t=function(r,t){const e=[r];return t&&e.push(t[2]),{seperator:t&&t[0]&&t[0].toLowerCase()||"",value:e}}(e,n)):(_u=t,t=s)):(_u=t,t=s),t}function Ns(){var r,t,e,n,u,o,a,i;if(r=_u,(t=Rs())!==s){for(e=[],n=_u,(u=Fa())!==s&&(o=xa())!==s&&(a=Fa())!==s&&(i=Rs())!==s?n=u=[u,o,a,i]:(_u=n,n=s);n!==s;)e.push(n),n=_u,(u=Fa())!==s&&(o=xa())!==s&&(a=Fa())!==s&&(i=Rs())!==s?n=u=[u,o,a,i]:(_u=n,n=s);e!==s?(r=t=c(t,e)):(_u=r,r=s);}else _u=r,r=s;return r}function Rs(){var t,e,n,u,o,a,i,c,l;return t=_u,e=_u,(n=ro())!==s&&(u=Fa())!==s&&(o=Oa())!==s?e=n=[n,u,o]:(_u=e,e=s),e===s&&(e=null),e!==s&&(n=Fa())!==s&&(u=eo())!==s&&(o=Fa())!==s?(61===r.charCodeAt(_u)?(a="=",_u++):(a=s,0===Uu&&Fu(Nr)),a!==s&&Fa()!==s&&(i=Ks())!==s?(t=e={column:u,value:i,table:(l=e)&&l[0]}):(_u=t,t=s)):(_u=t,t=s),t===s&&(t=_u,e=_u,(n=ro())!==s&&(u=Fa())!==s&&(o=Oa())!==s?e=n=[n,u,o]:(_u=e,e=s),e===s&&(e=null),e!==s&&(n=Fa())!==s&&(u=eo())!==s&&(o=Fa())!==s?(61===r.charCodeAt(_u)?(a="=",_u++):(a=s,0===Uu&&Fu(Nr)),a!==s&&Fa()!==s&&(i=Bo())!==s&&Fa()!==s&&Ma()!==s&&Fa()!==s&&(c=Qs())!==s&&Fa()!==s&&Da()!==s?(t=e=function(r,t,e){return {column:t,value:e,table:r&&r[0],keyword:"values"}}(e,u,c)):(_u=t,t=s)):(_u=t,t=s)),t}function _s(){var r;return (r=function(){var r,t;r=_u,Bo()!==s&&Fa()!==s&&(t=function(){var r,t,e,n,u,o,a,i;if(r=_u,(t=Us())!==s){for(e=[],n=_u,(u=Fa())!==s&&(o=xa())!==s&&(a=Fa())!==s&&(i=Us())!==s?n=u=[u,o,a,i]:(_u=n,n=s);n!==s;)e.push(n),n=_u,(u=Fa())!==s&&(o=xa())!==s&&(a=Fa())!==s&&(i=Us())!==s?n=u=[u,o,a,i]:(_u=n,n=s);e!==s?(t=c(t,e),r=t):(_u=r,r=s);}else _u=r,r=s;return r}())!==s?(r=t):(_u=r,r=s);return r}())===s&&(r=os()),r}function gs(){var r,t,e,n,u,o,a,i,c;if(r=_u,Mo()!==s)if(Fa()!==s)if((t=Ma())!==s)if(Fa()!==s)if((e=uo())!==s){for(n=[],u=_u,(o=Fa())!==s&&(a=xa())!==s&&(i=Fa())!==s&&(c=uo())!==s?u=o=[o,a,i,c]:(_u=u,u=s);u!==s;)n.push(u),u=_u,(o=Fa())!==s&&(a=xa())!==s&&(i=Fa())!==s&&(c=uo())!==s?u=o=[o,a,i,c]:(_u=u,u=s);n!==s&&(u=Fa())!==s&&(o=Da())!==s?(r=ii(e,n)):(_u=r,r=s);}else _u=r,r=s;else _u=r,r=s;else _u=r,r=s;else _u=r,r=s;else _u=r,r=s;return r===s&&(r=_u,Mo()!==s&&Fa()!==s&&(t=Us())!==s?(r=t):(_u=r,r=s)),r}function Os(){var t,e,n;return t=_u,Go()!==s&&Fa()!==s?("duplicate"===r.substr(_u,9).toLowerCase()?(e=r.substr(_u,9),_u+=9):(e=s,0===Uu&&Fu(Rr)),e!==s&&Fa()!==s&&_a()!==s&&Fa()!==s&&Ro()!==s&&Fa()!==s&&(n=Ns())!==s?(t={keyword:"on duplicate key update",set:n}):(_u=t,t=s)):(_u=t,t=s),t}function xs(){var t,e;return t=_u,(e=function(){var t,e,n,u;t=_u,"insert"===r.substr(_u,6).toLowerCase()?(e=r.substr(_u,6),_u+=6):(e=s,0===Uu&&Fu(Qt));e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?t=e=[e,n]:(_u=t,t=s)):(_u=t,t=s);return t}())!==s&&(e="insert"),(t=e)===s&&(t=_u,(e=xo())!==s&&(e="replace"),t=e),t}function Us(){var r,t;return r=_u,Ma()!==s&&Fa()!==s&&(t=Ms())!==s&&Fa()!==s&&Da()!==s?(r=t):(_u=r,r=s),r}function Ms(){var r,t,e,n,u,o,a,i;if(r=_u,(t=Fs())!==s){for(e=[],n=_u,(u=Fa())!==s&&(o=xa())!==s&&(a=Fa())!==s&&(i=Fs())!==s?n=u=[u,o,a,i]:(_u=n,n=s);n!==s;)e.push(n),n=_u,(u=Fa())!==s&&(o=xa())!==s&&(a=Fa())!==s&&(i=Fs())!==s?n=u=[u,o,a,i]:(_u=n,n=s);e!==s?(r=t=function(r,t){const e={type:"expr_list"};return e.value=ii(r,t),e}(t,e)):(_u=r,r=s);}else _u=r,r=s;return r}function Ds(){var t,e,n;return t=_u,function(){var t,e,n,u;t=_u,"interval"===r.substr(_u,8).toLowerCase()?(e=r.substr(_u,8),_u+=8):(e=s,0===Uu&&Fu(_n));e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="INTERVAL"):(_u=t,t=s)):(_u=t,t=s);return t}()!==s&&Fa()!==s&&(e=Fs())!==s&&Fa()!==s&&(n=function(){var t;(t=function(){var t,e,n,u;t=_u,"year"===r.substr(_u,4).toLowerCase()?(e=r.substr(_u,4),_u+=4):(e=s,0===Uu&&Fu(gn));e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="YEAR"):(_u=t,t=s)):(_u=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=_u,"month"===r.substr(_u,5).toLowerCase()?(e=r.substr(_u,5),_u+=5):(e=s,0===Uu&&Fu(On));e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="MONTH"):(_u=t,t=s)):(_u=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=_u,"day"===r.substr(_u,3).toLowerCase()?(e=r.substr(_u,3),_u+=3):(e=s,0===Uu&&Fu(xn));e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="DAY"):(_u=t,t=s)):(_u=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=_u,"hour"===r.substr(_u,4).toLowerCase()?(e=r.substr(_u,4),_u+=4):(e=s,0===Uu&&Fu(Un));e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="HOUR"):(_u=t,t=s)):(_u=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=_u,"minute"===r.substr(_u,6).toLowerCase()?(e=r.substr(_u,6),_u+=6):(e=s,0===Uu&&Fu(Mn));e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="MINUTE"):(_u=t,t=s)):(_u=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=_u,"second"===r.substr(_u,6).toLowerCase()?(e=r.substr(_u,6),_u+=6):(e=s,0===Uu&&Fu(Dn));e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="SECOND"):(_u=t,t=s)):(_u=t,t=s);return t}());return t}())!==s?(t={type:"interval",expr:e,unit:n.toLowerCase()}):(_u=t,t=s),t}function ks(){var t,e,n,u,o,a,i,c,l;if(t=_u,sa()!==s)if(Fa()!==s)if((e=Fs())===s&&(e=null),e!==s)if(Fa()!==s){if(n=[],(u=$s())!==s)for(;u!==s;)n.push(u),u=$s();else n=s;n!==s&&(u=Fa())!==s?((o=function(){var t,e;t=_u,function(){var t,e,n,u;t=_u,"else"===r.substr(_u,4).toLowerCase()?(e=r.substr(_u,4),_u+=4):(e=s,0===Uu&&Fu(ze));e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?t=e=[e,n]:(_u=t,t=s)):(_u=t,t=s);return t}()!==s&&Fa()!==s&&(e=Fs())!==s?(t={type:"else",result:e}):(_u=t,t=s);return t}())===s&&(o=null),o!==s&&Fa()!==s&&function(){var t,e,n,u;t=_u,"end"===r.substr(_u,3).toLowerCase()?(e=r.substr(_u,3),_u+=3):(e=s,0===Uu&&Fu(Je));e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?t=e=[e,n]:(_u=t,t=s)):(_u=t,t=s);return t}()!==s&&Fa()!==s?((a=sa())===s&&(a=null),a!==s?(i=e,c=n,(l=o)&&c.push(l),t={type:"case",expr:i||null,args:c}):(_u=t,t=s)):(_u=t,t=s)):(_u=t,t=s);}else _u=t,t=s;else _u=t,t=s;else _u=t,t=s;else _u=t,t=s;return t}function $s(){var t,e,n;return t=_u,function(){var t,e,n,u;t=_u,"when"===r.substr(_u,4).toLowerCase()?(e=r.substr(_u,4),_u+=4):(e=s,0===Uu&&Fu(qe));e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?t=e=[e,n]:(_u=t,t=s)):(_u=t,t=s);return t}()!==s&&Fa()!==s&&(e=Fs())!==s&&Fa()!==s&&function(){var t,e,n,u;t=_u,"then"===r.substr(_u,4).toLowerCase()?(e=r.substr(_u,4),_u+=4):(e=s,0===Uu&&Fu(Ze));e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?t=e=[e,n]:(_u=t,t=s)):(_u=t,t=s);return t}()!==s&&Fa()!==s&&(n=Fs())!==s?(t={type:"when",cond:e,result:n}):(_u=t,t=s),t}function Fs(){var r;return (r=function(){var r,t,e,n,u,o,a,i;if(r=_u,(t=Js())!==s){if(e=[],n=_u,(u=Fa())!==s&&(o=$a())!==s&&(a=Fa())!==s&&(i=Js())!==s?n=u=[u,o,a,i]:(_u=n,n=s),n!==s)for(;n!==s;)e.push(n),n=_u,(u=Fa())!==s&&(o=$a())!==s&&(a=Fa())!==s&&(i=Js())!==s?n=u=[u,o,a,i]:(_u=n,n=s);else e=s;e!==s?(t=ci(t,e),r=t):(_u=r,r=s);}else _u=r,r=s;return r}())===s&&(r=function(){var r,t,e,n,u,o;if(r=_u,(t=qs())!==s){if(e=[],n=_u,(u=Fa())!==s&&(o=Js())!==s?n=u=[u,o]:(_u=n,n=s),n!==s)for(;n!==s;)e.push(n),n=_u,(u=Fa())!==s&&(o=Js())!==s?n=u=[u,o]:(_u=n,n=s);else e=s;e!==s?(t=si(t,e[0][1]),r=t):(_u=r,r=s);}else _u=r,r=s;return r}())===s&&(r=Ps()),r}function Ps(){var r,t,e,n,u,o,a,i;if(r=_u,(t=Hs())!==s){for(e=[],n=_u,(u=Pa())!==s&&(o=ua())!==s&&(a=Fa())!==s&&(i=Hs())!==s?n=u=[u,o,a,i]:(_u=n,n=s);n!==s;)e.push(n),n=_u,(u=Pa())!==s&&(o=ua())!==s&&(a=Fa())!==s&&(i=Hs())!==s?n=u=[u,o,a,i]:(_u=n,n=s);e!==s?(r=t=_r(t,e)):(_u=r,r=s);}else _u=r,r=s;return r}function Hs(){var r,t,e,n,u,o,a,i;if(r=_u,(t=js())!==s){for(e=[],n=_u,(u=Pa())!==s&&(o=na())!==s&&(a=Fa())!==s&&(i=js())!==s?n=u=[u,o,a,i]:(_u=n,n=s);n!==s;)e.push(n),n=_u,(u=Pa())!==s&&(o=na())!==s&&(a=Fa())!==s&&(i=js())!==s?n=u=[u,o,a,i]:(_u=n,n=s);e!==s?(r=t=_r(t,e)):(_u=r,r=s);}else _u=r,r=s;return r}function Gs(){var r,t,e,n,u,o;return r=_u,(t=Ma())===s&&(t=null),t!==s&&Fa()!==s&&(e=Ps())!==s&&Fa()!==s?((n=Da())===s&&(n=null),n!==s?((function(r,t,e){if(r&&!e||!r&&e)return !0}(t,0,n)?s:void 0)!==s?(u=e,o=n,t&&o&&(u.parentheses=!0),r=t=u):(_u=r,r=s)):(_u=r,r=s)):(_u=r,r=s),r}function js(){var t,e,n,u,o;return (t=Ys())===s&&(t=function(){var r,t,e;r=_u,(t=function(){var r,t,e,n,u;r=_u,t=_u,(e=ea())!==s&&(n=Fa())!==s&&(u=ta())!==s?t=e=[e,n,u]:(_u=t,t=s);t!==s&&(t=Or(t));(r=t)===s&&(r=ta());return r}())!==s&&Fa()!==s&&Ma()!==s&&Fa()!==s&&(e=Yu())!==s&&Fa()!==s&&Da()!==s?(n=t,(u=e).parentheses=!0,t=si(n,u),r=t):(_u=r,r=s);var n,u;return r}())===s&&(t=_u,(e=ea())===s&&(e=_u,33===r.charCodeAt(_u)?(n="!",_u++):(n=s,0===Uu&&Fu(gr)),n!==s?(u=_u,Uu++,61===r.charCodeAt(_u)?(o="=",_u++):(o=s,0===Uu&&Fu(Nr)),Uu--,o===s?u=void 0:(_u=u,u=s),u!==s?e=n=[n,u]:(_u=e,e=s)):(_u=e,e=s)),e!==s&&(n=Fa())!==s&&(u=js())!==s?(t=e=si("NOT",u)):(_u=t,t=s)),t}function Ys(){var t,e,n,u,o;return t=_u,(e=Ks())!==s&&Fa()!==s?((n=function(){var t;(t=function(){var t,e,n,u,o,a;t=[],e=_u,(n=Fa())!==s&&(u=Bs())!==s&&(o=Fa())!==s&&(a=Ks())!==s?e=n=[n,u,o,a]:(_u=e,e=s);if(e!==s)for(;e!==s;)t.push(e),e=_u,(n=Fa())!==s&&(u=Bs())!==s&&(o=Fa())!==s&&(a=Ks())!==s?e=n=[n,u,o,a]:(_u=e,e=s);else t=s;t!==s&&(t={type:"arithmetic",tail:t});return t}())===s&&(t=Vs())===s&&(t=function(){var r,t,e,n;r=_u,(t=function(){var r,t,e,n,u;r=_u,t=_u,(e=ea())!==s&&(n=Fa())!==s&&(u=zo())!==s?t=e=[e,n,u]:(_u=t,t=s);t!==s&&(t=Or(t));(r=t)===s&&(r=zo());return r}())!==s&&Fa()!==s&&(e=Ks())!==s&&Fa()!==s&&na()!==s&&Fa()!==s&&(n=Ks())!==s?(r=t={op:t,right:{type:"expr_list",value:[e,n]}}):(_u=r,r=s);return r}())===s&&(t=function(){var r,t,e,n,u;r=_u,(t=Qo())!==s&&(e=Fa())!==s&&(n=Ks())!==s?(r=t={op:"IS",right:n}):(_u=r,r=s);r===s&&(r=_u,t=_u,(e=Qo())!==s&&(n=Fa())!==s&&(u=ea())!==s?t=e=[e,n,u]:(_u=t,t=s),t!==s&&(e=Fa())!==s&&(n=Ks())!==s?(t=function(r){return {op:"IS NOT",right:r}}(n),r=t):(_u=r,r=s));return r}())===s&&(t=Ws())===s&&(t=function(){var t,e,n,u;t=_u,(e=function(){var t,e,n;t=_u,(e=ea())===s&&(e=null);e!==s&&Fa()!==s?((n=function(){var t,e,n,u;t=_u,"regexp"===r.substr(_u,6).toLowerCase()?(e=r.substr(_u,6),_u+=6):(e=s,0===Uu&&Fu(Fe));e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="REGEXP"):(_u=t,t=s)):(_u=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=_u,"rlike"===r.substr(_u,5).toLowerCase()?(e=r.substr(_u,5),_u+=5):(e=s,0===Uu&&Fu($e));e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="RLIKE"):(_u=t,t=s)):(_u=t,t=s);return t}()),n!==s?(o=n,t=e=(u=e)?`${u} ${o}`:o):(_u=t,t=s)):(_u=t,t=s);var u,o;return t}())!==s&&Fa()!==s?("binary"===r.substr(_u,6).toLowerCase()?(n=r.substr(_u,6),_u+=6):(n=s,0===Uu&&Fu(fr)),n===s&&(n=null),n!==s&&Fa()!==s&&(u=bo())!==s?(o=e,t=e={op:(a=n)?`${o} ${a}`:o,right:u}):(_u=t,t=s)):(_u=t,t=s);var o,a;return t}());return t}())===s&&(n=null),n!==s?(u=e,t=e=null===(o=n)?u:"arithmetic"===o.type?ci(u,o.tail):oi(o.op,u,o.right)):(_u=t,t=s)):(_u=t,t=s),t===s&&(t=bo())===s&&(t=Qs()),t}function Bs(){var t;return ">="===r.substr(_u,2)?(t=">=",_u+=2):(t=s,0===Uu&&Fu(xr)),t===s&&(62===r.charCodeAt(_u)?(t=">",_u++):(t=s,0===Uu&&Fu(Ur)),t===s&&("<="===r.substr(_u,2)?(t="<=",_u+=2):(t=s,0===Uu&&Fu(Mr)),t===s&&("<>"===r.substr(_u,2)?(t="<>",_u+=2):(t=s,0===Uu&&Fu(Dr)),t===s&&(60===r.charCodeAt(_u)?(t="<",_u++):(t=s,0===Uu&&Fu(kr)),t===s&&(61===r.charCodeAt(_u)?(t="=",_u++):(t=s,0===Uu&&Fu(Nr)),t===s&&("!="===r.substr(_u,2)?(t="!=",_u+=2):(t=s,0===Uu&&Fu($r)))))))),t}function Xs(){var r,t,e,n,u;return r=_u,t=_u,(e=ea())!==s&&(n=Fa())!==s&&(u=Jo())!==s?t=e=[e,n,u]:(_u=t,t=s),t!==s&&(t=Or(t)),(r=t)===s&&(r=Jo()),r}function Ws(){var r,t,e;return r=_u,(t=function(){var r,t,e,n,u;return r=_u,t=_u,(e=ea())!==s&&(n=Fa())!==s&&(u=ra())!==s?t=e=[e,n,u]:(_u=t,t=s),t!==s&&(t=Or(t)),(r=t)===s&&(r=ra()),r}())!==s&&Fa()!==s?((e=lo())===s&&(e=Ys()),e!==s?(r=t={op:t,right:e}):(_u=r,r=s)):(_u=r,r=s),r}function Vs(){var r,t,e,n;return r=_u,(t=Xs())!==s&&Fa()!==s&&(e=Ma())!==s&&Fa()!==s&&(n=Ms())!==s&&Fa()!==s&&Da()!==s?(r=t={op:t,right:n}):(_u=r,r=s),r===s&&(r=_u,(t=Xs())!==s&&Fa()!==s?((e=ri())===s&&(e=bo()),e!==s?(r=t=function(r,t){return {op:r,right:t}}(t,e)):(_u=r,r=s)):(_u=r,r=s)),r}function Ks(){var r,t,e,n,u,o,a,i;if(r=_u,(t=Zs())!==s){for(e=[],n=_u,(u=Fa())!==s&&(o=qs())!==s&&(a=Fa())!==s&&(i=Zs())!==s?n=u=[u,o,a,i]:(_u=n,n=s);n!==s;)e.push(n),n=_u,(u=Fa())!==s&&(o=qs())!==s&&(a=Fa())!==s&&(i=Zs())!==s?n=u=[u,o,a,i]:(_u=n,n=s);e!==s?(r=t=_r(t,e)):(_u=r,r=s);}else _u=r,r=s;return r}function qs(){var t;return 43===r.charCodeAt(_u)?(t="+",_u++):(t=s,0===Uu&&Fu(Fr)),t===s&&(45===r.charCodeAt(_u)?(t="-",_u++):(t=s,0===Uu&&Fu(Pr))),t}function Zs(){var r,t,e,n,u,o,a,i;if(r=_u,(t=Js())!==s){for(e=[],n=_u,(u=Fa())!==s&&(o=zs())!==s&&(a=Fa())!==s&&(i=Js())!==s?n=u=[u,o,a,i]:(_u=n,n=s);n!==s;)e.push(n),n=_u,(u=Fa())!==s&&(o=zs())!==s&&(a=Fa())!==s&&(i=Js())!==s?n=u=[u,o,a,i]:(_u=n,n=s);e!==s?(r=t=ci(t,e)):(_u=r,r=s);}else _u=r,r=s;return r}function zs(){var t;return 42===r.charCodeAt(_u)?(t="*",_u++):(t=s,0===Uu&&Fu(Hr)),t===s&&(47===r.charCodeAt(_u)?(t="/",_u++):(t=s,0===Uu&&Fu(Gr)),t===s&&(37===r.charCodeAt(_u)?(t="%",_u++):(t=s,0===Uu&&Fu(jr)))),t}function Js(){var t,e,n,u,o,a,i,c,l,f,b,v;if((t=function(){var t,e,n,u,o,a,i;t=_u,(e=oa())!==s&&Fa()!==s&&Ma()!==s&&Fa()!==s&&(n=Fs())!==s&&Fa()!==s&&$o()!==s&&Fa()!==s&&(u=ei())!==s&&Fa()!==s&&(o=Da())!==s?(t=e={type:"cast",expr:n,symbol:"as",target:u}):(_u=t,t=s);t===s&&(t=_u,(e=oa())!==s&&Fa()!==s&&Ma()!==s&&Fa()!==s&&(n=Fs())!==s&&Fa()!==s&&$o()!==s&&Fa()!==s&&(u=la())!==s&&Fa()!==s&&(o=Ma())!==s&&Fa()!==s&&(a=wo())!==s&&Fa()!==s&&Da()!==s&&Fa()!==s&&(i=Da())!==s?(e=function(r,t){return {type:"cast",expr:r,symbol:"as",target:{dataType:"DECIMAL("+t+")"}}}(n,a),t=e):(_u=t,t=s),t===s&&(t=_u,(e=oa())!==s&&Fa()!==s&&Ma()!==s&&Fa()!==s&&(n=Fs())!==s&&Fa()!==s&&$o()!==s&&Fa()!==s&&(u=la())!==s&&Fa()!==s&&(o=Ma())!==s&&Fa()!==s&&(a=wo())!==s&&Fa()!==s&&xa()!==s&&Fa()!==s&&(i=wo())!==s&&Fa()!==s&&Da()!==s&&Fa()!==s&&Da()!==s?(e=function(r,t,e){return {type:"cast",expr:r,symbol:"as",target:{dataType:"DECIMAL("+t+", "+e+")"}}}(n,a,i),t=e):(_u=t,t=s),t===s&&(t=_u,(e=oa())!==s&&Fa()!==s&&Ma()!==s&&Fa()!==s&&(n=Fs())!==s&&Fa()!==s&&$o()!==s&&Fa()!==s&&(u=function(){var t;(t=function(){var t,e,n,u;t=_u,"signed"===r.substr(_u,6).toLowerCase()?(e=r.substr(_u,6),_u+=6):(e=s,0===Uu&&Fu(sn));e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="SIGNED"):(_u=t,t=s)):(_u=t,t=s);return t}())===s&&(t=fa());return t}())!==s&&Fa()!==s?((o=va())===s&&(o=null),o!==s&&Fa()!==s&&(a=Da())!==s?(e=function(r,t,e){return {type:"cast",expr:r,symbol:"as",target:{dataType:t+(e?" "+e:"")}}}(n,u,o),t=e):(_u=t,t=s)):(_u=t,t=s))));return t}())===s&&(t=lo())===s&&(t=function(){var t;(t=function(){var t,e,n,u;t=_u,(e=function(){var t,e,n,u;t=_u,"count"===r.substr(_u,5).toLowerCase()?(e=r.substr(_u,5),_u+=5):(e=s,0===Uu&&Fu(je));e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="COUNT"):(_u=t,t=s)):(_u=t,t=s);return t}())!==s&&Fa()!==s&&Ma()!==s&&Fa()!==s&&(n=function(){var t,e,n;t=_u,(e=function(){var e;42===r.charCodeAt(_u)?(e="*",_u++):(e=s,0===Uu&&Fu(Hr));e!==s&&(e={type:"star",value:"*"});return e}())!==s&&(e={expr:e});(t=e)===s&&(t=_u,(e=Zo())===s&&(e=null),e!==s&&Fa()!==s&&(n=Qs())!==s?(t=e={distinct:e,expr:n}):(_u=t,t=s));return t}())!==s&&Fa()!==s&&Da()!==s&&Fa()!==s?((u=co())===s&&(u=null),u!==s?(e=function(r,t,e){return {type:"aggr_func",name:r,args:t,over:e}}(e,n,u),t=e):(_u=t,t=s)):(_u=t,t=s);return t}())===s&&(t=function(){var t,e,n;t=_u,(e=function(){var t;(t=function(){var t,e,n,u;t=_u,"sum"===r.substr(_u,3).toLowerCase()?(e=r.substr(_u,3),_u+=3):(e=s,0===Uu&&Fu(Xe));e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="SUM"):(_u=t,t=s)):(_u=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=_u,"max"===r.substr(_u,3).toLowerCase()?(e=r.substr(_u,3),_u+=3):(e=s,0===Uu&&Fu(Ye));e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="MAX"):(_u=t,t=s)):(_u=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=_u,"min"===r.substr(_u,3).toLowerCase()?(e=r.substr(_u,3),_u+=3):(e=s,0===Uu&&Fu(Be));e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="MIN"):(_u=t,t=s)):(_u=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=_u,"avg"===r.substr(_u,3).toLowerCase()?(e=r.substr(_u,3),_u+=3):(e=s,0===Uu&&Fu(We));e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="AVG"):(_u=t,t=s)):(_u=t,t=s);return t}());return t}())!==s&&Fa()!==s&&Ma()!==s&&Fa()!==s&&(n=Ks())!==s&&Fa()!==s&&Da()!==s?(t=e={type:"aggr_func",name:e,args:{expr:n}}):(_u=t,t=s);return t}());return t}())===s&&(t=function(){var t,e,n,u;t=_u,(e=za())!==s&&Fa()!==s&&Ma()!==s&&Fa()!==s?((n=Ms())===s&&(n=null),n!==s&&Fa()!==s&&Da()!==s&&Fa()!==s?((u=co())===s&&(u=null),u!==s?(e=it(e,n,u),t=e):(_u=t,t=s)):(_u=t,t=s)):(_u=t,t=s);t===s&&(t=_u,(e=function(){var t;(t=function(){var t,e,n,u;t=_u,"current_date"===r.substr(_u,12).toLowerCase()?(e=r.substr(_u,12),_u+=12):(e=s,0===Uu&&Fu(Rn));e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="CURRENT_DATE"):(_u=t,t=s)):(_u=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=_u,"current_time"===r.substr(_u,12).toLowerCase()?(e=r.substr(_u,12),_u+=12):(e=s,0===Uu&&Fu(kn));e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="CURRENT_TIME"):(_u=t,t=s)):(_u=t,t=s);return t}())===s&&(t=Ta())===s&&(t=function(){var t,e,n,u;t=_u,"current_user"===r.substr(_u,12).toLowerCase()?(e=r.substr(_u,12),_u+=12):(e=s,0===Uu&&Fu(Fn));e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="CURRENT_USER"):(_u=t,t=s)):(_u=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=_u,"user"===r.substr(_u,4).toLowerCase()?(e=r.substr(_u,4),_u+=4):(e=s,0===Uu&&Fu(Nn));e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="USER"):(_u=t,t=s)):(_u=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=_u,"session_user"===r.substr(_u,12).toLowerCase()?(e=r.substr(_u,12),_u+=12):(e=s,0===Uu&&Fu(Pn));e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="SESSION_USER"):(_u=t,t=s)):(_u=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=_u,"system_user"===r.substr(_u,11).toLowerCase()?(e=r.substr(_u,11),_u+=11):(e=s,0===Uu&&Fu(Hn));e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="SYSTEM_USER"):(_u=t,t=s)):(_u=t,t=s);return t}());return t}())!==s&&Fa()!==s&&Ma()!==s&&Fa()!==s?((n=Ms())===s&&(n=null),n!==s&&Fa()!==s&&Da()!==s&&Fa()!==s?((u=co())===s&&(u=null),u!==s?(e=it(e,n,u),t=e):(_u=t,t=s)):(_u=t,t=s)):(_u=t,t=s));return t}())===s&&(t=ks())===s&&(t=Ds())===s&&(t=Qs())===s&&(t=io())===s){if(t=_u,Ma()!==s)if((e=Fa())!==s)if((n=Fs())!==s)if(Fa()!==s)if(Da()!==s){for(u=[],o=_u,(a=Pa())!==s?((i=na())===s&&(i=ua()),i!==s&&(c=Fa())!==s&&(l=Ps())!==s?o=a=[a,i,c,l]:(_u=o,o=s)):(_u=o,o=s);o!==s;)u.push(o),o=_u,(a=Pa())!==s?((i=na())===s&&(i=ua()),i!==s&&(c=Fa())!==s&&(l=Ps())!==s?o=a=[a,i,c,l]:(_u=o,o=s)):(_u=o,o=s);u!==s?(v=u,(b=n).parentheses=!0,t=v&&0!==v.length?ci(b,v):b):(_u=t,t=s);}else _u=t,t=s;else _u=t,t=s;else _u=t,t=s;else _u=t,t=s;else _u=t,t=s;t===s&&(t=_u,Ma()!==s&&(e=Fa())!==s&&(n=Ms())!==s&&Fa()!==s&&Da()!==s?((f=n).parentheses=!0,t=f):(_u=t,t=s),t===s&&(t=ri())===s&&(t=_u,Fa()!==s?(63===r.charCodeAt(_u)?(e="?",_u++):(e=s,0===Uu&&Fu(Yr)),e!==s?(t={type:"origin",value:e}):(_u=t,t=s)):(_u=t,t=s)));}return t}function Qs(){var t,e,n,u,o,a,i,c,l,f;return t=_u,e=_u,(n=ro())!==s&&(u=Fa())!==s&&(o=Oa())!==s&&(a=Fa())!==s?e=n=[n,u,o,a]:(_u=e,e=s),e===s&&(e=null),e!==s&&(n=eo())!==s&&(u=Fa())!==s?((o=function(){var t;"->>"===r.substr(_u,3)?(t="->>",_u+=3):(t=s,0===Uu&&Fu(Cu));return t}())===s&&(o=function(){var t;"->"===r.substr(_u,2)?(t="->",_u+=2):(t=s,0===Uu&&Fu(Lu));return t}()),o!==s&&(a=Fa())!==s?((i=bo())===s&&(i=po()),i!==s&&Fa()!==s?((c=Wu())===s&&(c=null),c!==s?(t=e=function(r,t,e,n,u){const s=r&&r[0]||null;return di.add(`select::${s}::${t}`),{type:"column_ref",table:s,column:t,collate:u,arrow:e,property:n}}(e,n,o,i,c)):(_u=t,t=s)):(_u=t,t=s)):(_u=t,t=s)):(_u=t,t=s),t===s&&(t=_u,(e=ro())!==s&&(n=Fa())!==s&&(u=Oa())!==s&&(o=Fa())!==s&&(a=function(){var r,t;r=_u,(t=no())!==s&&(t=t);(r=t)===s&&(r=to());return r}())!==s?(l=e,f=a,di.add(`select::${l}::${f}`),t=e={type:"column_ref",table:l,column:f}):(_u=t,t=s),t===s&&(t=_u,(e=eo())!==s&&(e=function(r){return di.add("select::null::"+r),{type:"column_ref",table:null,column:r}}(e)),t=e)),t}function ro(){var r,t;return r=_u,(t=uo())!==s?((Br(t)?s:void 0)!==s?(r=t=t):(_u=r,r=s)):(_u=r,r=s),r===s&&(r=_u,(t=to())!==s&&(t=t),r=t),r}function to(){var t;return (t=function(){var t,e,n,u;t=_u,34===r.charCodeAt(_u)?(e='"',_u++):(e=s,0===Uu&&Fu(Xr));if(e!==s){if(n=[],Wr.test(r.charAt(_u))?(u=r.charAt(_u),_u++):(u=s,0===Uu&&Fu(Vr)),u!==s)for(;u!==s;)n.push(u),Wr.test(r.charAt(_u))?(u=r.charAt(_u),_u++):(u=s,0===Uu&&Fu(Vr));else n=s;n!==s?(34===r.charCodeAt(_u)?(u='"',_u++):(u=s,0===Uu&&Fu(Xr)),u!==s?(e=Kr(n),t=e):(_u=t,t=s)):(_u=t,t=s);}else _u=t,t=s;return t}())===s&&(t=function(){var t,e,n,u;t=_u,39===r.charCodeAt(_u)?(e="'",_u++):(e=s,0===Uu&&Fu(er));if(e!==s){if(n=[],qr.test(r.charAt(_u))?(u=r.charAt(_u),_u++):(u=s,0===Uu&&Fu(Zr)),u!==s)for(;u!==s;)n.push(u),qr.test(r.charAt(_u))?(u=r.charAt(_u),_u++):(u=s,0===Uu&&Fu(Zr));else n=s;n!==s?(39===r.charCodeAt(_u)?(u="'",_u++):(u=s,0===Uu&&Fu(er)),u!==s?(e=Kr(n),t=e):(_u=t,t=s)):(_u=t,t=s);}else _u=t,t=s;return t}())===s&&(t=function(){var t,e,n,u;t=_u,96===r.charCodeAt(_u)?(e="`",_u++):(e=s,0===Uu&&Fu(zr));if(e!==s){if(n=[],Jr.test(r.charAt(_u))?(u=r.charAt(_u),_u++):(u=s,0===Uu&&Fu(Qr)),u!==s)for(;u!==s;)n.push(u),Jr.test(r.charAt(_u))?(u=r.charAt(_u),_u++):(u=s,0===Uu&&Fu(Qr));else n=s;n!==s?(96===r.charCodeAt(_u)?(u="`",_u++):(u=s,0===Uu&&Fu(zr)),u!==s?(e=Kr(n),t=e):(_u=t,t=s)):(_u=t,t=s);}else _u=t,t=s;return t}()),t}function eo(){var r,t;return r=_u,(t=no())!==s?((Br(t)?s:void 0)!==s?(r=t=t):(_u=r,r=s)):(_u=r,r=s),r===s&&(r=to()),r}function no(){var r,t,e,n;if(r=_u,(t=so())!==s){for(e=[],n=ao();n!==s;)e.push(n),n=ao();e!==s?(r=t=rt(t,e)):(_u=r,r=s);}else _u=r,r=s;return r}function uo(){var r,t,e,n;if(r=_u,(t=so())!==s){for(e=[],n=oo();n!==s;)e.push(n),n=oo();e!==s?(r=t=rt(t,e)):(_u=r,r=s);}else _u=r,r=s;return r}function so(){var t;return tt.test(r.charAt(_u))?(t=r.charAt(_u),_u++):(t=s,0===Uu&&Fu(et)),t}function oo(){var t;return nt.test(r.charAt(_u))?(t=r.charAt(_u),_u++):(t=s,0===Uu&&Fu(ut)),t}function ao(){var t;return st.test(r.charAt(_u))?(t=r.charAt(_u),_u++):(t=s,0===Uu&&Fu(ot)),t}function io(){var e,n,u;return e=_u,58===r.charCodeAt(_u)?(n=":",_u++):(n=s,0===Uu&&Fu(at)),n!==s&&(u=uo())!==s?e=n=[n,u]:(_u=e,e=s),e!==s&&(e={type:"param",value:e[1]}),e}function co(){var t,e,n;return t=_u,function(){var t,e,n,u;t=_u,"over"===r.substr(_u,4).toLowerCase()?(e=r.substr(_u,4),_u+=4):(e=s,0===Uu&&Fu(pe));e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?t=e=[e,n]:(_u=t,t=s)):(_u=t,t=s);return t}()!==s&&Fa()!==s&&Ma()!==s&&Fa()!==s&&Mo()!==s&&Fa()!==s&&Vo()!==s&&Fa()!==s&&(e=is())!==s&&Fa()!==s?((n=Ts())===s&&(n=null),n!==s&&Fa()!==s&&Da()!==s?(t=function(r,t){return {partitionby:r,orderby:t}}(e,n)):(_u=t,t=s)):(_u=t,t=s),t}function lo(){var t,e,n,u,o,a,i,c,l;return t=_u,"binary"===r.substr(_u,6).toLowerCase()?(e=r.substr(_u,6),_u+=6):(e=s,0===Uu&&Fu(fr)),e===s&&(e=null),e!==s&&Fa()!==s&&(n=bo())!==s?(u=_u,(o=Fa())!==s&&(a=Wu())!==s?u=o=[o,a]:(_u=u,u=s),u===s&&(u=null),u!==s?(c=n,l=u,(i=e)&&(c.prefix=i.toLowerCase()),l&&(c.suffix={collate:l[1]}),t=e=c):(_u=t,t=s)):(_u=t,t=s),t===s&&(t=po())===s&&(t=function(){var t,e;t=_u,(e=function(){var t,e,n,u;t=_u,"true"===r.substr(_u,4).toLowerCase()?(e=r.substr(_u,4),_u+=4):(e=s,0===Uu&&Fu(jt));e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?t=e=[e,n]:(_u=t,t=s)):(_u=t,t=s);return t}())!==s&&(e={type:"bool",value:!0});(t=e)===s&&(t=_u,(e=function(){var t,e,n,u;t=_u,"false"===r.substr(_u,5).toLowerCase()?(e=r.substr(_u,5),_u+=5):(e=s,0===Uu&&Fu(Bt));e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?t=e=[e,n]:(_u=t,t=s)):(_u=t,t=s);return t}())!==s&&(e={type:"bool",value:!1}),t=e);return t}())===s&&(t=fo())===s&&(t=function(){var t,e,n,u,o,a,i;t=_u,(e=Aa())===s&&(e=Ea())===s&&(e=ya())===s&&(e=ha());if(e!==s)if(Fa()!==s){if(n=_u,39===r.charCodeAt(_u)?(u="'",_u++):(u=s,0===Uu&&Fu(er)),u!==s){for(o=[],a=Lo();a!==s;)o.push(a),a=Lo();o!==s?(39===r.charCodeAt(_u)?(a="'",_u++):(a=s,0===Uu&&Fu(er)),a!==s?n=u=[u,o,a]:(_u=n,n=s)):(_u=n,n=s);}else _u=n,n=s;n!==s?(e=lt(e,n),t=e):(_u=t,t=s);}else _u=t,t=s;else _u=t,t=s;if(t===s){if(t=_u,(e=Aa())===s&&(e=Ea())===s&&(e=ya())===s&&(e=ha()),e!==s)if(Fa()!==s){if(n=_u,34===r.charCodeAt(_u)?(u='"',_u++):(u=s,0===Uu&&Fu(Xr)),u!==s){for(o=[],a=vo();a!==s;)o.push(a),a=vo();o!==s?(34===r.charCodeAt(_u)?(a='"',_u++):(a=s,0===Uu&&Fu(Xr)),a!==s?n=u=[u,o,a]:(_u=n,n=s)):(_u=n,n=s);}else _u=n,n=s;n!==s?(e=lt(e,n),t=e):(_u=t,t=s);}else _u=t,t=s;else _u=t,t=s;t===s&&(t=_u,(e=Ta())!==s&&Fa()!==s?((n=Ma())===s&&(n=null),n!==s&&(u=Fa())!==s?((o=Da())===s&&(o=null),o!==s?((a=(a=function(r,t,e){if(t&&e)return !0}(0,n,o))?s:void 0)!==s&&Fa()!==s?("on update current_timestamp"===r.substr(_u,27).toLowerCase()?(i=r.substr(_u,27),_u+=27):(i=s,0===Uu&&Fu(ft)),i===s&&(i=null),i!==s?(c=e,e={type:"origin",value:((l=i)?`${c} ${l}`:c).toLowerCase()},t=e):(_u=t,t=s)):(_u=t,t=s)):(_u=t,t=s)):(_u=t,t=s)):(_u=t,t=s));}var c,l;return t}()),t}function fo(){var e;return (e=function(){var t,e,n,u;t=_u,"null"===r.substr(_u,4).toLowerCase()?(e=r.substr(_u,4),_u+=4):(e=s,0===Uu&&Fu(Ht));e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?t=e=[e,n]:(_u=t,t=s)):(_u=t,t=s);return t}())!==s&&(e={type:"null",value:null}),e}function bo(){var t,e,n,u,o,a;if(t=_u,"x"===r.substr(_u,1).toLowerCase()?(e=r.charAt(_u),_u++):(e=s,0===Uu&&Fu(ct)),e===s&&(e=null),e!==s){if(n=_u,39===r.charCodeAt(_u)?(u="'",_u++):(u=s,0===Uu&&Fu(er)),u!==s){for(o=[],a=Lo();a!==s;)o.push(a),a=Lo();o!==s?(39===r.charCodeAt(_u)?(a="'",_u++):(a=s,0===Uu&&Fu(er)),a!==s?n=u=[u,o,a]:(_u=n,n=s)):(_u=n,n=s);}else _u=n,n=s;n!==s?(t=e={type:e?"hex_string":"single_quote_string",value:n[1].join("")}):(_u=t,t=s);}else _u=t,t=s;if(t===s)if(t=_u,"x"===r.substr(_u,1).toLowerCase()?(e=r.charAt(_u),_u++):(e=s,0===Uu&&Fu(ct)),e===s&&(e=null),e!==s){if(n=_u,34===r.charCodeAt(_u)?(u='"',_u++):(u=s,0===Uu&&Fu(Xr)),u!==s){for(o=[],a=vo();a!==s;)o.push(a),a=vo();o!==s?(34===r.charCodeAt(_u)?(a='"',_u++):(a=s,0===Uu&&Fu(Xr)),a!==s?n=u=[u,o,a]:(_u=n,n=s)):(_u=n,n=s);}else _u=n,n=s;n!==s?(t=e=function(r,t){return {type:r?"hex_string":"string",value:t[1].join("")}}(e,n)):(_u=t,t=s);}else _u=t,t=s;return t}function vo(){var t;return bt.test(r.charAt(_u))?(t=r.charAt(_u),_u++):(t=s,0===Uu&&Fu(vt)),t===s&&(t=Co()),t}function Lo(){var t;return dt.test(r.charAt(_u))?(t=r.charAt(_u),_u++):(t=s,0===Uu&&Fu(Lt)),t===s&&(t=Co()),t}function Co(){var t,e,n,u,o,a,i,c,l,f;return t=_u,"\\'"===r.substr(_u,2)?(e="\\'",_u+=2):(e=s,0===Uu&&Fu(Ct)),e!==s&&(e="'"),(t=e)===s&&(t=_u,'\\"'===r.substr(_u,2)?(e='\\"',_u+=2):(e=s,0===Uu&&Fu(pt)),e!==s&&(e='"'),(t=e)===s&&(t=_u,"\\\\"===r.substr(_u,2)?(e="\\\\",_u+=2):(e=s,0===Uu&&Fu(wt)),e!==s&&(e="\\"),(t=e)===s&&(t=_u,"\\/"===r.substr(_u,2)?(e="\\/",_u+=2):(e=s,0===Uu&&Fu(Et)),e!==s&&(e="/"),(t=e)===s&&(t=_u,"\\b"===r.substr(_u,2)?(e="\\b",_u+=2):(e=s,0===Uu&&Fu(ht)),e!==s&&(e="\b"),(t=e)===s&&(t=_u,"\\f"===r.substr(_u,2)?(e="\\f",_u+=2):(e=s,0===Uu&&Fu(At)),e!==s&&(e="\f"),(t=e)===s&&(t=_u,"\\n"===r.substr(_u,2)?(e="\\n",_u+=2):(e=s,0===Uu&&Fu(yt)),e!==s&&(e="\n"),(t=e)===s&&(t=_u,"\\r"===r.substr(_u,2)?(e="\\r",_u+=2):(e=s,0===Uu&&Fu(Tt)),e!==s&&(e="\r"),(t=e)===s&&(t=_u,"\\t"===r.substr(_u,2)?(e="\\t",_u+=2):(e=s,0===Uu&&Fu(mt)),e!==s&&(e="\t"),(t=e)===s&&(t=_u,"\\u"===r.substr(_u,2)?(e="\\u",_u+=2):(e=s,0===Uu&&Fu(St)),e!==s&&(n=To())!==s&&(u=To())!==s&&(o=To())!==s&&(a=To())!==s?(i=n,c=u,l=o,f=a,t=e=String.fromCharCode(parseInt("0x"+i+c+l+f))):(_u=t,t=s),t===s&&(t=_u,92===r.charCodeAt(_u)?(e="\\",_u++):(e=s,0===Uu&&Fu(It)),e!==s&&(e="\\"),t=e)))))))))),t}function po(){var t,e;return (t=function(){var r,t,e,n;r=_u,(t=wo())!==s&&(e=Eo())!==s&&(n=ho())!==s?(r=t={type:"bigint",value:t+e+n}):(_u=r,r=s);r===s&&(r=_u,(t=wo())!==s&&(e=Eo())!==s?(t=function(r,t){const e=r+t;return ai(r)?{type:"bigint",value:e}:parseFloat(e)}(t,e),r=t):(_u=r,r=s),r===s&&(r=_u,(t=wo())!==s&&(e=ho())!==s?(t=function(r,t){return {type:"bigint",value:r+t}}(t,e),r=t):(_u=r,r=s),r===s&&(r=_u,(t=wo())!==s&&(t=function(r){return ai(r)?{type:"bigint",value:r}:parseFloat(r)}(t)),r=t)));return r}())!==s&&(t=(e=t)&&"bigint"===e.type?e:{type:"number",value:e}),t}function wo(){var t,e,n;return (t=Ao())===s&&(t=yo())===s&&(t=_u,45===r.charCodeAt(_u)?(e="-",_u++):(e=s,0===Uu&&Fu(Pr)),e===s&&(43===r.charCodeAt(_u)?(e="+",_u++):(e=s,0===Uu&&Fu(Fr))),e!==s&&(n=Ao())!==s?(t=e="-"+n):(_u=t,t=s),t===s&&(t=_u,45===r.charCodeAt(_u)?(e="-",_u++):(e=s,0===Uu&&Fu(Pr)),e===s&&(43===r.charCodeAt(_u)?(e="+",_u++):(e=s,0===Uu&&Fu(Fr))),e!==s&&(n=yo())!==s?(t=e="-"+n):(_u=t,t=s))),t}function Eo(){var t,e,n;return t=_u,46===r.charCodeAt(_u)?(e=".",_u++):(e=s,0===Uu&&Fu(_t)),e!==s&&(n=Ao())!==s?(t=e="."+n):(_u=t,t=s),t}function ho(){var t,e,n;return t=_u,(e=function(){var t,e,n;t=_u,Mt.test(r.charAt(_u))?(e=r.charAt(_u),_u++):(e=s,0===Uu&&Fu(Dt));e!==s?(kt.test(r.charAt(_u))?(n=r.charAt(_u),_u++):(n=s,0===Uu&&Fu($t)),n===s&&(n=null),n!==s?(t=e=e+(null!==(u=n)?u:"")):(_u=t,t=s)):(_u=t,t=s);var u;return t}())!==s&&(n=Ao())!==s?(t=e=e+n):(_u=t,t=s),t}function Ao(){var t,e;if(t=[],(e=yo())!==s)for(;e!==s;)t.push(e),e=yo();else t=s;return t!==s&&(t=t.join("")),t}function yo(){var t;return gt.test(r.charAt(_u))?(t=r.charAt(_u),_u++):(t=s,0===Uu&&Fu(Ot)),t}function To(){var t;return xt.test(r.charAt(_u))?(t=r.charAt(_u),_u++):(t=s,0===Uu&&Fu(Ut)),t}function mo(){var t,e,n,u;return t=_u,"default"===r.substr(_u,7).toLowerCase()?(e=r.substr(_u,7),_u+=7):(e=s,0===Uu&&Fu(p)),e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?t=e=[e,n]:(_u=t,t=s)):(_u=t,t=s),t}function So(){var t,e,n,u;return t=_u,"to"===r.substr(_u,2).toLowerCase()?(e=r.substr(_u,2),_u+=2):(e=s,0===Uu&&Fu(Yt)),e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?t=e=[e,n]:(_u=t,t=s)):(_u=t,t=s),t}function Io(){var t,e,n,u;return t=_u,"show"===r.substr(_u,4).toLowerCase()?(e=r.substr(_u,4),_u+=4):(e=s,0===Uu&&Fu(Xt)),e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?t=e=[e,n]:(_u=t,t=s)):(_u=t,t=s),t}function No(){var t,e,n,u;return t=_u,"drop"===r.substr(_u,4).toLowerCase()?(e=r.substr(_u,4),_u+=4):(e=s,0===Uu&&Fu(Wt)),e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="DROP"):(_u=t,t=s)):(_u=t,t=s),t}function Ro(){var t,e,n,u;return t=_u,"update"===r.substr(_u,6).toLowerCase()?(e=r.substr(_u,6),_u+=6):(e=s,0===Uu&&Fu(P)),e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?t=e=[e,n]:(_u=t,t=s)):(_u=t,t=s),t}function _o(){var t,e,n,u;return t=_u,"create"===r.substr(_u,6).toLowerCase()?(e=r.substr(_u,6),_u+=6):(e=s,0===Uu&&Fu(Zt)),e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?t=e=[e,n]:(_u=t,t=s)):(_u=t,t=s),t}function go(){var t,e,n,u;return t=_u,"temporary"===r.substr(_u,9).toLowerCase()?(e=r.substr(_u,9),_u+=9):(e=s,0===Uu&&Fu(zt)),e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?t=e=[e,n]:(_u=t,t=s)):(_u=t,t=s),t}function Oo(){var t,e,n,u;return t=_u,"if not exists"===r.substr(_u,13).toLowerCase()?(e=r.substr(_u,13),_u+=13):(e=s,0===Uu&&Fu(Jt)),e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?t=e=[e,n]:(_u=t,t=s)):(_u=t,t=s),t}function xo(){var t,e,n,u;return t=_u,"replace"===r.substr(_u,7).toLowerCase()?(e=r.substr(_u,7),_u+=7):(e=s,0===Uu&&Fu(te)),e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?t=e=[e,n]:(_u=t,t=s)):(_u=t,t=s),t}function Uo(){var t,e,n,u;return t=_u,"rename"===r.substr(_u,6).toLowerCase()?(e=r.substr(_u,6),_u+=6):(e=s,0===Uu&&Fu(ee)),e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?t=e=[e,n]:(_u=t,t=s)):(_u=t,t=s),t}function Mo(){var t,e,n,u;return t=_u,"partition"===r.substr(_u,9).toLowerCase()?(e=r.substr(_u,9),_u+=9):(e=s,0===Uu&&Fu(ue)),e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="PARTITION"):(_u=t,t=s)):(_u=t,t=s),t}function Do(){var t,e,n,u;return t=_u,"into"===r.substr(_u,4).toLowerCase()?(e=r.substr(_u,4),_u+=4):(e=s,0===Uu&&Fu(se)),e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?t=e=[e,n]:(_u=t,t=s)):(_u=t,t=s),t}function ko(){var t,e,n,u;return t=_u,"set"===r.substr(_u,3).toLowerCase()?(e=r.substr(_u,3),_u+=3):(e=s,0===Uu&&Fu(W)),e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?t=e=[e,n]:(_u=t,t=s)):(_u=t,t=s),t}function $o(){var t,e,n,u;return t=_u,"as"===r.substr(_u,2).toLowerCase()?(e=r.substr(_u,2),_u+=2):(e=s,0===Uu&&Fu(ie)),e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?t=e=[e,n]:(_u=t,t=s)):(_u=t,t=s),t}function Fo(){var t,e,n,u;return t=_u,"table"===r.substr(_u,5).toLowerCase()?(e=r.substr(_u,5),_u+=5):(e=s,0===Uu&&Fu(ce)),e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="TABLE"):(_u=t,t=s)):(_u=t,t=s),t}function Po(){var t,e,n,u;return t=_u,"tables"===r.substr(_u,6).toLowerCase()?(e=r.substr(_u,6),_u+=6):(e=s,0===Uu&&Fu(le)),e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="TABLES"):(_u=t,t=s)):(_u=t,t=s),t}function Ho(){var t,e,n,u;return t=_u,"database"===r.substr(_u,8).toLowerCase()?(e=r.substr(_u,8),_u+=8):(e=s,0===Uu&&Fu(fe)),e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="DATABASE"):(_u=t,t=s)):(_u=t,t=s),t}function Go(){var t,e,n,u;return t=_u,"on"===r.substr(_u,2).toLowerCase()?(e=r.substr(_u,2),_u+=2):(e=s,0===Uu&&Fu($)),e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?t=e=[e,n]:(_u=t,t=s)):(_u=t,t=s),t}function jo(){var t,e,n,u;return t=_u,"join"===r.substr(_u,4).toLowerCase()?(e=r.substr(_u,4),_u+=4):(e=s,0===Uu&&Fu(Le)),e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?t=e=[e,n]:(_u=t,t=s)):(_u=t,t=s),t}function Yo(){var t,e,n,u;return t=_u,"union"===r.substr(_u,5).toLowerCase()?(e=r.substr(_u,5),_u+=5):(e=s,0===Uu&&Fu(we)),e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?t=e=[e,n]:(_u=t,t=s)):(_u=t,t=s),t}function Bo(){var t,e,n,u;return t=_u,"values"===r.substr(_u,6).toLowerCase()?(e=r.substr(_u,6),_u+=6):(e=s,0===Uu&&Fu(Ee)),e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?t=e=[e,n]:(_u=t,t=s)):(_u=t,t=s),t}function Xo(){var t,e,n,u;return t=_u,"using"===r.substr(_u,5).toLowerCase()?(e=r.substr(_u,5),_u+=5):(e=s,0===Uu&&Fu(he)),e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?t=e=[e,n]:(_u=t,t=s)):(_u=t,t=s),t}function Wo(){var t,e,n,u;return t=_u,"with"===r.substr(_u,4).toLowerCase()?(e=r.substr(_u,4),_u+=4):(e=s,0===Uu&&Fu(yr)),e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?t=e=[e,n]:(_u=t,t=s)):(_u=t,t=s),t}function Vo(){var t,e,n,u;return t=_u,"by"===r.substr(_u,2).toLowerCase()?(e=r.substr(_u,2),_u+=2):(e=s,0===Uu&&Fu(Te)),e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?t=e=[e,n]:(_u=t,t=s)):(_u=t,t=s),t}function Ko(){var t,e,n,u;return t=_u,"desc"===r.substr(_u,4).toLowerCase()?(e=r.substr(_u,4),_u+=4):(e=s,0===Uu&&Fu(_e)),e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="DESC"):(_u=t,t=s)):(_u=t,t=s),t}function qo(){var t,e,n,u;return t=_u,"all"===r.substr(_u,3).toLowerCase()?(e=r.substr(_u,3),_u+=3):(e=s,0===Uu&&Fu(Oe)),e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="ALL"):(_u=t,t=s)):(_u=t,t=s),t}function Zo(){var t,e,n,u;return t=_u,"distinct"===r.substr(_u,8).toLowerCase()?(e=r.substr(_u,8),_u+=8):(e=s,0===Uu&&Fu(xe)),e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="DISTINCT"):(_u=t,t=s)):(_u=t,t=s),t}function zo(){var t,e,n,u;return t=_u,"between"===r.substr(_u,7).toLowerCase()?(e=r.substr(_u,7),_u+=7):(e=s,0===Uu&&Fu(Ue)),e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="BETWEEN"):(_u=t,t=s)):(_u=t,t=s),t}function Jo(){var t,e,n,u;return t=_u,"in"===r.substr(_u,2).toLowerCase()?(e=r.substr(_u,2),_u+=2):(e=s,0===Uu&&Fu(Me)),e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="IN"):(_u=t,t=s)):(_u=t,t=s),t}function Qo(){var t,e,n,u;return t=_u,"is"===r.substr(_u,2).toLowerCase()?(e=r.substr(_u,2),_u+=2):(e=s,0===Uu&&Fu(De)),e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="IS"):(_u=t,t=s)):(_u=t,t=s),t}function ra(){var t,e,n,u;return t=_u,"like"===r.substr(_u,4).toLowerCase()?(e=r.substr(_u,4),_u+=4):(e=s,0===Uu&&Fu(ke)),e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="LIKE"):(_u=t,t=s)):(_u=t,t=s),t}function ta(){var t,e,n,u;return t=_u,"exists"===r.substr(_u,6).toLowerCase()?(e=r.substr(_u,6),_u+=6):(e=s,0===Uu&&Fu(Pe)),e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="EXISTS"):(_u=t,t=s)):(_u=t,t=s),t}function ea(){var t,e,n,u;return t=_u,"not"===r.substr(_u,3).toLowerCase()?(e=r.substr(_u,3),_u+=3):(e=s,0===Uu&&Fu(g)),e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="NOT"):(_u=t,t=s)):(_u=t,t=s),t}function na(){var t,e,n,u;return t=_u,"and"===r.substr(_u,3).toLowerCase()?(e=r.substr(_u,3),_u+=3):(e=s,0===Uu&&Fu(He)),e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="AND"):(_u=t,t=s)):(_u=t,t=s),t}function ua(){var t,e,n,u;return t=_u,"or"===r.substr(_u,2).toLowerCase()?(e=r.substr(_u,2),_u+=2):(e=s,0===Uu&&Fu(Ge)),e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="OR"):(_u=t,t=s)):(_u=t,t=s),t}function sa(){var t,e,n,u;return t=_u,"case"===r.substr(_u,4).toLowerCase()?(e=r.substr(_u,4),_u+=4):(e=s,0===Uu&&Fu(Ke)),e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?t=e=[e,n]:(_u=t,t=s)):(_u=t,t=s),t}function oa(){var t,e,n,u;return t=_u,"cast"===r.substr(_u,4).toLowerCase()?(e=r.substr(_u,4),_u+=4):(e=s,0===Uu&&Fu(Qe)),e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?t=e=[e,n]:(_u=t,t=s)):(_u=t,t=s),t}function aa(){var t,e,n,u;return t=_u,"char"===r.substr(_u,4).toLowerCase()?(e=r.substr(_u,4),_u+=4):(e=s,0===Uu&&Fu(tn)),e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="CHAR"):(_u=t,t=s)):(_u=t,t=s),t}function ia(){var t,e,n,u;return t=_u,"varchar"===r.substr(_u,7).toLowerCase()?(e=r.substr(_u,7),_u+=7):(e=s,0===Uu&&Fu(en)),e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="VARCHAR"):(_u=t,t=s)):(_u=t,t=s),t}function ca(){var t,e,n,u;return t=_u,"numeric"===r.substr(_u,7).toLowerCase()?(e=r.substr(_u,7),_u+=7):(e=s,0===Uu&&Fu(nn)),e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="NUMERIC"):(_u=t,t=s)):(_u=t,t=s),t}function la(){var t,e,n,u;return t=_u,"decimal"===r.substr(_u,7).toLowerCase()?(e=r.substr(_u,7),_u+=7):(e=s,0===Uu&&Fu(un)),e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="DECIMAL"):(_u=t,t=s)):(_u=t,t=s),t}function fa(){var t,e,n,u;return t=_u,"unsigned"===r.substr(_u,8).toLowerCase()?(e=r.substr(_u,8),_u+=8):(e=s,0===Uu&&Fu(on)),e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="UNSIGNED"):(_u=t,t=s)):(_u=t,t=s),t}function ba(){var t,e,n,u;return t=_u,"int"===r.substr(_u,3).toLowerCase()?(e=r.substr(_u,3),_u+=3):(e=s,0===Uu&&Fu(an)),e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="INT"):(_u=t,t=s)):(_u=t,t=s),t}function va(){var t,e,n,u;return t=_u,"integer"===r.substr(_u,7).toLowerCase()?(e=r.substr(_u,7),_u+=7):(e=s,0===Uu&&Fu(ln)),e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="INTEGER"):(_u=t,t=s)):(_u=t,t=s),t}function da(){var t,e,n,u;return t=_u,"smallint"===r.substr(_u,8).toLowerCase()?(e=r.substr(_u,8),_u+=8):(e=s,0===Uu&&Fu(bn)),e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="SMALLINT"):(_u=t,t=s)):(_u=t,t=s),t}function La(){var t,e,n,u;return t=_u,"tinyint"===r.substr(_u,7).toLowerCase()?(e=r.substr(_u,7),_u+=7):(e=s,0===Uu&&Fu(vn)),e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="TINYINT"):(_u=t,t=s)):(_u=t,t=s),t}function Ca(){var t,e,n,u;return t=_u,"bigint"===r.substr(_u,6).toLowerCase()?(e=r.substr(_u,6),_u+=6):(e=s,0===Uu&&Fu(wn)),e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="BIGINT"):(_u=t,t=s)):(_u=t,t=s),t}function pa(){var t,e,n,u;return t=_u,"float"===r.substr(_u,5).toLowerCase()?(e=r.substr(_u,5),_u+=5):(e=s,0===Uu&&Fu(hn)),e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="FLOAT"):(_u=t,t=s)):(_u=t,t=s),t}function wa(){var t,e,n,u;return t=_u,"double"===r.substr(_u,6).toLowerCase()?(e=r.substr(_u,6),_u+=6):(e=s,0===Uu&&Fu(An)),e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="DOUBLE"):(_u=t,t=s)):(_u=t,t=s),t}function Ea(){var t,e,n,u;return t=_u,"date"===r.substr(_u,4).toLowerCase()?(e=r.substr(_u,4),_u+=4):(e=s,0===Uu&&Fu(yn)),e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="DATE"):(_u=t,t=s)):(_u=t,t=s),t}function ha(){var t,e,n,u;return t=_u,"datetime"===r.substr(_u,8).toLowerCase()?(e=r.substr(_u,8),_u+=8):(e=s,0===Uu&&Fu(Tn)),e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="DATETIME"):(_u=t,t=s)):(_u=t,t=s),t}function Aa(){var t,e,n,u;return t=_u,"time"===r.substr(_u,4).toLowerCase()?(e=r.substr(_u,4),_u+=4):(e=s,0===Uu&&Fu(mn)),e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="TIME"):(_u=t,t=s)):(_u=t,t=s),t}function ya(){var t,e,n,u;return t=_u,"timestamp"===r.substr(_u,9).toLowerCase()?(e=r.substr(_u,9),_u+=9):(e=s,0===Uu&&Fu(Sn)),e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="TIMESTAMP"):(_u=t,t=s)):(_u=t,t=s),t}function Ta(){var t,e,n,u;return t=_u,"current_timestamp"===r.substr(_u,17).toLowerCase()?(e=r.substr(_u,17),_u+=17):(e=s,0===Uu&&Fu($n)),e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="CURRENT_TIMESTAMP"):(_u=t,t=s)):(_u=t,t=s),t}function ma(){var t;return 64===r.charCodeAt(_u)?(t="@",_u++):(t=s,0===Uu&&Fu(Xn)),t}function Sa(){var t;return (t=function(){var t;return "@@"===r.substr(_u,2)?(t="@@",_u+=2):(t=s,0===Uu&&Fu(Wn)),t}())===s&&(t=ma())===s&&(t=function(){var t;return 36===r.charCodeAt(_u)?(t="$",_u++):(t=s,0===Uu&&Fu(Vn)),t}()),t}function Ia(){var t;return 61===r.charCodeAt(_u)?(t="=",_u++):(t=s,0===Uu&&Fu(Nr)),t}function Na(){var t,e,n,u;return t=_u,"column"===r.substr(_u,6).toLowerCase()?(e=r.substr(_u,6),_u+=6):(e=s,0===Uu&&Fu(Jn)),e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="COLUMN"):(_u=t,t=s)):(_u=t,t=s),t}function Ra(){var t,e,n,u;return t=_u,"index"===r.substr(_u,5).toLowerCase()?(e=r.substr(_u,5),_u+=5):(e=s,0===Uu&&Fu(Qn)),e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="INDEX"):(_u=t,t=s)):(_u=t,t=s),t}function _a(){var t,e,n,u;return t=_u,"key"===r.substr(_u,3).toLowerCase()?(e=r.substr(_u,3),_u+=3):(e=s,0===Uu&&Fu(v)),e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="KEY"):(_u=t,t=s)):(_u=t,t=s),t}function ga(){var t,e,n,u;return t=_u,"comment"===r.substr(_u,7).toLowerCase()?(e=r.substr(_u,7),_u+=7):(e=s,0===Uu&&Fu(eu)),e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="COMMENT"):(_u=t,t=s)):(_u=t,t=s),t}function Oa(){var t;return 46===r.charCodeAt(_u)?(t=".",_u++):(t=s,0===Uu&&Fu(_t)),t}function xa(){var t;return 44===r.charCodeAt(_u)?(t=",",_u++):(t=s,0===Uu&&Fu(fu)),t}function Ua(){var t;return 42===r.charCodeAt(_u)?(t="*",_u++):(t=s,0===Uu&&Fu(Hr)),t}function Ma(){var t;return 40===r.charCodeAt(_u)?(t="(",_u++):(t=s,0===Uu&&Fu(wr)),t}function Da(){var t;return 41===r.charCodeAt(_u)?(t=")",_u++):(t=s,0===Uu&&Fu(Er)),t}function ka(){var t;return 59===r.charCodeAt(_u)?(t=";",_u++):(t=s,0===Uu&&Fu(du)),t}function $a(){var t;return (t=function(){var t;return "||"===r.substr(_u,2)?(t="||",_u+=2):(t=s,0===Uu&&Fu(pu)),t}())===s&&(t=function(){var t;return "&&"===r.substr(_u,2)?(t="&&",_u+=2):(t=s,0===Uu&&Fu(wu)),t}()),t}function Fa(){var r,t;for(r=[],(t=Ya())===s&&(t=Ha());t!==s;)r.push(t),(t=Ya())===s&&(t=Ha());return r}function Pa(){var r,t;if(r=[],(t=Ya())===s&&(t=Ha()),t!==s)for(;t!==s;)r.push(t),(t=Ya())===s&&(t=Ha());else r=s;return r}function Ha(){var t;return (t=function(){var t,e,n,u,o,a;t=_u,"/*"===r.substr(_u,2)?(e="/*",_u+=2):(e=s,0===Uu&&Fu(Eu));if(e!==s){for(n=[],u=_u,o=_u,Uu++,"*/"===r.substr(_u,2)?(a="*/",_u+=2):(a=s,0===Uu&&Fu(hu)),Uu--,a===s?o=void 0:(_u=o,o=s),o!==s&&(a=ja())!==s?u=o=[o,a]:(_u=u,u=s);u!==s;)n.push(u),u=_u,o=_u,Uu++,"*/"===r.substr(_u,2)?(a="*/",_u+=2):(a=s,0===Uu&&Fu(hu)),Uu--,a===s?o=void 0:(_u=o,o=s),o!==s&&(a=ja())!==s?u=o=[o,a]:(_u=u,u=s);n!==s?("*/"===r.substr(_u,2)?(u="*/",_u+=2):(u=s,0===Uu&&Fu(hu)),u!==s?t=e=[e,n,u]:(_u=t,t=s)):(_u=t,t=s);}else _u=t,t=s;return t}())===s&&(t=function(){var t,e,n,u,o,a;t=_u,"--"===r.substr(_u,2)?(e="--",_u+=2):(e=s,0===Uu&&Fu(Au));if(e!==s){for(n=[],u=_u,o=_u,Uu++,a=Ba(),Uu--,a===s?o=void 0:(_u=o,o=s),o!==s&&(a=ja())!==s?u=o=[o,a]:(_u=u,u=s);u!==s;)n.push(u),u=_u,o=_u,Uu++,a=Ba(),Uu--,a===s?o=void 0:(_u=o,o=s),o!==s&&(a=ja())!==s?u=o=[o,a]:(_u=u,u=s);n!==s?t=e=[e,n]:(_u=t,t=s);}else _u=t,t=s;return t}())===s&&(t=function(){var t,e,n,u,o,a;t=_u,35===r.charCodeAt(_u)?(e="#",_u++):(e=s,0===Uu&&Fu(yu));if(e!==s){for(n=[],u=_u,o=_u,Uu++,a=Ba(),Uu--,a===s?o=void 0:(_u=o,o=s),o!==s&&(a=ja())!==s?u=o=[o,a]:(_u=u,u=s);u!==s;)n.push(u),u=_u,o=_u,Uu++,a=Ba(),Uu--,a===s?o=void 0:(_u=o,o=s),o!==s&&(a=ja())!==s?u=o=[o,a]:(_u=u,u=s);n!==s?t=e=[e,n]:(_u=t,t=s);}else _u=t,t=s;return t}()),t}function Ga(){var r,t,e,n,u,o,a;return r=_u,(t=ga())!==s&&Fa()!==s?((e=Ia())===s&&(e=null),e!==s&&Fa()!==s&&(n=bo())!==s?(o=e,a=n,r=t={type:(u=t).toLowerCase(),keyword:u.toLowerCase(),symbol:o,value:a}):(_u=r,r=s)):(_u=r,r=s),r}function ja(){var t;return r.length>_u?(t=r.charAt(_u),_u++):(t=s,0===Uu&&Fu(Tu)),t}function Ya(){var t;return mu.test(r.charAt(_u))?(t=r.charAt(_u),_u++):(t=s,0===Uu&&Fu(Su)),t}function Ba(){var t,e;if((t=function(){var t,e;t=_u,Uu++,r.length>_u?(e=r.charAt(_u),_u++):(e=s,0===Uu&&Fu(Tu));Uu--,e===s?t=void 0:(_u=t,t=s);return t}())===s)if(t=[],Nt.test(r.charAt(_u))?(e=r.charAt(_u),_u++):(e=s,0===Uu&&Fu(Rt)),e!==s)for(;e!==s;)t.push(e),Nt.test(r.charAt(_u))?(e=r.charAt(_u),_u++):(e=s,0===Uu&&Fu(Rt));else t=s;return t}function Xa(){var t,e;return t=_u,bi=[],(void 0)!==s&&Fa()!==s?((e=Wa())===s&&(e=function(){var t,e;t=_u,function(){var t;return "return"===r.substr(_u,6).toLowerCase()?(t=r.substr(_u,6),_u+=6):(t=s,0===Uu&&Fu(Kn)),t}()!==s&&Fa()!==s&&(e=Va())!==s?(t={type:"return",expr:e}):(_u=t,t=s);return t}()),e!==s?(t={stmt:e,vars:bi}):(_u=t,t=s)):(_u=t,t=s),t}function Wa(){var t,e,n,u;return t=_u,(e=ri())===s&&(e=ti()),e!==s&&Fa()!==s?((n=function(){var t;return ":="===r.substr(_u,2)?(t=":=",_u+=2):(t=s,0===Uu&&Fu(qn)),t}())===s&&(n=Ia()),n!==s&&Fa()!==s&&(u=Va())!==s?(t=e={type:"assign",left:e,symbol:n,right:u}):(_u=t,t=s)):(_u=t,t=s),t}function Va(){var t;return (t=es())===s&&(t=function(){var r,t,e,n,u;r=_u,(t=ri())!==s&&Fa()!==s&&(e=Es())!==s&&Fa()!==s&&(n=ri())!==s&&Fa()!==s&&(u=As())!==s?(r=t={type:"join",ltable:t,rtable:n,op:e,on:u}):(_u=r,r=s);return r}())===s&&(t=Ka())===s&&(t=function(){var t,e;t=_u,function(){var t;return 91===r.charCodeAt(_u)?(t="[",_u++):(t=s,0===Uu&&Fu(bu)),t}()!==s&&Fa()!==s&&(e=Qa())!==s&&Fa()!==s&&function(){var t;return 93===r.charCodeAt(_u)?(t="]",_u++):(t=s,0===Uu&&Fu(vu)),t}()!==s?(t={type:"array",value:e}):(_u=t,t=s);return t}()),t}function Ka(){var r,t,e,n,u,o,a,i;if(r=_u,(t=qa())!==s){for(e=[],n=_u,(u=Fa())!==s&&(o=qs())!==s&&(a=Fa())!==s&&(i=qa())!==s?n=u=[u,o,a,i]:(_u=n,n=s);n!==s;)e.push(n),n=_u,(u=Fa())!==s&&(o=qs())!==s&&(a=Fa())!==s&&(i=qa())!==s?n=u=[u,o,a,i]:(_u=n,n=s);e!==s?(r=t=_r(t,e)):(_u=r,r=s);}else _u=r,r=s;return r}function qa(){var r,t,e,n,u,o,a,i;if(r=_u,(t=Za())!==s){for(e=[],n=_u,(u=Fa())!==s&&(o=zs())!==s&&(a=Fa())!==s&&(i=Za())!==s?n=u=[u,o,a,i]:(_u=n,n=s);n!==s;)e.push(n),n=_u,(u=Fa())!==s&&(o=zs())!==s&&(a=Fa())!==s&&(i=Za())!==s?n=u=[u,o,a,i]:(_u=n,n=s);e!==s?(r=t=_r(t,e)):(_u=r,r=s);}else _u=r,r=s;return r}function Za(){var r,t,e;return (r=lo())===s&&(r=ri())===s&&(r=Ja())===s&&(r=io())===s&&(r=_u,Ma()!==s&&Fa()!==s&&(t=Ka())!==s&&Fa()!==s&&Da()!==s?((e=t).parentheses=!0,r=e):(_u=r,r=s)),r}function za(){var r,t,e,n,u,o,a;return r=_u,(t=ro())!==s?(e=_u,(n=Fa())!==s&&(u=Oa())!==s&&(o=Fa())!==s&&(a=ro())!==s?e=n=[n,u,o,a]:(_u=e,e=s),e===s&&(e=null),e!==s?(r=t=function(r,t){let e=r;return null!==t&&(e=`${r}.${t[3]}`),e}(t,e)):(_u=r,r=s)):(_u=r,r=s),r}function Ja(){var r,t,e;return r=_u,(t=za())!==s&&Fa()!==s&&Ma()!==s&&Fa()!==s?((e=Qa())===s&&(e=null),e!==s&&Fa()!==s&&Da()!==s?(r=t={type:"function",name:t,args:{type:"expr_list",value:e}}):(_u=r,r=s)):(_u=r,r=s),r===s&&(r=_u,(t=za())!==s&&(t=function(r){return {type:"function",name:r,args:null}}(t)),r=t),r}function Qa(){var r,t,e,n,u,o,a,i;if(r=_u,(t=Za())!==s){for(e=[],n=_u,(u=Fa())!==s&&(o=xa())!==s&&(a=Fa())!==s&&(i=Za())!==s?n=u=[u,o,a,i]:(_u=n,n=s);n!==s;)e.push(n),n=_u,(u=Fa())!==s&&(o=xa())!==s&&(a=Fa())!==s&&(i=Za())!==s?n=u=[u,o,a,i]:(_u=n,n=s);e!==s?(r=t=c(t,e)):(_u=r,r=s);}else _u=r,r=s;return r}function ri(){var r,t,e,n,u;return r=_u,(t=Sa())!==s&&(e=ti())!==s?(n=t,u=e,r=t={type:"var",...u,prefix:n}):(_u=r,r=s),r}function ti(){var t,e,n,u,o;return t=_u,(e=uo())!==s&&(n=function(){var e,n,u,o;e=[],n=_u,46===r.charCodeAt(_u)?(u=".",_u++):(u=s,0===Uu&&Fu(_t));u!==s&&(o=uo())!==s?n=u=[u,o]:(_u=n,n=s);for(;n!==s;)e.push(n),n=_u,46===r.charCodeAt(_u)?(u=".",_u++):(u=s,0===Uu&&Fu(_t)),u!==s&&(o=uo())!==s?n=u=[u,o]:(_u=n,n=s);e!==s&&(e=function(r){const t=[];for(let e=0;e<r.length;e++)t.push(r[e][1]);return t}(e));return e}())!==s?(u=e,o=n,bi.push(u),t=e={type:"var",name:u,members:o,prefix:null}):(_u=t,t=s),t}function ei(){var t;return (t=function(){var t,e,n,u;t=_u,(e=aa())===s&&(e=ia());if(e!==s)if(Fa()!==s)if(Ma()!==s)if(Fa()!==s){if(n=[],gt.test(r.charAt(_u))?(u=r.charAt(_u),_u++):(u=s,0===Uu&&Fu(Ot)),u!==s)for(;u!==s;)n.push(u),gt.test(r.charAt(_u))?(u=r.charAt(_u),_u++):(u=s,0===Uu&&Fu(Ot));else n=s;n!==s&&(u=Fa())!==s&&Da()!==s?(e={dataType:e,length:parseInt(n.join(""),10)},t=e):(_u=t,t=s);}else _u=t,t=s;else _u=t,t=s;else _u=t,t=s;else _u=t,t=s;t===s&&(t=_u,(e=aa())!==s&&(e=Iu(e)),(t=e)===s&&(t=_u,(e=ia())!==s&&(e=Iu(e)),t=e));return t}())===s&&(t=function(){var t,e,n,u,o,a,i,c,l,f,b,v;t=_u,(e=ca())===s&&(e=la())===s&&(e=ba())===s&&(e=va())===s&&(e=da())===s&&(e=La())===s&&(e=Ca())===s&&(e=pa())===s&&(e=wa())===s&&(e=function(){var t,e,n,u;return t=_u,"bit"===r.substr(_u,3).toLowerCase()?(e=r.substr(_u,3),_u+=3):(e=s,0===Uu&&Fu(rn)),e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="BIT"):(_u=t,t=s)):(_u=t,t=s),t}());if(e!==s)if((n=Fa())!==s)if((u=Ma())!==s)if((o=Fa())!==s){if(a=[],gt.test(r.charAt(_u))?(i=r.charAt(_u),_u++):(i=s,0===Uu&&Fu(Ot)),i!==s)for(;i!==s;)a.push(i),gt.test(r.charAt(_u))?(i=r.charAt(_u),_u++):(i=s,0===Uu&&Fu(Ot));else a=s;if(a!==s)if((i=Fa())!==s){if(c=_u,(l=xa())!==s)if((f=Fa())!==s){if(b=[],gt.test(r.charAt(_u))?(v=r.charAt(_u),_u++):(v=s,0===Uu&&Fu(Ot)),v!==s)for(;v!==s;)b.push(v),gt.test(r.charAt(_u))?(v=r.charAt(_u),_u++):(v=s,0===Uu&&Fu(Ot));else b=s;b!==s?c=l=[l,f,b]:(_u=c,c=s);}else _u=c,c=s;else _u=c,c=s;c===s&&(c=null),c!==s&&(l=Fa())!==s&&(f=Da())!==s&&(b=Fa())!==s?((v=ni())===s&&(v=null),v!==s?(d=c,L=v,e={dataType:e,length:parseInt(a.join(""),10),scale:d&&parseInt(d[2].join(""),10),parentheses:!0,suffix:L},t=e):(_u=t,t=s)):(_u=t,t=s);}else _u=t,t=s;else _u=t,t=s;}else _u=t,t=s;else _u=t,t=s;else _u=t,t=s;else _u=t,t=s;var d,L;if(t===s){if(t=_u,(e=ca())===s&&(e=la())===s&&(e=ba())===s&&(e=va())===s&&(e=da())===s&&(e=La())===s&&(e=Ca())===s&&(e=pa())===s&&(e=wa()),e!==s){if(n=[],gt.test(r.charAt(_u))?(u=r.charAt(_u),_u++):(u=s,0===Uu&&Fu(Ot)),u!==s)for(;u!==s;)n.push(u),gt.test(r.charAt(_u))?(u=r.charAt(_u),_u++):(u=s,0===Uu&&Fu(Ot));else n=s;n!==s&&(u=Fa())!==s?((o=ni())===s&&(o=null),o!==s?(e=function(r,t,e){return {dataType:r,length:parseInt(t.join(""),10),suffix:e}}(e,n,o),t=e):(_u=t,t=s)):(_u=t,t=s);}else _u=t,t=s;t===s&&(t=_u,(e=ca())===s&&(e=la())===s&&(e=ba())===s&&(e=va())===s&&(e=da())===s&&(e=La())===s&&(e=Ca())===s&&(e=pa())===s&&(e=wa()),e!==s&&(n=Fa())!==s?((u=ni())===s&&(u=null),u!==s&&(o=Fa())!==s?(e=function(r,t){return {dataType:r,suffix:t}}(e,u),t=e):(_u=t,t=s)):(_u=t,t=s));}return t}())===s&&(t=function(){var t,e,n,u;t=_u,(e=Ea())===s&&(e=ha())===s&&(e=Aa())===s&&(e=ya());e!==s&&Fa()!==s&&Ma()!==s&&Fa()!==s?(Nu.test(r.charAt(_u))?(n=r.charAt(_u),_u++):(n=s,0===Uu&&Fu(Ru)),n!==s&&Fa()!==s&&Da()!==s&&Fa()!==s?((u=ni())===s&&(u=null),u!==s?(e={dataType:e,length:parseInt(n,10)},t=e):(_u=t,t=s)):(_u=t,t=s)):(_u=t,t=s);t===s&&(t=_u,(e=Ea())===s&&(e=ha())===s&&(e=Aa())===s&&(e=ya()),e!==s&&(e=Iu(e)),t=e);return t}())===s&&(t=function(){var e;(e=function(){var t,e,n,u;return t=_u,"json"===r.substr(_u,4).toLowerCase()?(e=r.substr(_u,4),_u+=4):(e=s,0===Uu&&Fu(fn)),e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="JSON"):(_u=t,t=s)):(_u=t,t=s),t}())!==s&&(e=Iu(e));return e}())===s&&(t=function(){var e;(e=function(){var t,e,n,u;return t=_u,"tinytext"===r.substr(_u,8).toLowerCase()?(e=r.substr(_u,8),_u+=8):(e=s,0===Uu&&Fu(dn)),e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="TINYTEXT"):(_u=t,t=s)):(_u=t,t=s),t}())===s&&(e=function(){var t,e,n,u;return t=_u,"text"===r.substr(_u,4).toLowerCase()?(e=r.substr(_u,4),_u+=4):(e=s,0===Uu&&Fu(Ln)),e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="TEXT"):(_u=t,t=s)):(_u=t,t=s),t}())===s&&(e=function(){var t,e,n,u;return t=_u,"mediumtext"===r.substr(_u,10).toLowerCase()?(e=r.substr(_u,10),_u+=10):(e=s,0===Uu&&Fu(Cn)),e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="MEDIUMTEXT"):(_u=t,t=s)):(_u=t,t=s),t}())===s&&(e=function(){var t,e,n,u;return t=_u,"longtext"===r.substr(_u,8).toLowerCase()?(e=r.substr(_u,8),_u+=8):(e=s,0===Uu&&Fu(pn)),e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="LONGTEXT"):(_u=t,t=s)):(_u=t,t=s),t}());e!==s&&(e={dataType:e});return e}())===s&&(t=function(){var t,e,n;t=_u,(e=function(){var t,e,n,u;return t=_u,"enum"===r.substr(_u,4).toLowerCase()?(e=r.substr(_u,4),_u+=4):(e=s,0===Uu&&Fu(En)),e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="ENUM"):(_u=t,t=s)):(_u=t,t=s),t}())!==s&&Fa()!==s&&(n=Us())!==s?(u=e,(o=n).parentheses=!0,t=e={dataType:u,expr:o}):(_u=t,t=s);var u,o;return t}()),t}function ni(){var t,e,n;return t=_u,(e=fa())===s&&(e=null),e!==s&&Fa()!==s?((n=function(){var t,e,n,u;return t=_u,"zerofill"===r.substr(_u,8).toLowerCase()?(e=r.substr(_u,8),_u+=8):(e=s,0===Uu&&Fu(cn)),e!==s?(n=_u,Uu++,u=so(),Uu--,u===s?n=void 0:(_u=n,n=s),n!==s?(t=e="ZEROFILL"):(_u=t,t=s)):(_u=t,t=s),t}())===s&&(n=null),n!==s?(t=e=function(r,t){const e=[];return r&&e.push(r),t&&e.push(t),e}(e,n)):(_u=t,t=s)):(_u=t,t=s),t}const ui={ALTER:!0,ALL:!0,ADD:!0,AND:!0,AS:!0,ASC:!0,BETWEEN:!0,BY:!0,CALL:!0,CASE:!0,CREATE:!0,CONTAINS:!0,CURRENT_DATE:!0,CURRENT_TIME:!0,CURRENT_TIMESTAMP:!0,CURRENT_USER:!0,DELETE:!0,DESC:!0,DISTINCT:!0,DROP:!0,ELSE:!0,END:!0,EXISTS:!0,EXPLAIN:!0,FALSE:!0,FROM:!0,FULL:!0,GROUP:!0,HAVING:!0,IN:!0,INNER:!0,INSERT:!0,INTO:!0,IS:!0,JOIN:!0,JSON:!0,KEY:!0,LEFT:!0,LIKE:!0,LIMIT:!0,LOW_PRIORITY:!0,NOT:!0,NULL:!0,ON:!0,OR:!0,ORDER:!0,OUTER:!0,RECURSIVE:!0,RENAME:!0,READ:!0,RIGHT:!0,SELECT:!0,SESSION_USER:!0,SET:!0,SHOW:!0,SYSTEM_USER:!0,TABLE:!0,THEN:!0,TRUE:!0,TRUNCATE:!0,UNION:!0,UPDATE:!0,USING:!0,VALUES:!0,WITH:!0,WHEN:!0,WHERE:!0,WRITE:!0,GLOBAL:!0,SESSION:!0,LOCAL:!0,PERSIST:!0,PERSIST_ONLY:!0};function si(r,t){return {type:"unary_expr",operator:r,expr:t}}function oi(r,t,e){return {type:"binary_expr",operator:r,left:t,right:e}}function ai(r){const t=n(Number.MAX_SAFE_INTEGER);return !(n(r)<t)}function ii(r,t,e=3){const n=[r];for(let r=0;r<t.length;r++)n.push(t[r][e]);return n}function ci(r,t){let e=r;for(let r=0;r<t.length;r++)e=oi(t[r][1],e,t[r][3]);return e}function li(r){const t=Li[r];return t||(r||null)}function fi(r){const t=new Set;for(let e of r.keys()){const r=e.split("::");if(!r){t.add(e);break}r&&r[1]&&(r[1]=li(r[1])),t.add(r.join("::"));}return Array.from(t)}let bi=[];const vi=new Set,di=new Set,Li={};if((e=a())!==s&&_u===r.length)return e;throw e!==s&&_u<r.length&&Fu({type:"end"}),Pu(xu,Ou<r.length?r.charAt(Ou):null,Ou<r.length?$u(Ou,Ou+1):$u(Ou,Ou))}};},function(r,t,e){var n=e(0);function u(r,t,e,n){this.message=r,this.expected=t,this.found=e,this.location=n,this.name="SyntaxError","function"==typeof Error.captureStackTrace&&Error.captureStackTrace(this,u);}!function(r,t){function e(){this.constructor=r;}e.prototype=t.prototype,r.prototype=new e;}(u,Error),u.buildMessage=function(r,t){var e={literal:function(r){return '"'+u(r.text)+'"'},class:function(r){var t,e="";for(t=0;t<r.parts.length;t++)e+=r.parts[t]instanceof Array?s(r.parts[t][0])+"-"+s(r.parts[t][1]):s(r.parts[t]);return "["+(r.inverted?"^":"")+e+"]"},any:function(r){return "any character"},end:function(r){return "end of input"},other:function(r){return r.description}};function n(r){return r.charCodeAt(0).toString(16).toUpperCase()}function u(r){return r.replace(/\\/g,"\\\\").replace(/"/g,'\\"').replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(r){return "\\x0"+n(r)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(r){return "\\x"+n(r)}))}function s(r){return r.replace(/\\/g,"\\\\").replace(/\]/g,"\\]").replace(/\^/g,"\\^").replace(/-/g,"\\-").replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(r){return "\\x0"+n(r)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(r){return "\\x"+n(r)}))}return "Expected "+function(r){var t,n,u,s=new Array(r.length);for(t=0;t<r.length;t++)s[t]=(u=r[t],e[u.type](u));if(s.sort(),s.length>0){for(t=1,n=1;t<s.length;t++)s[t-1]!==s[t]&&(s[n]=s[t],n++);s.length=n;}switch(s.length){case 1:return s[0];case 2:return s[0]+" or "+s[1];default:return s.slice(0,-1).join(", ")+", or "+s[s.length-1]}}(r)+" but "+function(r){return r?'"'+u(r)+'"':"end of input"}(t)+" found."},r.exports={SyntaxError:u,parse:function(r,t){t=void 0!==t?t:{};var e,s={},o={start:vs},a=vs,i=function(r,t){return zi(r,t)},c=as("INCLUDE",!0),l=as("FILESTREAM_ON",!0),f=function(r,t){return zi(r,t,1)},b=function(r,t){return zi(r,t)},v=as("UNIQUE",!0),d=as("PRIMARY",!0),L=as("KEY",!0),C=as("IDENTITY",!0),p=as("COLUMN_FORMAT",!0),w=as("FIXED",!0),E=as("DYNAMIC",!0),h=as("DEFAULT",!0),A=as("STORAGE",!0),y=as("DISK",!0),T=as("MEMORY",!0),m=as("CURSOR",!0),S=as("PROCEDURE",!0),I=as("ALGORITHM",!0),N=as("INSTANT",!0),R=as("INPLACE",!0),_=as("COPY",!0),g=as("LOCK",!0),O=as("NONE",!0),x=as("SHARED",!0),U=as("EXCLUSIVE",!0),M=as("CHECK",!0),D=as("NOCHECK",!0),k=as("PRIMARY KEY",!0),$=as("NOT",!0),F=as("FOR",!0),P=as("REPLICATION",!0),H=as("FOREIGN KEY",!0),G=as("MATCH FULL",!0),j=as("MATCH PARTIAL",!0),Y=as("MATCH SIMPLE",!0),B=as("ON",!0),X=as("DELETE",!0),W=as("UPDATE",!0),V=as("RESTRICT",!0),K=as("CASCADE",!0),q=as("SET NULL",!0),Z=as("NO ACTION",!0),z=as("SET DEFAULT",!0),J=as("CHARACTER",!0),Q=as("SET",!0),rr=as("CHARSET",!0),tr=as("COLLATE",!0),er=as("AUTO_INCREMENT",!0),nr=as("AVG_ROW_LENGTH",!0),ur=as("KEY_BLOCK_SIZE",!0),sr=as("MAX_ROWS",!0),or=as("MIN_ROWS",!0),ar=as("STATS_SAMPLE_PAGES",!0),ir=as("CONNECTION",!0),cr=as("COMPRESSION",!0),lr=as("'",!1),fr=as("ZLIB",!0),br=as("LZ4",!0),vr=as("ENGINE",!0),dr=as("READ",!0),Lr=as("LOCAL",!0),Cr=as("LOW_PRIORITY",!0),pr=as("WRITE",!0),wr=as("(",!1),Er=as(")",!1),hr=as("PERCENT",!0),Ar=as("BTREE",!0),yr=as("HASH",!0),Tr=as("NONCLUSTERED",!0),mr=as("PARTITIONS",!0),Sr=function(r,t,e){return {type:r.toLowerCase(),symbol:t,expr:e}},Ir=as("FILLFACTOR",!0),Nr=as("MAX_DURATION",!0),Rr=as("MAXDOP",!0),_r=as("WITH",!0),gr=as("PARSER",!0),Or=as("VISIBLE",!0),xr=as("INVISIBLE",!0),Ur=as("PAD_INDEX",!0),Mr=as("SORT_IN_TEMPDB",!0),Dr=as("IGNORE_DUP_KEY",!0),kr=as("STATISTICS_NORECOMPUTE",!0),$r=as("STATISTICS_INCREMENTAL",!0),Fr=as("DROP_EXISTING",!0),Pr=as("ONLINE",!0),Hr=as("RESUMABLE",!0),Gr=as("ALLOW_ROW_LOCKS",!0),jr=as("ALLOW_PAGE_LOCKS",!0),Yr=as("OPTIMIZE_FOR_SEQUENTIAL_KEY",!0),Br=as("DATA_COMPRESSION",!0),Xr=as("ROW",!0),Wr=as("PAGE",!1),Vr=function(r,t){return t.unshift(r),t.forEach(r=>{const{table:t,as:e}=r;uc[t]=t,e&&(uc[e]=t),function(r){const t=rc(r);r.clear(),t.forEach(t=>r.add(t));}(nc);}),t},Kr=as("=",!1),qr=function(r,t){return Ji(r,t)},Zr=as("!",!1),zr=function(r){return r[0]+" "+r[2]},Jr=as(">=",!1),Qr=as(">",!1),rt=as("<=",!1),tt=as("<>",!1),et=as("<",!1),nt=as("!=",!1),ut=as("+",!1),st=as("-",!1),ot=as("*",!1),at=as("/",!1),it=as("%",!1),ct=function(r){return !0===Vi[r.toUpperCase()]},lt=as('"',!1),ft=/^[^"]/,bt=is(['"'],!0,!1),vt=function(r){return r.join("")},dt=/^[^']/,Lt=is(["'"],!0,!1),Ct=as("`",!1),pt=/^[^`]/,wt=is(["`"],!0,!1),Et=as("[",!1),ht=/^[^\]]/,At=is(["]"],!0,!1),yt=as("]",!1),Tt=function(r,t){return r+t.join("")},mt=/^[A-Za-z_]/,St=is([["A","Z"],["a","z"],"_"],!1,!1),It=/^[A-Za-z0-9_]/,Nt=is([["A","Z"],["a","z"],["0","9"],"_"],!1,!1),Rt=/^[A-Za-z0-9_:]/,_t=is([["A","Z"],["a","z"],["0","9"],"_",":"],!1,!1),gt=as(":",!1),Ot=function(r,t,e){return {type:"function",name:r,args:t||{type:"expr_list",value:[]},over:e}},xt=function(r){return {type:"string",value:r[1].join("")}},Ut=function(r,t){return {type:r.toLowerCase(),value:t[1].join("")}},Mt=as("ON UPDATE CURRENT_TIMESTAMP",!0),Dt=/^[^"\\\0-\x1F\x7F]/,kt=is(['"',"\\",["\0",""],""],!0,!1),$t=/^[^'\\]/,Ft=is(["'","\\"],!0,!1),Pt=as("\\'",!1),Ht=as('\\"',!1),Gt=as("\\\\",!1),jt=as("\\/",!1),Yt=as("\\b",!1),Bt=as("\\f",!1),Xt=as("\\n",!1),Wt=as("\\r",!1),Vt=as("\\t",!1),Kt=as("\\u",!1),qt=as("\\",!1),Zt=/^[\n\r]/,zt=is(["\n","\r"],!1,!1),Jt=as(".",!1),Qt=/^[0-9]/,re=is([["0","9"]],!1,!1),te=/^[0-9a-fA-F]/,ee=is([["0","9"],["a","f"],["A","F"]],!1,!1),ne=/^[eE]/,ue=is(["e","E"],!1,!1),se=/^[+\-]/,oe=is(["+","-"],!1,!1),ae=as("NULL",!0),ie=as("NOT NULL",!0),ce=as("TRUE",!0),le=as("TO",!0),fe=as("TOP",!0),be=as("FALSE",!0),ve=(as("DROP",!0)),de=as("DECLARE",!0),Le=as("USE",!0),Ce=as("ALTER",!0),pe=as("SELECT",!0),we=as("CREATE",!0),Ee=as("TEMPORARY",!0),he=as("IF NOT EXISTS",!0),Ae=as("INSERT",!0),ye=as("RECURSIVE",!1),Te=as("REPLACE",!0),me=as("RENAME",!0),Se=as("IGNORE",!0),Ie=(as("PARTITION",!0)),Ne=as("INTO",!0),Re=as("FROM",!0),_e=as("UNLOCK",!0),ge=as("AS",!0),Oe=as("TABLE",!0),xe=as("DATABASE",!0),Ue=as("SCHEME",!0),Me=as("TABLES",!0),De=as("OFF",!0),ke=as("LEFT",!0),$e=as("RIGHT",!0),Fe=as("FULL",!0),Pe=as("INNER",!0),He=as("JOIN",!0),Ge=as("OUTER",!0),je=as("OVER",!0),Ye=as("UNION",!0),Be=as("VALUES",!0),Xe=as("USING",!0),We=as("WHERE",!0),Ve=as("GROUP",!0),Ke=as("BY",!0),qe=as("ORDER",!0),Ze=as("HAVING",!0),ze=as("LIMIT",!0),Je=as("OFFSET",!0),Qe=as("ASC",!0),rn=as("DESC",!0),tn=as("ALL",!0),en=as("DISTINCT",!0),nn=as("BETWEEN",!0),un=as("IN",!0),sn=as("IS",!0),on=as("LIKE",!0),an=as("EXISTS",!0),cn=as("AND",!0),ln=as("OR",!0),fn=as("COUNT",!0),bn=as("MAX",!0),vn=as("MIN",!0),dn=as("SUM",!0),Ln=as("AVG",!0),Cn=as("CALL",!0),pn=as("CASE",!0),wn=as("WHEN",!0),En=as("THEN",!0),hn=as("ELSE",!0),An=as("END",!0),yn=as("CAST",!0),Tn=as("BIT",!0),mn=as("MONEY",!0),Sn=as("SMALLMONEY",!0),In=as("CHAR",!0),Nn=as("VARCHAR",!0),Rn=as("NCHAR",!0),_n=as("NVARCHAR",!0),gn=as("NUMERIC",!0),On=as("DECIMAL",!0),xn=as("SIGNED",!0),Un=as("UNSIGNED",!0),Mn=as("INT",!0),Dn=as("ZEROFILL",!0),kn=as("INTEGER",!0),$n=as("JSON",!0),Fn=as("SMALLINT",!0),Pn=as("TINYINT",!0),Hn=as("TINYTEXT",!0),Gn=as("TEXT",!0),jn=as("MEDIUMTEXT",!0),Yn=as("LONGTEXT",!0),Bn=as("BIGINT",!0),Xn=as("FLOAT",!0),Wn=as("REAL",!0),Vn=as("DOUBLE",!0),Kn=as("DATE",!0),qn=as("SMALLDATETIME",!0),Zn=as("DATETIME",!0),zn=as("DATETIME2",!0),Jn=as("DATETIMEOFFSET",!0),Qn=as("TIME",!0),ru=as("TIMESTAMP",!0),tu=as("TRUNCATE",!0),eu=as("UNIQUEIDENTIFIER",!0),nu=as("USER",!0),uu=as("CURRENT_DATE",!0),su=(as("INTERVAL",!0)),ou=as("YEAR",!0),au=as("MONTH",!0),iu=as("DAY",!0),cu=as("HOUR",!0),lu=as("MINUTE",!0),fu=as("SECOND",!0),bu=as("CURRENT_TIME",!0),vu=as("CURRENT_TIMESTAMP",!0),du=as("CURRENT_USER",!0),Lu=as("SESSION_USER",!0),Cu=as("SYSTEM_USER",!0),pu=as("GLOBAL",!0),wu=as("SESSION",!0),Eu=as("PERSIST",!0),hu=as("PERSIST_ONLY",!0),Au=as("@",!1),yu=as("@@",!1),Tu=as("$",!1),mu=as("return",!0),Su=as(":=",!1),Iu=as("DUAL",!0),Nu=as("ADD",!0),Ru=as("COLUMN",!0),_u=as("INDEX",!0),gu=as("FULLTEXT",!0),Ou=as("SPATIAL",!0),xu=as("CLUSTERED",!0),Uu=as("COMMENT",!0),Mu=as("CONSTRAINT",!0),Du=as("REFERENCES",!0),ku=as("SQL_CALC_FOUND_ROWS",!0),$u=as("SQL_CACHE",!0),Fu=as("SQL_NO_CACHE",!0),Pu=as("SQL_SMALL_RESULT",!0),Hu=as("SQL_BIG_RESULT",!0),Gu=as("SQL_BUFFER_RESULT",!0),ju=as(",",!1),Yu=as(";",!1),Bu=as("||",!1),Xu=as("&&",!1),Wu=as("/*",!1),Vu=as("*/",!1),Ku=as("--",!1),qu=as("#",!1),Zu={type:"any"},zu=/^[ \t\n\r]/,Ju=is([" ","\t","\n","\r"],!1,!1),Qu=function(r,t,e){return r&&!e||!r&&e},rs=function(r,t,e){return {dataType:t}},ts=function(r,t,e){return {dataType:t}},es=0,ns=[{line:1,column:1}],us=0,ss=[],os=0;if("startRule"in t){if(!(t.startRule in o))throw new Error("Can't start parsing from rule \""+t.startRule+'".');a=o[t.startRule];}function as(r,t){return {type:"literal",text:r,ignoreCase:t}}function is(r,t,e){return {type:"class",parts:r,inverted:t,ignoreCase:e}}function cs(t){var e,n=ns[t];if(n)return n;for(e=t-1;!ns[e];)e--;for(n={line:(n=ns[e]).line,column:n.column};e<t;)10===r.charCodeAt(e)?(n.line++,n.column=1):n.column++,e++;return ns[t]=n,n}function ls(r,t){var e=cs(r),n=cs(t);return {start:{offset:r,line:e.line,column:e.column},end:{offset:t,line:n.line,column:n.column}}}function fs(r){es<us||(es>us&&(us=es,ss=[]),ss.push(r));}function bs(r,t,e){return new u(u.buildMessage(r,t),r,t,e)}function vs(){var r,t;return r=es,Ni()!==s?((t=function(){var r,t,e,n,u,o,a,i;if(r=es,(t=Ls())!==s){if(e=[],n=es,(u=Ni())!==s&&(o=Si())!==s&&(a=Ni())!==s&&(i=Ls())!==s?n=u=[u,o,a,i]:(es=n,n=s),n!==s)for(;n!==s;)e.push(n),n=es,(u=Ni())!==s&&(o=Si())!==s&&(a=Ni())!==s&&(i=Ls())!==s?n=u=[u,o,a,i]:(es=n,n=s);else e=s;e!==s?(t=function(r,t){const e=[r&&r.ast||r];for(let r=0;r<t.length;r++)t[r][3]&&0!==t[r][3].length&&e.push(t[r][3]&&t[r][3].ast||t[r][3]);return {tableList:Array.from(ec),columnList:rc(nc),ast:e}}(t,e),r=t):(es=r,r=s);}else es=r,r=s;return r}())===s&&(t=ds())===s&&(t=Ls()),t!==s?(r=t):(es=r,r=s)):(es=r,r=s),r}function ds(){var t;return (t=function(){var t,e,n,u,o,a;t=es,(e=sa())!==s&&Ni()!==s&&(n=pa())!==s&&Ni()!==s&&(u=Js())!==s?(i=e,c=n,(l=u)&&l.forEach(r=>ec.add(`${i}::${r.db}::${r.table}`)),e={tableList:Array.from(ec),columnList:rc(nc),ast:{type:i.toLowerCase(),keyword:c.toLowerCase(),name:l}},t=e):(es=t,t=s);var i,c,l;t===s&&(t=es,(e=sa())!==s&&Ni()!==s?("procedure"===r.substr(es,9).toLowerCase()?(n=r.substr(es,9),es+=9):(n=s,0===os&&fs(S)),n!==s&&Ni()!==s&&(u=Mo())!==s?(e=function(r,t,e){return {tableList:Array.from(ec),columnList:rc(nc),ast:{type:r.toLowerCase(),keyword:t.toLowerCase(),name:e}}}(e,n,u),t=e):(es=t,t=s)):(es=t,t=s),t===s&&(t=es,(e=sa())!==s&&Ni()!==s&&(n=vi())!==s&&Ni()!==s&&(u=xo())!==s&&Ni()!==s&&Ea()!==s&&Ni()!==s&&(o=eo())!==s&&Ni()!==s?((a=function(){var r,t,e,n,u,o;r=es,(t=ms())===s&&(t=Ss());if(t!==s){for(e=[],n=es,(u=Ni())!==s?((o=ms())===s&&(o=Ss()),o!==s?n=u=[u,o]:(es=n,n=s)):(es=n,n=s);n!==s;)e.push(n),n=es,(u=Ni())!==s?((o=ms())===s&&(o=Ss()),o!==s?n=u=[u,o]:(es=n,n=s)):(es=n,n=s);e!==s?(t=f(t,e),r=t):(es=r,r=s);}else es=r,r=s;return r}())===s&&(a=null),a!==s&&Ni()!==s?(e=function(r,t,e,n,u){return {tableList:Array.from(ec),columnList:rc(nc),ast:{type:r.toLowerCase(),keyword:t.toLowerCase(),name:e,table:n,options:u}}}(e,n,u,o,a),t=e):(es=t,t=s)):(es=t,t=s)));return t}())===s&&(t=function(){var t;(t=function(){var t,e,n,u,o,a,c,l,f,b;t=es,(e=ia())!==s&&Ni()!==s?((n=ca())===s&&(n=null),n!==s&&Ni()!==s&&pa()!==s&&Ni()!==s?((u=la())===s&&(u=null),u!==s&&Ni()!==s&&(o=Js())!==s&&Ni()!==s&&(a=ws())!==s&&Ni()!==s?((c=function(){var r,t,e,n,u,o,a,c;if(r=es,(t=Ms())!==s){for(e=[],n=es,(u=Ni())!==s?((o=Ei())===s&&(o=null),o!==s&&(a=Ni())!==s&&(c=Ms())!==s?n=u=[u,o,a,c]:(es=n,n=s)):(es=n,n=s);n!==s;)e.push(n),n=es,(u=Ni())!==s?((o=Ei())===s&&(o=null),o!==s&&(a=Ni())!==s&&(c=Ms())!==s?n=u=[u,o,a,c]:(es=n,n=s)):(es=n,n=s);e!==s?(t=i(t,e),r=t):(es=r,r=s);}else es=r,r=s;return r}())===s&&(c=null),c!==s&&Ni()!==s?((l=function(){var t,e,n,u;t=es,"ignore"===r.substr(es,6).toLowerCase()?(e=r.substr(es,6),es+=6):(e=s,0===os&&fs(Se));e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?t=e=[e,n]:(es=t,t=s)):(es=t,t=s);return t}())===s&&(l=fa()),l===s&&(l=null),l!==s&&Ni()!==s?((f=Ca())===s&&(f=null),f!==s&&Ni()!==s?((b=Cs())===s&&(b=null),b!==s?(v=e,d=n,L=u,p=a,w=c,E=l,h=f,A=b,(C=o)&&C.forEach(r=>ec.add(`create::${r.db}::${r.table}`)),e={tableList:Array.from(ec),columnList:rc(nc),ast:{type:v[0].toLowerCase(),keyword:"table",temporary:d&&d[0].toLowerCase(),if_not_exists:L&&L[0].toLowerCase(),table:C,ignore_replace:E&&E[0].toLowerCase(),as:h&&h[0].toLowerCase(),query_expr:A&&A.ast,create_definitions:p,table_options:w}},t=e):(es=t,t=s)):(es=t,t=s)):(es=t,t=s)):(es=t,t=s)):(es=t,t=s)):(es=t,t=s)):(es=t,t=s);var v,d,L,C,p,w,E,h,A;t===s&&(t=es,(e=ia())!==s&&Ni()!==s?((n=ca())===s&&(n=null),n!==s&&Ni()!==s&&pa()!==s&&Ni()!==s?((u=la())===s&&(u=null),u!==s&&Ni()!==s&&(o=Js())!==s&&Ni()!==s&&(a=function r(){var t,e;(t=function(){var r,t,e;r=es,(t=Ma())!==s&&Ni()!==s&&(e=Js())!==s?(t=function(r){return {type:"like",table:r}}(e),r=t):(es=r,r=s);return r}())===s&&(t=es,Ai()!==s&&Ni()!==s&&(e=r())!==s&&Ni()!==s&&yi()!==s?((n=e).parentheses=!0,t=n):(es=t,t=s));var n;return t}())!==s?(e=function(r,t,e,n,u){return n&&n.forEach(r=>ec.add(`create::${r.db}::${r.table}`)),{tableList:Array.from(ec),columnList:rc(nc),ast:{type:r[0].toLowerCase(),keyword:"table",temporary:t&&t[0].toLowerCase(),if_not_exists:e&&e[0].toLowerCase(),table:n,like:u}}}(e,n,u,o,a),t=e):(es=t,t=s)):(es=t,t=s)):(es=t,t=s));return t}())===s&&(t=function(){var t,e,n,u,o,a,f,b,v,d,L,C,p,w,E,h,A,y;t=es,(e=ia())!==s&&Ni()!==s?((n=Li())===s&&(n=function(){var t,e,n,u;t=es,"clustered"===r.substr(es,9).toLowerCase()?(e=r.substr(es,9),es+=9):(e=s,0===os&&fs(xu));e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="CLUSTERED"):(es=t,t=s)):(es=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=es,"nonclustered"===r.substr(es,12).toLowerCase()?(e=r.substr(es,12),es+=12):(e=s,0===os&&fs(Tr));e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="NONCLUSTERED"):(es=t,t=s)):(es=t,t=s);return t}()),n===s&&(n=null),n!==s&&Ni()!==s&&(u=vi())!==s&&Ni()!==s&&(o=Mo())!==s&&Ni()!==s&&(a=Ea())!==s&&Ni()!==s&&(f=eo())!==s&&Ni()!==s&&Ai()!==s&&Ni()!==s&&(b=function(){var r,t,e,n,u,o,a,c;if(r=es,(t=ps())!==s){for(e=[],n=es,(u=Ni())!==s&&(o=Ei())!==s&&(a=Ni())!==s&&(c=ps())!==s?n=u=[u,o,a,c]:(es=n,n=s);n!==s;)e.push(n),n=es,(u=Ni())!==s&&(o=Ei())!==s&&(a=Ni())!==s&&(c=ps())!==s?n=u=[u,o,a,c]:(es=n,n=s);e!==s?(t=i(t,e),r=t):(es=r,r=s);}else es=r,r=s;return r}())!==s&&Ni()!==s&&yi()!==s&&Ni()!==s?((v=function(){var t,e,n;t=es,"include"===r.substr(es,7).toLowerCase()?(e=r.substr(es,7),es+=7):(e=s,0===os&&fs(c));e!==s&&Ni()!==s&&Ai()!==s&&Ni()!==s&&(n=Uo())!==s&&Ni()!==s&&yi()!==s?(o=n,e={type:(u=e).toLowerCase(),keyword:u.toLowerCase(),columns:o},t=e):(es=t,t=s);var u,o;return t}())===s&&(v=null),v!==s&&Ni()!==s?((d=uo())===s&&(d=null),d!==s&&Ni()!==s?(L=es,(C=Sa())!==s&&(p=Ni())!==s&&(w=Ai())!==s&&(E=Ni())!==s&&(h=function(){var r,t,e,n,u,o,a,c;if(r=es,(t=zs())!==s){for(e=[],n=es,(u=Ni())!==s&&(o=Ei())!==s&&(a=Ni())!==s&&(c=zs())!==s?n=u=[u,o,a,c]:(es=n,n=s);n!==s;)e.push(n),n=es,(u=Ni())!==s&&(o=Ei())!==s&&(a=Ni())!==s&&(c=zs())!==s?n=u=[u,o,a,c]:(es=n,n=s);e!==s?(t=i(t,e),r=t):(es=r,r=s);}else es=r,r=s;return r}())!==s&&(A=Ni())!==s&&(y=yi())!==s?L=C=[C,p,w,E,h,A,y]:(es=L,L=s),L===s&&(L=null),L!==s&&(C=Ni())!==s?((p=no())===s&&(p=null),p!==s&&(w=Ni())!==s?(E=es,"filestream_on"===r.substr(es,13).toLowerCase()?(h=r.substr(es,13),es+=13):(h=s,0===os&&fs(l)),h!==s&&(A=Ni())!==s&&(y=Mo())!==s?E=h=[h,A,y]:(es=E,E=s),E===s&&(E=null),E!==s?(T=e,m=n,S=u,I=o,N=a,R=f,_=b,g=v,O=d,x=L,U=p,M=E,e={tableList:Array.from(ec),columnList:rc(nc),ast:{type:T[0].toLowerCase(),index_type:m&&m.toLowerCase(),keyword:S.toLowerCase(),index:I,on_kw:N[0].toLowerCase(),table:R,index_columns:_,include:g,where:O,with:x&&x[4],on:U,filestream_on:M&&{value:M[2]}}},t=e):(es=t,t=s)):(es=t,t=s)):(es=t,t=s)):(es=t,t=s)):(es=t,t=s)):(es=t,t=s)):(es=t,t=s);var T,m,S,I,N,R,_,g,O,x,U,M;return t}())===s&&(t=function(){var t,e,n,u,o,a;t=es,(e=ia())!==s&&Ni()!==s?((n=function(){var t,e,n,u;t=es,"database"===r.substr(es,8).toLowerCase()?(e=r.substr(es,8),es+=8):(e=s,0===os&&fs(xe));e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="DATABASE"):(es=t,t=s)):(es=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=es,"scheme"===r.substr(es,6).toLowerCase()?(e=r.substr(es,6),es+=6):(e=s,0===os&&fs(Ue));e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="SCHEME"):(es=t,t=s)):(es=t,t=s);return t}()),n!==s&&Ni()!==s?((u=la())===s&&(u=null),u!==s&&Ni()!==s&&(o=$o())!==s&&Ni()!==s?((a=function(){var r,t,e,n,u,o;if(r=es,(t=Us())!==s){for(e=[],n=es,(u=Ni())!==s&&(o=Us())!==s?n=u=[u,o]:(es=n,n=s);n!==s;)e.push(n),n=es,(u=Ni())!==s&&(o=Us())!==s?n=u=[u,o]:(es=n,n=s);e!==s?(t=f(t,e),r=t):(es=r,r=s);}else es=r,r=s;return r}())===s&&(a=null),a!==s?(i=e,c=u,l=o,b=a,e={tableList:Array.from(ec),columnList:rc(nc),ast:{type:i[0].toLowerCase(),keyword:"database",if_not_exists:c&&c[0].toLowerCase(),database:l,create_definitions:b}},t=e):(es=t,t=s)):(es=t,t=s)):(es=t,t=s)):(es=t,t=s);var i,c,l,b;return t}());return t}())===s&&(t=function(){var t,e,n,u;t=es,(e=function(){var t,e,n,u;t=es,"truncate"===r.substr(es,8).toLowerCase()?(e=r.substr(es,8),es+=8):(e=s,0===os&&fs(tu));e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="TRUNCATE"):(es=t,t=s)):(es=t,t=s);return t}())!==s&&Ni()!==s?((n=pa())===s&&(n=null),n!==s&&Ni()!==s&&(u=Js())!==s?(o=e,a=n,(i=u)&&i.forEach(r=>ec.add(`${o}::${r.db}::${r.table}`)),e={tableList:Array.from(ec),columnList:rc(nc),ast:{type:o.toLowerCase(),keyword:a&&a.toLowerCase()||"table",name:i}},t=e):(es=t,t=s)):(es=t,t=s);var o,a,i;return t}())===s&&(t=function(){var r,t,e;r=es,(t=ba())!==s&&Ni()!==s&&pa()!==s&&Ni()!==s&&(e=function(){var r,t,e,n,u,o,a,i;if(r=es,(t=Ws())!==s){for(e=[],n=es,(u=Ni())!==s&&(o=Ei())!==s&&(a=Ni())!==s&&(i=Ws())!==s?n=u=[u,o,a,i]:(es=n,n=s);n!==s;)e.push(n),n=es,(u=Ni())!==s&&(o=Ei())!==s&&(a=Ni())!==s&&(i=Ws())!==s?n=u=[u,o,a,i]:(es=n,n=s);e!==s?(t=b(t,e),r=t):(es=r,r=s);}else es=r,r=s;return r}())!==s?((n=e).forEach(r=>r.forEach(r=>r.table&&ec.add(`rename::${r.db}::${r.table}`))),t={tableList:Array.from(ec),columnList:rc(nc),ast:{type:"rename",table:n}},r=t):(es=r,r=s);var n;return r}())===s&&(t=function(){var t,e,n;t=es,(e=function(){var t,e,n,u;t=es,"call"===r.substr(es,4).toLowerCase()?(e=r.substr(es,4),es+=4):(e=s,0===os&&fs(Cn));e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="CALL"):(es=t,t=s)):(es=t,t=s);return t}())!==s&&Ni()!==s&&(n=Gi())!==s?(u=n,e={tableList:Array.from(ec),columnList:rc(nc),ast:{type:"call",expr:u}},t=e):(es=t,t=s);var u;return t}())===s&&(t=function(){var t,e,n;t=es,(e=function(){var t,e,n,u;t=es,"use"===r.substr(es,3).toLowerCase()?(e=r.substr(es,3),es+=3):(e=s,0===os&&fs(Le));e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?t=e=[e,n]:(es=t,t=s)):(es=t,t=s);return t}())!==s&&Ni()!==s&&(n=Mo())!==s?(u=n,ec.add(`use::${u}::null`),e={tableList:Array.from(ec),columnList:rc(nc),ast:{type:"use",db:u}},t=e):(es=t,t=s);var u;return t}())===s&&(t=function(){var r,t,e,n;r=es,(t=aa())!==s&&Ni()!==s&&pa()!==s&&Ni()!==s&&(e=Js())!==s&&Ni()!==s&&(n=function(){var r,t,e,n,u,o,a,i;if(r=es,(t=Ts())!==s){for(e=[],n=es,(u=Ni())!==s&&(o=Ei())!==s&&(a=Ni())!==s&&(i=Ts())!==s?n=u=[u,o,a,i]:(es=n,n=s);n!==s;)e.push(n),n=es,(u=Ni())!==s&&(o=Ei())!==s&&(a=Ni())!==s&&(i=Ts())!==s?n=u=[u,o,a,i]:(es=n,n=s);e!==s?(t=b(t,e),r=t):(es=r,r=s);}else es=r,r=s;return r}())!==s?(o=n,(u=e)&&u.length>0&&u.forEach(r=>ec.add(`alter::${r.db}::${r.table}`)),t={tableList:Array.from(ec),columnList:rc(nc),ast:{type:"alter",table:u,expr:o}},r=t):(es=r,r=s);var u,o;return r}())===s&&(t=function(){var t,e,n,u;t=es,(e=La())!==s&&Ni()!==s?((n=function(){var t,e,n,u;t=es,"global"===r.substr(es,6).toLowerCase()?(e=r.substr(es,6),es+=6):(e=s,0===os&&fs(pu));e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="GLOBAL"):(es=t,t=s)):(es=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=es,"session"===r.substr(es,7).toLowerCase()?(e=r.substr(es,7),es+=7):(e=s,0===os&&fs(wu));e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="SESSION"):(es=t,t=s)):(es=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=es,"local"===r.substr(es,5).toLowerCase()?(e=r.substr(es,5),es+=5):(e=s,0===os&&fs(Lr));e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="LOCAL"):(es=t,t=s)):(es=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=es,"persist"===r.substr(es,7).toLowerCase()?(e=r.substr(es,7),es+=7):(e=s,0===os&&fs(Eu));e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="PERSIST"):(es=t,t=s)):(es=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=es,"persist_only"===r.substr(es,12).toLowerCase()?(e=r.substr(es,12),es+=12):(e=s,0===os&&fs(hu));e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="PERSIST_ONLY"):(es=t,t=s)):(es=t,t=s);return t}()),n===s&&(n=null),n!==s&&Ni()!==s&&(u=Di())!==s?(o=n,(a=u).keyword=o,e={tableList:Array.from(ec),columnList:rc(nc),ast:{type:"set",expr:a}},t=e):(es=t,t=s)):(es=t,t=s);var o,a;return t}())===s&&(t=function(){var t,e,n;t=es,(e=function(){var t,e,n,u;t=es,"lock"===r.substr(es,4).toLowerCase()?(e=r.substr(es,4),es+=4):(e=s,0===os&&fs(g));e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?t=e=[e,n]:(es=t,t=s)):(es=t,t=s);return t}())!==s&&Ni()!==s&&wa()!==s&&Ni()!==s&&(n=function(){var r,t,e,n,u,o,a,i;if(r=es,(t=Ds())!==s){for(e=[],n=es,(u=Ni())!==s&&(o=Ei())!==s&&(a=Ni())!==s&&(i=Ds())!==s?n=u=[u,o,a,i]:(es=n,n=s);n!==s;)e.push(n),n=es,(u=Ni())!==s&&(o=Ei())!==s&&(a=Ni())!==s&&(i=Ds())!==s?n=u=[u,o,a,i]:(es=n,n=s);e!==s?(t=zi(t,e),r=t):(es=r,r=s);}else es=r,r=s;return r}())!==s?(u=n,e={tableList:Array.from(ec),columnList:rc(nc),ast:{type:"lock",keyword:"tables",tables:u}},t=e):(es=t,t=s);var u;return t}())===s&&(t=function(){var t,e;t=es,(e=function(){var t,e,n,u;t=es,"unlock"===r.substr(es,6).toLowerCase()?(e=r.substr(es,6),es+=6):(e=s,0===os&&fs(_e));e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?t=e=[e,n]:(es=t,t=s)):(es=t,t=s);return t}())!==s&&Ni()!==s&&wa()!==s?(e={tableList:Array.from(ec),columnList:rc(nc),ast:{type:"unlock",keyword:"tables"}},t=e):(es=t,t=s);return t}())===s&&(t=function(){var r,t,e,n,u,o;r=es,(t=oa())!==s&&Ni()!==s&&(e=function(){var r,t,e,n,u,o,a,i;if(r=es,(t=ys())!==s){for(e=[],n=es,(u=Ni())!==s&&(o=Ei())!==s&&(a=Ni())!==s&&(i=ys())!==s?n=u=[u,o,a,i]:(es=n,n=s);n!==s;)e.push(n),n=es,(u=Ni())!==s&&(o=Ei())!==s&&(a=Ni())!==s&&(i=ys())!==s?n=u=[u,o,a,i]:(es=n,n=s);e!==s?(t=b(t,e),r=t):(es=r,r=s);}else es=r,r=s;return r}())!==s?(a=e,t={tableList:Array.from(ec),columnList:rc(nc),ast:{type:"declare",declare:a}},r=t):(es=r,r=s);var a;r===s&&(r=es,(t=oa())!==s&&Ni()!==s&&(e=ii())!==s&&Ni()!==s&&(n=$o())!==s&&Ni()!==s?((u=Ca())===s&&(u=null),u!==s&&Ni()!==s&&pa()!==s&&Ni()!==s&&(o=ws())!==s?(i=n,c=u,l=o,t={tableList:Array.from(ec),columnList:rc(nc),ast:{type:"declare",declare:[{at:"@",name:i,as:c&&c[0].toLowerCase(),keyword:"table",prefix:"table",definition:l}]}},r=t):(es=r,r=s)):(es=r,r=s));var i,c,l;return r}()),t}function Ls(){var t;return (t=Cs())===s&&(t=function(){var t,e,n,u,o;t=es,(e=function(){var t,e,n,u;t=es,"update"===r.substr(es,6).toLowerCase()?(e=r.substr(es,6),es+=6):(e=s,0===os&&fs(W));e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?t=e=[e,n]:(es=t,t=s)):(es=t,t=s);return t}())!==s&&Ni()!==s&&(n=Js())!==s&&Ni()!==s&&La()!==s&&Ni()!==s&&(u=function(){var r,t,e,n,u,o,a,i;if(r=es,(t=co())!==s){for(e=[],n=es,(u=Ni())!==s&&(o=Ei())!==s&&(a=Ni())!==s&&(i=co())!==s?n=u=[u,o,a,i]:(es=n,n=s);n!==s;)e.push(n),n=es,(u=Ni())!==s&&(o=Ei())!==s&&(a=Ni())!==s&&(i=co())!==s?n=u=[u,o,a,i]:(es=n,n=s);e!==s?(t=b(t,e),r=t):(es=r,r=s);}else es=r,r=s;return r}())!==s&&Ni()!==s?((o=uo())===s&&(o=null),o!==s?(i=u,c=o,(a=n)&&a.forEach(r=>{const{db:t,as:e,table:n}=r;ec.add(`update::${t}::${n}`);}),i&&i.forEach(r=>nc.add(`update::${r.table}::${r.column}`)),e={tableList:Array.from(ec),columnList:rc(nc),ast:{type:"update",table:a,set:i,where:c}},t=e):(es=t,t=s)):(es=t,t=s);var a,i,c;return t}())===s&&(t=function(){var r,t,e,n,u,o,a;r=es,(t=bo())!==s&&Ni()!==s?((e=da())===s&&(e=null),e!==s&&Ni()!==s&&(n=eo())!==s&&Ni()!==s?((u=fo())===s&&(u=null),u!==s&&Ni()!==s&&Ai()!==s&&Ni()!==s&&(o=Uo())!==s&&Ni()!==s&&yi()!==s&&Ni()!==s&&(a=lo())!==s?(t=function(r,t,e,n,u){if(t&&(ec.add(`insert::${t.db}::${t.table}`),t.as=null),n){let r=t&&t.table||null;Array.isArray(u)&&u.forEach((r,t)=>{if(r.value.length!=n.length)throw new Error("Error: column count doesn't match value count at row "+(t+1))}),n.forEach(t=>nc.add(`insert::${r}::${t}`));}return {tableList:Array.from(ec),columnList:rc(nc),ast:{type:r,table:[t],columns:n,values:u,partition:e}}}(t,n,u,o,a),r=t):(es=r,r=s)):(es=r,r=s)):(es=r,r=s);return r}())===s&&(t=function(){var r,t,e,n,u;r=es,(t=bo())!==s&&Ni()!==s&&da()!==s&&Ni()!==s&&(e=eo())!==s&&Ni()!==s?((n=fo())===s&&(n=null),n!==s&&Ni()!==s&&(u=lo())!==s?(o=t,i=n,c=u,(a=e)&&(ec.add(`insert::${a.db}::${a.table}`),nc.add(`insert::${a.table}::(.*)`),a.as=null),t={tableList:Array.from(ec),columnList:rc(nc),ast:{type:o,table:[a],columns:null,values:c,partition:i}},r=t):(es=r,r=s)):(es=r,r=s);var o,a,i,c;return r}())===s&&(t=function(){var t,e,n,u,o;t=es,(e=function(){var t,e,n,u;t=es,"delete"===r.substr(es,6).toLowerCase()?(e=r.substr(es,6),es+=6):(e=s,0===os&&fs(X));e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?t=e=[e,n]:(es=t,t=s)):(es=t,t=s);return t}())!==s&&Ni()!==s?((n=Js())===s&&(n=null),n!==s&&Ni()!==s&&(u=Xs())!==s&&Ni()!==s?((o=uo())===s&&(o=null),o!==s?(e=function(r,t,e){if(t&&t.forEach(r=>{r.table&&ec.add(`delete::${r.db}::${r.table}`),nc.add(`delete::${r.table}::(.*)`);}),null===r&&1===t.length){const e=t[0];r=[{db:e.db,table:e.table,as:e.as,addition:!0}];}return {tableList:Array.from(ec),columnList:rc(nc),ast:{type:"delete",table:r,from:t,where:e}}}(n,u,o),t=e):(es=t,t=s)):(es=t,t=s)):(es=t,t=s);return t}())===s&&(t=ds())===s&&(t=function(){var r,t;r=[],t=Mi();for(;t!==s;)r.push(t),t=Mi();return r}()),t}function Cs(){var r,t,e,n,u,o,a,i,c,l;if(r=es,(t=ks())!==s){for(e=[],n=es,(u=Ni())!==s&&(o=ya())!==s&&(a=Ni())!==s?((i=_a())===s&&(i=null),i!==s&&(c=Ni())!==s&&(l=ks())!==s?n=u=[u,o,a,i,c,l]:(es=n,n=s)):(es=n,n=s);n!==s;)e.push(n),n=es,(u=Ni())!==s&&(o=ya())!==s&&(a=Ni())!==s?((i=_a())===s&&(i=null),i!==s&&(c=Ni())!==s&&(l=ks())!==s?n=u=[u,o,a,i,c,l]:(es=n,n=s)):(es=n,n=s);e!==s&&(n=Ni())!==s?((u=so())===s&&(u=null),u!==s&&(o=Ni())!==s?((a=io())===s&&(a=null),a!==s?(r=t=function(r,t,e,n){let u=r;for(let r=0;r<t.length;r++)u._next=t[r][5],u.union=t[r][3]?"union all":"union",u=u._next;return e&&(r._orderby=e),n&&(r._limit=n),{tableList:Array.from(ec),columnList:rc(nc),ast:r}}(t,e,u,a)):(es=r,r=s)):(es=r,r=s)):(es=r,r=s);}else es=r,r=s;return r}function ps(){var r,t,e,n;return r=es,Ti()!==s&&Ni()!==s&&(t=xo())!==s&&Ni()!==s&&mi()!==s&&Ni()!==s?((e=Na())===s&&(e=Ra()),e===s&&(e=null),e!==s?(r={column:t,order:(n=e)&&n.toLowerCase()||"asc"}):(es=r,r=s)):(es=r,r=s),r===s&&(r=function(){var r,t,e;r=es,(t=xo())!==s&&Ni()!==s?((e=Na())===s&&(e=Ra()),e===s&&(e=null),e!==s?(t=function(r,t){return {column:r,order:t&&t.toLowerCase()||"asc"}}(t,e),r=t):(es=r,r=s)):(es=r,r=s);return r}()),r}function ws(){var r,t,e,n,u,o,a,i;if(r=es,Ai()!==s)if(Ni()!==s)if((t=Es())!==s){for(e=[],n=es,(u=Ni())!==s&&(o=Ei())!==s&&(a=Ni())!==s&&(i=Es())!==s?n=u=[u,o,a,i]:(es=n,n=s);n!==s;)e.push(n),n=es,(u=Ni())!==s&&(o=Ei())!==s&&(a=Ni())!==s&&(i=Es())!==s?n=u=[u,o,a,i]:(es=n,n=s);e!==s&&(n=Ni())!==s?((u=Ei())===s&&(u=null),u!==s&&(o=Ni())!==s&&(a=yi())!==s?(r=b(t,e)):(es=r,r=s)):(es=r,r=s);}else es=r,r=s;else es=r,r=s;else es=r,r=s;return r}function Es(){var r;return (r=Rs())===s&&(r=As())===s&&(r=Is())===s&&(r=Ns()),r}function hs(){var t,e,n,u,o,a;return t=es,(e=function(){var e;(e=function(){var t,e,n,u;t=es,"not null"===r.substr(es,8).toLowerCase()?(e=r.substr(es,8),es+=8):(e=s,0===os&&fs(ie));e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?t=e=[e,n]:(es=t,t=s)):(es=t,t=s);return t}())!==s&&(e={type:"not null",value:"not null"});return e}())===s&&(e=Bo()),e!==s&&((a=e)&&!a.value&&(a.value="null"),e={nullable:a}),(t=e)===s&&(t=es,(e=function(){var r,t;r=es,na()!==s&&Ni()!==s?((t=Yo())===s&&(t=Eo()),t!==s?(r={type:"default",value:t}):(es=r,r=s)):(es=r,r=s);return r}())!==s&&(e={default_val:e}),(t=e)===s&&(t=es,(e=gs())!==s&&(e={check:e}),(t=e)===s&&(t=es,"unique"===r.substr(es,6).toLowerCase()?(e=r.substr(es,6),es+=6):(e=s,0===os&&fs(v)),e===s&&(e=es,"primary"===r.substr(es,7).toLowerCase()?(n=r.substr(es,7),es+=7):(n=s,0===os&&fs(d)),n!==s&&(u=Ni())!==s?("key"===r.substr(es,3).toLowerCase()?(o=r.substr(es,3),es+=3):(o=s,0===os&&fs(L)),o!==s?e=n=[n,u,o]:(es=e,e=s)):(es=e,e=s)),e!==s&&(e=function(r){let t=[r];return Array.isArray(r)&&(t=[r[0],r[2]]),{unique_or_primary:t.filter(r=>r).join(" ").toLowerCase("")}}(e)),(t=e)===s&&(t=es,(e=function(){var t,e,n,u,o,a,i,c,l,f,b,v;t=es,"identity"===r.substr(es,8).toLowerCase()?(e=r.substr(es,8),es+=8):(e=s,0===os&&fs(C));e!==s&&Ni()!==s?(n=es,(u=Ai())!==s&&(o=Ni())!==s&&(a=qo())!==s&&(i=Ni())!==s&&(c=Ei())!==s&&(l=Ni())!==s&&(f=qo())!==s&&(b=Ni())!==s&&(v=yi())!==s?n=u=[u,o,a,i,c,l,f,b,v]:(es=n,n=s),n===s&&(n=null),n!==s?(e={keyword:"identity",seed:(d=n)&&d[2],increment:d&&d[6],parentheses:!!d},t=e):(es=t,t=s)):(es=t,t=s);var d;return t}())!==s&&(e={auto_increment:e}),(t=e)===s&&(t=es,(e=gi())!==s&&(e={comment:e}),(t=e)===s&&(t=es,(e=function(){var t,e;t=es,function(){var t,e,n,u;t=es,"collate"===r.substr(es,7).toLowerCase()?(e=r.substr(es,7),es+=7):(e=s,0===os&&fs(tr));e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="COLLATE"):(es=t,t=s)):(es=t,t=s);return t}()!==s&&Ni()!==s&&(e=$o())!==s?(t={type:"collate",value:e}):(es=t,t=s);return t}())!==s&&(e={collate:e}),(t=e)===s&&(t=es,(e=function(){var t,e,n;t=es,"column_format"===r.substr(es,13).toLowerCase()?(e=r.substr(es,13),es+=13):(e=s,0===os&&fs(p));e!==s&&Ni()!==s?("fixed"===r.substr(es,5).toLowerCase()?(n=r.substr(es,5),es+=5):(n=s,0===os&&fs(w)),n===s&&("dynamic"===r.substr(es,7).toLowerCase()?(n=r.substr(es,7),es+=7):(n=s,0===os&&fs(E)),n===s&&("default"===r.substr(es,7).toLowerCase()?(n=r.substr(es,7),es+=7):(n=s,0===os&&fs(h)))),n!==s?(e=function(r,t){return {type:"column_format",value:t.toLowerCase()}}(0,n),t=e):(es=t,t=s)):(es=t,t=s);return t}())!==s&&(e={column_format:e}),(t=e)===s&&(t=es,(e=function(){var t,e,n;t=es,"storage"===r.substr(es,7).toLowerCase()?(e=r.substr(es,7),es+=7):(e=s,0===os&&fs(A));e!==s&&Ni()!==s?("disk"===r.substr(es,4).toLowerCase()?(n=r.substr(es,4),es+=4):(n=s,0===os&&fs(y)),n===s&&("memory"===r.substr(es,6).toLowerCase()?(n=r.substr(es,6),es+=6):(n=s,0===os&&fs(T))),n!==s?(e={type:"storage",value:n.toLowerCase()},t=e):(es=t,t=s)):(es=t,t=s);return t}())!==s&&(e={storage:e}),(t=e)===s&&(t=es,(e=Os())!==s&&(e={reference_definition:e}),t=e))))))))),t}function As(){var r,t,e,n,u,o,a,i,c;return r=es,(t=xo())!==s&&Ni()!==s&&(e=Xi())!==s&&(n=Ni())!==s?((u=function(){var r,t,e,n,u,o;if(r=es,(t=hs())!==s)if(Ni()!==s){for(e=[],n=es,(u=Ni())!==s&&(o=hs())!==s?n=u=[u,o]:(es=n,n=s);n!==s;)e.push(n),n=es,(u=Ni())!==s&&(o=hs())!==s?n=u=[u,o]:(es=n,n=s);e!==s?(r=t=function(r,t){let e=r;for(let r=0;r<t.length;r++)e={...e,...t[r][1]};return e}(t,e)):(es=r,r=s);}else es=r,r=s;else es=r,r=s;return r}())===s&&(u=null),u!==s?(a=t,i=e,c=u,nc.add(`create::${a.table}::${a.column}`),r=t={column:a,definition:i,resource:"column",...c||{}}):(es=r,r=s)):(es=r,r=s),r===s&&(r=es,(t=xo())!==s&&Ni()!==s?(e=es,(n=Ca())!==s&&(u=Ni())!==s&&(o=Eo())!==s?e=n=[n,u,o]:(es=e,e=s),e===s&&(e=null),e!==s?(r=t=function(r,t){return t&&(r.as=t[2]),{column:r,resource:"column"}}(t,e)):(es=r,r=s)):(es=r,r=s)),r}function ys(){var t,e,n,u,o,a,i,c,l,f,b;return t=es,ii()!==s&&Ni()!==s&&(e=$o())!==s&&Ni()!==s?((n=Ca())===s&&(n=null),n!==s&&Ni()!==s&&(u=Xi())!==s&&Ni()!==s?(o=es,(a=li())!==s&&(i=Ni())!==s&&(c=Eo())!==s?o=a=[a,i,c]:(es=o,o=s),o===s&&(o=null),o!==s?(f=u,b=o,t={at:"@",name:e,as:(l=n)&&l[0].toLowerCase(),prefix:f,keyword:"variable",definition:b&&b[2]}):(es=t,t=s)):(es=t,t=s)):(es=t,t=s),t===s&&(t=es,ii()!==s&&Ni()!==s&&(e=$o())!==s&&Ni()!==s?("cursor"===r.substr(es,6).toLowerCase()?(n=r.substr(es,6),es+=6):(n=s,0===os&&fs(m)),n!==s?(t=function(r,t){return {at:"@",name:t,keyword:"cursor",prefix:"cursor"}}(0,e)):(es=t,t=s)):(es=t,t=s)),t}function Ts(){var t;return (t=function(){var r,t;r=es,fi()!==s&&Ni()!==s&&(t=Rs())!==s?(r={action:"add",create_definitions:t,resource:"constraint",type:"alter"}):(es=r,r=s);return r}())===s&&(t=function(){var r,t,e,n;r=es,(t=sa())!==s&&Ni()!==s&&(e=pi())!==s&&Ni()!==s&&(n=$o())!==s?(t={action:"drop",constraint:n,keyword:e.toLowerCase(),resource:"constraint",type:"alter"},r=t):(es=r,r=s);return r}())===s&&(t=function(){var t,e,n,u;t=es,Sa()!==s&&Ni()!==s?("check"===r.substr(es,5).toLowerCase()?(e=r.substr(es,5),es+=5):(e=s,0===os&&fs(M)),e!==s&&Ni()!==s?("check"===r.substr(es,5).toLowerCase()?(n=r.substr(es,5),es+=5):(n=s,0===os&&fs(M)),n!==s&&Ni()!==s&&pi()!==s&&Ni()!==s&&(u=$o())!==s?(t={action:"with",constraint:u,keyword:"check check constraint",resource:"constraint",type:"alter"}):(es=t,t=s)):(es=t,t=s)):(es=t,t=s);return t}())===s&&(t=function(){var t,e,n;t=es,"nocheck"===r.substr(es,7).toLowerCase()?(e=r.substr(es,7),es+=7):(e=s,0===os&&fs(D));e!==s&&Ni()!==s&&pi()!==s&&Ni()!==s&&(n=$o())!==s?(t=e={action:"nocheck",keyword:"constraint",constraint:n,resource:"constraint",type:"alter"}):(es=t,t=s);return t}())===s&&(t=function(){var r,t,e,n;r=es,(t=fi())===s&&(t=aa());t!==s&&Ni()!==s?((e=bi())===s&&(e=null),e!==s&&Ni()!==s&&(n=As())!==s?(u=e,o=n,t={action:t.toLowerCase(),...o,keyword:u,resource:"column",type:"alter"},r=t):(es=r,r=s)):(es=r,r=s);var u,o;return r}())===s&&(t=function(){var r,t,e;r=es,sa()!==s&&Ni()!==s?((t=bi())===s&&(t=null),t!==s&&Ni()!==s&&(e=xo())!==s?(r={action:"drop",column:e,keyword:t,resource:"column",type:"alter"}):(es=r,r=s)):(es=r,r=s);return r}())===s&&(t=function(){var r,t,e;r=es,(t=fi())!==s&&Ni()!==s&&(e=Is())!==s?(n=e,t={action:"add",type:"alter",...n},r=t):(es=r,r=s);var n;return r}())===s&&(t=function(){var r,t,e;r=es,(t=fi())!==s&&Ni()!==s&&(e=Ns())!==s?(n=e,t={action:"add",type:"alter",...n},r=t):(es=r,r=s);var n;return r}())===s&&(t=function(){var r,t,e,n;r=es,(t=ba())!==s&&Ni()!==s?((e=ua())===s&&(e=Ca()),e===s&&(e=null),e!==s&&Ni()!==s&&(n=Mo())!==s?(o=n,t={action:"rename",type:"alter",resource:"table",keyword:(u=e)&&u[0].toLowerCase(),table:o},r=t):(es=r,r=s)):(es=r,r=s);var u,o;return r}())===s&&(t=ms())===s&&(t=Ss()),t}function ms(){var t,e,n,u;return t=es,"algorithm"===r.substr(es,9).toLowerCase()?(e=r.substr(es,9),es+=9):(e=s,0===os&&fs(I)),e!==s&&Ni()!==s?((n=li())===s&&(n=null),n!==s&&Ni()!==s?("default"===r.substr(es,7).toLowerCase()?(u=r.substr(es,7),es+=7):(u=s,0===os&&fs(h)),u===s&&("instant"===r.substr(es,7).toLowerCase()?(u=r.substr(es,7),es+=7):(u=s,0===os&&fs(N)),u===s&&("inplace"===r.substr(es,7).toLowerCase()?(u=r.substr(es,7),es+=7):(u=s,0===os&&fs(R)),u===s&&("copy"===r.substr(es,4).toLowerCase()?(u=r.substr(es,4),es+=4):(u=s,0===os&&fs(_))))),u!==s?(t=e={type:"alter",keyword:"algorithm",resource:"algorithm",symbol:n,algorithm:u}):(es=t,t=s)):(es=t,t=s)):(es=t,t=s),t}function Ss(){var t,e,n,u;return t=es,"lock"===r.substr(es,4).toLowerCase()?(e=r.substr(es,4),es+=4):(e=s,0===os&&fs(g)),e!==s&&Ni()!==s?((n=li())===s&&(n=null),n!==s&&Ni()!==s?("default"===r.substr(es,7).toLowerCase()?(u=r.substr(es,7),es+=7):(u=s,0===os&&fs(h)),u===s&&("none"===r.substr(es,4).toLowerCase()?(u=r.substr(es,4),es+=4):(u=s,0===os&&fs(O)),u===s&&("shared"===r.substr(es,6).toLowerCase()?(u=r.substr(es,6),es+=6):(u=s,0===os&&fs(x)),u===s&&("exclusive"===r.substr(es,9).toLowerCase()?(u=r.substr(es,9),es+=9):(u=s,0===os&&fs(U))))),u!==s?(t=e={type:"alter",keyword:"lock",resource:"lock",symbol:n,lock:u}):(es=t,t=s)):(es=t,t=s)):(es=t,t=s),t}function Is(){var r,t,e,n,u,o,a,i;return r=es,(t=vi())===s&&(t=di()),t!==s&&Ni()!==s?((e=ko())===s&&(e=null),e!==s&&Ni()!==s?((n=Vs())===s&&(n=null),n!==s&&Ni()!==s&&(u=Ps())!==s&&Ni()!==s?((o=Ks())===s&&(o=null),o!==s&&Ni()!==s?(a=n,i=o,r=t={index:e,definition:u,keyword:t.toLowerCase(),index_type:a,resource:"index",index_options:i}):(es=r,r=s)):(es=r,r=s)):(es=r,r=s)):(es=r,r=s),r}function Ns(){var t,e,n,u,o,a,i,c,l;return t=es,(e=function(){var t,e,n,u;t=es,"fulltext"===r.substr(es,8).toLowerCase()?(e=r.substr(es,8),es+=8):(e=s,0===os&&fs(gu));e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="FULLTEXT"):(es=t,t=s)):(es=t,t=s);return t}())===s&&(e=function(){var t,e,n,u;t=es,"spatial"===r.substr(es,7).toLowerCase()?(e=r.substr(es,7),es+=7):(e=s,0===os&&fs(Ou));e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="SPATIAL"):(es=t,t=s)):(es=t,t=s);return t}()),e!==s&&Ni()!==s?((n=vi())===s&&(n=di()),n===s&&(n=null),n!==s&&Ni()!==s?((u=ko())===s&&(u=null),u!==s&&Ni()!==s&&(o=Ps())!==s&&Ni()!==s?((a=Ks())===s&&(a=null),a!==s&&Ni()!==s?(i=e,l=a,t=e={index:u,definition:o,keyword:(c=n)&&`${i.toLowerCase()} ${c.toLowerCase()}`||i.toLowerCase(),index_options:l,resource:"index"}):(es=t,t=s)):(es=t,t=s)):(es=t,t=s)):(es=t,t=s),t}function Rs(){var t;return (t=function(){var t,e,n,u,o,a;t=es,(e=_s())===s&&(e=null);e!==s&&Ni()!==s?("primary key"===r.substr(es,11).toLowerCase()?(n=r.substr(es,11),es+=11):(n=s,0===os&&fs(k)),n!==s&&Ni()!==s?((u=Vs())===s&&(u=null),u!==s&&Ni()!==s&&(o=Ps())!==s&&Ni()!==s?((a=Ks())===s&&(a=null),a!==s?(c=n,l=u,f=o,b=a,e={constraint:(i=e)&&i.constraint,definition:f,constraint_type:c.toLowerCase(),keyword:i&&i.keyword,index_type:l,resource:"constraint",index_options:b},t=e):(es=t,t=s)):(es=t,t=s)):(es=t,t=s)):(es=t,t=s);var i,c,l,f,b;return t}())===s&&(t=function(){var r,t,e,n,u,o,a,i;r=es,(t=_s())===s&&(t=null);t!==s&&Ni()!==s&&(e=Li())!==s&&Ni()!==s?((n=vi())===s&&(n=di()),n===s&&(n=null),n!==s&&Ni()!==s?((u=ko())===s&&(u=null),u!==s&&Ni()!==s?((o=Vs())===s&&(o=null),o!==s&&Ni()!==s&&(a=Ps())!==s&&Ni()!==s?((i=Ks())===s&&(i=null),i!==s?(l=e,f=n,b=u,v=o,d=a,L=i,t={constraint:(c=t)&&c.constraint,definition:d,constraint_type:f&&`${l.toLowerCase()} ${f.toLowerCase()}`||l.toLowerCase(),keyword:c&&c.keyword,index_type:v,index:b,resource:"constraint",index_options:L},r=t):(es=r,r=s)):(es=r,r=s)):(es=r,r=s)):(es=r,r=s)):(es=r,r=s);var c,l,f,b,v,d,L;return r}())===s&&(t=function(){var t,e,n,u,o,a;t=es,(e=_s())===s&&(e=null);e!==s&&Ni()!==s?("foreign key"===r.substr(es,11).toLowerCase()?(n=r.substr(es,11),es+=11):(n=s,0===os&&fs(H)),n!==s&&Ni()!==s?((u=ko())===s&&(u=null),u!==s&&Ni()!==s&&(o=Ps())!==s&&Ni()!==s?((a=Os())===s&&(a=null),a!==s?(c=n,l=u,f=o,b=a,e={constraint:(i=e)&&i.constraint,definition:f,constraint_type:c,keyword:i&&i.keyword,index:l,resource:"constraint",reference_definition:b},t=e):(es=t,t=s)):(es=t,t=s)):(es=t,t=s)):(es=t,t=s);var i,c,l,f,b;return t}())===s&&(t=gs()),t}function _s(){var r,t,e,n;return r=es,(t=pi())!==s&&Ni()!==s?((e=Mo())===s&&(e=null),e!==s?(n=e,r=t={keyword:t.toLowerCase(),constraint:n}):(es=r,r=s)):(es=r,r=s),r}function gs(){var t,e,n,u,o,a,i,c,l,f,b,v,d;return t=es,(e=_s())===s&&(e=null),e!==s&&Ni()!==s?("check"===r.substr(es,5).toLowerCase()?(n=r.substr(es,5),es+=5):(n=s,0===os&&fs(M)),n!==s&&Ni()!==s?(u=es,"not"===r.substr(es,3).toLowerCase()?(o=r.substr(es,3),es+=3):(o=s,0===os&&fs($)),o!==s&&(a=Ni())!==s?("for"===r.substr(es,3).toLowerCase()?(i=r.substr(es,3),es+=3):(i=s,0===os&&fs(F)),i!==s&&(c=Ni())!==s?("replication"===r.substr(es,11).toLowerCase()?(l=r.substr(es,11),es+=11):(l=s,0===os&&fs(P)),l!==s&&(f=Ni())!==s?u=o=[o,a,i,c,l,f]:(es=u,u=s)):(es=u,u=s)):(es=u,u=s),u===s&&(u=null),u!==s&&(o=Ai())!==s&&(a=Ni())!==s&&(i=Eo())!==s&&(c=Ni())!==s&&(l=yi())!==s?(b=e,v=u,d=i,t=e={constraint_type:n.toLowerCase(),keyword:b&&b.keyword,constraint:b&&b.constraint,index_type:v&&{keyword:"not for replication",type:""},definition:[d],resource:"constraint"}):(es=t,t=s)):(es=t,t=s)):(es=t,t=s),t}function Os(){var t,e,n,u,o,a,i,c,l,f;return t=es,(e=function(){var t,e,n,u;t=es,"references"===r.substr(es,10).toLowerCase()?(e=r.substr(es,10),es+=10):(e=s,0===os&&fs(Du));e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="REFERENCES"):(es=t,t=s)):(es=t,t=s);return t}())!==s&&Ni()!==s&&(n=Js())!==s&&Ni()!==s&&(u=Ps())!==s&&Ni()!==s?("match full"===r.substr(es,10).toLowerCase()?(o=r.substr(es,10),es+=10):(o=s,0===os&&fs(G)),o===s&&("match partial"===r.substr(es,13).toLowerCase()?(o=r.substr(es,13),es+=13):(o=s,0===os&&fs(j)),o===s&&("match simple"===r.substr(es,12).toLowerCase()?(o=r.substr(es,12),es+=12):(o=s,0===os&&fs(Y)))),o===s&&(o=null),o!==s&&Ni()!==s?((a=xs())===s&&(a=null),a!==s&&Ni()!==s?((i=xs())===s&&(i=null),i!==s?(c=o,l=a,f=i,t=e={definition:u,table:n,keyword:e.toLowerCase(),match:c&&c.toLowerCase(),on_delete:l,on_update:f}):(es=t,t=s)):(es=t,t=s)):(es=t,t=s)):(es=t,t=s),t}function xs(){var t,e,n,u,o,a;return t=es,"on"===r.substr(es,2).toLowerCase()?(e=r.substr(es,2),es+=2):(e=s,0===os&&fs(B)),e!==s&&Ni()!==s?("delete"===r.substr(es,6).toLowerCase()?(n=r.substr(es,6),es+=6):(n=s,0===os&&fs(X)),n===s&&("update"===r.substr(es,6).toLowerCase()?(n=r.substr(es,6),es+=6):(n=s,0===os&&fs(W))),n!==s&&Ni()!==s&&(u=function(){var e;"restrict"===r.substr(es,8).toLowerCase()?(e=r.substr(es,8),es+=8):(e=s,0===os&&fs(V));e===s&&("cascade"===r.substr(es,7).toLowerCase()?(e=r.substr(es,7),es+=7):(e=s,0===os&&fs(K)),e===s&&("set null"===r.substr(es,8).toLowerCase()?(e=r.substr(es,8),es+=8):(e=s,0===os&&fs(q)),e===s&&("no action"===r.substr(es,9).toLowerCase()?(e=r.substr(es,9),es+=9):(e=s,0===os&&fs(Z)),e===s&&("set default"===r.substr(es,11).toLowerCase()?(e=r.substr(es,11),es+=11):(e=s,0===os&&fs(z))))));e!==s&&(e=e.toLowerCase());return e}())!==s?(o=n,a=u,t=e={type:`${e.toLowerCase()} ${o.toLowerCase()}`,value:a}):(es=t,t=s)):(es=t,t=s),t}function Us(){var t,e,n,u,o,a,i,c,l;return t=es,(e=na())===s&&(e=null),e!==s&&Ni()!==s?((n=function(){var t,e,n;return t=es,"character"===r.substr(es,9).toLowerCase()?(e=r.substr(es,9),es+=9):(e=s,0===os&&fs(J)),e!==s&&Ni()!==s?("set"===r.substr(es,3).toLowerCase()?(n=r.substr(es,3),es+=3):(n=s,0===os&&fs(Q)),n!==s?(t=e="CHARACTER SET"):(es=t,t=s)):(es=t,t=s),t}())===s&&("charset"===r.substr(es,7).toLowerCase()?(n=r.substr(es,7),es+=7):(n=s,0===os&&fs(rr)),n===s&&("collate"===r.substr(es,7).toLowerCase()?(n=r.substr(es,7),es+=7):(n=s,0===os&&fs(tr)))),n!==s&&Ni()!==s?((u=li())===s&&(u=null),u!==s&&Ni()!==s&&(o=$o())!==s?(i=n,c=u,l=o,t=e={keyword:(a=e)&&`${a[0].toLowerCase()} ${i.toLowerCase()}`||i.toLowerCase(),symbol:c,value:l}):(es=t,t=s)):(es=t,t=s)):(es=t,t=s),t}function Ms(){var t,e,n,u,o,a,i,c,l;return t=es,"auto_increment"===r.substr(es,14).toLowerCase()?(e=r.substr(es,14),es+=14):(e=s,0===os&&fs(er)),e===s&&("avg_row_length"===r.substr(es,14).toLowerCase()?(e=r.substr(es,14),es+=14):(e=s,0===os&&fs(nr)),e===s&&("key_block_size"===r.substr(es,14).toLowerCase()?(e=r.substr(es,14),es+=14):(e=s,0===os&&fs(ur)),e===s&&("max_rows"===r.substr(es,8).toLowerCase()?(e=r.substr(es,8),es+=8):(e=s,0===os&&fs(sr)),e===s&&("min_rows"===r.substr(es,8).toLowerCase()?(e=r.substr(es,8),es+=8):(e=s,0===os&&fs(or)),e===s&&("stats_sample_pages"===r.substr(es,18).toLowerCase()?(e=r.substr(es,18),es+=18):(e=s,0===os&&fs(ar))))))),e!==s&&Ni()!==s?((n=li())===s&&(n=null),n!==s&&Ni()!==s&&(u=qo())!==s?(c=n,l=u,t=e={keyword:e.toLowerCase(),symbol:c,value:l.value}):(es=t,t=s)):(es=t,t=s),t===s&&(t=Us())===s&&(t=es,(e=Ci())===s&&("connection"===r.substr(es,10).toLowerCase()?(e=r.substr(es,10),es+=10):(e=s,0===os&&fs(ir))),e!==s&&Ni()!==s?((n=li())===s&&(n=null),n!==s&&Ni()!==s&&(u=Xo())!==s?(t=e=function(r,t,e){return {keyword:r.toLowerCase(),symbol:t,value:`'${e.value}'`}}(e,n,u)):(es=t,t=s)):(es=t,t=s),t===s&&(t=es,"compression"===r.substr(es,11).toLowerCase()?(e=r.substr(es,11),es+=11):(e=s,0===os&&fs(cr)),e!==s&&Ni()!==s?((n=li())===s&&(n=null),n!==s&&Ni()!==s?(u=es,39===r.charCodeAt(es)?(o="'",es++):(o=s,0===os&&fs(lr)),o!==s?("zlib"===r.substr(es,4).toLowerCase()?(a=r.substr(es,4),es+=4):(a=s,0===os&&fs(fr)),a===s&&("lz4"===r.substr(es,3).toLowerCase()?(a=r.substr(es,3),es+=3):(a=s,0===os&&fs(br)),a===s&&("none"===r.substr(es,4).toLowerCase()?(a=r.substr(es,4),es+=4):(a=s,0===os&&fs(O)))),a!==s?(39===r.charCodeAt(es)?(i="'",es++):(i=s,0===os&&fs(lr)),i!==s?u=o=[o,a,i]:(es=u,u=s)):(es=u,u=s)):(es=u,u=s),u!==s?(t=e=function(r,t,e){return {keyword:r.toLowerCase(),symbol:t,value:e.join("").toUpperCase()}}(e,n,u)):(es=t,t=s)):(es=t,t=s)):(es=t,t=s),t===s&&(t=es,"engine"===r.substr(es,6).toLowerCase()?(e=r.substr(es,6),es+=6):(e=s,0===os&&fs(vr)),e!==s&&Ni()!==s?((n=li())===s&&(n=null),n!==s&&Ni()!==s&&(u=$o())!==s?(t=e=function(r,t,e){return {keyword:r.toLowerCase(),symbol:t,value:e.toUpperCase()}}(e,n,u)):(es=t,t=s)):(es=t,t=s)))),t}function Ds(){var t,e,n,u,o;return t=es,(e=ro())!==s&&Ni()!==s&&(n=function(){var t,e,n;return t=es,"read"===r.substr(es,4).toLowerCase()?(e=r.substr(es,4),es+=4):(e=s,0===os&&fs(dr)),e!==s&&Ni()!==s?("local"===r.substr(es,5).toLowerCase()?(n=r.substr(es,5),es+=5):(n=s,0===os&&fs(Lr)),n===s&&(n=null),n!==s?(t=e={type:"read",suffix:n&&"local"}):(es=t,t=s)):(es=t,t=s),t===s&&(t=es,"low_priority"===r.substr(es,12).toLowerCase()?(e=r.substr(es,12),es+=12):(e=s,0===os&&fs(Cr)),e===s&&(e=null),e!==s&&Ni()!==s?("write"===r.substr(es,5).toLowerCase()?(n=r.substr(es,5),es+=5):(n=s,0===os&&fs(pr)),n!==s?(t=e={type:"write",prefix:e&&"low_priority"}):(es=t,t=s)):(es=t,t=s)),t}())!==s?(u=e,o=n,ec.add(`lock::${u.db}::${u.table}`),t=e={table:u,lock_type:o}):(es=t,t=s),t}function ks(){var t,e,n,u,o,a,i;return (t=Hs())===s&&(t=es,e=es,40===r.charCodeAt(es)?(n="(",es++):(n=s,0===os&&fs(wr)),n!==s&&(u=Ni())!==s&&(o=ks())!==s&&(a=Ni())!==s?(41===r.charCodeAt(es)?(i=")",es++):(i=s,0===os&&fs(Er)),i!==s?e=n=[n,u,o,a,i]:(es=e,e=s)):(es=e,e=s),e!==s&&(e={...e[2],parentheses_symbol:!0}),t=e),t}function $s(){var t,e,n,u,o,a,i,c,l;if(t=es,Sa()!==s)if(Ni()!==s)if((e=Fs())!==s){for(n=[],u=es,(o=Ni())!==s&&(a=Ei())!==s&&(i=Ni())!==s&&(c=Fs())!==s?u=o=[o,a,i,c]:(es=u,u=s);u!==s;)n.push(u),u=es,(o=Ni())!==s&&(a=Ei())!==s&&(i=Ni())!==s&&(c=Fs())!==s?u=o=[o,a,i,c]:(es=u,u=s);n!==s?(t=b(e,n)):(es=t,t=s);}else es=t,t=s;else es=t,t=s;else es=t,t=s;return t===s&&(t=es,Ni()!==s&&Sa()!==s&&(e=Ni())!==s&&(n=function(){var t,e,n,u;t=es,"RECURSIVE"===r.substr(es,9)?(e="RECURSIVE",es+=9):(e=s,0===os&&fs(ye));e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?t=e=[e,n]:(es=t,t=s)):(es=t,t=s);return t}())!==s&&(u=Ni())!==s&&(o=Fs())!==s?((l=o).recursive=!0,t=[l]):(es=t,t=s)),t}function Fs(){var r,t,e,n;return r=es,(t=$o())!==s&&Ni()!==s?((e=Ps())===s&&(e=null),e!==s&&Ni()!==s&&Ca()!==s&&Ni()!==s&&Ai()!==s&&Ni()!==s&&(n=Cs())!==s&&Ni()!==s&&yi()!==s?(r=t={name:t,stmt:n,columns:e}):(es=r,r=s)):(es=r,r=s),r}function Ps(){var r,t,e,n,u,o,a,i;if(r=es,Ai()!==s)if(Ni()!==s)if((t=ko())!==s){for(e=[],n=es,(u=Ni())!==s&&(o=Ei())!==s&&(a=Ni())!==s&&(i=ko())!==s?n=u=[u,o,a,i]:(es=n,n=s);n!==s;)e.push(n),n=es,(u=Ni())!==s&&(o=Ei())!==s&&(a=Ni())!==s&&(i=ko())!==s?n=u=[u,o,a,i]:(es=n,n=s);e!==s&&(n=Ni())!==s&&(u=yi())!==s?(r=b(t,e)):(es=r,r=s);}else es=r,r=s;else es=r,r=s;else es=r,r=s;return r}function Hs(){var t,e,n,u,o,a,i,c,l,f,b,v;return t=es,Ni()!==s?((e=$s())===s&&(e=null),e!==s&&Ni()!==s&&function(){var t,e,n,u;t=es,"select"===r.substr(es,6).toLowerCase()?(e=r.substr(es,6),es+=6):(e=s,0===os&&fs(pe));e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?t=e=[e,n]:(es=t,t=s)):(es=t,t=s);return t}()!==s&&Ri()!==s?((n=function(){var r,t,e,n,u,o;if(r=es,(t=Gs())!==s){for(e=[],n=es,(u=Ni())!==s&&(o=Gs())!==s?n=u=[u,o]:(es=n,n=s);n!==s;)e.push(n),n=es,(u=Ni())!==s&&(o=Gs())!==s?n=u=[u,o]:(es=n,n=s);e!==s?(t=function(r,t){const e=[r];for(let r=0,n=t.length;r<n;++r)e.push(t[r][1]);return e}(t,e),r=t):(es=r,r=s);}else es=r,r=s;return r}())===s&&(n=null),n!==s&&Ni()!==s?((u=function(){var t,e,n,u;t=es,(e=function(){var t,e,n,u;t=es,"top"===r.substr(es,3).toLowerCase()?(e=r.substr(es,3),es+=3):(e=s,0===os&&fs(fe));e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?t=e=[e,n]:(es=t,t=s)):(es=t,t=s);return t}())!==s&&Ni()!==s&&(n=Zo())!==s&&Ni()!==s?("percent"===r.substr(es,7).toLowerCase()?(u=r.substr(es,7),es+=7):(u=s,0===os&&fs(hr)),u===s&&(u=null),u!==s?(e={value:n,percent:(o=u)&&o.toLowerCase()},t=e):(es=t,t=s)):(es=t,t=s);var o;return t}())===s&&(u=null),u!==s&&Ni()!==s?((o=ga())===s&&(o=null),o!==s&&Ni()!==s&&(a=js())!==s&&Ni()!==s?((i=Xs())===s&&(i=null),i!==s&&Ni()!==s?((c=uo())===s&&(c=null),c!==s&&Ni()!==s?((l=function(){var t,e,n;t=es,(e=function(){var t,e,n,u;t=es,"group"===r.substr(es,5).toLowerCase()?(e=r.substr(es,5),es+=5):(e=s,0===os&&fs(Ve));e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?t=e=[e,n]:(es=t,t=s)):(es=t,t=s);return t}())!==s&&Ni()!==s&&Ia()!==s&&Ni()!==s&&(n=Lo())!==s?(e=n.value,t=e):(es=t,t=s);return t}())===s&&(l=null),l!==s&&Ni()!==s?((f=function(){var t,e;t=es,function(){var t,e,n,u;t=es,"having"===r.substr(es,6).toLowerCase()?(e=r.substr(es,6),es+=6):(e=s,0===os&&fs(Ze));e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?t=e=[e,n]:(es=t,t=s)):(es=t,t=s);return t}()!==s&&Ni()!==s&&(e=Eo())!==s?(t=e):(es=t,t=s);return t}())===s&&(f=null),f!==s&&Ni()!==s?((b=so())===s&&(b=null),b!==s&&Ni()!==s?((v=io())===s&&(v=null),v!==s?(t=function(r,t,e,n,u,s,o,a,i,c,l){return s&&s.forEach(r=>r.table&&ec.add(`select::${r.db}::${r.table}`)),{with:r,type:"select",options:t,distinct:n,columns:u,from:s,where:o,groupby:a,having:i,top:e,orderby:c,limit:l}}(e,n,u,o,a,i,c,l,f,b,v)):(es=t,t=s)):(es=t,t=s)):(es=t,t=s)):(es=t,t=s)):(es=t,t=s)):(es=t,t=s)):(es=t,t=s)):(es=t,t=s)):(es=t,t=s)):(es=t,t=s)):(es=t,t=s),t}function Gs(){var e;return (e=function(){var t;"sql_calc_found_rows"===r.substr(es,19).toLowerCase()?(t=r.substr(es,19),es+=19):(t=s,0===os&&fs(ku));return t}())===s&&((e=function(){var t;"sql_cache"===r.substr(es,9).toLowerCase()?(t=r.substr(es,9),es+=9):(t=s,0===os&&fs($u));return t}())===s&&(e=function(){var t;"sql_no_cache"===r.substr(es,12).toLowerCase()?(t=r.substr(es,12),es+=12):(t=s,0===os&&fs(Fu));return t}()),e===s&&(e=function(){var t;"sql_big_result"===r.substr(es,14).toLowerCase()?(t=r.substr(es,14),es+=14):(t=s,0===os&&fs(Hu));return t}())===s&&(e=function(){var t;"sql_small_result"===r.substr(es,16).toLowerCase()?(t=r.substr(es,16),es+=16):(t=s,0===os&&fs(Pu));return t}())===s&&(e=function(){var t;"sql_buffer_result"===r.substr(es,17).toLowerCase()?(t=r.substr(es,17),es+=17):(t=s,0===os&&fs(Gu));return t}())),e!==s&&(e=e),e}function js(){var r,t,e,n,u,o,a,i,c,l;if(r=es,(t=_a())===s&&(t=es,(e=hi())!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?t=e=[e,n]:(es=t,t=s)):(es=t,t=s),t===s&&(t=hi())),t!==s){for(e=[],n=es,(u=Ni())!==s&&(o=Ei())!==s&&(a=Ni())!==s&&(i=Ys())!==s?n=u=[u,o,a,i]:(es=n,n=s);n!==s;)e.push(n),n=es,(u=Ni())!==s&&(o=Ei())!==s&&(a=Ni())!==s&&(i=Ys())!==s?n=u=[u,o,a,i]:(es=n,n=s);e!==s?(c=t,l=e,nc.add("select::null::(.*)"),r=t=l&&l.length>0?(c[0]={expr:{type:"column_ref",table:null,column:"*"},as:null},zi(c[0],l)):c[0]):(es=r,r=s);}else es=r,r=s;if(r===s)if(r=es,(t=Ys())!==s){for(e=[],n=es,(u=Ni())!==s&&(o=Ei())!==s&&(a=Ni())!==s&&(i=Ys())!==s?n=u=[u,o,a,i]:(es=n,n=s);n!==s;)e.push(n),n=es,(u=Ni())!==s&&(o=Ei())!==s&&(a=Ni())!==s&&(i=Ys())!==s?n=u=[u,o,a,i]:(es=n,n=s);e!==s?(r=t=b(t,e)):(es=r,r=s);}else es=r,r=s;return r}function Ys(){var r,t,e,n;return r=es,(t=Mo())!==s&&Ni()!==s&&(e=wi())!==s&&Ni()!==s&&hi()!==s?(n=t,nc.add(`select::${n}::(.*)`),r=t={expr:{type:"column_ref",table:n,column:"*"},as:null}):(es=r,r=s),r===s&&(r=es,(t=Eo())!==s&&Ni()!==s?((e=Bs())===s&&(e=null),e!==s?(r=t={expr:t,as:e}):(es=r,r=s)):(es=r,r=s)),r}function Bs(){var r,t,e;return r=es,(t=Ca())!==s&&Ni()!==s&&(e=function(){var r,t;r=es,(t=$o())!==s?((function(r){if(!0===Vi[r.toUpperCase()])throw new Error("Error: "+JSON.stringify(r)+" is a reserved word, can not as alias clause");return !1}(t)?s:void 0)!==s?(r=t=t):(es=r,r=s)):(es=r,r=s);r===s&&(r=es,(t=Do())!==s&&(t=t),r=t);return r}())!==s?(r=t=e):(es=r,r=s),r===s&&(r=es,(t=Ca())===s&&(t=null),t!==s&&Ni()!==s&&(e=Mo())!==s?(r=t=e):(es=r,r=s)),r}function Xs(){var t,e;return t=es,function(){var t,e,n,u;t=es,"from"===r.substr(es,4).toLowerCase()?(e=r.substr(es,4),es+=4):(e=s,0===os&&fs(Re));e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?t=e=[e,n]:(es=t,t=s)):(es=t,t=s);return t}()!==s&&Ni()!==s&&(e=Js())!==s?(t=e):(es=t,t=s),t}function Ws(){var r,t,e;return r=es,(t=eo())!==s&&Ni()!==s&&ua()!==s&&Ni()!==s&&(e=eo())!==s?(r=t=[t,e]):(es=r,r=s),r}function Vs(){var t,e,n;return t=es,(e=ma())!==s&&Ni()!==s?("btree"===r.substr(es,5).toLowerCase()?(n=r.substr(es,5),es+=5):(n=s,0===os&&fs(Ar)),n===s&&("hash"===r.substr(es,4).toLowerCase()?(n=r.substr(es,4),es+=4):(n=s,0===os&&fs(yr))),n!==s?(t=e={keyword:"using",type:n.toLowerCase()}):(es=t,t=s)):(es=t,t=s),t===s&&(t=es,"nonclustered"===r.substr(es,12).toLowerCase()?(e=r.substr(es,12),es+=12):(e=s,0===os&&fs(Tr)),e!==s&&(e={keyword:e.toLowerCase()}),t=e),t}function Ks(){var r,t,e,n,u,o;if(r=es,(t=zs())!==s){for(e=[],n=es,(u=Ni())!==s&&(o=zs())!==s?n=u=[u,o]:(es=n,n=s);n!==s;)e.push(n),n=es,(u=Ni())!==s&&(o=zs())!==s?n=u=[u,o]:(es=n,n=s);e!==s?(r=t=function(r,t){const e=[r];for(let r=0;r<t.length;r++)e.push(t[r][1]);return e}(t,e)):(es=r,r=s);}else es=r,r=s;return r}function qs(){var r,t,e,n;return r=es,(t=qo())!==s&&Ni()!==s&&(e=ua())!==s&&Ni()!==s&&qo()!==s?(n=t,r=t={type:"range",symbol:e[0],start:n,end:n}):(es=r,r=s),r===s&&(r=qo()),r}function Zs(){var t,e,n;return t=es,Ea()!==s&&Ni()!==s?("partitions"===r.substr(es,10).toLowerCase()?(e=r.substr(es,10),es+=10):(e=s,0===os&&fs(mr)),e!==s&&Ni()!==s&&Ai()!==s&&Ni()!==s&&(n=function(){var r,t,e,n,u,o,a,c;if(r=es,(t=qs())!==s){for(e=[],n=es,(u=Ni())!==s&&(o=Ei())!==s&&(a=Ni())!==s&&(c=qs())!==s?n=u=[u,o,a,c]:(es=n,n=s);n!==s;)e.push(n),n=es,(u=Ni())!==s&&(o=Ei())!==s&&(a=Ni())!==s&&(c=qs())!==s?n=u=[u,o,a,c]:(es=n,n=s);e!==s?(r=t=i(t,e)):(es=r,r=s);}else es=r,r=s;return r}())!==s&&Ni()!==s&&yi()!==s?(t={type:"on partitions",partitions:n}):(es=t,t=s)):(es=t,t=s),t}function zs(){var t,e,n,u,o,a;return t=es,(e=function(){var t,e,n,u;t=es,"key_block_size"===r.substr(es,14).toLowerCase()?(e=r.substr(es,14),es+=14):(e=s,0===os&&fs(ur));e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="KEY_BLOCK_SIZE"):(es=t,t=s)):(es=t,t=s);return t}())!==s&&Ni()!==s?((n=li())===s&&(n=null),n!==s&&Ni()!==s&&(u=qo())!==s?(t=e=Sr(e,n,u)):(es=t,t=s)):(es=t,t=s),t===s&&(t=es,"fillfactor"===r.substr(es,10).toLowerCase()?(e=r.substr(es,10),es+=10):(e=s,0===os&&fs(Ir)),e===s&&("max_duration"===r.substr(es,12).toLowerCase()?(e=r.substr(es,12),es+=12):(e=s,0===os&&fs(Nr)),e===s&&("maxdop"===r.substr(es,6).toLowerCase()?(e=r.substr(es,6),es+=6):(e=s,0===os&&fs(Rr)))),e!==s&&Ni()!==s&&(n=li())!==s&&Ni()!==s&&(u=qo())!==s?(t=e=Sr(e,n,u)):(es=t,t=s),t===s&&(t=Vs())===s&&(t=es,"with"===r.substr(es,4).toLowerCase()?(e=r.substr(es,4),es+=4):(e=s,0===os&&fs(_r)),e!==s&&Ni()!==s?("parser"===r.substr(es,6).toLowerCase()?(n=r.substr(es,6),es+=6):(n=s,0===os&&fs(gr)),n!==s&&Ni()!==s&&(u=$o())!==s?(t=e={type:"with parser",expr:u}):(es=t,t=s)):(es=t,t=s),t===s&&(t=es,"visible"===r.substr(es,7).toLowerCase()?(e=r.substr(es,7),es+=7):(e=s,0===os&&fs(Or)),e===s&&("invisible"===r.substr(es,9).toLowerCase()?(e=r.substr(es,9),es+=9):(e=s,0===os&&fs(xr))),e!==s&&(e={type:(a=e).toLowerCase(),expr:a.toLowerCase()}),(t=e)===s&&(t=es,"pad_index"===r.substr(es,9).toLowerCase()?(e=r.substr(es,9),es+=9):(e=s,0===os&&fs(Ur)),e===s&&("sort_in_tempdb"===r.substr(es,14).toLowerCase()?(e=r.substr(es,14),es+=14):(e=s,0===os&&fs(Mr)),e===s&&("ignore_dup_key"===r.substr(es,14).toLowerCase()?(e=r.substr(es,14),es+=14):(e=s,0===os&&fs(Dr)),e===s&&("statistics_norecompute"===r.substr(es,22).toLowerCase()?(e=r.substr(es,22),es+=22):(e=s,0===os&&fs(kr)),e===s&&("statistics_incremental"===r.substr(es,22).toLowerCase()?(e=r.substr(es,22),es+=22):(e=s,0===os&&fs($r)),e===s&&("drop_existing"===r.substr(es,13).toLowerCase()?(e=r.substr(es,13),es+=13):(e=s,0===os&&fs(Fr)),e===s&&("online"===r.substr(es,6).toLowerCase()?(e=r.substr(es,6),es+=6):(e=s,0===os&&fs(Pr)),e===s&&("resumable"===r.substr(es,9).toLowerCase()?(e=r.substr(es,9),es+=9):(e=s,0===os&&fs(Hr)),e===s&&("allow_row_locks"===r.substr(es,15).toLowerCase()?(e=r.substr(es,15),es+=15):(e=s,0===os&&fs(Gr)),e===s&&("allow_page_locks"===r.substr(es,16).toLowerCase()?(e=r.substr(es,16),es+=16):(e=s,0===os&&fs(jr)),e===s&&("optimize_for_sequential_key"===r.substr(es,27).toLowerCase()?(e=r.substr(es,27),es+=27):(e=s,0===os&&fs(Yr)))))))))))),e!==s&&Ni()!==s&&(n=li())!==s&&Ni()!==s?((u=Ea())===s&&(u=function(){var t,e,n,u;t=es,"off"===r.substr(es,3).toLowerCase()?(e=r.substr(es,3),es+=3):(e=s,0===os&&fs(De));e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?t=e=[e,n]:(es=t,t=s)):(es=t,t=s);return t}()),u!==s?(t=e=function(r,t,e){return {type:r.toLowerCase(),symbol:t,expr:{type:"origin",value:e[0]}}}(e,n,u)):(es=t,t=s)):(es=t,t=s),t===s&&(t=es,"data_compression"===r.substr(es,16).toLowerCase()?(e=r.substr(es,16),es+=16):(e=s,0===os&&fs(Br)),e!==s&&Ni()!==s&&(n=li())!==s&&Ni()!==s?("none"===r.substr(es,4).toLowerCase()?(u=r.substr(es,4),es+=4):(u=s,0===os&&fs(O)),u===s&&("row"===r.substr(es,3).toLowerCase()?(u=r.substr(es,3),es+=3):(u=s,0===os&&fs(Xr)),u===s&&("PAGE"===r.substr(es,4)?(u="PAGE",es+=4):(u=s,0===os&&fs(Wr)))),u!==s&&Ni()!==s?((o=Zs())===s&&(o=null),o!==s?(t=e=function(r,t,e,n){return {type:r.toLowerCase(),symbol:t,expr:{value:e,on:n}}}(e,n,u,o)):(es=t,t=s)):(es=t,t=s)):(es=t,t=s),t===s&&(t=gi())))))),t}function Js(){var r,t,e,n;if(r=es,(t=ro())!==s){for(e=[],n=Qs();n!==s;)e.push(n),n=Qs();e!==s?(r=t=Vr(t,e)):(es=r,r=s);}else es=r,r=s;return r}function Qs(){var r,t,e;return r=es,Ni()!==s&&(t=Ei())!==s&&Ni()!==s&&(e=ro())!==s?(r=e):(es=r,r=s),r===s&&(r=es,Ni()!==s&&(t=function(){var r,t,e,n,u,o,a,i,c,l,f;if(r=es,(t=to())!==s)if(Ni()!==s)if((e=ro())!==s)if(Ni()!==s)if((n=ma())!==s)if(Ni()!==s)if(Ai()!==s)if(Ni()!==s)if((u=$o())!==s){for(o=[],a=es,(i=Ni())!==s&&(c=Ei())!==s&&(l=Ni())!==s&&(f=$o())!==s?a=i=[i,c,l,f]:(es=a,a=s);a!==s;)o.push(a),a=es,(i=Ni())!==s&&(c=Ei())!==s&&(l=Ni())!==s&&(f=$o())!==s?a=i=[i,c,l,f]:(es=a,a=s);o!==s&&(a=Ni())!==s&&(i=yi())!==s?(b=t,d=u,L=o,(v=e).join=b,v.using=zi(d,L),r=t=v):(es=r,r=s);}else es=r,r=s;else es=r,r=s;else es=r,r=s;else es=r,r=s;else es=r,r=s;else es=r,r=s;else es=r,r=s;else es=r,r=s;else es=r,r=s;var b,v,d,L;r===s&&(r=es,(t=to())!==s&&Ni()!==s&&(e=ro())!==s&&Ni()!==s?((n=no())===s&&(n=null),n!==s?(t=function(r,t,e){return t.join=r,t.on=e,t}(t,e,n),r=t):(es=r,r=s)):(es=r,r=s),r===s&&(r=es,(t=to())!==s&&Ni()!==s&&(e=Ai())!==s&&Ni()!==s&&(n=Cs())!==s&&Ni()!==s&&yi()!==s&&Ni()!==s?((u=Bs())===s&&(u=null),u!==s&&(o=Ni())!==s?((a=no())===s&&(a=null),a!==s?(t=function(r,t,e,n){return t.parentheses=!0,{expr:t,as:e,join:r,on:n}}(t,n,u,a),r=t):(es=r,r=s)):(es=r,r=s)):(es=r,r=s)));return r}())!==s?(r=t):(es=r,r=s)),r}function ro(){var t,e,n,u,o,a;return t=es,(e=function(){var t;"dual"===r.substr(es,4).toLowerCase()?(t=r.substr(es,4),es+=4):(t=s,0===os&&fs(Iu));return t}())!==s&&(e={type:"dual"}),(t=e)===s&&(t=es,(e=eo())!==s&&Ni()!==s?((n=Bs())===s&&(n=null),n!==s?(a=n,t=e="var"===(o=e).type?(o.as=a,o):{db:o.db,table:o.table,as:a}):(es=t,t=s)):(es=t,t=s),t===s&&(t=es,(e=Ai())!==s&&Ni()!==s&&(n=Cs())!==s&&Ni()!==s&&yi()!==s&&Ni()!==s?((u=Bs())===s&&(u=null),u!==s?(t=e=function(r,t){return r.parentheses=!0,{expr:r,as:t}}(n,u)):(es=t,t=s)):(es=t,t=s))),t}function to(){var t,e,n,u;return t=es,(e=function(){var t,e,n,u;t=es,"left"===r.substr(es,4).toLowerCase()?(e=r.substr(es,4),es+=4):(e=s,0===os&&fs(ke));e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?t=e=[e,n]:(es=t,t=s)):(es=t,t=s);return t}())!==s&&(n=Ni())!==s?((u=Aa())===s&&(u=null),u!==s&&Ni()!==s&&ha()!==s?(t=e="LEFT JOIN"):(es=t,t=s)):(es=t,t=s),t===s&&(t=es,(e=function(){var t,e,n,u;t=es,"right"===r.substr(es,5).toLowerCase()?(e=r.substr(es,5),es+=5):(e=s,0===os&&fs($e));e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?t=e=[e,n]:(es=t,t=s)):(es=t,t=s);return t}())!==s&&(n=Ni())!==s?((u=Aa())===s&&(u=null),u!==s&&Ni()!==s&&ha()!==s?(t=e="RIGHT JOIN"):(es=t,t=s)):(es=t,t=s),t===s&&(t=es,(e=function(){var t,e,n,u;t=es,"full"===r.substr(es,4).toLowerCase()?(e=r.substr(es,4),es+=4):(e=s,0===os&&fs(Fe));e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?t=e=[e,n]:(es=t,t=s)):(es=t,t=s);return t}())!==s&&(n=Ni())!==s?((u=Aa())===s&&(u=null),u!==s&&Ni()!==s&&ha()!==s?(t=e="FULL JOIN"):(es=t,t=s)):(es=t,t=s),t===s&&(t=es,e=es,(n=function(){var t,e,n,u;t=es,"inner"===r.substr(es,5).toLowerCase()?(e=r.substr(es,5),es+=5):(e=s,0===os&&fs(Pe));e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?t=e=[e,n]:(es=t,t=s)):(es=t,t=s);return t}())!==s&&(u=Ni())!==s?e=n=[n,u]:(es=e,e=s),e===s&&(e=null),e!==s&&(n=ha())!==s?(t=e="INNER JOIN"):(es=t,t=s)))),t}function eo(){var r,t,e,n,u,o,a,i,c;return r=es,(t=Mo())!==s?(e=es,(n=Ni())!==s&&(u=wi())!==s&&(o=Ni())!==s&&(a=Mo())!==s?e=n=[n,u,o,a]:(es=e,e=s),e!==s?(n=es,(u=Ni())!==s&&(o=wi())!==s&&(a=Ni())!==s&&(i=Mo())!==s?n=u=[u,o,a,i]:(es=n,n=s),n!==s?(r=t=function(r,t,e){const n={db:null,table:r};return null!==e&&(n.db=`${r}.${t[3]}`,n.table=e[3]),n}(t,e,n)):(es=r,r=s)):(es=r,r=s)):(es=r,r=s),r===s&&(r=es,(t=Mo())!==s?(e=es,(n=Ni())!==s&&(u=wi())!==s&&(o=Ni())!==s&&(a=Mo())!==s?e=n=[n,u,o,a]:(es=e,e=s),e===s&&(e=null),e!==s?(r=t=function(r,t){const e={db:null,table:r};return null!==t&&(e.db=r,e.table=t[3]),e}(t,e)):(es=r,r=s)):(es=r,r=s),r===s&&(r=es,(t=Yi())!==s&&((c=t).db=null,c.table=c.name,t=c),r=t)),r}function no(){var r,t;return r=es,Ea()!==s&&Ni()!==s&&(t=Eo())!==s?(r=t):(es=r,r=s),r}function uo(){var t,e;return t=es,function(){var t,e,n,u;t=es,"where"===r.substr(es,5).toLowerCase()?(e=r.substr(es,5),es+=5):(e=s,0===os&&fs(We));e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?t=e=[e,n]:(es=t,t=s)):(es=t,t=s);return t}()!==s&&Ni()!==s?((e=function(){var r,t,e,n,u,o,a,i;if(r=es,(t=ho())!==s){for(e=[],n=es,(u=Ni())!==s?((o=$a())===s&&(o=Fa()),o!==s&&(a=Ni())!==s&&(i=ho())!==s?n=u=[u,o,a,i]:(es=n,n=s)):(es=n,n=s);n!==s;)e.push(n),n=es,(u=Ni())!==s?((o=$a())===s&&(o=Fa()),o!==s&&(a=Ni())!==s&&(i=ho())!==s?n=u=[u,o,a,i]:(es=n,n=s)):(es=n,n=s);e!==s?(t=Ji(t,e),r=t):(es=r,r=s);}else es=r,r=s;return r}())===s&&(e=Eo()),e!==s?(t=e):(es=t,t=s)):(es=t,t=s),t}function so(){var t,e;return t=es,function(){var t,e,n,u;t=es,"order"===r.substr(es,5).toLowerCase()?(e=r.substr(es,5),es+=5):(e=s,0===os&&fs(qe));e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?t=e=[e,n]:(es=t,t=s)):(es=t,t=s);return t}()!==s&&Ni()!==s&&Ia()!==s&&Ni()!==s&&(e=function(){var r,t,e,n,u,o,a,i;if(r=es,(t=oo())!==s){for(e=[],n=es,(u=Ni())!==s&&(o=Ei())!==s&&(a=Ni())!==s&&(i=oo())!==s?n=u=[u,o,a,i]:(es=n,n=s);n!==s;)e.push(n),n=es,(u=Ni())!==s&&(o=Ei())!==s&&(a=Ni())!==s&&(i=oo())!==s?n=u=[u,o,a,i]:(es=n,n=s);e!==s?(t=b(t,e),r=t):(es=r,r=s);}else es=r,r=s;return r}())!==s?(t=e):(es=t,t=s),t}function oo(){var r,t,e;return r=es,(t=Eo())!==s&&Ni()!==s?((e=Ra())===s&&(e=Na()),e===s&&(e=null),e!==s?(r=t=function(r,t){const e={expr:r,type:"ASC"};return "DESC"===t&&(e.type="DESC"),e}(t,e)):(es=r,r=s)):(es=r,r=s),r}function ao(){var r;return (r=qo())===s&&(r=Go()),r}function io(){var t,e,n,u,o,a;return t=es,function(){var t,e,n,u;t=es,"limit"===r.substr(es,5).toLowerCase()?(e=r.substr(es,5),es+=5):(e=s,0===os&&fs(ze));e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?t=e=[e,n]:(es=t,t=s)):(es=t,t=s);return t}()!==s&&Ni()!==s&&(e=ao())!==s&&Ni()!==s?(n=es,(u=Ei())===s&&(u=function(){var t,e,n,u;t=es,"offset"===r.substr(es,6).toLowerCase()?(e=r.substr(es,6),es+=6):(e=s,0===os&&fs(Je));e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="OFFSET"):(es=t,t=s)):(es=t,t=s);return t}()),u!==s&&(o=Ni())!==s&&(a=ao())!==s?n=u=[u,o,a]:(es=n,n=s),n===s&&(n=null),n!==s?(t=function(r,t){const e=[r];return t&&e.push(t[2]),{seperator:t&&t[0]&&t[0].toLowerCase()||"",value:e}}(e,n)):(es=t,t=s)):(es=t,t=s),t}function co(){var t,e,n,u,o,a,i,c,l;return t=es,e=es,(n=Mo())!==s&&(u=Ni())!==s&&(o=wi())!==s?e=n=[n,u,o]:(es=e,e=s),e===s&&(e=null),e!==s&&(n=Ni())!==s&&(u=ko())!==s&&(o=Ni())!==s?(61===r.charCodeAt(es)?(a="=",es++):(a=s,0===os&&fs(Kr)),a!==s&&Ni()!==s&&(i=No())!==s?(t=e={column:u,value:i,table:(l=e)&&l[0]}):(es=t,t=s)):(es=t,t=s),t===s&&(t=es,e=es,(n=Mo())!==s&&(u=Ni())!==s&&(o=wi())!==s?e=n=[n,u,o]:(es=e,e=s),e===s&&(e=null),e!==s&&(n=Ni())!==s&&(u=ko())!==s&&(o=Ni())!==s?(61===r.charCodeAt(es)?(a="=",es++):(a=s,0===os&&fs(Kr)),a!==s&&Ni()!==s&&(i=Ta())!==s&&Ni()!==s&&Ai()!==s&&Ni()!==s&&(c=xo())!==s&&Ni()!==s&&yi()!==s?(t=e=function(r,t,e){return {column:t,value:e,table:r&&r[0],keyword:"values"}}(e,u,c)):(es=t,t=s)):(es=t,t=s)),t}function lo(){var r;return (r=function(){var r,t;r=es,Ta()!==s&&Ni()!==s&&(t=function(){var r,t,e,n,u,o,a,i;if(r=es,(t=vo())!==s){for(e=[],n=es,(u=Ni())!==s&&(o=Ei())!==s&&(a=Ni())!==s&&(i=vo())!==s?n=u=[u,o,a,i]:(es=n,n=s);n!==s;)e.push(n),n=es,(u=Ni())!==s&&(o=Ei())!==s&&(a=Ni())!==s&&(i=vo())!==s?n=u=[u,o,a,i]:(es=n,n=s);e!==s?(t=b(t,e),r=t):(es=r,r=s);}else es=r,r=s;return r}())!==s?(r=t):(es=r,r=s);return r}())===s&&(r=Hs()),r}function fo(){var r,t,e,n,u,o,a,i,c;if(r=es,va()!==s)if(Ni()!==s)if((t=Ai())!==s)if(Ni()!==s)if((e=$o())!==s){for(n=[],u=es,(o=Ni())!==s&&(a=Ei())!==s&&(i=Ni())!==s&&(c=$o())!==s?u=o=[o,a,i,c]:(es=u,u=s);u!==s;)n.push(u),u=es,(o=Ni())!==s&&(a=Ei())!==s&&(i=Ni())!==s&&(c=$o())!==s?u=o=[o,a,i,c]:(es=u,u=s);n!==s&&(u=Ni())!==s&&(o=yi())!==s?(r=zi(e,n)):(es=r,r=s);}else es=r,r=s;else es=r,r=s;else es=r,r=s;else es=r,r=s;else es=r,r=s;return r===s&&(r=es,va()!==s&&Ni()!==s&&(t=vo())!==s?(r=t):(es=r,r=s)),r}function bo(){var t,e;return t=es,(e=function(){var t,e,n,u;t=es,"insert"===r.substr(es,6).toLowerCase()?(e=r.substr(es,6),es+=6):(e=s,0===os&&fs(Ae));e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?t=e=[e,n]:(es=t,t=s)):(es=t,t=s);return t}())!==s&&(e="insert"),(t=e)===s&&(t=es,(e=fa())!==s&&(e="replace"),t=e),t}function vo(){var r,t;return r=es,Ai()!==s&&Ni()!==s&&(t=Lo())!==s&&Ni()!==s&&yi()!==s?(r=t):(es=r,r=s),r}function Lo(){var r,t,e,n,u,o,a,i;if(r=es,(t=Eo())!==s){for(e=[],n=es,(u=Ni())!==s&&(o=Ei())!==s&&(a=Ni())!==s&&(i=Eo())!==s?n=u=[u,o,a,i]:(es=n,n=s);n!==s;)e.push(n),n=es,(u=Ni())!==s&&(o=Ei())!==s&&(a=Ni())!==s&&(i=Eo())!==s?n=u=[u,o,a,i]:(es=n,n=s);e!==s?(r=t=function(r,t){const e={type:"expr_list"};return e.value=zi(r,t),e}(t,e)):(es=r,r=s);}else es=r,r=s;return r}function Co(){var t,e,n;return t=es,function(){var t,e,n,u;t=es,"interval"===r.substr(es,8).toLowerCase()?(e=r.substr(es,8),es+=8):(e=s,0===os&&fs(su));e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="INTERVAL"):(es=t,t=s)):(es=t,t=s);return t}()!==s&&Ni()!==s&&(e=Eo())!==s&&Ni()!==s&&(n=function(){var t;(t=function(){var t,e,n,u;t=es,"year"===r.substr(es,4).toLowerCase()?(e=r.substr(es,4),es+=4):(e=s,0===os&&fs(ou));e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="YEAR"):(es=t,t=s)):(es=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=es,"month"===r.substr(es,5).toLowerCase()?(e=r.substr(es,5),es+=5):(e=s,0===os&&fs(au));e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="MONTH"):(es=t,t=s)):(es=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=es,"day"===r.substr(es,3).toLowerCase()?(e=r.substr(es,3),es+=3):(e=s,0===os&&fs(iu));e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="DAY"):(es=t,t=s)):(es=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=es,"hour"===r.substr(es,4).toLowerCase()?(e=r.substr(es,4),es+=4):(e=s,0===os&&fs(cu));e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="HOUR"):(es=t,t=s)):(es=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=es,"minute"===r.substr(es,6).toLowerCase()?(e=r.substr(es,6),es+=6):(e=s,0===os&&fs(lu));e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="MINUTE"):(es=t,t=s)):(es=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=es,"second"===r.substr(es,6).toLowerCase()?(e=r.substr(es,6),es+=6):(e=s,0===os&&fs(fu));e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="SECOND"):(es=t,t=s)):(es=t,t=s);return t}());return t}())!==s?(t={type:"interval",expr:e,unit:n.toLowerCase()}):(es=t,t=s),t}function po(){var t,e,n,u,o,a,i,c,l;if(t=es,Pa()!==s)if(Ni()!==s)if((e=Eo())===s&&(e=null),e!==s)if(Ni()!==s){if(n=[],(u=wo())!==s)for(;u!==s;)n.push(u),u=wo();else n=s;n!==s&&(u=Ni())!==s?((o=function(){var t,e;t=es,function(){var t,e,n,u;t=es,"else"===r.substr(es,4).toLowerCase()?(e=r.substr(es,4),es+=4):(e=s,0===os&&fs(hn));e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?t=e=[e,n]:(es=t,t=s)):(es=t,t=s);return t}()!==s&&Ni()!==s&&(e=Eo())!==s?(t={type:"else",result:e}):(es=t,t=s);return t}())===s&&(o=null),o!==s&&Ni()!==s&&function(){var t,e,n,u;t=es,"end"===r.substr(es,3).toLowerCase()?(e=r.substr(es,3),es+=3):(e=s,0===os&&fs(An));e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?t=e=[e,n]:(es=t,t=s)):(es=t,t=s);return t}()!==s&&Ni()!==s?((a=Pa())===s&&(a=null),a!==s?(i=e,c=n,(l=o)&&c.push(l),t={type:"case",expr:i||null,args:c}):(es=t,t=s)):(es=t,t=s)):(es=t,t=s);}else es=t,t=s;else es=t,t=s;else es=t,t=s;else es=t,t=s;return t}function wo(){var t,e,n;return t=es,function(){var t,e,n,u;t=es,"when"===r.substr(es,4).toLowerCase()?(e=r.substr(es,4),es+=4):(e=s,0===os&&fs(wn));e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?t=e=[e,n]:(es=t,t=s)):(es=t,t=s);return t}()!==s&&Ni()!==s&&(e=Eo())!==s&&Ni()!==s&&function(){var t,e,n,u;t=es,"then"===r.substr(es,4).toLowerCase()?(e=r.substr(es,4),es+=4):(e=s,0===os&&fs(En));e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?t=e=[e,n]:(es=t,t=s)):(es=t,t=s);return t}()!==s&&Ni()!==s&&(n=Eo())!==s?(t={type:"when",cond:e,result:n}):(es=t,t=s),t}function Eo(){var r;return (r=function(){var r,t,e,n,u,o,a,i;if(r=es,(t=Oo())!==s){if(e=[],n=es,(u=Ni())!==s&&(o=Ii())!==s&&(a=Ni())!==s&&(i=Oo())!==s?n=u=[u,o,a,i]:(es=n,n=s),n!==s)for(;n!==s;)e.push(n),n=es,(u=Ni())!==s&&(o=Ii())!==s&&(a=Ni())!==s&&(i=Oo())!==s?n=u=[u,o,a,i]:(es=n,n=s);else e=s;e!==s?(t=Ji(t,e),r=t):(es=r,r=s);}else es=r,r=s;return r}())===s&&(r=function(){var r,t,e,n,u,o;if(r=es,(t=Ro())!==s){if(e=[],n=es,(u=Ni())!==s&&(o=Oo())!==s?n=u=[u,o]:(es=n,n=s),n!==s)for(;n!==s;)e.push(n),n=es,(u=Ni())!==s&&(o=Oo())!==s?n=u=[u,o]:(es=n,n=s);else e=s;e!==s?(t=Ki(t,e[0][1]),r=t):(es=r,r=s);}else es=r,r=s;return r}())===s&&(r=Ao())===s&&(r=ks()),r}function ho(){var r,t,e,n,u,o;return r=es,(t=Ai())===s&&(t=null),t!==s&&Ni()!==s&&(e=Ao())!==s&&Ni()!==s?((n=yi())===s&&(n=null),n!==s?((function(r,t,e){if(r&&!e||!r&&e)return !0}(t,0,n)?s:void 0)!==s?(u=e,o=n,t&&o&&(u.parentheses=!0),r=t=u):(es=r,r=s)):(es=r,r=s)):(es=r,r=s),r}function Ao(){var r,t,e,n,u,o,a,i;if(r=es,(t=yo())!==s){for(e=[],n=es,(u=Ri())!==s&&(o=Fa())!==s&&(a=Ni())!==s&&(i=yo())!==s?n=u=[u,o,a,i]:(es=n,n=s);n!==s;)e.push(n),n=es,(u=Ri())!==s&&(o=Fa())!==s&&(a=Ni())!==s&&(i=yo())!==s?n=u=[u,o,a,i]:(es=n,n=s);e!==s?(r=t=qr(t,e)):(es=r,r=s);}else es=r,r=s;return r}function yo(){var r,t,e,n,u,o,a,i;if(r=es,(t=To())!==s){for(e=[],n=es,(u=Ri())!==s&&(o=$a())!==s&&(a=Ni())!==s&&(i=To())!==s?n=u=[u,o,a,i]:(es=n,n=s);n!==s;)e.push(n),n=es,(u=Ri())!==s&&(o=$a())!==s&&(a=Ni())!==s&&(i=To())!==s?n=u=[u,o,a,i]:(es=n,n=s);e!==s?(r=t=qr(t,e)):(es=r,r=s);}else es=r,r=s;return r}function To(){var t,e,n,u,o;return (t=mo())===s&&(t=function(){var r,t,e;r=es,(t=function(){var r,t,e,n,u;r=es,t=es,(e=ka())!==s&&(n=Ni())!==s&&(u=Da())!==s?t=e=[e,n,u]:(es=t,t=s);t!==s&&(t=zr(t));(r=t)===s&&(r=Da());return r}())!==s&&Ni()!==s&&Ai()!==s&&Ni()!==s&&(e=Cs())!==s&&Ni()!==s&&yi()!==s?(n=t,(u=e).parentheses=!0,t=Ki(n,u),r=t):(es=r,r=s);var n,u;return r}())===s&&(t=es,(e=ka())===s&&(e=es,33===r.charCodeAt(es)?(n="!",es++):(n=s,0===os&&fs(Zr)),n!==s?(u=es,os++,61===r.charCodeAt(es)?(o="=",es++):(o=s,0===os&&fs(Kr)),os--,o===s?u=void 0:(es=u,u=s),u!==s?e=n=[n,u]:(es=e,e=s)):(es=e,e=s)),e!==s&&(n=Ni())!==s&&(u=To())!==s?(t=e=Ki("NOT",u)):(es=t,t=s)),t}function mo(){var r,t,e,n,u;return r=es,(t=No())!==s&&Ni()!==s?((e=function(){var r;(r=function(){var t,e,n,u,o,a;t=[],e=es,(n=Ni())!==s&&(u=So())!==s&&(o=Ni())!==s&&(a=No())!==s?e=n=[n,u,o,a]:(es=e,e=s);if(e!==s)for(;e!==s;)t.push(e),e=es,(n=Ni())!==s&&(u=So())!==s&&(o=Ni())!==s&&(a=No())!==s?e=n=[n,u,o,a]:(es=e,e=s);else t=s;t!==s&&(t={type:"arithmetic",tail:t});return t}())===s&&(r=function(){var r,t,e,n;r=es,(t=Io())!==s&&Ni()!==s&&(e=Ai())!==s&&Ni()!==s&&(n=Lo())!==s&&Ni()!==s&&yi()!==s?(r=t={op:t,right:n}):(es=r,r=s);r===s&&(r=es,(t=Io())!==s&&Ni()!==s?((e=Yi())===s&&(e=Xo()),e!==s?(t=function(r,t){return {op:r,right:t}}(t,e),r=t):(es=r,r=s)):(es=r,r=s));return r}())===s&&(r=function(){var r,t,e,n;r=es,(t=function(){var r,t,e,n,u;r=es,t=es,(e=ka())!==s&&(n=Ni())!==s&&(u=Oa())!==s?t=e=[e,n,u]:(es=t,t=s);t!==s&&(t=zr(t));(r=t)===s&&(r=Oa());return r}())!==s&&Ni()!==s&&(e=No())!==s&&Ni()!==s&&$a()!==s&&Ni()!==s&&(n=No())!==s?(r=t={op:t,right:{type:"expr_list",value:[e,n]}}):(es=r,r=s);return r}())===s&&(r=function(){var r,t,e,n,u;r=es,(t=Ua())!==s&&(e=Ni())!==s&&(n=No())!==s?(r=t={op:"IS",right:n}):(es=r,r=s);r===s&&(r=es,t=es,(e=Ua())!==s&&(n=Ni())!==s&&(u=ka())!==s?t=e=[e,n,u]:(es=t,t=s),t!==s&&(e=Ni())!==s&&(n=No())!==s?(t=function(r){return {op:"IS NOT",right:r}}(n),r=t):(es=r,r=s));return r}())===s&&(r=function(){var r,t,e;r=es,(t=function(){var r,t,e,n,u;r=es,t=es,(e=ka())!==s&&(n=Ni())!==s&&(u=Ma())!==s?t=e=[e,n,u]:(es=t,t=s);t!==s&&(t=zr(t));(r=t)===s&&(r=Ma());return r}())!==s&&Ni()!==s?((e=Yo())===s&&(e=mo()),e!==s?(r=t={op:t,right:e}):(es=r,r=s)):(es=r,r=s);return r}());return r}())===s&&(e=null),e!==s?(n=t,r=t=null===(u=e)?n:"arithmetic"===u.type?Ji(n,u.tail):qi(u.op,n,u.right)):(es=r,r=s)):(es=r,r=s),r===s&&(r=Xo())===s&&(r=xo()),r}function So(){var t;return ">="===r.substr(es,2)?(t=">=",es+=2):(t=s,0===os&&fs(Jr)),t===s&&(62===r.charCodeAt(es)?(t=">",es++):(t=s,0===os&&fs(Qr)),t===s&&("<="===r.substr(es,2)?(t="<=",es+=2):(t=s,0===os&&fs(rt)),t===s&&("<>"===r.substr(es,2)?(t="<>",es+=2):(t=s,0===os&&fs(tt)),t===s&&(60===r.charCodeAt(es)?(t="<",es++):(t=s,0===os&&fs(et)),t===s&&(61===r.charCodeAt(es)?(t="=",es++):(t=s,0===os&&fs(Kr)),t===s&&("!="===r.substr(es,2)?(t="!=",es+=2):(t=s,0===os&&fs(nt)))))))),t}function Io(){var r,t,e,n,u;return r=es,t=es,(e=ka())!==s&&(n=Ni())!==s&&(u=xa())!==s?t=e=[e,n,u]:(es=t,t=s),t!==s&&(t=zr(t)),(r=t)===s&&(r=xa()),r}function No(){var r,t,e,n,u,o,a,i;if(r=es,(t=_o())!==s){for(e=[],n=es,(u=Ni())!==s&&(o=Ro())!==s&&(a=Ni())!==s&&(i=_o())!==s?n=u=[u,o,a,i]:(es=n,n=s);n!==s;)e.push(n),n=es,(u=Ni())!==s&&(o=Ro())!==s&&(a=Ni())!==s&&(i=_o())!==s?n=u=[u,o,a,i]:(es=n,n=s);e!==s?(r=t=qr(t,e)):(es=r,r=s);}else es=r,r=s;return r}function Ro(){var t;return 43===r.charCodeAt(es)?(t="+",es++):(t=s,0===os&&fs(ut)),t===s&&(45===r.charCodeAt(es)?(t="-",es++):(t=s,0===os&&fs(st))),t}function _o(){var r,t,e,n,u,o,a,i;if(r=es,(t=Oo())!==s){for(e=[],n=es,(u=Ni())!==s&&(o=go())!==s&&(a=Ni())!==s&&(i=Oo())!==s?n=u=[u,o,a,i]:(es=n,n=s);n!==s;)e.push(n),n=es,(u=Ni())!==s&&(o=go())!==s&&(a=Ni())!==s&&(i=Oo())!==s?n=u=[u,o,a,i]:(es=n,n=s);e!==s?(r=t=Ji(t,e)):(es=r,r=s);}else es=r,r=s;return r}function go(){var t;return 42===r.charCodeAt(es)?(t="*",es++):(t=s,0===os&&fs(ot)),t===s&&(47===r.charCodeAt(es)?(t="/",es++):(t=s,0===os&&fs(at)),t===s&&(37===r.charCodeAt(es)?(t="%",es++):(t=s,0===os&&fs(it)))),t}function Oo(){var t,e,n,u,o,a,i,c,l,f,b;if((t=function(){var t,e,n,u,o,a,i;t=es,(e=Ha())!==s&&Ni()!==s&&Ai()!==s&&Ni()!==s&&(n=Eo())!==s&&Ni()!==s&&Ca()!==s&&Ni()!==s&&(u=Xi())!==s&&Ni()!==s&&(o=yi())!==s?(t=e={type:"cast",expr:n,symbol:"as",target:u}):(es=t,t=s);t===s&&(t=es,(e=Ha())!==s&&Ni()!==s&&Ai()!==s&&Ni()!==s&&(n=Eo())!==s&&Ni()!==s&&Ca()!==s&&Ni()!==s&&(u=Xa())!==s&&Ni()!==s&&(o=Ai())!==s&&Ni()!==s&&(a=zo())!==s&&Ni()!==s&&yi()!==s&&Ni()!==s&&(i=yi())!==s?(e=function(r,t){return {type:"cast",expr:r,symbol:"as",target:{dataType:"DECIMAL("+t+")"}}}(n,a),t=e):(es=t,t=s),t===s&&(t=es,(e=Ha())!==s&&Ni()!==s&&Ai()!==s&&Ni()!==s&&(n=Eo())!==s&&Ni()!==s&&Ca()!==s&&Ni()!==s&&(u=Xa())!==s&&Ni()!==s&&(o=Ai())!==s&&Ni()!==s&&(a=zo())!==s&&Ni()!==s&&Ei()!==s&&Ni()!==s&&(i=zo())!==s&&Ni()!==s&&yi()!==s&&Ni()!==s&&yi()!==s?(e=function(r,t,e){return {type:"cast",expr:r,symbol:"as",target:{dataType:"DECIMAL("+t+", "+e+")"}}}(n,a,i),t=e):(es=t,t=s),t===s&&(t=es,(e=Ha())!==s&&Ni()!==s&&Ai()!==s&&Ni()!==s&&(n=Eo())!==s&&Ni()!==s&&Ca()!==s&&Ni()!==s&&(u=function(){var t;(t=function(){var t,e,n,u;t=es,"signed"===r.substr(es,6).toLowerCase()?(e=r.substr(es,6),es+=6):(e=s,0===os&&fs(xn));e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="SIGNED"):(es=t,t=s)):(es=t,t=s);return t}())===s&&(t=Wa());return t}())!==s&&Ni()!==s?((o=Ka())===s&&(o=null),o!==s&&Ni()!==s&&(a=yi())!==s?(e=function(r,t,e){return {type:"cast",expr:r,symbol:"as",target:{dataType:t+(e?" "+e:"")}}}(n,u,o),t=e):(es=t,t=s)):(es=t,t=s))));return t}())===s&&(t=Yo())===s&&(t=function(){var t;(t=function(){var t,e,n,u;t=es,(e=function(){var t,e,n,u;t=es,"count"===r.substr(es,5).toLowerCase()?(e=r.substr(es,5),es+=5):(e=s,0===os&&fs(fn));e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="COUNT"):(es=t,t=s)):(es=t,t=s);return t}())!==s&&Ni()!==s&&Ai()!==s&&Ni()!==s&&(n=function(){var t,e,n;t=es,(e=function(){var e;42===r.charCodeAt(es)?(e="*",es++):(e=s,0===os&&fs(ot));e!==s&&(e={type:"star",value:"*"});return e}())!==s&&(e={expr:e});(t=e)===s&&(t=es,(e=ga())===s&&(e=null),e!==s&&Ni()!==s&&(n=xo())!==s?(t=e={distinct:e,expr:n}):(es=t,t=s));return t}())!==s&&Ni()!==s&&yi()!==s&&Ni()!==s?((u=jo())===s&&(u=null),u!==s?(e=function(r,t,e){return {type:"aggr_func",name:r,args:t,over:e}}(e,n,u),t=e):(es=t,t=s)):(es=t,t=s);return t}())===s&&(t=function(){var t,e,n;t=es,(e=function(){var t;(t=function(){var t,e,n,u;t=es,"sum"===r.substr(es,3).toLowerCase()?(e=r.substr(es,3),es+=3):(e=s,0===os&&fs(dn));e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="SUM"):(es=t,t=s)):(es=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=es,"max"===r.substr(es,3).toLowerCase()?(e=r.substr(es,3),es+=3):(e=s,0===os&&fs(bn));e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="MAX"):(es=t,t=s)):(es=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=es,"min"===r.substr(es,3).toLowerCase()?(e=r.substr(es,3),es+=3):(e=s,0===os&&fs(vn));e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="MIN"):(es=t,t=s)):(es=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=es,"avg"===r.substr(es,3).toLowerCase()?(e=r.substr(es,3),es+=3):(e=s,0===os&&fs(Ln));e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="AVG"):(es=t,t=s)):(es=t,t=s);return t}());return t}())!==s&&Ni()!==s&&Ai()!==s&&Ni()!==s&&(n=No())!==s&&Ni()!==s&&yi()!==s?(t=e={type:"aggr_func",name:e,args:{expr:n}}):(es=t,t=s);return t}());return t}())===s&&(t=function(){var t,e,n,u;t=es,(e=Hi())!==s&&Ni()!==s&&Ai()!==s&&Ni()!==s?((n=Lo())===s&&(n=null),n!==s&&Ni()!==s&&yi()!==s&&Ni()!==s?((u=jo())===s&&(u=null),u!==s?(e=Ot(e,n,u),t=e):(es=t,t=s)):(es=t,t=s)):(es=t,t=s);t===s&&(t=es,(e=function(){var t;(t=function(){var t,e,n,u;t=es,"current_date"===r.substr(es,12).toLowerCase()?(e=r.substr(es,12),es+=12):(e=s,0===os&&fs(uu));e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="CURRENT_DATE"):(es=t,t=s)):(es=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=es,"current_time"===r.substr(es,12).toLowerCase()?(e=r.substr(es,12),es+=12):(e=s,0===os&&fs(bu));e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="CURRENT_TIME"):(es=t,t=s)):(es=t,t=s);return t}())===s&&(t=ai())===s&&(t=function(){var t,e,n,u;t=es,"current_user"===r.substr(es,12).toLowerCase()?(e=r.substr(es,12),es+=12):(e=s,0===os&&fs(du));e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="CURRENT_USER"):(es=t,t=s)):(es=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=es,"user"===r.substr(es,4).toLowerCase()?(e=r.substr(es,4),es+=4):(e=s,0===os&&fs(nu));e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="USER"):(es=t,t=s)):(es=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=es,"session_user"===r.substr(es,12).toLowerCase()?(e=r.substr(es,12),es+=12):(e=s,0===os&&fs(Lu));e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="SESSION_USER"):(es=t,t=s)):(es=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=es,"system_user"===r.substr(es,11).toLowerCase()?(e=r.substr(es,11),es+=11):(e=s,0===os&&fs(Cu));e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="SYSTEM_USER"):(es=t,t=s)):(es=t,t=s);return t}());return t}())!==s&&Ni()!==s&&Ai()!==s&&Ni()!==s?((n=Lo())===s&&(n=null),n!==s&&Ni()!==s&&yi()!==s&&Ni()!==s?((u=jo())===s&&(u=null),u!==s?(e=Ot(e,n,u),t=e):(es=t,t=s)):(es=t,t=s)):(es=t,t=s));return t}())===s&&(t=po())===s&&(t=Co())===s&&(t=xo())===s&&(t=Go())===s){if(t=es,Ai()!==s)if(Ni()!==s)if((e=Eo())!==s)if(Ni()!==s)if(yi()!==s){for(n=[],u=es,(o=Ri())!==s?((a=$a())===s&&(a=Fa()),a!==s&&(i=Ni())!==s&&(c=Ao())!==s?u=o=[o,a,i,c]:(es=u,u=s)):(es=u,u=s);u!==s;)n.push(u),u=es,(o=Ri())!==s?((a=$a())===s&&(a=Fa()),a!==s&&(i=Ni())!==s&&(c=Ao())!==s?u=o=[o,a,i,c]:(es=u,u=s)):(es=u,u=s);n!==s?(b=n,(f=e).parentheses=!0,t=b&&0!==b.length?Ji(f,b):f):(es=t,t=s);}else es=t,t=s;else es=t,t=s;else es=t,t=s;else es=t,t=s;else es=t,t=s;t===s&&(t=es,Ai()!==s&&Ni()!==s&&(e=Lo())!==s&&Ni()!==s&&yi()!==s?((l=e).parentheses=!0,t=l):(es=t,t=s),t===s&&(t=Yi()));}return t}function xo(){var r,t,e,n,u;return r=es,(t=Mo())!==s&&Ni()!==s&&wi()!==s&&Ni()!==s&&(e=ko())!==s?(n=t,u=e,nc.add(`select::${n}::${u}`),r=t={type:"column_ref",table:n,column:u}):(es=r,r=s),r===s&&(r=es,(t=ko())!==s&&(t=function(r){return nc.add("select::null::"+r),{type:"column_ref",table:null,column:r}}(t)),r=t),r}function Uo(){var r,t,e,n,u,o,a,i;if(r=es,(t=ko())!==s){for(e=[],n=es,(u=Ni())!==s&&(o=Ei())!==s&&(a=Ni())!==s&&(i=ko())!==s?n=u=[u,o,a,i]:(es=n,n=s);n!==s;)e.push(n),n=es,(u=Ni())!==s&&(o=Ei())!==s&&(a=Ni())!==s&&(i=ko())!==s?n=u=[u,o,a,i]:(es=n,n=s);e!==s?(r=t=b(t,e)):(es=r,r=s);}else es=r,r=s;return r}function Mo(){var r,t;return r=es,(t=$o())!==s?((ct(t)?s:void 0)!==s?(r=t=t):(es=r,r=s)):(es=r,r=s),r===s&&(r=es,(t=Do())!==s&&(t=t),r=t),r}function Do(){var t;return (t=function(){var t,e,n,u;t=es,34===r.charCodeAt(es)?(e='"',es++):(e=s,0===os&&fs(lt));if(e!==s){if(n=[],ft.test(r.charAt(es))?(u=r.charAt(es),es++):(u=s,0===os&&fs(bt)),u!==s)for(;u!==s;)n.push(u),ft.test(r.charAt(es))?(u=r.charAt(es),es++):(u=s,0===os&&fs(bt));else n=s;n!==s?(34===r.charCodeAt(es)?(u='"',es++):(u=s,0===os&&fs(lt)),u!==s?(e=vt(n),t=e):(es=t,t=s)):(es=t,t=s);}else es=t,t=s;return t}())===s&&(t=function(){var t,e,n,u;t=es,39===r.charCodeAt(es)?(e="'",es++):(e=s,0===os&&fs(lr));if(e!==s){if(n=[],dt.test(r.charAt(es))?(u=r.charAt(es),es++):(u=s,0===os&&fs(Lt)),u!==s)for(;u!==s;)n.push(u),dt.test(r.charAt(es))?(u=r.charAt(es),es++):(u=s,0===os&&fs(Lt));else n=s;n!==s?(39===r.charCodeAt(es)?(u="'",es++):(u=s,0===os&&fs(lr)),u!==s?(e=vt(n),t=e):(es=t,t=s)):(es=t,t=s);}else es=t,t=s;return t}())===s&&(t=function(){var t,e,n,u;t=es,96===r.charCodeAt(es)?(e="`",es++):(e=s,0===os&&fs(Ct));if(e!==s){if(n=[],pt.test(r.charAt(es))?(u=r.charAt(es),es++):(u=s,0===os&&fs(wt)),u!==s)for(;u!==s;)n.push(u),pt.test(r.charAt(es))?(u=r.charAt(es),es++):(u=s,0===os&&fs(wt));else n=s;n!==s?(96===r.charCodeAt(es)?(u="`",es++):(u=s,0===os&&fs(Ct)),u!==s?(e=vt(n),t=e):(es=t,t=s)):(es=t,t=s);}else es=t,t=s;return t}())===s&&(t=function(){var t,e,n,u;t=es,91===r.charCodeAt(es)?(e="[",es++):(e=s,0===os&&fs(Et));if(e!==s){if(n=[],ht.test(r.charAt(es))?(u=r.charAt(es),es++):(u=s,0===os&&fs(At)),u!==s)for(;u!==s;)n.push(u),ht.test(r.charAt(es))?(u=r.charAt(es),es++):(u=s,0===os&&fs(At));else n=s;n!==s?(93===r.charCodeAt(es)?(u="]",es++):(u=s,0===os&&fs(yt)),u!==s?(e=vt(n),t=e):(es=t,t=s)):(es=t,t=s);}else es=t,t=s;return t}()),t}function ko(){var r,t;return r=es,(t=function(){var r,t,e,n;if(r=es,(t=Fo())!==s){for(e=[],n=Ho();n!==s;)e.push(n),n=Ho();e!==s?(t=Tt(t,e),r=t):(es=r,r=s);}else es=r,r=s;return r}())!==s?((ct(t)?s:void 0)!==s?(r=t=t):(es=r,r=s)):(es=r,r=s),r===s&&(r=Do()),r}function $o(){var r,t,e,n;if(r=es,(t=Fo())!==s){for(e=[],n=Po();n!==s;)e.push(n),n=Po();e!==s?(r=t=Tt(t,e)):(es=r,r=s);}else es=r,r=s;return r}function Fo(){var t;return mt.test(r.charAt(es))?(t=r.charAt(es),es++):(t=s,0===os&&fs(St)),t}function Po(){var t;return It.test(r.charAt(es))?(t=r.charAt(es),es++):(t=s,0===os&&fs(Nt)),t}function Ho(){var t;return Rt.test(r.charAt(es))?(t=r.charAt(es),es++):(t=s,0===os&&fs(_t)),t}function Go(){var e,n,u;return e=es,58===r.charCodeAt(es)?(n=":",es++):(n=s,0===os&&fs(gt)),n!==s&&(u=$o())!==s?e=n=[n,u]:(es=e,e=s),e!==s&&(e={type:"param",value:e[1]}),e}function jo(){var t,e,n;return t=es,function(){var t,e,n,u;t=es,"over"===r.substr(es,4).toLowerCase()?(e=r.substr(es,4),es+=4):(e=s,0===os&&fs(je));e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?t=e=[e,n]:(es=t,t=s)):(es=t,t=s);return t}()!==s&&Ni()!==s&&Ai()!==s&&Ni()!==s&&va()!==s&&Ni()!==s&&Ia()!==s&&Ni()!==s&&(e=js())!==s&&Ni()!==s?((n=so())===s&&(n=null),n!==s&&Ni()!==s&&yi()!==s?(t=function(r,t){return {partitionby:r,orderby:t}}(e,n)):(es=t,t=s)):(es=t,t=s),t}function Yo(){var t;return (t=Xo())===s&&(t=qo())===s&&(t=function(){var t,e;t=es,(e=function(){var t,e,n,u;t=es,"true"===r.substr(es,4).toLowerCase()?(e=r.substr(es,4),es+=4):(e=s,0===os&&fs(ce));e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?t=e=[e,n]:(es=t,t=s)):(es=t,t=s);return t}())!==s&&(e={type:"bool",value:!0});(t=e)===s&&(t=es,(e=function(){var t,e,n,u;t=es,"false"===r.substr(es,5).toLowerCase()?(e=r.substr(es,5),es+=5):(e=s,0===os&&fs(be));e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?t=e=[e,n]:(es=t,t=s)):(es=t,t=s);return t}())!==s&&(e={type:"bool",value:!1}),t=e);return t}())===s&&(t=Bo())===s&&(t=function(){var t,e,n,u,o,a,i;t=es,(e=si())===s&&(e=ti())===s&&(e=oi())===s&&(e=ei());if(e!==s)if(Ni()!==s){if(n=es,39===r.charCodeAt(es)?(u="'",es++):(u=s,0===os&&fs(lr)),u!==s){for(o=[],a=Vo();a!==s;)o.push(a),a=Vo();o!==s?(39===r.charCodeAt(es)?(a="'",es++):(a=s,0===os&&fs(lr)),a!==s?n=u=[u,o,a]:(es=n,n=s)):(es=n,n=s);}else es=n,n=s;n!==s?(e=Ut(e,n),t=e):(es=t,t=s);}else es=t,t=s;else es=t,t=s;if(t===s){if(t=es,(e=si())===s&&(e=ti())===s&&(e=oi())===s&&(e=ei()),e!==s)if(Ni()!==s){if(n=es,34===r.charCodeAt(es)?(u='"',es++):(u=s,0===os&&fs(lt)),u!==s){for(o=[],a=Wo();a!==s;)o.push(a),a=Wo();o!==s?(34===r.charCodeAt(es)?(a='"',es++):(a=s,0===os&&fs(lt)),a!==s?n=u=[u,o,a]:(es=n,n=s)):(es=n,n=s);}else es=n,n=s;n!==s?(e=Ut(e,n),t=e):(es=t,t=s);}else es=t,t=s;else es=t,t=s;t===s&&(t=es,(e=ai())!==s&&Ni()!==s?((n=Ai())===s&&(n=null),n!==s&&(u=Ni())!==s?((o=yi())===s&&(o=null),o!==s?((a=(a=function(r,t,e){if(t&&e)return !0}(0,n,o))?s:void 0)!==s&&Ni()!==s?("on update current_timestamp"===r.substr(es,27).toLowerCase()?(i=r.substr(es,27),es+=27):(i=s,0===os&&fs(Mt)),i===s&&(i=null),i!==s?(c=e,e={type:"origin",value:((l=i)?`${c} ${l}`:c).toLowerCase()},t=e):(es=t,t=s)):(es=t,t=s)):(es=t,t=s)):(es=t,t=s)):(es=t,t=s));}var c,l;return t}()),t}function Bo(){var e;return (e=function(){var t,e,n,u;t=es,"null"===r.substr(es,4).toLowerCase()?(e=r.substr(es,4),es+=4):(e=s,0===os&&fs(ae));e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?t=e=[e,n]:(es=t,t=s)):(es=t,t=s);return t}())!==s&&(e={type:"null",value:null}),e}function Xo(){var t,e,n,u,o;if(t=es,e=es,39===r.charCodeAt(es)?(n="'",es++):(n=s,0===os&&fs(lr)),n!==s){for(u=[],o=Vo();o!==s;)u.push(o),o=Vo();u!==s?(39===r.charCodeAt(es)?(o="'",es++):(o=s,0===os&&fs(lr)),o!==s?e=n=[n,u,o]:(es=e,e=s)):(es=e,e=s);}else es=e,e=s;if(e!==s&&(e=xt(e)),(t=e)===s){if(t=es,e=es,34===r.charCodeAt(es)?(n='"',es++):(n=s,0===os&&fs(lt)),n!==s){for(u=[],o=Wo();o!==s;)u.push(o),o=Wo();u!==s?(34===r.charCodeAt(es)?(o='"',es++):(o=s,0===os&&fs(lt)),o!==s?e=n=[n,u,o]:(es=e,e=s)):(es=e,e=s);}else es=e,e=s;e!==s&&(e=xt(e)),t=e;}return t}function Wo(){var t;return Dt.test(r.charAt(es))?(t=r.charAt(es),es++):(t=s,0===os&&fs(kt)),t===s&&(t=Ko()),t}function Vo(){var t;return $t.test(r.charAt(es))?(t=r.charAt(es),es++):(t=s,0===os&&fs(Ft)),t===s&&(t=Ko()),t}function Ko(){var t,e,n,u,o,a,i,c,l,f;return t=es,"\\'"===r.substr(es,2)?(e="\\'",es+=2):(e=s,0===os&&fs(Pt)),e!==s&&(e="'"),(t=e)===s&&(t=es,'\\"'===r.substr(es,2)?(e='\\"',es+=2):(e=s,0===os&&fs(Ht)),e!==s&&(e='"'),(t=e)===s&&(t=es,"\\\\"===r.substr(es,2)?(e="\\\\",es+=2):(e=s,0===os&&fs(Gt)),e!==s&&(e="\\"),(t=e)===s&&(t=es,"\\/"===r.substr(es,2)?(e="\\/",es+=2):(e=s,0===os&&fs(jt)),e!==s&&(e="/"),(t=e)===s&&(t=es,"\\b"===r.substr(es,2)?(e="\\b",es+=2):(e=s,0===os&&fs(Yt)),e!==s&&(e="\b"),(t=e)===s&&(t=es,"\\f"===r.substr(es,2)?(e="\\f",es+=2):(e=s,0===os&&fs(Bt)),e!==s&&(e="\f"),(t=e)===s&&(t=es,"\\n"===r.substr(es,2)?(e="\\n",es+=2):(e=s,0===os&&fs(Xt)),e!==s&&(e="\n"),(t=e)===s&&(t=es,"\\r"===r.substr(es,2)?(e="\\r",es+=2):(e=s,0===os&&fs(Wt)),e!==s&&(e="\r"),(t=e)===s&&(t=es,"\\t"===r.substr(es,2)?(e="\\t",es+=2):(e=s,0===os&&fs(Vt)),e!==s&&(e="\t"),(t=e)===s&&(t=es,"\\u"===r.substr(es,2)?(e="\\u",es+=2):(e=s,0===os&&fs(Kt)),e!==s&&(n=ea())!==s&&(u=ea())!==s&&(o=ea())!==s&&(a=ea())!==s?(i=n,c=u,l=o,f=a,t=e=String.fromCharCode(parseInt("0x"+i+c+l+f))):(es=t,t=s),t===s&&(t=es,92===r.charCodeAt(es)?(e="\\",es++):(e=s,0===os&&fs(qt)),e!==s&&(e="\\"),t=e)))))))))),t}function qo(){var t,e;return (t=Zo())!==s&&(t=(e=t)&&"bigint"===e.type?e:{type:"number",value:e}),t}function Zo(){var r,t,e,n;return r=es,(t=zo())!==s&&(e=Jo())!==s&&(n=Qo())!==s?(r=t={type:"bigint",value:t+e+n}):(es=r,r=s),r===s&&(r=es,(t=zo())!==s&&(e=Jo())!==s?(r=t=function(r,t){const e=r+t;return Zi(r)?{type:"bigint",value:e}:parseFloat(e)}(t,e)):(es=r,r=s),r===s&&(r=es,(t=zo())!==s&&(e=Qo())!==s?(r=t=function(r,t){return {type:"bigint",value:r+t}}(t,e)):(es=r,r=s),r===s&&(r=es,(t=zo())!==s&&(t=function(r){return Zi(r)?{type:"bigint",value:r}:parseFloat(r)}(t)),r=t))),r}function zo(){var t,e,n;return (t=ra())===s&&(t=ta())===s&&(t=es,45===r.charCodeAt(es)?(e="-",es++):(e=s,0===os&&fs(st)),e===s&&(43===r.charCodeAt(es)?(e="+",es++):(e=s,0===os&&fs(ut))),e!==s&&(n=ra())!==s?(t=e="-"+n):(es=t,t=s),t===s&&(t=es,45===r.charCodeAt(es)?(e="-",es++):(e=s,0===os&&fs(st)),e===s&&(43===r.charCodeAt(es)?(e="+",es++):(e=s,0===os&&fs(ut))),e!==s&&(n=ta())!==s?(t=e="-"+n):(es=t,t=s))),t}function Jo(){var t,e,n;return t=es,46===r.charCodeAt(es)?(e=".",es++):(e=s,0===os&&fs(Jt)),e!==s&&(n=ra())!==s?(t=e="."+n):(es=t,t=s),t}function Qo(){var t,e,n;return t=es,(e=function(){var t,e,n;t=es,ne.test(r.charAt(es))?(e=r.charAt(es),es++):(e=s,0===os&&fs(ue));e!==s?(se.test(r.charAt(es))?(n=r.charAt(es),es++):(n=s,0===os&&fs(oe)),n===s&&(n=null),n!==s?(t=e=e+(null!==(u=n)?u:"")):(es=t,t=s)):(es=t,t=s);var u;return t}())!==s&&(n=ra())!==s?(t=e=e+n):(es=t,t=s),t}function ra(){var t,e;if(t=[],(e=ta())!==s)for(;e!==s;)t.push(e),e=ta();else t=s;return t!==s&&(t=t.join("")),t}function ta(){var t;return Qt.test(r.charAt(es))?(t=r.charAt(es),es++):(t=s,0===os&&fs(re)),t}function ea(){var t;return te.test(r.charAt(es))?(t=r.charAt(es),es++):(t=s,0===os&&fs(ee)),t}function na(){var t,e,n,u;return t=es,"default"===r.substr(es,7).toLowerCase()?(e=r.substr(es,7),es+=7):(e=s,0===os&&fs(h)),e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?t=e=[e,n]:(es=t,t=s)):(es=t,t=s),t}function ua(){var t,e,n,u;return t=es,"to"===r.substr(es,2).toLowerCase()?(e=r.substr(es,2),es+=2):(e=s,0===os&&fs(le)),e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?t=e=[e,n]:(es=t,t=s)):(es=t,t=s),t}function sa(){var t,e,n,u;return t=es,"drop"===r.substr(es,4).toLowerCase()?(e=r.substr(es,4),es+=4):(e=s,0===os&&fs(ve)),e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="DROP"):(es=t,t=s)):(es=t,t=s),t}function oa(){var t,e,n,u;return t=es,"declare"===r.substr(es,7).toLowerCase()?(e=r.substr(es,7),es+=7):(e=s,0===os&&fs(de)),e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="DECLARE"):(es=t,t=s)):(es=t,t=s),t}function aa(){var t,e,n,u;return t=es,"alter"===r.substr(es,5).toLowerCase()?(e=r.substr(es,5),es+=5):(e=s,0===os&&fs(Ce)),e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="ALTER"):(es=t,t=s)):(es=t,t=s),t}function ia(){var t,e,n,u;return t=es,"create"===r.substr(es,6).toLowerCase()?(e=r.substr(es,6),es+=6):(e=s,0===os&&fs(we)),e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?t=e=[e,n]:(es=t,t=s)):(es=t,t=s),t}function ca(){var t,e,n,u;return t=es,"temporary"===r.substr(es,9).toLowerCase()?(e=r.substr(es,9),es+=9):(e=s,0===os&&fs(Ee)),e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?t=e=[e,n]:(es=t,t=s)):(es=t,t=s),t}function la(){var t,e,n,u;return t=es,"if not exists"===r.substr(es,13).toLowerCase()?(e=r.substr(es,13),es+=13):(e=s,0===os&&fs(he)),e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?t=e=[e,n]:(es=t,t=s)):(es=t,t=s),t}function fa(){var t,e,n,u;return t=es,"replace"===r.substr(es,7).toLowerCase()?(e=r.substr(es,7),es+=7):(e=s,0===os&&fs(Te)),e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?t=e=[e,n]:(es=t,t=s)):(es=t,t=s),t}function ba(){var t,e,n,u;return t=es,"rename"===r.substr(es,6).toLowerCase()?(e=r.substr(es,6),es+=6):(e=s,0===os&&fs(me)),e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?t=e=[e,n]:(es=t,t=s)):(es=t,t=s),t}function va(){var t,e,n,u;return t=es,"partition"===r.substr(es,9).toLowerCase()?(e=r.substr(es,9),es+=9):(e=s,0===os&&fs(Ie)),e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="PARTITION"):(es=t,t=s)):(es=t,t=s),t}function da(){var t,e,n,u;return t=es,"into"===r.substr(es,4).toLowerCase()?(e=r.substr(es,4),es+=4):(e=s,0===os&&fs(Ne)),e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?t=e=[e,n]:(es=t,t=s)):(es=t,t=s),t}function La(){var t,e,n,u;return t=es,"set"===r.substr(es,3).toLowerCase()?(e=r.substr(es,3),es+=3):(e=s,0===os&&fs(Q)),e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?t=e=[e,n]:(es=t,t=s)):(es=t,t=s),t}function Ca(){var t,e,n,u;return t=es,"as"===r.substr(es,2).toLowerCase()?(e=r.substr(es,2),es+=2):(e=s,0===os&&fs(ge)),e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?t=e=[e,n]:(es=t,t=s)):(es=t,t=s),t}function pa(){var t,e,n,u;return t=es,"table"===r.substr(es,5).toLowerCase()?(e=r.substr(es,5),es+=5):(e=s,0===os&&fs(Oe)),e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="TABLE"):(es=t,t=s)):(es=t,t=s),t}function wa(){var t,e,n,u;return t=es,"tables"===r.substr(es,6).toLowerCase()?(e=r.substr(es,6),es+=6):(e=s,0===os&&fs(Me)),e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="TABLES"):(es=t,t=s)):(es=t,t=s),t}function Ea(){var t,e,n,u;return t=es,"on"===r.substr(es,2).toLowerCase()?(e=r.substr(es,2),es+=2):(e=s,0===os&&fs(B)),e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?t=e=[e,n]:(es=t,t=s)):(es=t,t=s),t}function ha(){var t,e,n,u;return t=es,"join"===r.substr(es,4).toLowerCase()?(e=r.substr(es,4),es+=4):(e=s,0===os&&fs(He)),e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?t=e=[e,n]:(es=t,t=s)):(es=t,t=s),t}function Aa(){var t,e,n,u;return t=es,"outer"===r.substr(es,5).toLowerCase()?(e=r.substr(es,5),es+=5):(e=s,0===os&&fs(Ge)),e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?t=e=[e,n]:(es=t,t=s)):(es=t,t=s),t}function ya(){var t,e,n,u;return t=es,"union"===r.substr(es,5).toLowerCase()?(e=r.substr(es,5),es+=5):(e=s,0===os&&fs(Ye)),e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?t=e=[e,n]:(es=t,t=s)):(es=t,t=s),t}function Ta(){var t,e,n,u;return t=es,"values"===r.substr(es,6).toLowerCase()?(e=r.substr(es,6),es+=6):(e=s,0===os&&fs(Be)),e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?t=e=[e,n]:(es=t,t=s)):(es=t,t=s),t}function ma(){var t,e,n,u;return t=es,"using"===r.substr(es,5).toLowerCase()?(e=r.substr(es,5),es+=5):(e=s,0===os&&fs(Xe)),e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?t=e=[e,n]:(es=t,t=s)):(es=t,t=s),t}function Sa(){var t,e,n,u;return t=es,"with"===r.substr(es,4).toLowerCase()?(e=r.substr(es,4),es+=4):(e=s,0===os&&fs(_r)),e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?t=e=[e,n]:(es=t,t=s)):(es=t,t=s),t}function Ia(){var t,e,n,u;return t=es,"by"===r.substr(es,2).toLowerCase()?(e=r.substr(es,2),es+=2):(e=s,0===os&&fs(Ke)),e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?t=e=[e,n]:(es=t,t=s)):(es=t,t=s),t}function Na(){var t,e,n,u;return t=es,"asc"===r.substr(es,3).toLowerCase()?(e=r.substr(es,3),es+=3):(e=s,0===os&&fs(Qe)),e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="ASC"):(es=t,t=s)):(es=t,t=s),t}function Ra(){var t,e,n,u;return t=es,"desc"===r.substr(es,4).toLowerCase()?(e=r.substr(es,4),es+=4):(e=s,0===os&&fs(rn)),e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="DESC"):(es=t,t=s)):(es=t,t=s),t}function _a(){var t,e,n,u;return t=es,"all"===r.substr(es,3).toLowerCase()?(e=r.substr(es,3),es+=3):(e=s,0===os&&fs(tn)),e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="ALL"):(es=t,t=s)):(es=t,t=s),t}function ga(){var t,e,n,u;return t=es,"distinct"===r.substr(es,8).toLowerCase()?(e=r.substr(es,8),es+=8):(e=s,0===os&&fs(en)),e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="DISTINCT"):(es=t,t=s)):(es=t,t=s),t}function Oa(){var t,e,n,u;return t=es,"between"===r.substr(es,7).toLowerCase()?(e=r.substr(es,7),es+=7):(e=s,0===os&&fs(nn)),e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="BETWEEN"):(es=t,t=s)):(es=t,t=s),t}function xa(){var t,e,n,u;return t=es,"in"===r.substr(es,2).toLowerCase()?(e=r.substr(es,2),es+=2):(e=s,0===os&&fs(un)),e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="IN"):(es=t,t=s)):(es=t,t=s),t}function Ua(){var t,e,n,u;return t=es,"is"===r.substr(es,2).toLowerCase()?(e=r.substr(es,2),es+=2):(e=s,0===os&&fs(sn)),e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="IS"):(es=t,t=s)):(es=t,t=s),t}function Ma(){var t,e,n,u;return t=es,"like"===r.substr(es,4).toLowerCase()?(e=r.substr(es,4),es+=4):(e=s,0===os&&fs(on)),e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="LIKE"):(es=t,t=s)):(es=t,t=s),t}function Da(){var t,e,n,u;return t=es,"exists"===r.substr(es,6).toLowerCase()?(e=r.substr(es,6),es+=6):(e=s,0===os&&fs(an)),e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="EXISTS"):(es=t,t=s)):(es=t,t=s),t}function ka(){var t,e,n,u;return t=es,"not"===r.substr(es,3).toLowerCase()?(e=r.substr(es,3),es+=3):(e=s,0===os&&fs($)),e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="NOT"):(es=t,t=s)):(es=t,t=s),t}function $a(){var t,e,n,u;return t=es,"and"===r.substr(es,3).toLowerCase()?(e=r.substr(es,3),es+=3):(e=s,0===os&&fs(cn)),e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="AND"):(es=t,t=s)):(es=t,t=s),t}function Fa(){var t,e,n,u;return t=es,"or"===r.substr(es,2).toLowerCase()?(e=r.substr(es,2),es+=2):(e=s,0===os&&fs(ln)),e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="OR"):(es=t,t=s)):(es=t,t=s),t}function Pa(){var t,e,n,u;return t=es,"case"===r.substr(es,4).toLowerCase()?(e=r.substr(es,4),es+=4):(e=s,0===os&&fs(pn)),e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?t=e=[e,n]:(es=t,t=s)):(es=t,t=s),t}function Ha(){var t,e,n,u;return t=es,"cast"===r.substr(es,4).toLowerCase()?(e=r.substr(es,4),es+=4):(e=s,0===os&&fs(yn)),e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?t=e=[e,n]:(es=t,t=s)):(es=t,t=s),t}function Ga(){var t,e,n,u;return t=es,"char"===r.substr(es,4).toLowerCase()?(e=r.substr(es,4),es+=4):(e=s,0===os&&fs(In)),e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="CHAR"):(es=t,t=s)):(es=t,t=s),t}function ja(){var t,e,n,u;return t=es,"varchar"===r.substr(es,7).toLowerCase()?(e=r.substr(es,7),es+=7):(e=s,0===os&&fs(Nn)),e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="VARCHAR"):(es=t,t=s)):(es=t,t=s),t}function Ya(){var t,e,n,u;return t=es,"nvarchar"===r.substr(es,8).toLowerCase()?(e=r.substr(es,8),es+=8):(e=s,0===os&&fs(_n)),e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="NVARCHAR"):(es=t,t=s)):(es=t,t=s),t}function Ba(){var t,e,n,u;return t=es,"numeric"===r.substr(es,7).toLowerCase()?(e=r.substr(es,7),es+=7):(e=s,0===os&&fs(gn)),e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="NUMERIC"):(es=t,t=s)):(es=t,t=s),t}function Xa(){var t,e,n,u;return t=es,"decimal"===r.substr(es,7).toLowerCase()?(e=r.substr(es,7),es+=7):(e=s,0===os&&fs(On)),e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="DECIMAL"):(es=t,t=s)):(es=t,t=s),t}function Wa(){var t,e,n,u;return t=es,"unsigned"===r.substr(es,8).toLowerCase()?(e=r.substr(es,8),es+=8):(e=s,0===os&&fs(Un)),e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="UNSIGNED"):(es=t,t=s)):(es=t,t=s),t}function Va(){var t,e,n,u;return t=es,"int"===r.substr(es,3).toLowerCase()?(e=r.substr(es,3),es+=3):(e=s,0===os&&fs(Mn)),e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="INT"):(es=t,t=s)):(es=t,t=s),t}function Ka(){var t,e,n,u;return t=es,"integer"===r.substr(es,7).toLowerCase()?(e=r.substr(es,7),es+=7):(e=s,0===os&&fs(kn)),e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="INTEGER"):(es=t,t=s)):(es=t,t=s),t}function qa(){var t,e,n,u;return t=es,"smallint"===r.substr(es,8).toLowerCase()?(e=r.substr(es,8),es+=8):(e=s,0===os&&fs(Fn)),e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="SMALLINT"):(es=t,t=s)):(es=t,t=s),t}function Za(){var t,e,n,u;return t=es,"tinyint"===r.substr(es,7).toLowerCase()?(e=r.substr(es,7),es+=7):(e=s,0===os&&fs(Pn)),e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="TINYINT"):(es=t,t=s)):(es=t,t=s),t}function za(){var t,e,n,u;return t=es,"bigint"===r.substr(es,6).toLowerCase()?(e=r.substr(es,6),es+=6):(e=s,0===os&&fs(Bn)),e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="BIGINT"):(es=t,t=s)):(es=t,t=s),t}function Ja(){var t,e,n,u;return t=es,"float"===r.substr(es,5).toLowerCase()?(e=r.substr(es,5),es+=5):(e=s,0===os&&fs(Xn)),e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="FLOAT"):(es=t,t=s)):(es=t,t=s),t}function Qa(){var t,e,n,u;return t=es,"real"===r.substr(es,4).toLowerCase()?(e=r.substr(es,4),es+=4):(e=s,0===os&&fs(Wn)),e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="REAL"):(es=t,t=s)):(es=t,t=s),t}function ri(){var t,e,n,u;return t=es,"double"===r.substr(es,6).toLowerCase()?(e=r.substr(es,6),es+=6):(e=s,0===os&&fs(Vn)),e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="DOUBLE"):(es=t,t=s)):(es=t,t=s),t}function ti(){var t,e,n,u;return t=es,"date"===r.substr(es,4).toLowerCase()?(e=r.substr(es,4),es+=4):(e=s,0===os&&fs(Kn)),e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="DATE"):(es=t,t=s)):(es=t,t=s),t}function ei(){var t,e,n,u;return t=es,"datetime"===r.substr(es,8).toLowerCase()?(e=r.substr(es,8),es+=8):(e=s,0===os&&fs(Zn)),e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="DATETIME"):(es=t,t=s)):(es=t,t=s),t}function ni(){var t,e,n,u;return t=es,"datetime2"===r.substr(es,9).toLowerCase()?(e=r.substr(es,9),es+=9):(e=s,0===os&&fs(zn)),e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="DATETIME2"):(es=t,t=s)):(es=t,t=s),t}function ui(){var t,e,n,u;return t=es,"datetimeoffset"===r.substr(es,14).toLowerCase()?(e=r.substr(es,14),es+=14):(e=s,0===os&&fs(Jn)),e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="DATETIMEOFFSET"):(es=t,t=s)):(es=t,t=s),t}function si(){var t,e,n,u;return t=es,"time"===r.substr(es,4).toLowerCase()?(e=r.substr(es,4),es+=4):(e=s,0===os&&fs(Qn)),e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="TIME"):(es=t,t=s)):(es=t,t=s),t}function oi(){var t,e,n,u;return t=es,"timestamp"===r.substr(es,9).toLowerCase()?(e=r.substr(es,9),es+=9):(e=s,0===os&&fs(ru)),e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="TIMESTAMP"):(es=t,t=s)):(es=t,t=s),t}function ai(){var t,e,n,u;return t=es,"current_timestamp"===r.substr(es,17).toLowerCase()?(e=r.substr(es,17),es+=17):(e=s,0===os&&fs(vu)),e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="CURRENT_TIMESTAMP"):(es=t,t=s)):(es=t,t=s),t}function ii(){var t;return 64===r.charCodeAt(es)?(t="@",es++):(t=s,0===os&&fs(Au)),t}function ci(){var t;return (t=function(){var t;return "@@"===r.substr(es,2)?(t="@@",es+=2):(t=s,0===os&&fs(yu)),t}())===s&&(t=ii())===s&&(t=function(){var t;return 36===r.charCodeAt(es)?(t="$",es++):(t=s,0===os&&fs(Tu)),t}()),t}function li(){var t;return 61===r.charCodeAt(es)?(t="=",es++):(t=s,0===os&&fs(Kr)),t}function fi(){var t,e,n,u;return t=es,"add"===r.substr(es,3).toLowerCase()?(e=r.substr(es,3),es+=3):(e=s,0===os&&fs(Nu)),e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="ADD"):(es=t,t=s)):(es=t,t=s),t}function bi(){var t,e,n,u;return t=es,"column"===r.substr(es,6).toLowerCase()?(e=r.substr(es,6),es+=6):(e=s,0===os&&fs(Ru)),e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="COLUMN"):(es=t,t=s)):(es=t,t=s),t}function vi(){var t,e,n,u;return t=es,"index"===r.substr(es,5).toLowerCase()?(e=r.substr(es,5),es+=5):(e=s,0===os&&fs(_u)),e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="INDEX"):(es=t,t=s)):(es=t,t=s),t}function di(){var t,e,n,u;return t=es,"key"===r.substr(es,3).toLowerCase()?(e=r.substr(es,3),es+=3):(e=s,0===os&&fs(L)),e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="KEY"):(es=t,t=s)):(es=t,t=s),t}function Li(){var t,e,n,u;return t=es,"unique"===r.substr(es,6).toLowerCase()?(e=r.substr(es,6),es+=6):(e=s,0===os&&fs(v)),e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="UNIQUE"):(es=t,t=s)):(es=t,t=s),t}function Ci(){var t,e,n,u;return t=es,"comment"===r.substr(es,7).toLowerCase()?(e=r.substr(es,7),es+=7):(e=s,0===os&&fs(Uu)),e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="COMMENT"):(es=t,t=s)):(es=t,t=s),t}function pi(){var t,e,n,u;return t=es,"constraint"===r.substr(es,10).toLowerCase()?(e=r.substr(es,10),es+=10):(e=s,0===os&&fs(Mu)),e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="CONSTRAINT"):(es=t,t=s)):(es=t,t=s),t}function wi(){var t;return 46===r.charCodeAt(es)?(t=".",es++):(t=s,0===os&&fs(Jt)),t}function Ei(){var t;return 44===r.charCodeAt(es)?(t=",",es++):(t=s,0===os&&fs(ju)),t}function hi(){var t;return 42===r.charCodeAt(es)?(t="*",es++):(t=s,0===os&&fs(ot)),t}function Ai(){var t;return 40===r.charCodeAt(es)?(t="(",es++):(t=s,0===os&&fs(wr)),t}function yi(){var t;return 41===r.charCodeAt(es)?(t=")",es++):(t=s,0===os&&fs(Er)),t}function Ti(){var t;return 91===r.charCodeAt(es)?(t="[",es++):(t=s,0===os&&fs(Et)),t}function mi(){var t;return 93===r.charCodeAt(es)?(t="]",es++):(t=s,0===os&&fs(yt)),t}function Si(){var t;return 59===r.charCodeAt(es)?(t=";",es++):(t=s,0===os&&fs(Yu)),t}function Ii(){var t;return (t=function(){var t;return "||"===r.substr(es,2)?(t="||",es+=2):(t=s,0===os&&fs(Bu)),t}())===s&&(t=function(){var t;return "&&"===r.substr(es,2)?(t="&&",es+=2):(t=s,0===os&&fs(Xu)),t}()),t}function Ni(){var r,t;for(r=[],(t=xi())===s&&(t=_i());t!==s;)r.push(t),(t=xi())===s&&(t=_i());return r}function Ri(){var r,t;if(r=[],(t=xi())===s&&(t=_i()),t!==s)for(;t!==s;)r.push(t),(t=xi())===s&&(t=_i());else r=s;return r}function _i(){var t;return (t=function(){var t,e,n,u,o,a;t=es,"/*"===r.substr(es,2)?(e="/*",es+=2):(e=s,0===os&&fs(Wu));if(e!==s){for(n=[],u=es,o=es,os++,"*/"===r.substr(es,2)?(a="*/",es+=2):(a=s,0===os&&fs(Vu)),os--,a===s?o=void 0:(es=o,o=s),o!==s&&(a=Oi())!==s?u=o=[o,a]:(es=u,u=s);u!==s;)n.push(u),u=es,o=es,os++,"*/"===r.substr(es,2)?(a="*/",es+=2):(a=s,0===os&&fs(Vu)),os--,a===s?o=void 0:(es=o,o=s),o!==s&&(a=Oi())!==s?u=o=[o,a]:(es=u,u=s);n!==s?("*/"===r.substr(es,2)?(u="*/",es+=2):(u=s,0===os&&fs(Vu)),u!==s?t=e=[e,n,u]:(es=t,t=s)):(es=t,t=s);}else es=t,t=s;return t}())===s&&(t=function(){var t,e,n,u,o,a;t=es,"--"===r.substr(es,2)?(e="--",es+=2):(e=s,0===os&&fs(Ku));if(e!==s){for(n=[],u=es,o=es,os++,a=Ui(),os--,a===s?o=void 0:(es=o,o=s),o!==s&&(a=Oi())!==s?u=o=[o,a]:(es=u,u=s);u!==s;)n.push(u),u=es,o=es,os++,a=Ui(),os--,a===s?o=void 0:(es=o,o=s),o!==s&&(a=Oi())!==s?u=o=[o,a]:(es=u,u=s);n!==s?t=e=[e,n]:(es=t,t=s);}else es=t,t=s;return t}())===s&&(t=function(){var t,e,n,u,o,a;t=es,35===r.charCodeAt(es)?(e="#",es++):(e=s,0===os&&fs(qu));if(e!==s){for(n=[],u=es,o=es,os++,a=Ui(),os--,a===s?o=void 0:(es=o,o=s),o!==s&&(a=Oi())!==s?u=o=[o,a]:(es=u,u=s);u!==s;)n.push(u),u=es,o=es,os++,a=Ui(),os--,a===s?o=void 0:(es=o,o=s),o!==s&&(a=Oi())!==s?u=o=[o,a]:(es=u,u=s);n!==s?t=e=[e,n]:(es=t,t=s);}else es=t,t=s;return t}()),t}function gi(){var r,t,e,n,u,o,a;return r=es,(t=Ci())!==s&&Ni()!==s?((e=li())===s&&(e=null),e!==s&&Ni()!==s&&(n=Xo())!==s?(o=e,a=n,r=t={type:(u=t).toLowerCase(),keyword:u.toLowerCase(),symbol:o,value:a}):(es=r,r=s)):(es=r,r=s),r}function Oi(){var t;return r.length>es?(t=r.charAt(es),es++):(t=s,0===os&&fs(Zu)),t}function xi(){var t;return zu.test(r.charAt(es))?(t=r.charAt(es),es++):(t=s,0===os&&fs(Ju)),t}function Ui(){var t,e;if((t=function(){var t,e;t=es,os++,r.length>es?(e=r.charAt(es),es++):(e=s,0===os&&fs(Zu));os--,e===s?t=void 0:(es=t,t=s);return t}())===s)if(t=[],Zt.test(r.charAt(es))?(e=r.charAt(es),es++):(e=s,0===os&&fs(zt)),e!==s)for(;e!==s;)t.push(e),Zt.test(r.charAt(es))?(e=r.charAt(es),es++):(e=s,0===os&&fs(zt));else t=s;return t}function Mi(){var t,e;return t=es,tc=[],(void 0)!==s&&Ni()!==s?((e=Di())===s&&(e=function(){var t,e;t=es,function(){var t;return "return"===r.substr(es,6).toLowerCase()?(t=r.substr(es,6),es+=6):(t=s,0===os&&fs(mu)),t}()!==s&&Ni()!==s&&(e=ki())!==s?(t={type:"return",expr:e}):(es=t,t=s);return t}()),e!==s?(t={stmt:e,vars:tc}):(es=t,t=s)):(es=t,t=s),t}function Di(){var t,e,n,u;return t=es,(e=Yi())===s&&(e=Bi()),e!==s&&Ni()!==s?((n=function(){var t;return ":="===r.substr(es,2)?(t=":=",es+=2):(t=s,0===os&&fs(Su)),t}())===s&&(n=li()),n!==s&&Ni()!==s&&(u=ki())!==s?(t=e={type:"assign",left:e,symbol:n,right:u}):(es=t,t=s)):(es=t,t=s),t}function ki(){var r;return (r=ks())===s&&(r=function(){var r,t,e,n,u;r=es,(t=Yi())!==s&&Ni()!==s&&(e=to())!==s&&Ni()!==s&&(n=Yi())!==s&&Ni()!==s&&(u=no())!==s?(r=t={type:"join",ltable:t,rtable:n,op:e,on:u}):(es=r,r=s);return r}())===s&&(r=$i())===s&&(r=function(){var r,t;r=es,Ti()!==s&&Ni()!==s&&(t=ji())!==s&&Ni()!==s&&mi()!==s?(r={type:"array",value:t}):(es=r,r=s);return r}()),r}function $i(){var r,t,e,n,u,o,a,i;if(r=es,(t=Fi())!==s){for(e=[],n=es,(u=Ni())!==s&&(o=Ro())!==s&&(a=Ni())!==s&&(i=Fi())!==s?n=u=[u,o,a,i]:(es=n,n=s);n!==s;)e.push(n),n=es,(u=Ni())!==s&&(o=Ro())!==s&&(a=Ni())!==s&&(i=Fi())!==s?n=u=[u,o,a,i]:(es=n,n=s);e!==s?(r=t=qr(t,e)):(es=r,r=s);}else es=r,r=s;return r}function Fi(){var r,t,e,n,u,o,a,i;if(r=es,(t=Pi())!==s){for(e=[],n=es,(u=Ni())!==s&&(o=go())!==s&&(a=Ni())!==s&&(i=Pi())!==s?n=u=[u,o,a,i]:(es=n,n=s);n!==s;)e.push(n),n=es,(u=Ni())!==s&&(o=go())!==s&&(a=Ni())!==s&&(i=Pi())!==s?n=u=[u,o,a,i]:(es=n,n=s);e!==s?(r=t=qr(t,e)):(es=r,r=s);}else es=r,r=s;return r}function Pi(){var r,t,e;return (r=Yo())===s&&(r=Yi())===s&&(r=Gi())===s&&(r=Go())===s&&(r=es,Ai()!==s&&Ni()!==s&&(t=$i())!==s&&Ni()!==s&&yi()!==s?((e=t).parentheses=!0,r=e):(es=r,r=s)),r}function Hi(){var r,t,e,n,u,o,a;return r=es,(t=Mo())!==s?(e=es,(n=Ni())!==s&&(u=wi())!==s&&(o=Ni())!==s&&(a=Mo())!==s?e=n=[n,u,o,a]:(es=e,e=s),e===s&&(e=null),e!==s?(r=t=function(r,t){let e=r;return null!==t&&(e=`${r}.${t[3]}`),e}(t,e)):(es=r,r=s)):(es=r,r=s),r}function Gi(){var r,t,e;return r=es,(t=Hi())!==s&&Ni()!==s&&Ai()!==s&&Ni()!==s?((e=ji())===s&&(e=null),e!==s&&Ni()!==s&&yi()!==s?(r=t={type:"function",name:t,args:{type:"expr_list",value:e}}):(es=r,r=s)):(es=r,r=s),r===s&&(r=es,(t=Hi())!==s&&(t=function(r){return {type:"function",name:r,args:null}}(t)),r=t),r}function ji(){var r,t,e,n,u,o,a,i;if(r=es,(t=Pi())!==s){for(e=[],n=es,(u=Ni())!==s&&(o=Ei())!==s&&(a=Ni())!==s&&(i=Pi())!==s?n=u=[u,o,a,i]:(es=n,n=s);n!==s;)e.push(n),n=es,(u=Ni())!==s&&(o=Ei())!==s&&(a=Ni())!==s&&(i=Pi())!==s?n=u=[u,o,a,i]:(es=n,n=s);e!==s?(r=t=b(t,e)):(es=r,r=s);}else es=r,r=s;return r}function Yi(){var r,t,e,n,u;return r=es,(t=ci())!==s&&(e=Bi())!==s?(n=t,u=e,r=t={type:"var",...u,prefix:n}):(es=r,r=s),r}function Bi(){var t,e,n,u,o;return t=es,(e=$o())!==s&&(n=function(){var e,n,u,o;e=[],n=es,46===r.charCodeAt(es)?(u=".",es++):(u=s,0===os&&fs(Jt));u!==s&&(o=$o())!==s?n=u=[u,o]:(es=n,n=s);for(;n!==s;)e.push(n),n=es,46===r.charCodeAt(es)?(u=".",es++):(u=s,0===os&&fs(Jt)),u!==s&&(o=$o())!==s?n=u=[u,o]:(es=n,n=s);e!==s&&(e=function(r){const t=[];for(let e=0;e<r.length;e++)t.push(r[e][1]);return t}(e));return e}())!==s?(u=e,o=n,tc.push(u),t=e={type:"var",name:u,members:o,prefix:null}):(es=t,t=s),t}function Xi(){var t;return (t=function(){var t,e,n,u,o,a;t=es,(e=Ti())===s&&(e=null);if(e!==s)if(Ni()!==s)if((n=Ga())===s&&(n=ja())===s&&(n=function(){var t,e,n,u;return t=es,"nchar"===r.substr(es,5).toLowerCase()?(e=r.substr(es,5),es+=5):(e=s,0===os&&fs(Rn)),e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="NCHAR"):(es=t,t=s)):(es=t,t=s),t}())===s&&(n=Ya()),n!==s)if(Ni()!==s)if((u=mi())===s&&(u=null),u!==s)if((Qu(e,0,u)?s:void 0)!==s)if(Ni()!==s)if(Ai()!==s)if(Ni()!==s){if(o=[],Qt.test(r.charAt(es))?(a=r.charAt(es),es++):(a=s,0===os&&fs(re)),a!==s)for(;a!==s;)o.push(a),Qt.test(r.charAt(es))?(a=r.charAt(es),es++):(a=s,0===os&&fs(re));else o=s;o!==s&&(a=Ni())!==s&&yi()!==s?(e={dataType:n,length:parseInt(o.join(""),10)},t=e):(es=t,t=s);}else es=t,t=s;else es=t,t=s;else es=t,t=s;else es=t,t=s;else es=t,t=s;else es=t,t=s;else es=t,t=s;else es=t,t=s;else es=t,t=s;t===s&&(t=es,(e=Ti())===s&&(e=null),e!==s&&Ni()!==s?((n=Ga())===s&&(n=ja()),n!==s&&Ni()!==s?((u=mi())===s&&(u=null),u!==s?((Qu(e,0,u)?s:void 0)!==s?(e=rs(0,n),t=e):(es=t,t=s)):(es=t,t=s)):(es=t,t=s)):(es=t,t=s),t===s&&(t=es,(e=Ti())===s&&(e=null),e!==s&&Ni()!==s&&(n=Ya())!==s&&Ni()!==s?((u=mi())===s&&(u=null),u!==s?((Qu(e,0,u)?s:void 0)!==s&&Ni()!==s&&Ai()!==s&&Ni()!==s?("max"===r.substr(es,3).toLowerCase()?(o=r.substr(es,3),es+=3):(o=s,0===os&&fs(bn)),o!==s&&(a=Ni())!==s&&yi()!==s?(e=function(r,t,e,n){return {dataType:t,length:"max"}}(0,n),t=e):(es=t,t=s)):(es=t,t=s)):(es=t,t=s)):(es=t,t=s)));return t}())===s&&(t=function(){var t,e,n,u,o,a,i,c,l,f,b,v,d,L,C;t=es,(e=Ti())===s&&(e=null);if(e!==s)if(Ni()!==s)if((n=Ba())===s&&(n=Xa())===s&&(n=Va())===s&&(n=Ka())===s&&(n=qa())===s&&(n=Za())===s&&(n=za())===s&&(n=Ja())===s&&(n=Qa())===s&&(n=ri()),n!==s)if((u=Ni())!==s)if((o=mi())===s&&(o=null),o!==s)if((Qu(e,0,o)?s:void 0)!==s)if((a=Ni())!==s)if((i=Ai())!==s)if((c=Ni())!==s){if(l=[],Qt.test(r.charAt(es))?(f=r.charAt(es),es++):(f=s,0===os&&fs(re)),f!==s)for(;f!==s;)l.push(f),Qt.test(r.charAt(es))?(f=r.charAt(es),es++):(f=s,0===os&&fs(re));else l=s;if(l!==s)if((f=Ni())!==s){if(b=es,(v=Ei())!==s)if((d=Ni())!==s){if(L=[],Qt.test(r.charAt(es))?(C=r.charAt(es),es++):(C=s,0===os&&fs(re)),C!==s)for(;C!==s;)L.push(C),Qt.test(r.charAt(es))?(C=r.charAt(es),es++):(C=s,0===os&&fs(re));else L=s;L!==s?b=v=[v,d,L]:(es=b,b=s);}else es=b,b=s;else es=b,b=s;b===s&&(b=null),b!==s&&(v=Ni())!==s&&(d=yi())!==s&&(L=Ni())!==s?((C=Wi())===s&&(C=null),C!==s?(p=b,w=C,e={dataType:n,length:parseInt(l.join(""),10),scale:p&&parseInt(p[2].join(""),10),parentheses:!0,suffix:w},t=e):(es=t,t=s)):(es=t,t=s);}else es=t,t=s;else es=t,t=s;}else es=t,t=s;else es=t,t=s;else es=t,t=s;else es=t,t=s;else es=t,t=s;else es=t,t=s;else es=t,t=s;else es=t,t=s;else es=t,t=s;var p,w;if(t===s){if(t=es,(e=Ti())===s&&(e=null),e!==s)if(Ni()!==s)if((n=Ba())===s&&(n=Xa())===s&&(n=Va())===s&&(n=Ka())===s&&(n=qa())===s&&(n=Za())===s&&(n=za())===s&&(n=Ja())===s&&(n=Qa())===s&&(n=ri()),n!==s)if((u=mi())===s&&(u=null),u!==s)if((o=(o=Qu(e,0,u))?s:void 0)!==s)if(Ni()!==s){if(a=[],Qt.test(r.charAt(es))?(i=r.charAt(es),es++):(i=s,0===os&&fs(re)),i!==s)for(;i!==s;)a.push(i),Qt.test(r.charAt(es))?(i=r.charAt(es),es++):(i=s,0===os&&fs(re));else a=s;a!==s&&(i=Ni())!==s?((c=Wi())===s&&(c=null),c!==s?(e=function(r,t,e,n,u){return {dataType:t,length:parseInt(n.join(""),10),suffix:u}}(0,n,0,a,c),t=e):(es=t,t=s)):(es=t,t=s);}else es=t,t=s;else es=t,t=s;else es=t,t=s;else es=t,t=s;else es=t,t=s;else es=t,t=s;t===s&&(t=es,(e=Ti())===s&&(e=null),e!==s&&Ni()!==s?((n=Ba())===s&&(n=Xa())===s&&(n=Va())===s&&(n=Ka())===s&&(n=qa())===s&&(n=Za())===s&&(n=za())===s&&(n=Ja())===s&&(n=Qa())===s&&(n=ri())===s&&(n=function(){var t,e,n,u;return t=es,"bit"===r.substr(es,3).toLowerCase()?(e=r.substr(es,3),es+=3):(e=s,0===os&&fs(Tn)),e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="BIT"):(es=t,t=s)):(es=t,t=s),t}())===s&&(n=function(){var t,e,n,u;return t=es,"money"===r.substr(es,5).toLowerCase()?(e=r.substr(es,5),es+=5):(e=s,0===os&&fs(mn)),e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="MONEY"):(es=t,t=s)):(es=t,t=s),t}())===s&&(n=function(){var t,e,n,u;return t=es,"smallmoney"===r.substr(es,10).toLowerCase()?(e=r.substr(es,10),es+=10):(e=s,0===os&&fs(Sn)),e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="SMALLMONEY"):(es=t,t=s)):(es=t,t=s),t}()),n!==s&&(u=Ni())!==s?((o=mi())===s&&(o=null),o!==s?((Qu(e,0,o)?s:void 0)!==s&&(a=Ni())!==s?((i=Wi())===s&&(i=null),i!==s&&(c=Ni())!==s?(e=function(r,t,e,n){return {dataType:t,suffix:n}}(0,n,0,i),t=e):(es=t,t=s)):(es=t,t=s)):(es=t,t=s)):(es=t,t=s)):(es=t,t=s));}return t}())===s&&(t=function(){var t,e,n,u,o,a,i,c,l,f,b;t=es,(e=Ti())===s&&(e=null);if(e!==s)if(Ni()!==s)if((n=ni())===s&&(n=ui())===s&&(n=si()),n!==s)if(Ni()!==s)if((u=mi())===s&&(u=null),u!==s)if((Qu(e,0,u)?s:void 0)!==s)if(Ai()!==s)if(Ni()!==s){if(o=[],Qt.test(r.charAt(es))?(a=r.charAt(es),es++):(a=s,0===os&&fs(re)),a!==s)for(;a!==s;)o.push(a),Qt.test(r.charAt(es))?(a=r.charAt(es),es++):(a=s,0===os&&fs(re));else o=s;if(o!==s)if((a=Ni())!==s){if(i=es,(c=Ei())!==s)if((l=Ni())!==s){if(f=[],Qt.test(r.charAt(es))?(b=r.charAt(es),es++):(b=s,0===os&&fs(re)),b!==s)for(;b!==s;)f.push(b),Qt.test(r.charAt(es))?(b=r.charAt(es),es++):(b=s,0===os&&fs(re));else f=s;f!==s?i=c=[c,l,f]:(es=i,i=s);}else es=i,i=s;else es=i,i=s;i===s&&(i=null),i!==s&&(c=Ni())!==s&&(l=yi())!==s?(e={dataType:n,length:parseInt(o.join(""),10)},t=e):(es=t,t=s);}else es=t,t=s;else es=t,t=s;}else es=t,t=s;else es=t,t=s;else es=t,t=s;else es=t,t=s;else es=t,t=s;else es=t,t=s;else es=t,t=s;else es=t,t=s;t===s&&(t=es,(e=Ti())===s&&(e=null),e!==s&&Ni()!==s?((n=ti())===s&&(n=function(){var t,e,n,u;return t=es,"smalldatetime"===r.substr(es,13).toLowerCase()?(e=r.substr(es,13),es+=13):(e=s,0===os&&fs(qn)),e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="SMALLDATETIME"):(es=t,t=s)):(es=t,t=s),t}())===s&&(n=ei())===s&&(n=ni())===s&&(n=ui())===s&&(n=si())===s&&(n=oi()),n!==s&&Ni()!==s?((u=mi())===s&&(u=null),u!==s?((Qu(e,0,u)?s:void 0)!==s?(e=rs(0,n),t=e):(es=t,t=s)):(es=t,t=s)):(es=t,t=s)):(es=t,t=s));return t}())===s&&(t=function(){var t,e,n,u;t=es,(e=Ti())===s&&(e=null);e!==s&&Ni()!==s&&(n=function(){var t,e,n,u;return t=es,"json"===r.substr(es,4).toLowerCase()?(e=r.substr(es,4),es+=4):(e=s,0===os&&fs($n)),e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="JSON"):(es=t,t=s)):(es=t,t=s),t}())!==s&&Ni()!==s?((u=mi())===s&&(u=null),u!==s?((Qu(e,0,u)?s:void 0)!==s?(e=rs(0,n),t=e):(es=t,t=s)):(es=t,t=s)):(es=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=es,(e=Ti())===s&&(e=null);e!==s&&Ni()!==s?((n=function(){var t,e,n,u;return t=es,"tinytext"===r.substr(es,8).toLowerCase()?(e=r.substr(es,8),es+=8):(e=s,0===os&&fs(Hn)),e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="TINYTEXT"):(es=t,t=s)):(es=t,t=s),t}())===s&&(n=function(){var t,e,n,u;return t=es,"text"===r.substr(es,4).toLowerCase()?(e=r.substr(es,4),es+=4):(e=s,0===os&&fs(Gn)),e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="TEXT"):(es=t,t=s)):(es=t,t=s),t}())===s&&(n=function(){var t,e,n,u;return t=es,"mediumtext"===r.substr(es,10).toLowerCase()?(e=r.substr(es,10),es+=10):(e=s,0===os&&fs(jn)),e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="MEDIUMTEXT"):(es=t,t=s)):(es=t,t=s),t}())===s&&(n=function(){var t,e,n,u;return t=es,"longtext"===r.substr(es,8).toLowerCase()?(e=r.substr(es,8),es+=8):(e=s,0===os&&fs(Yn)),e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="LONGTEXT"):(es=t,t=s)):(es=t,t=s),t}()),n!==s&&Ni()!==s?((u=mi())===s&&(u=null),u!==s?((Qu(e,0,u)?s:void 0)!==s?(e=ts(0,n),t=e):(es=t,t=s)):(es=t,t=s)):(es=t,t=s)):(es=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=es,(e=Ti())===s&&(e=null);e!==s&&Ni()!==s&&(n=function(){var t,e,n,u;return t=es,"uniqueidentifier"===r.substr(es,16).toLowerCase()?(e=r.substr(es,16),es+=16):(e=s,0===os&&fs(eu)),e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="UNIQUEIDENTIFIER"):(es=t,t=s)):(es=t,t=s),t}())!==s&&Ni()!==s?((u=mi())===s&&(u=null),u!==s?((Qu(e,0,u)?s:void 0)!==s?(e=ts(0,n),t=e):(es=t,t=s)):(es=t,t=s)):(es=t,t=s);return t}()),t}function Wi(){var t,e,n;return t=es,(e=Wa())===s&&(e=null),e!==s&&Ni()!==s?((n=function(){var t,e,n,u;return t=es,"zerofill"===r.substr(es,8).toLowerCase()?(e=r.substr(es,8),es+=8):(e=s,0===os&&fs(Dn)),e!==s?(n=es,os++,u=Fo(),os--,u===s?n=void 0:(es=n,n=s),n!==s?(t=e="ZEROFILL"):(es=t,t=s)):(es=t,t=s),t}())===s&&(n=null),n!==s?(t=e=function(r,t){const e=[];return r&&e.push(r),t&&e.push(t),e}(e,n)):(es=t,t=s)):(es=t,t=s),t}const Vi={ALTER:!0,ALL:!0,ADD:!0,AND:!0,AS:!0,ASC:!0,BETWEEN:!0,BY:!0,CALL:!0,CASE:!0,CREATE:!0,CONTAINS:!0,CURRENT_DATE:!0,CURRENT_TIME:!0,CURRENT_TIMESTAMP:!0,CURRENT_USER:!0,DELETE:!0,DESC:!0,DISTINCT:!0,DROP:!0,ELSE:!0,END:!0,EXISTS:!0,EXPLAIN:!0,FALSE:!0,FROM:!0,FULL:!0,GROUP:!0,HAVING:!0,IN:!0,INNER:!0,INSERT:!0,INTO:!0,IS:!0,JOIN:!0,JSON:!0,KEY:!0,LEFT:!0,LIKE:!0,LIMIT:!0,LOW_PRIORITY:!0,NOT:!0,NULL:!0,NOCHECK:!0,ON:!0,OR:!0,ORDER:!0,OUTER:!0,RECURSIVE:!0,RENAME:!0,READ:!0,RIGHT:!0,SELECT:!0,SESSION_USER:!0,SET:!0,SHOW:!0,STATUS:!0,SYSTEM_USER:!0,TABLE:!0,THEN:!0,TRUE:!0,TRUNCATE:!0,TYPE:!0,UNION:!0,UPDATE:!0,USING:!0,VALUES:!0,WITH:!0,WHEN:!0,WHERE:!0,WRITE:!0,GLOBAL:!0,SESSION:!0,LOCAL:!0,PERSIST:!0,PERSIST_ONLY:!0};function Ki(r,t){return {type:"unary_expr",operator:r,expr:t}}function qi(r,t,e){return {type:"binary_expr",operator:r,left:t,right:e}}function Zi(r){const t=n(Number.MAX_SAFE_INTEGER);return !(n(r)<t)}function zi(r,t,e=3){const n=[r];for(let r=0;r<t.length;r++)n.push(t[r][e]);return n}function Ji(r,t){let e=r;for(let r=0;r<t.length;r++)e=qi(t[r][1],e,t[r][3]);return e}function Qi(r){const t=uc[r];return t||(r||null)}function rc(r){const t=new Set;for(let e of r.keys()){const r=e.split("::");if(!r){t.add(e);break}r&&r[1]&&(r[1]=Qi(r[1])),t.add(r.join("::"));}return Array.from(t)}let tc=[];const ec=new Set,nc=new Set,uc={};if((e=a())!==s&&es===r.length)return e;throw e!==s&&es<r.length&&fs({type:"end"}),bs(ss,us<r.length?r.charAt(us):null,us<r.length?ls(us,us+1):ls(us,us))}};},function(r,t,e){var n=e(0);function u(r,t,e,n){this.message=r,this.expected=t,this.found=e,this.location=n,this.name="SyntaxError","function"==typeof Error.captureStackTrace&&Error.captureStackTrace(this,u);}!function(r,t){function e(){this.constructor=r;}e.prototype=t.prototype,r.prototype=new e;}(u,Error),u.buildMessage=function(r,t){var e={literal:function(r){return '"'+u(r.text)+'"'},class:function(r){var t,e="";for(t=0;t<r.parts.length;t++)e+=r.parts[t]instanceof Array?s(r.parts[t][0])+"-"+s(r.parts[t][1]):s(r.parts[t]);return "["+(r.inverted?"^":"")+e+"]"},any:function(r){return "any character"},end:function(r){return "end of input"},other:function(r){return r.description}};function n(r){return r.charCodeAt(0).toString(16).toUpperCase()}function u(r){return r.replace(/\\/g,"\\\\").replace(/"/g,'\\"').replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(r){return "\\x0"+n(r)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(r){return "\\x"+n(r)}))}function s(r){return r.replace(/\\/g,"\\\\").replace(/\]/g,"\\]").replace(/\^/g,"\\^").replace(/-/g,"\\-").replace(/\0/g,"\\0").replace(/\t/g,"\\t").replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/[\x00-\x0F]/g,(function(r){return "\\x0"+n(r)})).replace(/[\x10-\x1F\x7F-\x9F]/g,(function(r){return "\\x"+n(r)}))}return "Expected "+function(r){var t,n,u,s=new Array(r.length);for(t=0;t<r.length;t++)s[t]=(u=r[t],e[u.type](u));if(s.sort(),s.length>0){for(t=1,n=1;t<s.length;t++)s[t-1]!==s[t]&&(s[n]=s[t],n++);s.length=n;}switch(s.length){case 1:return s[0];case 2:return s[0]+" or "+s[1];default:return s.slice(0,-1).join(", ")+", or "+s[s.length-1]}}(r)+" but "+function(r){return r?'"'+u(r)+'"':"end of input"}(t)+" found."},r.exports={SyntaxError:u,parse:function(r,t){t=void 0!==t?t:{};var e,s={},o={start:Ns},a=Ns,i=As("EXTENSION",!0),c=As("SCHEMA",!0),l=As("VERSION",!0),b=function(r,t){return ic(r,t,1)},v=As("NULLS",!0),d=As("FIRST",!0),L=As("LAST",!0),C=As("AUTO_INCREMENT",!0),p=As("UNIQUE",!0),w=As("PRIMARY",!0),E=As("KEY",!0),h=As("COLUMN_FORMAT",!0),A=As("FIXED",!0),y=As("DYNAMIC",!0),T=As("DEFAULT",!0),m=As("STORAGE",!0),S=As("DISK",!0),I=As("MEMORY",!0),N=As("ALGORITHM",!0),R=As("INSTANT",!0),_=As("INPLACE",!0),g=As("COPY",!0),O=As("LOCK",!0),x=As("NONE",!0),U=As("SHARED",!0),M=As("EXCLUSIVE",!0),D=As("PRIMARY KEY",!0),k=As("FOREIGN KEY",!0),$=As("MATCH FULL",!0),F=As("MATCH PARTIAL",!0),P=As("MATCH SIMPLE",!0),H=As("ON",!0),G=As("DELETE",!0),j=As("UPDATE",!0),Y=As("RESTRICT",!0),B=As("CASCADE",!0),X=As("SET NULL",!0),W=As("NO ACTION",!0),V=As("SET DEFAULT",!0),K=As("TRIGGER",!0),q=As("BEFORE",!0),Z=As("AFTER",!0),z=As("INSTEAD OF",!0),J=As("EXECUTE",!0),Q=As("PROCEDURE",!0),rr=As("OF",!0),tr=As("NOT",!0),er=As("DEFERRABLE",!0),nr=As("INITIALLY IMMEDIATE",!0),ur=As("INITIALLY DEFERRED",!0),sr=As("FOR",!0),or=As("EACH",!0),ar=As("ROW",!0),ir=As("STATEMENT",!0),cr=As("CHARACTER",!0),lr=As("SET",!0),fr=As("CHARSET",!0),br=As("COLLATE",!0),vr=As("AVG_ROW_LENGTH",!0),dr=As("KEY_BLOCK_SIZE",!0),Lr=As("MAX_ROWS",!0),Cr=As("MIN_ROWS",!0),pr=As("STATS_SAMPLE_PAGES",!0),wr=As("CONNECTION",!0),Er=As("COMPRESSION",!0),hr=As("'",!1),Ar=As("ZLIB",!0),yr=As("LZ4",!0),Tr=As("ENGINE",!0),mr=As("IN",!0),Sr=As("ACCESS SHARE",!0),Ir=As("ROW SHARE",!0),Nr=As("ROW EXCLUSIVE",!0),Rr=As("SHARE UPDATE EXCLUSIVE",!0),_r=As("SHARE ROW EXCLUSIVE",!0),gr=As("ACCESS EXCLUSIVE",!0),Or=As("SHARE",!0),xr=As("MODE",!0),Ur=As("NOWAIT",!0),Mr=As("(",!1),Dr=As(")",!1),kr=function(r,t){return ic(r,t)},$r=As("BTREE",!0),Fr=As("HASH",!0),Pr=As("GIST",!0),Hr=As("GIN",!0),Gr=As("WITH",!0),jr=As("PARSER",!0),Yr=As("VISIBLE",!0),Br=As("INVISIBLE",!0),Xr=function(r,t){return t.unshift(r),t.forEach(r=>{const{table:t,as:e}=r;pc[t]=t,e&&(pc[e]=t),function(r){const t=fc(r);r.clear(),t.forEach(t=>r.add(t));}(Cc);}),t},Wr=As("=",!1),Vr=function(r,t){return cc(r,t)},Kr=As("!",!1),qr=As(">=",!1),Zr=As(">",!1),zr=As("<=",!1),Jr=As("<>",!1),Qr=As("<",!1),rt=As("!=",!1),tt=As("@>",!1),et=As("<@",!1),nt=As("?",!1),ut=As("?|",!1),st=As("?&",!1),ot=As("#-",!1),at=As("+",!1),it=As("-",!1),ct=As("*",!1),lt=As("/",!1),ft=As("%",!1),bt=As("$",!1),vt=function(r){return !0===uc[r.toUpperCase()]},dt=As('"',!1),Lt=/^[^"]/,Ct=ys(['"'],!0,!1),pt=function(r){return r.join("")},wt=/^[^']/,Et=ys(["'"],!0,!1),ht=As("`",!1),At=/^[^`]/,yt=ys(["`"],!0,!1),Tt=/^[A-Za-z_]/,mt=ys([["A","Z"],["a","z"],"_"],!1,!1),St=/^[A-Za-z0-9_\-]/,It=ys([["A","Z"],["a","z"],["0","9"],"_","-"],!1,!1),Nt=/^[A-Za-z0-9_]/,Rt=ys([["A","Z"],["a","z"],["0","9"],"_"],!1,!1),_t=As(":",!1),gt=As("CENTURY",!0),Ot=As("DAY",!0),xt=As("DECADE",!0),Ut=As("DOW",!0),Mt=As("DOY",!0),Dt=As("EPOCH",!0),kt=As("HOUR",!0),$t=As("ISODOW",!0),Ft=As("ISOYEAR",!0),Pt=As("MICROSECONDS",!0),Ht=As("MILLENNIUM",!0),Gt=As("MILLISECONDS",!0),jt=As("MINUTE",!0),Yt=As("MONTH",!0),Bt=As("QUARTER",!0),Xt=As("SECOND",!0),Wt=As("TIMEZONE",!0),Vt=As("TIMEZONE_HOUR",!0),Kt=As("TIMEZONE_MINUTE",!0),qt=As("WEEK",!0),Zt=As("YEAR",!0),zt=As("ON UPDATE CURRENT_TIMESTAMP",!0),Jt=/^[^"\\\0-\x1F\x7F]/,Qt=ys(['"',"\\",["\0",""],""],!0,!1),re=/^[^'\\]/,te=ys(["'","\\"],!0,!1),ee=As("\\'",!1),ne=As('\\"',!1),ue=As("\\\\",!1),se=As("\\/",!1),oe=As("\\b",!1),ae=As("\\f",!1),ie=As("\\n",!1),ce=As("\\r",!1),le=As("\\t",!1),fe=As("\\u",!1),be=As("\\",!1),ve=/^[\n\r]/,de=ys(["\n","\r"],!1,!1),Le=As(".",!1),Ce=/^[0-9]/,pe=ys([["0","9"]],!1,!1),we=/^[0-9a-fA-F]/,Ee=ys([["0","9"],["a","f"],["A","F"]],!1,!1),he=/^[eE]/,Ae=ys(["e","E"],!1,!1),ye=/^[+\-]/,Te=ys(["+","-"],!1,!1),me=As("NULL",!0),Se=As("NOT NULL",!0),Ie=As("TRUE",!0),Ne=As("TO",!0),Re=As("FALSE",!0),_e=(As("DROP",!0)),ge=As("USE",!0),Oe=As("ALTER",!0),xe=As("SELECT",!0),Ue=As("CREATE",!0),Me=As("TEMPORARY",!0),De=As("IF NOT EXISTS",!0),ke=As("INSERT",!0),$e=As("RECURSIVE",!1),Fe=As("REPLACE",!0),Pe=As("RETURNING",!0),He=As("RENAME",!0),Ge=As("IGNORE",!0),je=(As("PARTITION",!0)),Ye=As("INTO",!0),Be=As("FROM",!0),Xe=As("AS",!0),We=As("TABLE",!0),Ve=As("TABLESPACE",!0),Ke=As("DATABASE",!0),qe=As("SCHEME",!0),Ze=As("LEFT",!0),ze=As("RIGHT",!0),Je=As("FULL",!0),Qe=As("INNER",!0),rn=As("JOIN",!0),tn=As("OUTER",!0),en=As("UNION",!0),nn=As("VALUES",!0),un=As("USING",!0),sn=As("WHERE",!0),on=As("GROUP",!0),an=As("BY",!0),cn=As("ORDER",!0),ln=As("HAVING",!0),fn=As("LIMIT",!0),bn=As("OFFSET",!0),vn=As("ASC",!0),dn=As("DESC",!0),Ln=As("ALL",!0),Cn=As("DISTINCT",!0),pn=As("BETWEEN",!0),wn=As("IS",!0),En=As("LIKE",!0),hn=As("EXISTS",!0),An=As("AND",!0),yn=As("OR",!0),Tn=As("COUNT",!0),mn=As("MAX",!0),Sn=As("MIN",!0),In=As("SUM",!0),Nn=As("AVG",!0),Rn=As("COLLECT",!0),_n=As("RANK",!0),gn=As("DENSE_RANK",!0),On=As("LISTAGG",!0),xn=As("ROW_NUMBER",!0),Un=(As("EXTRACT",!0)),Mn=As("CALL",!0),Dn=As("CASE",!0),kn=As("WHEN",!0),$n=As("THEN",!0),Fn=As("ELSE",!0),Pn=As("END",!0),Hn=As("CAST",!0),Gn=As("BOOL",!0),jn=As("BOOLEAN",!0),Yn=As("CHAR",!0),Bn=As("VARCHAR",!0),Xn=As("STRING",!0),Wn=As("NUMERIC",!0),Vn=As("DECIMAL",!0),Kn=As("SIGNED",!0),qn=As("UNSIGNED",!0),Zn=As("INT",!0),zn=As("ZEROFILL",!0),Jn=As("INTEGER",!0),Qn=As("JSON",!0),ru=As("JSONB",!0),tu=As("GEOMETRY",!0),eu=As("SMALLINT",!0),nu=As("TINYINT",!0),uu=As("TINYTEXT",!0),su=As("TEXT",!0),ou=As("MEDIUMTEXT",!0),au=As("LONGTEXT",!0),iu=As("BIGINT",!0),cu=As("FLOAT",!0),lu=As("DOUBLE",!0),fu=As("DATE",!0),bu=As("DATETIME",!0),vu=As("TIME",!0),du=As("TIMESTAMP",!0),Lu=As("TRUNCATE",!0),Cu=As("USER",!0),pu=As("UUID",!0),wu=As("ARRAY",!0),Eu=As("MAP",!0),hu=(As("CURRENT_DATE",!0)),Au=(As("INTERVAL",!0)),yu=As("CURRENT_TIME",!0),Tu=As("CURRENT_TIMESTAMP",!0),mu=As("CURRENT_USER",!0),Su=As("SESSION_USER",!0),Iu=As("SYSTEM_USER",!0),Nu=As("GLOBAL",!0),Ru=As("SESSION",!0),_u=As("LOCAL",!0),gu=As("PERSIST",!0),Ou=As("PERSIST_ONLY",!0),xu=As("@",!1),Uu=As("@@",!1),Mu=As("return",!0),Du=As(":=",!1),ku=As("::",!1),$u=As("DUAL",!0),Fu=As("ADD",!0),Pu=As("COLUMN",!0),Hu=As("INDEX",!0),Gu=As("FULLTEXT",!0),ju=As("SPATIAL",!0),Yu=As("COMMENT",!0),Bu=As("CONSTRAINT",!0),Xu=As("CONCURRENTLY",!0),Wu=As("REFERENCES",!0),Vu=As("SQL_CALC_FOUND_ROWS",!0),Ku=As("SQL_CACHE",!0),qu=As("SQL_NO_CACHE",!0),Zu=As("SQL_SMALL_RESULT",!0),zu=As("SQL_BIG_RESULT",!0),Ju=As("SQL_BUFFER_RESULT",!0),Qu=As(",",!1),rs=As("[",!1),ts=As("]",!1),es=As(";",!1),ns=As("->",!1),us=As("->>",!1),ss=As("#>",!1),os=As("#>>",!1),as=As("||",!1),is=As("&&",!1),cs=As("/*",!1),ls=As("*/",!1),fs=As("--",!1),bs=({type:"any"}),vs=/^[ \t\n\r]/,ds=ys([" ","\t","\n","\r"],!1,!1),Ls=function(r){return {dataType:r}},Cs=0,ps=[{line:1,column:1}],ws=0,Es=[],hs=0;if("startRule"in t){if(!(t.startRule in o))throw new Error("Can't start parsing from rule \""+t.startRule+'".');a=o[t.startRule];}function As(r,t){return {type:"literal",text:r,ignoreCase:t}}function ys(r,t,e){return {type:"class",parts:r,inverted:t,ignoreCase:e}}function Ts(t){var e,n=ps[t];if(n)return n;for(e=t-1;!ps[e];)e--;for(n={line:(n=ps[e]).line,column:n.column};e<t;)10===r.charCodeAt(e)?(n.line++,n.column=1):n.column++,e++;return ps[t]=n,n}function ms(r,t){var e=Ts(r),n=Ts(t);return {start:{offset:r,line:e.line,column:e.column},end:{offset:t,line:n.line,column:n.column}}}function Ss(r){Cs<ws||(Cs>ws&&(ws=Cs,Es=[]),Es.push(r));}function Is(r,t,e){return new u(u.buildMessage(r,t),r,t,e)}function Ns(){var r,t;return r=Cs,Fi()!==s?((t=function(){var r,t,e,n,u,o,a,i;if(r=Cs,(t=_s())!==s){if(e=[],n=Cs,(u=Fi())!==s&&(o=Di())!==s&&(a=Fi())!==s&&(i=_s())!==s?n=u=[u,o,a,i]:(Cs=n,n=s),n!==s)for(;n!==s;)e.push(n),n=Cs,(u=Fi())!==s&&(o=Di())!==s&&(a=Fi())!==s&&(i=_s())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);else e=s;e!==s?(t=function(r,t){const e=[r&&r.ast||r];for(let r=0;r<t.length;r++)t[r][3]&&0!==t[r][3].length&&e.push(t[r][3]&&t[r][3].ast||t[r][3]);return {tableList:Array.from(Lc),columnList:fc(Cc),ast:e}}(t,e),r=t):(Cs=r,r=s);}else Cs=r,r=s;return r}())===s&&(t=Rs())===s&&(t=_s()),t!==s?(r=t):(Cs=r,r=s)):(Cs=r,r=s),r}function Rs(){var t;return (t=function(){var r,t,e,n,u,o;r=Cs,(t=La())!==s&&Fi()!==s&&(e=_a())!==s&&Fi()!==s&&(n=oo())!==s?(a=t,i=e,(c=n)&&c.forEach(r=>Lc.add(`${a}::${r.db}::${r.table}`)),t={tableList:Array.from(Lc),columnList:fc(Cc),ast:{type:a.toLowerCase(),keyword:i.toLowerCase(),name:c}},r=t):(Cs=r,r=s);var a,i,c;r===s&&(r=Cs,(t=La())!==s&&Fi()!==s&&(e=Ti())!==s&&Fi()!==s&&(n=jo())!==s&&Fi()!==s&&ga()!==s&&Fi()!==s&&(u=lo())!==s&&Fi()!==s?((o=function(){var r,t,e,n,u,o;r=Cs,(t=$s())===s&&(t=Fs());if(t!==s){for(e=[],n=Cs,(u=Fi())!==s?((o=$s())===s&&(o=Fs()),o!==s?n=u=[u,o]:(Cs=n,n=s)):(Cs=n,n=s);n!==s;)e.push(n),n=Cs,(u=Fi())!==s?((o=$s())===s&&(o=Fs()),o!==s?n=u=[u,o]:(Cs=n,n=s)):(Cs=n,n=s);e!==s?(t=b(t,e),r=t):(Cs=r,r=s);}else Cs=r,r=s;return r}())===s&&(o=null),o!==s&&Fi()!==s?(t=function(r,t,e,n,u){return {tableList:Array.from(Lc),columnList:fc(Cc),ast:{type:r.toLowerCase(),keyword:t.toLowerCase(),name:e,table:n,options:u}}}(t,e,n,u,o),r=t):(Cs=r,r=s)):(Cs=r,r=s));return r}())===s&&(t=function(){var t;(t=function(){var t,e,n,u,o,a,i,c,l,f;t=Cs,(e=pa())!==s&&Fi()!==s?((n=wa())===s&&(n=null),n!==s&&Fi()!==s&&_a()!==s&&Fi()!==s?((u=Ea())===s&&(u=null),u!==s&&Fi()!==s&&(o=oo())!==s&&Fi()!==s&&(a=function(){var r,t,e,n,u,o,a,i,c;if(r=Cs,(t=Oi())!==s)if(Fi()!==s)if((e=xs())!==s){for(n=[],u=Cs,(o=Fi())!==s&&(a=_i())!==s&&(i=Fi())!==s&&(c=xs())!==s?u=o=[o,a,i,c]:(Cs=u,u=s);u!==s;)n.push(u),u=Cs,(o=Fi())!==s&&(a=_i())!==s&&(i=Fi())!==s&&(c=xs())!==s?u=o=[o,a,i,c]:(Cs=u,u=s);n!==s&&(u=Fi())!==s&&(o=xi())!==s?(t=ic(e,n),r=t):(Cs=r,r=s);}else Cs=r,r=s;else Cs=r,r=s;else Cs=r,r=s;return r}())!==s&&Fi()!==s?((i=function(){var r,t,e,n,u,o,a,i;if(r=Cs,(t=Ws())!==s){for(e=[],n=Cs,(u=Fi())!==s?((o=_i())===s&&(o=null),o!==s&&(a=Fi())!==s&&(i=Ws())!==s?n=u=[u,o,a,i]:(Cs=n,n=s)):(Cs=n,n=s);n!==s;)e.push(n),n=Cs,(u=Fi())!==s?((o=_i())===s&&(o=null),o!==s&&(a=Fi())!==s&&(i=Ws())!==s?n=u=[u,o,a,i]:(Cs=n,n=s)):(Cs=n,n=s);e!==s?(t=ic(t,e),r=t):(Cs=r,r=s);}else Cs=r,r=s;return r}())===s&&(i=null),i!==s&&Fi()!==s?((c=function(){var t,e,n,u;t=Cs,"ignore"===r.substr(Cs,6).toLowerCase()?(e=r.substr(Cs,6),Cs+=6):(e=s,0===hs&&Ss(Ge));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s);return t}())===s&&(c=ya()),c===s&&(c=null),c!==s&&Fi()!==s?((l=Ra())===s&&(l=null),l!==s&&Fi()!==s?((f=gs())===s&&(f=null),f!==s?(b=e,v=n,d=u,C=a,p=i,w=c,E=l,h=f,(L=o)&&L.forEach(r=>Lc.add(`create::${r.db}::${r.table}`)),e={tableList:Array.from(Lc),columnList:fc(Cc),ast:{type:b[0].toLowerCase(),keyword:"table",temporary:v&&v[0].toLowerCase(),if_not_exists:d&&d[0].toLowerCase(),table:L,ignore_replace:w&&w[0].toLowerCase(),as:E&&E[0].toLowerCase(),query_expr:h&&h.ast,create_definitions:C,table_options:p}},t=e):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s);var b,v,d,L,C,p,w,E,h;t===s&&(t=Cs,(e=pa())!==s&&Fi()!==s?((n=wa())===s&&(n=null),n!==s&&Fi()!==s&&_a()!==s&&Fi()!==s?((u=Ea())===s&&(u=null),u!==s&&Fi()!==s&&(o=oo())!==s&&Fi()!==s&&(a=function r(){var t,e;(t=function(){var r,t;r=Cs,Xa()!==s&&Fi()!==s&&(t=oo())!==s?(r={type:"like",table:t}):(Cs=r,r=s);return r}())===s&&(t=Cs,Oi()!==s&&Fi()!==s&&(e=r())!==s&&Fi()!==s&&xi()!==s?((n=e).parentheses=!0,t=n):(Cs=t,t=s));var n;return t}())!==s?(e=function(r,t,e,n,u){return n&&n.forEach(r=>Lc.add(`create::${r.db}::${r.table}`)),{tableList:Array.from(Lc),columnList:fc(Cc),ast:{type:r[0].toLowerCase(),keyword:"table",temporary:t&&t[0].toLowerCase(),if_not_exists:e&&e[0].toLowerCase(),table:n,like:u}}}(e,n,u,o,a),t=e):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s));return t}())===s&&(t=function(){var t,e,n,u,o,a,i,c,l,f,b,v,d,L,C,p,w,E;t=Cs,(e=pa())!==s&&Fi()!==s?((n=Ni())===s&&(n=null),n!==s&&Fi()!==s?("trigger"===r.substr(Cs,7).toLowerCase()?(u=r.substr(Cs,7),Cs+=7):(u=s,0===hs&&Ss(K)),u!==s&&Fi()!==s&&(o=Wo())!==s&&Fi()!==s?("before"===r.substr(Cs,6).toLowerCase()?(a=r.substr(Cs,6),Cs+=6):(a=s,0===hs&&Ss(q)),a===s&&("after"===r.substr(Cs,5).toLowerCase()?(a=r.substr(Cs,5),Cs+=5):(a=s,0===hs&&Ss(Z)),a===s&&("instead of"===r.substr(Cs,10).toLowerCase()?(a=r.substr(Cs,10),Cs+=10):(a=s,0===hs&&Ss(z)))),a!==s&&Fi()!==s&&(i=function(){var r,t,e,n,u,o,a,i;if(r=Cs,(t=Bs())!==s){for(e=[],n=Cs,(u=Fi())!==s&&(o=qa())!==s&&(a=Fi())!==s&&(i=Bs())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);n!==s;)e.push(n),n=Cs,(u=Fi())!==s&&(o=qa())!==s&&(a=Fi())!==s&&(i=Bs())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);e!==s?(t=ic(t,e),r=t):(Cs=r,r=s);}else Cs=r,r=s;return r}())!==s&&Fi()!==s?("on"===r.substr(Cs,2).toLowerCase()?(c=r.substr(Cs,2),Cs+=2):(c=s,0===hs&&Ss(H)),c!==s&&Fi()!==s&&(l=lo())!==s&&Fi()!==s?(f=Cs,(b=Ia())!==s&&(v=Fi())!==s&&(d=lo())!==s?f=b=[b,v,d]:(Cs=f,f=s),f===s&&(f=null),f!==s&&(b=Fi())!==s?((v=function(){var t,e,n,u,o;t=Cs,e=Cs,"not"===r.substr(Cs,3).toLowerCase()?(n=r.substr(Cs,3),Cs+=3):(n=s,0===hs&&Ss(tr));n===s&&(n=null);n!==s&&(u=Fi())!==s?("deferrable"===r.substr(Cs,10).toLowerCase()?(o=r.substr(Cs,10),Cs+=10):(o=s,0===hs&&Ss(er)),o!==s?e=n=[n,u,o]:(Cs=e,e=s)):(Cs=e,e=s);e!==s&&(n=Fi())!==s?("initially immediate"===r.substr(Cs,19).toLowerCase()?(u=r.substr(Cs,19),Cs+=19):(u=s,0===hs&&Ss(nr)),u===s&&("initially deferred"===r.substr(Cs,18).toLowerCase()?(u=r.substr(Cs,18),Cs+=18):(u=s,0===hs&&Ss(ur))),u!==s?(i=u,e={keyword:(a=e)&&a[0]?a[0].toLowerCase()+" deferrable":"deferrable",args:i&&i.toLowerCase()},t=e):(Cs=t,t=s)):(Cs=t,t=s);var a,i;return t}())===s&&(v=null),v!==s&&(d=Fi())!==s?((L=function(){var t,e,n,u;t=Cs,"for"===r.substr(Cs,3).toLowerCase()?(e=r.substr(Cs,3),Cs+=3):(e=s,0===hs&&Ss(sr));e!==s&&Fi()!==s?("each"===r.substr(Cs,4).toLowerCase()?(n=r.substr(Cs,4),Cs+=4):(n=s,0===hs&&Ss(or)),n===s&&(n=null),n!==s&&Fi()!==s?("row"===r.substr(Cs,3).toLowerCase()?(u=r.substr(Cs,3),Cs+=3):(u=s,0===hs&&Ss(ar)),u===s&&("statement"===r.substr(Cs,9).toLowerCase()?(u=r.substr(Cs,9),Cs+=9):(u=s,0===hs&&Ss(ir))),u!==s?(o=e,i=u,e={keyword:(a=n)?`${o.toLowerCase()} ${a.toLowerCase()}`:o.toLowerCase(),args:i.toLowerCase()},t=e):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s);var o,a,i;return t}())===s&&(L=null),L!==s&&Fi()!==s?((C=function(){var r,t;r=Cs,za()!==s&&Fi()!==s&&Oi()!==s&&Fi()!==s&&(t=_o())!==s&&Fi()!==s&&xi()!==s?(r={type:"when",cond:t,parentheses:!0}):(Cs=r,r=s);return r}())===s&&(C=null),C!==s&&Fi()!==s?("execute"===r.substr(Cs,7).toLowerCase()?(p=r.substr(Cs,7),Cs+=7):(p=s,0===hs&&Ss(J)),p!==s&&Fi()!==s?("procedure"===r.substr(Cs,9).toLowerCase()?(w=r.substr(Cs,9),Cs+=9):(w=s,0===hs&&Ss(Q)),w!==s&&Fi()!==s&&(E=Ji())!==s?(h=n,A=u,T=i,m=l,S=f,I=v,N=L,R=C,_=E,e={type:"create",constraint:o,location:(y=a)&&y.toLowerCase(),events:T,table:m,from:S&&S[2],deferrable:I,for_each:N,when:R,execute:{keyword:"execute procedure",expr:_},constraint_type:A&&A.toLowerCase(),keyword:A&&A.toLowerCase(),constraint_kw:h&&h.toLowerCase(),resource:"constraint"},t=e):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s);var h,A,y,T,m,S,I,N,R,_;return t}())===s&&(t=function(){var t,e,n,u,o,a,f,b,v,d,L,C,p,w;t=Cs,(e=pa())!==s&&Fi()!==s?("extension"===r.substr(Cs,9).toLowerCase()?(n=r.substr(Cs,9),Cs+=9):(n=s,0===hs&&Ss(i)),n!==s&&Fi()!==s?((u=Ea())===s&&(u=null),u!==s&&Fi()!==s?((o=Wo())===s&&(o=ea()),o!==s&&Fi()!==s?((a=ka())===s&&(a=null),a!==s&&Fi()!==s?(f=Cs,"schema"===r.substr(Cs,6).toLowerCase()?(b=r.substr(Cs,6),Cs+=6):(b=s,0===hs&&Ss(c)),b!==s&&(v=Fi())!==s&&(d=Wo())!==s?f=b=[b,v,d]:(Cs=f,f=s),f===s&&(f=ea()),f===s&&(f=null),f!==s&&(b=Fi())!==s?(v=Cs,"version"===r.substr(Cs,7).toLowerCase()?(d=r.substr(Cs,7),Cs+=7):(d=s,0===hs&&Ss(l)),d!==s&&(L=Fi())!==s?((C=Wo())===s&&(C=ea()),C!==s?v=d=[d,L,C]:(Cs=v,v=s)):(Cs=v,v=s),v===s&&(v=null),v!==s&&(d=Fi())!==s?(L=Cs,(C=Ia())!==s&&(p=Fi())!==s?((w=Wo())===s&&(w=ea()),w!==s?L=C=[C,p,w]:(Cs=L,L=s)):(Cs=L,L=s),L===s&&(L=null),L!==s?(e=function(r,t,e,n,u,s,o,a){return {type:"create",keyword:t.toLowerCase(),if_not_exists:e&&e[0].toLowerCase(),extension:vc(n),with:u&&u[0].toLowerCase(),schema:vc(s&&s[2].toLowerCase()),version:vc(o&&o[2]),from:vc(a&&a[2])}}(0,n,u,o,a,f,v,L),t=e):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s);return t}())===s&&(t=function(){var t,e,n,u,o,a,i,c,l,f,b,v,d,L,C,p,w,E;t=Cs,(e=pa())!==s&&Fi()!==s?((n=Si())===s&&(n=null),n!==s&&Fi()!==s&&(u=Ti())!==s&&Fi()!==s?((o=function(){var t,e,n,u;t=Cs,"concurrently"===r.substr(Cs,12).toLowerCase()?(e=r.substr(Cs,12),Cs+=12):(e=s,0===hs&&Ss(Xu));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="CONCURRENTLY"):(Cs=t,t=s)):(Cs=t,t=s);return t}())===s&&(o=null),o!==s&&Fi()!==s?((a=Yo())===s&&(a=null),a!==s&&Fi()!==s&&(i=ga())!==s&&Fi()!==s&&(c=lo())!==s&&Fi()!==s?((l=no())===s&&(l=null),l!==s&&Fi()!==s&&Oi()!==s&&Fi()!==s&&(f=function(){var r,t,e,n,u,o,a,i;if(r=Cs,(t=Os())!==s){for(e=[],n=Cs,(u=Fi())!==s&&(o=_i())!==s&&(a=Fi())!==s&&(i=Os())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);n!==s;)e.push(n),n=Cs,(u=Fi())!==s&&(o=_i())!==s&&(a=Fi())!==s&&(i=Os())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);e!==s?(t=ic(t,e),r=t):(Cs=r,r=s);}else Cs=r,r=s;return r}())!==s&&Fi()!==s&&xi()!==s&&Fi()!==s?(b=Cs,(v=ka())!==s&&(d=Fi())!==s&&(L=Oi())!==s&&(C=Fi())!==s&&(p=function(){var r,t,e,n,u,o,a,i;if(r=Cs,(t=so())!==s){for(e=[],n=Cs,(u=Fi())!==s&&(o=_i())!==s&&(a=Fi())!==s&&(i=so())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);n!==s;)e.push(n),n=Cs,(u=Fi())!==s&&(o=_i())!==s&&(a=Fi())!==s&&(i=so())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);e!==s?(t=ic(t,e),r=t):(Cs=r,r=s);}else Cs=r,r=s;return r}())!==s&&(w=Fi())!==s&&(E=xi())!==s?b=v=[v,d,L,C,p,w,E]:(Cs=b,b=s),b===s&&(b=null),b!==s&&(v=Fi())!==s?(d=Cs,(L=function(){var t,e,n,u;t=Cs,"tablespace"===r.substr(Cs,10).toLowerCase()?(e=r.substr(Cs,10),Cs+=10):(e=s,0===hs&&Ss(Ve));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="TABLESPACE"):(Cs=t,t=s)):(Cs=t,t=s);return t}())!==s&&(C=Fi())!==s&&(p=Wo())!==s?d=L=[L,C,p]:(Cs=d,d=s),d===s&&(d=null),d!==s&&(L=Fi())!==s?((C=bo())===s&&(C=null),C!==s&&(p=Fi())!==s?(h=e,A=n,y=u,T=o,m=a,S=i,I=c,N=l,R=f,_=b,g=d,O=C,e={tableList:Array.from(Lc),columnList:fc(Cc),ast:{type:h[0].toLowerCase(),index_type:A&&A.toLowerCase(),keyword:y.toLowerCase(),concurrently:T&&T.toLowerCase(),index:m,on_kw:S[0].toLowerCase(),table:I,index_using:N,index_columns:R,with:_&&_[4],with_before_where:!0,tablespace:g&&{type:"origin",value:g[2]},where:O}},t=e):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s);var h,A,y,T,m,S,I,N,R,_,g,O;return t}())===s&&(t=function(){var t,e,n,u,o,a;t=Cs,(e=pa())!==s&&Fi()!==s?((n=function(){var t,e,n,u;t=Cs,"database"===r.substr(Cs,8).toLowerCase()?(e=r.substr(Cs,8),Cs+=8):(e=s,0===hs&&Ss(Ke));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="DATABASE"):(Cs=t,t=s)):(Cs=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=Cs,"scheme"===r.substr(Cs,6).toLowerCase()?(e=r.substr(Cs,6),Cs+=6):(e=s,0===hs&&Ss(qe));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="SCHEME"):(Cs=t,t=s)):(Cs=t,t=s);return t}()),n!==s&&Fi()!==s?((u=Ea())===s&&(u=null),u!==s&&Fi()!==s&&(o=Wo())!==s&&Fi()!==s?((a=function(){var r,t,e,n,u,o;if(r=Cs,(t=Xs())!==s){for(e=[],n=Cs,(u=Fi())!==s&&(o=Xs())!==s?n=u=[u,o]:(Cs=n,n=s);n!==s;)e.push(n),n=Cs,(u=Fi())!==s&&(o=Xs())!==s?n=u=[u,o]:(Cs=n,n=s);e!==s?(t=b(t,e),r=t):(Cs=r,r=s);}else Cs=r,r=s;return r}())===s&&(a=null),a!==s?(i=e,c=u,l=o,f=a,e={tableList:Array.from(Lc),columnList:fc(Cc),ast:{type:i[0].toLowerCase(),keyword:"database",if_not_exists:c&&c[0].toLowerCase(),database:l,create_definitions:f}},t=e):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s);var i,c,l,f;return t}());return t}())===s&&(t=function(){var r,t,e,n;r=Cs,(t=Li())!==s&&Fi()!==s?((e=_a())===s&&(e=null),e!==s&&Fi()!==s&&(n=oo())!==s?(u=t,o=e,(a=n)&&a.forEach(r=>Lc.add(`${u}::${r.db}::${r.table}`)),t={tableList:Array.from(Lc),columnList:fc(Cc),ast:{type:u.toLowerCase(),keyword:o&&o.toLowerCase()||"table",name:a}},r=t):(Cs=r,r=s)):(Cs=r,r=s);var u,o,a;return r}())===s&&(t=function(){var r,t,e;r=Cs,(t=Ta())!==s&&Fi()!==s&&_a()!==s&&Fi()!==s&&(e=function(){var r,t,e,n,u,o,a,i;if(r=Cs,(t=eo())!==s){for(e=[],n=Cs,(u=Fi())!==s&&(o=_i())!==s&&(a=Fi())!==s&&(i=eo())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);n!==s;)e.push(n),n=Cs,(u=Fi())!==s&&(o=_i())!==s&&(a=Fi())!==s&&(i=eo())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);e!==s?(t=ic(t,e),r=t):(Cs=r,r=s);}else Cs=r,r=s;return r}())!==s?((n=e).forEach(r=>r.forEach(r=>r.table&&Lc.add(`rename::${r.db}::${r.table}`))),t={tableList:Array.from(Lc),columnList:fc(Cc),ast:{type:"rename",table:n}},r=t):(Cs=r,r=s);var n;return r}())===s&&(t=function(){var t,e,n;t=Cs,(e=function(){var t,e,n,u;t=Cs,"call"===r.substr(Cs,4).toLowerCase()?(e=r.substr(Cs,4),Cs+=4):(e=s,0===hs&&Ss(Mn));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="CALL"):(Cs=t,t=s)):(Cs=t,t=s);return t}())!==s&&Fi()!==s&&(n=Ji())!==s?(u=n,e={tableList:Array.from(Lc),columnList:fc(Cc),ast:{type:"call",expr:u}},t=e):(Cs=t,t=s);var u;return t}())===s&&(t=function(){var t,e,n;t=Cs,(e=function(){var t,e,n,u;t=Cs,"use"===r.substr(Cs,3).toLowerCase()?(e=r.substr(Cs,3),Cs+=3):(e=s,0===hs&&Ss(ge));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s);return t}())!==s&&Fi()!==s&&(n=Yo())!==s?(u=n,Lc.add(`use::${u}::null`),e={tableList:Array.from(Lc),columnList:fc(Cc),ast:{type:"use",db:u}},t=e):(Cs=t,t=s);var u;return t}())===s&&(t=function(){var t,e,n,u;t=Cs,(e=function(){var t,e,n,u;t=Cs,"alter"===r.substr(Cs,5).toLowerCase()?(e=r.substr(Cs,5),Cs+=5):(e=s,0===hs&&Ss(Oe));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s);return t}())!==s&&Fi()!==s&&_a()!==s&&Fi()!==s&&(n=oo())!==s&&Fi()!==s&&(u=function(){var r,t,e,n,u,o,a,i;if(r=Cs,(t=ks())!==s){for(e=[],n=Cs,(u=Fi())!==s&&(o=_i())!==s&&(a=Fi())!==s&&(i=ks())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);n!==s;)e.push(n),n=Cs,(u=Fi())!==s&&(o=_i())!==s&&(a=Fi())!==s&&(i=ks())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);e!==s?(t=ic(t,e),r=t):(Cs=r,r=s);}else Cs=r,r=s;return r}())!==s?(a=u,(o=n)&&o.length>0&&o.forEach(r=>Lc.add(`alter::${r.db}::${r.table}`)),e={tableList:Array.from(Lc),columnList:fc(Cc),ast:{type:"alter",table:o,expr:a}},t=e):(Cs=t,t=s);var o,a;return t}())===s&&(t=function(){var t,e,n,u;t=Cs,(e=Na())!==s&&Fi()!==s?((n=function(){var t,e,n,u;t=Cs,"global"===r.substr(Cs,6).toLowerCase()?(e=r.substr(Cs,6),Cs+=6):(e=s,0===hs&&Ss(Nu));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="GLOBAL"):(Cs=t,t=s)):(Cs=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=Cs,"session"===r.substr(Cs,7).toLowerCase()?(e=r.substr(Cs,7),Cs+=7):(e=s,0===hs&&Ss(Ru));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="SESSION"):(Cs=t,t=s)):(Cs=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=Cs,"local"===r.substr(Cs,5).toLowerCase()?(e=r.substr(Cs,5),Cs+=5):(e=s,0===hs&&Ss(_u));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="LOCAL"):(Cs=t,t=s)):(Cs=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=Cs,"persist"===r.substr(Cs,7).toLowerCase()?(e=r.substr(Cs,7),Cs+=7):(e=s,0===hs&&Ss(gu));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="PERSIST"):(Cs=t,t=s)):(Cs=t,t=s);return t}())===s&&(n=function(){var t,e,n,u;t=Cs,"persist_only"===r.substr(Cs,12).toLowerCase()?(e=r.substr(Cs,12),Cs+=12):(e=s,0===hs&&Ss(Ou));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="PERSIST_ONLY"):(Cs=t,t=s)):(Cs=t,t=s);return t}()),n===s&&(n=null),n!==s&&Fi()!==s&&(u=Wi())!==s?(o=n,(a=u).keyword=o,e={tableList:Array.from(Lc),columnList:fc(Cc),ast:{type:"set",expr:a}},t=e):(Cs=t,t=s)):(Cs=t,t=s);var o,a;return t}())===s&&(t=function(){var t,e,n,u,o,a;t=Cs,(e=function(){var t,e,n,u;t=Cs,"lock"===r.substr(Cs,4).toLowerCase()?(e=r.substr(Cs,4),Cs+=4):(e=s,0===hs&&Ss(O));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s);return t}())!==s&&Fi()!==s?((n=_a())===s&&(n=null),n!==s&&Fi()!==s&&(u=oo())!==s&&Fi()!==s?((o=function(){var t,e,n,u;t=Cs,"in"===r.substr(Cs,2).toLowerCase()?(e=r.substr(Cs,2),Cs+=2):(e=s,0===hs&&Ss(mr));e!==s&&Fi()!==s?("access share"===r.substr(Cs,12).toLowerCase()?(n=r.substr(Cs,12),Cs+=12):(n=s,0===hs&&Ss(Sr)),n===s&&("row share"===r.substr(Cs,9).toLowerCase()?(n=r.substr(Cs,9),Cs+=9):(n=s,0===hs&&Ss(Ir)),n===s&&("row exclusive"===r.substr(Cs,13).toLowerCase()?(n=r.substr(Cs,13),Cs+=13):(n=s,0===hs&&Ss(Nr)),n===s&&("share update exclusive"===r.substr(Cs,22).toLowerCase()?(n=r.substr(Cs,22),Cs+=22):(n=s,0===hs&&Ss(Rr)),n===s&&("share row exclusive"===r.substr(Cs,19).toLowerCase()?(n=r.substr(Cs,19),Cs+=19):(n=s,0===hs&&Ss(_r)),n===s&&("exclusive"===r.substr(Cs,9).toLowerCase()?(n=r.substr(Cs,9),Cs+=9):(n=s,0===hs&&Ss(M)),n===s&&("access exclusive"===r.substr(Cs,16).toLowerCase()?(n=r.substr(Cs,16),Cs+=16):(n=s,0===hs&&Ss(gr)),n===s&&("share"===r.substr(Cs,5).toLowerCase()?(n=r.substr(Cs,5),Cs+=5):(n=s,0===hs&&Ss(Or))))))))),n!==s&&Fi()!==s?("mode"===r.substr(Cs,4).toLowerCase()?(u=r.substr(Cs,4),Cs+=4):(u=s,0===hs&&Ss(xr)),u!==s?(e={mode:`in ${n.toLowerCase()} mode`},t=e):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s);return t}())===s&&(o=null),o!==s&&Fi()!==s?("nowait"===r.substr(Cs,6).toLowerCase()?(a=r.substr(Cs,6),Cs+=6):(a=s,0===hs&&Ss(Ur)),a===s&&(a=null),a!==s?(i=n,l=o,f=a,(c=u)&&c.forEach(r=>Lc.add(`lock::${r.db}::${r.table}`)),e={tableList:Array.from(Lc),columnList:fc(Cc),ast:{type:"lock",keyword:i&&i.toLowerCase(),tables:c.map(r=>({table:r})),lock_mode:l,nowait:f}},t=e):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s);var i,c,l,f;return t}()),t}function _s(){var r;return (r=gs())===s&&(r=function(){var r,t,e,n,u,o;r=Cs,(t=Ca())!==s&&Fi()!==s&&(e=oo())!==s&&Fi()!==s&&Na()!==s&&Fi()!==s&&(n=function(){var r,t,e,n,u,o,a,i;if(r=Cs,(t=Eo())!==s){for(e=[],n=Cs,(u=Fi())!==s&&(o=_i())!==s&&(a=Fi())!==s&&(i=Eo())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);n!==s;)e.push(n),n=Cs,(u=Fi())!==s&&(o=_i())!==s&&(a=Fi())!==s&&(i=Eo())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);e!==s?(t=ic(t,e),r=t):(Cs=r,r=s);}else Cs=r,r=s;return r}())!==s&&Fi()!==s?((u=bo())===s&&(u=null),u!==s&&Fi()!==s?((o=ho())===s&&(o=null),o!==s?(i=n,c=u,l=o,(a=e)&&a.forEach(r=>{const{db:t,as:e,table:n}=r;Lc.add(`update::${t}::${n}`);}),i&&i.forEach(r=>Cc.add(`update::${r.table}::${r.column}`)),t={tableList:Array.from(Lc),columnList:fc(Cc),ast:{type:"update",table:a,set:i,where:c,returning:l}},r=t):(Cs=r,r=s)):(Cs=r,r=s)):(Cs=r,r=s);var a,i,c,l;return r}())===s&&(r=function(){var r,t,e,n,u,o,a,i;r=Cs,(t=To())!==s&&Fi()!==s?((e=Sa())===s&&(e=null),e!==s&&Fi()!==s&&(n=lo())!==s&&Fi()!==s?((u=yo())===s&&(u=null),u!==s&&Fi()!==s&&Oi()!==s&&Fi()!==s&&(o=function(){var r,t,e,n,u,o,a,i;if(r=Cs,(t=Xo())!==s){for(e=[],n=Cs,(u=Fi())!==s&&(o=_i())!==s&&(a=Fi())!==s&&(i=Xo())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);n!==s;)e.push(n),n=Cs,(u=Fi())!==s&&(o=_i())!==s&&(a=Fi())!==s&&(i=Xo())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);e!==s?(t=kr(t,e),r=t):(Cs=r,r=s);}else Cs=r,r=s;return r}())!==s&&Fi()!==s&&xi()!==s&&Fi()!==s&&(a=Ao())!==s&&Fi()!==s?((i=ho())===s&&(i=null),i!==s?(t=function(r,t,e,n,u,s){if(t&&(Lc.add(`insert::${t.db}::${t.table}`),t.as=null),n){let r=t&&t.table||null;Array.isArray(u)&&u.forEach((r,t)=>{if(r.value.length!=n.length)throw new Error("Error: column count doesn't match value count at row "+(t+1))}),n.forEach(t=>Cc.add(`insert::${r}::${t}`));}return {tableList:Array.from(Lc),columnList:fc(Cc),ast:{type:r,table:[t],columns:n,values:u,partition:e,returning:s}}}(t,n,u,o,a,i),r=t):(Cs=r,r=s)):(Cs=r,r=s)):(Cs=r,r=s)):(Cs=r,r=s);return r}())===s&&(r=function(){var r,t,e,n,u,o;r=Cs,(t=To())!==s&&Fi()!==s&&Sa()!==s&&Fi()!==s&&(e=lo())!==s&&Fi()!==s?((n=yo())===s&&(n=null),n!==s&&Fi()!==s&&(u=Ao())!==s&&Fi()!==s?((o=ho())===s&&(o=null),o!==s?(a=t,c=n,l=u,f=o,(i=e)&&(Lc.add(`insert::${i.db}::${i.table}`),Cc.add(`insert::${i.table}::(.*)`),i.as=null),t={tableList:Array.from(Lc),columnList:fc(Cc),ast:{type:a,table:[i],columns:null,values:l,partition:c,returning:f}},r=t):(Cs=r,r=s)):(Cs=r,r=s)):(Cs=r,r=s);var a,i,c,l,f;return r}())===s&&(r=function(){var r,t,e,n,u;r=Cs,(t=ha())!==s&&Fi()!==s?((e=oo())===s&&(e=null),e!==s&&Fi()!==s&&(n=to())!==s&&Fi()!==s?((u=bo())===s&&(u=null),u!==s?(t=function(r,t,e){if(t&&t.forEach(r=>{r.table&&Lc.add(`delete::${r.db}::${r.table}`),Cc.add(`delete::${r.table}::(.*)`);}),null===r&&1===t.length){const e=t[0];r=[{db:e.db,table:e.table,as:e.as,addition:!0}];}return {tableList:Array.from(Lc),columnList:fc(Cc),ast:{type:"delete",table:r,from:t,where:e}}}(e,n,u),r=t):(Cs=r,r=s)):(Cs=r,r=s)):(Cs=r,r=s);return r}())===s&&(r=Rs())===s&&(r=function(){var r,t;r=[],t=Xi();for(;t!==s;)r.push(t),t=Xi();return r}()),r}function gs(){var r,t,e,n,u,o,a,i,c,l;if(r=Cs,(t=Vs())!==s){for(e=[],n=Cs,(u=Fi())!==s&&(o=Ua())!==s&&(a=Fi())!==s?((i=Ha())===s&&(i=null),i!==s&&(c=Fi())!==s&&(l=Vs())!==s?n=u=[u,o,a,i,c,l]:(Cs=n,n=s)):(Cs=n,n=s);n!==s;)e.push(n),n=Cs,(u=Fi())!==s&&(o=Ua())!==s&&(a=Fi())!==s?((i=Ha())===s&&(i=null),i!==s&&(c=Fi())!==s&&(l=Vs())!==s?n=u=[u,o,a,i,c,l]:(Cs=n,n=s)):(Cs=n,n=s);e!==s&&(n=Fi())!==s?((u=Lo())===s&&(u=null),u!==s&&(o=Fi())!==s?((a=wo())===s&&(a=null),a!==s?(r=t=function(r,t,e,n){let u=r;for(let r=0;r<t.length;r++)u._next=t[r][5],u.union=t[r][3]?"union all":"union",u=u._next;return e&&(r._orderby=e),n&&(r._limit=n),{tableList:Array.from(Lc),columnList:fc(Cc),ast:r}}(t,e,u,a)):(Cs=r,r=s)):(Cs=r,r=s)):(Cs=r,r=s);}else Cs=r,r=s;return r}function Os(){var t,e,n,u,o,a,i,c,l,f,b;return t=Cs,(e=_o())!==s&&Fi()!==s?((n=Ms())===s&&(n=null),n!==s&&Fi()!==s?((u=Yo())===s&&(u=null),u!==s&&Fi()!==s?((o=Fa())===s&&(o=Pa()),o===s&&(o=null),o!==s&&Fi()!==s?(a=Cs,"nulls"===r.substr(Cs,5).toLowerCase()?(i=r.substr(Cs,5),Cs+=5):(i=s,0===hs&&Ss(v)),i!==s&&(c=Fi())!==s?("first"===r.substr(Cs,5).toLowerCase()?(l=r.substr(Cs,5),Cs+=5):(l=s,0===hs&&Ss(d)),l===s&&("last"===r.substr(Cs,4).toLowerCase()?(l=r.substr(Cs,4),Cs+=4):(l=s,0===hs&&Ss(L))),l!==s?a=i=[i,c,l]:(Cs=a,a=s)):(Cs=a,a=s),a===s&&(a=null),a!==s?(b=a,t=e={column:e,collate:n,opclass:u,order:(f=o)&&f.toLowerCase()||"asc",nulls:b&&`${b[0].toLowerCase()} ${b[2].toLowerCase()}`}):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s),t}function xs(){var t;return (t=Us())===s&&(t=Ps())===s&&(t=Hs())===s&&(t=function(){var t;(t=function(){var t,e,n,u,o,a;t=Cs,(e=Gs())===s&&(e=null);e!==s&&Fi()!==s?("primary key"===r.substr(Cs,11).toLowerCase()?(n=r.substr(Cs,11),Cs+=11):(n=s,0===hs&&Ss(D)),n!==s&&Fi()!==s?((u=no())===s&&(u=null),u!==s&&Fi()!==s&&(o=Zs())!==s&&Fi()!==s?((a=uo())===s&&(a=null),a!==s?(c=n,l=u,f=o,b=a,e={constraint:(i=e)&&i.constraint,definition:f,constraint_type:c.toLowerCase(),keyword:i&&i.keyword,index_type:l,resource:"constraint",index_options:b},t=e):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s);var i,c,l,f,b;return t}())===s&&(t=function(){var r,t,e,n,u,o,a,i;r=Cs,(t=Gs())===s&&(t=null);t!==s&&Fi()!==s&&(e=Si())!==s&&Fi()!==s?((n=Ti())===s&&(n=mi()),n===s&&(n=null),n!==s&&Fi()!==s?((u=Xo())===s&&(u=null),u!==s&&Fi()!==s?((o=no())===s&&(o=null),o!==s&&Fi()!==s&&(a=Zs())!==s&&Fi()!==s?((i=uo())===s&&(i=null),i!==s?(l=e,f=n,b=u,v=o,d=a,L=i,t={constraint:(c=t)&&c.constraint,definition:d,constraint_type:f&&`${l.toLowerCase()} ${f.toLowerCase()}`||l.toLowerCase(),keyword:c&&c.keyword,index_type:v,index:b,resource:"constraint",index_options:L},r=t):(Cs=r,r=s)):(Cs=r,r=s)):(Cs=r,r=s)):(Cs=r,r=s)):(Cs=r,r=s);var c,l,f,b,v,d,L;return r}())===s&&(t=function(){var t,e,n,u,o,a;t=Cs,(e=Gs())===s&&(e=null);e!==s&&Fi()!==s?("foreign key"===r.substr(Cs,11).toLowerCase()?(n=r.substr(Cs,11),Cs+=11):(n=s,0===hs&&Ss(k)),n!==s&&Fi()!==s?((u=Xo())===s&&(u=null),u!==s&&Fi()!==s&&(o=Zs())!==s&&Fi()!==s?((a=js())===s&&(a=null),a!==s?(c=n,l=u,f=o,b=a,e={constraint:(i=e)&&i.constraint,definition:f,constraint_type:c,keyword:i&&i.keyword,index:l,resource:"constraint",reference_definition:b},t=e):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s);var i,c,l,f,b;return t}());return t}()),t}function Us(){var t,e,n,u,o,a,i,c,l,f,b,v,d,L,N,R,_,g,O,x,U,M,D;return t=Cs,(e=jo())!==s&&Fi()!==s&&(n=ec())!==s&&Fi()!==s?((u=function(){var r,t,e;r=Cs,(t=ta())===s&&(t=ra());t!==s&&Fi()!==s?((e=Ds())===s&&(e=null),e!==s?(u=e,(n=t)&&!n.value&&(n.value="null"),r=t={default_val:u,nullable:n}):(Cs=r,r=s)):(Cs=r,r=s);var n,u;r===s&&(r=Cs,(t=Ds())!==s&&Fi()!==s?((e=ta())===s&&(e=ra()),e===s&&(e=null),e!==s?(t=function(r,t){return t&&!t.value&&(t.value="null"),{default_val:r,nullable:t}}(t,e),r=t):(Cs=r,r=s)):(Cs=r,r=s));return r}())===s&&(u=null),u!==s&&Fi()!==s?("auto_increment"===r.substr(Cs,14).toLowerCase()?(o=r.substr(Cs,14),Cs+=14):(o=s,0===hs&&Ss(C)),o===s&&(o=null),o!==s&&Fi()!==s?("unique"===r.substr(Cs,6).toLowerCase()?(a=r.substr(Cs,6),Cs+=6):(a=s,0===hs&&Ss(p)),a===s&&(a=Cs,"primary"===r.substr(Cs,7).toLowerCase()?(i=r.substr(Cs,7),Cs+=7):(i=s,0===hs&&Ss(w)),i!==s&&(c=Fi())!==s?("key"===r.substr(Cs,3).toLowerCase()?(l=r.substr(Cs,3),Cs+=3):(l=s,0===hs&&Ss(E)),l!==s?a=i=[i,c,l]:(Cs=a,a=s)):(Cs=a,a=s)),a===s&&(a=null),a!==s&&(i=Fi())!==s?((c=Gi())===s&&(c=null),c!==s&&(l=Fi())!==s?((f=Ms())===s&&(f=null),f!==s&&Fi()!==s?((b=function(){var t,e,n;t=Cs,"column_format"===r.substr(Cs,13).toLowerCase()?(e=r.substr(Cs,13),Cs+=13):(e=s,0===hs&&Ss(h));e!==s&&Fi()!==s?("fixed"===r.substr(Cs,5).toLowerCase()?(n=r.substr(Cs,5),Cs+=5):(n=s,0===hs&&Ss(A)),n===s&&("dynamic"===r.substr(Cs,7).toLowerCase()?(n=r.substr(Cs,7),Cs+=7):(n=s,0===hs&&Ss(y)),n===s&&("default"===r.substr(Cs,7).toLowerCase()?(n=r.substr(Cs,7),Cs+=7):(n=s,0===hs&&Ss(T)))),n!==s?(e=function(r,t){return {type:"column_format",value:t.toLowerCase()}}(0,n),t=e):(Cs=t,t=s)):(Cs=t,t=s);return t}())===s&&(b=null),b!==s&&Fi()!==s?((v=function(){var t,e,n;t=Cs,"storage"===r.substr(Cs,7).toLowerCase()?(e=r.substr(Cs,7),Cs+=7):(e=s,0===hs&&Ss(m));e!==s&&Fi()!==s?("disk"===r.substr(Cs,4).toLowerCase()?(n=r.substr(Cs,4),Cs+=4):(n=s,0===hs&&Ss(S)),n===s&&("memory"===r.substr(Cs,6).toLowerCase()?(n=r.substr(Cs,6),Cs+=6):(n=s,0===hs&&Ss(I))),n!==s?(e={type:"storage",value:n.toLowerCase()},t=e):(Cs=t,t=s)):(Cs=t,t=s);return t}())===s&&(v=null),v!==s&&Fi()!==s?((d=js())===s&&(d=null),d!==s?(L=e,N=n,R=u,_=o,g=a,O=c,x=f,U=b,M=v,D=d,Cc.add(`create::${L.table}::${L.column}`),t=e={column:L,definition:N,nullable:R&&R.nullable,default_val:R&&R.default_val,auto_increment:_&&_.toLowerCase(),unique_or_primary:Array.isArray(g)?`${g[0].toLowerCase()} ${g[2].toLowerCase()}`:g,comment:O,collate:x,column_format:U,storage:M,reference_definition:D,resource:"column"}):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s),t}function Ms(){var t,e;return t=Cs,function(){var t,e,n,u;t=Cs,"collate"===r.substr(Cs,7).toLowerCase()?(e=r.substr(Cs,7),Cs+=7):(e=s,0===hs&&Ss(br));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="COLLATE"):(Cs=t,t=s)):(Cs=t,t=s);return t}()!==s&&Fi()!==s&&(e=Yo())!==s?(t={type:"collate",value:e}):(Cs=t,t=s),t}function Ds(){var r,t;return r=Cs,va()!==s&&Fi()!==s?((t=Qo())===s&&(t=_o()),t!==s?(r={type:"default",value:t}):(Cs=r,r=s)):(Cs=r,r=s),r}function ks(){var r;return (r=function(){var r,t,e,n;r=Cs,(t=Ai())!==s&&Fi()!==s?((e=yi())===s&&(e=null),e!==s&&Fi()!==s&&(n=Us())!==s?(u=e,o=n,t={action:"add",...o,keyword:u,resource:"column",type:"alter"},r=t):(Cs=r,r=s)):(Cs=r,r=s);var u,o;return r}())===s&&(r=function(){var r,t,e;r=Cs,La()!==s&&Fi()!==s?((t=yi())===s&&(t=null),t!==s&&Fi()!==s&&(e=jo())!==s?(r={action:"drop",column:e,keyword:t,resource:"column",type:"alter"}):(Cs=r,r=s)):(Cs=r,r=s);return r}())===s&&(r=function(){var r,t,e;r=Cs,(t=Ai())!==s&&Fi()!==s&&(e=Ps())!==s?(n=e,t={action:"add",type:"alter",...n},r=t):(Cs=r,r=s);var n;return r}())===s&&(r=function(){var r,t,e;r=Cs,(t=Ai())!==s&&Fi()!==s&&(e=Hs())!==s?(n=e,t={action:"add",type:"alter",...n},r=t):(Cs=r,r=s);var n;return r}())===s&&(r=function(){var r,t,e,n;r=Cs,(t=Ta())!==s&&Fi()!==s?((e=da())===s&&(e=Ra()),e===s&&(e=null),e!==s&&Fi()!==s&&(n=Yo())!==s?(o=n,t={action:"rename",type:"alter",resource:"table",keyword:(u=e)&&u[0].toLowerCase(),table:o},r=t):(Cs=r,r=s)):(Cs=r,r=s);var u,o;return r}())===s&&(r=$s())===s&&(r=Fs()),r}function $s(){var t,e,n,u;return t=Cs,"algorithm"===r.substr(Cs,9).toLowerCase()?(e=r.substr(Cs,9),Cs+=9):(e=s,0===hs&&Ss(N)),e!==s&&Fi()!==s?((n=hi())===s&&(n=null),n!==s&&Fi()!==s?("default"===r.substr(Cs,7).toLowerCase()?(u=r.substr(Cs,7),Cs+=7):(u=s,0===hs&&Ss(T)),u===s&&("instant"===r.substr(Cs,7).toLowerCase()?(u=r.substr(Cs,7),Cs+=7):(u=s,0===hs&&Ss(R)),u===s&&("inplace"===r.substr(Cs,7).toLowerCase()?(u=r.substr(Cs,7),Cs+=7):(u=s,0===hs&&Ss(_)),u===s&&("copy"===r.substr(Cs,4).toLowerCase()?(u=r.substr(Cs,4),Cs+=4):(u=s,0===hs&&Ss(g))))),u!==s?(t=e={type:"alter",keyword:"algorithm",resource:"algorithm",symbol:n,algorithm:u}):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s),t}function Fs(){var t,e,n,u;return t=Cs,"lock"===r.substr(Cs,4).toLowerCase()?(e=r.substr(Cs,4),Cs+=4):(e=s,0===hs&&Ss(O)),e!==s&&Fi()!==s?((n=hi())===s&&(n=null),n!==s&&Fi()!==s?("default"===r.substr(Cs,7).toLowerCase()?(u=r.substr(Cs,7),Cs+=7):(u=s,0===hs&&Ss(T)),u===s&&("none"===r.substr(Cs,4).toLowerCase()?(u=r.substr(Cs,4),Cs+=4):(u=s,0===hs&&Ss(x)),u===s&&("shared"===r.substr(Cs,6).toLowerCase()?(u=r.substr(Cs,6),Cs+=6):(u=s,0===hs&&Ss(U)),u===s&&("exclusive"===r.substr(Cs,9).toLowerCase()?(u=r.substr(Cs,9),Cs+=9):(u=s,0===hs&&Ss(M))))),u!==s?(t=e={type:"alter",keyword:"lock",resource:"lock",symbol:n,lock:u}):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s),t}function Ps(){var r,t,e,n,u,o,a,i;return r=Cs,(t=Ti())===s&&(t=mi()),t!==s&&Fi()!==s?((e=Xo())===s&&(e=null),e!==s&&Fi()!==s?((n=no())===s&&(n=null),n!==s&&Fi()!==s&&(u=Zs())!==s&&Fi()!==s?((o=uo())===s&&(o=null),o!==s&&Fi()!==s?(a=n,i=o,r=t={index:e,definition:u,keyword:t.toLowerCase(),index_type:a,resource:"index",index_options:i}):(Cs=r,r=s)):(Cs=r,r=s)):(Cs=r,r=s)):(Cs=r,r=s),r}function Hs(){var t,e,n,u,o,a,i,c,l;return t=Cs,(e=function(){var t,e,n,u;t=Cs,"fulltext"===r.substr(Cs,8).toLowerCase()?(e=r.substr(Cs,8),Cs+=8):(e=s,0===hs&&Ss(Gu));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="FULLTEXT"):(Cs=t,t=s)):(Cs=t,t=s);return t}())===s&&(e=function(){var t,e,n,u;t=Cs,"spatial"===r.substr(Cs,7).toLowerCase()?(e=r.substr(Cs,7),Cs+=7):(e=s,0===hs&&Ss(ju));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="SPATIAL"):(Cs=t,t=s)):(Cs=t,t=s);return t}()),e!==s&&Fi()!==s?((n=Ti())===s&&(n=mi()),n===s&&(n=null),n!==s&&Fi()!==s?((u=Xo())===s&&(u=null),u!==s&&Fi()!==s&&(o=Zs())!==s&&Fi()!==s?((a=uo())===s&&(a=null),a!==s&&Fi()!==s?(i=e,l=a,t=e={index:u,definition:o,keyword:(c=n)&&`${i.toLowerCase()} ${c.toLowerCase()}`||i.toLowerCase(),index_options:l,resource:"index"}):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s),t}function Gs(){var r,t,e,n;return r=Cs,(t=Ni())!==s&&Fi()!==s?((e=Yo())===s&&(e=null),e!==s?(n=e,r=t={keyword:t.toLowerCase(),constraint:n}):(Cs=r,r=s)):(Cs=r,r=s),r}function js(){var t,e,n,u,o,a,i,c,l,f;return t=Cs,(e=function(){var t,e,n,u;t=Cs,"references"===r.substr(Cs,10).toLowerCase()?(e=r.substr(Cs,10),Cs+=10):(e=s,0===hs&&Ss(Wu));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="REFERENCES"):(Cs=t,t=s)):(Cs=t,t=s);return t}())!==s&&Fi()!==s&&(n=oo())!==s&&Fi()!==s&&(u=Zs())!==s&&Fi()!==s?("match full"===r.substr(Cs,10).toLowerCase()?(o=r.substr(Cs,10),Cs+=10):(o=s,0===hs&&Ss($)),o===s&&("match partial"===r.substr(Cs,13).toLowerCase()?(o=r.substr(Cs,13),Cs+=13):(o=s,0===hs&&Ss(F)),o===s&&("match simple"===r.substr(Cs,12).toLowerCase()?(o=r.substr(Cs,12),Cs+=12):(o=s,0===hs&&Ss(P)))),o===s&&(o=null),o!==s&&Fi()!==s?((a=Ys())===s&&(a=null),a!==s&&Fi()!==s?((i=Ys())===s&&(i=null),i!==s?(c=o,l=a,f=i,t=e={definition:u,table:n,keyword:e.toLowerCase(),match:c&&c.toLowerCase(),on_delete:l,on_update:f}):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s),t}function Ys(){var t,e,n,u,o,a;return t=Cs,"on"===r.substr(Cs,2).toLowerCase()?(e=r.substr(Cs,2),Cs+=2):(e=s,0===hs&&Ss(H)),e!==s&&Fi()!==s?("delete"===r.substr(Cs,6).toLowerCase()?(n=r.substr(Cs,6),Cs+=6):(n=s,0===hs&&Ss(G)),n===s&&("update"===r.substr(Cs,6).toLowerCase()?(n=r.substr(Cs,6),Cs+=6):(n=s,0===hs&&Ss(j))),n!==s&&Fi()!==s&&(u=function(){var e;"restrict"===r.substr(Cs,8).toLowerCase()?(e=r.substr(Cs,8),Cs+=8):(e=s,0===hs&&Ss(Y));e===s&&("cascade"===r.substr(Cs,7).toLowerCase()?(e=r.substr(Cs,7),Cs+=7):(e=s,0===hs&&Ss(B)),e===s&&("set null"===r.substr(Cs,8).toLowerCase()?(e=r.substr(Cs,8),Cs+=8):(e=s,0===hs&&Ss(X)),e===s&&("no action"===r.substr(Cs,9).toLowerCase()?(e=r.substr(Cs,9),Cs+=9):(e=s,0===hs&&Ss(W)),e===s&&("set default"===r.substr(Cs,11).toLowerCase()?(e=r.substr(Cs,11),Cs+=11):(e=s,0===hs&&Ss(V))))));e!==s&&(e=e.toLowerCase());return e}())!==s?(o=n,a=u,t=e={type:`${e.toLowerCase()} ${o.toLowerCase()}`,value:a}):(Cs=t,t=s)):(Cs=t,t=s),t}function Bs(){var t,e,n,u,o,a,i;return t=Cs,(e=Aa())===s&&(e=ha())===s&&(e=Li()),e!==s&&(i=e,e={keyword:Array.isArray(i)?i[0].toLowerCase():i.toLowerCase()}),(t=e)===s&&(t=Cs,(e=Ca())!==s&&Fi()!==s?(n=Cs,"of"===r.substr(Cs,2).toLowerCase()?(u=r.substr(Cs,2),Cs+=2):(u=s,0===hs&&Ss(rr)),u!==s&&(o=Fi())!==s&&(a=vo())!==s?n=u=[u,o,a]:(Cs=n,n=s),n===s&&(n=null),n!==s?(t=e=function(r,t){return {keyword:r&&r[0]&&r[0].toLowerCase(),args:t&&{keyword:t[0],columns:t[2]}||null}}(e,n)):(Cs=t,t=s)):(Cs=t,t=s)),t}function Xs(){var t,e,n,u,o,a,i,c,l;return t=Cs,(e=va())===s&&(e=null),e!==s&&Fi()!==s?((n=function(){var t,e,n;return t=Cs,"character"===r.substr(Cs,9).toLowerCase()?(e=r.substr(Cs,9),Cs+=9):(e=s,0===hs&&Ss(cr)),e!==s&&Fi()!==s?("set"===r.substr(Cs,3).toLowerCase()?(n=r.substr(Cs,3),Cs+=3):(n=s,0===hs&&Ss(lr)),n!==s?(t=e="CHARACTER SET"):(Cs=t,t=s)):(Cs=t,t=s),t}())===s&&("charset"===r.substr(Cs,7).toLowerCase()?(n=r.substr(Cs,7),Cs+=7):(n=s,0===hs&&Ss(fr)),n===s&&("collate"===r.substr(Cs,7).toLowerCase()?(n=r.substr(Cs,7),Cs+=7):(n=s,0===hs&&Ss(br)))),n!==s&&Fi()!==s?((u=hi())===s&&(u=null),u!==s&&Fi()!==s&&(o=Wo())!==s?(i=n,c=u,l=o,t=e={keyword:(a=e)&&`${a[0].toLowerCase()} ${i.toLowerCase()}`||i.toLowerCase(),symbol:c,value:l}):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s),t}function Ws(){var t,e,n,u,o,a,i,c,l;return t=Cs,"auto_increment"===r.substr(Cs,14).toLowerCase()?(e=r.substr(Cs,14),Cs+=14):(e=s,0===hs&&Ss(C)),e===s&&("avg_row_length"===r.substr(Cs,14).toLowerCase()?(e=r.substr(Cs,14),Cs+=14):(e=s,0===hs&&Ss(vr)),e===s&&("key_block_size"===r.substr(Cs,14).toLowerCase()?(e=r.substr(Cs,14),Cs+=14):(e=s,0===hs&&Ss(dr)),e===s&&("max_rows"===r.substr(Cs,8).toLowerCase()?(e=r.substr(Cs,8),Cs+=8):(e=s,0===hs&&Ss(Lr)),e===s&&("min_rows"===r.substr(Cs,8).toLowerCase()?(e=r.substr(Cs,8),Cs+=8):(e=s,0===hs&&Ss(Cr)),e===s&&("stats_sample_pages"===r.substr(Cs,18).toLowerCase()?(e=r.substr(Cs,18),Cs+=18):(e=s,0===hs&&Ss(pr))))))),e!==s&&Fi()!==s?((n=hi())===s&&(n=null),n!==s&&Fi()!==s&&(u=oa())!==s?(c=n,l=u,t=e={keyword:e.toLowerCase(),symbol:c,value:l.value}):(Cs=t,t=s)):(Cs=t,t=s),t===s&&(t=Xs())===s&&(t=Cs,(e=Ii())===s&&("connection"===r.substr(Cs,10).toLowerCase()?(e=r.substr(Cs,10),Cs+=10):(e=s,0===hs&&Ss(wr))),e!==s&&Fi()!==s?((n=hi())===s&&(n=null),n!==s&&Fi()!==s&&(u=ea())!==s?(t=e=function(r,t,e){return {keyword:r.toLowerCase(),symbol:t,value:`'${e.value}'`}}(e,n,u)):(Cs=t,t=s)):(Cs=t,t=s),t===s&&(t=Cs,"compression"===r.substr(Cs,11).toLowerCase()?(e=r.substr(Cs,11),Cs+=11):(e=s,0===hs&&Ss(Er)),e!==s&&Fi()!==s?((n=hi())===s&&(n=null),n!==s&&Fi()!==s?(u=Cs,39===r.charCodeAt(Cs)?(o="'",Cs++):(o=s,0===hs&&Ss(hr)),o!==s?("zlib"===r.substr(Cs,4).toLowerCase()?(a=r.substr(Cs,4),Cs+=4):(a=s,0===hs&&Ss(Ar)),a===s&&("lz4"===r.substr(Cs,3).toLowerCase()?(a=r.substr(Cs,3),Cs+=3):(a=s,0===hs&&Ss(yr)),a===s&&("none"===r.substr(Cs,4).toLowerCase()?(a=r.substr(Cs,4),Cs+=4):(a=s,0===hs&&Ss(x)))),a!==s?(39===r.charCodeAt(Cs)?(i="'",Cs++):(i=s,0===hs&&Ss(hr)),i!==s?u=o=[o,a,i]:(Cs=u,u=s)):(Cs=u,u=s)):(Cs=u,u=s),u!==s?(t=e=function(r,t,e){return {keyword:r.toLowerCase(),symbol:t,value:e.join("").toUpperCase()}}(e,n,u)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s),t===s&&(t=Cs,"engine"===r.substr(Cs,6).toLowerCase()?(e=r.substr(Cs,6),Cs+=6):(e=s,0===hs&&Ss(Tr)),e!==s&&Fi()!==s?((n=hi())===s&&(n=null),n!==s&&Fi()!==s&&(u=Wo())!==s?(t=e=function(r,t,e){return {keyword:r.toLowerCase(),symbol:t,value:e.toUpperCase()}}(e,n,u)):(Cs=t,t=s)):(Cs=t,t=s)))),t}function Vs(){var t,e,n,u,o,a,i;return (t=zs())===s&&(t=Cs,e=Cs,40===r.charCodeAt(Cs)?(n="(",Cs++):(n=s,0===hs&&Ss(Mr)),n!==s&&(u=Fi())!==s&&(o=Vs())!==s&&(a=Fi())!==s?(41===r.charCodeAt(Cs)?(i=")",Cs++):(i=s,0===hs&&Ss(Dr)),i!==s?e=n=[n,u,o,a,i]:(Cs=e,e=s)):(Cs=e,e=s),e!==s&&(e={...e[2],parentheses_symbol:!0}),t=e),t}function Ks(){var t,e,n,u,o,a,i,c,l;if(t=Cs,ka()!==s)if(Fi()!==s)if((e=qs())!==s){for(n=[],u=Cs,(o=Fi())!==s&&(a=_i())!==s&&(i=Fi())!==s&&(c=qs())!==s?u=o=[o,a,i,c]:(Cs=u,u=s);u!==s;)n.push(u),u=Cs,(o=Fi())!==s&&(a=_i())!==s&&(i=Fi())!==s&&(c=qs())!==s?u=o=[o,a,i,c]:(Cs=u,u=s);n!==s?(t=ic(e,n)):(Cs=t,t=s);}else Cs=t,t=s;else Cs=t,t=s;else Cs=t,t=s;return t===s&&(t=Cs,Fi()!==s&&ka()!==s&&(e=Fi())!==s&&(n=function(){var t,e,n,u;t=Cs,"RECURSIVE"===r.substr(Cs,9)?(e="RECURSIVE",Cs+=9):(e=s,0===hs&&Ss($e));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s);return t}())!==s&&(u=Fi())!==s&&(o=qs())!==s?((l=o).recursive=!0,t=[l]):(Cs=t,t=s)),t}function qs(){var r,t,e,n;return r=Cs,(t=Wo())!==s&&Fi()!==s?((e=Zs())===s&&(e=null),e!==s&&Fi()!==s&&Ra()!==s&&Fi()!==s&&Oi()!==s&&Fi()!==s&&(n=gs())!==s&&Fi()!==s&&xi()!==s?(r=t={name:t,stmt:n,columns:e}):(Cs=r,r=s)):(Cs=r,r=s),r}function Zs(){var r,t,e,n,u,o,a,i;if(r=Cs,Oi()!==s)if(Fi()!==s)if((t=Xo())!==s){for(e=[],n=Cs,(u=Fi())!==s&&(o=_i())!==s&&(a=Fi())!==s&&(i=Xo())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);n!==s;)e.push(n),n=Cs,(u=Fi())!==s&&(o=_i())!==s&&(a=Fi())!==s&&(i=Xo())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);e!==s&&(n=Fi())!==s&&(u=xi())!==s?(r=kr(t,e)):(Cs=r,r=s);}else Cs=r,r=s;else Cs=r,r=s;else Cs=r,r=s;return r}function zs(){var t,e,n,u,o,a,i,c,l,f,b;return t=Cs,Fi()!==s?((e=Ks())===s&&(e=null),e!==s&&Fi()!==s&&function(){var t,e,n,u;t=Cs,"select"===r.substr(Cs,6).toLowerCase()?(e=r.substr(Cs,6),Cs+=6):(e=s,0===hs&&Ss(xe));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s);return t}()!==s&&Pi()!==s?((n=function(){var r,t,e,n,u,o;if(r=Cs,(t=Js())!==s){for(e=[],n=Cs,(u=Fi())!==s&&(o=Js())!==s?n=u=[u,o]:(Cs=n,n=s);n!==s;)e.push(n),n=Cs,(u=Fi())!==s&&(o=Js())!==s?n=u=[u,o]:(Cs=n,n=s);e!==s?(t=function(r,t){const e=[r];for(let r=0,n=t.length;r<n;++r)e.push(t[r][1]);return e}(t,e),r=t):(Cs=r,r=s);}else Cs=r,r=s;return r}())===s&&(n=null),n!==s&&Fi()!==s?((u=Ga())===s&&(u=null),u!==s&&Fi()!==s&&(o=function(){var r,t,e,n,u,o,a,i;r=Cs,(t=Ha())===s&&(t=Cs,(e=gi())!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s),t===s&&(t=gi()));if(t!==s){for(e=[],n=Cs,(u=Fi())!==s&&(o=_i())!==s&&(a=Fi())!==s&&(i=Qs())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);n!==s;)e.push(n),n=Cs,(u=Fi())!==s&&(o=_i())!==s&&(a=Fi())!==s&&(i=Qs())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);e!==s?(c=t,l=e,Cc.add("select::null::(.*)"),t=l&&l.length>0?(c[0]={expr:{type:"column_ref",table:null,column:"*"},as:null},ic(c[0],l)):c[0],r=t):(Cs=r,r=s);}else Cs=r,r=s;var c,l;if(r===s)if(r=Cs,(t=Qs())!==s){for(e=[],n=Cs,(u=Fi())!==s&&(o=_i())!==s&&(a=Fi())!==s&&(i=Qs())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);n!==s;)e.push(n),n=Cs,(u=Fi())!==s&&(o=_i())!==s&&(a=Fi())!==s&&(i=Qs())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);e!==s?(t=function(r,t){return ic(r,t)}(t,e),r=t):(Cs=r,r=s);}else Cs=r,r=s;return r}())!==s&&Fi()!==s?((a=to())===s&&(a=null),a!==s&&Fi()!==s?((i=bo())===s&&(i=null),i!==s&&Fi()!==s?((c=function(){var t,e,n;t=Cs,(e=function(){var t,e,n,u;t=Cs,"group"===r.substr(Cs,5).toLowerCase()?(e=r.substr(Cs,5),Cs+=5):(e=s,0===hs&&Ss(on));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s);return t}())!==s&&Fi()!==s&&$a()!==s&&Fi()!==s&&(n=So())!==s?(e=n.value,t=e):(Cs=t,t=s);return t}())===s&&(c=null),c!==s&&Fi()!==s?((l=function(){var t,e;t=Cs,function(){var t,e,n,u;t=Cs,"having"===r.substr(Cs,6).toLowerCase()?(e=r.substr(Cs,6),Cs+=6):(e=s,0===hs&&Ss(ln));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s);return t}()!==s&&Fi()!==s&&(e=_o())!==s?(t=e):(Cs=t,t=s);return t}())===s&&(l=null),l!==s&&Fi()!==s?((f=Lo())===s&&(f=null),f!==s&&Fi()!==s?((b=wo())===s&&(b=null),b!==s?(t=function(r,t,e,n,u,s,o,a,i,c){return u&&u.forEach(r=>r.table&&Lc.add(`select::${r.db}::${r.table}`)),{with:r,type:"select",options:t,distinct:e,columns:n,from:u,where:s,groupby:o,having:a,orderby:i,limit:c}}(e,n,u,o,a,i,c,l,f,b)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s),t}function Js(){var e;return (e=function(){var t;"sql_calc_found_rows"===r.substr(Cs,19).toLowerCase()?(t=r.substr(Cs,19),Cs+=19):(t=s,0===hs&&Ss(Vu));return t}())===s&&((e=function(){var t;"sql_cache"===r.substr(Cs,9).toLowerCase()?(t=r.substr(Cs,9),Cs+=9):(t=s,0===hs&&Ss(Ku));return t}())===s&&(e=function(){var t;"sql_no_cache"===r.substr(Cs,12).toLowerCase()?(t=r.substr(Cs,12),Cs+=12):(t=s,0===hs&&Ss(qu));return t}()),e===s&&(e=function(){var t;"sql_big_result"===r.substr(Cs,14).toLowerCase()?(t=r.substr(Cs,14),Cs+=14):(t=s,0===hs&&Ss(zu));return t}())===s&&(e=function(){var t;"sql_small_result"===r.substr(Cs,16).toLowerCase()?(t=r.substr(Cs,16),Cs+=16):(t=s,0===hs&&Ss(Zu));return t}())===s&&(e=function(){var t;"sql_buffer_result"===r.substr(Cs,17).toLowerCase()?(t=r.substr(Cs,17),Cs+=17):(t=s,0===hs&&Ss(Ju));return t}())),e!==s&&(e=e),e}function Qs(){var r,t,e,n;return r=Cs,(t=_o())!==s&&Ei()!==s&&(e=ec())!==s?(r=t={type:"cast",expr:t,symbol:"::",target:e}):(Cs=r,r=s),r===s&&(r=Cs,(t=Yo())!==s&&Fi()!==s&&(e=Ri())!==s&&Fi()!==s&&gi()!==s?(n=t,Cc.add(`select::${n}::(.*)`),r=t={type:"star_ref",expr:{type:"column_ref",table:n,column:"*"},as:null}):(Cs=r,r=s),r===s&&(r=Cs,(t=_o())!==s&&Fi()!==s?((e=ro())===s&&(e=null),e!==s?(r=t=function(r,t){return {type:"expr",expr:r,as:t}}(t,e)):(Cs=r,r=s)):(Cs=r,r=s))),r}function ro(){var r,t,e;return r=Cs,(t=Ra())!==s&&Fi()!==s&&(e=function(){var r,t;r=Cs,(t=Wo())!==s?((function(r){if(!0===uc[r.toUpperCase()])throw new Error("Error: "+JSON.stringify(r)+" is a reserved word, can not as alias clause");return !1}(t)?s:void 0)!==s?(r=t=t):(Cs=r,r=s)):(Cs=r,r=s);r===s&&(r=Cs,(t=Bo())!==s&&(t=t),r=t);return r}())!==s?(r=t=e):(Cs=r,r=s),r===s&&(r=Cs,(t=Ra())===s&&(t=null),t!==s&&Fi()!==s&&(e=Yo())!==s?(r=t=e):(Cs=r,r=s)),r}function to(){var r,t;return r=Cs,Ia()!==s&&Fi()!==s&&(t=oo())!==s?(r=t):(Cs=r,r=s),r}function eo(){var r,t,e;return r=Cs,(t=lo())!==s&&Fi()!==s&&da()!==s&&Fi()!==s&&(e=lo())!==s?(r=t=[t,e]):(Cs=r,r=s),r}function no(){var t,e;return t=Cs,Da()!==s&&Fi()!==s?("btree"===r.substr(Cs,5).toLowerCase()?(e=r.substr(Cs,5),Cs+=5):(e=s,0===hs&&Ss($r)),e===s&&("hash"===r.substr(Cs,4).toLowerCase()?(e=r.substr(Cs,4),Cs+=4):(e=s,0===hs&&Ss(Fr)),e===s&&("gist"===r.substr(Cs,4).toLowerCase()?(e=r.substr(Cs,4),Cs+=4):(e=s,0===hs&&Ss(Pr)),e===s&&("gin"===r.substr(Cs,3).toLowerCase()?(e=r.substr(Cs,3),Cs+=3):(e=s,0===hs&&Ss(Hr))))),e!==s?(t={keyword:"using",type:e.toLowerCase()}):(Cs=t,t=s)):(Cs=t,t=s),t}function uo(){var r,t,e,n,u,o;if(r=Cs,(t=so())!==s){for(e=[],n=Cs,(u=Fi())!==s&&(o=so())!==s?n=u=[u,o]:(Cs=n,n=s);n!==s;)e.push(n),n=Cs,(u=Fi())!==s&&(o=so())!==s?n=u=[u,o]:(Cs=n,n=s);e!==s?(r=t=function(r,t){const e=[r];for(let r=0;r<t.length;r++)e.push(t[r][1]);return e}(t,e)):(Cs=r,r=s);}else Cs=r,r=s;return r}function so(){var t,e,n,u,o,a;return t=Cs,(e=function(){var t,e,n,u;t=Cs,"key_block_size"===r.substr(Cs,14).toLowerCase()?(e=r.substr(Cs,14),Cs+=14):(e=s,0===hs&&Ss(dr));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="KEY_BLOCK_SIZE"):(Cs=t,t=s)):(Cs=t,t=s);return t}())!==s&&Fi()!==s?((n=hi())===s&&(n=null),n!==s&&Fi()!==s&&(u=oa())!==s?(o=n,a=u,t=e={type:e.toLowerCase(),symbol:o,expr:a}):(Cs=t,t=s)):(Cs=t,t=s),t===s&&(t=Cs,(e=Wo())!==s&&Fi()!==s&&(n=hi())!==s&&Fi()!==s?((u=oa())===s&&(u=Yo()),u!==s?(t=e=function(r,t,e){return {type:r.toLowerCase(),symbol:t,expr:"string"==typeof e&&{type:"origin",value:e}||e}}(e,n,u)):(Cs=t,t=s)):(Cs=t,t=s),t===s&&(t=no())===s&&(t=Cs,"with"===r.substr(Cs,4).toLowerCase()?(e=r.substr(Cs,4),Cs+=4):(e=s,0===hs&&Ss(Gr)),e!==s&&Fi()!==s?("parser"===r.substr(Cs,6).toLowerCase()?(n=r.substr(Cs,6),Cs+=6):(n=s,0===hs&&Ss(jr)),n!==s&&Fi()!==s&&(u=Wo())!==s?(t=e={type:"with parser",expr:u}):(Cs=t,t=s)):(Cs=t,t=s),t===s&&(t=Cs,"visible"===r.substr(Cs,7).toLowerCase()?(e=r.substr(Cs,7),Cs+=7):(e=s,0===hs&&Ss(Yr)),e===s&&("invisible"===r.substr(Cs,9).toLowerCase()?(e=r.substr(Cs,9),Cs+=9):(e=s,0===hs&&Ss(Br))),e!==s&&(e=function(r){return {type:r.toLowerCase(),expr:r.toLowerCase()}}(e)),(t=e)===s&&(t=Gi())))),t}function oo(){var r,t,e,n;if(r=Cs,(t=io())!==s){for(e=[],n=ao();n!==s;)e.push(n),n=ao();e!==s?(r=t=Xr(t,e)):(Cs=r,r=s);}else Cs=r,r=s;return r}function ao(){var r,t,e;return r=Cs,Fi()!==s&&(t=_i())!==s&&Fi()!==s&&(e=io())!==s?(r=e):(Cs=r,r=s),r===s&&(r=Cs,Fi()!==s&&(t=function(){var r,t,e,n,u,o,a,i,c,l,f;if(r=Cs,(t=co())!==s)if(Fi()!==s)if((e=io())!==s)if(Fi()!==s)if((n=Da())!==s)if(Fi()!==s)if(Oi()!==s)if(Fi()!==s)if((u=Wo())!==s){for(o=[],a=Cs,(i=Fi())!==s&&(c=_i())!==s&&(l=Fi())!==s&&(f=Wo())!==s?a=i=[i,c,l,f]:(Cs=a,a=s);a!==s;)o.push(a),a=Cs,(i=Fi())!==s&&(c=_i())!==s&&(l=Fi())!==s&&(f=Wo())!==s?a=i=[i,c,l,f]:(Cs=a,a=s);o!==s&&(a=Fi())!==s&&(i=xi())!==s?(b=t,d=u,L=o,(v=e).join=b,v.using=ic(d,L),r=t=v):(Cs=r,r=s);}else Cs=r,r=s;else Cs=r,r=s;else Cs=r,r=s;else Cs=r,r=s;else Cs=r,r=s;else Cs=r,r=s;else Cs=r,r=s;else Cs=r,r=s;else Cs=r,r=s;var b,v,d,L;r===s&&(r=Cs,(t=co())!==s&&Fi()!==s&&(e=io())!==s&&Fi()!==s?((n=fo())===s&&(n=null),n!==s?(t=function(r,t,e){return t.join=r,t.on=e,t}(t,e,n),r=t):(Cs=r,r=s)):(Cs=r,r=s),r===s&&(r=Cs,(t=co())!==s&&Fi()!==s&&(e=Oi())!==s&&Fi()!==s&&(n=gs())!==s&&Fi()!==s&&xi()!==s&&Fi()!==s?((u=ro())===s&&(u=null),u!==s&&(o=Fi())!==s?((a=fo())===s&&(a=null),a!==s?(t=function(r,t,e,n){return t.parentheses=!0,{expr:t,as:e,join:r,on:n}}(t,n,u,a),r=t):(Cs=r,r=s)):(Cs=r,r=s)):(Cs=r,r=s)));return r}())!==s?(r=t):(Cs=r,r=s)),r}function io(){var t,e,n,u,o,a;return t=Cs,(e=function(){var t;"dual"===r.substr(Cs,4).toLowerCase()?(t=r.substr(Cs,4),Cs+=4):(t=s,0===hs&&Ss($u));return t}())!==s&&(e={type:"dual"}),(t=e)===s&&(t=Cs,(e=lo())!==s&&Fi()!==s?((n=ro())===s&&(n=null),n!==s?(a=n,t=e="var"===(o=e).type?(o.as=a,o):{db:o.db,table:o.table,as:a}):(Cs=t,t=s)):(Cs=t,t=s),t===s&&(t=Cs,(e=Oi())!==s&&Fi()!==s&&(n=gs())!==s&&Fi()!==s&&xi()!==s&&Fi()!==s?((u=ro())===s&&(u=null),u!==s?(t=e=function(r,t){return r.parentheses=!0,{expr:r,as:t}}(n,u)):(Cs=t,t=s)):(Cs=t,t=s))),t}function co(){var t,e,n,u;return t=Cs,(e=function(){var t,e,n,u;t=Cs,"left"===r.substr(Cs,4).toLowerCase()?(e=r.substr(Cs,4),Cs+=4):(e=s,0===hs&&Ss(Ze));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s);return t}())!==s&&(n=Fi())!==s?((u=xa())===s&&(u=null),u!==s&&Fi()!==s&&Oa()!==s?(t=e="LEFT JOIN"):(Cs=t,t=s)):(Cs=t,t=s),t===s&&(t=Cs,(e=function(){var t,e,n,u;t=Cs,"right"===r.substr(Cs,5).toLowerCase()?(e=r.substr(Cs,5),Cs+=5):(e=s,0===hs&&Ss(ze));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s);return t}())!==s&&(n=Fi())!==s?((u=xa())===s&&(u=null),u!==s&&Fi()!==s&&Oa()!==s?(t=e="RIGHT JOIN"):(Cs=t,t=s)):(Cs=t,t=s),t===s&&(t=Cs,(e=function(){var t,e,n,u;t=Cs,"full"===r.substr(Cs,4).toLowerCase()?(e=r.substr(Cs,4),Cs+=4):(e=s,0===hs&&Ss(Je));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s);return t}())!==s&&(n=Fi())!==s?((u=xa())===s&&(u=null),u!==s&&Fi()!==s&&Oa()!==s?(t=e="FULL JOIN"):(Cs=t,t=s)):(Cs=t,t=s),t===s&&(t=Cs,e=Cs,(n=function(){var t,e,n,u;t=Cs,"inner"===r.substr(Cs,5).toLowerCase()?(e=r.substr(Cs,5),Cs+=5):(e=s,0===hs&&Ss(Qe));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s);return t}())!==s&&(u=Fi())!==s?e=n=[n,u]:(Cs=e,e=s),e===s&&(e=null),e!==s&&(n=Oa())!==s?(t=e="INNER JOIN"):(Cs=t,t=s)))),t}function lo(){var r,t,e,n,u,o,a,i,c,l;return r=Cs,(t=Yo())!==s?(e=Cs,(n=Fi())!==s&&(u=Ri())!==s&&(o=Fi())!==s&&(a=Yo())!==s?e=n=[n,u,o,a]:(Cs=e,e=s),e!==s?(n=Cs,(u=Fi())!==s&&(o=Ri())!==s&&(a=Fi())!==s&&(i=Yo())!==s?n=u=[u,o,a,i]:(Cs=n,n=s),n!==s?(r=t=function(r,t,e){const n={db:null,table:r};return null!==e&&(n.db=`${r}.${t[3]}`,n.table=e[3]),n}(t,e,n)):(Cs=r,r=s)):(Cs=r,r=s)):(Cs=r,r=s),r===s&&(r=Cs,(t=Yo())!==s&&(e=Fi())!==s&&(n=Ri())!==s&&(u=Fi())!==s&&(o=gi())!==s?(l=t,Lc.add(`select::${l}::(.*)`),r=t={db:l,table:"*"}):(Cs=r,r=s),r===s&&(r=Cs,(t=Yo())!==s?(e=Cs,(n=Fi())!==s&&(u=Ri())!==s&&(o=Fi())!==s&&(a=Yo())!==s?e=n=[n,u,o,a]:(Cs=e,e=s),e===s&&(e=null),e!==s?(r=t=function(r,t){const e={db:null,table:r};return null!==t&&(e.db=r,e.table=t[3]),e}(t,e)):(Cs=r,r=s)):(Cs=r,r=s),r===s&&(r=Cs,(t=rc())!==s&&((c=t).db=null,c.table=c.name,t=c),r=t))),r}function fo(){var r,t;return r=Cs,ga()!==s&&Fi()!==s&&(t=_o())!==s?(r=t):(Cs=r,r=s),r}function bo(){var t,e;return t=Cs,function(){var t,e,n,u;t=Cs,"where"===r.substr(Cs,5).toLowerCase()?(e=r.substr(Cs,5),Cs+=5):(e=s,0===hs&&Ss(sn));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s);return t}()!==s&&Fi()!==s?((e=function(){var r,t,e,n,u,o,a,i;if(r=Cs,(t=go())!==s){for(e=[],n=Cs,(u=Fi())!==s?((o=Ka())===s&&(o=qa()),o!==s&&(a=Fi())!==s&&(i=go())!==s?n=u=[u,o,a,i]:(Cs=n,n=s)):(Cs=n,n=s);n!==s;)e.push(n),n=Cs,(u=Fi())!==s?((o=Ka())===s&&(o=qa()),o!==s&&(a=Fi())!==s&&(i=go())!==s?n=u=[u,o,a,i]:(Cs=n,n=s)):(Cs=n,n=s);e!==s?(t=cc(t,e),r=t):(Cs=r,r=s);}else Cs=r,r=s;return r}())===s&&(e=_o()),e!==s?(t=e):(Cs=t,t=s)):(Cs=t,t=s),t}function vo(){var r,t,e,n,u,o,a,i;if(r=Cs,(t=jo())!==s){for(e=[],n=Cs,(u=Fi())!==s&&(o=_i())!==s&&(a=Fi())!==s&&(i=jo())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);n!==s;)e.push(n),n=Cs,(u=Fi())!==s&&(o=_i())!==s&&(a=Fi())!==s&&(i=jo())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);e!==s?(r=t=ic(t,e)):(Cs=r,r=s);}else Cs=r,r=s;return r}function Lo(){var t,e;return t=Cs,function(){var t,e,n,u;t=Cs,"order"===r.substr(Cs,5).toLowerCase()?(e=r.substr(Cs,5),Cs+=5):(e=s,0===hs&&Ss(cn));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s);return t}()!==s&&Fi()!==s&&$a()!==s&&Fi()!==s&&(e=function(){var r,t,e,n,u,o,a,i;if(r=Cs,(t=Co())!==s){for(e=[],n=Cs,(u=Fi())!==s&&(o=_i())!==s&&(a=Fi())!==s&&(i=Co())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);n!==s;)e.push(n),n=Cs,(u=Fi())!==s&&(o=_i())!==s&&(a=Fi())!==s&&(i=Co())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);e!==s?(t=ic(t,e),r=t):(Cs=r,r=s);}else Cs=r,r=s;return r}())!==s?(t=e):(Cs=t,t=s),t}function Co(){var r,t,e;return r=Cs,(t=_o())!==s&&Fi()!==s?((e=Pa())===s&&(e=Fa()),e===s&&(e=null),e!==s?(r=t=function(r,t){const e={expr:r,type:"ASC"};return "DESC"===t&&(e.type="DESC"),e}(t,e)):(Cs=r,r=s)):(Cs=r,r=s),r}function po(){var r;return (r=oa())===s&&(r=Zo()),r}function wo(){var t,e,n,u,o,a;return t=Cs,function(){var t,e,n,u;t=Cs,"limit"===r.substr(Cs,5).toLowerCase()?(e=r.substr(Cs,5),Cs+=5):(e=s,0===hs&&Ss(fn));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s);return t}()!==s&&Fi()!==s?((e=po())===s&&(e=Ha()),e!==s&&Fi()!==s?(n=Cs,(u=function(){var t,e,n,u;t=Cs,"offset"===r.substr(Cs,6).toLowerCase()?(e=r.substr(Cs,6),Cs+=6):(e=s,0===hs&&Ss(bn));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="OFFSET"):(Cs=t,t=s)):(Cs=t,t=s);return t}())!==s&&(o=Fi())!==s&&(a=po())!==s?n=u=[u,o,a]:(Cs=n,n=s),n===s&&(n=null),n!==s?(t=function(r,t){const e=[];return "string"==typeof r?e.push({type:"origin",value:"all"}):e.push(r),t&&e.push(t[2]),{seperator:t&&t[0]&&t[0].toLowerCase()||"",value:e}}(e,n)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s),t}function Eo(){var t,e,n,u,o,a,i,c,l;return t=Cs,e=Cs,(n=Yo())!==s&&(u=Fi())!==s&&(o=Ri())!==s?e=n=[n,u,o]:(Cs=e,e=s),e===s&&(e=null),e!==s&&(n=Fi())!==s&&(u=Xo())!==s&&(o=Fi())!==s?(61===r.charCodeAt(Cs)?(a="=",Cs++):(a=s,0===hs&&Ss(Wr)),a!==s&&Fi()!==s&&(i=$o())!==s?(t=e={column:u,value:i,table:(l=e)&&l[0]}):(Cs=t,t=s)):(Cs=t,t=s),t===s&&(t=Cs,e=Cs,(n=Yo())!==s&&(u=Fi())!==s&&(o=Ri())!==s?e=n=[n,u,o]:(Cs=e,e=s),e===s&&(e=null),e!==s&&(n=Fi())!==s&&(u=Xo())!==s&&(o=Fi())!==s?(61===r.charCodeAt(Cs)?(a="=",Cs++):(a=s,0===hs&&Ss(Wr)),a!==s&&Fi()!==s&&(i=Ma())!==s&&Fi()!==s&&Oi()!==s&&Fi()!==s&&(c=jo())!==s&&Fi()!==s&&xi()!==s?(t=e=function(r,t,e){return {column:t,value:e,table:r&&r[0],keyword:"values"}}(e,u,c)):(Cs=t,t=s)):(Cs=t,t=s)),t}function ho(){var t,e,n,u,o;return t=Cs,(e=function(){var t,e,n,u;t=Cs,"returning"===r.substr(Cs,9).toLowerCase()?(e=r.substr(Cs,9),Cs+=9):(e=s,0===hs&&Ss(Pe));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="RETURNING"):(Cs=t,t=s)):(Cs=t,t=s);return t}())!==s&&Fi()!==s?((n=gi())===s&&(n=vo()),n!==s?(o=n,t=e={type:(u=e)&&u.toLowerCase()||"returning",columns:"*"===o&&[{type:"columne_ref",table:null,column:"*"}]||o}):(Cs=t,t=s)):(Cs=t,t=s),t}function Ao(){var r;return (r=function(){var r,t;r=Cs,Ma()!==s&&Fi()!==s&&(t=function(){var r,t,e,n,u,o,a,i;if(r=Cs,(t=mo())!==s){for(e=[],n=Cs,(u=Fi())!==s&&(o=_i())!==s&&(a=Fi())!==s&&(i=mo())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);n!==s;)e.push(n),n=Cs,(u=Fi())!==s&&(o=_i())!==s&&(a=Fi())!==s&&(i=mo())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);e!==s?(t=ic(t,e),r=t):(Cs=r,r=s);}else Cs=r,r=s;return r}())!==s?(r=t):(Cs=r,r=s);return r}())===s&&(r=zs()),r}function yo(){var r,t,e,n,u,o,a,i,c;if(r=Cs,ma()!==s)if(Fi()!==s)if((t=Oi())!==s)if(Fi()!==s)if((e=Wo())!==s){for(n=[],u=Cs,(o=Fi())!==s&&(a=_i())!==s&&(i=Fi())!==s&&(c=Wo())!==s?u=o=[o,a,i,c]:(Cs=u,u=s);u!==s;)n.push(u),u=Cs,(o=Fi())!==s&&(a=_i())!==s&&(i=Fi())!==s&&(c=Wo())!==s?u=o=[o,a,i,c]:(Cs=u,u=s);n!==s&&(u=Fi())!==s&&(o=xi())!==s?(r=ic(e,n)):(Cs=r,r=s);}else Cs=r,r=s;else Cs=r,r=s;else Cs=r,r=s;else Cs=r,r=s;else Cs=r,r=s;return r===s&&(r=Cs,ma()!==s&&Fi()!==s&&(t=mo())!==s?(r=t):(Cs=r,r=s)),r}function To(){var r,t;return r=Cs,(t=Aa())!==s&&(t="insert"),(r=t)===s&&(r=Cs,(t=ya())!==s&&(t="replace"),r=t),r}function mo(){var r,t;return r=Cs,Oi()!==s&&Fi()!==s&&(t=So())!==s&&Fi()!==s&&xi()!==s?(r=t):(Cs=r,r=s),r}function So(){var r,t,e,n,u,o,a,i;if(r=Cs,(t=_o())!==s){for(e=[],n=Cs,(u=Fi())!==s&&(o=_i())!==s&&(a=Fi())!==s&&(i=_o())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);n!==s;)e.push(n),n=Cs,(u=Fi())!==s&&(o=_i())!==s&&(a=Fi())!==s&&(i=_o())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);e!==s?(r=t=function(r,t){const e={type:"expr_list"};return e.value=ic(r,t),e}(t,e)):(Cs=r,r=s);}else Cs=r,r=s;return r}function Io(){var t,e,n;return t=Cs,Ci()!==s&&Fi()!==s&&(e=_o())!==s&&Fi()!==s&&(n=function(){var t;(t=function(){var t,e,n,u;t=Cs,"year"===r.substr(Cs,4).toLowerCase()?(e=r.substr(Cs,4),Cs+=4):(e=s,0===hs&&Ss(Zt));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="YEAR"):(Cs=t,t=s)):(Cs=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Cs,"month"===r.substr(Cs,5).toLowerCase()?(e=r.substr(Cs,5),Cs+=5):(e=s,0===hs&&Ss(Yt));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="MONTH"):(Cs=t,t=s)):(Cs=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Cs,"day"===r.substr(Cs,3).toLowerCase()?(e=r.substr(Cs,3),Cs+=3):(e=s,0===hs&&Ss(Ot));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="DAY"):(Cs=t,t=s)):(Cs=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Cs,"hour"===r.substr(Cs,4).toLowerCase()?(e=r.substr(Cs,4),Cs+=4):(e=s,0===hs&&Ss(kt));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="HOUR"):(Cs=t,t=s)):(Cs=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Cs,"minute"===r.substr(Cs,6).toLowerCase()?(e=r.substr(Cs,6),Cs+=6):(e=s,0===hs&&Ss(jt));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="MINUTE"):(Cs=t,t=s)):(Cs=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Cs,"second"===r.substr(Cs,6).toLowerCase()?(e=r.substr(Cs,6),Cs+=6):(e=s,0===hs&&Ss(Xt));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="SECOND"):(Cs=t,t=s)):(Cs=t,t=s);return t}());return t}())!==s?(t={type:"interval",expr:e,unit:n.toLowerCase()}):(Cs=t,t=s),t===s&&(t=Cs,Ci()!==s&&Fi()!==s&&(e=ea())!==s?(t=function(r){return {type:"interval",expr:r,unit:""}}(e)):(Cs=t,t=s)),t}function No(){var t,e,n,u,o,a,i,c,l;if(t=Cs,Za()!==s)if(Fi()!==s)if((e=_o())===s&&(e=null),e!==s)if(Fi()!==s){if(n=[],(u=Ro())!==s)for(;u!==s;)n.push(u),u=Ro();else n=s;n!==s&&(u=Fi())!==s?((o=function(){var t,e;t=Cs,function(){var t,e,n,u;t=Cs,"else"===r.substr(Cs,4).toLowerCase()?(e=r.substr(Cs,4),Cs+=4):(e=s,0===hs&&Ss(Fn));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s);return t}()!==s&&Fi()!==s&&(e=_o())!==s?(t={type:"else",result:e}):(Cs=t,t=s);return t}())===s&&(o=null),o!==s&&Fi()!==s&&function(){var t,e,n,u;t=Cs,"end"===r.substr(Cs,3).toLowerCase()?(e=r.substr(Cs,3),Cs+=3):(e=s,0===hs&&Ss(Pn));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s);return t}()!==s&&Fi()!==s?((a=Za())===s&&(a=null),a!==s?(i=e,c=n,(l=o)&&c.push(l),t={type:"case",expr:i||null,args:c}):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s);}else Cs=t,t=s;else Cs=t,t=s;else Cs=t,t=s;else Cs=t,t=s;return t}function Ro(){var t,e,n;return t=Cs,za()!==s&&Fi()!==s&&(e=_o())!==s&&Fi()!==s&&function(){var t,e,n,u;t=Cs,"then"===r.substr(Cs,4).toLowerCase()?(e=r.substr(Cs,4),Cs+=4):(e=s,0===hs&&Ss($n));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s);return t}()!==s&&Fi()!==s&&(n=_o())!==s?(t={type:"when",cond:e,result:n}):(Cs=t,t=s),t}function _o(){var r;return (r=function(){var r,t,e,n,u,o,a,i;if(r=Cs,(t=Go())!==s){if(e=[],n=Cs,(u=Fi())!==s&&(o=$i())!==s&&(a=Fi())!==s&&(i=Go())!==s?n=u=[u,o,a,i]:(Cs=n,n=s),n!==s)for(;n!==s;)e.push(n),n=Cs,(u=Fi())!==s&&(o=$i())!==s&&(a=Fi())!==s&&(i=Go())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);else e=s;e!==s?(t=cc(t,e),r=t):(Cs=r,r=s);}else Cs=r,r=s;return r}())===s&&(r=function(){var r,t,e,n,u,o;if(r=Cs,(t=Fo())!==s){if(e=[],n=Cs,(u=Fi())!==s&&(o=Go())!==s?n=u=[u,o]:(Cs=n,n=s),n!==s)for(;n!==s;)e.push(n),n=Cs,(u=Fi())!==s&&(o=Go())!==s?n=u=[u,o]:(Cs=n,n=s);else e=s;e!==s?(t=sc(t,e[0][1]),r=t):(Cs=r,r=s);}else Cs=r,r=s;return r}())===s&&(r=Oo())===s&&(r=Vs()),r}function go(){var r,t,e,n,u,o;return r=Cs,(t=Oi())===s&&(t=null),t!==s&&Fi()!==s&&(e=Oo())!==s&&Fi()!==s?((n=xi())===s&&(n=null),n!==s?((function(r,t,e){if(r&&!e||!r&&e)return !0}(t,0,n)?s:void 0)!==s?(u=e,o=n,t&&o&&(u.parentheses=!0),r=t=u):(Cs=r,r=s)):(Cs=r,r=s)):(Cs=r,r=s),r}function Oo(){var r,t,e,n,u,o,a,i;if(r=Cs,(t=xo())!==s){for(e=[],n=Cs,(u=Pi())!==s&&(o=qa())!==s&&(a=Fi())!==s&&(i=xo())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);n!==s;)e.push(n),n=Cs,(u=Pi())!==s&&(o=qa())!==s&&(a=Fi())!==s&&(i=xo())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);e!==s?(r=t=Vr(t,e)):(Cs=r,r=s);}else Cs=r,r=s;return r}function xo(){var r,t,e,n,u,o,a,i;if(r=Cs,(t=Uo())!==s){for(e=[],n=Cs,(u=Pi())!==s&&(o=Ka())!==s&&(a=Fi())!==s&&(i=Uo())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);n!==s;)e.push(n),n=Cs,(u=Pi())!==s&&(o=Ka())!==s&&(a=Fi())!==s&&(i=Uo())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);e!==s?(r=t=Vr(t,e)):(Cs=r,r=s);}else Cs=r,r=s;return r}function Uo(){var t,e,n,u,o;return (t=Mo())===s&&(t=function(){var r,t,e;r=Cs,(t=function(){var r,t,e,n,u;r=Cs,t=Cs,(e=Va())!==s&&(n=Fi())!==s&&(u=Wa())!==s?t=e=[e,n,u]:(Cs=t,t=s);t!==s&&(t=(o=t)[0]+" "+o[2]);var o;(r=t)===s&&(r=Wa());return r}())!==s&&Fi()!==s&&Oi()!==s&&Fi()!==s&&(e=gs())!==s&&Fi()!==s&&xi()!==s?(n=t,(u=e).parentheses=!0,t=sc(n,u),r=t):(Cs=r,r=s);var n,u;return r}())===s&&(t=Cs,(e=Va())===s&&(e=Cs,33===r.charCodeAt(Cs)?(n="!",Cs++):(n=s,0===hs&&Ss(Kr)),n!==s?(u=Cs,hs++,61===r.charCodeAt(Cs)?(o="=",Cs++):(o=s,0===hs&&Ss(Wr)),hs--,o===s?u=void 0:(Cs=u,u=s),u!==s?e=n=[n,u]:(Cs=e,e=s)):(Cs=e,e=s)),e!==s&&(n=Fi())!==s&&(u=Uo())!==s?(t=e=sc("NOT",u)):(Cs=t,t=s)),t}function Mo(){var t,e,n,u,o;return t=Cs,(e=$o())!==s&&Fi()!==s?((n=function(){var t;(t=function(){var t,e,n,u,o,a;t=[],e=Cs,(n=Fi())!==s&&(u=Do())!==s&&(o=Fi())!==s&&(a=$o())!==s?e=n=[n,u,o,a]:(Cs=e,e=s);if(e!==s)for(;e!==s;)t.push(e),e=Cs,(n=Fi())!==s&&(u=Do())!==s&&(o=Fi())!==s&&(a=$o())!==s?e=n=[n,u,o,a]:(Cs=e,e=s);else t=s;t!==s&&(t={type:"arithmetic",tail:t});return t}())===s&&(t=function(){var r,t,e,n;r=Cs,(t=ko())!==s&&Fi()!==s&&(e=Oi())!==s&&Fi()!==s&&(n=So())!==s&&Fi()!==s&&xi()!==s?(r=t={op:t,right:n}):(Cs=r,r=s);r===s&&(r=Cs,(t=ko())!==s&&Fi()!==s?((e=rc())===s&&(e=ea()),e!==s?(t=function(r,t){return {op:r,right:t}}(t,e),r=t):(Cs=r,r=s)):(Cs=r,r=s));return r}())===s&&(t=function(){var r,t,e,n;r=Cs,(t=function(){var r,t,e,n,u;r=Cs,t=Cs,(e=Va())!==s&&(n=Fi())!==s&&(u=ja())!==s?t=e=[e,n,u]:(Cs=t,t=s);t!==s&&(t=(o=t)[0]+" "+o[2]);var o;(r=t)===s&&(r=ja());return r}())!==s&&Fi()!==s&&(e=$o())!==s&&Fi()!==s&&Ka()!==s&&Fi()!==s&&(n=$o())!==s?(r=t={op:t,right:{type:"expr_list",value:[e,n]}}):(Cs=r,r=s);return r}())===s&&(t=function(){var r,t,e,n,u,o,a,i,c;r=Cs,(t=Ba())!==s&&(e=Fi())!==s&&(n=$o())!==s?(r=t={op:"IS",right:n}):(Cs=r,r=s);r===s&&(r=Cs,(t=Ba())!==s&&(e=Fi())!==s?(n=Cs,(u=Ga())!==s&&(o=Fi())!==s&&(a=Ia())!==s&&(i=Fi())!==s&&(c=lo())!==s?n=u=[u,o,a,i,c]:(Cs=n,n=s),n!==s?(t=function(r){const{db:t,table:e}=r.pop(),n="*"===e?"*":`"${e}"`;return {op:"IS",right:{type:"origin",value:"DISTINCT FROM "+(t?`"${t}".${n}`:n)}}}(n),r=t):(Cs=r,r=s)):(Cs=r,r=s),r===s&&(r=Cs,t=Cs,(e=Ba())!==s&&(n=Fi())!==s&&(u=Va())!==s?t=e=[e,n,u]:(Cs=t,t=s),t!==s&&(e=Fi())!==s&&(n=$o())!==s?(t=function(r){return {op:"IS NOT",right:r}}(n),r=t):(Cs=r,r=s)));return r}())===s&&(t=function(){var r,t,e;r=Cs,(t=function(){var r,t,e,n,u;r=Cs,t=Cs,(e=Va())!==s&&(n=Fi())!==s&&(u=Xa())!==s?t=e=[e,n,u]:(Cs=t,t=s);t!==s&&(t=(o=t)[0]+" "+o[2]);var o;(r=t)===s&&(r=Xa());return r}())!==s&&Fi()!==s?((e=Qo())===s&&(e=Mo()),e!==s?(r=t={op:t,right:e}):(Cs=r,r=s)):(Cs=r,r=s);return r}())===s&&(t=function(){var t,e,n;t=Cs,"@>"===r.substr(Cs,2)?(e="@>",Cs+=2):(e=s,0===hs&&Ss(tt));e===s&&("<@"===r.substr(Cs,2)?(e="<@",Cs+=2):(e=s,0===hs&&Ss(et)),e===s&&(e=ki())===s&&(e=function(){var t;"#>>"===r.substr(Cs,3)?(t="#>>",Cs+=3):(t=s,0===hs&&Ss(os));return t}())===s&&(e=function(){var t;"#>"===r.substr(Cs,2)?(t="#>",Cs+=2):(t=s,0===hs&&Ss(ss));return t}())===s&&(63===r.charCodeAt(Cs)?(e="?",Cs++):(e=s,0===hs&&Ss(nt)),e===s&&("?|"===r.substr(Cs,2)?(e="?|",Cs+=2):(e=s,0===hs&&Ss(ut)),e===s&&("?&"===r.substr(Cs,2)?(e="?&",Cs+=2):(e=s,0===hs&&Ss(st)),e===s&&("#-"===r.substr(Cs,2)?(e="#-",Cs+=2):(e=s,0===hs&&Ss(ot)))))));e!==s&&Fi()!==s&&(n=Qs())!==s?(e={op:e,right:(u=n)&&u.expr||u},t=e):(Cs=t,t=s);var u;return t}());return t}())===s&&(n=null),n!==s?(u=e,t=e=null===(o=n)?u:"arithmetic"===o.type?cc(u,o.tail):oc(o.op,u,o.right)):(Cs=t,t=s)):(Cs=t,t=s),t===s&&(t=ea())===s&&(t=jo()),t}function Do(){var t;return ">="===r.substr(Cs,2)?(t=">=",Cs+=2):(t=s,0===hs&&Ss(qr)),t===s&&(62===r.charCodeAt(Cs)?(t=">",Cs++):(t=s,0===hs&&Ss(Zr)),t===s&&("<="===r.substr(Cs,2)?(t="<=",Cs+=2):(t=s,0===hs&&Ss(zr)),t===s&&("<>"===r.substr(Cs,2)?(t="<>",Cs+=2):(t=s,0===hs&&Ss(Jr)),t===s&&(60===r.charCodeAt(Cs)?(t="<",Cs++):(t=s,0===hs&&Ss(Qr)),t===s&&(61===r.charCodeAt(Cs)?(t="=",Cs++):(t=s,0===hs&&Ss(Wr)),t===s&&("!="===r.substr(Cs,2)?(t="!=",Cs+=2):(t=s,0===hs&&Ss(rt)))))))),t}function ko(){var r,t,e,n,u,o;return r=Cs,t=Cs,(e=Va())!==s&&(n=Fi())!==s&&(u=Ya())!==s?t=e=[e,n,u]:(Cs=t,t=s),t!==s&&(t=(o=t)[0]+" "+o[2]),(r=t)===s&&(r=Ya()),r}function $o(){var r,t,e,n,u,o,a,i;if(r=Cs,(t=Po())!==s){for(e=[],n=Cs,(u=Fi())!==s&&(o=Fo())!==s&&(a=Fi())!==s&&(i=Po())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);n!==s;)e.push(n),n=Cs,(u=Fi())!==s&&(o=Fo())!==s&&(a=Fi())!==s&&(i=Po())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);e!==s?(r=t=Vr(t,e)):(Cs=r,r=s);}else Cs=r,r=s;return r}function Fo(){var t;return 43===r.charCodeAt(Cs)?(t="+",Cs++):(t=s,0===hs&&Ss(at)),t===s&&(45===r.charCodeAt(Cs)?(t="-",Cs++):(t=s,0===hs&&Ss(it))),t}function Po(){var r,t,e,n,u,o,a,i;if(r=Cs,(t=Go())!==s){for(e=[],n=Cs,(u=Fi())!==s&&(o=Ho())!==s&&(a=Fi())!==s&&(i=Go())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);n!==s;)e.push(n),n=Cs,(u=Fi())!==s&&(o=Ho())!==s&&(a=Fi())!==s&&(i=Go())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);e!==s?(r=t=cc(t,e)):(Cs=r,r=s);}else Cs=r,r=s;return r}function Ho(){var t;return 42===r.charCodeAt(Cs)?(t="*",Cs++):(t=s,0===hs&&Ss(ct)),t===s&&(47===r.charCodeAt(Cs)?(t="/",Cs++):(t=s,0===hs&&Ss(lt)),t===s&&(37===r.charCodeAt(Cs)?(t="%",Cs++):(t=s,0===hs&&Ss(ft)))),t}function Go(){var t,e,n,u,o,a,i,c,l,f,b,v;if((t=function(){var t,e,n,u,o,a,i,c;t=Cs,(e=Qo())===s&&(e=zo())===s&&(e=Jo())===s&&(e=No())===s&&(e=Io())===s&&(e=jo())===s&&(e=Zo());e!==s&&Ei()!==s&&(n=ec())!==s?(t=e={type:"cast",expr:e,symbol:"::",target:n}):(Cs=t,t=s);t===s&&(t=Cs,(e=Ja())!==s&&Fi()!==s&&(n=Oi())!==s&&Fi()!==s&&(u=_o())!==s&&Fi()!==s&&Ra()!==s&&Fi()!==s&&(o=ec())!==s&&Fi()!==s&&(a=xi())!==s?(e=function(r,t){return {type:"cast",expr:r,symbol:"as",target:t}}(u,o),t=e):(Cs=t,t=s),t===s&&(t=Cs,(e=Ja())!==s&&Fi()!==s&&(n=Oi())!==s&&Fi()!==s&&(u=_o())!==s&&Fi()!==s&&Ra()!==s&&Fi()!==s&&(o=ei())!==s&&Fi()!==s&&(a=Oi())!==s&&Fi()!==s&&(i=aa())!==s&&Fi()!==s&&xi()!==s&&Fi()!==s&&(c=xi())!==s?(e=function(r,t){return {type:"cast",expr:r,symbol:"as",target:{dataType:"DECIMAL("+t+")"}}}(u,i),t=e):(Cs=t,t=s),t===s&&(t=Cs,(e=Ja())!==s&&Fi()!==s&&(n=Oi())!==s&&Fi()!==s&&(u=_o())!==s&&Fi()!==s&&Ra()!==s&&Fi()!==s&&(o=ei())!==s&&Fi()!==s&&(a=Oi())!==s&&Fi()!==s&&(i=aa())!==s&&Fi()!==s&&_i()!==s&&Fi()!==s&&(c=aa())!==s&&Fi()!==s&&xi()!==s&&Fi()!==s&&xi()!==s?(e=function(r,t,e){return {type:"cast",expr:r,symbol:"as",target:{dataType:"DECIMAL("+t+", "+e+")"}}}(u,i,c),t=e):(Cs=t,t=s),t===s&&(t=Cs,(e=Ja())!==s&&Fi()!==s&&(n=Oi())!==s&&Fi()!==s&&(u=_o())!==s&&Fi()!==s&&Ra()!==s&&Fi()!==s&&(o=function(){var t;(t=function(){var t,e,n,u;t=Cs,"signed"===r.substr(Cs,6).toLowerCase()?(e=r.substr(Cs,6),Cs+=6):(e=s,0===hs&&Ss(Kn));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="SIGNED"):(Cs=t,t=s)):(Cs=t,t=s);return t}())===s&&(t=ni());return t}())!==s&&Fi()!==s?((a=si())===s&&(a=null),a!==s&&Fi()!==s&&(i=xi())!==s?(e=function(r,t,e){return {type:"cast",expr:r,symbol:"as",target:{dataType:t+(e?" "+e:"")}}}(u,o,a),t=e):(Cs=t,t=s)):(Cs=t,t=s)))));return t}())===s&&(t=Qo())===s&&(t=zo())===s&&(t=Jo())===s&&(t=No())===s&&(t=Io())===s&&(t=jo())===s&&(t=Zo())===s){if(t=Cs,Oi()!==s)if((e=Fi())!==s)if((n=_o())!==s)if(Fi()!==s)if(xi()!==s){for(u=[],o=Cs,(a=Pi())!==s?((i=Ka())===s&&(i=qa()),i!==s&&(c=Fi())!==s&&(l=Oo())!==s?o=a=[a,i,c,l]:(Cs=o,o=s)):(Cs=o,o=s);o!==s;)u.push(o),o=Cs,(a=Pi())!==s?((i=Ka())===s&&(i=qa()),i!==s&&(c=Fi())!==s&&(l=Oo())!==s?o=a=[a,i,c,l]:(Cs=o,o=s)):(Cs=o,o=s);u!==s?(v=u,(b=n).parentheses=!0,t=v&&0!==v.length?cc(b,v):b):(Cs=t,t=s);}else Cs=t,t=s;else Cs=t,t=s;else Cs=t,t=s;else Cs=t,t=s;else Cs=t,t=s;t===s&&(t=Cs,Oi()!==s&&(e=Fi())!==s&&(n=So())!==s&&Fi()!==s&&xi()!==s?((f=n).parentheses=!0,t=f):(Cs=t,t=s),t===s&&(t=rc())===s&&(t=Cs,Fi()!==s?(36===r.charCodeAt(Cs)?(e="$",Cs++):(e=s,0===hs&&Ss(bt)),e!==s&&(n=oa())!==s?(t={type:"origin",value:"$"+n.value}):(Cs=t,t=s)):(Cs=t,t=s)));}return t}function jo(){var t,e,n,u,o,a,i,c,l;return t=Cs,(e=Yo())!==s&&(n=Fi())!==s&&(u=Ri())!==s&&(o=Fi())!==s&&(a=gi())!==s?(c=e,Cc.add(`select::${c}::(.*)`),t=e={type:"column_ref",table:c,column:"*"}):(Cs=t,t=s),t===s&&(t=Cs,e=Cs,(n=Yo())!==s&&(u=Fi())!==s&&(o=Ri())!==s?e=n=[n,u,o]:(Cs=e,e=s),e===s&&(e=null),e!==s&&(n=Fi())!==s&&(u=Xo())!==s&&(o=Fi())!==s?((a=function(){var t;"->>"===r.substr(Cs,3)?(t="->>",Cs+=3):(t=s,0===hs&&Ss(us));return t}())===s&&(a=function(){var t;"->"===r.substr(Cs,2)?(t="->",Cs+=2):(t=s,0===hs&&Ss(ns));return t}()),a!==s&&Fi()!==s?((i=ea())===s&&(i=oa()),i!==s?(t=e=function(r,t,e,n){const u=r&&r[0]||null;return Cc.add(`select::${u}::${t}`),{type:"column_ref",table:u,column:t,arrow:e,property:n}}(e,u,a,i)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s),t===s&&(t=Cs,(e=Yo())!==s&&(n=Fi())!==s&&(u=Ri())!==s&&(o=Fi())!==s&&(a=Xo())!==s?(t=e=function(r,t){return Cc.add(`select::${r}::${t}`),{type:"column_ref",table:r,column:t}}(e,a)):(Cs=t,t=s),t===s&&(t=Cs,(e=Xo())!==s&&(l=e,Cc.add("select::null::"+l),e={type:"column_ref",table:null,column:l}),t=e))),t}function Yo(){var r,t;return r=Cs,(t=Wo())!==s?((vt(t)?s:void 0)!==s?(r=t=t):(Cs=r,r=s)):(Cs=r,r=s),r===s&&(r=Cs,(t=Bo())!==s&&(t=t),r=t),r}function Bo(){var t;return (t=function(){var t,e,n,u;t=Cs,34===r.charCodeAt(Cs)?(e='"',Cs++):(e=s,0===hs&&Ss(dt));if(e!==s){if(n=[],Lt.test(r.charAt(Cs))?(u=r.charAt(Cs),Cs++):(u=s,0===hs&&Ss(Ct)),u!==s)for(;u!==s;)n.push(u),Lt.test(r.charAt(Cs))?(u=r.charAt(Cs),Cs++):(u=s,0===hs&&Ss(Ct));else n=s;n!==s?(34===r.charCodeAt(Cs)?(u='"',Cs++):(u=s,0===hs&&Ss(dt)),u!==s?(e=pt(n),t=e):(Cs=t,t=s)):(Cs=t,t=s);}else Cs=t,t=s;return t}())===s&&(t=function(){var t,e,n,u;t=Cs,39===r.charCodeAt(Cs)?(e="'",Cs++):(e=s,0===hs&&Ss(hr));if(e!==s){if(n=[],wt.test(r.charAt(Cs))?(u=r.charAt(Cs),Cs++):(u=s,0===hs&&Ss(Et)),u!==s)for(;u!==s;)n.push(u),wt.test(r.charAt(Cs))?(u=r.charAt(Cs),Cs++):(u=s,0===hs&&Ss(Et));else n=s;n!==s?(39===r.charCodeAt(Cs)?(u="'",Cs++):(u=s,0===hs&&Ss(hr)),u!==s?(e=pt(n),t=e):(Cs=t,t=s)):(Cs=t,t=s);}else Cs=t,t=s;return t}())===s&&(t=function(){var t,e,n,u;t=Cs,96===r.charCodeAt(Cs)?(e="`",Cs++):(e=s,0===hs&&Ss(ht));if(e!==s){if(n=[],At.test(r.charAt(Cs))?(u=r.charAt(Cs),Cs++):(u=s,0===hs&&Ss(yt)),u!==s)for(;u!==s;)n.push(u),At.test(r.charAt(Cs))?(u=r.charAt(Cs),Cs++):(u=s,0===hs&&Ss(yt));else n=s;n!==s?(96===r.charCodeAt(Cs)?(u="`",Cs++):(u=s,0===hs&&Ss(ht)),u!==s?(e=pt(n),t=e):(Cs=t,t=s)):(Cs=t,t=s);}else Cs=t,t=s;return t}()),t}function Xo(){var r,t;return r=Cs,(t=function(){var r,t,e,n;if(r=Cs,(t=Vo())!==s){for(e=[],n=qo();n!==s;)e.push(n),n=qo();e!==s?(t=t+e.join(""),r=t):(Cs=r,r=s);}else Cs=r,r=s;return r}())!==s?((vt(t)?s:void 0)!==s?(r=t=t):(Cs=r,r=s)):(Cs=r,r=s),r===s&&(r=Bo()),r}function Wo(){var r,t,e,n;if(r=Cs,(t=Vo())!==s){for(e=[],n=Ko();n!==s;)e.push(n),n=Ko();e!==s?(r=t=t+e.join("")):(Cs=r,r=s);}else Cs=r,r=s;return r}function Vo(){var t;return Tt.test(r.charAt(Cs))?(t=r.charAt(Cs),Cs++):(t=s,0===hs&&Ss(mt)),t}function Ko(){var t;return St.test(r.charAt(Cs))?(t=r.charAt(Cs),Cs++):(t=s,0===hs&&Ss(It)),t}function qo(){var t;return Nt.test(r.charAt(Cs))?(t=r.charAt(Cs),Cs++):(t=s,0===hs&&Ss(Rt)),t}function Zo(){var e,n,u;return e=Cs,58===r.charCodeAt(Cs)?(n=":",Cs++):(n=s,0===hs&&Ss(_t)),n!==s&&(u=Wo())!==s?e=n=[n,u]:(Cs=e,e=s),e!==s&&(e={type:"param",value:e[1]}),e}function zo(){var t;return (t=function(){var t,e,n;t=Cs,(e=function(){var t,e,n,u;t=Cs,"count"===r.substr(Cs,5).toLowerCase()?(e=r.substr(Cs,5),Cs+=5):(e=s,0===hs&&Ss(Tn));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="COUNT"):(Cs=t,t=s)):(Cs=t,t=s);return t}())!==s&&Fi()!==s&&Oi()!==s&&Fi()!==s&&(n=function(){var t,e,n;t=Cs,(e=function(){var e;42===r.charCodeAt(Cs)?(e="*",Cs++):(e=s,0===hs&&Ss(ct));e!==s&&(e={type:"star",value:"*"});return e}())!==s&&(e={expr:e});(t=e)===s&&(t=Cs,(e=Ga())===s&&(e=null),e!==s&&Fi()!==s&&(n=jo())!==s?(t=e={distinct:e,expr:n}):(Cs=t,t=s));return t}())!==s&&Fi()!==s&&xi()!==s?(t=e={type:"aggr_func",name:e,args:n}):(Cs=t,t=s);return t}())===s&&(t=function(){var t,e,n,u,o,a,i,c;t=Cs,(e=function(){var t;(t=function(){var t,e,n,u;t=Cs,"sum"===r.substr(Cs,3).toLowerCase()?(e=r.substr(Cs,3),Cs+=3):(e=s,0===hs&&Ss(In));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="SUM"):(Cs=t,t=s)):(Cs=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Cs,"max"===r.substr(Cs,3).toLowerCase()?(e=r.substr(Cs,3),Cs+=3):(e=s,0===hs&&Ss(mn));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="MAX"):(Cs=t,t=s)):(Cs=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Cs,"min"===r.substr(Cs,3).toLowerCase()?(e=r.substr(Cs,3),Cs+=3):(e=s,0===hs&&Ss(Sn));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="MIN"):(Cs=t,t=s)):(Cs=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Cs,"avg"===r.substr(Cs,3).toLowerCase()?(e=r.substr(Cs,3),Cs+=3):(e=s,0===hs&&Ss(Nn));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="AVG"):(Cs=t,t=s)):(Cs=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Cs,"collect"===r.substr(Cs,7).toLowerCase()?(e=r.substr(Cs,7),Cs+=7):(e=s,0===hs&&Ss(Rn));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="COLLECT"):(Cs=t,t=s)):(Cs=t,t=s);return t}());return t}())!==s&&Fi()!==s&&Oi()!==s&&Fi()!==s?((n=Ga())===s&&(n=null),n!==s&&(u=Fi())!==s&&(o=$o())!==s&&(a=Fi())!==s&&(i=xi())!==s?(t=e={type:"aggr_func",name:e,args:{expr:o,distinct:n}}):(Cs=t,t=s)):(Cs=t,t=s);t===s&&(t=Cs,(e=function(){var t;(t=function(){var t,e,n,u;t=Cs,"rank"===r.substr(Cs,4).toLowerCase()?(e=r.substr(Cs,4),Cs+=4):(e=s,0===hs&&Ss(_n));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="RANK"):(Cs=t,t=s)):(Cs=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Cs,"dense_rank"===r.substr(Cs,10).toLowerCase()?(e=r.substr(Cs,10),Cs+=10):(e=s,0===hs&&Ss(gn));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="DENSE_RANK"):(Cs=t,t=s)):(Cs=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Cs,"row_number"===r.substr(Cs,10).toLowerCase()?(e=r.substr(Cs,10),Cs+=10):(e=s,0===hs&&Ss(xn));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="ROW_NUMBER"):(Cs=t,t=s)):(Cs=t,t=s);return t}());return t}())!==s&&Fi()!==s&&Oi()!==s&&Fi()!==s&&(n=xi())!==s?(e=function(r){return {type:"aggr_func",name:r}}(e),t=e):(Cs=t,t=s),t===s&&(t=Cs,(e=function(){var t,e,n,u;t=Cs,"listagg"===r.substr(Cs,7).toLowerCase()?(e=r.substr(Cs,7),Cs+=7):(e=s,0===hs&&Ss(On));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="LISTAGG"):(Cs=t,t=s)):(Cs=t,t=s);return t}())!==s&&Fi()!==s&&Oi()!==s&&Fi()!==s&&(n=$o())!==s?(u=Cs,(o=Fi())!==s&&(a=_i())!==s&&(i=Fi())!==s&&(c=ea())!==s?u=o=[o,a,i,c]:(Cs=u,u=s),u===s&&(u=null),u!==s&&(o=Fi())!==s&&(a=xi())!==s?(e=function(r,t,e){return {type:"aggr_func",name:r,args:{expr:t,separator:e}}}(e,n,u),t=e):(Cs=t,t=s)):(Cs=t,t=s)));return t}()),t}function Jo(){var t,e,n;return t=Cs,(e=zi())!==s&&Fi()!==s&&Oi()!==s&&Fi()!==s?((n=So())===s&&(n=null),n!==s&&Fi()!==s&&xi()!==s?(t=e={type:"function",name:e,args:n||{type:"expr_list",value:[]}}):(Cs=t,t=s)):(Cs=t,t=s),t===s&&(t=Cs,(e=function(){var t;(t=function(){var t,e,n,u;t=Cs,"current_date"===r.substr(Cs,12).toLowerCase()?(e=r.substr(Cs,12),Cs+=12):(e=s,0===hs&&Ss(hu));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="CURRENT_DATE"):(Cs=t,t=s)):(Cs=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Cs,"current_time"===r.substr(Cs,12).toLowerCase()?(e=r.substr(Cs,12),Cs+=12):(e=s,0===hs&&Ss(yu));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="CURRENT_TIME"):(Cs=t,t=s)):(Cs=t,t=s);return t}())===s&&(t=pi())===s&&(t=function(){var t,e,n,u;t=Cs,"current_user"===r.substr(Cs,12).toLowerCase()?(e=r.substr(Cs,12),Cs+=12):(e=s,0===hs&&Ss(mu));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="CURRENT_USER"):(Cs=t,t=s)):(Cs=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Cs,"user"===r.substr(Cs,4).toLowerCase()?(e=r.substr(Cs,4),Cs+=4):(e=s,0===hs&&Ss(Cu));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="USER"):(Cs=t,t=s)):(Cs=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Cs,"session_user"===r.substr(Cs,12).toLowerCase()?(e=r.substr(Cs,12),Cs+=12):(e=s,0===hs&&Ss(Su));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="SESSION_USER"):(Cs=t,t=s)):(Cs=t,t=s);return t}())===s&&(t=function(){var t,e,n,u;t=Cs,"system_user"===r.substr(Cs,11).toLowerCase()?(e=r.substr(Cs,11),Cs+=11):(e=s,0===hs&&Ss(Iu));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="SYSTEM_USER"):(Cs=t,t=s)):(Cs=t,t=s);return t}());return t}())!==s&&Fi()!==s&&Oi()!==s&&Fi()!==s?((n=So())===s&&(n=null),n!==s&&Fi()!==s&&xi()!==s?(t=e=function(r,t){return {type:"function",name:r,args:t||{type:"expr_list",value:[]},over:bc}}(e,n)):(Cs=t,t=s)):(Cs=t,t=s),t===s&&(t=function(){var t,e,n,u,o;t=Cs,(e=function(){var t,e,n,u;t=Cs,"extract"===r.substr(Cs,7).toLowerCase()?(e=r.substr(Cs,7),Cs+=7):(e=s,0===hs&&Ss(Un));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="EXTRACT"):(Cs=t,t=s)):(Cs=t,t=s);return t}())!==s&&Fi()!==s&&Oi()!==s&&Fi()!==s&&(n=function(){var t,e;"century"===r.substr(Cs,7).toLowerCase()?(t=r.substr(Cs,7),Cs+=7):(t=s,0===hs&&Ss(gt));t===s&&("day"===r.substr(Cs,3).toLowerCase()?(t=r.substr(Cs,3),Cs+=3):(t=s,0===hs&&Ss(Ot)),t===s&&("decade"===r.substr(Cs,6).toLowerCase()?(t=r.substr(Cs,6),Cs+=6):(t=s,0===hs&&Ss(xt)),t===s&&("dow"===r.substr(Cs,3).toLowerCase()?(t=r.substr(Cs,3),Cs+=3):(t=s,0===hs&&Ss(Ut)),t===s&&("doy"===r.substr(Cs,3).toLowerCase()?(t=r.substr(Cs,3),Cs+=3):(t=s,0===hs&&Ss(Mt)),t===s&&("epoch"===r.substr(Cs,5).toLowerCase()?(t=r.substr(Cs,5),Cs+=5):(t=s,0===hs&&Ss(Dt)),t===s&&("hour"===r.substr(Cs,4).toLowerCase()?(t=r.substr(Cs,4),Cs+=4):(t=s,0===hs&&Ss(kt)),t===s&&("isodow"===r.substr(Cs,6).toLowerCase()?(t=r.substr(Cs,6),Cs+=6):(t=s,0===hs&&Ss($t)),t===s&&("isoyear"===r.substr(Cs,7).toLowerCase()?(t=r.substr(Cs,7),Cs+=7):(t=s,0===hs&&Ss(Ft)),t===s&&("microseconds"===r.substr(Cs,12).toLowerCase()?(t=r.substr(Cs,12),Cs+=12):(t=s,0===hs&&Ss(Pt)),t===s&&("millennium"===r.substr(Cs,10).toLowerCase()?(t=r.substr(Cs,10),Cs+=10):(t=s,0===hs&&Ss(Ht)),t===s&&("milliseconds"===r.substr(Cs,12).toLowerCase()?(t=r.substr(Cs,12),Cs+=12):(t=s,0===hs&&Ss(Gt)),t===s&&("minute"===r.substr(Cs,6).toLowerCase()?(t=r.substr(Cs,6),Cs+=6):(t=s,0===hs&&Ss(jt)),t===s&&("month"===r.substr(Cs,5).toLowerCase()?(t=r.substr(Cs,5),Cs+=5):(t=s,0===hs&&Ss(Yt)),t===s&&("quarter"===r.substr(Cs,7).toLowerCase()?(t=r.substr(Cs,7),Cs+=7):(t=s,0===hs&&Ss(Bt)),t===s&&("second"===r.substr(Cs,6).toLowerCase()?(t=r.substr(Cs,6),Cs+=6):(t=s,0===hs&&Ss(Xt)),t===s&&("timezone"===r.substr(Cs,8).toLowerCase()?(t=r.substr(Cs,8),Cs+=8):(t=s,0===hs&&Ss(Wt)),t===s&&("timezone_hour"===r.substr(Cs,13).toLowerCase()?(t=r.substr(Cs,13),Cs+=13):(t=s,0===hs&&Ss(Vt)),t===s&&("timezone_minute"===r.substr(Cs,15).toLowerCase()?(t=r.substr(Cs,15),Cs+=15):(t=s,0===hs&&Ss(Kt)),t===s&&("week"===r.substr(Cs,4).toLowerCase()?(t=r.substr(Cs,4),Cs+=4):(t=s,0===hs&&Ss(qt)),t===s&&(t=Cs,"year"===r.substr(Cs,4).toLowerCase()?(e=r.substr(Cs,4),Cs+=4):(e=s,0===hs&&Ss(Zt)),e!==s&&(e=f),t=e))))))))))))))))))));return t}())!==s&&Fi()!==s&&Ia()!==s&&Fi()!==s?((u=di())===s&&(u=Ci())===s&&(u=vi())===s&&(u=fi()),u===s&&(u=null),u!==s&&Fi()!==s&&(o=_o())!==s&&Fi()!==s&&xi()!==s?(e=function(r,t,e,n){return {type:r.toLowerCase(),args:{field:t,cast_type:e,source:n}}}(e,n,u,o),t=e):(Cs=t,t=s)):(Cs=t,t=s);return t}())),t}function Qo(){var t;return (t=ea())===s&&(t=oa())===s&&(t=function(){var t,e;t=Cs,(e=function(){var t,e,n,u;t=Cs,"true"===r.substr(Cs,4).toLowerCase()?(e=r.substr(Cs,4),Cs+=4):(e=s,0===hs&&Ss(Ie));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s);return t}())!==s&&(e={type:"bool",value:!0});(t=e)===s&&(t=Cs,(e=function(){var t,e,n,u;t=Cs,"false"===r.substr(Cs,5).toLowerCase()?(e=r.substr(Cs,5),Cs+=5):(e=s,0===hs&&Ss(Re));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s);return t}())!==s&&(e={type:"bool",value:!1}),t=e);return t}())===s&&(t=ra())===s&&(t=function(){var t,e,n,u,o,a,i;t=Cs,(e=vi())===s&&(e=fi())===s&&(e=di())===s&&(e=bi());if(e!==s)if(Fi()!==s){if(n=Cs,39===r.charCodeAt(Cs)?(u="'",Cs++):(u=s,0===hs&&Ss(hr)),u!==s){for(o=[],a=ua();a!==s;)o.push(a),a=ua();o!==s?(39===r.charCodeAt(Cs)?(a="'",Cs++):(a=s,0===hs&&Ss(hr)),a!==s?n=u=[u,o,a]:(Cs=n,n=s)):(Cs=n,n=s);}else Cs=n,n=s;n!==s?(c=n,e={type:e.toLowerCase(),value:c[1].join("")},t=e):(Cs=t,t=s);}else Cs=t,t=s;else Cs=t,t=s;var c;if(t===s){if(t=Cs,(e=vi())===s&&(e=fi())===s&&(e=di())===s&&(e=bi()),e!==s)if(Fi()!==s){if(n=Cs,34===r.charCodeAt(Cs)?(u='"',Cs++):(u=s,0===hs&&Ss(dt)),u!==s){for(o=[],a=na();a!==s;)o.push(a),a=na();o!==s?(34===r.charCodeAt(Cs)?(a='"',Cs++):(a=s,0===hs&&Ss(dt)),a!==s?n=u=[u,o,a]:(Cs=n,n=s)):(Cs=n,n=s);}else Cs=n,n=s;n!==s?(e=function(r,t){return {type:r.toLowerCase(),value:t[1].join("")}}(e,n),t=e):(Cs=t,t=s);}else Cs=t,t=s;else Cs=t,t=s;t===s&&(t=Cs,(e=pi())!==s&&Fi()!==s?((n=Oi())===s&&(n=null),n!==s&&(u=Fi())!==s?((o=xi())===s&&(o=null),o!==s?((a=(a=function(r,t,e){if(t&&e)return !0}(0,n,o))?s:void 0)!==s&&Fi()!==s?("on update current_timestamp"===r.substr(Cs,27).toLowerCase()?(i=r.substr(Cs,27),Cs+=27):(i=s,0===hs&&Ss(zt)),i===s&&(i=null),i!==s?(e=function(r,t,e,n){return {type:"origin",value:(n?`${r} ${n}`:r).toLowerCase()}}(e,0,0,i),t=e):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s)):(Cs=t,t=s));}return t}()),t}function ra(){var e;return (e=function(){var t,e,n,u;t=Cs,"null"===r.substr(Cs,4).toLowerCase()?(e=r.substr(Cs,4),Cs+=4):(e=s,0===hs&&Ss(me));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s);return t}())!==s&&(e={type:"null",value:null}),e}function ta(){var e;return (e=function(){var t,e,n,u;t=Cs,"not null"===r.substr(Cs,8).toLowerCase()?(e=r.substr(Cs,8),Cs+=8):(e=s,0===hs&&Ss(Se));e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s);return t}())!==s&&(e={type:"not null",value:"not null"}),e}function ea(){var t,e,n,u,o;if(t=Cs,e=Cs,39===r.charCodeAt(Cs)?(n="'",Cs++):(n=s,0===hs&&Ss(hr)),n!==s){for(u=[],o=ua();o!==s;)u.push(o),o=ua();u!==s?(39===r.charCodeAt(Cs)?(o="'",Cs++):(o=s,0===hs&&Ss(hr)),o!==s?e=n=[n,u,o]:(Cs=e,e=s)):(Cs=e,e=s);}else Cs=e,e=s;if(e!==s&&(e={type:"single_quote_string",value:e[1].join("")}),(t=e)===s){if(t=Cs,e=Cs,34===r.charCodeAt(Cs)?(n='"',Cs++):(n=s,0===hs&&Ss(dt)),n!==s){for(u=[],o=na();o!==s;)u.push(o),o=na();u!==s?(34===r.charCodeAt(Cs)?(o='"',Cs++):(o=s,0===hs&&Ss(dt)),o!==s?e=n=[n,u,o]:(Cs=e,e=s)):(Cs=e,e=s);}else Cs=e,e=s;e!==s?(n=Cs,hs++,u=Ri(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e=function(r){return {type:"string",value:r[1].join("")}}(e)):(Cs=t,t=s)):(Cs=t,t=s);}return t}function na(){var t;return Jt.test(r.charAt(Cs))?(t=r.charAt(Cs),Cs++):(t=s,0===hs&&Ss(Qt)),t===s&&(t=sa()),t}function ua(){var t;return re.test(r.charAt(Cs))?(t=r.charAt(Cs),Cs++):(t=s,0===hs&&Ss(te)),t===s&&(t=sa()),t}function sa(){var t,e,n,u,o,a,i,c,l,f;return t=Cs,"\\'"===r.substr(Cs,2)?(e="\\'",Cs+=2):(e=s,0===hs&&Ss(ee)),e!==s&&(e="'"),(t=e)===s&&(t=Cs,'\\"'===r.substr(Cs,2)?(e='\\"',Cs+=2):(e=s,0===hs&&Ss(ne)),e!==s&&(e='"'),(t=e)===s&&(t=Cs,"\\\\"===r.substr(Cs,2)?(e="\\\\",Cs+=2):(e=s,0===hs&&Ss(ue)),e!==s&&(e="\\"),(t=e)===s&&(t=Cs,"\\/"===r.substr(Cs,2)?(e="\\/",Cs+=2):(e=s,0===hs&&Ss(se)),e!==s&&(e="/"),(t=e)===s&&(t=Cs,"\\b"===r.substr(Cs,2)?(e="\\b",Cs+=2):(e=s,0===hs&&Ss(oe)),e!==s&&(e="\b"),(t=e)===s&&(t=Cs,"\\f"===r.substr(Cs,2)?(e="\\f",Cs+=2):(e=s,0===hs&&Ss(ae)),e!==s&&(e="\f"),(t=e)===s&&(t=Cs,"\\n"===r.substr(Cs,2)?(e="\\n",Cs+=2):(e=s,0===hs&&Ss(ie)),e!==s&&(e="\n"),(t=e)===s&&(t=Cs,"\\r"===r.substr(Cs,2)?(e="\\r",Cs+=2):(e=s,0===hs&&Ss(ce)),e!==s&&(e="\r"),(t=e)===s&&(t=Cs,"\\t"===r.substr(Cs,2)?(e="\\t",Cs+=2):(e=s,0===hs&&Ss(le)),e!==s&&(e="\t"),(t=e)===s&&(t=Cs,"\\u"===r.substr(Cs,2)?(e="\\u",Cs+=2):(e=s,0===hs&&Ss(fe)),e!==s&&(n=ba())!==s&&(u=ba())!==s&&(o=ba())!==s&&(a=ba())!==s?(i=n,c=u,l=o,f=a,t=e=String.fromCharCode(parseInt("0x"+i+c+l+f))):(Cs=t,t=s),t===s&&(t=Cs,92===r.charCodeAt(Cs)?(e="\\",Cs++):(e=s,0===hs&&Ss(be)),e!==s&&(e="\\"),t=e)))))))))),t}function oa(){var t,e;return (t=function(){var r,t,e,n;r=Cs,(t=aa())!==s&&(e=ia())!==s&&(n=ca())!==s?(r=t={type:"bigint",value:t+e+n}):(Cs=r,r=s);r===s&&(r=Cs,(t=aa())!==s&&(e=ia())!==s?(t=function(r,t){const e=r+t;return ac(r)?{type:"bigint",value:e}:parseFloat(e)}(t,e),r=t):(Cs=r,r=s),r===s&&(r=Cs,(t=aa())!==s&&(e=ca())!==s?(t=function(r,t){return {type:"bigint",value:r+t}}(t,e),r=t):(Cs=r,r=s),r===s&&(r=Cs,(t=aa())!==s&&(t=function(r){return ac(r)?{type:"bigint",value:r}:parseFloat(r)}(t)),r=t)));return r}())!==s&&(t=(e=t)&&"bigint"===e.type?e:{type:"number",value:e}),t}function aa(){var t,e,n;return (t=la())===s&&(t=fa())===s&&(t=Cs,45===r.charCodeAt(Cs)?(e="-",Cs++):(e=s,0===hs&&Ss(it)),e===s&&(43===r.charCodeAt(Cs)?(e="+",Cs++):(e=s,0===hs&&Ss(at))),e!==s&&(n=la())!==s?(t=e="-"+n):(Cs=t,t=s),t===s&&(t=Cs,45===r.charCodeAt(Cs)?(e="-",Cs++):(e=s,0===hs&&Ss(it)),e===s&&(43===r.charCodeAt(Cs)?(e="+",Cs++):(e=s,0===hs&&Ss(at))),e!==s&&(n=fa())!==s?(t=e="-"+n):(Cs=t,t=s))),t}function ia(){var t,e,n;return t=Cs,46===r.charCodeAt(Cs)?(e=".",Cs++):(e=s,0===hs&&Ss(Le)),e!==s&&(n=la())!==s?(t=e="."+n):(Cs=t,t=s),t}function ca(){var t,e,n;return t=Cs,(e=function(){var t,e,n;t=Cs,he.test(r.charAt(Cs))?(e=r.charAt(Cs),Cs++):(e=s,0===hs&&Ss(Ae));e!==s?(ye.test(r.charAt(Cs))?(n=r.charAt(Cs),Cs++):(n=s,0===hs&&Ss(Te)),n===s&&(n=null),n!==s?(t=e=e+(null!==(u=n)?u:"")):(Cs=t,t=s)):(Cs=t,t=s);var u;return t}())!==s&&(n=la())!==s?(t=e=e+n):(Cs=t,t=s),t}function la(){var t,e;if(t=[],(e=fa())!==s)for(;e!==s;)t.push(e),e=fa();else t=s;return t!==s&&(t=t.join("")),t}function fa(){var t;return Ce.test(r.charAt(Cs))?(t=r.charAt(Cs),Cs++):(t=s,0===hs&&Ss(pe)),t}function ba(){var t;return we.test(r.charAt(Cs))?(t=r.charAt(Cs),Cs++):(t=s,0===hs&&Ss(Ee)),t}function va(){var t,e,n,u;return t=Cs,"default"===r.substr(Cs,7).toLowerCase()?(e=r.substr(Cs,7),Cs+=7):(e=s,0===hs&&Ss(T)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s),t}function da(){var t,e,n,u;return t=Cs,"to"===r.substr(Cs,2).toLowerCase()?(e=r.substr(Cs,2),Cs+=2):(e=s,0===hs&&Ss(Ne)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s),t}function La(){var t,e,n,u;return t=Cs,"drop"===r.substr(Cs,4).toLowerCase()?(e=r.substr(Cs,4),Cs+=4):(e=s,0===hs&&Ss(_e)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="DROP"):(Cs=t,t=s)):(Cs=t,t=s),t}function Ca(){var t,e,n,u;return t=Cs,"update"===r.substr(Cs,6).toLowerCase()?(e=r.substr(Cs,6),Cs+=6):(e=s,0===hs&&Ss(j)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s),t}function pa(){var t,e,n,u;return t=Cs,"create"===r.substr(Cs,6).toLowerCase()?(e=r.substr(Cs,6),Cs+=6):(e=s,0===hs&&Ss(Ue)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s),t}function wa(){var t,e,n,u;return t=Cs,"temporary"===r.substr(Cs,9).toLowerCase()?(e=r.substr(Cs,9),Cs+=9):(e=s,0===hs&&Ss(Me)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s),t}function Ea(){var t,e,n,u;return t=Cs,"if not exists"===r.substr(Cs,13).toLowerCase()?(e=r.substr(Cs,13),Cs+=13):(e=s,0===hs&&Ss(De)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s),t}function ha(){var t,e,n,u;return t=Cs,"delete"===r.substr(Cs,6).toLowerCase()?(e=r.substr(Cs,6),Cs+=6):(e=s,0===hs&&Ss(G)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s),t}function Aa(){var t,e,n,u;return t=Cs,"insert"===r.substr(Cs,6).toLowerCase()?(e=r.substr(Cs,6),Cs+=6):(e=s,0===hs&&Ss(ke)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s),t}function ya(){var t,e,n,u;return t=Cs,"replace"===r.substr(Cs,7).toLowerCase()?(e=r.substr(Cs,7),Cs+=7):(e=s,0===hs&&Ss(Fe)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s),t}function Ta(){var t,e,n,u;return t=Cs,"rename"===r.substr(Cs,6).toLowerCase()?(e=r.substr(Cs,6),Cs+=6):(e=s,0===hs&&Ss(He)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s),t}function ma(){var t,e,n,u;return t=Cs,"partition"===r.substr(Cs,9).toLowerCase()?(e=r.substr(Cs,9),Cs+=9):(e=s,0===hs&&Ss(je)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="PARTITION"):(Cs=t,t=s)):(Cs=t,t=s),t}function Sa(){var t,e,n,u;return t=Cs,"into"===r.substr(Cs,4).toLowerCase()?(e=r.substr(Cs,4),Cs+=4):(e=s,0===hs&&Ss(Ye)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s),t}function Ia(){var t,e,n,u;return t=Cs,"from"===r.substr(Cs,4).toLowerCase()?(e=r.substr(Cs,4),Cs+=4):(e=s,0===hs&&Ss(Be)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s),t}function Na(){var t,e,n,u;return t=Cs,"set"===r.substr(Cs,3).toLowerCase()?(e=r.substr(Cs,3),Cs+=3):(e=s,0===hs&&Ss(lr)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s),t}function Ra(){var t,e,n,u;return t=Cs,"as"===r.substr(Cs,2).toLowerCase()?(e=r.substr(Cs,2),Cs+=2):(e=s,0===hs&&Ss(Xe)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s),t}function _a(){var t,e,n,u;return t=Cs,"table"===r.substr(Cs,5).toLowerCase()?(e=r.substr(Cs,5),Cs+=5):(e=s,0===hs&&Ss(We)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="TABLE"):(Cs=t,t=s)):(Cs=t,t=s),t}function ga(){var t,e,n,u;return t=Cs,"on"===r.substr(Cs,2).toLowerCase()?(e=r.substr(Cs,2),Cs+=2):(e=s,0===hs&&Ss(H)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s),t}function Oa(){var t,e,n,u;return t=Cs,"join"===r.substr(Cs,4).toLowerCase()?(e=r.substr(Cs,4),Cs+=4):(e=s,0===hs&&Ss(rn)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s),t}function xa(){var t,e,n,u;return t=Cs,"outer"===r.substr(Cs,5).toLowerCase()?(e=r.substr(Cs,5),Cs+=5):(e=s,0===hs&&Ss(tn)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s),t}function Ua(){var t,e,n,u;return t=Cs,"union"===r.substr(Cs,5).toLowerCase()?(e=r.substr(Cs,5),Cs+=5):(e=s,0===hs&&Ss(en)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s),t}function Ma(){var t,e,n,u;return t=Cs,"values"===r.substr(Cs,6).toLowerCase()?(e=r.substr(Cs,6),Cs+=6):(e=s,0===hs&&Ss(nn)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s),t}function Da(){var t,e,n,u;return t=Cs,"using"===r.substr(Cs,5).toLowerCase()?(e=r.substr(Cs,5),Cs+=5):(e=s,0===hs&&Ss(un)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s),t}function ka(){var t,e,n,u;return t=Cs,"with"===r.substr(Cs,4).toLowerCase()?(e=r.substr(Cs,4),Cs+=4):(e=s,0===hs&&Ss(Gr)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s),t}function $a(){var t,e,n,u;return t=Cs,"by"===r.substr(Cs,2).toLowerCase()?(e=r.substr(Cs,2),Cs+=2):(e=s,0===hs&&Ss(an)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s),t}function Fa(){var t,e,n,u;return t=Cs,"asc"===r.substr(Cs,3).toLowerCase()?(e=r.substr(Cs,3),Cs+=3):(e=s,0===hs&&Ss(vn)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="ASC"):(Cs=t,t=s)):(Cs=t,t=s),t}function Pa(){var t,e,n,u;return t=Cs,"desc"===r.substr(Cs,4).toLowerCase()?(e=r.substr(Cs,4),Cs+=4):(e=s,0===hs&&Ss(dn)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="DESC"):(Cs=t,t=s)):(Cs=t,t=s),t}function Ha(){var t,e,n,u;return t=Cs,"all"===r.substr(Cs,3).toLowerCase()?(e=r.substr(Cs,3),Cs+=3):(e=s,0===hs&&Ss(Ln)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="ALL"):(Cs=t,t=s)):(Cs=t,t=s),t}function Ga(){var t,e,n,u;return t=Cs,"distinct"===r.substr(Cs,8).toLowerCase()?(e=r.substr(Cs,8),Cs+=8):(e=s,0===hs&&Ss(Cn)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="DISTINCT"):(Cs=t,t=s)):(Cs=t,t=s),t}function ja(){var t,e,n,u;return t=Cs,"between"===r.substr(Cs,7).toLowerCase()?(e=r.substr(Cs,7),Cs+=7):(e=s,0===hs&&Ss(pn)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="BETWEEN"):(Cs=t,t=s)):(Cs=t,t=s),t}function Ya(){var t,e,n,u;return t=Cs,"in"===r.substr(Cs,2).toLowerCase()?(e=r.substr(Cs,2),Cs+=2):(e=s,0===hs&&Ss(mr)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="IN"):(Cs=t,t=s)):(Cs=t,t=s),t}function Ba(){var t,e,n,u;return t=Cs,"is"===r.substr(Cs,2).toLowerCase()?(e=r.substr(Cs,2),Cs+=2):(e=s,0===hs&&Ss(wn)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="IS"):(Cs=t,t=s)):(Cs=t,t=s),t}function Xa(){var t,e,n,u;return t=Cs,"like"===r.substr(Cs,4).toLowerCase()?(e=r.substr(Cs,4),Cs+=4):(e=s,0===hs&&Ss(En)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="LIKE"):(Cs=t,t=s)):(Cs=t,t=s),t}function Wa(){var t,e,n,u;return t=Cs,"exists"===r.substr(Cs,6).toLowerCase()?(e=r.substr(Cs,6),Cs+=6):(e=s,0===hs&&Ss(hn)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="EXISTS"):(Cs=t,t=s)):(Cs=t,t=s),t}function Va(){var t,e,n,u;return t=Cs,"not"===r.substr(Cs,3).toLowerCase()?(e=r.substr(Cs,3),Cs+=3):(e=s,0===hs&&Ss(tr)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="NOT"):(Cs=t,t=s)):(Cs=t,t=s),t}function Ka(){var t,e,n,u;return t=Cs,"and"===r.substr(Cs,3).toLowerCase()?(e=r.substr(Cs,3),Cs+=3):(e=s,0===hs&&Ss(An)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="AND"):(Cs=t,t=s)):(Cs=t,t=s),t}function qa(){var t,e,n,u;return t=Cs,"or"===r.substr(Cs,2).toLowerCase()?(e=r.substr(Cs,2),Cs+=2):(e=s,0===hs&&Ss(yn)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="OR"):(Cs=t,t=s)):(Cs=t,t=s),t}function Za(){var t,e,n,u;return t=Cs,"case"===r.substr(Cs,4).toLowerCase()?(e=r.substr(Cs,4),Cs+=4):(e=s,0===hs&&Ss(Dn)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s),t}function za(){var t,e,n,u;return t=Cs,"when"===r.substr(Cs,4).toLowerCase()?(e=r.substr(Cs,4),Cs+=4):(e=s,0===hs&&Ss(kn)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s),t}function Ja(){var t,e,n,u;return t=Cs,"cast"===r.substr(Cs,4).toLowerCase()?(e=r.substr(Cs,4),Cs+=4):(e=s,0===hs&&Ss(Hn)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?t=e=[e,n]:(Cs=t,t=s)):(Cs=t,t=s),t}function Qa(){var t,e,n,u;return t=Cs,"char"===r.substr(Cs,4).toLowerCase()?(e=r.substr(Cs,4),Cs+=4):(e=s,0===hs&&Ss(Yn)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="CHAR"):(Cs=t,t=s)):(Cs=t,t=s),t}function ri(){var t,e,n,u;return t=Cs,"varchar"===r.substr(Cs,7).toLowerCase()?(e=r.substr(Cs,7),Cs+=7):(e=s,0===hs&&Ss(Bn)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="VARCHAR"):(Cs=t,t=s)):(Cs=t,t=s),t}function ti(){var t,e,n,u;return t=Cs,"numeric"===r.substr(Cs,7).toLowerCase()?(e=r.substr(Cs,7),Cs+=7):(e=s,0===hs&&Ss(Wn)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="NUMERIC"):(Cs=t,t=s)):(Cs=t,t=s),t}function ei(){var t,e,n,u;return t=Cs,"decimal"===r.substr(Cs,7).toLowerCase()?(e=r.substr(Cs,7),Cs+=7):(e=s,0===hs&&Ss(Vn)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="DECIMAL"):(Cs=t,t=s)):(Cs=t,t=s),t}function ni(){var t,e,n,u;return t=Cs,"unsigned"===r.substr(Cs,8).toLowerCase()?(e=r.substr(Cs,8),Cs+=8):(e=s,0===hs&&Ss(qn)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="UNSIGNED"):(Cs=t,t=s)):(Cs=t,t=s),t}function ui(){var t,e,n,u;return t=Cs,"int"===r.substr(Cs,3).toLowerCase()?(e=r.substr(Cs,3),Cs+=3):(e=s,0===hs&&Ss(Zn)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="INT"):(Cs=t,t=s)):(Cs=t,t=s),t}function si(){var t,e,n,u;return t=Cs,"integer"===r.substr(Cs,7).toLowerCase()?(e=r.substr(Cs,7),Cs+=7):(e=s,0===hs&&Ss(Jn)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="INTEGER"):(Cs=t,t=s)):(Cs=t,t=s),t}function oi(){var t,e,n,u;return t=Cs,"smallint"===r.substr(Cs,8).toLowerCase()?(e=r.substr(Cs,8),Cs+=8):(e=s,0===hs&&Ss(eu)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="SMALLINT"):(Cs=t,t=s)):(Cs=t,t=s),t}function ai(){var t,e,n,u;return t=Cs,"tinyint"===r.substr(Cs,7).toLowerCase()?(e=r.substr(Cs,7),Cs+=7):(e=s,0===hs&&Ss(nu)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="TINYINT"):(Cs=t,t=s)):(Cs=t,t=s),t}function ii(){var t,e,n,u;return t=Cs,"bigint"===r.substr(Cs,6).toLowerCase()?(e=r.substr(Cs,6),Cs+=6):(e=s,0===hs&&Ss(iu)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="BIGINT"):(Cs=t,t=s)):(Cs=t,t=s),t}function ci(){var t,e,n,u;return t=Cs,"float"===r.substr(Cs,5).toLowerCase()?(e=r.substr(Cs,5),Cs+=5):(e=s,0===hs&&Ss(cu)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="FLOAT"):(Cs=t,t=s)):(Cs=t,t=s),t}function li(){var t,e,n,u;return t=Cs,"double"===r.substr(Cs,6).toLowerCase()?(e=r.substr(Cs,6),Cs+=6):(e=s,0===hs&&Ss(lu)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="DOUBLE"):(Cs=t,t=s)):(Cs=t,t=s),t}function fi(){var t,e,n,u;return t=Cs,"date"===r.substr(Cs,4).toLowerCase()?(e=r.substr(Cs,4),Cs+=4):(e=s,0===hs&&Ss(fu)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="DATE"):(Cs=t,t=s)):(Cs=t,t=s),t}function bi(){var t,e,n,u;return t=Cs,"datetime"===r.substr(Cs,8).toLowerCase()?(e=r.substr(Cs,8),Cs+=8):(e=s,0===hs&&Ss(bu)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="DATETIME"):(Cs=t,t=s)):(Cs=t,t=s),t}function vi(){var t,e,n,u;return t=Cs,"time"===r.substr(Cs,4).toLowerCase()?(e=r.substr(Cs,4),Cs+=4):(e=s,0===hs&&Ss(vu)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="TIME"):(Cs=t,t=s)):(Cs=t,t=s),t}function di(){var t,e,n,u;return t=Cs,"timestamp"===r.substr(Cs,9).toLowerCase()?(e=r.substr(Cs,9),Cs+=9):(e=s,0===hs&&Ss(du)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="TIMESTAMP"):(Cs=t,t=s)):(Cs=t,t=s),t}function Li(){var t,e,n,u;return t=Cs,"truncate"===r.substr(Cs,8).toLowerCase()?(e=r.substr(Cs,8),Cs+=8):(e=s,0===hs&&Ss(Lu)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="TRUNCATE"):(Cs=t,t=s)):(Cs=t,t=s),t}function Ci(){var t,e,n,u;return t=Cs,"interval"===r.substr(Cs,8).toLowerCase()?(e=r.substr(Cs,8),Cs+=8):(e=s,0===hs&&Ss(Au)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="INTERVAL"):(Cs=t,t=s)):(Cs=t,t=s),t}function pi(){var t,e,n,u;return t=Cs,"current_timestamp"===r.substr(Cs,17).toLowerCase()?(e=r.substr(Cs,17),Cs+=17):(e=s,0===hs&&Ss(Tu)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="CURRENT_TIMESTAMP"):(Cs=t,t=s)):(Cs=t,t=s),t}function wi(){var t;return (t=function(){var t;return "@@"===r.substr(Cs,2)?(t="@@",Cs+=2):(t=s,0===hs&&Ss(Uu)),t}())===s&&(t=function(){var t;return 64===r.charCodeAt(Cs)?(t="@",Cs++):(t=s,0===hs&&Ss(xu)),t}())===s&&(t=function(){var t;return 36===r.charCodeAt(Cs)?(t="$",Cs++):(t=s,0===hs&&Ss(bt)),t}()),t}function Ei(){var t;return "::"===r.substr(Cs,2)?(t="::",Cs+=2):(t=s,0===hs&&Ss(ku)),t}function hi(){var t;return 61===r.charCodeAt(Cs)?(t="=",Cs++):(t=s,0===hs&&Ss(Wr)),t}function Ai(){var t,e,n,u;return t=Cs,"add"===r.substr(Cs,3).toLowerCase()?(e=r.substr(Cs,3),Cs+=3):(e=s,0===hs&&Ss(Fu)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="ADD"):(Cs=t,t=s)):(Cs=t,t=s),t}function yi(){var t,e,n,u;return t=Cs,"column"===r.substr(Cs,6).toLowerCase()?(e=r.substr(Cs,6),Cs+=6):(e=s,0===hs&&Ss(Pu)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="COLUMN"):(Cs=t,t=s)):(Cs=t,t=s),t}function Ti(){var t,e,n,u;return t=Cs,"index"===r.substr(Cs,5).toLowerCase()?(e=r.substr(Cs,5),Cs+=5):(e=s,0===hs&&Ss(Hu)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="INDEX"):(Cs=t,t=s)):(Cs=t,t=s),t}function mi(){var t,e,n,u;return t=Cs,"key"===r.substr(Cs,3).toLowerCase()?(e=r.substr(Cs,3),Cs+=3):(e=s,0===hs&&Ss(E)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="KEY"):(Cs=t,t=s)):(Cs=t,t=s),t}function Si(){var t,e,n,u;return t=Cs,"unique"===r.substr(Cs,6).toLowerCase()?(e=r.substr(Cs,6),Cs+=6):(e=s,0===hs&&Ss(p)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="UNIQUE"):(Cs=t,t=s)):(Cs=t,t=s),t}function Ii(){var t,e,n,u;return t=Cs,"comment"===r.substr(Cs,7).toLowerCase()?(e=r.substr(Cs,7),Cs+=7):(e=s,0===hs&&Ss(Yu)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="COMMENT"):(Cs=t,t=s)):(Cs=t,t=s),t}function Ni(){var t,e,n,u;return t=Cs,"constraint"===r.substr(Cs,10).toLowerCase()?(e=r.substr(Cs,10),Cs+=10):(e=s,0===hs&&Ss(Bu)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="CONSTRAINT"):(Cs=t,t=s)):(Cs=t,t=s),t}function Ri(){var t;return 46===r.charCodeAt(Cs)?(t=".",Cs++):(t=s,0===hs&&Ss(Le)),t}function _i(){var t;return 44===r.charCodeAt(Cs)?(t=",",Cs++):(t=s,0===hs&&Ss(Qu)),t}function gi(){var t;return 42===r.charCodeAt(Cs)?(t="*",Cs++):(t=s,0===hs&&Ss(ct)),t}function Oi(){var t;return 40===r.charCodeAt(Cs)?(t="(",Cs++):(t=s,0===hs&&Ss(Mr)),t}function xi(){var t;return 41===r.charCodeAt(Cs)?(t=")",Cs++):(t=s,0===hs&&Ss(Dr)),t}function Ui(){var t;return 60===r.charCodeAt(Cs)?(t="<",Cs++):(t=s,0===hs&&Ss(Qr)),t}function Mi(){var t;return 62===r.charCodeAt(Cs)?(t=">",Cs++):(t=s,0===hs&&Ss(Zr)),t}function Di(){var t;return 59===r.charCodeAt(Cs)?(t=";",Cs++):(t=s,0===hs&&Ss(es)),t}function ki(){var t;return "||"===r.substr(Cs,2)?(t="||",Cs+=2):(t=s,0===hs&&Ss(as)),t}function $i(){var t;return (t=ki())===s&&(t=function(){var t;return "&&"===r.substr(Cs,2)?(t="&&",Cs+=2):(t=s,0===hs&&Ss(is)),t}()),t}function Fi(){var r,t;for(r=[],(t=Yi())===s&&(t=Hi());t!==s;)r.push(t),(t=Yi())===s&&(t=Hi());return r}function Pi(){var r,t;if(r=[],(t=Yi())===s&&(t=Hi()),t!==s)for(;t!==s;)r.push(t),(t=Yi())===s&&(t=Hi());else r=s;return r}function Hi(){var t;return (t=function(){var t,e,n,u,o,a;t=Cs,"/*"===r.substr(Cs,2)?(e="/*",Cs+=2):(e=s,0===hs&&Ss(cs));if(e!==s){for(n=[],u=Cs,o=Cs,hs++,"*/"===r.substr(Cs,2)?(a="*/",Cs+=2):(a=s,0===hs&&Ss(ls)),hs--,a===s?o=void 0:(Cs=o,o=s),o!==s&&(a=ji())!==s?u=o=[o,a]:(Cs=u,u=s);u!==s;)n.push(u),u=Cs,o=Cs,hs++,"*/"===r.substr(Cs,2)?(a="*/",Cs+=2):(a=s,0===hs&&Ss(ls)),hs--,a===s?o=void 0:(Cs=o,o=s),o!==s&&(a=ji())!==s?u=o=[o,a]:(Cs=u,u=s);n!==s?("*/"===r.substr(Cs,2)?(u="*/",Cs+=2):(u=s,0===hs&&Ss(ls)),u!==s?t=e=[e,n,u]:(Cs=t,t=s)):(Cs=t,t=s);}else Cs=t,t=s;return t}())===s&&(t=function(){var t,e,n,u,o,a;t=Cs,"--"===r.substr(Cs,2)?(e="--",Cs+=2):(e=s,0===hs&&Ss(fs));if(e!==s){for(n=[],u=Cs,o=Cs,hs++,a=Bi(),hs--,a===s?o=void 0:(Cs=o,o=s),o!==s&&(a=ji())!==s?u=o=[o,a]:(Cs=u,u=s);u!==s;)n.push(u),u=Cs,o=Cs,hs++,a=Bi(),hs--,a===s?o=void 0:(Cs=o,o=s),o!==s&&(a=ji())!==s?u=o=[o,a]:(Cs=u,u=s);n!==s?t=e=[e,n]:(Cs=t,t=s);}else Cs=t,t=s;return t}()),t}function Gi(){var r,t,e,n,u,o,a;return r=Cs,(t=Ii())!==s&&Fi()!==s?((e=hi())===s&&(e=null),e!==s&&Fi()!==s&&(n=ea())!==s?(o=e,a=n,r=t={type:(u=t).toLowerCase(),keyword:u.toLowerCase(),symbol:o,value:a}):(Cs=r,r=s)):(Cs=r,r=s),r}function ji(){var t;return r.length>Cs?(t=r.charAt(Cs),Cs++):(t=s,0===hs&&Ss(bs)),t}function Yi(){var t;return vs.test(r.charAt(Cs))?(t=r.charAt(Cs),Cs++):(t=s,0===hs&&Ss(ds)),t}function Bi(){var t,e;if((t=function(){var t,e;t=Cs,hs++,r.length>Cs?(e=r.charAt(Cs),Cs++):(e=s,0===hs&&Ss(bs));hs--,e===s?t=void 0:(Cs=t,t=s);return t}())===s)if(t=[],ve.test(r.charAt(Cs))?(e=r.charAt(Cs),Cs++):(e=s,0===hs&&Ss(de)),e!==s)for(;e!==s;)t.push(e),ve.test(r.charAt(Cs))?(e=r.charAt(Cs),Cs++):(e=s,0===hs&&Ss(de));else t=s;return t}function Xi(){var t,e;return t=Cs,dc=[],(void 0)!==s&&Fi()!==s?((e=Wi())===s&&(e=function(){var t,e;t=Cs,function(){var t;return "return"===r.substr(Cs,6).toLowerCase()?(t=r.substr(Cs,6),Cs+=6):(t=s,0===hs&&Ss(Mu)),t}()!==s&&Fi()!==s&&(e=Vi())!==s?(t={type:"return",expr:e}):(Cs=t,t=s);return t}()),e!==s?(t={type:"proc",stmt:e,vars:dc}):(Cs=t,t=s)):(Cs=t,t=s),t}function Wi(){var t,e,n,u;return t=Cs,(e=rc())===s&&(e=tc()),e!==s&&Fi()!==s?((n=function(){var t;return ":="===r.substr(Cs,2)?(t=":=",Cs+=2):(t=s,0===hs&&Ss(Du)),t}())===s&&(n=hi()),n!==s&&Fi()!==s&&(u=Vi())!==s?(t=e={type:"assign",left:e,symbol:n,right:u}):(Cs=t,t=s)):(Cs=t,t=s),t}function Vi(){var t;return (t=Vs())===s&&(t=function(){var r,t,e,n,u;r=Cs,(t=rc())!==s&&Fi()!==s&&(e=co())!==s&&Fi()!==s&&(n=rc())!==s&&Fi()!==s&&(u=fo())!==s?(r=t={type:"join",ltable:t,rtable:n,op:e,on:u}):(Cs=r,r=s);return r}())===s&&(t=Ki())===s&&(t=function(){var t,e;t=Cs,function(){var t;return 91===r.charCodeAt(Cs)?(t="[",Cs++):(t=s,0===hs&&Ss(rs)),t}()!==s&&Fi()!==s&&(e=Qi())!==s&&Fi()!==s&&function(){var t;return 93===r.charCodeAt(Cs)?(t="]",Cs++):(t=s,0===hs&&Ss(ts)),t}()!==s?(t={type:"array",value:e}):(Cs=t,t=s);return t}()),t}function Ki(){var r,t,e,n,u,o,a,i;if(r=Cs,(t=qi())!==s){for(e=[],n=Cs,(u=Fi())!==s&&(o=Fo())!==s&&(a=Fi())!==s&&(i=qi())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);n!==s;)e.push(n),n=Cs,(u=Fi())!==s&&(o=Fo())!==s&&(a=Fi())!==s&&(i=qi())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);e!==s?(r=t=Vr(t,e)):(Cs=r,r=s);}else Cs=r,r=s;return r}function qi(){var r,t,e,n,u,o,a,i;if(r=Cs,(t=Zi())!==s){for(e=[],n=Cs,(u=Fi())!==s&&(o=Ho())!==s&&(a=Fi())!==s&&(i=Zi())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);n!==s;)e.push(n),n=Cs,(u=Fi())!==s&&(o=Ho())!==s&&(a=Fi())!==s&&(i=Zi())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);e!==s?(r=t=Vr(t,e)):(Cs=r,r=s);}else Cs=r,r=s;return r}function Zi(){var r,t,e;return (r=Qo())===s&&(r=rc())===s&&(r=Ji())===s&&(r=Zo())===s&&(r=Cs,Oi()!==s&&Fi()!==s&&(t=Ki())!==s&&Fi()!==s&&xi()!==s?((e=t).parentheses=!0,r=e):(Cs=r,r=s)),r}function zi(){var r,t,e,n,u,o,a;return r=Cs,(t=Yo())!==s?(e=Cs,(n=Fi())!==s&&(u=Ri())!==s&&(o=Fi())!==s&&(a=Yo())!==s?e=n=[n,u,o,a]:(Cs=e,e=s),e===s&&(e=null),e!==s?(r=t=function(r,t){let e=r;return null!==t&&(e=`${r}.${t[3]}`),e}(t,e)):(Cs=r,r=s)):(Cs=r,r=s),r}function Ji(){var r,t,e;return r=Cs,(t=zi())!==s&&Fi()!==s&&Oi()!==s&&Fi()!==s?((e=Qi())===s&&(e=null),e!==s&&Fi()!==s&&xi()!==s?(r=t={type:"function",name:t,args:{type:"expr_list",value:e}}):(Cs=r,r=s)):(Cs=r,r=s),r===s&&(r=Cs,(t=zi())!==s&&(t=function(r){return {type:"function",name:r,args:null}}(t)),r=t),r}function Qi(){var r,t,e,n,u,o,a,i;if(r=Cs,(t=Zi())!==s){for(e=[],n=Cs,(u=Fi())!==s&&(o=_i())!==s&&(a=Fi())!==s&&(i=Zi())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);n!==s;)e.push(n),n=Cs,(u=Fi())!==s&&(o=_i())!==s&&(a=Fi())!==s&&(i=Zi())!==s?n=u=[u,o,a,i]:(Cs=n,n=s);e!==s?(r=t=ic(t,e)):(Cs=r,r=s);}else Cs=r,r=s;return r}function rc(){var r,t,e,n,u;return r=Cs,(t=wi())!==s&&(e=tc())!==s?(n=t,u=e,r=t={type:"var",...u,prefix:n}):(Cs=r,r=s),r}function tc(){var t,e,n,u,o;return t=Cs,(e=Wo())!==s&&(n=function(){var e,n,u,o;e=[],n=Cs,46===r.charCodeAt(Cs)?(u=".",Cs++):(u=s,0===hs&&Ss(Le));u!==s&&(o=Wo())!==s?n=u=[u,o]:(Cs=n,n=s);for(;n!==s;)e.push(n),n=Cs,46===r.charCodeAt(Cs)?(u=".",Cs++):(u=s,0===hs&&Ss(Le)),u!==s&&(o=Wo())!==s?n=u=[u,o]:(Cs=n,n=s);e!==s&&(e=function(r){const t=[];for(let e=0;e<r.length;e++)t.push(r[e][1]);return t}(e));return e}())!==s?(u=e,o=n,dc.push(u),t=e={type:"var",name:u,members:o,prefix:null}):(Cs=t,t=s),t}function ec(){var t;return (t=function(){var t,e,n,u;t=Cs,(e=Qa())===s&&(e=ri());if(e!==s)if(Fi()!==s)if(Oi()!==s)if(Fi()!==s){if(n=[],Ce.test(r.charAt(Cs))?(u=r.charAt(Cs),Cs++):(u=s,0===hs&&Ss(pe)),u!==s)for(;u!==s;)n.push(u),Ce.test(r.charAt(Cs))?(u=r.charAt(Cs),Cs++):(u=s,0===hs&&Ss(pe));else n=s;n!==s&&(u=Fi())!==s&&xi()!==s?(e={dataType:e,length:parseInt(n.join(""),10)},t=e):(Cs=t,t=s);}else Cs=t,t=s;else Cs=t,t=s;else Cs=t,t=s;else Cs=t,t=s;t===s&&(t=Cs,(e=Qa())!==s&&(e=function(r){return {dataType:r}}(e)),(t=e)===s&&(t=Cs,(e=ri())!==s&&(e=Ls(e)),(t=e)===s&&(t=Cs,(e=function(){var t,e,n,u;return t=Cs,"string"===r.substr(Cs,6).toLowerCase()?(e=r.substr(Cs,6),Cs+=6):(e=s,0===hs&&Ss(Xn)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="STRING"):(Cs=t,t=s)):(Cs=t,t=s),t}())!==s&&(e=function(r){return {dataType:r}}(e)),t=e)));return t}())===s&&(t=function(){var t,e,n,u,o,a,i,c,l,f,b,v;t=Cs,(e=ti())===s&&(e=ei())===s&&(e=ui())===s&&(e=si())===s&&(e=oi())===s&&(e=ai())===s&&(e=ii())===s&&(e=ci())===s&&(e=li());if(e!==s)if((n=Fi())!==s)if((u=Oi())!==s)if((o=Fi())!==s){if(a=[],Ce.test(r.charAt(Cs))?(i=r.charAt(Cs),Cs++):(i=s,0===hs&&Ss(pe)),i!==s)for(;i!==s;)a.push(i),Ce.test(r.charAt(Cs))?(i=r.charAt(Cs),Cs++):(i=s,0===hs&&Ss(pe));else a=s;if(a!==s)if((i=Fi())!==s){if(c=Cs,(l=_i())!==s)if((f=Fi())!==s){if(b=[],Ce.test(r.charAt(Cs))?(v=r.charAt(Cs),Cs++):(v=s,0===hs&&Ss(pe)),v!==s)for(;v!==s;)b.push(v),Ce.test(r.charAt(Cs))?(v=r.charAt(Cs),Cs++):(v=s,0===hs&&Ss(pe));else b=s;b!==s?c=l=[l,f,b]:(Cs=c,c=s);}else Cs=c,c=s;else Cs=c,c=s;c===s&&(c=null),c!==s&&(l=Fi())!==s&&(f=xi())!==s&&(b=Fi())!==s?((v=nc())===s&&(v=null),v!==s?(d=c,L=v,e={dataType:e,length:parseInt(a.join(""),10),scale:d&&parseInt(d[2].join(""),10),parentheses:!0,suffix:L},t=e):(Cs=t,t=s)):(Cs=t,t=s);}else Cs=t,t=s;else Cs=t,t=s;}else Cs=t,t=s;else Cs=t,t=s;else Cs=t,t=s;else Cs=t,t=s;var d,L;if(t===s){if(t=Cs,(e=ti())===s&&(e=ei())===s&&(e=ui())===s&&(e=si())===s&&(e=oi())===s&&(e=ai())===s&&(e=ii())===s&&(e=ci())===s&&(e=li()),e!==s){if(n=[],Ce.test(r.charAt(Cs))?(u=r.charAt(Cs),Cs++):(u=s,0===hs&&Ss(pe)),u!==s)for(;u!==s;)n.push(u),Ce.test(r.charAt(Cs))?(u=r.charAt(Cs),Cs++):(u=s,0===hs&&Ss(pe));else n=s;n!==s&&(u=Fi())!==s?((o=nc())===s&&(o=null),o!==s?(e=function(r,t,e){return {dataType:r,length:parseInt(t.join(""),10),suffix:e}}(e,n,o),t=e):(Cs=t,t=s)):(Cs=t,t=s);}else Cs=t,t=s;t===s&&(t=Cs,(e=ti())===s&&(e=ei())===s&&(e=ui())===s&&(e=si())===s&&(e=oi())===s&&(e=ai())===s&&(e=ii())===s&&(e=ci())===s&&(e=li()),e!==s&&(n=Fi())!==s?((u=nc())===s&&(u=null),u!==s&&(o=Fi())!==s?(e=function(r,t){return {dataType:r,suffix:t}}(e,u),t=e):(Cs=t,t=s)):(Cs=t,t=s));}return t}())===s&&(t=function(){var t,e,n,u;t=Cs,(e=fi())===s&&(e=bi())===s&&(e=vi())===s&&(e=di());if(e!==s)if(Fi()!==s)if(Oi()!==s)if(Fi()!==s){if(n=[],Ce.test(r.charAt(Cs))?(u=r.charAt(Cs),Cs++):(u=s,0===hs&&Ss(pe)),u!==s)for(;u!==s;)n.push(u),Ce.test(r.charAt(Cs))?(u=r.charAt(Cs),Cs++):(u=s,0===hs&&Ss(pe));else n=s;n!==s&&(u=Fi())!==s&&xi()!==s?(e={dataType:e,length:parseInt(n.join(""),10)},t=e):(Cs=t,t=s);}else Cs=t,t=s;else Cs=t,t=s;else Cs=t,t=s;else Cs=t,t=s;t===s&&(t=Cs,(e=fi())===s&&(e=bi())===s&&(e=vi())===s&&(e=di()),e!==s&&(e=Ls(e)),t=e);return t}())===s&&(t=function(){var e;(e=function(){var t,e,n,u;return t=Cs,"json"===r.substr(Cs,4).toLowerCase()?(e=r.substr(Cs,4),Cs+=4):(e=s,0===hs&&Ss(Qn)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="JSON"):(Cs=t,t=s)):(Cs=t,t=s),t}())===s&&(e=function(){var t,e,n,u;return t=Cs,"jsonb"===r.substr(Cs,5).toLowerCase()?(e=r.substr(Cs,5),Cs+=5):(e=s,0===hs&&Ss(ru)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="JSONB"):(Cs=t,t=s)):(Cs=t,t=s),t}());e!==s&&(e=Ls(e));return e}())===s&&(t=function(){var e;(e=function(){var t,e,n,u;return t=Cs,"geometry"===r.substr(Cs,8).toLowerCase()?(e=r.substr(Cs,8),Cs+=8):(e=s,0===hs&&Ss(tu)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="GEOMETRY"):(Cs=t,t=s)):(Cs=t,t=s),t}())!==s&&(e={dataType:e});return e}())===s&&(t=function(){var e;(e=function(){var t,e,n,u;return t=Cs,"tinytext"===r.substr(Cs,8).toLowerCase()?(e=r.substr(Cs,8),Cs+=8):(e=s,0===hs&&Ss(uu)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="TINYTEXT"):(Cs=t,t=s)):(Cs=t,t=s),t}())===s&&(e=function(){var t,e,n,u;return t=Cs,"text"===r.substr(Cs,4).toLowerCase()?(e=r.substr(Cs,4),Cs+=4):(e=s,0===hs&&Ss(su)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="TEXT"):(Cs=t,t=s)):(Cs=t,t=s),t}())===s&&(e=function(){var t,e,n,u;return t=Cs,"mediumtext"===r.substr(Cs,10).toLowerCase()?(e=r.substr(Cs,10),Cs+=10):(e=s,0===hs&&Ss(ou)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="MEDIUMTEXT"):(Cs=t,t=s)):(Cs=t,t=s),t}())===s&&(e=function(){var t,e,n,u;return t=Cs,"longtext"===r.substr(Cs,8).toLowerCase()?(e=r.substr(Cs,8),Cs+=8):(e=s,0===hs&&Ss(au)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="LONGTEXT"):(Cs=t,t=s)):(Cs=t,t=s),t}());e!==s&&(e={dataType:e});return e}())===s&&(t=function(){var e;(e=function(){var t,e,n,u;return t=Cs,"uuid"===r.substr(Cs,4).toLowerCase()?(e=r.substr(Cs,4),Cs+=4):(e=s,0===hs&&Ss(pu)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="UUID"):(Cs=t,t=s)):(Cs=t,t=s),t}())!==s&&(e={dataType:e});return e}())===s&&(t=function(){var e;(e=function(){var t,e,n,u;return t=Cs,"bool"===r.substr(Cs,4).toLowerCase()?(e=r.substr(Cs,4),Cs+=4):(e=s,0===hs&&Ss(Gn)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="BOOL"):(Cs=t,t=s)):(Cs=t,t=s),t}())===s&&(e=function(){var t,e,n,u;return t=Cs,"boolean"===r.substr(Cs,7).toLowerCase()?(e=r.substr(Cs,7),Cs+=7):(e=s,0===hs&&Ss(jn)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="BOOLEAN"):(Cs=t,t=s)):(Cs=t,t=s),t}());e!==s&&(e={dataType:e});return e}())===s&&(t=function(){var t,e,n;t=Cs,(e=function(){var t,e,n,u;return t=Cs,"array"===r.substr(Cs,5).toLowerCase()?(e=r.substr(Cs,5),Cs+=5):(e=s,0===hs&&Ss(wu)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="ARRAY"):(Cs=t,t=s)):(Cs=t,t=s),t}())!==s&&Ui()!==s&&(n=ec())!==s&&Mi()!==s?(t=e={dataType:e,subType:n}):(Cs=t,t=s);return t}())===s&&(t=function(){var t,e,n;t=Cs,(e=function(){var t,e,n,u;return t=Cs,"map"===r.substr(Cs,3).toLowerCase()?(e=r.substr(Cs,3),Cs+=3):(e=s,0===hs&&Ss(Eu)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="MAP"):(Cs=t,t=s)):(Cs=t,t=s),t}())!==s&&Ui()!==s&&ec()!==s&&_i()!==s&&(n=ec())!==s&&Mi()!==s?(t=e={dataType:e,subType:n}):(Cs=t,t=s);return t}())===s&&(t=function(){var e;(e=function(){var t,e,n,u;return t=Cs,"row"===r.substr(Cs,3).toLowerCase()?(e=r.substr(Cs,3),Cs+=3):(e=s,0===hs&&Ss(ar)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="ROW"):(Cs=t,t=s)):(Cs=t,t=s),t}())!==s&&(e={dataType:e});return e}()),t}function nc(){var t,e,n;return t=Cs,(e=ni())===s&&(e=null),e!==s&&Fi()!==s?((n=function(){var t,e,n,u;return t=Cs,"zerofill"===r.substr(Cs,8).toLowerCase()?(e=r.substr(Cs,8),Cs+=8):(e=s,0===hs&&Ss(zn)),e!==s?(n=Cs,hs++,u=Vo(),hs--,u===s?n=void 0:(Cs=n,n=s),n!==s?(t=e="ZEROFILL"):(Cs=t,t=s)):(Cs=t,t=s),t}())===s&&(n=null),n!==s?(t=e=function(r,t){const e=[];return r&&e.push(r),t&&e.push(t),e}(e,n)):(Cs=t,t=s)):(Cs=t,t=s),t}const uc={ALTER:!0,ALL:!0,ADD:!0,AND:!0,AS:!0,ASC:!0,BETWEEN:!0,BY:!0,CALL:!0,CASE:!0,CREATE:!0,CONTAINS:!0,CURRENT_DATE:!0,CURRENT_TIME:!0,CURRENT_TIMESTAMP:!0,CURRENT_USER:!0,DELETE:!0,DESC:!0,DISTINCT:!0,DROP:!0,ELSE:!0,END:!0,EXISTS:!0,EXPLAIN:!0,FALSE:!0,FROM:!0,FULL:!0,GROUP:!0,HAVING:!0,IN:!0,INNER:!0,INSERT:!0,INTO:!0,INTERVAL:!0,IS:!0,JOIN:!0,JSON:!0,KEY:!0,LEFT:!0,LIKE:!0,LIMIT:!0,NOT:!0,NULL:!0,NULLS:!0,ON:!0,OR:!0,ORDER:!0,OUTER:!0,RECURSIVE:!0,RENAME:!0,RIGHT:!0,SELECT:!0,SESSION_USER:!0,SET:!0,SHOW:!0,STATUS:!0,SYSTEM_USER:!0,TABLE:!0,THEN:!0,TRUE:!0,TRUNCATE:!0,TYPE:!0,UNION:!0,UPDATE:!0,USING:!0,VALUES:!0,WITH:!0,WHEN:!0,WHERE:!0,GLOBAL:!0,SESSION:!0,LOCAL:!0,PERSIST:!0,PERSIST_ONLY:!0};function sc(r,t){return {type:"unary_expr",operator:r,expr:t}}function oc(r,t,e){return {type:"binary_expr",operator:r,left:t,right:e}}function ac(r){const t=n(Number.MAX_SAFE_INTEGER);return !(n(r)<t)}function ic(r,t,e=3){const n=[r];for(let r=0;r<t.length;r++)n.push(t[r][e]);return n}function cc(r,t){let e=r;for(let r=0;r<t.length;r++)e=oc(t[r][1],e,t[r][3]);return e}function lc(r){const t=pc[r];return t||(r||null)}function fc(r){const t=new Set;for(let e of r.keys()){const r=e.split("::");if(!r){t.add(e);break}r&&r[1]&&(r[1]=lc(r[1])),t.add(r.join("::"));}return Array.from(t)}function vc(r){return "string"==typeof r?{type:"same",value:r}:r}let dc=[];const Lc=new Set,Cc=new Set,pc={};if((e=a())!==s&&Cs===r.length)return e;throw e!==s&&Cs<r.length&&Ss({type:"end"}),Is(Es,ws<r.length?r.charAt(ws):null,ws<r.length?ms(ws,ws+1):ms(ws,ws))}};},function(r,t,e){r.exports=e(11);},function(r,t,e){e.r(t),e.d(t,"Parser",(function(){return qr})),e.d(t,"util",(function(){return n}));var n={};e.r(n),e.d(n,"arrayStructTypeToSQL",(function(){return U})),e.d(n,"autoIncreatementToSQL",(function(){return F})),e.d(n,"columnOrderListToSQL",(function(){return P})),e.d(n,"commonKeywordArgsToSQL",(function(){return $})),e.d(n,"commonOptionConnector",(function(){return p})),e.d(n,"connector",(function(){return w})),e.d(n,"commonTypeValue",(function(){return N})),e.d(n,"commentToSQL",(function(){return M})),e.d(n,"createBinaryExpr",(function(){return h})),e.d(n,"createValueExpr",(function(){return E})),e.d(n,"DEFAULT_OPT",(function(){return L})),e.d(n,"escape",(function(){return A})),e.d(n,"literalToSQL",(function(){return g})),e.d(n,"columnIdentifierToSql",(function(){return S})),e.d(n,"identifierToSql",(function(){return I})),e.d(n,"onPartitionsToSQL",(function(){return x})),e.d(n,"replaceParams",(function(){return O})),e.d(n,"returningToSQL",(function(){return k})),e.d(n,"hasVal",(function(){return _})),e.d(n,"setParserOpt",(function(){return T})),e.d(n,"toUpper",(function(){return R})),e.d(n,"topToSQL",(function(){return m})),e.d(n,"triggerEventToSQL",(function(){return D}));var u=e(1),s=e(2),o=e(3),a=e(4),i=e(5),c=e(6),l=e(7),f=e(8),b=e(9),v={bigquery:u.parse,db2:s.parse,hive:o.parse,mysql:a.parse,mariadb:i.parse,postgresql:c.parse,sqlite:l.parse,transactsql:f.parse,flinksql:b.parse};function d(r){return (d="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(r){return typeof r}:function(r){return r&&"function"==typeof Symbol&&r.constructor===Symbol&&r!==Symbol.prototype?"symbol":typeof r})(r)}var L={database:"mysql",type:"table"},C=L;function p(r,t,e){if(e)return r?"".concat(r.toUpperCase()," ").concat(t(e)):t(e)}function w(r,t){if(t)return "".concat(r.toUpperCase()," ").concat(t)}function E(r){var t=d(r);if(Array.isArray(r))return {type:"expr_list",value:r.map(E)};if(null===r)return {type:"null",value:null};switch(t){case"boolean":return {type:"bool",value:r};case"string":return {type:"string",value:r};case"number":return {type:"number",value:r};default:throw new Error('Cannot convert value "'.concat(t,'" to SQL'))}}function h(r,t,e){var n={operator:r,type:"binary_expr"};return n.left=t.type?t:E(t),"BETWEEN"===r||"NOT BETWEEN"===r?(n.right={type:"expr_list",value:[E(e[0]),E(e[1])]},n):(n.right=e.type?e:E(e),n)}function A(r){return r}function y(){return C}function T(r){C=r;}function m(r){if(r){var t=r.value,e=r.percent,n="TOP ".concat(t);return e?"".concat(n," ").concat(e.toUpperCase()):n}}function S(r){var t=y().database;if(r)switch(t&&t.toLowerCase()){case"postgresql":case"db2":return '"'.concat(r,'"');case"transactsql":return "[".concat(r,"]");case"mysql":case"mariadb":case"bigquery":default:return "`".concat(r,"`")}}function I(r,t){var e=y().database;if(!0===t)return "'".concat(r,"'");if(r)switch(e&&e.toLowerCase()){case"mysql":case"mariadb":case"sqlite":return "`".concat(r,"`");case"postgresql":return '"'.concat(r,'"');case"transactsql":return "[".concat(r,"]");case"bigquery":case"db2":return r;default:return "`".concat(r,"`")}}function N(r){var t=[];if(!r)return t;var e=r.type,n=r.value;return t.push(e.toUpperCase()),t.push(n.toUpperCase()),t}function R(r){if(r)return r.toUpperCase()}function _(r){return r}function g(r){if(r){var t=r.type,e=r.parentheses,n=r.value,u=n;switch(t){case"string":u="'".concat(n,"'");break;case"regex_string":u='r"'.concat(n,'"');break;case"hex_string":u="X'".concat(n,"'");break;case"double_quote_string":u='"'.concat(n,'"');break;case"single_quote_string":u="'".concat(n,"'");break;case"boolean":case"bool":u=n?"TRUE":"FALSE";break;case"null":u="NULL";break;case"star":u="*";break;case"param":u=":".concat(n);break;case"origin":u=n.toUpperCase();break;case"date":case"datetime":case"time":case"timestamp":u="".concat(t.toUpperCase()," '").concat(n,"'");}var s=r.prefix,o=r.suffix,a=[];return s&&a.push(R(s)),a.push(u),o&&o.collate&&a.push(N(o.collate).join(" ")),u=a.join(" "),e?"(".concat(u,")"):u}}function O(r,t){return function r(t,e){return Object.keys(t).filter((function(r){var e=t[r];return Array.isArray(e)||"object"===d(e)&&null!==e})).forEach((function(n){var u=t[n];if("object"!==d(u)||"param"!==u.type)return r(u,e);if(void 0===e[u.value])throw new Error("no value for parameter :".concat(u.value," found"));return t[n]=E(e[u.value]),null})),t}(JSON.parse(JSON.stringify(r)),t)}function x(r){var t=r.type,e=r.partitions;return [R(t),"(".concat(e.map((function(r){if("range"!==r.type)return g(r);var t=r.start,e=r.end,n=r.symbol;return "".concat(g(t)," ").concat(R(n)," ").concat(g(e))})).join(", "),")")].join(" ")}function U(r){if(r){var t=r.dataType,e=r.definition,n=r.anglebracket,u=R(t);if("ARRAY"!==u&&"STRUCT"!==u)return u;var s=e&&e.map((function(r){return [r.field_name,U(r.field_type)].filter(_).join(" ")})).join(", ");return n?"".concat(u,"<").concat(s,">"):"".concat(u," ").concat(s)}}function M(r){if(r){var t=[],e=r.keyword,n=r.symbol,u=r.value;return t.push(e.toUpperCase()),n&&t.push(n),t.push(g(u)),t.join(" ")}}function D(r){return r.map((function(r){var t=r.keyword,e=r.args,n=[R(t)];if(e){var u=e.keyword,s=e.columns;n.push(R(u),s.map(hr).join(", "));}return n.join(" ")})).join(" OR ")}function k(r){return r?["RETURNING",r.columns.map(hr).filter(_).join(", ")].join(" "):""}function $(r){return r?[R(r.keyword),R(r.args)]:[]}function F(r){if(!r||"string"==typeof r)return R(r);var t=r.keyword,e=r.seed,n=r.increment,u=r.parentheses,s=R(t);return u&&(s+="(".concat(g(e),", ").concat(g(n),")")),s}function P(r){if(r)return r.map(Tr).filter(_).join(", ")}function H(r){if("string"==typeof r)return r;var t=r.window_specification;return "(".concat(function(r){var t=r.name,e=r.partitionby,n=r.orderby,u=r.window_frame_clause;return [t,ir(e,"partition by"),ir(n,"order by"),R(u)].filter(_).join(" ")}(t),")")}function G(r){var t=r.name,e=r.as_window_specification;return "".concat(t," AS ").concat(H(e))}function j(r){if(r){var t=r.as_window_specification,e=r.orderby,n=r.partitionby;if("WINDOW"===R(r.type)){var u=H(t);return "OVER ".concat(u)}var s=ir(n,"partition by"),o=ir(e,"order by");return "OVER (".concat([s,o].filter(_).join(" "),")")}}function Y(r){var t=r.target,e=r.expr,n=r.symbol,u=r.as,s=t.length,o=t.dataType,a=t.parentheses,i=t.scale,c="";s&&(c=i?"".concat(s,", ").concat(i):s),a&&(c="(".concat(c,")"));var l=or(e),f="::",b="";return "as"===n&&(l="CAST(".concat(l),b=")",f=" ".concat(n.toUpperCase()," ")),u&&(b+=" AS ".concat(I(u))),"".concat(l).concat(f).concat(o).concat(c).concat(b)}function B(r){var t=r.args,e=r.name;if(!t)return e;var n=r.parentheses,u=r.over,s="".concat(e,"(").concat(or(t).join(", "),")"),o=j(u);return [n?"(".concat(s,")"):s,o].filter(_).join(" ")}function X(r){return function(r){if(Array.isArray(r))return W(r)}(r)||function(r){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(r))return Array.from(r)}(r)||function(r,t){if(!r)return;if("string"==typeof r)return W(r,t);var e=Object.prototype.toString.call(r).slice(8,-1);"Object"===e&&r.constructor&&(e=r.constructor.name);if("Map"===e||"Set"===e)return Array.from(r);if("Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))return W(r,t)}(r)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function W(r,t){(null==t||t>r.length)&&(t=r.length);for(var e=0,n=new Array(t);e<t;e++)n[e]=r[e];return n}function V(r){return r?[R(r.prefix),or(r.value),R(r.suffix)]:[]}function K(r){return r?r.fetch?(e=(t=r).fetch,n=t.offset,[].concat(X(V(n)),X(V(e))).filter(_).join(" ")):function(r){var t=r.seperator;return w("LIMIT",r.value.map(or).join("".concat("offset"===t?" ":"").concat(R(t)," ")))}(r):"";var t,e,n;}function q(r){if(r&&0!==r.length){var t=r[0].recursive?"RECURSIVE ":"",e=r.map((function(r){var t=r.name,e=r.stmt,n=r.columns,u=Array.isArray(n)?"(".concat(n.join(", "),")"):"";return "".concat(t).concat(u," AS (").concat(or(e),")")})).join(", ");return "WITH ".concat(t).concat(e)}}function Z(r){var t=r.table,e=r.db,n=r.as,u=r.expr,s=I(e),o=t?I(t):or(u),a=s?"".concat(s,".").concat(o):o;return n?"".concat(a," AS ").concat(I(n)):a}function z(r){if("UNNEST"===R(r.type))return function(r){var t=r.type,e=r.as,n=r.expr,u=r.with_offset;return [R(t),"(".concat(n&&or(n)||" ",")"),p("AS",I,e),p(R(u&&u.keyword),I,u&&u.as)].filter(_).join(" ")}(r);var t=r[0],e=[];if("dual"===t.type)return "DUAL";e.push(Z(t));for(var n=1;n<r.length;++n){var u=r[n],s=u.on,o=u.using,a=u.join,i=[];i.push(a?" ".concat(a):","),i.push(Z(u)),i.push(p("ON",or,s)),o&&i.push("USING (".concat(o.map(I).join(", "),")")),e.push(i.filter(_).join(" "));}return e.filter(_).join("")}function J(r){var t=r.keyword,e=r.symbol,n=r.value,u=[t.toUpperCase()];return e&&u.push(e),u.push(n),u.join(" ")}function Q(r){var t=r.as_struct_val,e=r.columns,n=r.distinct,u=r.from,s=r.for_sys_time_as_of,o=void 0===s?{}:s,a=r.for_update,i=r.groupby,c=r.having,l=r.limit,f=r.options,b=r.orderby,v=r.parentheses_symbol,d=r.top,L=r.window,C=r.with,E=r.where,h=[q(C),"SELECT",R(t)];h.push(m(d)),Array.isArray(f)&&h.push(f.join(" ")),h.push(n,Sr(e,u)),h.push(p("FROM",z,u));var A=o||{},y=A.keyword,T=A.expr;h.push(p(y,or,T)),h.push(p("WHERE",or,E)),h.push(w("GROUP BY",ar(i).join(", "))),h.push(p("HAVING",or,c)),h.push(p("WINDOW",or,L)),h.push(ir(b,"order by")),h.push(K(l)),h.push(R(a));var S=h.filter(_).join(" ");return v?"(".concat(S,")"):S}function rr(r){var t,e,n,u,s=r.suffix,o=r.keyword,a="";switch(R(o)){case"BINLOG":e=(t=r).in,n=t.from,u=t.limit,a=[p("IN",g,e&&e.right),p("FROM",z,n),K(u)].filter(_).join(" ");break;case"CHARACTER":case"COLLATION":a=function(r){var t=r.expr;if(t)return "LIKE"===R(t.op)?p("LIKE",g,t.right):p("WHERE",or,t)}(r);break;case"GRANTS":a=function(r){var t=r.for;if(t){var e=t.user,n=t.host,u=t.role_list,s="'".concat(e,"'");return n&&(s+="@'".concat(n,"'")),["FOR",s,u&&"USING",u&&u.map((function(r){return "'".concat(r,"'")})).join(", ")].filter(_).join(" ")}}(r);}return ["SHOW",R(o),R(s),a].filter(_).join(" ")}function tr(r){return (tr="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(r){return typeof r}:function(r){return r&&"function"==typeof Symbol&&r.constructor===Symbol&&r!==Symbol.prototype?"symbol":typeof r})(r)}function er(r){var t=r.expr_list;switch(R(r.type)){case"STRUCT":return "(".concat(Sr(t),")");case"ARRAY":return function(r){var t=r.array_path,e=r.brackets,n=r.expr_list,u=r.parentheses;if(!n)return "[".concat(Sr(t),"]");if(Array.isArray(n))return "[".concat(n.map((function(r){return "(".concat(Sr(r),")")})).filter(_).join(", "),"]");var s=or(n);return e?"[".concat(s,"]"):u?"(".concat(s,")"):s}(r);default:return ""}}function nr(r){var t=r.definition,e=[R(r.keyword)];return t&&"object"===tr(t)&&(e.length=0,e.push(U(t))),e.push(er(r)),e.filter(_).join("")}function ur(r){return (ur="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(r){return typeof r}:function(r){return r&&"function"==typeof Symbol&&r.constructor===Symbol&&r!==Symbol.prototype?"symbol":typeof r})(r)}var sr={alter:_r,aggr_func:function(r){var t=r.args,e=r.over,n=r.orderby,u=or(t.expr),s=r.name,o=j(e);if(t.distinct){var a=t.expr.parentheses?"":" ";u=["DISTINCT",u].join(a);}return n&&(u="".concat(u," ").concat(ir(n,"order by"))),["".concat(s,"(").concat(u,")"),o].filter(_).join(" ")},window_func:function(r){var t=r.over;return [function(r){var t=r.args,e=r.name,n=r.consider_nulls,u=void 0===n?"":n,s=t?or(t).join(", "):"",o=function(r){switch(r){case"NTH_VALUE":case"LEAD":case"LAG":return !1;default:return !0}}(e);return [e,"(",s,!o&&")",u&&" ",u,o&&")"].filter(_).join("")}(r),j(t)].filter(_).join(" ")},array:nr,assign:function(r){var t=r.left,e=r.right,n=r.symbol,u=r.keyword;t.keyword=u;var s=or(t),o=or(e);return "".concat(s," ").concat(n," ").concat(o)},extract:function(r){var t=r.args,e=r.type,n=t.field,u=t.cast_type,s=t.source,o=["".concat(R(e),"(").concat(R(n)),"FROM",R(u),or(s)];return "".concat(o.filter(_).join(" "),")")},binary_expr:function(r){var t=r.operator,e=or(r.right),n=!1;if(Array.isArray(e)){switch(t){case"=":t="IN";break;case"!=":t="NOT IN";break;case"BETWEEN":case"NOT BETWEEN":n=!0,e="".concat(e[0]," AND ").concat(e[1]);}n||(e="(".concat(e.join(", "),")"));}var u=[or(r.left),t,e].join(" ");return r.parentheses?"(".concat(u,")"):u},case:function(r){var t=["CASE"],e=r.args;r.expr&&t.push(or(r.expr));for(var n=0,u=e.length;n<u;++n)t.push(e[n].type.toUpperCase()),e[n].cond&&(t.push(or(e[n].cond)),t.push("THEN")),t.push(or(e[n].result));return t.push("END"),t.join(" ")},cast:Y,column_ref:hr,function:B,interval:function(r){var t=r.expr,e=r.unit;return ["INTERVAL",or(t),R(e)].filter(_).join(" ")},show:rr,struct:nr,window:function(r){return r.expr.map(G).join(", ")}};function or(r){var t=r;if(r.ast){var e=t.ast;Reflect.deleteProperty(t,e);for(var n=0,u=Object.keys(e);n<u.length;n++){var s=u[n];t[s]=e[s];}}return sr[t.type]?sr[t.type](t):g(t)}function ar(r){return r?r.map(or):[]}function ir(r,t){if(!Array.isArray(r))return "";var e=[],n=R(t);switch(n){case"ORDER BY":e=r.map((function(r){return "".concat(or(r.expr)," ").concat(r.type)}));break;case"PARTITION BY":default:e=r.map((function(r){return "".concat(hr(r.expr))}));}return w(n,e.join(", "))}function cr(r){return function(r){if(Array.isArray(r))return lr(r)}(r)||function(r){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(r))return Array.from(r)}(r)||function(r,t){if(!r)return;if("string"==typeof r)return lr(r,t);var e=Object.prototype.toString.call(r).slice(8,-1);"Object"===e&&r.constructor&&(e=r.constructor.name);if("Map"===e||"Set"===e)return Array.from(r);if("Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))return lr(r,t)}(r)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function lr(r,t){(null==t||t>r.length)&&(t=r.length);for(var e=0,n=new Array(t);e<t;e++)n[e]=r[e];return n}function fr(r){if(!r)return [];var t=r.keyword,e=r.type;return [t.toUpperCase(),e.toUpperCase()]}function br(r){if(r){var t=r.type,e=r.expr,n=r.symbol,u=t.toUpperCase(),s=[];switch(s.push(u),u){case"KEY_BLOCK_SIZE":n&&s.push(n),s.push(g(e));break;case"BTREE":case"HASH":s.length=0,s.push.apply(s,cr(fr(r)));break;case"WITH PARSER":s.push(e);break;case"VISIBLE":case"INVISIBLE":break;case"COMMENT":s.shift(),s.push(M(r));break;case"DATA_COMPRESSION":s.push(n,R(e.value),x(e.on));break;default:s.push(n,g(e));}return s.filter(_).join(" ")}}function vr(r){return r?r.map(br):[]}function dr(r){var t=r.constraint_type,e=r.index_type,n=r.index_options,u=void 0===n?[]:n,s=r.definition,o=[];if(o.push.apply(o,cr(fr(e))),s&&s.length){var a="CHECK"===R(t)?"(".concat(or(s[0]),")"):"(".concat(s.map((function(r){return I(r)})).join(", "),")");o.push(a);}return o.push(vr(u).join(" ")),o}function Lr(r){return function(r){if(Array.isArray(r))return Cr(r)}(r)||function(r){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(r))return Array.from(r)}(r)||function(r,t){if(!r)return;if("string"==typeof r)return Cr(r,t);var e=Object.prototype.toString.call(r).slice(8,-1);"Object"===e&&r.constructor&&(e=r.constructor.name);if("Map"===e||"Set"===e)return Array.from(r);if("Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))return Cr(r,t)}(r)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Cr(r,t){(null==t||t>r.length)&&(t=r.length);for(var e=0,n=new Array(t);e<t;e++)n[e]=r[e];return n}function pr(r){if(r){var t=r.constraint,e=r.constraint_type,n=r.enforced,u=r.index,s=r.keyword,o=r.reference_definition,a=[];return a.push(R(s)),a.push(I(t)),a.push(R(e)),a.push(I(u)),a.push.apply(a,Lr(dr(r))),a.push.apply(a,Lr(yr(o))),a.push(R(n)),a.filter(_).join(" ")}}function wr(r){return function(r){if(Array.isArray(r))return Er(r)}(r)||function(r){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(r))return Array.from(r)}(r)||function(r,t){if(!r)return;if("string"==typeof r)return Er(r,t);var e=Object.prototype.toString.call(r).slice(8,-1);"Object"===e&&r.constructor&&(e=r.constructor.name);if("Map"===e||"Set"===e)return Array.from(r);if("Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))return Er(r,t)}(r)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Er(r,t){(null==t||t>r.length)&&(t=r.length);for(var e=0,n=new Array(t);e<t;e++)n[e]=r[e];return n}function hr(r){var t=r.arrow,e=r.as,n=r.collate,u=r.column,s=r.isDual,o=r.table,a=r.parentheses,i=r.property,c="*"===u?"*":I(u,s);o&&(c="".concat(I(o),".").concat(c));var l=[c,p("AS",or,e),p(t,g,i)];n&&l.push(N(n).join(" "));var f=l.filter(_).join(" ");return a?"(".concat(f,")"):f}function Ar(r){var t=r||{},e=t.dataType,n=t.length,u=t.suffix,s=t.scale,o=t.expr,a=e;return n&&(a+="(".concat([n,s].filter(_).join(", "),")")),u&&u.length&&(a+=" ".concat(u.join(" "))),o&&(a+=or(o)),a}function yr(r){var t=[];if(!r)return t;var e=r.definition,n=r.keyword,u=r.match,s=r.table,o=r.on_delete,a=r.on_update;return t.push(n.toUpperCase()),t.push(z(s)),t.push("(".concat(e.map(I).join(", "),")")),t.push(R(u)),t.push.apply(t,wr(N(o))),t.push.apply(t,wr(N(a))),t.filter(_)}function Tr(r){var t=r.column,e=r.collate,n=r.nulls,u=r.opclass,s=r.order;return [or(t),p(e&&e.type,I,e&&e.value),u,R(s),R(n)].filter(_).join(" ")}function mr(r){var t=[],e=hr(r.column),n=Ar(r.definition);t.push(e),t.push(n);var u=function(r){var t=[],e=r.nullable,n=r.check,u=r.comment,s=r.collate,o=r.storage,a=r.default_val,i=r.auto_increment,c=r.unique_or_primary,l=r.column_format,f=r.reference_definition;if(t.push(R(e&&e.value)),a){var b=a.type,v=a.value;t.push(b.toUpperCase(),or(v));}return t.push(pr(n)),t.push(F(i),R(c),M(u)),t.push.apply(t,wr(N(s))),t.push.apply(t,wr(N(l))),t.push.apply(t,wr(N(o))),t.push.apply(t,wr(yr(f))),t.filter(_).join(" ")}(r);return t.push(u),t.filter(_).join(" ")}function Sr(r,t){if(!r||"*"===r)return r;var e=function(r){var t=Array.isArray(r)&&r[0];return !(!t||"dual"!==t.type)}(t),n=[],u=r.expr_list,s=r.star,o=r.type;n.push(s,R(o));var a=(u||r).map((function(r){return function(r,t){var e=r.expr;if("cast"===r.type)return Y(r);t&&(e.isDual=t);var n=or(e);return null!==r.as&&(n="".concat(n," AS "),n=r.as.match(/^[a-z_][0-9a-z_]*$/i)?"".concat(n).concat(I(r.as)):"".concat(n).concat(S(r.as))),n}(r,e)})).join(", ");return n.push([o&&"(",a,o&&")"].filter(_).join("")),n.filter(_).join(" ")}function Ir(r){return function(r){if(Array.isArray(r))return Nr(r)}(r)||function(r){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(r))return Array.from(r)}(r)||function(r,t){if(!r)return;if("string"==typeof r)return Nr(r,t);var e=Object.prototype.toString.call(r).slice(8,-1);"Object"===e&&r.constructor&&(e=r.constructor.name);if("Map"===e||"Set"===e)return Array.from(r);if("Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))return Nr(r,t)}(r)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Nr(r,t){(null==t||t>r.length)&&(t=r.length);for(var e=0,n=new Array(t);e<t;e++)n[e]=r[e];return n}function Rr(r){if(!r)return [];var t,e,n,u,s=r.resource;switch(s){case"column":return mr(r);case"index":return e=[],n=(t=r).keyword,u=t.index,e.push(R(n)),e.push(u),e.push.apply(e,cr(dr(t))),e.filter(_).join(" ");case"constraint":return pr(r);case"sequence":return [R(r.prefix),or(r.value)].filter(_).join(" ");default:throw new Error("unknown resource = ".concat(s," type"))}}function _r(r){var t=r.action,e=r.create_definitions,n=r.if_not_exists,u=r.keyword,s=r.resource,o=r.symbol,a="",i=[];switch(s){case"column":i=[mr(r)];break;case"index":i=dr(r),a=r[s];break;case"table":a=I(r[s]);break;case"algorithm":case"lock":a=[o,R(r[s])].filter(_).join(" ");break;case"constraint":a=I(r[s]),i=[Rr(e)];}return [R(t),R(u),R(n),a,i.filter(_).join(" ")].filter(_).join(" ")}function gr(r,t){var e;if("undefined"==typeof Symbol||null==r[Symbol.iterator]){if(Array.isArray(r)||(e=function(r,t){if(!r)return;if("string"==typeof r)return Or(r,t);var e=Object.prototype.toString.call(r).slice(8,-1);"Object"===e&&r.constructor&&(e=r.constructor.name);if("Map"===e||"Set"===e)return Array.from(r);if("Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))return Or(r,t)}(r))||t&&r&&"number"==typeof r.length){e&&(r=e);var n=0,u=function(){};return {s:u,n:function(){return n>=r.length?{done:!0}:{done:!1,value:r[n++]}},e:function(r){throw r},f:u}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var s,o=!0,a=!1;return {s:function(){e=r[Symbol.iterator]();},n:function(){var r=e.next();return o=r.done,r},e:function(r){a=!0,s=r;},f:function(){try{o||null==e.return||e.return();}finally{if(a)throw s}}}}function Or(r,t){(null==t||t>r.length)&&(t=r.length);for(var e=0,n=new Array(t);e<t;e++)n[e]=r[e];return n}function xr(r){if(!r||0===r.length)return "";var t,e=[],n=gr(r);try{for(n.s();!(t=n.n()).done;){var u=t.value,s=u.table,o=u.column,a=u.value,i=u.keyword,c=[[s,o].filter(_).map((function(r){return I(r)})).join(".")],l="";a&&(l=or(a),c.push("=",l)),i&&(c[2]="".concat(R(i),"(").concat(l,")")),e.push(c.filter(_).join(" "));}}catch(r){n.e(r);}finally{n.f();}return e.join(", ")}function Ur(r){if("select"===r.type)return Q(r);var t=r.map(or);return "(".concat(t.join("), ("),")")}function Mr(r){if(!r)return "";var t=["PARTITION","("];if(Array.isArray(r))t.push(r.map(I).join(", "));else {var e=r.value;t.push(e.map(or).join(", "));}return t.push(")"),t.filter(_).join("")}function Dr(r){return function(r){if(Array.isArray(r))return Fr(r)}(r)||function(r){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(r))return Array.from(r)}(r)||$r(r)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function kr(r,t){var e;if("undefined"==typeof Symbol||null==r[Symbol.iterator]){if(Array.isArray(r)||(e=$r(r))||t&&r&&"number"==typeof r.length){e&&(r=e);var n=0,u=function(){};return {s:u,n:function(){return n>=r.length?{done:!0}:{done:!1,value:r[n++]}},e:function(r){throw r},f:u}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var s,o=!0,a=!1;return {s:function(){e=r[Symbol.iterator]();},n:function(){var r=e.next();return o=r.done,r},e:function(r){a=!0,s=r;},f:function(){try{o||null==e.return||e.return();}finally{if(a)throw s}}}}function $r(r,t){if(r){if("string"==typeof r)return Fr(r,t);var e=Object.prototype.toString.call(r).slice(8,-1);return "Object"===e&&r.constructor&&(e=r.constructor.name),"Map"===e||"Set"===e?Array.from(r):"Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e)?Fr(r,t):void 0}}function Fr(r,t){(null==t||t>r.length)&&(t=r.length);for(var e=0,n=new Array(t);e<t;e++)n[e]=r[e];return n}function Pr(r){var t=r.type,e=r.keyword,n=r.name,u=[R(t),R(e)];switch(e){case"table":u.push(z(n));break;case"procedure":u.push(I(n));break;case"index":u.push(hr(n),"ON",Z(r.table),r.options&&r.options.map(_r).filter(_).join(" "));}return u.filter(_).join(" ")}function Hr(r){var t=r.type,e=r.keyword,n=r.tables,u=[t.toUpperCase(),R(e)];if("UNLOCK"===t.toUpperCase())return u.join(" ");var s,o=[],a=kr(n);try{var i=function(){var r=s.value,t=r.table,e=r.lock_type,n=[Z(t)];if(e){n.push(["prefix","type","suffix"].map((function(r){return R(e[r])})).filter(_).join(" "));}o.push(n.join(" "));};for(a.s();!(s=a.n()).done;)i();}catch(r){a.e(r);}finally{a.f();}return u.push.apply(u,[o.join(", ")].concat(Dr(function(r){var t=r.lock_mode,e=r.nowait,n=[];if(t){var u=t.mode;n.push(u.toUpperCase());}return e&&n.push(e.toUpperCase()),n}(r)))),u.filter(_).join(" ")}sr.var=function(r){var t=r.prefix,e=void 0===t?"@":t,n=r.name,u=r.members,s=r.keyword,o=[];s&&o.push(s);var a=u&&u.length>0?"".concat(n,".").concat(u.join(".")):n;return o.push("".concat(e||"").concat(a)),o.join(" ")},sr.expr_list=function(r){var t=ar(r.value);return r.parentheses?"(".concat(t.join(", "),")"):t},sr.select=function(r){var t="object"===ur(r._next)?jr(r):Q(r);return r.parentheses?"(".concat(t,")"):t},sr.unary_expr=function(r){var t="".concat(r.operator," ").concat(or(r.expr));return r.parentheses?"(".concat(t,")"):t};var Gr={alter:function(r){var t=r.type,e=r.table,n=r.expr,u=void 0===n?[]:n;return [R(t),"TABLE",z(e),u.map(or).join(", ")].filter(_).join(" ")},analyze:function(r){var t=r.type,e=r.table;return [R(t),Z(e)].join(" ")},attach:function(r){var t=r.type,e=r.database,n=r.expr,u=r.as,s=r.schema;return [R(t),R(e),or(n),R(u),I(s)].filter(_).join(" ")},create:function(r){var t=r.keyword,e="";switch(t.toLowerCase()){case"table":e=function(r){var t=r.type,e=r.keyword,n=r.table,u=r.like,s=r.as,o=r.temporary,a=r.if_not_exists,i=r.create_definitions,c=r.table_options,l=r.ignore_replace,f=r.query_expr,b=[R(t),R(o),R(e),R(a),z(n)];if(u){var v=u.type,d=z(u.table);return b.push(R(v),d),b.filter(_).join(" ")}return i&&b.push("(".concat(i.map(Rr).join(", "),")")),c&&b.push(c.map(J).join(" ")),b.push(R(l),R(s)),f&&b.push(jr(f)),b.filter(_).join(" ")}(r);break;case"trigger":e=function(r){var t=r.constraint,e=r.constraint_kw,n=r.deferrable,u=r.events,s=r.execute,o=r.for_each,a=r.from,i=r.location,c=r.keyword,l=r.type,f=r.table,b=r.when,v=[R(l),R(e),R(c),I(t),R(i)],d=D(u);return v.push(d,"ON",Z(f)),a&&v.push("FROM",Z(a)),v.push.apply(v,Ir($(n)).concat(Ir($(o)))),b&&v.push(R(b.type),or(b.cond)),v.push(R(s.keyword),B(s.expr)),v.filter(_).join(" ")}(r);break;case"extension":e=function(r){var t=r.extension,e=r.from,n=r.if_not_exists,u=r.keyword,s=r.schema,o=r.type,a=r.with,i=r.version;return [R(o),R(u),R(n),g(t),R(a),p("SCHEMA",g,s),p("VERSION",g,i),p("FROM",g,e)].filter(_).join(" ")}(r);break;case"index":e=function(r){var t=r.concurrently,e=r.filestream_on,n=r.keyword,u=r.include,s=r.index_columns,o=r.index_type,a=r.index_using,i=r.index,c=r.on,l=r.on_kw,f=r.table,b=r.tablespace,v=r.type,d=r.where,L=r.with,C=r.with_before_where,w=L&&"WITH (".concat(vr(L).join(", "),")"),E=u&&"".concat(R(u.keyword)," (").concat(u.columns.map((function(r){return I(r)})).join(", "),")"),h=[R(v),R(o),R(n),R(t),I(i),R(l),Z(f)].concat(Ir(fr(a)),["(".concat(P(s),")"),E,p("TABLESPACE",g,b)]);return C?h.push(w,p("WHERE",or,d)):h.push(p("WHERE",or,d),w),h.push(p("ON",or,c),p("FILESTREAM_ON",g,e)),h.filter(_).join(" ")}(r);break;case"sequence":e=function(r){var t=r.type,e=r.keyword,n=r.sequence,u=r.temporary,s=r.if_not_exists,o=r.create_definitions,a=[R(t),R(u),R(e),R(s),z(n)];return o&&a.push(o.map(Rr).join(" ")),a.filter(_).join(" ")}(r);break;case"database":e=function(r){var t=r.type,e=r.keyword,n=r.database,u=r.if_not_exists,s=r.create_definitions,o=[R(t),R(e),R(u),S(n)];return s&&o.push(s.map(J).join(" ")),o.filter(_).join(" ")}(r);break;default:throw new Error("unknown create resource ".concat(t))}return e},select:Q,delete:function(r){var t=["DELETE"],e=r.columns,n=r.from,u=r.table,s=r.where,o=r.orderby,a=r.limit,i=Sr(e,n);return t.push(i),Array.isArray(u)&&(1===u.length&&!0===u[0].addition||t.push(z(u))),t.push(p("FROM",z,n)),t.push(p("WHERE",or,s)),t.push(ir(o,"order by")),t.push(K(a)),t.filter(_).join(" ")},update:function(r){var t=r.table,e=r.set,n=r.where,u=r.orderby,s=r.limit,o=r.returning;return ["UPDATE",z(t),p("SET",xr,e),p("WHERE",or,n),ir(u,"order by"),K(s),k(o)].filter(_).join(" ")},insert:function(r){var t=r.table,e=r.prefix,n=void 0===e?"into":e,u=r.columns,s=r.values,o=r.where,a=r.on_duplicate_update,i=r.partition,c=r.returning,l=r.set,f=a||{},b=f.keyword,v=f.set,d=["INSERT",R(n),z(t),Mr(i)];return Array.isArray(u)&&d.push("(".concat(u.map(I).join(", "),")")),d.push(p(Array.isArray(s)?"VALUES":"",Ur,s)),d.push(p("SET",xr,l)),d.push(p("WHERE",or,o)),d.push(k(c)),d.push(p(b,xr,v)),d.filter(_).join(" ")},drop:Pr,truncate:Pr,declare:function(r){var t=r.type,e=r.declare,n=[R(t)],u=e.map((function(r){var t=r.at,e=r.name,n=r.as,u=r.prefix,s=r.definition,o=r.keyword,a=["".concat(t).concat(e),R(n)];switch(o){case"variable":a.push(Ar(u)),s&&a.push("=",or(s));break;case"cursor":a.push(R(u));break;case"table":a.push(R(u),"(".concat(s.map(Rr).join(", "),")"));}return a.filter(_).join(" ")})).join(", ");return n.push(u),n.join(" ")},use:function(r){var t=r.type,e=r.db,n=R(t),u=I(e);return "".concat(n," ").concat(u)},rename:function(r){var t=r.type,e=r.table,n=[],u="".concat(t&&t.toUpperCase()," TABLE");if(e){var s,o=kr(e);try{for(o.s();!(s=o.n()).done;){var a=s.value.map(Z);n.push(a.join(" TO "));}}catch(r){o.e(r);}finally{o.f();}}return "".concat(u," ").concat(n.join(", "))},call:function(r){var t=or(r.expr);return "".concat("CALL"," ").concat(t)},desc:function(r){var t=r.type,e=r.table,n=R(t);return "".concat(n," ").concat(I(e))},set:function(r){var t=or(r.expr);return "".concat("SET"," ").concat(t)},lock:Hr,unlock:Hr,show:rr};function jr(r){for(var t=Gr[r.type],e=[t(r)],n=r,u=n._orderby,s=n._limit;r._next;){var o=(r.union||"union").toUpperCase();e.push(o,t(r._next)),r=r._next;}return e.push(ir(u,"order by"),K(s)),e.filter(_).join(" ")}var Yr=["analyze","attach","select","delete","update","insert","drop","rename","truncate","call","desc","use","alter","set","create","lock","unlock","bigquery","declare","show"];function Br(r){var t=r&&r.ast?r.ast:r;if(!Yr.includes(t.type))throw new Error("".concat(t.type," statements not supported at the moment"))}function Xr(r){return Array.isArray(r)?(r.forEach(Br),function(r){for(var t=[],e=0,n=r.length;e<n;++e){var u=r[e]&&r[e].ast;u||(u=r[e]),t.push(jr(u));}return t.join(" ; ")}(r)):(Br(r),"bigquery"===r.type?(e=(t=r).with,n=t.parentheses,u=t.select,s=t.orderby,o=t.limit,(a=[q(e),n&&"(",jr(u),n&&")"]).push(ir(s,"order by"),K(o)),a.filter((function(r){return r})).join(" ")):jr(r));var t,e,n,u,s,o,a;}function Wr(r,t){var e;if("undefined"==typeof Symbol||null==r[Symbol.iterator]){if(Array.isArray(r)||(e=function(r,t){if(!r)return;if("string"==typeof r)return Vr(r,t);var e=Object.prototype.toString.call(r).slice(8,-1);"Object"===e&&r.constructor&&(e=r.constructor.name);if("Map"===e||"Set"===e)return Array.from(r);if("Arguments"===e||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(e))return Vr(r,t)}(r))||t&&r&&"number"==typeof r.length){e&&(r=e);var n=0,u=function(){};return {s:u,n:function(){return n>=r.length?{done:!0}:{done:!1,value:r[n++]}},e:function(r){throw r},f:u}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var s,o=!0,a=!1;return {s:function(){e=r[Symbol.iterator]();},n:function(){var r=e.next();return o=r.done,r},e:function(r){a=!0,s=r;},f:function(){try{o||null==e.return||e.return();}finally{if(a)throw s}}}}function Vr(r,t){(null==t||t>r.length)&&(t=r.length);for(var e=0,n=new Array(t);e<t;e++)n[e]=r[e];return n}function Kr(r,t){for(var e=0;e<t.length;e++){var n=t[e];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(r,n.key,n);}}var qr=function(){function r(){!function(r,t){if(!(r instanceof t))throw new TypeError("Cannot call a class as a function")}(this,r);}var t,e;return t=r,(e=[{key:"astify",value:function(r){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:L,e=this.parse(r,t);return e&&e.ast}},{key:"sqlify",value:function(r){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:L;return T(t),Xr(r)}},{key:"parse",value:function(r){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:L,e=t.database,n=void 0===e?"mysql":e;T(t);var u=n.toLowerCase();if(v[u])return v[u](r.trim());throw new Error("".concat(n," is not supported currently"))}},{key:"whiteListCheck",value:function(r,t){var e=arguments.length>2&&void 0!==arguments[2]?arguments[2]:L;if(t&&0!==t.length){var n=e.type,u=void 0===n?"table":n;if(!this["".concat(u,"List")]||"function"!=typeof this["".concat(u,"List")])throw new Error("".concat(u," is not valid check mode"));var s,o=this["".concat(u,"List")].bind(this),a=o(r,e),i=!0,c="",l=Wr(a);try{for(l.s();!(s=l.n()).done;){var f,b=s.value,v=!1,d=Wr(t);try{for(d.s();!(f=d.n()).done;){var C=f.value,p=new RegExp(C,"i");if(p.test(b)){v=!0;break}}}catch(r){d.e(r);}finally{d.f();}if(!v){c=b,i=!1;break}}}catch(r){l.e(r);}finally{l.f();}if(!i)throw new Error("authority = '".concat(c,"' is required in ").concat(u," whiteList to execute SQL = '").concat(r,"'"))}}},{key:"tableList",value:function(r,t){var e=this.parse(r,t);return e&&e.tableList}},{key:"columnList",value:function(r,t){var e=this.parse(r,t);return e&&e.columnList}}])&&Kr(t.prototype,e),r}();commonjsGlobal&&commonjsGlobal.window&&(commonjsGlobal.window.NodeSQLParser={Parser:qr,util:n});}]));

    });

    var mysql = createCommonjsModule(function (module, exports) {
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.MySQLParser = void 0;

    class MySQLParser {
        constructor() {
            this.mysqlAstParser = new nodeSqlParser.Parser();
        }
        parse(sql) {
            const ast = this.mysqlAstParser.astify(sql, {
                database: "mysql",
            });
            const tables = [];
            for (const node of ast) {
                switch (node === null || node === void 0 ? void 0 : node.type) {
                    case "create":
                        switch (node === null || node === void 0 ? void 0 : node.keyword) {
                            case "table":
                                tables.push(this.parseTable(node));
                                break;
                        }
                        break;
                }
            }
            return tables;
        }
        // 테이블 구성 분석
        parseTable(node) {
            var _a, _b, _c, _d, _e, _f, _g, _h, _j;
            const table = {
                tableName: (_b = (_a = node === null || node === void 0 ? void 0 : node.table) === null || _a === void 0 ? void 0 : _a[0]) === null || _b === void 0 ? void 0 : _b.table,
                columns: [],
            };
            for (const nodeOfTable of node.create_definitions) {
                switch (nodeOfTable.resource) {
                    case "column":
                        const columnName = (_c = nodeOfTable === null || nodeOfTable === void 0 ? void 0 : nodeOfTable.column) === null || _c === void 0 ? void 0 : _c.column;
                        const dbType = nodeOfTable === null || nodeOfTable === void 0 ? void 0 : nodeOfTable.definition.dataType;
                        const isAutoIncrement = nodeOfTable.auto_increment === "auto_increment";
                        const isNotNull = ((_d = nodeOfTable.nullable) === null || _d === void 0 ? void 0 : _d.type) === "not null";
                        const isPrimaryKey = false; // ???
                        const defaultValue = (_g = (_f = (_e = nodeOfTable.default_val) === null || _e === void 0 ? void 0 : _e.value) === null || _f === void 0 ? void 0 : _f.value) !== null && _g !== void 0 ? _g : null;
                        const comment = (_j = (_h = nodeOfTable.comment) === null || _h === void 0 ? void 0 : _h.value) === null || _j === void 0 ? void 0 : _j.value;
                        const column = {
                            name: columnName,
                            dbType,
                            tsType: this.convertDbTypeToTsType(dbType),
                            isNotNull,
                            isPrimaryKey,
                            default: defaultValue,
                            isAutoIncrement,
                            comment,
                        };
                        table.columns.push(column);
                        break;
                    case "constraint":
                        switch (nodeOfTable.constraint_type) {
                            case "primary key":
                                table.columns.forEach((column) => {
                                    var _a;
                                    if ((_a = nodeOfTable === null || nodeOfTable === void 0 ? void 0 : nodeOfTable.definition) === null || _a === void 0 ? void 0 : _a.includes(column.name)) {
                                        column.isPrimaryKey = true;
                                    }
                                });
                                break;
                        }
                        break;
                }
            }
            return table;
        }
        // 데이터베이스의 컬럼타입을 타입스크립트 타입으로 변환
        convertDbTypeToTsType(typename) {
            if ([
                "tinyint",
                "smallint",
                "mediumint",
                "int",
                "bigint",
                "decimal",
                "float",
                "double",
            ].includes(typename.toLocaleLowerCase())) {
                return "number";
            }
            else if (["bool", "boolean"].includes(typename.toLocaleLowerCase())) {
                return "boolean";
            }
            else if ([
                "char",
                "varchar",
                "tinytext",
                "text",
                "mediumtext",
                "longtext",
            ].includes(typename.toLocaleLowerCase())) {
                return "string";
            }
            else if (["date", "time", "datetime", "timestamp", "year"].includes(typename.toLocaleLowerCase())) {
                return "Date";
            }
            else {
                return "string";
            }
        }
    }
    exports.MySQLParser = MySQLParser;

    });

    var typeorm = createCommonjsModule(function (module, exports) {
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.TypeOrmEmitter = void 0;


    const importTemplate = `
import {Entity, PrimaryGeneratedColumn, Column, Generated} from "typeorm";
`;
    class TypeOrmEmitter {
        // 컬럼 필드 코드 생성
        generateColumn(column) {
            var _a, _b, _c;
            const columnFieldName = name.convertNameCaseByOption(this.option.outputFieldNameCase, column.name);
            let defaultValue = column.default
                ? `\n${tab.TAB}${tab.TAB}default: "${(_a = column.default) === null || _a === void 0 ? void 0 : _a.replace('"', '\\"')}",`
                : "";
            let comment = column.default
                ? `\n${tab.TAB}${tab.TAB}comment: "${(_c = (_b = column.comment) === null || _b === void 0 ? void 0 : _b.replace('"', '\\"')) !== null && _c !== void 0 ? _c : ""}",`
                : "";
            let nullable = column.default
                ? `\n${tab.TAB}${tab.TAB}nullable: ${!column.isNotNull},`
                : "";
            let columnDecorator = "Column";
            if (column.isPrimaryKey && column.isAutoIncrement) {
                columnDecorator = "PrimaryGeneratedColumn";
                defaultValue = "";
                nullable = "";
            }
            else if (column.isPrimaryKey) {
                columnDecorator = "PrimaryColumn";
                nullable = "";
            }
            else if (column.isAutoIncrement) {
                columnDecorator = "Generated";
                defaultValue = "";
            }
            return `    @${columnDecorator}({
        name: '${column.name}',
        type: '${column.dbType.toLowerCase()}',${nullable}${defaultValue}${comment}
    })
    ${columnFieldName}: ${column.tsType};`;
        }
        // 테이블 클래스 코드 생성
        generateTableCode(table) {
            const tableClassName = name.convertNameCaseByOption(this.option.outputClassNameCase, table.tableName);
            return `@Entity({
    name: '${table.tableName}',
    // database: '',
    // schema : true,
    synchronize : false,
})
export class ${tableClassName} {
${table.columns.map((column) => this.generateColumn(column)).join("\n\n")}
}`;
        }
        emit(tables, option = {
            sourceSplit: true,
            outputClassNameCase: "PASCAL",
            outputFieldNameCase: "CAMEL",
        }) {
            this.option = option;
            if (option === null || option === void 0 ? void 0 : option.sourceSplit) {
                return tables.map((table) => ({
                    sourceName: table.tableName,
                    source: importTemplate + "\n" + this.generateTableCode(table),
                }));
            }
            else {
                return [
                    {
                        sourceName: "all",
                        source: importTemplate +
                            "\n" +
                            tables
                                .map((table) => this.generateTableCode(table))
                                .join("\n\n"),
                    },
                ];
            }
        }
    }
    exports.TypeOrmEmitter = TypeOrmEmitter;

    });

    var lib = createCommonjsModule(function (module, exports) {
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.PostgreSQLParser = exports.MySQLParser = exports.SequelizeTypescriptEmitter = exports.TypeOrmEmitter = void 0;

    Object.defineProperty(exports, "PostgreSQLParser", { enumerable: true, get: function () { return postgres.PostgreSQLParser; } });

    Object.defineProperty(exports, "SequelizeTypescriptEmitter", { enumerable: true, get: function () { return sequelizeTypescript.SequelizeTypescriptEmitter; } });

    Object.defineProperty(exports, "MySQLParser", { enumerable: true, get: function () { return mysql.MySQLParser; } });

    Object.defineProperty(exports, "TypeOrmEmitter", { enumerable: true, get: function () { return typeorm.TypeOrmEmitter; } });

    });

    function convert(query, database, orm, fieldname) {
        let parser = null;
        let emitter = null;
        switch (database) {
            case "postgresql":
            case "postgres":
            case "postgre":
            case "pg":
                parser = new lib.PostgreSQLParser();
                break;
            case "mysql":
            case "my":
                parser = new lib.MySQLParser();
                break;
            default:
                console.error("!! 지원되지 않는 데이터베이스입니다.");
                return;
        }
        switch (orm) {
            case "sequelize-typescript":
            case "st":
                emitter = new lib.SequelizeTypescriptEmitter();
                break;
            case "sequelize":
            case "sq":
                console.error("!! 아직 지원되지 않는 ORM입니다.");
                break;
            case "typeorm":
            case "ty":
                emitter = new lib.TypeOrmEmitter();
                break;
            default:
                console.error("!! 지원되지 않는 ORM입니다.");
                return;
        }
        const emitOption = { sourceSplit: true, outputFieldNameCase: fieldname };
        console.log(emitOption);
        const tables = parser.parse(query + ";");
        const sources = emitter.emit(tables, emitOption);
        return sources[0].source;
    }

    const database = [
        { view: "DB 선택", value: null },
        { view: "MySQL", value: "mysql" },
        { view: "PostgreSQL", value: "pg" },
    ];

    const orm = [
        { view: "ORM 선택", value: null },
        { view: "Sequelize-Typescript", value: "st" },
        { view: "TypeORM", value: "ty" },
    ];

    const fieldname = [
        { view: "Camel Case", value: "CAMEL", selected: true },
        { view: "Snake Case", value: "SNAKE", selected: false },
    ];

    const app = new App({
        target: document.body,
        props: {
            name: "world",
            database,
            orm,
            fieldname,
            convert,
        },
    });

    return app;

}());
//# sourceMappingURL=bundle.js.map
